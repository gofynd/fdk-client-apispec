{
  "info": {
    "title": "Fynd Platform's Application Side APIs v0.0.1111",
    "version": "0.0.1111-3.beta.1",
    "description": "Fynd Platform's Application Side APIs"
  },
  "openapi": "3.0.2",
  "paths": {
    "/service/application/cart/v1.0/detail": {
      "get": {
        "summary": "getCart | Retrieve cart details.",
        "description": "Get details of a cart linked to a specific customer using a unique cart ID. It offers an overview of the items, quantities, prices, and other relevant information associated with the cart.",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "The unique identifier of the cart.",
            "examples": {
              "200_OKAY": {
                "value": "65c06fe589db42581e4be72e"
              }
            }
          },
          {
            "in": "query",
            "name": "i",
            "schema": {
              "type": "boolean"
            },
            "description": "Select `true` to retrieve all the items added in the cart.",
            "examples": {
              "200_OKAY": {
                "value": "true"
              }
            }
          },
          {
            "in": "query",
            "name": "b",
            "schema": {
              "type": "boolean"
            },
            "description": "Select `true` to retrieve the price breakup of cart items.",
            "examples": {
              "200_OKAY": {
                "value": "true"
              }
            }
          },
          {
            "in": "query",
            "name": "c",
            "schema": {
              "type": "boolean"
            },
            "description": "Select `true` to retrieve the cod charges in breakup of cart items."
          },
          {
            "in": "query",
            "name": "assign_card_id",
            "schema": {
              "type": "integer"
            },
            "description": "Token of user's debit or credit card."
          },
          {
            "in": "query",
            "name": "area_code",
            "schema": {
              "type": "string",
              "x-not-enum": true
            },
            "description": "Customer servicable area_code.",
            "examples": {
              "200_OKAY": {
                "value": "400093"
              }
            }
          },
          {
            "in": "query",
            "name": "buy_now",
            "schema": {
              "type": "boolean"
            },
            "description": "Select `true` to set/initialize buy now cart."
          },
          {
            "in": "query",
            "name": "cart_type",
            "schema": {
              "type": "string",
              "enum": [
                "universal"
              ]
            },
            "description": "The type of cart"
          },
          {
            "in": "query",
            "name": "order_type",
            "schema": {
              "type": "string",
              "enum": [
                "HomeDelivery",
                "PickAtStore"
              ]
            },
            "description": "The order type of shipment HomeDelivery - If the customer wants the order home-delivered PickAtStore - If the customer wants the handover of an order at the store itself."
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a Cart object. Check the example shown below or refer `CartDetailResult` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartDetailResult"
                },
                "examples": {
                  "200_OKAY": {
                    "value": {
                      "breakup_values": {
                        "display": [
                          {
                            "display": "MRP Total",
                            "key": "mrp_total",
                            "value": 17486,
                            "currency_code": "INR"
                          },
                          {
                            "display": "Discount",
                            "key": "discount",
                            "value": -3540,
                            "currency_code": "INR"
                          },
                          {
                            "display": "Subtotal",
                            "key": "subtotal",
                            "value": 13946,
                            "currency_code": "INR"
                          },
                          {
                            "display": "Total",
                            "key": "total",
                            "value": 13946,
                            "currency_code": "INR"
                          }
                        ],
                        "raw": {
                          "cod_charge": 0,
                          "convenience_fee": 0,
                          "coupon": 0,
                          "delivery_charge": 0,
                          "discount": -3540,
                          "fynd_cash": 0,
                          "gift_card": 0,
                          "gst_charges": 1529.96,
                          "mrp_total": 17486,
                          "mop_total": 0,
                          "total_charge": 0,
                          "subtotal": 13946,
                          "sub_total": 13946,
                          "total": 13946,
                          "vog": 12416.04,
                          "you_saved": 0,
                          "promotion": 0
                        },
                        "loyalty_points": {
                          "total": 0,
                          "applicable": 0,
                          "is_applied": false,
                          "message": "Reward point not applicable with Coupon",
                          "description": "Your cashback, referrals, and refund amount get credited to Fynd Cash which can be redeemed while placing an order."
                        },
                        "coupon": {
                          "type": "cash",
                          "coupon_type": "cart",
                          "sub_title": "",
                          "title": "",
                          "minimum_cart_value": 0,
                          "coupon_value": 0,
                          "description": "",
                          "code": "",
                          "uid": null,
                          "value": 0,
                          "is_applied": false,
                          "message": "Sorry! Invalid Coupon"
                        }
                      },
                      "applied_promo_details": [
                        {
                          "offer_text": "HK-split-1",
                          "offer_label": "HK-split-1",
                          "discount_rules": [
                            {
                              "raw_offer": {
                                "discount_type": "percentage",
                                "offer": {
                                  "max_offer_quantity": 1,
                                  "discount_percentage": 10
                                },
                                "item_criteria": {
                                  "buy_rules": [
                                    "rule#1"
                                  ]
                                },
                                "buy_condition": "rule#1"
                              },
                              "item_criteria": {
                                "buy_rules": [
                                  "rule#1"
                                ]
                              },
                              "offer": {
                                "max_offer_quantity": 1,
                                "discount_percentage": 10
                              },
                              "matched_buy_rules": [
                                "rule#1"
                              ]
                            }
                          ],
                          "ownership": {
                            "payable_category": "seller",
                            "payable_by": ""
                          },
                          "return_allowed": true,
                          "promotion_name": "HK-split-1",
                          "meta": {},
                          "cancellation_allowed": true,
                          "offer_description": "<p>HK-split-1</p>",
                          "buy_rules": [
                            {
                              "item_criteria": {
                                "buy_rules": [
                                  "rule#1"
                                ]
                              },
                              "cart_conditions": {
                                "cart_quantity": {
                                  "greater_than_equals": 1
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "price_adjustment_applied": [
                        {
                          "remove_articles": true,
                          "adjusted_value": {
                            "value": 10,
                            "currency_code": "INR",
                            "currency_symbol": "â‚¹"
                          },
                          "article_level_distribution": true,
                          "auto_remove": true,
                          "applied_articles_ids": [
                            "612_9_SE61201_19100302_10",
                            "46_235_TM62_M11029ONDSXNS_S"
                          ],
                          "message": "Processing Fee",
                          "_type": "charge",
                          "meta": {},
                          "restrictions": {
                            "post_order": {
                              "cancellation_order": true,
                              "return_order": true
                            }
                          },
                          "_id": "659e3b6b33848a683efebf2c"
                        }
                      ],
                      "items": [
                        {
                          "key": "751083_10",
                          "promotions_applied": [
                            {
                              "offer_text": "HK-split-1",
                              "offer_label": "HK-split-1",
                              "discount_rules": [
                                {
                                  "raw_offer": {
                                    "discount_type": "percentage",
                                    "offer": {
                                      "max_offer_quantity": 1,
                                      "discount_percentage": 10
                                    },
                                    "item_criteria": {
                                      "buy_rules": [
                                        "rule#1"
                                      ]
                                    },
                                    "buy_condition": "rule#1"
                                  },
                                  "item_criteria": {
                                    "buy_rules": [
                                      "rule#1"
                                    ]
                                  },
                                  "offer": {
                                    "max_offer_quantity": 1,
                                    "discount_percentage": 10
                                  },
                                  "matched_buy_rules": [
                                    "rule#1"
                                  ]
                                }
                              ],
                              "ownership": {
                                "payable_category": "seller",
                                "payable_by": ""
                              },
                              "return_allowed": true,
                              "promotion_name": "HK-split-1",
                              "meta": {},
                              "cancellation_allowed": true,
                              "offer_description": "<p>HK-split-1</p>",
                              "buy_rules": [
                                {
                                  "item_criteria": {
                                    "buy_rules": [
                                      "rule#1"
                                    ]
                                  },
                                  "cart_conditions": {
                                    "cart_quantity": {
                                      "greater_than_equals": 1
                                    }
                                  }
                                }
                              ]
                            }
                          ],
                          "price_adjustment_applied": [
                            {
                              "adjusted_value": {
                                "value": 5,
                                "currency_code": "INR",
                                "currency_symbol": "â‚¹"
                              },
                              "article_level_distribution": true,
                              "article_id": "612_9_SE61201_19100302_10",
                              "applied_quantity": 2,
                              "meta": {}
                            }
                          ],
                          "identifiers": {
                            "identifier": "5mPyy88URXuh3Lo35uaTg"
                          },
                          "parent_item_identifiers": {
                            "identifier": "ZASFF",
                            "parent_item_id": 7501190,
                            "parent_item_size": "OS"
                          },
                          "article": {
                            "type": "article",
                            "uid": "612_9_SE61201_19100302_10",
                            "size": "10",
                            "seller": {
                              "uid": 612,
                              "name": "SSR ENTERPRISE"
                            },
                            "store": {
                              "uid": 4431,
                              "name": "Motilal Nagar 1, Goregaon"
                            },
                            "quantity": 4,
                            "price": {
                              "base": {
                                "marked": 3999,
                                "effective": 2399,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "marked": 3999,
                                "effective": 2399,
                                "currency_code": "INR"
                              }
                            }
                          },
                          "price": {
                            "base": {
                              "add_on": 4798,
                              "marked": 7998,
                              "effective": 4798,
                              "selling": 4798,
                              "currency_code": "INR"
                            },
                            "converted": {
                              "add_on": 4798,
                              "marked": 7998,
                              "effective": 4798,
                              "selling": 4798,
                              "currency_code": "INR"
                            }
                          },
                          "availability": {
                            "sizes": [
                              "10"
                            ],
                            "other_store_quantity": 2,
                            "out_of_stock": false,
                            "deliverable": true,
                            "is_valid": true
                          },
                          "product": {
                            "type": "product",
                            "uid": 751083,
                            "name": "Carson 2",
                            "slug": "puma-carson-2-751083-6ad98d",
                            "brand": {
                              "uid": 9,
                              "name": "Puma"
                            },
                            "categories": [
                              {
                                "uid": 165,
                                "name": "Outdoor Sports Shoes"
                              }
                            ],
                            "images": [
                              {
                                "aspect_ratio": "16:25",
                                "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/9_19100302/1_1542807042296.jpg",
                                "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/9_19100302/1_1542807042296.jpg"
                              }
                            ],
                            "action": {
                              "type": "product",
                              "url": "https://api.addsale.com/platform/content/v1/products/puma-carson-2-751083-6ad98d/",
                              "query": {
                                "product_slug": [
                                  "puma-carson-2-751083-6ad98d"
                                ]
                              }
                            }
                          },
                          "coupon_message": "",
                          "quantity": 2,
                          "message": "",
                          "bulk_offer": {},
                          "discount": "41% OFF"
                        },
                        {
                          "key": "246228_S",
                          "identifiers": {
                            "identifier": "5mPyy88URXuh3Lo35uaTg"
                          },
                          "price_adjustment_applied": [
                            {
                              "adjusted_value": {
                                "value": 5,
                                "currency_code": "INR",
                                "currency_symbol": "â‚¹"
                              },
                              "article_level_distribution": true,
                              "article_id": "46_235_TM62_M11029ONDSXNS_S",
                              "applied_quantity": 1,
                              "meta": {}
                            }
                          ],
                          "article": {
                            "type": "article",
                            "uid": "46_235_TM62_M11029ONDSXNS_S",
                            "size": "S",
                            "seller": {
                              "uid": 46,
                              "name": "RELIANCE BRANDS LIMITED"
                            },
                            "store": {
                              "uid": 4550,
                              "name": "VR Mall"
                            },
                            "quantity": 1,
                            "price": {
                              "base": {
                                "marked": 4490,
                                "effective": 4490,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "marked": 4490,
                                "effective": 4490,
                                "currency_code": "INR"
                              }
                            }
                          },
                          "price": {
                            "base": {
                              "add_on": 4490,
                              "marked": 4490,
                              "effective": 4490,
                              "selling": 4490,
                              "currency_code": "INR"
                            },
                            "converted": {
                              "add_on": 4490,
                              "marked": 4490,
                              "effective": 4490,
                              "selling": 4490,
                              "currency_code": "INR"
                            }
                          },
                          "availability": {
                            "sizes": [
                              "L",
                              "M",
                              "S",
                              "XL",
                              "XXL"
                            ],
                            "other_store_quantity": 0,
                            "out_of_stock": false,
                            "deliverable": true,
                            "is_valid": true
                          },
                          "product": {
                            "type": "product",
                            "uid": 246228,
                            "name": "Blue Solid T-Shirt",
                            "slug": "superdry-blue-solid-t-shirt-2",
                            "brand": {
                              "uid": 235,
                              "name": "Superdry"
                            },
                            "categories": [
                              {
                                "uid": 192,
                                "name": "T-Shirts"
                              }
                            ],
                            "images": [
                              {
                                "aspect_ratio": "16:25",
                                "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/235_M11029ONDSXNS/1.jpg",
                                "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/235_M11029ONDSXNS/1.jpg"
                              }
                            ],
                            "action": {
                              "type": "product",
                              "url": "https://api.addsale.com/platform/content/v1/products/superdry-blue-solid-t-shirt-2/",
                              "query": {
                                "product_slug": [
                                  "superdry-blue-solid-t-shirt-2"
                                ]
                              }
                            }
                          },
                          "coupon_message": "",
                          "quantity": 1,
                          "message": "",
                          "bulk_offer": {},
                          "discount": ""
                        },
                        {
                          "key": "443175_S",
                          "identifiers": {
                            "identifier": "5mPyy88URXuh3Lo35uaTg"
                          },
                          "article": {
                            "type": "article",
                            "uid": "162_207_1271_LJ03LBLUDN88_S",
                            "size": "S",
                            "seller": {
                              "uid": 162,
                              "name": "GO FASHION INDIA PRIVATE LIMITED"
                            },
                            "store": {
                              "uid": 5784,
                              "name": "Vega City mall"
                            },
                            "quantity": 3,
                            "price": {
                              "base": {
                                "marked": 1599,
                                "effective": 1599,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "marked": 1599,
                                "effective": 1599,
                                "currency_code": "INR"
                              }
                            }
                          },
                          "price": {
                            "base": {
                              "add_on": 1599,
                              "marked": 1599,
                              "effective": 1599,
                              "selling": 1599,
                              "currency_code": "INR"
                            },
                            "converted": {
                              "add_on": 1599,
                              "marked": 1599,
                              "effective": 1599,
                              "selling": 1599,
                              "currency_code": "INR"
                            }
                          },
                          "availability": {
                            "sizes": [
                              "XL",
                              "M",
                              "L",
                              "S"
                            ],
                            "other_store_quantity": 8,
                            "out_of_stock": false,
                            "deliverable": true,
                            "is_valid": true
                          },
                          "product": {
                            "type": "product",
                            "uid": 443175,
                            "name": "Light Blue Denim Jeggings",
                            "slug": "go-colors-light-blue-denim-jeggings-443175-3c688c",
                            "brand": {
                              "uid": 207,
                              "name": "Go Colors"
                            },
                            "categories": [
                              {
                                "uid": 267,
                                "name": "Jeggings"
                              }
                            ],
                            "images": [
                              {
                                "aspect_ratio": "16:25",
                                "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/207_LJ03LBLUDN88/1_1512382513548.jpg",
                                "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/207_LJ03LBLUDN88/1_1512382513548.jpg"
                              }
                            ],
                            "action": {
                              "type": "product",
                              "url": "https://api.addsale.com/platform/content/v1/products/go-colors-light-blue-denim-jeggings-443175-3c688c/",
                              "query": {
                                "product_slug": [
                                  "go-colors-light-blue-denim-jeggings-443175-3c688c"
                                ]
                              }
                            }
                          },
                          "coupon_message": "",
                          "quantity": 1,
                          "message": "",
                          "bulk_offer": {},
                          "discount": ""
                        },
                        {
                          "key": "778937_OS",
                          "identifiers": {
                            "identifier": "5mPyy88URXuh3Lo35uaTg"
                          },
                          "article": {
                            "type": "article",
                            "uid": "686_963_IC68601_PWUPC01977_OS",
                            "size": "OS",
                            "seller": {
                              "uid": 686,
                              "name": "INDUS CORPORATION"
                            },
                            "store": {
                              "uid": 5059,
                              "name": "Vidyaranyapura Main Road"
                            },
                            "quantity": 3,
                            "price": {
                              "base": {
                                "marked": 3399,
                                "effective": 3059,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "marked": 3399,
                                "effective": 3059,
                                "currency_code": "INR"
                              }
                            }
                          },
                          "price": {
                            "base": {
                              "add_on": 3059,
                              "marked": 3399,
                              "effective": 3059,
                              "selling": 3059,
                              "currency_code": "INR"
                            },
                            "converted": {
                              "add_on": 3059,
                              "marked": 3399,
                              "effective": 3059,
                              "selling": 3059,
                              "currency_code": "INR"
                            }
                          },
                          "availability": {
                            "sizes": [
                              "OS"
                            ],
                            "other_store_quantity": 2,
                            "out_of_stock": false,
                            "deliverable": true,
                            "is_valid": true
                          },
                          "product": {
                            "type": "product",
                            "uid": 778937,
                            "name": "Colourful Carnival Bouncer",
                            "slug": "fisher-price-colourful-carnival-bouncer-778937-fafa1f",
                            "brand": {
                              "uid": 963,
                              "name": "Fisher-Price"
                            },
                            "categories": [
                              {
                                "uid": 576,
                                "name": "Cradles"
                              }
                            ],
                            "images": [
                              {
                                "aspect_ratio": "16:25",
                                "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/963_PWUPC01977/1_1545308400588.jpg",
                                "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/963_PWUPC01977/1_1545308400588.jpg"
                              }
                            ],
                            "action": {
                              "type": "product",
                              "url": "https://api.addsale.com/platform/content/v1/products/fisher-price-colourful-carnival-bouncer-778937-fafa1f/",
                              "query": {
                                "product_slug": [
                                  "fisher-price-colourful-carnival-bouncer-778937-fafa1f"
                                ]
                              }
                            }
                          },
                          "coupon_message": "",
                          "quantity": 1,
                          "message": "",
                          "bulk_offer": {},
                          "discount": "11% OFF"
                        }
                      ],
                      "delivery_charge_info": "",
                      "coupon_text": "View all offers",
                      "buy_now": false,
                      "cart_id": 7927,
                      "uid": "7927",
                      "id": "65c06fe589db42581e4be72e",
                      "gstin": null,
                      "pan_no": null,
                      "message": "",
                      "checkout_mode": "self",
                      "last_modified": "2023-03-03T00:00:00.000Z",
                      "restrict_checkout": false,
                      "is_valid": true,
                      "custom_cart": {
                        "cart_name": "Universal",
                        "cart_type": "universal",
                        "id": "659e3b6b33848a683efebf2c",
                        "is_universal": true
                      },
                      "custom_cart_meta": {},
                      "pan_config": {},
                      "is_pan_received": false,
                      "payment_selection_lock": {
                        "default_options": "cod",
                        "payment_identifier": "cod",
                        "enabled": false
                      },
                      "notification": {},
                      "common_config": {
                        "delivery_charges_config": {
                          "enabled": true,
                          "charges": [
                            {
                              "threshold": 1499,
                              "charges": 99
                            }
                          ]
                        }
                      },
                      "coupon": {
                        "coupon_code": "",
                        "coupon_type": "cart",
                        "is_applied": false,
                        "is_valid": false,
                        "message": "Sorry! Invalid coupon",
                        "coupon_id": null,
                        "discount": 0,
                        "cashback_amount": 0,
                        "cashback_message_primary": "",
                        "cashback_message_secondary": "",
                        "coupon_title": "",
                        "coupon_subtitle": "",
                        "coupon_description": "",
                        "minimum_cart_value": 0,
                        "maximum_discount_value": 0,
                        "coupon_value": 0,
                        "medias": []
                      },
                      "delivery_promise": {},
                      "comment": "",
                      "currency": {
                        "code": "INR",
                        "symbol": "₹"
                      },
                      "success": true
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Cart"
        ]
      },
      "head": {
        "summary": "getCartLastModified | Get last modified timestamp of a cart",
        "description": "Retrieve the last modified timestamp of the cart using unique cart ID. It indicates the most recent update made to the cart's content or properties.",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "The unique identifier of the cart."
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Receives last modifed timestamp in the header.",
            "headers": {
              "Last-Modified": {
                "schema": {
                  "type": "string",
                  "format": "date",
                  "description": "Last-Modified Action on Cart"
                }
              }
            }
          }
        },
        "x-groups": [
          "Cart"
        ]
      },
      "post": {
        "summary": "addItems | Add items to a cart",
        "description": "Add product items to the customer's existing shopping cart. If there is no existing cart associated with the customer, it creates a new one and adds the items to it.",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "i",
            "schema": {
              "type": "boolean"
            },
            "description": "Select `true` to retrieve all the items added in the cart.",
            "examples": {
              "Product has been added to your cart": {
                "value": "true"
              },
              "Sorry, item is out of stock": {
                "value": "true"
              }
            }
          },
          {
            "in": "query",
            "name": "b",
            "schema": {
              "type": "boolean"
            },
            "description": "Select `true` to retrieve the price breakup of cart items.",
            "examples": {
              "200_OKAY": {
                "value": "true"
              }
            }
          },
          {
            "in": "query",
            "name": "area_code",
            "schema": {
              "type": "string",
              "x-not-enum": true
            },
            "description": "Customer servicable area_code.",
            "examples": {
              "Product has been added to your cart": {
                "value": "400093"
              },
              "Sorry, item is out of stock": {
                "value": "400093"
              }
            }
          },
          {
            "in": "query",
            "name": "buy_now",
            "schema": {
              "type": "boolean"
            },
            "description": "Select `true` to set/initialize buy now cart."
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "The unique identifier of the cart.",
            "examples": {
              "Product has been added to your cart": {
                "value": "65c06fe589db42581e4be72e"
              },
              "Sorry, item is out of stock": {
                "value": "65c06fe589db42581e4be72e"
              }
            }
          },
          {
            "in": "query",
            "name": "cart_type",
            "schema": {
              "type": "string",
              "enum": [
                "universal"
              ]
            },
            "description": "The type of cart"
          },
          {
            "in": "query",
            "name": "order_type",
            "schema": {
              "type": "string",
              "enum": [
                "HomeDelivery",
                "PickAtStore"
              ]
            },
            "description": "The order type of shipment HomeDelivery - If the customer wants the order home-delivered PickAtStore - If the customer wants the handover of an order at the store itself."
          }
        ],
        "requestBody": {
          "description": "Specify the item details as shown below. Refer `AddCartPayload` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCartPayload"
              },
              "examples": {
                "Product has been added to your cart": {
                  "value": {
                    "items": [
                      {
                        "item_id": 1077515,
                        "item_size": "OS",
                        "quantity": 1,
                        "article_assignment": {
                          "level": "multi-companies",
                          "strategy": "optimal"
                        },
                        "seller_id": 1,
                        "store_id": 2890,
                        "extra_meta": {}
                      }
                    ]
                  }
                },
                "Sorry, item is out of stock": {
                  "value": {
                    "items": [
                      {
                        "item_id": 1077515,
                        "item_size": "OS",
                        "quantity": 250,
                        "article_assignment": {
                          "level": "multi-companies",
                          "strategy": "optimal"
                        },
                        "seller_id": 1,
                        "store_id": 2890,
                        "extra_meta": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Returns a cart object as shown below. Refer `AddCartDetailResult` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddCartDetailResult"
                },
                "examples": {
                  "Product has been added to your cart": {
                    "value": {
                      "message": "Product has been added to your cart",
                      "success": true,
                      "cart": {
                        "breakup_values": {
                          "display": [
                            {
                              "display": "MRP Total",
                              "key": "mrp_total",
                              "value": 17486,
                              "currency_code": "INR",
                              "meta": {}
                            },
                            {
                              "display": "Discount",
                              "key": "discount",
                              "value": -3540,
                              "currency_code": "INR",
                              "meta": {}
                            },
                            {
                              "display": "Subtotal",
                              "key": "subtotal",
                              "value": 13946,
                              "currency_code": "INR",
                              "meta": {}
                            },
                            {
                              "display": "Total",
                              "key": "total",
                              "value": 13946,
                              "currency_code": "INR",
                              "meta": {}
                            }
                          ],
                          "raw": {
                            "cod_charge": 0,
                            "convenience_fee": 0,
                            "coupon": 0,
                            "delivery_charge": 0,
                            "discount": -3540,
                            "fynd_cash": 0,
                            "gift_card": 0,
                            "gst_charges": 1529.96,
                            "mrp_total": 17486,
                            "mop_total": 0,
                            "total_charge": 10,
                            "subtotal": 13946,
                            "sub_total": 13946,
                            "total": 13946,
                            "vog": 12416.04,
                            "you_saved": 0,
                            "promotion": 0
                          },
                          "loyalty_points": {
                            "total": 0,
                            "applicable": 0,
                            "is_applied": false,
                            "message": "Reward point not applicable with Coupon",
                            "description": "Your cashback, referrals, and refund amount get credited to Fynd Cash which can be redeemed while placing an order."
                          },
                          "coupon": {
                            "type": "cash",
                            "coupon_type": "cart",
                            "sub_title": "",
                            "title": "",
                            "minimum_cart_value": 0,
                            "coupon_value": 0,
                            "description": "",
                            "code": "",
                            "uid": null,
                            "value": 0,
                            "is_applied": false,
                            "message": "Sorry! Invalid Coupon"
                          }
                        },
                        "applied_promo_details": [
                          {
                            "offer_text": "HK-split-1",
                            "offer_label": "HK-split-1",
                            "discount_rules": [
                              {
                                "raw_offer": {
                                  "discount_type": "percentage",
                                  "offer": {
                                    "max_offer_quantity": 1,
                                    "discount_percentage": 10
                                  },
                                  "item_criteria": {
                                    "buy_rules": [
                                      "rule#1"
                                    ]
                                  },
                                  "buy_condition": "rule#1"
                                },
                                "item_criteria": {
                                  "buy_rules": [
                                    "rule#1"
                                  ]
                                },
                                "offer": {
                                  "max_offer_quantity": 1,
                                  "discount_percentage": 10
                                },
                                "matched_buy_rules": [
                                  "rule#1"
                                ]
                              }
                            ],
                            "ownership": {
                              "payable_category": "seller",
                              "payable_by": ""
                            },
                            "return_allowed": true,
                            "promotion_name": "HK-split-1",
                            "meta": {},
                            "cancellation_allowed": true,
                            "offer_description": "<p>HK-split-1</p>",
                            "buy_rules": [
                              {
                                "item_criteria": {
                                  "buy_rules": [
                                    "rule#1"
                                  ]
                                },
                                "cart_conditions": {
                                  "cart_quantity": {
                                    "greater_than_equals": 1
                                  }
                                }
                              }
                            ]
                          }
                        ],
                        "price_adjustment_applied": [
                          {
                            "remove_articles": true,
                            "adjusted_value": {
                              "value": 10,
                              "currency_code": "INR",
                              "currency_symbol": "â‚¹"
                            },
                            "article_level_distribution": true,
                            "auto_remove": true,
                            "applied_articles_ids": [
                              "612_9_SE61201_19100302_10",
                              "46_235_TM62_M11029ONDSXNS_S"
                            ],
                            "message": "Processing Fee",
                            "_type": "charge",
                            "meta": {},
                            "restrictions": {
                              "post_order": {
                                "cancellation_order": true,
                                "return_order": true
                              }
                            },
                            "_id": "659e3b6b33848a683efebf2c"
                          }
                        ],
                        "items": [
                          {
                            "key": "751083_10",
                            "promotions_applied": [
                              {
                                "offer_text": "HK-split-1",
                                "offer_label": "HK-split-1",
                                "discount_rules": [
                                  {
                                    "raw_offer": {
                                      "discount_type": "percentage",
                                      "offer": {
                                        "max_offer_quantity": 1,
                                        "discount_percentage": 10
                                      },
                                      "item_criteria": {
                                        "buy_rules": [
                                          "rule#1"
                                        ]
                                      },
                                      "buy_condition": "rule#1"
                                    },
                                    "item_criteria": {
                                      "buy_rules": [
                                        "rule#1"
                                      ]
                                    },
                                    "offer": {
                                      "max_offer_quantity": 1,
                                      "discount_percentage": 10
                                    },
                                    "matched_buy_rules": [
                                      "rule#1"
                                    ]
                                  }
                                ],
                                "ownership": {
                                  "payable_category": "seller",
                                  "payable_by": ""
                                },
                                "return_allowed": true,
                                "promotion_name": "HK-split-1",
                                "meta": {},
                                "cancellation_allowed": true,
                                "offer_description": "<p>HK-split-1</p>",
                                "buy_rules": [
                                  {
                                    "item_criteria": {
                                      "buy_rules": [
                                        "rule#1"
                                      ]
                                    },
                                    "cart_conditions": {
                                      "cart_quantity": {
                                        "greater_than_equals": 1
                                      }
                                    }
                                  }
                                ]
                              }
                            ],
                            "price_adjustment_applied": [
                              {
                                "adjusted_value": {
                                  "value": 5,
                                  "currency_code": "INR",
                                  "currency_symbol": "â‚¹"
                                },
                                "article_level_distribution": true,
                                "article_id": "612_9_SE61201_19100302_10",
                                "applied_quantity": 4,
                                "meta": {}
                              }
                            ],
                            "identifiers": {
                              "identifier": "5mPyy88URXuh3Lo35uaTg"
                            },
                            "parent_item_identifiers": {
                              "identifier": "ZASFF",
                              "parent_item_id": 7501190,
                              "parent_item_size": "OS"
                            },
                            "article": {
                              "type": "article",
                              "uid": "612_9_SE61201_19100302_10",
                              "size": "10",
                              "seller": {
                                "uid": 612,
                                "name": "SSR ENTERPRISE"
                              },
                              "store": {
                                "uid": 4431,
                                "name": "Motilal Nagar 1, Goregaon"
                              },
                              "quantity": 4,
                              "price": {
                                "base": {
                                  "marked": 3999,
                                  "effective": 2399,
                                  "currency_code": "INR"
                                },
                                "converted": {
                                  "marked": 3999,
                                  "effective": 2399,
                                  "currency_code": "INR"
                                }
                              }
                            },
                            "charges": [
                              {
                                "type": "convenience fee",
                                "name": "convenience fee",
                                "code": "convenience fee",
                                "amount": {
                                  "value": 10,
                                  "currency": "INR"
                                },
                                "meta": {
                                  "price_adjustment_id": "64c22d66fe278c0796bd8e4d",
                                  "article_level_distribution": true
                                }
                              }
                            ],
                            "price": {
                              "base": {
                                "add_on": 4798,
                                "marked": 7998,
                                "effective": 4798,
                                "selling": 4798,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "add_on": 4798,
                                "marked": 7998,
                                "effective": 4798,
                                "selling": 4798,
                                "currency_code": "INR"
                              }
                            },
                            "availability": {
                              "sizes": [
                                "10"
                              ],
                              "available_sizes": [
                                {
                                  "is_available": true,
                                  "display": "OS",
                                  "value": "OS"
                                }
                              ],
                              "other_store_quantity": 2,
                              "out_of_stock": false,
                              "deliverable": true,
                              "is_valid": true
                            },
                            "product": {
                              "type": "product",
                              "uid": 751083,
                              "name": "Carson 2",
                              "slug": "puma-carson-2-751083-6ad98d",
                              "brand": {
                                "uid": 9,
                                "name": "Puma"
                              },
                              "categories": [
                                {
                                  "uid": 165,
                                  "name": "Outdoor Sports Shoes"
                                }
                              ],
                              "images": [
                                {
                                  "aspect_ratio": "16:25",
                                  "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/9_19100302/1_1542807042296.jpg",
                                  "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/9_19100302/1_1542807042296.jpg"
                                }
                              ],
                              "action": {
                                "type": "page",
                                "page": {
                                  "type": "product",
                                  "params": {
                                    "slug": [
                                      "puma-carson-2-751083-6ad98d"
                                    ]
                                  }
                                },
                                "url": "https://api.addsale.com/platform/content/v1/products/puma-carson-2-751083-6ad98d/",
                                "query": {
                                  "product_slug": [
                                    "puma-carson-2-751083-6ad98d"
                                  ]
                                }
                              }
                            },
                            "coupon_message": "",
                            "quantity": 2,
                            "message": "",
                            "bulk_offer": {},
                            "discount": "41% OFF"
                          },
                          {
                            "key": "246228_S",
                            "identifiers": {
                              "identifier": "5mPyy88URXuh3Lo35uaTg"
                            },
                            "price_adjustment_applied": [
                              {
                                "adjusted_value": {
                                  "value": 5,
                                  "currency_code": "INR",
                                  "currency_symbol": "â‚¹"
                                },
                                "article_level_distribution": true,
                                "article_id": "46_235_TM62_M11029ONDSXNS_S",
                                "applied_quantity": 1,
                                "meta": {}
                              }
                            ],
                            "article": {
                              "type": "article",
                              "uid": "46_235_TM62_M11029ONDSXNS_S",
                              "size": "S",
                              "seller": {
                                "uid": 46,
                                "name": "RELIANCE BRANDS LIMITED"
                              },
                              "store": {
                                "uid": 4550,
                                "name": "VR Mall"
                              },
                              "quantity": 1,
                              "price": {
                                "base": {
                                  "marked": 4490,
                                  "effective": 4490,
                                  "currency_code": "INR"
                                },
                                "converted": {
                                  "marked": 4490,
                                  "effective": 4490,
                                  "currency_code": "INR"
                                }
                              }
                            },
                            "charges": [
                              {
                                "type": "convenience fee",
                                "name": "convenience fee",
                                "code": "convenience fee",
                                "amount": {
                                  "value": 10,
                                  "currency": "INR"
                                },
                                "meta": {
                                  "price_adjustment_id": "64c22d66fe278c0796bd8e4d",
                                  "article_level_distribution": true
                                }
                              }
                            ],
                            "price": {
                              "base": {
                                "add_on": 4490,
                                "marked": 4490,
                                "effective": 4490,
                                "selling": 4490,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "add_on": 4490,
                                "marked": 4490,
                                "effective": 4490,
                                "selling": 4490,
                                "currency_code": "INR"
                              }
                            },
                            "availability": {
                              "sizes": [
                                "L",
                                "M",
                                "S",
                                "XL",
                                "XXL"
                              ],
                              "available_sizes": [
                                {
                                  "is_available": true,
                                  "display": "OS",
                                  "value": "OS"
                                }
                              ],
                              "other_store_quantity": 0,
                              "out_of_stock": false,
                              "deliverable": true,
                              "is_valid": true
                            },
                            "product": {
                              "type": "product",
                              "uid": 246228,
                              "name": "Blue Solid T-Shirt",
                              "slug": "superdry-blue-solid-t-shirt-2",
                              "brand": {
                                "uid": 235,
                                "name": "Superdry"
                              },
                              "categories": [
                                {
                                  "uid": 192,
                                  "name": "T-Shirts"
                                }
                              ],
                              "images": [
                                {
                                  "aspect_ratio": "16:25",
                                  "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/235_M11029ONDSXNS/1.jpg",
                                  "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/235_M11029ONDSXNS/1.jpg"
                                }
                              ],
                              "action": {
                                "type": "product",
                                "url": "https://api.addsale.com/platform/content/v1/products/superdry-blue-solid-t-shirt-2/",
                                "query": {
                                  "product_slug": [
                                    "superdry-blue-solid-t-shirt-2"
                                  ]
                                }
                              }
                            },
                            "coupon_message": "",
                            "quantity": 1,
                            "message": "",
                            "bulk_offer": {},
                            "discount": ""
                          },
                          {
                            "key": "443175_S",
                            "identifiers": {
                              "identifier": "5mPyy88URXuh3Lo35uaTg"
                            },
                            "article": {
                              "type": "article",
                              "uid": "162_207_1271_LJ03LBLUDN88_S",
                              "size": "S",
                              "seller": {
                                "uid": 162,
                                "name": "GO FASHION INDIA PRIVATE LIMITED"
                              },
                              "store": {
                                "uid": 5784,
                                "name": "Vega City mall"
                              },
                              "quantity": 3,
                              "price": {
                                "base": {
                                  "marked": 1599,
                                  "effective": 1599,
                                  "currency_code": "INR"
                                },
                                "converted": {
                                  "marked": 1599,
                                  "effective": 1599,
                                  "currency_code": "INR"
                                }
                              }
                            },
                            "charges": [
                              {
                                "type": "convenience fee",
                                "name": "convenience fee",
                                "code": "convenience fee",
                                "amount": {
                                  "value": 10,
                                  "currency": "INR"
                                },
                                "meta": {
                                  "price_adjustment_id": "64c22d66fe278c0796bd8e4d",
                                  "article_level_distribution": true
                                }
                              }
                            ],
                            "price": {
                              "base": {
                                "add_on": 1599,
                                "marked": 1599,
                                "effective": 1599,
                                "selling": 1599,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "add_on": 1599,
                                "marked": 1599,
                                "effective": 1599,
                                "selling": 1599,
                                "currency_code": "INR"
                              }
                            },
                            "availability": {
                              "sizes": [
                                "XL",
                                "M",
                                "L",
                                "S"
                              ],
                              "available_sizes": [
                                {
                                  "is_available": true,
                                  "display": "OS",
                                  "value": "OS"
                                }
                              ],
                              "other_store_quantity": 8,
                              "out_of_stock": false,
                              "deliverable": true,
                              "is_valid": true
                            },
                            "product": {
                              "type": "product",
                              "uid": 443175,
                              "name": "Light Blue Denim Jeggings",
                              "slug": "go-colors-light-blue-denim-jeggings-443175-3c688c",
                              "brand": {
                                "uid": 207,
                                "name": "Go Colors"
                              },
                              "categories": [
                                {
                                  "uid": 267,
                                  "name": "Jeggings"
                                }
                              ],
                              "images": [
                                {
                                  "aspect_ratio": "16:25",
                                  "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/207_LJ03LBLUDN88/1_1512382513548.jpg",
                                  "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/207_LJ03LBLUDN88/1_1512382513548.jpg"
                                }
                              ],
                              "action": {
                                "type": "product",
                                "url": "https://api.addsale.com/platform/content/v1/products/go-colors-light-blue-denim-jeggings-443175-3c688c/",
                                "query": {
                                  "product_slug": [
                                    "go-colors-light-blue-denim-jeggings-443175-3c688c"
                                  ]
                                }
                              }
                            },
                            "coupon_message": "",
                            "quantity": 1,
                            "message": "",
                            "bulk_offer": {},
                            "discount": ""
                          },
                          {
                            "key": "778937_OS",
                            "identifiers": {
                              "identifier": "5mPyy88URXuh3Lo35uaTg"
                            },
                            "article": {
                              "type": "article",
                              "uid": "686_963_IC68601_PWUPC01977_OS",
                              "size": "OS",
                              "seller": {
                                "uid": 686,
                                "name": "INDUS CORPORATION"
                              },
                              "store": {
                                "uid": 5059,
                                "name": "Vidyaranyapura Main Road"
                              },
                              "quantity": 3,
                              "price": {
                                "base": {
                                  "marked": 3399,
                                  "effective": 3059,
                                  "currency_code": "INR"
                                },
                                "converted": {
                                  "marked": 3399,
                                  "effective": 3059,
                                  "currency_code": "INR"
                                }
                              }
                            },
                            "charges": [
                              {
                                "type": "convenience fee",
                                "name": "convenience fee",
                                "code": "convenience fee",
                                "amount": {
                                  "value": 10,
                                  "currency": "INR"
                                },
                                "meta": {
                                  "price_adjustment_id": "64c22d66fe278c0796bd8e4d",
                                  "article_level_distribution": true
                                }
                              }
                            ],
                            "price": {
                              "base": {
                                "add_on": 3059,
                                "marked": 3399,
                                "effective": 3059,
                                "selling": 3059,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "add_on": 3059,
                                "marked": 3399,
                                "effective": 3059,
                                "selling": 3059,
                                "currency_code": "INR"
                              }
                            },
                            "availability": {
                              "sizes": [
                                "OS"
                              ],
                              "available_sizes": [
                                {
                                  "is_available": true,
                                  "display": "OS",
                                  "value": "OS"
                                }
                              ],
                              "other_store_quantity": 2,
                              "out_of_stock": false,
                              "deliverable": true,
                              "is_valid": true
                            },
                            "product": {
                              "type": "product",
                              "uid": 778937,
                              "name": "Colourful Carnival Bouncer",
                              "slug": "fisher-price-colourful-carnival-bouncer-778937-fafa1f",
                              "brand": {
                                "uid": 963,
                                "name": "Fisher-Price"
                              },
                              "categories": [
                                {
                                  "uid": 576,
                                  "name": "Cradles"
                                }
                              ],
                              "images": [
                                {
                                  "aspect_ratio": "16:25",
                                  "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/963_PWUPC01977/1_1545308400588.jpg",
                                  "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/963_PWUPC01977/1_1545308400588.jpg"
                                }
                              ],
                              "action": {
                                "type": "product",
                                "url": "https://api.addsale.com/platform/content/v1/products/fisher-price-colourful-carnival-bouncer-778937-fafa1f/",
                                "query": {
                                  "product_slug": [
                                    "fisher-price-colourful-carnival-bouncer-778937-fafa1f"
                                  ]
                                }
                              }
                            },
                            "coupon_message": "",
                            "quantity": 1,
                            "message": "",
                            "bulk_offer": {},
                            "discount": "11% OFF"
                          }
                        ],
                        "custom_cart": {
                          "cart_name": "Universal",
                          "cart_type": "universal",
                          "id": "659e3b6b33848a683efebf2c",
                          "is_universal": true
                        },
                        "delivery_charge_info": "",
                        "coupon_text": "View all offers",
                        "buy_now": false,
                        "cart_id": 7927,
                        "uid": "7927",
                        "id": "65c06fe589db42581e4be72e",
                        "gstin": null,
                        "pan_no": null,
                        "message": "",
                        "checkout_mode": "self",
                        "last_modified": "2023-03-03T00:00:00.000Z",
                        "restrict_checkout": false,
                        "is_valid": true,
                        "custom_cart_meta": {},
                        "pan_config": {},
                        "is_pan_received": false,
                        "payment_selection_lock": {
                          "default_options": "cod",
                          "payment_identifier": "cod",
                          "enabled": false
                        },
                        "notification": {},
                        "common_config": {
                          "delivery_charges_config": {
                            "enabled": true,
                            "charges": [
                              {
                                "threshold": 1499,
                                "charges": 99
                              }
                            ]
                          }
                        },
                        "coupon": {
                          "coupon_code": "",
                          "coupon_type": "cart",
                          "is_applied": false,
                          "is_valid": false,
                          "message": "Sorry! Invalid coupon",
                          "coupon_id": null,
                          "discount": 0,
                          "cashback_amount": 0,
                          "cashback_message_primary": "",
                          "cashback_message_secondary": "",
                          "coupon_title": "",
                          "coupon_subtitle": "",
                          "coupon_description": "",
                          "minimum_cart_value": 0,
                          "maximum_discount_value": 0,
                          "coupon_value": 0,
                          "medias": []
                        },
                        "delivery_promise": {},
                        "comment": "",
                        "currency": {
                          "code": "INR",
                          "symbol": "₹"
                        },
                        "success": true
                      },
                      "result": {},
                      "partial": false
                    }
                  },
                  "Sorry, item is out of stock": {
                    "value": {
                      "message": "Sorry, item is out of stock",
                      "success": false,
                      "cart": {
                        "breakup_values": {
                          "raw": {
                            "cod_charge": 0,
                            "convenience_fee": 0,
                            "gift_card": 0,
                            "coupon": 0,
                            "delivery_charge": 0,
                            "discount": -202000,
                            "fynd_cash": 0,
                            "gst_charges": 4804.71,
                            "mrp_total": 302899,
                            "mop_total": 0,
                            "total_charge": 10,
                            "subtotal": 100899,
                            "sub_total": 100899,
                            "total": 100899,
                            "vog": 96094.29,
                            "you_saved": 0,
                            "promotion": 0
                          },
                          "coupon": {
                            "type": "cash",
                            "coupon_type": "cart",
                            "sub_title": "",
                            "title": "",
                            "minimum_cart_value": 0,
                            "coupon_value": 0,
                            "description": "",
                            "code": "",
                            "uid": null,
                            "value": 0,
                            "is_applied": false,
                            "message": "Sorry! Invalid Coupon"
                          },
                          "display": [
                            {
                              "display": "Gift Card",
                              "key": "gift_card",
                              "value": 0,
                              "currency_code": "INR",
                              "meta": {}
                            },
                            {
                              "display": "MRP Total",
                              "key": "mrp_total",
                              "value": 302899,
                              "currency_code": "INR",
                              "meta": {}
                            },
                            {
                              "display": "Discount",
                              "key": "discount",
                              "value": -202000,
                              "currency_code": "INR",
                              "meta": {}
                            },
                            {
                              "display": "Subtotal",
                              "key": "subtotal",
                              "value": 100899,
                              "currency_code": "INR",
                              "meta": {}
                            },
                            {
                              "display": "Total",
                              "key": "total",
                              "value": 100899,
                              "currency_code": "INR",
                              "meta": {}
                            }
                          ],
                          "loyalty_points": {
                            "total": 0,
                            "applicable": 0,
                            "is_applied": false,
                            "message": "Reward point not applicable with Coupon",
                            "description": "Your cashback, referrals, and refund amount get credited to Fynd Cash which can be redeemed while placing an order."
                          }
                        },
                        "applied_promo_details": [
                          {
                            "offer_text": "HK-split-1",
                            "offer_label": "HK-split-1",
                            "discount_rules": [
                              {
                                "raw_offer": {
                                  "discount_type": "percentage",
                                  "offer": {
                                    "max_offer_quantity": 1,
                                    "discount_percentage": 10
                                  },
                                  "item_criteria": {
                                    "buy_rules": [
                                      "rule#1"
                                    ]
                                  },
                                  "buy_condition": "rule#1"
                                },
                                "item_criteria": {
                                  "buy_rules": [
                                    "rule#1"
                                  ]
                                },
                                "offer": {
                                  "max_offer_quantity": 1,
                                  "discount_percentage": 10
                                },
                                "matched_buy_rules": [
                                  "rule#1"
                                ]
                              }
                            ],
                            "ownership": {
                              "payable_category": "seller",
                              "payable_by": ""
                            },
                            "return_allowed": true,
                            "promotion_name": "HK-split-1",
                            "meta": {},
                            "cancellation_allowed": true,
                            "offer_description": "<p>HK-split-1</p>",
                            "buy_rules": [
                              {
                                "item_criteria": {
                                  "buy_rules": [
                                    "rule#1"
                                  ]
                                },
                                "cart_conditions": {
                                  "cart_quantity": {
                                    "greater_than_equals": 1
                                  }
                                }
                              }
                            ]
                          }
                        ],
                        "items": [
                          {
                            "bulk_offer": {},
                            "promotions_applied": [
                              {
                                "offer_text": "HK-split-1",
                                "offer_label": "HK-split-1",
                                "discount_rules": [
                                  {
                                    "raw_offer": {
                                      "discount_type": "percentage",
                                      "offer": {
                                        "max_offer_quantity": 1,
                                        "discount_percentage": 10
                                      },
                                      "item_criteria": {
                                        "buy_rules": [
                                          "rule#1"
                                        ]
                                      },
                                      "buy_condition": "rule#1"
                                    },
                                    "item_criteria": {
                                      "buy_rules": [
                                        "rule#1"
                                      ]
                                    },
                                    "offer": {
                                      "max_offer_quantity": 1,
                                      "discount_percentage": 10
                                    },
                                    "matched_buy_rules": [
                                      "rule#1"
                                    ]
                                  }
                                ],
                                "ownership": {
                                  "payable_category": "seller",
                                  "payable_by": ""
                                },
                                "return_allowed": true,
                                "promotion_name": "HK-split-1",
                                "meta": {},
                                "cancellation_allowed": true,
                                "offer_description": "<p>HK-split-1</p>",
                                "buy_rules": [
                                  {
                                    "item_criteria": {
                                      "buy_rules": [
                                        "rule#1"
                                      ]
                                    },
                                    "cart_conditions": {
                                      "cart_quantity": {
                                        "greater_than_equals": 1
                                      }
                                    }
                                  }
                                ]
                              }
                            ],
                            "identifiers": {
                              "identifier": "5mPyy88URXuh3Lo35uaTg"
                            },
                            "discount": "67% OFF",
                            "parent_item_identifiers": {
                              "identifier": "ZASFF",
                              "parent_item_id": 7501190,
                              "parent_item_size": "OS"
                            },
                            "article": {
                              "type": "article",
                              "is_gift_visible": false,
                              "uid": "604_902_SSTC60401_636BLUE_1",
                              "size": "1",
                              "seller": {
                                "uid": 604,
                                "name": "SHRI SHANTINATH TRADING COMPANY"
                              },
                              "store": {
                                "uid": 4579,
                                "name": "Gandhi Nagar"
                              },
                              "quantity": 108,
                              "price": {
                                "base": {
                                  "marked": 2999,
                                  "effective": 999,
                                  "currency_code": "INR"
                                },
                                "converted": {
                                  "marked": 2999,
                                  "effective": 999,
                                  "currency_code": "INR"
                                }
                              }
                            },
                            "charges": [
                              {
                                "type": "convenience fee",
                                "name": "convenience fee",
                                "code": "convenience fee",
                                "amount": {
                                  "value": 10,
                                  "currency": "INR"
                                },
                                "meta": {
                                  "price_adjustment_id": "64c22d66fe278c0796bd8e4d",
                                  "article_level_distribution": true
                                }
                              }
                            ],
                            "coupon_message": "",
                            "key": "707569_1",
                            "availability": {
                              "sizes": [
                                "1",
                                "8",
                                "7",
                                "2",
                                "9",
                                "5",
                                "3",
                                "6"
                              ],
                              "other_store_quantity": 7,
                              "out_of_stock": false,
                              "deliverable": true,
                              "is_valid": true
                            },
                            "product": {
                              "type": "product",
                              "uid": 707569,
                              "name": "Blue and Gold Printed Ethnic Set",
                              "slug": "aj-dezines-blue-and-gold-printed-ethnic-set-707569-bff01a",
                              "brand": {
                                "uid": 902,
                                "name": ""
                              },
                              "categories": [
                                {
                                  "uid": 525,
                                  "name": ""
                                }
                              ],
                              "images": [
                                {
                                  "aspect_ratio": "16:25",
                                  "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/902_636BLUE/1_1540301094877.jpg",
                                  "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/902_636BLUE/1_1540301094877.jpg"
                                }
                              ],
                              "action": {
                                "type": "product",
                                "url": "https://api.addsale.com/v1/products/aj-dezines-blue-and-gold-printed-ethnic-set-707569-bff01a/",
                                "query": {
                                  "product_slug": [
                                    "aj-dezines-blue-and-gold-printed-ethnic-set-707569-bff01a"
                                  ]
                                }
                              }
                            },
                            "price": {
                              "base": {
                                "add_on": 100899,
                                "marked": 302899,
                                "effective": 100899,
                                "selling": 100899,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "add_on": 100899,
                                "marked": 302899,
                                "effective": 100899,
                                "selling": 100899,
                                "currency_code": "INR"
                              }
                            },
                            "message": "",
                            "quantity": 101
                          }
                        ],
                        "custom_cart": {
                          "cart_name": "Universal",
                          "cart_type": "universal",
                          "id": "659e3b6b33848a683efebf2c",
                          "is_universal": true
                        },
                        "delivery_charge_info": "",
                        "coupon_text": "View all offers",
                        "buy_now": false,
                        "cart_id": 54,
                        "uid": "54",
                        "id": "65c06fe589db42581e4be72e",
                        "gstin": null,
                        "pan_no": null,
                        "message": "",
                        "checkout_mode": "self",
                        "restrict_checkout": false,
                        "is_valid": false,
                        "last_modified": "2023-03-03T00:00:00.000Z",
                        "custom_cart_meta": {},
                        "pan_config": {},
                        "is_pan_received": false,
                        "payment_selection_lock": {
                          "default_options": "cod",
                          "payment_identifier": "cod",
                          "enabled": false
                        },
                        "notification": {},
                        "common_config": {
                          "delivery_charges_config": {
                            "enabled": true,
                            "charges": [
                              {
                                "threshold": 1499,
                                "charges": 99
                              }
                            ]
                          }
                        },
                        "price_adjustment_applied": [],
                        "coupon": {
                          "coupon_code": "",
                          "coupon_type": "cart",
                          "is_applied": false,
                          "is_valid": false,
                          "message": "Sorry! Invalid coupon",
                          "coupon_id": null,
                          "discount": 0,
                          "cashback_amount": 0,
                          "cashback_message_primary": "",
                          "cashback_message_secondary": "",
                          "coupon_title": "",
                          "coupon_subtitle": "",
                          "coupon_description": "",
                          "minimum_cart_value": 0,
                          "maximum_discount_value": 0,
                          "coupon_value": 0,
                          "medias": []
                        },
                        "delivery_promise": {},
                        "comment": "",
                        "currency": {
                          "code": "INR",
                          "symbol": "₹"
                        },
                        "success": true
                      },
                      "result": {},
                      "partial": false
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Cart"
        ]
      },
      "put": {
        "summary": "updateCart | Update items in the cart",
        "description": "Update cart. Customers can modify added product attributes such as quantity and size, as well as remove items from the cart.",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "The unique identifier of the cart.",
            "examples": {
              "Nothing updated": {
                "value": "65c06fe589db42581e4be72e"
              },
              "Item updated in the cart": {
                "value": "65c06fe589db42581e4be72e"
              }
            }
          },
          {
            "in": "query",
            "name": "i",
            "schema": {
              "type": "boolean"
            },
            "description": "Select `true` to retrieve all the items added in the cart.",
            "examples": {
              "Nothing updated": {
                "value": "true"
              },
              "Item updated in the cart": {
                "value": "true"
              }
            }
          },
          {
            "in": "query",
            "name": "b",
            "schema": {
              "type": "boolean"
            },
            "description": "Select `true` to retrieve the price breakup of cart items."
          },
          {
            "in": "query",
            "name": "area_code",
            "schema": {
              "type": "string",
              "x-not-enum": true
            },
            "description": "Customer servicable area_code.",
            "examples": {
              "Nothing updated": {
                "value": "400093"
              },
              "Item updated in the cart": {
                "value": "400093"
              }
            }
          },
          {
            "in": "query",
            "name": "buy_now",
            "schema": {
              "type": "boolean"
            },
            "description": "Select `true` to set/initialize buy now cart."
          },
          {
            "name": "cart_type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "universal"
              ]
            },
            "description": "The type of cart."
          },
          {
            "in": "query",
            "name": "order_type",
            "schema": {
              "type": "string",
              "enum": [
                "HomeDelivery",
                "PickAtStore"
              ]
            },
            "description": "The order type of shipment HomeDelivery - If the customer wants the order home-delivered PickAtStore - If the customer wants the handover of an order at the store itself."
          }
        ],
        "requestBody": {
          "description": "Specify the item details and operation as shown below. Refer `UpdateCartCreation` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCartPayload"
              },
              "examples": {
                "Nothing updated": {
                  "value": {
                    "operation": "update_item",
                    "items": [
                      {
                        "item_id": 1077515,
                        "identifiers": {
                          "identifier": "dC1P7tv3RGqp_pWG4S9S_w"
                        },
                        "item_size": "OS",
                        "quantity": 1,
                        "article_id": "778937_OS",
                        "item_index": 0,
                        "extra_meta": {}
                      }
                    ]
                  }
                },
                "Item updated in the cart": {
                  "value": {
                    "operation": "update_item",
                    "items": [
                      {
                        "item_id": 1077515,
                        "identifiers": {
                          "identifier": "dC1P7tv3RGqp_pWG4S9S_w"
                        },
                        "item_size": "OS",
                        "quantity": 1,
                        "article_id": "778937_OS",
                        "item_index": 0,
                        "extra_meta": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Updates and returns a cart object as shown below. Refer `UpdateCartDetailResult` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCartDetailResult"
                },
                "examples": {
                  "Nothing updated": {
                    "value": {
                      "cart": {
                        "breakup_values": {
                          "display": [
                            {
                              "display": "MRP Total",
                              "key": "mrp_total",
                              "value": 17486,
                              "currency_code": "INR",
                              "meta": {}
                            },
                            {
                              "display": "Discount",
                              "key": "discount",
                              "value": -3540,
                              "currency_code": "INR",
                              "meta": {}
                            },
                            {
                              "display": "Subtotal",
                              "key": "subtotal",
                              "value": 13946,
                              "currency_code": "INR",
                              "meta": {}
                            },
                            {
                              "display": "Total",
                              "key": "total",
                              "value": 13946,
                              "currency_code": "INR"
                            }
                          ],
                          "raw": {
                            "cod_charge": 0,
                            "convenience_fee": 0,
                            "coupon": 0,
                            "delivery_charge": 0,
                            "discount": -3540,
                            "fynd_cash": 0,
                            "gift_card": 0,
                            "gst_charges": 1529.96,
                            "mrp_total": 17486,
                            "mop_total": 0,
                            "total_charge": 0,
                            "subtotal": 13946,
                            "sub_total": 13946,
                            "total": 13946,
                            "vog": 12416.04,
                            "you_saved": 0,
                            "promotion": 0
                          },
                          "loyalty_points": {
                            "total": 0,
                            "applicable": 0,
                            "is_applied": false,
                            "message": "Reward point not applicable with Coupon",
                            "description": "Your cashback, referrals, and refund amount get credited to Fynd Cash which can be redeemed while placing an order."
                          },
                          "coupon": {
                            "type": "cash",
                            "coupon_type": "cart",
                            "sub_title": "",
                            "title": "",
                            "minimum_cart_value": 0,
                            "coupon_value": 0,
                            "description": "",
                            "code": "",
                            "uid": null,
                            "value": 0,
                            "is_applied": false,
                            "message": "Sorry! Invalid Coupon"
                          }
                        },
                        "applied_promo_details": [
                          {
                            "offer_text": "HK-split-1",
                            "offer_label": "HK-split-1",
                            "discount_rules": [
                              {
                                "raw_offer": {
                                  "discount_type": "percentage",
                                  "offer": {
                                    "max_offer_quantity": 1,
                                    "discount_percentage": 10
                                  },
                                  "item_criteria": {
                                    "buy_rules": [
                                      "rule#1"
                                    ]
                                  },
                                  "buy_condition": "rule#1"
                                },
                                "item_criteria": {
                                  "buy_rules": [
                                    "rule#1"
                                  ]
                                },
                                "offer": {
                                  "max_offer_quantity": 1,
                                  "discount_percentage": 10
                                },
                                "matched_buy_rules": [
                                  "rule#1"
                                ]
                              }
                            ],
                            "ownership": {
                              "payable_category": "seller",
                              "payable_by": ""
                            },
                            "return_allowed": true,
                            "promotion_name": "HK-split-1",
                            "meta": {},
                            "cancellation_allowed": true,
                            "offer_description": "<p>HK-split-1</p>",
                            "buy_rules": [
                              {
                                "item_criteria": {
                                  "buy_rules": [
                                    "rule#1"
                                  ]
                                },
                                "cart_conditions": {
                                  "cart_quantity": {
                                    "greater_than_equals": 1
                                  }
                                }
                              }
                            ]
                          }
                        ],
                        "price_adjustment_applied": [
                          {
                            "remove_articles": true,
                            "adjusted_value": {
                              "value": 10,
                              "currency_code": "INR",
                              "currency_symbol": "â‚¹"
                            },
                            "article_level_distribution": true,
                            "auto_remove": true,
                            "applied_articles_ids": [
                              "612_9_SE61201_19100302_10",
                              "46_235_TM62_M11029ONDSXNS_S"
                            ],
                            "message": "Processing Fee",
                            "_type": "charge",
                            "meta": {},
                            "restrictions": {
                              "post_order": {
                                "cancellation_order": true,
                                "return_order": true
                              }
                            },
                            "_id": "659e3b6b33848a683efebf2c"
                          }
                        ],
                        "items": [
                          {
                            "key": "751083_10",
                            "promotions_applied": [
                              {
                                "offer_text": "HK-split-1",
                                "offer_label": "HK-split-1",
                                "discount_rules": [
                                  {
                                    "raw_offer": {
                                      "discount_type": "percentage",
                                      "offer": {
                                        "max_offer_quantity": 1,
                                        "discount_percentage": 10
                                      },
                                      "item_criteria": {
                                        "buy_rules": [
                                          "rule#1"
                                        ]
                                      },
                                      "buy_condition": "rule#1"
                                    },
                                    "item_criteria": {
                                      "buy_rules": [
                                        "rule#1"
                                      ]
                                    },
                                    "offer": {
                                      "max_offer_quantity": 1,
                                      "discount_percentage": 10
                                    },
                                    "matched_buy_rules": [
                                      "rule#1"
                                    ]
                                  }
                                ],
                                "ownership": {
                                  "payable_category": "seller",
                                  "payable_by": ""
                                },
                                "return_allowed": true,
                                "promotion_name": "HK-split-1",
                                "meta": {},
                                "cancellation_allowed": true,
                                "offer_description": "<p>HK-split-1</p>",
                                "buy_rules": [
                                  {
                                    "item_criteria": {
                                      "buy_rules": [
                                        "rule#1"
                                      ]
                                    },
                                    "cart_conditions": {
                                      "cart_quantity": {
                                        "greater_than_equals": 1
                                      }
                                    }
                                  }
                                ]
                              }
                            ],
                            "price_adjustment_applied": [
                              {
                                "adjusted_value": {
                                  "value": 5,
                                  "currency_code": "INR",
                                  "currency_symbol": "â‚¹"
                                },
                                "article_level_distribution": true,
                                "article_id": "612_9_SE61201_19100302_10",
                                "applied_quantity": 4,
                                "meta": {}
                              }
                            ],
                            "identifiers": {
                              "identifier": "5mPyy88URXuh3Lo35uaTg"
                            },
                            "parent_item_identifiers": {
                              "identifier": "ZASFF",
                              "parent_item_id": 7501190,
                              "parent_item_size": "OS"
                            },
                            "article": {
                              "type": "article",
                              "uid": "612_9_SE61201_19100302_10",
                              "size": "10",
                              "seller": {
                                "uid": 612,
                                "name": "SSR ENTERPRISE"
                              },
                              "store": {
                                "uid": 4431,
                                "name": "Motilal Nagar 1, Goregaon"
                              },
                              "quantity": 4,
                              "price": {
                                "base": {
                                  "marked": 3999,
                                  "effective": 2399,
                                  "currency_code": "INR"
                                },
                                "converted": {
                                  "marked": 3999,
                                  "effective": 2399,
                                  "currency_code": "INR"
                                }
                              }
                            },
                            "price": {
                              "base": {
                                "add_on": 4798,
                                "marked": 7998,
                                "effective": 4798,
                                "selling": 4798,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "add_on": 4798,
                                "marked": 7998,
                                "effective": 4798,
                                "selling": 4798,
                                "currency_code": "INR"
                              }
                            },
                            "availability": {
                              "sizes": [
                                "10"
                              ],
                              "other_store_quantity": 2,
                              "out_of_stock": false,
                              "deliverable": true,
                              "is_valid": true
                            },
                            "product": {
                              "type": "product",
                              "uid": 751083,
                              "name": "Carson 2",
                              "slug": "puma-carson-2-751083-6ad98d",
                              "brand": {
                                "uid": 9,
                                "name": "Puma"
                              },
                              "categories": [
                                {
                                  "uid": 165,
                                  "name": "Outdoor Sports Shoes"
                                }
                              ],
                              "images": [
                                {
                                  "aspect_ratio": "16:25",
                                  "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/9_19100302/1_1542807042296.jpg",
                                  "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/9_19100302/1_1542807042296.jpg"
                                }
                              ],
                              "action": {
                                "type": "product",
                                "url": "https://api.addsale.com/platform/content/v1/products/puma-carson-2-751083-6ad98d/",
                                "query": {
                                  "product_slug": [
                                    "puma-carson-2-751083-6ad98d"
                                  ]
                                }
                              }
                            },
                            "coupon_message": "",
                            "quantity": 2,
                            "message": "",
                            "bulk_offer": {},
                            "discount": "41% OFF"
                          },
                          {
                            "key": "246228_S",
                            "identifiers": {
                              "identifier": "5mPyy88URXuh3Lo35uaTg"
                            },
                            "price_adjustment_applied": [
                              {
                                "adjusted_value": {
                                  "value": 5,
                                  "currency_code": "INR",
                                  "currency_symbol": "â‚¹"
                                },
                                "article_level_distribution": true,
                                "article_id": "46_235_TM62_M11029ONDSXNS_S",
                                "applied_quantity": 1,
                                "meta": {}
                              }
                            ],
                            "article": {
                              "type": "article",
                              "uid": "46_235_TM62_M11029ONDSXNS_S",
                              "size": "S",
                              "seller": {
                                "uid": 46,
                                "name": "RELIANCE BRANDS LIMITED"
                              },
                              "store": {
                                "uid": 4550,
                                "name": "VR Mall"
                              },
                              "quantity": 1,
                              "price": {
                                "base": {
                                  "marked": 4490,
                                  "effective": 4490,
                                  "currency_code": "INR"
                                },
                                "converted": {
                                  "marked": 4490,
                                  "effective": 4490,
                                  "currency_code": "INR"
                                }
                              }
                            },
                            "price": {
                              "base": {
                                "add_on": 4490,
                                "marked": 4490,
                                "effective": 4490,
                                "selling": 4490,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "add_on": 4490,
                                "marked": 4490,
                                "effective": 4490,
                                "selling": 4490,
                                "currency_code": "INR"
                              }
                            },
                            "availability": {
                              "sizes": [
                                "L",
                                "M",
                                "S",
                                "XL",
                                "XXL"
                              ],
                              "other_store_quantity": 0,
                              "out_of_stock": false,
                              "deliverable": true,
                              "is_valid": true
                            },
                            "product": {
                              "type": "product",
                              "uid": 246228,
                              "name": "Blue Solid T-Shirt",
                              "slug": "superdry-blue-solid-t-shirt-2",
                              "brand": {
                                "uid": 235,
                                "name": "Superdry"
                              },
                              "categories": [
                                {
                                  "uid": 192,
                                  "name": "T-Shirts"
                                }
                              ],
                              "images": [
                                {
                                  "aspect_ratio": "16:25",
                                  "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/235_M11029ONDSXNS/1.jpg",
                                  "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/235_M11029ONDSXNS/1.jpg"
                                }
                              ],
                              "action": {
                                "type": "product",
                                "url": "https://api.addsale.com/platform/content/v1/products/superdry-blue-solid-t-shirt-2/",
                                "query": {
                                  "product_slug": [
                                    "superdry-blue-solid-t-shirt-2"
                                  ]
                                }
                              }
                            },
                            "coupon_message": "",
                            "quantity": 1,
                            "message": "",
                            "bulk_offer": {},
                            "discount": ""
                          },
                          {
                            "key": "443175_S",
                            "identifiers": {
                              "identifier": "5mPyy88URXuh3Lo35uaTg"
                            },
                            "article": {
                              "type": "article",
                              "uid": "162_207_1271_LJ03LBLUDN88_S",
                              "size": "S",
                              "seller": {
                                "uid": 162,
                                "name": "GO FASHION INDIA PRIVATE LIMITED"
                              },
                              "store": {
                                "uid": 5784,
                                "name": "Vega City mall"
                              },
                              "quantity": 3,
                              "price": {
                                "base": {
                                  "marked": 1599,
                                  "effective": 1599,
                                  "currency_code": "INR"
                                },
                                "converted": {
                                  "marked": 1599,
                                  "effective": 1599,
                                  "currency_code": "INR"
                                }
                              }
                            },
                            "price": {
                              "base": {
                                "add_on": 1599,
                                "marked": 1599,
                                "effective": 1599,
                                "selling": 1599,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "add_on": 1599,
                                "marked": 1599,
                                "effective": 1599,
                                "selling": 1599,
                                "currency_code": "INR"
                              }
                            },
                            "availability": {
                              "sizes": [
                                "XL",
                                "M",
                                "L",
                                "S"
                              ],
                              "other_store_quantity": 8,
                              "out_of_stock": false,
                              "deliverable": true,
                              "is_valid": true
                            },
                            "product": {
                              "type": "product",
                              "uid": 443175,
                              "name": "Light Blue Denim Jeggings",
                              "slug": "go-colors-light-blue-denim-jeggings-443175-3c688c",
                              "brand": {
                                "uid": 207,
                                "name": "Go Colors"
                              },
                              "categories": [
                                {
                                  "uid": 267,
                                  "name": "Jeggings"
                                }
                              ],
                              "images": [
                                {
                                  "aspect_ratio": "16:25",
                                  "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/207_LJ03LBLUDN88/1_1512382513548.jpg",
                                  "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/207_LJ03LBLUDN88/1_1512382513548.jpg"
                                }
                              ],
                              "action": {
                                "type": "product",
                                "url": "https://api.addsale.com/platform/content/v1/products/go-colors-light-blue-denim-jeggings-443175-3c688c/",
                                "query": {
                                  "product_slug": [
                                    "go-colors-light-blue-denim-jeggings-443175-3c688c"
                                  ]
                                }
                              }
                            },
                            "coupon_message": "",
                            "quantity": 1,
                            "message": "",
                            "bulk_offer": {},
                            "discount": ""
                          },
                          {
                            "key": "778937_OS",
                            "identifiers": {
                              "identifier": "5mPyy88URXuh3Lo35uaTg"
                            },
                            "article": {
                              "type": "article",
                              "uid": "686_963_IC68601_PWUPC01977_OS",
                              "size": "OS",
                              "seller": {
                                "uid": 686,
                                "name": "INDUS CORPORATION"
                              },
                              "store": {
                                "uid": 5059,
                                "name": "Vidyaranyapura Main Road"
                              },
                              "quantity": 3,
                              "price": {
                                "base": {
                                  "marked": 3399,
                                  "effective": 3059,
                                  "currency_code": "INR"
                                },
                                "converted": {
                                  "marked": 3399,
                                  "effective": 3059,
                                  "currency_code": "INR"
                                }
                              }
                            },
                            "price": {
                              "base": {
                                "add_on": 3059,
                                "marked": 3399,
                                "effective": 3059,
                                "selling": 3059,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "add_on": 3059,
                                "marked": 3399,
                                "effective": 3059,
                                "selling": 3059,
                                "currency_code": "INR"
                              }
                            },
                            "availability": {
                              "sizes": [
                                "OS"
                              ],
                              "other_store_quantity": 2,
                              "out_of_stock": false,
                              "deliverable": true,
                              "is_valid": true
                            },
                            "product": {
                              "type": "product",
                              "uid": 778937,
                              "name": "Colourful Carnival Bouncer",
                              "slug": "fisher-price-colourful-carnival-bouncer-778937-fafa1f",
                              "brand": {
                                "uid": 963,
                                "name": "Fisher-Price"
                              },
                              "categories": [
                                {
                                  "uid": 576,
                                  "name": "Cradles"
                                }
                              ],
                              "images": [
                                {
                                  "aspect_ratio": "16:25",
                                  "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/963_PWUPC01977/1_1545308400588.jpg",
                                  "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/963_PWUPC01977/1_1545308400588.jpg"
                                }
                              ],
                              "action": {
                                "type": "product",
                                "url": "https://api.addsale.com/platform/content/v1/products/fisher-price-colourful-carnival-bouncer-778937-fafa1f/",
                                "query": {
                                  "product_slug": [
                                    "fisher-price-colourful-carnival-bouncer-778937-fafa1f"
                                  ]
                                }
                              }
                            },
                            "coupon_message": "",
                            "quantity": 1,
                            "message": "",
                            "bulk_offer": {},
                            "discount": "11% OFF"
                          }
                        ],
                        "delivery_charge_info": "",
                        "coupon_text": "View all offers",
                        "buy_now": false,
                        "cart_id": 7927,
                        "uid": "7927",
                        "id": "65c06fe589db42581e4be72e",
                        "gstin": null,
                        "pan_no": null,
                        "message": "",
                        "checkout_mode": "self",
                        "last_modified": "2023-03-03T00:00:00.000Z",
                        "restrict_checkout": false,
                        "is_valid": true,
                        "custom_cart": {
                          "cart_name": "Universal",
                          "cart_type": "universal",
                          "id": "659e3b6b33848a683efebf2c",
                          "is_universal": true
                        },
                        "custom_cart_meta": {},
                        "pan_config": {},
                        "is_pan_received": false,
                        "payment_selection_lock": {
                          "default_options": "cod",
                          "payment_identifier": "cod",
                          "enabled": false
                        },
                        "notification": {},
                        "common_config": {
                          "delivery_charges_config": {
                            "enabled": true,
                            "charges": [
                              {
                                "threshold": 1499,
                                "charges": 99
                              }
                            ]
                          }
                        },
                        "coupon": {
                          "coupon_code": "",
                          "coupon_type": "cart",
                          "is_applied": false,
                          "is_valid": false,
                          "message": "Sorry! Invalid coupon",
                          "coupon_id": null,
                          "discount": 0,
                          "cashback_amount": 0,
                          "cashback_message_primary": "",
                          "cashback_message_secondary": "",
                          "coupon_title": "",
                          "coupon_subtitle": "",
                          "coupon_description": "",
                          "minimum_cart_value": 0,
                          "maximum_discount_value": 0,
                          "coupon_value": 0,
                          "medias": []
                        },
                        "delivery_promise": {},
                        "comment": "",
                        "currency": {
                          "code": "INR",
                          "symbol": "₹"
                        },
                        "success": true
                      },
                      "result": {
                        "778937_OS": {
                          "success": true,
                          "message": "Nothing updated"
                        }
                      },
                      "message": "Nothing updated",
                      "success": true
                    }
                  },
                  "Item updated in the cart": {
                    "value": {
                      "cart": {
                        "breakup_values": {
                          "display": [
                            {
                              "display": "MRP Total",
                              "key": "mrp_total",
                              "value": 17486,
                              "currency_code": "INR"
                            },
                            {
                              "display": "Discount",
                              "key": "discount",
                              "value": -3540,
                              "currency_code": "INR"
                            },
                            {
                              "display": "Subtotal",
                              "key": "subtotal",
                              "value": 13946,
                              "currency_code": "INR"
                            },
                            {
                              "display": "Total",
                              "key": "total",
                              "value": 13946,
                              "currency_code": "INR"
                            }
                          ],
                          "raw": {
                            "cod_charge": 0,
                            "convenience_fee": 0,
                            "coupon": 0,
                            "delivery_charge": 0,
                            "discount": -3540,
                            "fynd_cash": 0,
                            "gift_card": 0,
                            "gst_charges": 1529.96,
                            "mrp_total": 17486,
                            "mop_total": 0,
                            "total_charge": 10,
                            "subtotal": 13946,
                            "sub_total": 13946,
                            "total": 13946,
                            "vog": 12416.04,
                            "you_saved": 0,
                            "promotion": 0
                          },
                          "loyalty_points": {
                            "total": 0,
                            "applicable": 0,
                            "is_applied": false,
                            "message": "Reward point not applicable with Coupon",
                            "description": "Your cashback, referrals, and refund amount get credited to Fynd Cash which can be redeemed while placing an order."
                          },
                          "coupon": {
                            "type": "cash",
                            "coupon_type": "cart",
                            "sub_title": "",
                            "title": "",
                            "minimum_cart_value": 0,
                            "coupon_value": 0,
                            "description": "",
                            "code": "",
                            "uid": null,
                            "value": 0,
                            "is_applied": false,
                            "message": "Sorry! Invalid Coupon"
                          }
                        },
                        "applied_promo_details": [
                          {
                            "offer_text": "HK-split-1",
                            "offer_label": "HK-split-1",
                            "discount_rules": [
                              {
                                "raw_offer": {
                                  "discount_type": "percentage",
                                  "offer": {
                                    "max_offer_quantity": 1,
                                    "discount_percentage": 10
                                  },
                                  "item_criteria": {
                                    "buy_rules": [
                                      "rule#1"
                                    ]
                                  },
                                  "buy_condition": "rule#1"
                                },
                                "item_criteria": {
                                  "buy_rules": [
                                    "rule#1"
                                  ]
                                },
                                "offer": {
                                  "max_offer_quantity": 1,
                                  "discount_percentage": 10
                                },
                                "matched_buy_rules": [
                                  "rule#1"
                                ]
                              }
                            ],
                            "ownership": {
                              "payable_category": "seller",
                              "payable_by": ""
                            },
                            "return_allowed": true,
                            "promotion_name": "HK-split-1",
                            "meta": {},
                            "cancellation_allowed": true,
                            "offer_description": "<p>HK-split-1</p>",
                            "buy_rules": [
                              {
                                "item_criteria": {
                                  "buy_rules": [
                                    "rule#1"
                                  ]
                                },
                                "cart_conditions": {
                                  "cart_quantity": {
                                    "greater_than_equals": 1
                                  }
                                }
                              }
                            ]
                          }
                        ],
                        "items": [
                          {
                            "key": "751083_10",
                            "promotions_applied": [
                              {
                                "offer_text": "HK-split-1",
                                "offer_label": "HK-split-1",
                                "discount_rules": [
                                  {
                                    "raw_offer": {
                                      "discount_type": "percentage",
                                      "offer": {
                                        "max_offer_quantity": 1,
                                        "discount_percentage": 10
                                      },
                                      "item_criteria": {
                                        "buy_rules": [
                                          "rule#1"
                                        ]
                                      },
                                      "buy_condition": "rule#1"
                                    },
                                    "item_criteria": {
                                      "buy_rules": [
                                        "rule#1"
                                      ]
                                    },
                                    "offer": {
                                      "max_offer_quantity": 1,
                                      "discount_percentage": 10
                                    },
                                    "matched_buy_rules": [
                                      "rule#1"
                                    ]
                                  }
                                ],
                                "ownership": {
                                  "payable_category": "seller",
                                  "payable_by": ""
                                },
                                "return_allowed": true,
                                "promotion_name": "HK-split-1",
                                "meta": {},
                                "cancellation_allowed": true,
                                "offer_description": "<p>HK-split-1</p>",
                                "buy_rules": [
                                  {
                                    "item_criteria": {
                                      "buy_rules": [
                                        "rule#1"
                                      ]
                                    },
                                    "cart_conditions": {
                                      "cart_quantity": {
                                        "greater_than_equals": 1
                                      }
                                    }
                                  }
                                ]
                              }
                            ],
                            "identifiers": {
                              "identifier": "5mPyy88URXuh3Lo35uaTg"
                            },
                            "parent_item_identifiers": {
                              "identifier": "ZASFF",
                              "parent_item_id": 7501190,
                              "parent_item_size": "OS"
                            },
                            "article": {
                              "type": "article",
                              "uid": "612_9_SE61201_19100302_10",
                              "size": "10",
                              "seller": {
                                "uid": 612,
                                "name": "SSR ENTERPRISE"
                              },
                              "store": {
                                "uid": 4431,
                                "name": "Motilal Nagar 1, Goregaon"
                              },
                              "quantity": 4,
                              "price": {
                                "base": {
                                  "marked": 3999,
                                  "effective": 2399,
                                  "currency_code": "INR"
                                },
                                "converted": {
                                  "marked": 3999,
                                  "effective": 2399,
                                  "currency_code": "INR"
                                }
                              }
                            },
                            "price": {
                              "base": {
                                "add_on": 4798,
                                "marked": 7998,
                                "effective": 4798,
                                "selling": 4798,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "add_on": 4798,
                                "marked": 7998,
                                "effective": 4798,
                                "selling": 4798,
                                "currency_code": "INR"
                              }
                            },
                            "availability": {
                              "sizes": [
                                "10"
                              ],
                              "other_store_quantity": 2,
                              "out_of_stock": false,
                              "deliverable": true,
                              "is_valid": true
                            },
                            "product": {
                              "type": "product",
                              "uid": 751083,
                              "name": "Carson 2",
                              "slug": "puma-carson-2-751083-6ad98d",
                              "brand": {
                                "uid": 9,
                                "name": "Puma"
                              },
                              "categories": [
                                {
                                  "uid": 165,
                                  "name": "Outdoor Sports Shoes"
                                }
                              ],
                              "images": [
                                {
                                  "aspect_ratio": "16:25",
                                  "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/9_19100302/1_1542807042296.jpg",
                                  "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/9_19100302/1_1542807042296.jpg"
                                }
                              ],
                              "action": {
                                "type": "product",
                                "url": "https://api.addsale.com/platform/content/v1/products/puma-carson-2-751083-6ad98d/",
                                "query": {
                                  "product_slug": [
                                    "puma-carson-2-751083-6ad98d"
                                  ]
                                }
                              }
                            },
                            "coupon_message": "",
                            "quantity": 2,
                            "message": "",
                            "bulk_offer": {},
                            "discount": "41% OFF"
                          },
                          {
                            "key": "246228_S",
                            "identifiers": {
                              "identifier": "5mPyy88URXuh3Lo35uaTg"
                            },
                            "article": {
                              "type": "article",
                              "uid": "46_235_TM62_M11029ONDSXNS_S",
                              "size": "S",
                              "seller": {
                                "uid": 46,
                                "name": "RELIANCE BRANDS LIMITED"
                              },
                              "store": {
                                "uid": 4550,
                                "name": "VR Mall"
                              },
                              "quantity": 1,
                              "price": {
                                "base": {
                                  "marked": 4490,
                                  "effective": 4490,
                                  "currency_code": "INR"
                                },
                                "converted": {
                                  "marked": 4490,
                                  "effective": 4490,
                                  "currency_code": "INR"
                                }
                              }
                            },
                            "price": {
                              "base": {
                                "add_on": 4490,
                                "marked": 4490,
                                "effective": 4490,
                                "selling": 4490,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "add_on": 4490,
                                "marked": 4490,
                                "effective": 4490,
                                "selling": 4490,
                                "currency_code": "INR"
                              }
                            },
                            "availability": {
                              "sizes": [
                                "L",
                                "M",
                                "S",
                                "XL",
                                "XXL"
                              ],
                              "other_store_quantity": 0,
                              "out_of_stock": false,
                              "deliverable": true,
                              "is_valid": true
                            },
                            "product": {
                              "type": "product",
                              "uid": 246228,
                              "name": "Blue Solid T-Shirt",
                              "slug": "superdry-blue-solid-t-shirt-2",
                              "brand": {
                                "uid": 235,
                                "name": "Superdry"
                              },
                              "categories": [
                                {
                                  "uid": 192,
                                  "name": "T-Shirts"
                                }
                              ],
                              "images": [
                                {
                                  "aspect_ratio": "16:25",
                                  "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/235_M11029ONDSXNS/1.jpg",
                                  "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/235_M11029ONDSXNS/1.jpg"
                                }
                              ],
                              "action": {
                                "type": "product",
                                "url": "https://api.addsale.com/platform/content/v1/products/superdry-blue-solid-t-shirt-2/",
                                "query": {
                                  "product_slug": [
                                    "superdry-blue-solid-t-shirt-2"
                                  ]
                                }
                              }
                            },
                            "coupon_message": "",
                            "quantity": 1,
                            "message": "",
                            "bulk_offer": {},
                            "discount": ""
                          },
                          {
                            "key": "443175_S",
                            "identifiers": {
                              "identifier": "5mPyy88URXuh3Lo35uaTg"
                            },
                            "article": {
                              "type": "article",
                              "uid": "162_207_1271_LJ03LBLUDN88_S",
                              "size": "S",
                              "seller": {
                                "uid": 162,
                                "name": "GO FASHION INDIA PRIVATE LIMITED"
                              },
                              "store": {
                                "uid": 5784,
                                "name": "Vega City mall"
                              },
                              "quantity": 3,
                              "price": {
                                "base": {
                                  "marked": 1599,
                                  "effective": 1599,
                                  "currency_code": "INR"
                                },
                                "converted": {
                                  "marked": 1599,
                                  "effective": 1599,
                                  "currency_code": "INR"
                                }
                              }
                            },
                            "price": {
                              "base": {
                                "add_on": 1599,
                                "marked": 1599,
                                "effective": 1599,
                                "selling": 1599,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "add_on": 1599,
                                "marked": 1599,
                                "effective": 1599,
                                "selling": 1599,
                                "currency_code": "INR"
                              }
                            },
                            "availability": {
                              "sizes": [
                                "XL",
                                "M",
                                "L",
                                "S"
                              ],
                              "other_store_quantity": 8,
                              "out_of_stock": false,
                              "deliverable": true,
                              "is_valid": true
                            },
                            "product": {
                              "type": "product",
                              "uid": 443175,
                              "name": "Light Blue Denim Jeggings",
                              "slug": "go-colors-light-blue-denim-jeggings-443175-3c688c",
                              "brand": {
                                "uid": 207,
                                "name": "Go Colors"
                              },
                              "categories": [
                                {
                                  "uid": 267,
                                  "name": "Jeggings"
                                }
                              ],
                              "images": [
                                {
                                  "aspect_ratio": "16:25",
                                  "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/207_LJ03LBLUDN88/1_1512382513548.jpg",
                                  "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/207_LJ03LBLUDN88/1_1512382513548.jpg"
                                }
                              ],
                              "action": {
                                "type": "product",
                                "url": "https://api.addsale.com/platform/content/v1/products/go-colors-light-blue-denim-jeggings-443175-3c688c/",
                                "query": {
                                  "product_slug": [
                                    "go-colors-light-blue-denim-jeggings-443175-3c688c"
                                  ]
                                }
                              }
                            },
                            "coupon_message": "",
                            "quantity": 1,
                            "message": "",
                            "bulk_offer": {},
                            "discount": ""
                          },
                          {
                            "key": "778937_OS",
                            "identifiers": {
                              "identifier": "5mPyy88URXuh3Lo35uaTg"
                            },
                            "article": {
                              "type": "article",
                              "uid": "686_963_IC68601_PWUPC01977_OS",
                              "size": "OS",
                              "seller": {
                                "uid": 686,
                                "name": "INDUS CORPORATION"
                              },
                              "store": {
                                "uid": 5059,
                                "name": "Vidyaranyapura Main Road"
                              },
                              "quantity": 3,
                              "price": {
                                "base": {
                                  "marked": 3399,
                                  "effective": 3059,
                                  "currency_code": "INR"
                                },
                                "converted": {
                                  "marked": 3399,
                                  "effective": 3059,
                                  "currency_code": "INR"
                                }
                              }
                            },
                            "price": {
                              "base": {
                                "add_on": 3059,
                                "marked": 3399,
                                "effective": 3059,
                                "selling": 3059,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "add_on": 3059,
                                "marked": 3399,
                                "effective": 3059,
                                "selling": 3059,
                                "currency_code": "INR"
                              }
                            },
                            "availability": {
                              "sizes": [
                                "OS"
                              ],
                              "other_store_quantity": 2,
                              "out_of_stock": false,
                              "deliverable": true,
                              "is_valid": true
                            },
                            "product": {
                              "type": "product",
                              "uid": 778937,
                              "name": "Colourful Carnival Bouncer",
                              "slug": "fisher-price-colourful-carnival-bouncer-778937-fafa1f",
                              "brand": {
                                "uid": 963,
                                "name": "Fisher-Price"
                              },
                              "categories": [
                                {
                                  "uid": 576,
                                  "name": "Cradles"
                                }
                              ],
                              "images": [
                                {
                                  "aspect_ratio": "16:25",
                                  "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/963_PWUPC01977/1_1545308400588.jpg",
                                  "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/963_PWUPC01977/1_1545308400588.jpg"
                                }
                              ],
                              "action": {
                                "type": "product",
                                "url": "https://api.addsale.com/platform/content/v1/products/fisher-price-colourful-carnival-bouncer-778937-fafa1f/",
                                "query": {
                                  "product_slug": [
                                    "fisher-price-colourful-carnival-bouncer-778937-fafa1f"
                                  ]
                                }
                              }
                            },
                            "coupon_message": "",
                            "quantity": 1,
                            "message": "",
                            "bulk_offer": {},
                            "discount": "11% OFF"
                          }
                        ],
                        "delivery_charge_info": "",
                        "coupon_text": "View all offers",
                        "buy_now": false,
                        "cart_id": 7927,
                        "uid": "7927",
                        "id": "65c06fe589db42581e4be72e",
                        "gstin": null,
                        "pan_no": null,
                        "message": "",
                        "checkout_mode": "self",
                        "last_modified": "2023-03-03T00:00:00.000Z",
                        "restrict_checkout": false,
                        "is_valid": true,
                        "custom_cart": {
                          "cart_name": "Universal",
                          "cart_type": "universal",
                          "id": "659e3b6b33848a683efebf2c",
                          "is_universal": true
                        },
                        "custom_cart_meta": {},
                        "pan_config": {},
                        "is_pan_received": false,
                        "payment_selection_lock": {
                          "default_options": "cod",
                          "payment_identifier": "cod",
                          "enabled": false
                        },
                        "notification": {},
                        "common_config": {
                          "delivery_charges_config": {
                            "enabled": true,
                            "charges": [
                              {
                                "threshold": 1499,
                                "charges": 99
                              }
                            ]
                          }
                        },
                        "price_adjustment_applied": [],
                        "coupon": {
                          "coupon_code": "",
                          "coupon_type": "cart",
                          "is_applied": false,
                          "is_valid": false,
                          "message": "Sorry! Invalid coupon",
                          "coupon_id": null,
                          "discount": 0,
                          "cashback_amount": 0,
                          "cashback_message_primary": "",
                          "cashback_message_secondary": "",
                          "coupon_title": "",
                          "coupon_subtitle": "",
                          "coupon_description": "",
                          "minimum_cart_value": 0,
                          "maximum_discount_value": 0,
                          "coupon_value": 0,
                          "medias": []
                        },
                        "delivery_promise": {},
                        "comment": "",
                        "currency": {
                          "code": "INR",
                          "symbol": "₹"
                        },
                        "success": true
                      },
                      "result": {},
                      "message": "Quantity of item updated",
                      "success": true
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Cart"
        ]
      }
    },
    "/service/application/cart/v1.0/cart_archive": {
      "put": {
        "summary": "deleteCart | Clears the cart",
        "description": "Delete all items from the user's cart and resets it to its initial state, providing a clean slate for new selections.",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The unique identifier of the cart.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "200_OKAY": {
                "value": "64aed3775b8d4da351584fa2"
              }
            }
          },
          {
            "in": "query",
            "name": "cart_type",
            "schema": {
              "type": "string",
              "enum": [
                "universal"
              ]
            },
            "description": "The type of cart"
          }
        ],
        "requestBody": {
          "description": "Specify cart id list to archive/delete carts. Refer `DeleteCartPayload` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteCartPayload"
              },
              "examples": {
                "200_OKAY": {
                  "value": {
                    "cart_id_list": [
                      "64aed3775b8d4da351584fa2"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Returns whether the cart has been deleted or not.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteCartDetailResult"
                },
                "examples": {
                  "200_OKAY": {
                    "value": {
                      "success": true,
                      "message": "cart archived"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Cart"
        ]
      }
    },
    "/service/application/cart/v1.0/basic": {
      "get": {
        "summary": "getItemCount | Count cart items.",
        "description": "Get total count of items currently present in the customer's cart.",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The unique identifier of the cart.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "200_OKAY": {
                "value": "65c06fe589db42581e4be72e"
              }
            }
          },
          {
            "in": "query",
            "name": "buy_now",
            "schema": {
              "type": "boolean"
            },
            "description": "Boolean value to get buy_now cart."
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns the total count of items in a user's cart.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartItemCountResult"
                },
                "examples": {
                  "200_OKAY": {
                    "value": {
                      "user_cart_items_count": 0
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Cart"
        ]
      }
    },
    "/service/application/cart/v2.0/basic": {
      "get": {
        "summary": "getItemCountV2 | Count items in the cart according to cart_type",
        "description": "Use this API to get the total number of items present in cart.",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The unique identifier of the cart",
            "schema": {
              "type": "string"
            },
            "examples": {
              "200_OKAY": {
                "value": "65c06fe589db42581e4be72e"
              }
            }
          },
          {
            "in": "query",
            "name": "buy_now",
            "schema": {
              "type": "boolean"
            },
            "description": "Boolean value to get buy_now cart"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns the total count of items in a user's cart.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartItemCountResultV2"
                },
                "examples": {
                  "200_OKAY": {
                    "value": {
                      "user_all_cart_articles_quantity_count": 7,
                      "user_all_cart_article_count": 2,
                      "custom_cart_count": {
                        "universal": {
                          "article_count": 1,
                          "article_quantity_count": 1
                        }
                      },
                      "custom_cart_ordered_count": [
                        {
                          "cart_name": "Universal",
                          "cart_type": "universal",
                          "article_quantity_count": 1
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Cart"
        ]
      }
    },
    "/service/application/cart/v1.0/coupon": {
      "get": {
        "summary": "getCoupons | List available coupons.",
        "description": "List all available coupons that customer can apply to their carts. It provides details about each coupon, including its code, discount amount, and applicable conditions.",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "examples": {
              "200_OKAY": {
                "value": "65c06fe589db42581e4be72e"
              },
              "400_ITEM_NOT_FOUND": {
                "value": "65c06fe589db42581e4be72e"
              }
            },
            "description": "The unique identifier of the cart."
          },
          {
            "in": "query",
            "name": "buy_now",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to get buy_now cart."
          },
          {
            "in": "query",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "examples": {
              "200_OKAY": {
                "value": "global-desi-aw19gbdst31blakblack-1077515-1f6956"
              },
              "400_ITEM_NOT_FOUND": {
                "value": "temp-slug"
              }
            },
            "description": "Product slug to fetch the available coupons."
          },
          {
            "in": "query",
            "name": "store_id",
            "schema": {
              "type": "string"
            },
            "description": "Unique identifier of a store."
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a coupon object which has a list of all the eligible coupons. Refer `GetCouponResult` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCouponResult"
                },
                "examples": {
                  "200_OKAY": {
                    "value": {
                      "available_coupon_list": [
                        {
                          "coupon_value": 500,
                          "minimum_cart_value": 0,
                          "coupon_code": "RAJA500",
                          "title": "RAJA500 | Fynd coupon",
                          "sub_title": "NA",
                          "message": "TEST500",
                          "max_discount_value": 500,
                          "uid": 17921,
                          "is_applicable": true,
                          "is_applied": false,
                          "expires_on": "28 Aug, 19"
                        },
                        {
                          "coupon_value": 2250,
                          "minimum_cart_value": 0,
                          "coupon_code": "PRISMC22250111",
                          "title": "celio 2 time coupn to kalim hsp",
                          "sub_title": "celio 2 time coupn to kalim hsp",
                          "message": "celio 2 time coupn to kalim hsp",
                          "max_discount_value": 2250,
                          "uid": 17743,
                          "is_applicable": true,
                          "is_applied": false,
                          "expires_on": "24 Jan, 20"
                        }
                      ],
                      "page": {
                        "current": 1,
                        "total": 0,
                        "has_previous": false,
                        "has_next": false,
                        "total_item_count": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Item not found for given product slug to fetch coupon",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "400_ITEM_NOT_FOUND": {
                    "value": {
                      "message": "Item not found"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Coupon"
        ]
      },
      "post": {
        "summary": "applyCoupon | Apply coupon.",
        "description": "Apply a coupon code to the cart to trigger discounts on eligible items.",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "i",
            "schema": {
              "type": "boolean"
            },
            "examples": {
              "200_COUPON_APPLIED": {
                "value": "true"
              }
            },
            "description": "Select `true` to retrieve all the items added in the cart."
          },
          {
            "in": "query",
            "name": "b",
            "schema": {
              "type": "boolean"
            },
            "description": "Select `true` to retrieve the price breakup of cart items."
          },
          {
            "in": "query",
            "name": "p",
            "schema": {
              "type": "boolean"
            },
            "description": "Select `true` for getting a payment option in response."
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "examples": {
              "200_COUPON_APPLIED": {
                "value": "65c06fe589db42581e4be72e"
              }
            },
            "description": "The unique identifier of the cart."
          },
          {
            "in": "query",
            "name": "buy_now",
            "schema": {
              "type": "boolean"
            },
            "examples": {
              "200_COUPON_APPLIED": {
                "value": "false"
              }
            },
            "description": "This is boolean to get buy_now cart."
          },
          {
            "in": "query",
            "name": "cart_type",
            "schema": {
              "type": "string",
              "enum": [
                "universal"
              ]
            },
            "description": "The type of cart."
          }
        ],
        "requestBody": {
          "description": "Pass coupon code in the request body as shown below.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplyCouponPayload"
              },
              "examples": {
                "200_COUPON_APPLIED": {
                  "value": {
                    "coupon_code": "t_flat_100"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Returns coupons applied to the cart along with item details and price breakup. Refer `CartDetailResult` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartDetailResult"
                },
                "examples": {
                  "200_COUPON_APPLIED": {
                    "value": {
                      "breakup_values": {
                        "raw": {
                          "cod_charge": 0,
                          "convenience_fee": 0,
                          "coupon": -2250,
                          "delivery_charge": 0,
                          "discount": -7240.2163,
                          "fynd_cash": 0,
                          "gift_card": 0,
                          "gst_charges": 2139.08,
                          "mrp_total": 26983,
                          "mop_total": 0,
                          "total_charge": 0,
                          "subtotal": 19742.7837,
                          "sub_total": 19742.7837,
                          "total": 17492.7837,
                          "vog": 15353.7,
                          "you_saved": 0,
                          "promotion": 0
                        },
                        "coupon": {
                          "type": "cash",
                          "coupon_type": "absolute",
                          "sub_title": "flat 100 off on spykar",
                          "title": "flat 100 off on spykar",
                          "minimum_cart_value": 500,
                          "coupon_value": 100,
                          "description": "flat 100 off on spykar",
                          "code": "T_FLAT_100",
                          "uid": "67e2a61e9eefe3de7ffadbf9",
                          "value": 100,
                          "is_applied": true,
                          "message": "coupon applied successfully"
                        },
                        "loyalty_points": {
                          "total": 0,
                          "applicable": 0,
                          "is_applied": false,
                          "message": "Reward point not applicable with Coupon",
                          "description": "Your cashback, referrals, and refund amount get credited to Fynd Cash which can be redeemed while placing an order."
                        },
                        "display": [
                          {
                            "display": "MRP Total",
                            "key": "mrp_total",
                            "value": 26983,
                            "currency_code": "INR"
                          },
                          {
                            "display": "Discount",
                            "key": "discount",
                            "value": -7240,
                            "currency_code": "INR"
                          },
                          {
                            "display": "Subtotal",
                            "key": "subtotal",
                            "value": 19743,
                            "currency_code": "INR"
                          },
                          {
                            "display": "Coupon",
                            "key": "coupon",
                            "value": -2250,
                            "currency_code": "INR"
                          },
                          {
                            "display": "Total",
                            "key": "total",
                            "value": 17493,
                            "currency_code": "INR"
                          }
                        ]
                      },
                      "price_adjustment_applied": [
                        {
                          "remove_articles": true,
                          "adjusted_value": {
                            "value": 10,
                            "currency_code": "INR",
                            "currency_symbol": "â‚¹"
                          },
                          "article_level_distribution": true,
                          "auto_remove": true,
                          "applied_articles_ids": [
                            "612_9_SE61201_19100302_10",
                            "46_235_TM62_M11029ONDSXNS_S"
                          ],
                          "message": "Processing Fee",
                          "_type": "charge",
                          "meta": {},
                          "restrictions": {
                            "post_order": {
                              "cancellation_order": true,
                              "return_order": true
                            }
                          },
                          "_id": "659e3b6b33848a683efebf2c"
                        }
                      ],
                      "applied_promo_details": [],
                      "items": [
                        {
                          "identifiers": {},
                          "availability": {
                            "sizes": [
                              "10"
                            ],
                            "other_store_quantity": 0,
                            "out_of_stock": false,
                            "deliverable": true,
                            "is_valid": true
                          },
                          "price_adjustment_applied": [
                            {
                              "adjusted_value": {
                                "value": 5,
                                "currency_code": "INR",
                                "currency_symbol": "â‚¹"
                              },
                              "article_level_distribution": true,
                              "article_id": "612_9_SE61201_19100302_10",
                              "applied_quantity": 4,
                              "meta": {}
                            }
                          ],
                          "product": {
                            "type": "product",
                            "uid": 751083,
                            "name": "Carson 2",
                            "slug": "puma-carson-2-751083-6ad98d",
                            "brand": {
                              "uid": 9,
                              "name": "Puma"
                            },
                            "categories": [
                              {
                                "uid": 165,
                                "name": "Outdoor Sports Shoes"
                              }
                            ],
                            "images": [
                              {
                                "aspect_ratio": "16:25",
                                "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/9_19100302/1_1542807042296.jpg",
                                "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/9_19100302/1_1542807042296.jpg"
                              }
                            ],
                            "action": {
                              "type": "product",
                              "url": "https://api.addsale.com/platform/content/v1/products/puma-carson-2-751083-6ad98d/",
                              "query": {
                                "product_slug": [
                                  "puma-carson-2-751083-6ad98d"
                                ]
                              }
                            }
                          },
                          "quantity": 4,
                          "discount": "41% OFF",
                          "price": {
                            "base": {
                              "add_on": 9596,
                              "marked": 15996,
                              "effective": 9596,
                              "selling": 9596,
                              "currency_code": "INR"
                            },
                            "converted": {
                              "add_on": 9596,
                              "marked": 15996,
                              "effective": 9596,
                              "selling": 9596,
                              "currency_code": "INR"
                            }
                          },
                          "message": "",
                          "bulk_offer": {},
                          "key": "751083_10",
                          "coupon_message": "",
                          "article": {
                            "type": "article",
                            "uid": "612_9_SE61201_19100302_10",
                            "size": "10",
                            "seller": {
                              "uid": 612,
                              "name": "SSR ENTERPRISE"
                            },
                            "store": {
                              "uid": 4431,
                              "name": "Motilal Nagar 1, Goregaon"
                            },
                            "quantity": 4,
                            "price": {
                              "base": {
                                "marked": 3999,
                                "effective": 2399,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "marked": 3999,
                                "effective": 2399,
                                "currency_code": "INR"
                              }
                            }
                          }
                        },
                        {
                          "identifiers": {},
                          "availability": {
                            "sizes": [
                              "L",
                              "M",
                              "S",
                              "XL",
                              "XXL"
                            ],
                            "other_store_quantity": 0,
                            "out_of_stock": false,
                            "deliverable": true,
                            "is_valid": true
                          },
                          "product": {
                            "type": "product",
                            "uid": 246228,
                            "name": "Blue Solid T-Shirt",
                            "slug": "superdry-blue-solid-t-shirt-2",
                            "brand": {
                              "uid": 235,
                              "name": "Superdry"
                            },
                            "categories": [
                              {
                                "uid": 192,
                                "name": "T-Shirts"
                              }
                            ],
                            "images": [
                              {
                                "aspect_ratio": "16:25",
                                "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/235_M11029ONDSXNS/1.jpg",
                                "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/235_M11029ONDSXNS/1.jpg"
                              }
                            ],
                            "action": {
                              "type": "product",
                              "url": "https://api.addsale.com/platform/content/v1/products/superdry-blue-solid-t-shirt-2/",
                              "query": {
                                "product_slug": [
                                  "superdry-blue-solid-t-shirt-2"
                                ]
                              }
                            }
                          },
                          "quantity": 1,
                          "discount": "",
                          "price": {
                            "base": {
                              "add_on": 4490,
                              "marked": 4490,
                              "effective": 4490,
                              "selling": 4490,
                              "currency_code": "INR"
                            },
                            "converted": {
                              "add_on": 4490,
                              "marked": 4490,
                              "effective": 4490,
                              "selling": 4490,
                              "currency_code": "INR"
                            }
                          },
                          "message": "",
                          "bulk_offer": {},
                          "key": "246228_S",
                          "coupon_message": "",
                          "article": {
                            "type": "article",
                            "uid": "46_235_TM62_M11029ONDSXNS_S",
                            "size": "S",
                            "seller": {
                              "uid": 46,
                              "name": "RELIANCE BRANDS LIMITED"
                            },
                            "store": {
                              "uid": 4550,
                              "name": "VR Mall"
                            },
                            "quantity": 1,
                            "price": {
                              "base": {
                                "marked": 4490,
                                "effective": 4490,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "marked": 4490,
                                "effective": 4490,
                                "currency_code": "INR"
                              }
                            }
                          }
                        },
                        {
                          "identifiers": {},
                          "availability": {
                            "sizes": [
                              "XL",
                              "M",
                              "L",
                              "S"
                            ],
                            "other_store_quantity": 8,
                            "out_of_stock": false,
                            "deliverable": true,
                            "is_valid": true
                          },
                          "product": {
                            "type": "product",
                            "uid": 443175,
                            "name": "Light Blue Denim Jeggings",
                            "slug": "go-colors-light-blue-denim-jeggings-443175-3c688c",
                            "brand": {
                              "uid": 207,
                              "name": "Go Colors"
                            },
                            "categories": [
                              {
                                "uid": 267,
                                "name": "Jeggings"
                              }
                            ],
                            "images": [
                              {
                                "aspect_ratio": "16:25",
                                "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/207_LJ03LBLUDN88/1_1512382513548.jpg",
                                "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/207_LJ03LBLUDN88/1_1512382513548.jpg"
                              }
                            ],
                            "action": {
                              "type": "product",
                              "url": "https://api.addsale.com/platform/content/v1/products/go-colors-light-blue-denim-jeggings-443175-3c688c/",
                              "query": {
                                "product_slug": [
                                  "go-colors-light-blue-denim-jeggings-443175-3c688c"
                                ]
                              }
                            }
                          },
                          "quantity": 1,
                          "discount": "",
                          "price": {
                            "base": {
                              "add_on": 1599,
                              "marked": 1599,
                              "effective": 1599,
                              "selling": 1599,
                              "currency_code": "INR"
                            },
                            "converted": {
                              "add_on": 1599,
                              "marked": 1599,
                              "effective": 1599,
                              "selling": 1599,
                              "currency_code": "INR"
                            }
                          },
                          "message": "",
                          "bulk_offer": {},
                          "key": "443175_S",
                          "coupon_message": "",
                          "article": {
                            "type": "article",
                            "uid": "162_207_1271_LJ03LBLUDN88_S",
                            "size": "S",
                            "seller": {
                              "uid": 162,
                              "name": "GO FASHION INDIA PRIVATE LIMITED"
                            },
                            "store": {
                              "uid": 5784,
                              "name": "Vega City mall"
                            },
                            "quantity": 3,
                            "price": {
                              "base": {
                                "marked": 1599,
                                "effective": 1599,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "marked": 1599,
                                "effective": 1599,
                                "currency_code": "INR"
                              }
                            }
                          }
                        },
                        {
                          "identifiers": {},
                          "availability": {
                            "sizes": [
                              "OS"
                            ],
                            "other_store_quantity": 12,
                            "out_of_stock": false,
                            "deliverable": true,
                            "is_valid": true
                          },
                          "product": {
                            "type": "product",
                            "uid": 842716,
                            "name": "Blue Backpack",
                            "slug": "istorm-blue-backpack-842716-951b5a",
                            "brand": {
                              "uid": 1177,
                              "name": "iStorm"
                            },
                            "categories": [
                              {
                                "uid": 198,
                                "name": "Backpacks"
                              }
                            ],
                            "images": [
                              {
                                "aspect_ratio": "16:25",
                                "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/1177_IS483/1_1551353288247.jpg",
                                "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/1177_IS483/1_1551353288247.jpg"
                              }
                            ],
                            "action": {
                              "type": "product",
                              "url": "https://api.addsale.com/platform/content/v1/products/istorm-blue-backpack-842716-951b5a/",
                              "query": {
                                "product_slug": [
                                  "istorm-blue-backpack-842716-951b5a"
                                ]
                              }
                            }
                          },
                          "quantity": 1,
                          "discount": "34% OFF",
                          "price": {
                            "base": {
                              "add_on": 998.7837,
                              "marked": 1499,
                              "effective": 998.7837,
                              "selling": 998.7837,
                              "currency_code": "INR"
                            },
                            "converted": {
                              "add_on": 998.7837,
                              "marked": 1499,
                              "effective": 998.7837,
                              "selling": 998.7837,
                              "currency_code": "INR"
                            }
                          },
                          "message": "",
                          "bulk_offer": {},
                          "key": "842716_OS",
                          "coupon_message": "",
                          "article": {
                            "type": "article",
                            "uid": "638_1177_CRSL63802_IS483_OS",
                            "size": "OS",
                            "seller": {
                              "uid": 638,
                              "name": "COUNFREEDISE RETAIL SERVICES LTD"
                            },
                            "store": {
                              "uid": 4630,
                              "name": "Bhiwandi"
                            },
                            "quantity": 4,
                            "price": {
                              "base": {
                                "marked": 1499,
                                "effective": 998.7837,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "marked": 1499,
                                "effective": 998.7837,
                                "currency_code": "INR"
                              }
                            }
                          }
                        },
                        {
                          "identifiers": {},
                          "availability": {
                            "sizes": [
                              "OS"
                            ],
                            "other_store_quantity": 2,
                            "out_of_stock": false,
                            "deliverable": true,
                            "is_valid": true
                          },
                          "product": {
                            "type": "product",
                            "uid": 778937,
                            "name": "Colourful Carnival Bouncer",
                            "slug": "fisher-price-colourful-carnival-bouncer-778937-fafa1f",
                            "brand": {
                              "uid": 963,
                              "name": "Fisher-Price"
                            },
                            "categories": [
                              {
                                "uid": 576,
                                "name": "Cradles"
                              }
                            ],
                            "images": [
                              {
                                "aspect_ratio": "16:25",
                                "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/963_PWUPC01977/1_1545308400588.jpg",
                                "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/963_PWUPC01977/1_1545308400588.jpg"
                              }
                            ],
                            "action": {
                              "type": "product",
                              "url": "https://api.addsale.com/platform/content/v1/products/fisher-price-colourful-carnival-bouncer-778937-fafa1f/",
                              "query": {
                                "product_slug": [
                                  "fisher-price-colourful-carnival-bouncer-778937-fafa1f"
                                ]
                              }
                            }
                          },
                          "quantity": 1,
                          "discount": "11% OFF",
                          "price": {
                            "base": {
                              "add_on": 3059,
                              "marked": 3399,
                              "effective": 3059,
                              "selling": 3059,
                              "currency_code": "INR"
                            },
                            "converted": {
                              "add_on": 3059,
                              "marked": 3399,
                              "effective": 3059,
                              "selling": 3059,
                              "currency_code": "INR"
                            }
                          },
                          "message": "",
                          "bulk_offer": {},
                          "key": "778937_OS",
                          "coupon_message": "",
                          "article": {
                            "type": "article",
                            "uid": "686_963_IC68601_PWUPC01977_OS",
                            "size": "OS",
                            "seller": {
                              "uid": 686,
                              "name": "INDUS CORPORATION"
                            },
                            "store": {
                              "uid": 5059,
                              "name": "Vidyaranyapura Main Road"
                            },
                            "quantity": 3,
                            "price": {
                              "base": {
                                "marked": 3399,
                                "effective": 3059,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "marked": 3399,
                                "effective": 3059,
                                "currency_code": "INR"
                              }
                            }
                          }
                        }
                      ],
                      "delivery_charge_info": "",
                      "coupon_text": "View all offers",
                      "buy_now": false,
                      "cart_id": 7927,
                      "uid": "7927",
                      "id": "65c06fe589db42581e4be72e",
                      "gstin": null,
                      "pan_no": null,
                      "message": "",
                      "checkout_mode": "self",
                      "last_modified": "2023-03-03T00:00:00.000Z",
                      "restrict_checkout": false,
                      "is_valid": true,
                      "custom_cart_meta": {},
                      "pan_config": {},
                      "is_pan_received": false,
                      "payment_selection_lock": {
                        "default_options": "cod",
                        "payment_identifier": "cod",
                        "enabled": false
                      },
                      "notification": {},
                      "common_config": {
                        "delivery_charges_config": {
                          "enabled": true,
                          "charges": [
                            {
                              "threshold": 1499,
                              "charges": 99
                            }
                          ]
                        }
                      },
                      "custom_cart": {
                        "cart_name": "Universal",
                        "cart_type": "universal",
                        "id": "659e3b6b33848a683efebf2c",
                        "is_universal": true
                      },
                      "coupon": {
                        "coupon_code": "t_flat_100",
                        "coupon_type": "absolute",
                        "is_applied": true,
                        "is_valid": true,
                        "message": "coupon applied successfully",
                        "coupon_id": "67e2a61e9eefe3de7ffadbf9",
                        "discount": 100,
                        "cashback_amount": 0,
                        "cashback_message_primary": "",
                        "cashback_message_secondary": "",
                        "coupon_title": "flat 100 off on spykar",
                        "coupon_subtitle": "flat 100 off on spykar",
                        "coupon_description": "flat 100 off on spykar",
                        "minimum_cart_value": 500,
                        "maximum_discount_value": 0,
                        "coupon_value": 100,
                        "medias": []
                      },
                      "delivery_promise": {},
                      "comment": "",
                      "currency": {
                        "code": "INR",
                        "symbol": "₹"
                      },
                      "success": true
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Coupon"
        ]
      },
      "delete": {
        "summary": "removeCoupon | Remove coupon.",
        "description": "Remove an applied coupon from the customer's cart, thereby removing the associated discount from the cart total.",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "examples": {
              "200_COUPON_REMOVED": {
                "value": "65c06fe589db42581e4be72e"
              }
            },
            "description": "The unique identifier of the cart."
          },
          {
            "in": "query",
            "name": "buy_now",
            "schema": {
              "type": "boolean"
            },
            "description": "Wheter to get buy_now cart.",
            "examples": {
              "200_COUPON_REMOVED": {
                "value": "false"
              }
            }
          },
          {
            "in": "query",
            "name": "cart_type",
            "schema": {
              "type": "string",
              "enum": [
                "universal"
              ]
            },
            "description": "The type of cart"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns coupons removed from the cart along with item details and price breakup. Refer `CartDetailResult` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartDetailResult"
                },
                "examples": {
                  "200_COUPON_REMOVED": {
                    "value": {
                      "breakup_values": {
                        "raw": {
                          "cod_charge": 0,
                          "convenience_fee": 0,
                          "coupon": -2250,
                          "delivery_charge": 0,
                          "discount": -7240.2163,
                          "fynd_cash": 0,
                          "gift_card": 0,
                          "gst_charges": 2139.08,
                          "mrp_total": 26983,
                          "mop_total": 0,
                          "total_charge": 0,
                          "subtotal": 19742.7837,
                          "sub_total": 19742.7837,
                          "total": 17492.7837,
                          "vog": 15353.7,
                          "you_saved": 0,
                          "promotion": 0
                        },
                        "coupon": {
                          "coupon_value": 0,
                          "type": "cash",
                          "minimum_cart_value": 0,
                          "is_applied": false,
                          "sub_title": "",
                          "message": "Coupon successfully removed",
                          "title": "",
                          "coupon_type": "cart",
                          "code": "",
                          "value": 0,
                          "uid": null,
                          "description": ""
                        },
                        "loyalty_points": {
                          "total": 0,
                          "applicable": 0,
                          "is_applied": false,
                          "message": "Reward point not applicable with Coupon",
                          "description": "Your cashback, referrals, and refund amount get credited to Fynd Cash which can be redeemed while placing an order."
                        },
                        "display": [
                          {
                            "display": "MRP Total",
                            "key": "mrp_total",
                            "value": 26983,
                            "currency_code": "INR"
                          },
                          {
                            "display": "Discount",
                            "key": "discount",
                            "value": -7240,
                            "currency_code": "INR"
                          },
                          {
                            "display": "Subtotal",
                            "key": "subtotal",
                            "value": 19743,
                            "currency_code": "INR"
                          },
                          {
                            "display": "Coupon",
                            "key": "coupon",
                            "value": -2250,
                            "currency_code": "INR"
                          },
                          {
                            "display": "Total",
                            "key": "total",
                            "value": 17493,
                            "currency_code": "INR"
                          }
                        ]
                      },
                      "price_adjustment_applied": [
                        {
                          "remove_articles": true,
                          "adjusted_value": {
                            "value": 10,
                            "currency_code": "INR",
                            "currency_symbol": "â‚¹"
                          },
                          "article_level_distribution": true,
                          "auto_remove": true,
                          "applied_articles_ids": [
                            "612_9_SE61201_19100302_10",
                            "46_235_TM62_M11029ONDSXNS_S"
                          ],
                          "message": "Processing Fee",
                          "_type": "charge",
                          "meta": {},
                          "restrictions": {
                            "post_order": {
                              "cancellation_order": true,
                              "return_order": true
                            }
                          },
                          "_id": "659e3b6b33848a683efebf2c"
                        }
                      ],
                      "items": [
                        {
                          "identifiers": {},
                          "availability": {
                            "sizes": [
                              "10"
                            ],
                            "other_store_quantity": 0,
                            "out_of_stock": false,
                            "deliverable": true,
                            "is_valid": true
                          },
                          "price_adjustment_applied": [
                            {
                              "adjusted_value": {
                                "value": 5,
                                "currency_code": "INR",
                                "currency_symbol": "â‚¹"
                              },
                              "article_level_distribution": true,
                              "article_id": "612_9_SE61201_19100302_10",
                              "applied_quantity": 4,
                              "meta": {}
                            }
                          ],
                          "product": {
                            "type": "product",
                            "uid": 751083,
                            "name": "Carson 2",
                            "slug": "puma-carson-2-751083-6ad98d",
                            "brand": {
                              "uid": 9,
                              "name": "Puma"
                            },
                            "categories": [
                              {
                                "uid": 165,
                                "name": "Outdoor Sports Shoes"
                              }
                            ],
                            "images": [
                              {
                                "aspect_ratio": "16:25",
                                "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/9_19100302/1_1542807042296.jpg",
                                "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/9_19100302/1_1542807042296.jpg"
                              }
                            ],
                            "action": {
                              "type": "product",
                              "url": "https://api.addsale.com/platform/content/v1/products/puma-carson-2-751083-6ad98d/",
                              "query": {
                                "product_slug": [
                                  "puma-carson-2-751083-6ad98d"
                                ]
                              }
                            }
                          },
                          "quantity": 4,
                          "discount": "41% OFF",
                          "price": {
                            "base": {
                              "add_on": 9596,
                              "marked": 15996,
                              "effective": 9596,
                              "selling": 9596,
                              "currency_code": "INR"
                            },
                            "converted": {
                              "add_on": 9596,
                              "marked": 15996,
                              "effective": 9596,
                              "selling": 9596,
                              "currency_code": "INR"
                            }
                          },
                          "message": "",
                          "bulk_offer": {},
                          "key": "751083_10",
                          "coupon_message": "",
                          "article": {
                            "type": "article",
                            "uid": "612_9_SE61201_19100302_10",
                            "size": "10",
                            "seller": {
                              "uid": 612,
                              "name": "SSR ENTERPRISE"
                            },
                            "store": {
                              "uid": 4431,
                              "name": "Motilal Nagar 1, Goregaon"
                            },
                            "quantity": 4,
                            "price": {
                              "base": {
                                "marked": 3999,
                                "effective": 2399,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "marked": 3999,
                                "effective": 2399,
                                "currency_code": "INR"
                              }
                            }
                          }
                        },
                        {
                          "identifiers": {},
                          "availability": {
                            "sizes": [
                              "L",
                              "M",
                              "S",
                              "XL",
                              "XXL"
                            ],
                            "other_store_quantity": 0,
                            "out_of_stock": false,
                            "deliverable": true,
                            "is_valid": true
                          },
                          "price_adjustment_applied": [
                            {
                              "adjusted_value": {
                                "value": 5,
                                "currency_code": "INR",
                                "currency_symbol": "â‚¹"
                              },
                              "article_level_distribution": true,
                              "article_id": "46_235_TM62_M11029ONDSXNS_S",
                              "applied_quantity": 1,
                              "meta": {}
                            }
                          ],
                          "product": {
                            "type": "product",
                            "uid": 246228,
                            "name": "Blue Solid T-Shirt",
                            "slug": "superdry-blue-solid-t-shirt-2",
                            "brand": {
                              "uid": 235,
                              "name": "Superdry"
                            },
                            "categories": [
                              {
                                "uid": 192,
                                "name": "T-Shirts"
                              }
                            ],
                            "images": [
                              {
                                "aspect_ratio": "16:25",
                                "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/235_M11029ONDSXNS/1.jpg",
                                "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/235_M11029ONDSXNS/1.jpg"
                              }
                            ],
                            "action": {
                              "type": "product",
                              "url": "https://api.addsale.com/platform/content/v1/products/superdry-blue-solid-t-shirt-2/",
                              "query": {
                                "product_slug": [
                                  "superdry-blue-solid-t-shirt-2"
                                ]
                              }
                            }
                          },
                          "quantity": 1,
                          "discount": "",
                          "price": {
                            "base": {
                              "add_on": 4490,
                              "marked": 4490,
                              "effective": 4490,
                              "selling": 4490,
                              "currency_code": "INR"
                            },
                            "converted": {
                              "add_on": 4490,
                              "marked": 4490,
                              "effective": 4490,
                              "selling": 4490,
                              "currency_code": "INR"
                            }
                          },
                          "message": "",
                          "bulk_offer": {},
                          "key": "246228_S",
                          "coupon_message": "",
                          "article": {
                            "type": "article",
                            "uid": "46_235_TM62_M11029ONDSXNS_S",
                            "size": "S",
                            "seller": {
                              "uid": 46,
                              "name": "RELIANCE BRANDS LIMITED"
                            },
                            "store": {
                              "uid": 4550,
                              "name": "VR Mall"
                            },
                            "quantity": 1,
                            "price": {
                              "base": {
                                "marked": 4490,
                                "effective": 4490,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "marked": 4490,
                                "effective": 4490,
                                "currency_code": "INR"
                              }
                            }
                          }
                        },
                        {
                          "identifiers": {},
                          "availability": {
                            "sizes": [
                              "XL",
                              "M",
                              "L",
                              "S"
                            ],
                            "other_store_quantity": 8,
                            "out_of_stock": false,
                            "deliverable": true,
                            "is_valid": true
                          },
                          "product": {
                            "type": "product",
                            "uid": 443175,
                            "name": "Light Blue Denim Jeggings",
                            "slug": "go-colors-light-blue-denim-jeggings-443175-3c688c",
                            "brand": {
                              "uid": 207,
                              "name": "Go Colors"
                            },
                            "categories": [
                              {
                                "uid": 267,
                                "name": "Jeggings"
                              }
                            ],
                            "images": [
                              {
                                "aspect_ratio": "16:25",
                                "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/207_LJ03LBLUDN88/1_1512382513548.jpg",
                                "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/207_LJ03LBLUDN88/1_1512382513548.jpg"
                              }
                            ],
                            "action": {
                              "type": "product",
                              "url": "https://api.addsale.com/platform/content/v1/products/go-colors-light-blue-denim-jeggings-443175-3c688c/",
                              "query": {
                                "product_slug": [
                                  "go-colors-light-blue-denim-jeggings-443175-3c688c"
                                ]
                              }
                            }
                          },
                          "quantity": 1,
                          "discount": "",
                          "price": {
                            "base": {
                              "add_on": 1599,
                              "marked": 1599,
                              "effective": 1599,
                              "selling": 1599,
                              "currency_code": "INR"
                            },
                            "converted": {
                              "add_on": 1599,
                              "marked": 1599,
                              "effective": 1599,
                              "selling": 1599,
                              "currency_code": "INR"
                            }
                          },
                          "message": "",
                          "bulk_offer": {},
                          "key": "443175_S",
                          "coupon_message": "",
                          "article": {
                            "type": "article",
                            "uid": "162_207_1271_LJ03LBLUDN88_S",
                            "size": "S",
                            "seller": {
                              "uid": 162,
                              "name": "GO FASHION INDIA PRIVATE LIMITED"
                            },
                            "store": {
                              "uid": 5784,
                              "name": "Vega City mall"
                            },
                            "quantity": 3,
                            "price": {
                              "base": {
                                "marked": 1599,
                                "effective": 1599,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "marked": 1599,
                                "effective": 1599,
                                "currency_code": "INR"
                              }
                            }
                          }
                        },
                        {
                          "identifiers": {},
                          "availability": {
                            "sizes": [
                              "OS"
                            ],
                            "other_store_quantity": 12,
                            "out_of_stock": false,
                            "deliverable": true,
                            "is_valid": true
                          },
                          "product": {
                            "type": "product",
                            "uid": 842716,
                            "name": "Blue Backpack",
                            "slug": "istorm-blue-backpack-842716-951b5a",
                            "brand": {
                              "uid": 1177,
                              "name": "iStorm"
                            },
                            "categories": [
                              {
                                "uid": 198,
                                "name": "Backpacks"
                              }
                            ],
                            "images": [
                              {
                                "aspect_ratio": "16:25",
                                "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/1177_IS483/1_1551353288247.jpg",
                                "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/1177_IS483/1_1551353288247.jpg"
                              }
                            ],
                            "action": {
                              "type": "product",
                              "url": "https://api.addsale.com/platform/content/v1/products/istorm-blue-backpack-842716-951b5a/",
                              "query": {
                                "product_slug": [
                                  "istorm-blue-backpack-842716-951b5a"
                                ]
                              }
                            }
                          },
                          "quantity": 1,
                          "discount": "34% OFF",
                          "price": {
                            "base": {
                              "add_on": 998.7837,
                              "marked": 1499,
                              "effective": 998.7837,
                              "selling": 998.7837,
                              "currency_code": "INR"
                            },
                            "converted": {
                              "add_on": 998.7837,
                              "marked": 1499,
                              "effective": 998.7837,
                              "selling": 998.7837,
                              "currency_code": "INR"
                            }
                          },
                          "message": "",
                          "bulk_offer": {},
                          "key": "842716_OS",
                          "coupon_message": "",
                          "article": {
                            "type": "article",
                            "uid": "638_1177_CRSL63802_IS483_OS",
                            "size": "OS",
                            "seller": {
                              "uid": 638,
                              "name": "COUNFREEDISE RETAIL SERVICES LTD"
                            },
                            "store": {
                              "uid": 4630,
                              "name": "Bhiwandi"
                            },
                            "quantity": 4,
                            "price": {
                              "base": {
                                "marked": 1499,
                                "effective": 998.7837,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "marked": 1499,
                                "effective": 998.7837,
                                "currency_code": "INR"
                              }
                            }
                          }
                        },
                        {
                          "identifiers": {},
                          "availability": {
                            "sizes": [
                              "OS"
                            ],
                            "other_store_quantity": 2,
                            "out_of_stock": false,
                            "deliverable": true,
                            "is_valid": true
                          },
                          "product": {
                            "type": "product",
                            "uid": 778937,
                            "name": "Colourful Carnival Bouncer",
                            "slug": "fisher-price-colourful-carnival-bouncer-778937-fafa1f",
                            "brand": {
                              "uid": 963,
                              "name": "Fisher-Price"
                            },
                            "categories": [
                              {
                                "uid": 576,
                                "name": "Cradles"
                              }
                            ],
                            "images": [
                              {
                                "aspect_ratio": "16:25",
                                "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/963_PWUPC01977/1_1545308400588.jpg",
                                "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/963_PWUPC01977/1_1545308400588.jpg"
                              }
                            ],
                            "action": {
                              "type": "product",
                              "url": "https://api.addsale.com/platform/content/v1/products/fisher-price-colourful-carnival-bouncer-778937-fafa1f/",
                              "query": {
                                "product_slug": [
                                  "fisher-price-colourful-carnival-bouncer-778937-fafa1f"
                                ]
                              }
                            }
                          },
                          "quantity": 1,
                          "discount": "11% OFF",
                          "price": {
                            "base": {
                              "add_on": 3059,
                              "marked": 3399,
                              "effective": 3059,
                              "selling": 3059,
                              "currency_code": "INR"
                            },
                            "converted": {
                              "add_on": 3059,
                              "marked": 3399,
                              "effective": 3059,
                              "selling": 3059,
                              "currency_code": "INR"
                            }
                          },
                          "message": "",
                          "bulk_offer": {},
                          "key": "778937_OS",
                          "coupon_message": "",
                          "article": {
                            "type": "article",
                            "uid": "686_963_IC68601_PWUPC01977_OS",
                            "size": "OS",
                            "seller": {
                              "uid": 686,
                              "name": "INDUS CORPORATION"
                            },
                            "store": {
                              "uid": 5059,
                              "name": "Vidyaranyapura Main Road"
                            },
                            "quantity": 3,
                            "price": {
                              "base": {
                                "marked": 3399,
                                "effective": 3059,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "marked": 3399,
                                "effective": 3059,
                                "currency_code": "INR"
                              }
                            }
                          }
                        }
                      ],
                      "delivery_charge_info": "",
                      "coupon_text": "View all offers",
                      "buy_now": false,
                      "cart_id": 7927,
                      "uid": "7927",
                      "id": "65c06fe589db42581e4be72e",
                      "gstin": null,
                      "pan_no": null,
                      "message": "",
                      "checkout_mode": "self",
                      "last_modified": "2023-03-03T00:00:00.000Z",
                      "restrict_checkout": false,
                      "is_valid": true,
                      "custom_cart_meta": {},
                      "pan_config": {},
                      "is_pan_received": false,
                      "payment_selection_lock": {
                        "default_options": "cod",
                        "payment_identifier": "cod",
                        "enabled": false
                      },
                      "notification": {},
                      "common_config": {
                        "delivery_charges_config": {
                          "enabled": true,
                          "charges": [
                            {
                              "threshold": 1499,
                              "charges": 99
                            }
                          ]
                        }
                      },
                      "applied_promo_details": [],
                      "coupon": {
                        "coupon_code": "",
                        "coupon_type": "cart",
                        "is_applied": false,
                        "is_valid": false,
                        "message": "Sorry! Invalid coupon",
                        "coupon_id": null,
                        "discount": 0,
                        "cashback_amount": 0,
                        "cashback_message_primary": "",
                        "cashback_message_secondary": "",
                        "coupon_title": "",
                        "coupon_subtitle": "",
                        "coupon_description": "",
                        "minimum_cart_value": 0,
                        "maximum_discount_value": 0,
                        "coupon_value": 0,
                        "medias": []
                      },
                      "custom_cart": {
                        "cart_name": "Universal",
                        "cart_type": "universal",
                        "id": "659e3b6b33848a683efebf2c",
                        "is_universal": true
                      },
                      "delivery_promise": {},
                      "comment": "",
                      "currency": {
                        "code": "INR",
                        "symbol": "₹"
                      },
                      "success": true
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Coupon"
        ]
      }
    },
    "/service/application/cart/v1.0/bulk-price": {
      "get": {
        "summary": "getBulkDiscountOffers | List bulk discounts",
        "description": "List offer discounts with information about quantity and seller. One offer is marked with a \"best\" flag, indicating it as the best offer among the list.",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "name": "item_id",
            "description": "The Item ID of the product.",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "examples": {
              "Offers found": {
                "value": 1077515
              },
              "Item not found": {
                "value": 1055555
              }
            }
          },
          {
            "name": "article_id",
            "description": "Article Mongo ID.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Offers found": {
                "value": "5f574baac55aff75976c6efe"
              },
              "Item not found": {
                "value": "5f92ac427715e600016115f1"
              }
            }
          },
          {
            "name": "uid",
            "description": "UID of the product.",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "examples": {
              "Offers found": {
                "value": 1077515
              },
              "Item not found": {
                "value": 1055555
              }
            }
          },
          {
            "name": "slug",
            "description": "A short, human-readable, URL-friendly identifier of a product.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Offers found": {
                "value": "global-desi-aw19gbdst31blakblack-1077515-1f6956"
              },
              "Item not found": {
                "value": "xyz"
              }
            }
          },
          {
            "name": "cart_type",
            "description": "type of the cart",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "universal"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a data object containing the seller details and available offers (if exists) on bulk products. Refer `BulkPriceResult` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkPriceResult"
                },
                "examples": {
                  "Offers found": {
                    "value": {
                      "data": [
                        {
                          "seller": {
                            "uid": 248,
                            "name": "MANYAVAR CREATIONS PRIVATE LIMITED"
                          },
                          "offers": [
                            {
                              "quantity": 1,
                              "auto_applied": true,
                              "margin": 10,
                              "type": "bundle",
                              "price": {
                                "marked": 3999,
                                "effective": 3999,
                                "bulk_effective": 3599.1,
                                "currency_code": "INR"
                              },
                              "total": 3599.1
                            },
                            {
                              "quantity": 3,
                              "auto_applied": true,
                              "margin": 20,
                              "type": "bundle",
                              "price": {
                                "marked": 3999,
                                "effective": 3999,
                                "bulk_effective": 3199.2,
                                "currency_code": "INR"
                              },
                              "total": 9597.6
                            },
                            {
                              "quantity": 9,
                              "auto_applied": true,
                              "margin": 30,
                              "type": "bundle",
                              "price": {
                                "marked": 3999,
                                "effective": 3999,
                                "bulk_effective": 3443.4444444444,
                                "currency_code": "INR"
                              },
                              "total": 30991,
                              "best": true
                            }
                          ],
                          "article_id": ""
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Success. Returns a data object containing the seller details and available offers (if exists) on bulk products. Refer `BulkPriceResult` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Item not found": {
                    "value": {
                      "message": "Item not found"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Coupon"
        ]
      }
    },
    "/service/application/cart/v1.0/redeem/points/": {
      "post": {
        "summary": "applyRewardPoints | Use reward points.",
        "description": "Users can redeem their accumulated reward points and apply them to the items in their cart, thereby availing discounts on their current purchases.",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "The unique identifier of the cart.",
            "examples": {
              "Fetch Reward Points": {
                "value": "65c06fe589db42581e4be72e"
              }
            }
          },
          {
            "in": "query",
            "name": "i",
            "schema": {
              "type": "boolean"
            },
            "examples": {
              "Fetch Reward Points": {
                "value": "true"
              }
            },
            "description": "Select `true` to retrieve all the items added in the cart."
          },
          {
            "in": "query",
            "name": "b",
            "schema": {
              "type": "boolean"
            },
            "description": "Select `true` to retrieve the price breakup of cart items."
          },
          {
            "in": "query",
            "name": "buy_now",
            "schema": {
              "type": "boolean"
            },
            "description": "This is boolean to get buy_now cart.",
            "examples": {
              "Fetch Reward Points": {
                "value": "false"
              }
            }
          },
          {
            "name": "cart_type",
            "description": "type of the cart",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "universal"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "Check the example shown below or refer `RewardPointPayloadSchema` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RewardPointPayload"
              },
              "examples": {
                "Fetch Reward Points": {
                  "value": {
                    "points": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Returns a Cart object. Check the example shown below or refer `CartDetailResult` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartDetailResult"
                },
                "examples": {
                  "Fetch Reward Points": {
                    "value": {
                      "breakup_values": {
                        "display": [
                          {
                            "display": "MRP Total",
                            "key": "mrp_total",
                            "value": 17486,
                            "currency_code": "INR"
                          },
                          {
                            "display": "Discount",
                            "key": "discount",
                            "value": -3540,
                            "currency_code": "INR"
                          },
                          {
                            "display": "Subtotal",
                            "key": "subtotal",
                            "value": 13946,
                            "currency_code": "INR"
                          },
                          {
                            "display": "Total",
                            "key": "total",
                            "value": 13946,
                            "currency_code": "INR"
                          }
                        ],
                        "raw": {
                          "cod_charge": 0,
                          "convenience_fee": 0,
                          "coupon": 0,
                          "delivery_charge": 0,
                          "discount": -3540,
                          "fynd_cash": 0,
                          "gift_card": 0,
                          "gst_charges": 1529.96,
                          "mrp_total": 17486,
                          "mop_total": 0,
                          "total_charge": 0,
                          "subtotal": 13946,
                          "sub_total": 13946,
                          "total": 13946,
                          "vog": 12416.04,
                          "you_saved": 0,
                          "promotion": 0
                        },
                        "loyalty_points": {
                          "total": 0,
                          "applicable": 0,
                          "is_applied": false,
                          "message": "Reward point not applicable with Coupon",
                          "description": "Your cashback, referrals, and refund amount get credited to Fynd Cash which can be redeemed while placing an order."
                        },
                        "coupon": {
                          "type": "cash",
                          "coupon_type": "cart",
                          "sub_title": "",
                          "title": "",
                          "minimum_cart_value": 0,
                          "coupon_value": 0,
                          "description": "",
                          "code": "",
                          "uid": null,
                          "value": 0,
                          "is_applied": false,
                          "message": "Sorry! Invalid Coupon"
                        }
                      },
                      "applied_promo_details": [
                        {
                          "offer_text": "HK-split-1",
                          "offer_label": "HK-split-1",
                          "discount_rules": [
                            {
                              "raw_offer": {
                                "discount_type": "percentage",
                                "offer": {
                                  "max_offer_quantity": 1,
                                  "discount_percentage": 10
                                },
                                "item_criteria": {
                                  "buy_rules": [
                                    "rule#1"
                                  ]
                                },
                                "buy_condition": "rule#1"
                              },
                              "item_criteria": {
                                "buy_rules": [
                                  "rule#1"
                                ]
                              },
                              "offer": {
                                "max_offer_quantity": 1,
                                "discount_percentage": 10
                              },
                              "matched_buy_rules": [
                                "rule#1"
                              ]
                            }
                          ],
                          "ownership": {
                            "payable_category": "seller",
                            "payable_by": ""
                          },
                          "return_allowed": true,
                          "promotion_name": "HK-split-1",
                          "meta": {},
                          "cancellation_allowed": true,
                          "offer_description": "<p>HK-split-1</p>",
                          "buy_rules": [
                            {
                              "item_criteria": {
                                "buy_rules": [
                                  "rule#1"
                                ]
                              },
                              "cart_conditions": {
                                "cart_quantity": {
                                  "greater_than_equals": 1
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "price_adjustment_applied": [
                        {
                          "remove_articles": true,
                          "adjusted_value": {
                            "value": 10,
                            "currency_code": "INR",
                            "currency_symbol": "â‚¹"
                          },
                          "article_level_distribution": false,
                          "auto_remove": true,
                          "applied_articles_ids": [],
                          "message": "Processing Fee",
                          "_type": "charge",
                          "meta": {},
                          "restrictions": {
                            "post_order": {
                              "cancellation_order": true,
                              "return_order": true
                            }
                          },
                          "_id": "659e3b6b33848a683efebf2c"
                        }
                      ],
                      "items": [
                        {
                          "key": "751083_10",
                          "promotions_applied": [
                            {
                              "offer_text": "HK-split-1",
                              "offer_label": "HK-split-1",
                              "discount_rules": [
                                {
                                  "raw_offer": {
                                    "discount_type": "percentage",
                                    "offer": {
                                      "max_offer_quantity": 1,
                                      "discount_percentage": 10
                                    },
                                    "item_criteria": {
                                      "buy_rules": [
                                        "rule#1"
                                      ]
                                    },
                                    "buy_condition": "rule#1"
                                  },
                                  "item_criteria": {
                                    "buy_rules": [
                                      "rule#1"
                                    ]
                                  },
                                  "offer": {
                                    "max_offer_quantity": 1,
                                    "discount_percentage": 10
                                  },
                                  "matched_buy_rules": [
                                    "rule#1"
                                  ]
                                }
                              ],
                              "ownership": {
                                "payable_category": "seller",
                                "payable_by": ""
                              },
                              "return_allowed": true,
                              "promotion_name": "HK-split-1",
                              "meta": {},
                              "cancellation_allowed": true,
                              "offer_description": "<p>HK-split-1</p>",
                              "buy_rules": [
                                {
                                  "item_criteria": {
                                    "buy_rules": [
                                      "rule#1"
                                    ]
                                  },
                                  "cart_conditions": {
                                    "cart_quantity": {
                                      "greater_than_equals": 1
                                    }
                                  }
                                }
                              ]
                            }
                          ],
                          "identifiers": {
                            "identifier": "5mPyy88URXuh3Lo35uaTg"
                          },
                          "parent_item_identifiers": {
                            "identifier": "ZASFF",
                            "parent_item_id": 7501190,
                            "parent_item_size": "OS"
                          },
                          "article": {
                            "type": "article",
                            "uid": "612_9_SE61201_19100302_10",
                            "size": "10",
                            "seller": {
                              "uid": 612,
                              "name": "SSR ENTERPRISE"
                            },
                            "store": {
                              "uid": 4431,
                              "name": "Motilal Nagar 1, Goregaon"
                            },
                            "quantity": 4,
                            "price": {
                              "base": {
                                "marked": 3999,
                                "effective": 2399,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "marked": 3999,
                                "effective": 2399,
                                "currency_code": "INR"
                              }
                            }
                          },
                          "price": {
                            "base": {
                              "add_on": 4798,
                              "marked": 7998,
                              "effective": 4798,
                              "selling": 4798,
                              "currency_code": "INR"
                            },
                            "converted": {
                              "add_on": 4798,
                              "marked": 7998,
                              "effective": 4798,
                              "selling": 4798,
                              "currency_code": "INR"
                            }
                          },
                          "availability": {
                            "sizes": [
                              "10"
                            ],
                            "other_store_quantity": 2,
                            "out_of_stock": false,
                            "deliverable": true,
                            "is_valid": true
                          },
                          "product": {
                            "type": "product",
                            "uid": 751083,
                            "name": "Carson 2",
                            "slug": "puma-carson-2-751083-6ad98d",
                            "brand": {
                              "uid": 9,
                              "name": "Puma"
                            },
                            "categories": [
                              {
                                "uid": 165,
                                "name": "Outdoor Sports Shoes"
                              }
                            ],
                            "images": [
                              {
                                "aspect_ratio": "16:25",
                                "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/9_19100302/1_1542807042296.jpg",
                                "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/9_19100302/1_1542807042296.jpg"
                              }
                            ],
                            "action": {
                              "type": "product",
                              "url": "https://api.addsale.com/platform/content/v1/products/puma-carson-2-751083-6ad98d/",
                              "query": {
                                "product_slug": [
                                  "puma-carson-2-751083-6ad98d"
                                ]
                              }
                            }
                          },
                          "coupon_message": "",
                          "quantity": 2,
                          "message": "",
                          "bulk_offer": {},
                          "discount": "41% OFF"
                        },
                        {
                          "key": "246228_S",
                          "identifiers": {
                            "identifier": "5mPyy88URXuh3Lo35uaTg"
                          },
                          "article": {
                            "type": "article",
                            "uid": "46_235_TM62_M11029ONDSXNS_S",
                            "size": "S",
                            "seller": {
                              "uid": 46,
                              "name": "RELIANCE BRANDS LIMITED"
                            },
                            "store": {
                              "uid": 4550,
                              "name": "VR Mall"
                            },
                            "quantity": 1,
                            "price": {
                              "base": {
                                "marked": 4490,
                                "effective": 4490,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "marked": 4490,
                                "effective": 4490,
                                "currency_code": "INR"
                              }
                            }
                          },
                          "price": {
                            "base": {
                              "add_on": 4490,
                              "marked": 4490,
                              "effective": 4490,
                              "selling": 4490,
                              "currency_code": "INR"
                            },
                            "converted": {
                              "add_on": 4490,
                              "marked": 4490,
                              "effective": 4490,
                              "selling": 4490,
                              "currency_code": "INR"
                            }
                          },
                          "availability": {
                            "sizes": [
                              "L",
                              "M",
                              "S",
                              "XL",
                              "XXL"
                            ],
                            "other_store_quantity": 0,
                            "out_of_stock": false,
                            "deliverable": true,
                            "is_valid": true
                          },
                          "product": {
                            "type": "product",
                            "uid": 246228,
                            "name": "Blue Solid T-Shirt",
                            "slug": "superdry-blue-solid-t-shirt-2",
                            "brand": {
                              "uid": 235,
                              "name": "Superdry"
                            },
                            "categories": [
                              {
                                "uid": 192,
                                "name": "T-Shirts"
                              }
                            ],
                            "images": [
                              {
                                "aspect_ratio": "16:25",
                                "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/235_M11029ONDSXNS/1.jpg",
                                "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/235_M11029ONDSXNS/1.jpg"
                              }
                            ],
                            "action": {
                              "type": "product",
                              "url": "https://api.addsale.com/platform/content/v1/products/superdry-blue-solid-t-shirt-2/",
                              "query": {
                                "product_slug": [
                                  "superdry-blue-solid-t-shirt-2"
                                ]
                              }
                            }
                          },
                          "coupon_message": "",
                          "quantity": 1,
                          "message": "",
                          "bulk_offer": {},
                          "discount": ""
                        },
                        {
                          "key": "443175_S",
                          "identifiers": {
                            "identifier": "5mPyy88URXuh3Lo35uaTg"
                          },
                          "article": {
                            "type": "article",
                            "uid": "162_207_1271_LJ03LBLUDN88_S",
                            "size": "S",
                            "seller": {
                              "uid": 162,
                              "name": "GO FASHION INDIA PRIVATE LIMITED"
                            },
                            "store": {
                              "uid": 5784,
                              "name": "Vega City mall"
                            },
                            "quantity": 3,
                            "price": {
                              "base": {
                                "marked": 1599,
                                "effective": 1599,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "marked": 1599,
                                "effective": 1599,
                                "currency_code": "INR"
                              }
                            }
                          },
                          "price": {
                            "base": {
                              "add_on": 1599,
                              "marked": 1599,
                              "effective": 1599,
                              "selling": 1599,
                              "currency_code": "INR"
                            },
                            "converted": {
                              "add_on": 1599,
                              "marked": 1599,
                              "effective": 1599,
                              "selling": 1599,
                              "currency_code": "INR"
                            }
                          },
                          "availability": {
                            "sizes": [
                              "XL",
                              "M",
                              "L",
                              "S"
                            ],
                            "other_store_quantity": 8,
                            "out_of_stock": false,
                            "deliverable": true,
                            "is_valid": true
                          },
                          "product": {
                            "type": "product",
                            "uid": 443175,
                            "name": "Light Blue Denim Jeggings",
                            "slug": "go-colors-light-blue-denim-jeggings-443175-3c688c",
                            "brand": {
                              "uid": 207,
                              "name": "Go Colors"
                            },
                            "categories": [
                              {
                                "uid": 267,
                                "name": "Jeggings"
                              }
                            ],
                            "images": [
                              {
                                "aspect_ratio": "16:25",
                                "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/207_LJ03LBLUDN88/1_1512382513548.jpg",
                                "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/207_LJ03LBLUDN88/1_1512382513548.jpg"
                              }
                            ],
                            "action": {
                              "type": "product",
                              "url": "https://api.addsale.com/platform/content/v1/products/go-colors-light-blue-denim-jeggings-443175-3c688c/",
                              "query": {
                                "product_slug": [
                                  "go-colors-light-blue-denim-jeggings-443175-3c688c"
                                ]
                              }
                            }
                          },
                          "coupon_message": "",
                          "quantity": 1,
                          "message": "",
                          "bulk_offer": {},
                          "discount": ""
                        },
                        {
                          "key": "778937_OS",
                          "identifiers": {
                            "identifier": "5mPyy88URXuh3Lo35uaTg"
                          },
                          "article": {
                            "type": "article",
                            "uid": "686_963_IC68601_PWUPC01977_OS",
                            "size": "OS",
                            "seller": {
                              "uid": 686,
                              "name": "INDUS CORPORATION"
                            },
                            "store": {
                              "uid": 5059,
                              "name": "Vidyaranyapura Main Road"
                            },
                            "quantity": 3,
                            "price": {
                              "base": {
                                "marked": 3399,
                                "effective": 3059,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "marked": 3399,
                                "effective": 3059,
                                "currency_code": "INR"
                              }
                            }
                          },
                          "price": {
                            "base": {
                              "add_on": 3059,
                              "marked": 3399,
                              "effective": 3059,
                              "selling": 3059,
                              "currency_code": "INR"
                            },
                            "converted": {
                              "add_on": 3059,
                              "marked": 3399,
                              "effective": 3059,
                              "selling": 3059,
                              "currency_code": "INR"
                            }
                          },
                          "availability": {
                            "sizes": [
                              "OS"
                            ],
                            "other_store_quantity": 2,
                            "out_of_stock": false,
                            "deliverable": true,
                            "is_valid": true
                          },
                          "product": {
                            "type": "product",
                            "uid": 778937,
                            "name": "Colourful Carnival Bouncer",
                            "slug": "fisher-price-colourful-carnival-bouncer-778937-fafa1f",
                            "brand": {
                              "uid": 963,
                              "name": "Fisher-Price"
                            },
                            "categories": [
                              {
                                "uid": 576,
                                "name": "Cradles"
                              }
                            ],
                            "images": [
                              {
                                "aspect_ratio": "16:25",
                                "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/963_PWUPC01977/1_1545308400588.jpg",
                                "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/963_PWUPC01977/1_1545308400588.jpg"
                              }
                            ],
                            "action": {
                              "type": "product",
                              "url": "https://api.addsale.com/platform/content/v1/products/fisher-price-colourful-carnival-bouncer-778937-fafa1f/",
                              "query": {
                                "product_slug": [
                                  "fisher-price-colourful-carnival-bouncer-778937-fafa1f"
                                ]
                              }
                            }
                          },
                          "coupon_message": "",
                          "quantity": 1,
                          "message": "",
                          "bulk_offer": {},
                          "discount": "11% OFF"
                        }
                      ],
                      "delivery_charge_info": "",
                      "coupon_text": "View all offers",
                      "buy_now": false,
                      "cart_id": 7927,
                      "uid": "7927",
                      "id": "65c06fe589db42581e4be72e",
                      "gstin": null,
                      "pan_no": null,
                      "message": "",
                      "checkout_mode": "self",
                      "last_modified": "2023-03-03T00:00:00.000Z",
                      "restrict_checkout": false,
                      "is_valid": true,
                      "custom_cart_meta": {},
                      "pan_config": {},
                      "is_pan_received": false,
                      "payment_selection_lock": {
                        "default_options": "cod",
                        "payment_identifier": "cod",
                        "enabled": false
                      },
                      "notification": {},
                      "common_config": {
                        "delivery_charges_config": {
                          "enabled": true,
                          "charges": [
                            {
                              "threshold": 1499,
                              "charges": 99
                            }
                          ]
                        }
                      },
                      "coupon": {
                        "coupon_code": "",
                        "coupon_type": "cart",
                        "is_applied": false,
                        "is_valid": false,
                        "message": "Sorry! Invalid coupon",
                        "coupon_id": null,
                        "discount": 0,
                        "cashback_amount": 0,
                        "cashback_message_primary": "",
                        "cashback_message_secondary": "",
                        "coupon_title": "",
                        "coupon_subtitle": "",
                        "coupon_description": "",
                        "minimum_cart_value": 0,
                        "maximum_discount_value": 0,
                        "coupon_value": 0,
                        "medias": []
                      },
                      "custom_cart": {
                        "cart_name": "Universal",
                        "cart_type": "universal",
                        "id": "659e3b6b33848a683efebf2c",
                        "is_universal": true
                      },
                      "delivery_promise": {},
                      "comment": "",
                      "currency": {
                        "code": "INR",
                        "symbol": "₹"
                      },
                      "success": true
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Reward Points"
        ]
      }
    },
    "/service/application/cart/v1.0/address": {
      "get": {
        "summary": "getAddresses | Get a list of addresses for a customer",
        "description": "List all addresses saved by the customer, simplifying the checkout process by offering pre-saved address options for delivery.",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "name": "cart_id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "examples": {
              "example1": {
                "value": "65c06fe589db42581e4be72e"
              },
              "example2": {
                "value": "65c06fe589db42581e4be72e"
              }
            },
            "description": "The unique identifier of the user cart."
          },
          {
            "in": "query",
            "name": "buy_now",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to get buy_now cart."
          },
          {
            "in": "query",
            "name": "mobile_no",
            "schema": {
              "type": "string"
            },
            "examples": {
              "example1": {
                "value": 9915347757
              },
              "example2": {
                "value": 9915347757
              }
            },
            "description": "Mobile number of the customer."
          },
          {
            "in": "query",
            "name": "checkout_mode",
            "schema": {
              "type": "string",
              "enum": [
                "self"
              ]
            },
            "description": "Option to checkout for self or for others."
          },
          {
            "in": "query",
            "name": "tags",
            "schema": {
              "type": "string",
              "enum": [
                "home"
              ]
            },
            "description": "Tag given to an address, e.g. work, home, office, shop."
          },
          {
            "in": "query",
            "name": "is_default",
            "schema": {
              "type": "boolean"
            },
            "description": "Select `true` to fetch the default address."
          },
          {
            "in": "query",
            "name": "user_id",
            "schema": {
              "type": "string"
            },
            "examples": {
              "example1": {
                "value": "5c5c0b0a3fe3c6d1ae4ea1fc"
              },
              "example2": {
                "value": "5c5c0b0a3fe3c6d1ae4ea1fc"
              }
            },
            "description": "Option to fetch address for the provided user_id."
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns an Address object containing a list of address saved in the account. Refer `GetAddressesResult` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAddressesResult"
                },
                "examples": {
                  "example1": {
                    "summary": "Address for India",
                    "value": {
                      "validation_config": {
                        "user_address_count": 5,
                        "address_max_limit": 20
                      },
                      "address": [
                        {
                          "landmark": "",
                          "area_code": "8b526f521bb14a2593a8b9e3ce8c76b3",
                          "id": "8b526f521bb14a2593a8b9e3ce8c76b3",
                          "state": "Maharashtra",
                          "meta": {},
                          "user_id": "8b526f521bb14a2593a8b9e3ce8c76b3",
                          "created_by_user_id": "8b526f521bb14a2593a8b9e3ce8c76b3",
                          "country_code": "+91",
                          "country_phone_code": "91",
                          "country_iso_code": "IN",
                          "phone": "9915347757",
                          "geo_location": {},
                          "country": "India",
                          "is_default_address": true,
                          "is_active": true,
                          "city": "Mumbai",
                          "pincode": 400093,
                          "checkout_mode": "self",
                          "address_type": "home",
                          "tags": [],
                          "area": "Sector 127",
                          "state_code": "MH",
                          "name": "abc",
                          "email": "ankur@gofynd1.com",
                          "address": "Megatron2",
                          "_custom_json": {}
                        }
                      ],
                      "pii_masking": false
                    }
                  },
                  "example2": {
                    "summary": "Address for Dubai",
                    "value": {
                      "validation_config": {
                        "user_address_count": 5,
                        "address_max_limit": 20
                      },
                      "address": [
                        {
                          "landmark": "",
                          "area_code": "",
                          "id": "651c0b882dbd5f702f711677",
                          "state": "",
                          "meta": {},
                          "user_id": "8b526f521bb14a2593a8b9e3ce8c76b3",
                          "created_by_user_id": "8b526f521bb14a2593a8b9e3ce8c76b3",
                          "country_code": "+971",
                          "country_phone_code": "+971",
                          "country_iso_code": "AE",
                          "phone": "551234567",
                          "geo_location": {},
                          "country": "United Arab Emirates",
                          "is_default_address": true,
                          "is_active": true,
                          "city": "Sharjah",
                          "sector": "Al Fisht",
                          "checkout_mode": "self",
                          "address_type": "home",
                          "tags": [],
                          "area": "Dubai Park",
                          "name": "Shaikh Ahmed",
                          "email": "example@gmail.com",
                          "address": "B-62",
                          "_custom_json": {}
                        }
                      ],
                      "pii_masking": false
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Customer address"
        ]
      },
      "post": {
        "summary": "addAddress | Creates a new address for a customer",
        "description": "Add a new address to their cart to save details such as name, email, contact information, and address.",
        "tags": [
          "Cart"
        ],
        "requestBody": {
          "description": "Add address details in the request body as shown below or refer `Address` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Address"
              },
              "examples": {
                "201_CREATED": {
                  "value": {
                    "checkout_mode": "self",
                    "is_default_address": true,
                    "landmark": "",
                    "area": "Sector 127",
                    "phone": "9915347757",
                    "pincode": 400093,
                    "email": "ankur@gofynd1.com",
                    "address_type": "home",
                    "name": "abc",
                    "address": "Megatron2",
                    "geo_location": {
                      "longitude": 1,
                      "latitude": 1
                    },
                    "store_name": "New store",
                    "expire_at": "2123-06-24T13:52:03.313000"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Returns the address ID, a flag whether the address is set as default, and a success message. Refer `SaveAddressResult` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAddressResult"
                },
                "examples": {
                  "201_CREATED": {
                    "value": {
                      "id": "67e2ae1f41cebcd70ff378d4",
                      "address_id": "1",
                      "is_default_address": true,
                      "success": true
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Customer address"
        ]
      }
    },
    "/service/application/cart/v1.0/address/{id}": {
      "get": {
        "summary": "getAddressById | Get details for a single customer address",
        "description": "Get a specific customer address stored in the system by providing its unique identifier. This API provides detailed information about the address, including the recipient's name, address, city, postal code, and other relevant details.",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "examples": {
              "200_OKAY": {
                "value": "65bb5a41feeb84432e132c03"
              }
            },
            "description": "ID allotted to the selected address."
          },
          {
            "name": "cart_id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "examples": {
              "200_OKAY": {
                "value": "65c06fe589db42581e4be72e"
              }
            },
            "description": "The unique identifier of the cart."
          },
          {
            "in": "query",
            "name": "buy_now",
            "schema": {
              "type": "boolean"
            },
            "description": "This is boolean to get buy_now cart."
          },
          {
            "in": "query",
            "name": "mobile_no",
            "schema": {
              "type": "string"
            },
            "examples": {
              "200_OKAY": {
                "value": 9915347757
              }
            },
            "description": "Mobile number of the customer."
          },
          {
            "in": "query",
            "name": "checkout_mode",
            "schema": {
              "type": "string",
              "enum": [
                "self"
              ]
            },
            "description": "Option to checkout for self or for others."
          },
          {
            "in": "query",
            "name": "tags",
            "schema": {
              "type": "string",
              "enum": [
                "home"
              ]
            },
            "description": "Tag given to an address, e.g. work, home, office, shop."
          },
          {
            "in": "query",
            "name": "is_default",
            "schema": {
              "type": "boolean"
            },
            "description": "This is a boolean value. Select `true` to fetch the default address."
          },
          {
            "in": "query",
            "name": "user_id",
            "schema": {
              "type": "string"
            },
            "examples": {
              "200_OKAY": {
                "value": "5c5c0b0a3fe3c6d1ae4ea1fc"
              }
            },
            "description": "Option to fetch address for the provided user_id."
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns an Address object containing a list of address saved in the account. Refer `Address` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address"
                },
                "examples": {
                  "200_OKAY": {
                    "value": {
                      "landmark": "",
                      "state": "Maharashtra",
                      "meta": {},
                      "_custom_json": {},
                      "user_id": "8b526f521bb14a2593a8b9e3ce8c76b3",
                      "created_by_user_id": "8b526f521bb14a2593a8b9e3ce8c76b3",
                      "country_code": "IND",
                      "state_code": "MH",
                      "country_phone_code": "91",
                      "country_iso_code": "IND",
                      "phone": "9915347757",
                      "geo_location": {
                        "latitude": 1,
                        "longitude": 1
                      },
                      "country": "India",
                      "app_id": "000000000000000000000001",
                      "is_default_address": true,
                      "is_active": true,
                      "is_anonymous": false,
                      "city": "Mumbai",
                      "pincode": 400093,
                      "area_code_slug": "pincode",
                      "area_code": "400093",
                      "checkout_mode": "self",
                      "address_type": "home",
                      "id": "65bb5a41feeb84432e132c03",
                      "uid": 1145,
                      "tags": [],
                      "area": "Sector 127",
                      "name": "abc",
                      "address_id": "1145",
                      "email": "ankur@gofynd1.com",
                      "address": "Megatron2",
                      "store_name": "store123",
                      "sector": ""
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Customer address"
        ]
      },
      "put": {
        "summary": "updateAddress | Updates an existing customer address",
        "description": "Customer can modify the details of a previously saved addresses.",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "ID allotted to the selected address.",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "examples": {
              "200_OKAY": {
                "value": "65bb5a41feeb84432e132c03"
              }
            }
          }
        ],
        "requestBody": {
          "description": "Add address details in the request body as shown below or refer `Address` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Address"
              },
              "examples": {
                "200_OKAY": {
                  "value": {
                    "user_id": "5c5c0b0a3fe3c6d1ae4ea1fc",
                    "is_default_address": true,
                    "checkout_mode": "self",
                    "landmark": "",
                    "area": "Sector 128",
                    "phone": "9915347759",
                    "pincode": 400093,
                    "email": "regrowth@gofynd.com",
                    "address_type": "home",
                    "address": "Megatron3"
                  }
                },
                "Invalid User Id": {
                  "value": {
                    "user_id": "5c5c0b0a3fe3c6d1ae4ea1de",
                    "is_default_address": true,
                    "checkout_mode": "other",
                    "landmark": "",
                    "area": "Sector 128",
                    "phone": "9915347759",
                    "pincode": 400093,
                    "email": "regrowth@gofynd.com",
                    "address_type": "home",
                    "address": "Megatron3"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Returns the address ID and a message indicating a successful address updation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAddressResult"
                },
                "examples": {
                  "200_OKAY": {
                    "value": {
                      "is_updated": true,
                      "address_id": "500",
                      "id": "65bb5a41feeb84432e132c03",
                      "is_default_address": true,
                      "success": true
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Customer address"
        ]
      },
      "delete": {
        "summary": "removeAddress | Removes an address from a customer's address list",
        "description": "Delete an existing customer address from the system.",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "ID allotted to the selected address.",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "examples": {
              "200_OKAY": {
                "value": "65bb5a41feeb84432e132c04"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a Status object indicating the success or failure of address deletion.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAddressResult"
                },
                "examples": {
                  "200_OKAY": {
                    "value": {
                      "id": "65bb5a41feeb84432e132c04",
                      "address_id": "65bb5a41feeb84432e132c04",
                      "is_deleted": true
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Customer address"
        ]
      }
    },
    "/service/application/cart/v1.0/select-address": {
      "post": {
        "summary": "selectAddress | Select customer address for order processing",
        "description": "Select an address from the saved customer addresses and validates the availability of items in the cart. Additionally, it verifies and updates the delivery promise based on the selected address.",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cart_id",
            "schema": {
              "type": "string"
            },
            "examples": {
              "200_SELECT_ADDRESS": {
                "value": "65c06fe589db42581e4be72e"
              },
              "400_ADDRESS_NOT_FOUND": {
                "value": "65c06fe589db42581e4be72e"
              }
            },
            "description": "The unique identifier of the cart."
          },
          {
            "in": "query",
            "name": "buy_now",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to get buy_now cart."
          },
          {
            "in": "query",
            "name": "i",
            "schema": {
              "type": "boolean"
            },
            "examples": {
              "200_SELECT_ADDRESS": {
                "value": "true"
              },
              "400_ADDRESS_NOT_FOUND": {
                "value": "true"
              }
            },
            "description": "Select `true` to retrieve all the items added in the cart."
          },
          {
            "in": "query",
            "name": "b",
            "schema": {
              "type": "boolean"
            },
            "description": "Select `true` to retrieve the price breakup of cart items."
          }
        ],
        "requestBody": {
          "description": "Pass address details in the request body as shown below or refer `SelectCartAddressPayload` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SelectCartAddressPayload"
              },
              "examples": {
                "200_SELECT_ADDRESS": {
                  "value": {
                    "id": "65bb5a41feeb84432e132c03",
                    "billing_address_id": "65bb5a41feeb84432e132c03",
                    "cart_id": "65c06fe589db42581e4be72e"
                  }
                },
                "400_ADDRESS_NOT_FOUND": {
                  "value": {
                    "id": "65bb5a41feeb84432e132d17",
                    "billing_address_id": "65bb5a41feeb84432e132d17",
                    "cart_id": "65c06fe589db42581e4be72e"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Returns a Cart object as shown below. Refer `CartDetailResult` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartDetailResult"
                },
                "examples": {
                  "200_SELECT_ADDRESS": {
                    "value": {
                      "breakup_values": {
                        "raw": {
                          "cod_charge": 0,
                          "convenience_fee": 0,
                          "coupon": -2250,
                          "delivery_charge": 0,
                          "discount": -7240.2163,
                          "fynd_cash": 0,
                          "gift_card": 0,
                          "gst_charges": 2139.08,
                          "mrp_total": 26983,
                          "mop_total": 0,
                          "total_charge": 0,
                          "subtotal": 19742.7837,
                          "sub_total": 19742.7837,
                          "total": 17492.7837,
                          "vog": 15353.7,
                          "you_saved": 0,
                          "promotion": 0
                        },
                        "coupon": {
                          "type": "cash",
                          "coupon_type": "cart",
                          "sub_title": "",
                          "title": "",
                          "minimum_cart_value": 0,
                          "coupon_value": 0,
                          "description": "",
                          "code": "",
                          "uid": null,
                          "value": 0,
                          "is_applied": false,
                          "message": "Sorry! Invalid Coupon"
                        },
                        "loyalty_points": {
                          "total": 0,
                          "applicable": 0,
                          "is_applied": false,
                          "message": "Reward point not applicable with Coupon",
                          "description": "Your cashback, referrals, and refund amount get credited to Fynd Cash which can be redeemed while placing an order."
                        },
                        "display": [
                          {
                            "display": "MRP Total",
                            "key": "mrp_total",
                            "value": 26983,
                            "currency_code": "INR"
                          },
                          {
                            "display": "Discount",
                            "key": "discount",
                            "value": -7240,
                            "currency_code": "INR"
                          },
                          {
                            "display": "Subtotal",
                            "key": "subtotal",
                            "value": 19743,
                            "currency_code": "INR"
                          },
                          {
                            "display": "Coupon",
                            "key": "coupon",
                            "value": -2250,
                            "currency_code": "INR"
                          },
                          {
                            "display": "Total",
                            "key": "total",
                            "value": 17493,
                            "currency_code": "INR"
                          }
                        ]
                      },
                      "price_adjustment_applied": [
                        {
                          "remove_articles": true,
                          "adjusted_value": {
                            "value": 10,
                            "currency_code": "INR",
                            "currency_symbol": "â‚¹"
                          },
                          "article_level_distribution": false,
                          "auto_remove": true,
                          "applied_articles_ids": [],
                          "message": "Processing Fee",
                          "_type": "charge",
                          "meta": {},
                          "restrictions": {
                            "post_order": {
                              "cancellation_order": true,
                              "return_order": true
                            }
                          },
                          "_id": "659e3b6b33848a683efebf2c"
                        }
                      ],
                      "items": [
                        {
                          "identifiers": {},
                          "availability": {
                            "sizes": [
                              "10"
                            ],
                            "other_store_quantity": 0,
                            "out_of_stock": false,
                            "deliverable": true,
                            "is_valid": true
                          },
                          "product": {
                            "type": "product",
                            "uid": 751083,
                            "name": "Carson 2",
                            "slug": "puma-carson-2-751083-6ad98d",
                            "brand": {
                              "uid": 9,
                              "name": "Puma"
                            },
                            "categories": [
                              {
                                "uid": 165,
                                "name": "Outdoor Sports Shoes"
                              }
                            ],
                            "images": [
                              {
                                "aspect_ratio": "16:25",
                                "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/9_19100302/1_1542807042296.jpg",
                                "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/9_19100302/1_1542807042296.jpg"
                              }
                            ],
                            "action": {
                              "type": "product",
                              "url": "https://api.addsale.com/platform/content/v1/products/puma-carson-2-751083-6ad98d/",
                              "query": {
                                "product_slug": [
                                  "puma-carson-2-751083-6ad98d"
                                ]
                              }
                            }
                          },
                          "quantity": 4,
                          "discount": "41% OFF",
                          "price": {
                            "base": {
                              "add_on": 9596,
                              "marked": 15996,
                              "effective": 9596,
                              "selling": 9596,
                              "currency_code": "INR"
                            },
                            "converted": {
                              "add_on": 9596,
                              "marked": 15996,
                              "effective": 9596,
                              "selling": 9596,
                              "currency_code": "INR"
                            }
                          },
                          "message": "",
                          "bulk_offer": {},
                          "key": "751083_10",
                          "coupon_message": "",
                          "article": {
                            "type": "article",
                            "uid": "612_9_SE61201_19100302_10",
                            "size": "10",
                            "seller": {
                              "uid": 612,
                              "name": "SSR ENTERPRISE"
                            },
                            "store": {
                              "uid": 4431,
                              "name": "Motilal Nagar 1, Goregaon"
                            },
                            "quantity": 4,
                            "price": {
                              "base": {
                                "marked": 3999,
                                "effective": 2399,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "marked": 3999,
                                "effective": 2399,
                                "currency_code": "INR"
                              }
                            }
                          }
                        },
                        {
                          "identifiers": {},
                          "availability": {
                            "sizes": [
                              "L",
                              "M",
                              "S",
                              "XL",
                              "XXL"
                            ],
                            "other_store_quantity": 0,
                            "out_of_stock": false,
                            "deliverable": true,
                            "is_valid": true
                          },
                          "product": {
                            "type": "product",
                            "uid": 246228,
                            "name": "Blue Solid T-Shirt",
                            "slug": "superdry-blue-solid-t-shirt-2",
                            "brand": {
                              "uid": 235,
                              "name": "Superdry"
                            },
                            "categories": [
                              {
                                "uid": 192,
                                "name": "T-Shirts"
                              }
                            ],
                            "images": [
                              {
                                "aspect_ratio": "16:25",
                                "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/235_M11029ONDSXNS/1.jpg",
                                "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/235_M11029ONDSXNS/1.jpg"
                              }
                            ],
                            "action": {
                              "type": "product",
                              "url": "https://api.addsale.com/platform/content/v1/products/superdry-blue-solid-t-shirt-2/",
                              "query": {
                                "product_slug": [
                                  "superdry-blue-solid-t-shirt-2"
                                ]
                              }
                            }
                          },
                          "quantity": 1,
                          "discount": "",
                          "price": {
                            "base": {
                              "add_on": 4490,
                              "marked": 4490,
                              "effective": 4490,
                              "selling": 4490,
                              "currency_code": "INR"
                            },
                            "converted": {
                              "add_on": 4490,
                              "marked": 4490,
                              "effective": 4490,
                              "selling": 4490,
                              "currency_code": "INR"
                            }
                          },
                          "message": "",
                          "bulk_offer": {},
                          "key": "246228_S",
                          "coupon_message": "",
                          "article": {
                            "type": "article",
                            "uid": "46_235_TM62_M11029ONDSXNS_S",
                            "size": "S",
                            "seller": {
                              "uid": 46,
                              "name": "RELIANCE BRANDS LIMITED"
                            },
                            "store": {
                              "uid": 4550,
                              "name": "VR Mall"
                            },
                            "quantity": 1,
                            "price": {
                              "base": {
                                "marked": 4490,
                                "effective": 4490,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "marked": 4490,
                                "effective": 4490,
                                "currency_code": "INR"
                              }
                            }
                          }
                        },
                        {
                          "identifiers": {},
                          "availability": {
                            "sizes": [
                              "XL",
                              "M",
                              "L",
                              "S"
                            ],
                            "other_store_quantity": 8,
                            "out_of_stock": false,
                            "deliverable": true,
                            "is_valid": true
                          },
                          "product": {
                            "type": "product",
                            "uid": 443175,
                            "name": "Light Blue Denim Jeggings",
                            "slug": "go-colors-light-blue-denim-jeggings-443175-3c688c",
                            "brand": {
                              "uid": 207,
                              "name": "Go Colors"
                            },
                            "categories": [
                              {
                                "uid": 267,
                                "name": "Jeggings"
                              }
                            ],
                            "images": [
                              {
                                "aspect_ratio": "16:25",
                                "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/207_LJ03LBLUDN88/1_1512382513548.jpg",
                                "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/207_LJ03LBLUDN88/1_1512382513548.jpg"
                              }
                            ],
                            "action": {
                              "type": "product",
                              "url": "https://api.addsale.com/platform/content/v1/products/go-colors-light-blue-denim-jeggings-443175-3c688c/",
                              "query": {
                                "product_slug": [
                                  "go-colors-light-blue-denim-jeggings-443175-3c688c"
                                ]
                              }
                            }
                          },
                          "quantity": 1,
                          "discount": "",
                          "price": {
                            "base": {
                              "add_on": 1599,
                              "marked": 1599,
                              "effective": 1599,
                              "selling": 1599,
                              "currency_code": "INR"
                            },
                            "converted": {
                              "add_on": 1599,
                              "marked": 1599,
                              "effective": 1599,
                              "selling": 1599,
                              "currency_code": "INR"
                            }
                          },
                          "message": "",
                          "bulk_offer": {},
                          "key": "443175_S",
                          "coupon_message": "",
                          "article": {
                            "type": "article",
                            "uid": "162_207_1271_LJ03LBLUDN88_S",
                            "size": "S",
                            "seller": {
                              "uid": 162,
                              "name": "GO FASHION INDIA PRIVATE LIMITED"
                            },
                            "store": {
                              "uid": 5784,
                              "name": "Vega City mall"
                            },
                            "quantity": 3,
                            "price": {
                              "base": {
                                "marked": 1599,
                                "effective": 1599,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "marked": 1599,
                                "effective": 1599,
                                "currency_code": "INR"
                              }
                            }
                          }
                        },
                        {
                          "identifiers": {},
                          "availability": {
                            "sizes": [
                              "OS"
                            ],
                            "other_store_quantity": 12,
                            "out_of_stock": false,
                            "deliverable": true,
                            "is_valid": true
                          },
                          "product": {
                            "type": "product",
                            "uid": 842716,
                            "name": "Blue Backpack",
                            "slug": "istorm-blue-backpack-842716-951b5a",
                            "brand": {
                              "uid": 1177,
                              "name": "iStorm"
                            },
                            "categories": [
                              {
                                "uid": 198,
                                "name": "Backpacks"
                              }
                            ],
                            "images": [
                              {
                                "aspect_ratio": "16:25",
                                "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/1177_IS483/1_1551353288247.jpg",
                                "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/1177_IS483/1_1551353288247.jpg"
                              }
                            ],
                            "action": {
                              "type": "product",
                              "url": "https://api.addsale.com/platform/content/v1/products/istorm-blue-backpack-842716-951b5a/",
                              "query": {
                                "product_slug": [
                                  "istorm-blue-backpack-842716-951b5a"
                                ]
                              }
                            }
                          },
                          "quantity": 1,
                          "discount": "34% OFF",
                          "price": {
                            "base": {
                              "add_on": 998.7837,
                              "marked": 1499,
                              "effective": 998.7837,
                              "selling": 998.7837,
                              "currency_code": "INR"
                            },
                            "converted": {
                              "add_on": 998.7837,
                              "marked": 1499,
                              "effective": 998.7837,
                              "selling": 998.7837,
                              "currency_code": "INR"
                            }
                          },
                          "message": "",
                          "bulk_offer": {},
                          "key": "842716_OS",
                          "coupon_message": "",
                          "article": {
                            "type": "article",
                            "uid": "638_1177_CRSL63802_IS483_OS",
                            "size": "OS",
                            "seller": {
                              "uid": 638,
                              "name": "COUNFREEDISE RETAIL SERVICES LTD"
                            },
                            "store": {
                              "uid": 4630,
                              "name": "Bhiwandi"
                            },
                            "quantity": 4,
                            "price": {
                              "base": {
                                "marked": 1499,
                                "effective": 998.7837,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "marked": 1499,
                                "effective": 998.7837,
                                "currency_code": "INR"
                              }
                            }
                          }
                        },
                        {
                          "identifiers": {},
                          "availability": {
                            "sizes": [
                              "OS"
                            ],
                            "other_store_quantity": 2,
                            "out_of_stock": false,
                            "deliverable": true,
                            "is_valid": true
                          },
                          "product": {
                            "type": "product",
                            "uid": 778937,
                            "name": "Colourful Carnival Bouncer",
                            "slug": "fisher-price-colourful-carnival-bouncer-778937-fafa1f",
                            "brand": {
                              "uid": 963,
                              "name": "Fisher-Price"
                            },
                            "categories": [
                              {
                                "uid": 576,
                                "name": "Cradles"
                              }
                            ],
                            "images": [
                              {
                                "aspect_ratio": "16:25",
                                "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/963_PWUPC01977/1_1545308400588.jpg",
                                "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/963_PWUPC01977/1_1545308400588.jpg"
                              }
                            ],
                            "action": {
                              "type": "product",
                              "url": "https://api.addsale.com/platform/content/v1/products/fisher-price-colourful-carnival-bouncer-778937-fafa1f/",
                              "query": {
                                "product_slug": [
                                  "fisher-price-colourful-carnival-bouncer-778937-fafa1f"
                                ]
                              }
                            }
                          },
                          "quantity": 1,
                          "discount": "11% OFF",
                          "price": {
                            "base": {
                              "add_on": 3059,
                              "marked": 3399,
                              "effective": 3059,
                              "selling": 3059,
                              "currency_code": "INR"
                            },
                            "converted": {
                              "add_on": 3059,
                              "marked": 3399,
                              "effective": 3059,
                              "selling": 3059,
                              "currency_code": "INR"
                            }
                          },
                          "message": "",
                          "bulk_offer": {},
                          "key": "778937_OS",
                          "coupon_message": "",
                          "article": {
                            "type": "article",
                            "uid": "686_963_IC68601_PWUPC01977_OS",
                            "size": "OS",
                            "seller": {
                              "uid": 686,
                              "name": "INDUS CORPORATION"
                            },
                            "store": {
                              "uid": 5059,
                              "name": "Vidyaranyapura Main Road"
                            },
                            "quantity": 3,
                            "price": {
                              "base": {
                                "marked": 3399,
                                "effective": 3059,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "marked": 3399,
                                "effective": 3059,
                                "currency_code": "INR"
                              }
                            }
                          }
                        }
                      ],
                      "delivery_charge_info": "",
                      "coupon_text": "View all offers",
                      "buy_now": false,
                      "cart_id": 7927,
                      "uid": "7927",
                      "id": "65c06fe589db42581e4be72e",
                      "gstin": null,
                      "pan_no": null,
                      "message": "",
                      "checkout_mode": "self",
                      "last_modified": "2023-03-03T00:00:00.000Z",
                      "restrict_checkout": false,
                      "is_valid": true,
                      "custom_cart_meta": {},
                      "pan_config": {},
                      "is_pan_received": false,
                      "payment_selection_lock": {
                        "default_options": "cod",
                        "payment_identifier": "cod",
                        "enabled": false
                      },
                      "notification": {},
                      "common_config": {
                        "delivery_charges_config": {
                          "enabled": true,
                          "charges": [
                            {
                              "threshold": 1499,
                              "charges": 99
                            }
                          ]
                        }
                      },
                      "applied_promo_details": [],
                      "coupon": {
                        "coupon_code": "",
                        "coupon_type": "cart",
                        "is_applied": false,
                        "is_valid": false,
                        "message": "Sorry! Invalid coupon",
                        "coupon_id": null,
                        "discount": 0,
                        "cashback_amount": 0,
                        "cashback_message_primary": "",
                        "cashback_message_secondary": "",
                        "coupon_title": "",
                        "coupon_subtitle": "",
                        "coupon_description": "",
                        "minimum_cart_value": 0,
                        "maximum_discount_value": 0,
                        "coupon_value": 0,
                        "medias": []
                      },
                      "custom_cart": {
                        "cart_name": "Universal",
                        "cart_type": "universal",
                        "id": "659e3b6b33848a683efebf2c",
                        "is_universal": true
                      },
                      "delivery_promise": {},
                      "comment": "",
                      "currency": {
                        "code": "INR",
                        "symbol": "₹"
                      },
                      "success": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "User, Address or PIN code error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectAddressResponseError"
                },
                "examples": {
                  "400_ADDRESS_NOT_FOUND": {
                    "value": {
                      "cart_id": 200,
                      "id": "65c06fe589db42581e4be72e",
                      "is_valid": false,
                      "message": "ADDRESS_NOT_FOUND",
                      "address": {}
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Customer address"
        ]
      }
    },
    "/service/application/cart/v1.0/payment": {
      "put": {
        "summary": "selectPaymentMode | Select payment mode",
        "description": "Select a preferred payment mode from available options during the cart checkout process to securely and efficiently complete their transaction.",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "examples": {
              "200_OKAY": {
                "value": "65c06fe589db42581e4be72e"
              }
            },
            "description": "The unique identifier of the cart."
          },
          {
            "in": "query",
            "name": "buy_now",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to get buy_now cart."
          },
          {
            "in": "query",
            "name": "order_type",
            "description": "This is boolean to get buy_now cart.",
            "schema": {
              "type": "string",
              "enum": [
                "HomeDelivery"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "Check the example shown below or refer `UpdateCartPaymentPayload` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCartPaymentPayload"
              },
              "examples": {
                "200_OKAY": {
                  "value": {
                    "payment_mode": "NB",
                    "payment_identifier": "ICIC",
                    "aggregator_name": "Razorpay",
                    "merchant_code": "NB_ICICI",
                    "address_id": "65bb5a41feeb84432e132c03",
                    "id": "65c06fe589db42581e4be72e"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Returns a Cart object as shown below. Refer `CartDetailResult` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartDetailResult"
                },
                "examples": {
                  "200_OKAY": {
                    "value": {
                      "breakup_values": {
                        "display": [
                          {
                            "display": "MRP Total",
                            "key": "mrp_total",
                            "value": 17486,
                            "currency_code": "INR"
                          },
                          {
                            "display": "Discount",
                            "key": "discount",
                            "value": -3540,
                            "currency_code": "INR"
                          },
                          {
                            "display": "Subtotal",
                            "key": "subtotal",
                            "value": 13946,
                            "currency_code": "INR"
                          },
                          {
                            "display": "Total",
                            "key": "total",
                            "value": 13946,
                            "currency_code": "INR"
                          }
                        ],
                        "raw": {
                          "cod_charge": 0,
                          "convenience_fee": 0,
                          "coupon": 0,
                          "delivery_charge": 0,
                          "discount": -3540,
                          "fynd_cash": 0,
                          "gift_card": 0,
                          "gst_charges": 1529.96,
                          "mrp_total": 17486,
                          "mop_total": 0,
                          "total_charge": 0,
                          "subtotal": 13946,
                          "sub_total": 13946,
                          "total": 13946,
                          "vog": 12416.04,
                          "you_saved": 0,
                          "promotion": 0
                        },
                        "loyalty_points": {
                          "total": 0,
                          "applicable": 0,
                          "is_applied": false,
                          "message": "Reward point not applicable with Coupon",
                          "description": "Your cashback, referrals, and refund amount get credited to Fynd Cash which can be redeemed while placing an order."
                        },
                        "coupon": {
                          "type": "cash",
                          "coupon_type": "cart",
                          "sub_title": "",
                          "title": "",
                          "minimum_cart_value": 0,
                          "coupon_value": 0,
                          "description": "",
                          "code": "",
                          "uid": null,
                          "value": 0,
                          "is_applied": false,
                          "message": "Sorry! Invalid Coupon"
                        }
                      },
                      "applied_promo_details": [
                        {
                          "offer_text": "HK-split-1",
                          "offer_label": "HK-split-1",
                          "discount_rules": [
                            {
                              "raw_offer": {
                                "discount_type": "percentage",
                                "offer": {
                                  "max_offer_quantity": 1,
                                  "discount_percentage": 10
                                },
                                "item_criteria": {
                                  "buy_rules": [
                                    "rule#1"
                                  ]
                                },
                                "buy_condition": "rule#1"
                              },
                              "item_criteria": {
                                "buy_rules": [
                                  "rule#1"
                                ]
                              },
                              "offer": {
                                "max_offer_quantity": 1,
                                "discount_percentage": 10
                              },
                              "matched_buy_rules": [
                                "rule#1"
                              ]
                            }
                          ],
                          "ownership": {
                            "payable_category": "seller",
                            "payable_by": ""
                          },
                          "return_allowed": true,
                          "promotion_name": "HK-split-1",
                          "meta": {},
                          "cancellation_allowed": true,
                          "offer_description": "<p>HK-split-1</p>",
                          "buy_rules": [
                            {
                              "item_criteria": {
                                "buy_rules": [
                                  "rule#1"
                                ]
                              },
                              "cart_conditions": {
                                "cart_quantity": {
                                  "greater_than_equals": 1
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "price_adjustment_applied": [
                        {
                          "remove_articles": true,
                          "adjusted_value": {
                            "value": 10,
                            "currency_code": "INR",
                            "currency_symbol": "â‚¹"
                          },
                          "article_level_distribution": false,
                          "auto_remove": true,
                          "applied_articles_ids": [],
                          "message": "Processing Fee",
                          "_type": "charge",
                          "meta": {},
                          "restrictions": {
                            "post_order": {
                              "cancellation_order": true,
                              "return_order": true
                            }
                          },
                          "_id": "659e3b6b33848a683efebf2c"
                        }
                      ],
                      "items": [
                        {
                          "key": "751083_10",
                          "promotions_applied": [
                            {
                              "offer_text": "HK-split-1",
                              "offer_label": "HK-split-1",
                              "discount_rules": [
                                {
                                  "raw_offer": {
                                    "discount_type": "percentage",
                                    "offer": {
                                      "max_offer_quantity": 1,
                                      "discount_percentage": 10
                                    },
                                    "item_criteria": {
                                      "buy_rules": [
                                        "rule#1"
                                      ]
                                    },
                                    "buy_condition": "rule#1"
                                  },
                                  "item_criteria": {
                                    "buy_rules": [
                                      "rule#1"
                                    ]
                                  },
                                  "offer": {
                                    "max_offer_quantity": 1,
                                    "discount_percentage": 10
                                  },
                                  "matched_buy_rules": [
                                    "rule#1"
                                  ]
                                }
                              ],
                              "ownership": {
                                "payable_category": "seller",
                                "payable_by": ""
                              },
                              "return_allowed": true,
                              "promotion_name": "HK-split-1",
                              "meta": {},
                              "cancellation_allowed": true,
                              "offer_description": "<p>HK-split-1</p>",
                              "buy_rules": [
                                {
                                  "item_criteria": {
                                    "buy_rules": [
                                      "rule#1"
                                    ]
                                  },
                                  "cart_conditions": {
                                    "cart_quantity": {
                                      "greater_than_equals": 1
                                    }
                                  }
                                }
                              ]
                            }
                          ],
                          "identifiers": {
                            "identifier": "5mPyy88URXuh3Lo35uaTg"
                          },
                          "parent_item_identifiers": {
                            "identifier": "ZASFF",
                            "parent_item_id": 7501190,
                            "parent_item_size": "OS"
                          },
                          "article": {
                            "type": "article",
                            "uid": "612_9_SE61201_19100302_10",
                            "size": "10",
                            "seller": {
                              "uid": 612,
                              "name": "SSR ENTERPRISE"
                            },
                            "store": {
                              "uid": 4431,
                              "name": "Motilal Nagar 1, Goregaon"
                            },
                            "quantity": 4,
                            "price": {
                              "base": {
                                "marked": 3999,
                                "effective": 2399,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "marked": 3999,
                                "effective": 2399,
                                "currency_code": "INR"
                              }
                            }
                          },
                          "price": {
                            "base": {
                              "add_on": 4798,
                              "marked": 7998,
                              "effective": 4798,
                              "selling": 4798,
                              "currency_code": "INR"
                            },
                            "converted": {
                              "add_on": 4798,
                              "marked": 7998,
                              "effective": 4798,
                              "selling": 4798,
                              "currency_code": "INR"
                            }
                          },
                          "availability": {
                            "sizes": [
                              "10"
                            ],
                            "other_store_quantity": 2,
                            "out_of_stock": false,
                            "deliverable": true,
                            "is_valid": true
                          },
                          "product": {
                            "type": "product",
                            "uid": 751083,
                            "name": "Carson 2",
                            "slug": "puma-carson-2-751083-6ad98d",
                            "brand": {
                              "uid": 9,
                              "name": "Puma"
                            },
                            "categories": [
                              {
                                "uid": 165,
                                "name": "Outdoor Sports Shoes"
                              }
                            ],
                            "images": [
                              {
                                "aspect_ratio": "16:25",
                                "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/9_19100302/1_1542807042296.jpg",
                                "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/9_19100302/1_1542807042296.jpg"
                              }
                            ],
                            "action": {
                              "type": "product",
                              "url": "https://api.addsale.com/platform/content/v1/products/puma-carson-2-751083-6ad98d/",
                              "query": {
                                "product_slug": [
                                  "puma-carson-2-751083-6ad98d"
                                ]
                              }
                            }
                          },
                          "coupon_message": "",
                          "quantity": 2,
                          "message": "",
                          "bulk_offer": {},
                          "discount": "41% OFF"
                        },
                        {
                          "key": "246228_S",
                          "identifiers": {
                            "identifier": "5mPyy88URXuh3Lo35uaTg"
                          },
                          "article": {
                            "type": "article",
                            "uid": "46_235_TM62_M11029ONDSXNS_S",
                            "size": "S",
                            "seller": {
                              "uid": 46,
                              "name": "RELIANCE BRANDS LIMITED"
                            },
                            "store": {
                              "uid": 4550,
                              "name": "VR Mall"
                            },
                            "quantity": 1,
                            "price": {
                              "base": {
                                "marked": 4490,
                                "effective": 4490,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "marked": 4490,
                                "effective": 4490,
                                "currency_code": "INR"
                              }
                            }
                          },
                          "price": {
                            "base": {
                              "add_on": 4490,
                              "marked": 4490,
                              "effective": 4490,
                              "selling": 4490,
                              "currency_code": "INR"
                            },
                            "converted": {
                              "add_on": 4490,
                              "marked": 4490,
                              "effective": 4490,
                              "selling": 4490,
                              "currency_code": "INR"
                            }
                          },
                          "availability": {
                            "sizes": [
                              "L",
                              "M",
                              "S",
                              "XL",
                              "XXL"
                            ],
                            "other_store_quantity": 0,
                            "out_of_stock": false,
                            "deliverable": true,
                            "is_valid": true
                          },
                          "product": {
                            "type": "product",
                            "uid": 246228,
                            "name": "Blue Solid T-Shirt",
                            "slug": "superdry-blue-solid-t-shirt-2",
                            "brand": {
                              "uid": 235,
                              "name": "Superdry"
                            },
                            "categories": [
                              {
                                "uid": 192,
                                "name": "T-Shirts"
                              }
                            ],
                            "images": [
                              {
                                "aspect_ratio": "16:25",
                                "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/235_M11029ONDSXNS/1.jpg",
                                "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/235_M11029ONDSXNS/1.jpg"
                              }
                            ],
                            "action": {
                              "type": "product",
                              "url": "https://api.addsale.com/platform/content/v1/products/superdry-blue-solid-t-shirt-2/",
                              "query": {
                                "product_slug": [
                                  "superdry-blue-solid-t-shirt-2"
                                ]
                              }
                            }
                          },
                          "coupon_message": "",
                          "quantity": 1,
                          "message": "",
                          "bulk_offer": {},
                          "discount": ""
                        },
                        {
                          "key": "443175_S",
                          "identifiers": {
                            "identifier": "5mPyy88URXuh3Lo35uaTg"
                          },
                          "article": {
                            "type": "article",
                            "uid": "162_207_1271_LJ03LBLUDN88_S",
                            "size": "S",
                            "seller": {
                              "uid": 162,
                              "name": "GO FASHION INDIA PRIVATE LIMITED"
                            },
                            "store": {
                              "uid": 5784,
                              "name": "Vega City mall"
                            },
                            "quantity": 3,
                            "price": {
                              "base": {
                                "marked": 1599,
                                "effective": 1599,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "marked": 1599,
                                "effective": 1599,
                                "currency_code": "INR"
                              }
                            }
                          },
                          "price": {
                            "base": {
                              "add_on": 1599,
                              "marked": 1599,
                              "effective": 1599,
                              "selling": 1599,
                              "currency_code": "INR"
                            },
                            "converted": {
                              "add_on": 1599,
                              "marked": 1599,
                              "effective": 1599,
                              "selling": 1599,
                              "currency_code": "INR"
                            }
                          },
                          "availability": {
                            "sizes": [
                              "XL",
                              "M",
                              "L",
                              "S"
                            ],
                            "other_store_quantity": 8,
                            "out_of_stock": false,
                            "deliverable": true,
                            "is_valid": true
                          },
                          "product": {
                            "type": "product",
                            "uid": 443175,
                            "name": "Light Blue Denim Jeggings",
                            "slug": "go-colors-light-blue-denim-jeggings-443175-3c688c",
                            "brand": {
                              "uid": 207,
                              "name": "Go Colors"
                            },
                            "categories": [
                              {
                                "uid": 267,
                                "name": "Jeggings"
                              }
                            ],
                            "images": [
                              {
                                "aspect_ratio": "16:25",
                                "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/207_LJ03LBLUDN88/1_1512382513548.jpg",
                                "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/207_LJ03LBLUDN88/1_1512382513548.jpg"
                              }
                            ],
                            "action": {
                              "type": "product",
                              "url": "https://api.addsale.com/platform/content/v1/products/go-colors-light-blue-denim-jeggings-443175-3c688c/",
                              "query": {
                                "product_slug": [
                                  "go-colors-light-blue-denim-jeggings-443175-3c688c"
                                ]
                              }
                            }
                          },
                          "coupon_message": "",
                          "quantity": 1,
                          "message": "",
                          "bulk_offer": {},
                          "discount": ""
                        },
                        {
                          "key": "778937_OS",
                          "identifiers": {
                            "identifier": "5mPyy88URXuh3Lo35uaTg"
                          },
                          "article": {
                            "type": "article",
                            "uid": "686_963_IC68601_PWUPC01977_OS",
                            "size": "OS",
                            "seller": {
                              "uid": 686,
                              "name": "INDUS CORPORATION"
                            },
                            "store": {
                              "uid": 5059,
                              "name": "Vidyaranyapura Main Road"
                            },
                            "quantity": 3,
                            "price": {
                              "base": {
                                "marked": 3399,
                                "effective": 3059,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "marked": 3399,
                                "effective": 3059,
                                "currency_code": "INR"
                              }
                            }
                          },
                          "price": {
                            "base": {
                              "add_on": 3059,
                              "marked": 3399,
                              "effective": 3059,
                              "selling": 3059,
                              "currency_code": "INR"
                            },
                            "converted": {
                              "add_on": 3059,
                              "marked": 3399,
                              "effective": 3059,
                              "selling": 3059,
                              "currency_code": "INR"
                            }
                          },
                          "availability": {
                            "sizes": [
                              "OS"
                            ],
                            "other_store_quantity": 2,
                            "out_of_stock": false,
                            "deliverable": true,
                            "is_valid": true
                          },
                          "product": {
                            "type": "product",
                            "uid": 778937,
                            "name": "Colourful Carnival Bouncer",
                            "slug": "fisher-price-colourful-carnival-bouncer-778937-fafa1f",
                            "brand": {
                              "uid": 963,
                              "name": "Fisher-Price"
                            },
                            "categories": [
                              {
                                "uid": 576,
                                "name": "Cradles"
                              }
                            ],
                            "images": [
                              {
                                "aspect_ratio": "16:25",
                                "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/963_PWUPC01977/1_1545308400588.jpg",
                                "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/963_PWUPC01977/1_1545308400588.jpg"
                              }
                            ],
                            "action": {
                              "type": "product",
                              "url": "https://api.addsale.com/platform/content/v1/products/fisher-price-colourful-carnival-bouncer-778937-fafa1f/",
                              "query": {
                                "product_slug": [
                                  "fisher-price-colourful-carnival-bouncer-778937-fafa1f"
                                ]
                              }
                            }
                          },
                          "coupon_message": "",
                          "quantity": 1,
                          "message": "",
                          "bulk_offer": {},
                          "discount": "11% OFF"
                        }
                      ],
                      "delivery_charge_info": "",
                      "coupon_text": "View all offers",
                      "buy_now": false,
                      "cart_id": 7927,
                      "uid": "7927",
                      "id": "65c06fe589db42581e4be72e",
                      "gstin": null,
                      "pan_no": null,
                      "message": "",
                      "checkout_mode": "self",
                      "last_modified": "2023-03-03T00:00:00.000Z",
                      "restrict_checkout": false,
                      "is_valid": true,
                      "custom_cart_meta": {},
                      "pan_config": {},
                      "is_pan_received": false,
                      "payment_selection_lock": {
                        "default_options": "cod",
                        "payment_identifier": "cod",
                        "enabled": false
                      },
                      "notification": {},
                      "common_config": {
                        "delivery_charges_config": {
                          "enabled": true,
                          "charges": [
                            {
                              "threshold": 1499,
                              "charges": 99
                            }
                          ]
                        }
                      },
                      "coupon": {
                        "coupon_code": "",
                        "coupon_type": "cart",
                        "is_applied": false,
                        "is_valid": false,
                        "message": "Sorry! Invalid coupon",
                        "coupon_id": null,
                        "discount": 0,
                        "cashback_amount": 0,
                        "cashback_message_primary": "",
                        "cashback_message_secondary": "",
                        "coupon_title": "",
                        "coupon_subtitle": "",
                        "coupon_description": "",
                        "minimum_cart_value": 0,
                        "maximum_discount_value": 0,
                        "coupon_value": 0,
                        "medias": []
                      },
                      "custom_cart": {
                        "cart_name": "Universal",
                        "cart_type": "universal",
                        "id": "659e3b6b33848a683efebf2c",
                        "is_universal": true
                      },
                      "delivery_promise": {},
                      "comment": "",
                      "currency": {
                        "code": "INR",
                        "symbol": "₹"
                      },
                      "success": true
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Payment mode"
        ]
      }
    },
    "/service/application/cart/v1.0/payment/validate/": {
      "get": {
        "summary": "validateCouponForPayment | Validate applied coupon",
        "description": "Validate the applicability of a coupon code for the selected payment mode for the existing cart. This ensures the coupon's validity before proceeding with the payment process, enhancing user experience and preventing potential errors during transactions.",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Net Banking Payment mode": {
                "value": "65c06fe589db42581e4be72e"
              },
              "Card payment mode": {
                "value": "65c06fe589db42581e4be72e"
              }
            },
            "description": "The unique identifier of the cart."
          },
          {
            "in": "query",
            "name": "buy_now",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to get buy_now cart."
          },
          {
            "in": "query",
            "name": "address_id",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Net Banking Payment mode": {
                "value": "65bb5a41feeb84432e132c03"
              },
              "Card payment mode": {
                "value": "65bb5a41feeb84432e132c03"
              }
            },
            "description": "ID allotted to an address."
          },
          {
            "in": "query",
            "name": "payment_mode",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Net Banking Payment mode": {
                "value": "NB"
              },
              "Card payment mode": {
                "value": "CARD"
              }
            },
            "description": "Payment mode selected by the customer."
          },
          {
            "in": "query",
            "name": "payment_identifier",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Net Banking Payment mode": {
                "value": "ICIC"
              },
              "Card payment mode": {
                "value": null
              }
            },
            "description": "Identifier of payment like ICIC, PAYTM."
          },
          {
            "in": "query",
            "name": "aggregator_name",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Net Banking Payment mode": {
                "value": "Razorpay"
              },
              "Card payment mode": {
                "value": "Razorpay"
              }
            },
            "description": "Payment gateway identifier."
          },
          {
            "in": "query",
            "name": "merchant_code",
            "schema": {
              "type": "string",
              "x-not-enum": true
            },
            "examples": {
              "Net Banking Payment mode": {
                "value": "NB_ICIC"
              },
              "Card payment mode": {
                "value": null
              }
            },
            "description": "Identifier used by payment gateway for a given payment mode, e.g. NB_ICIC, PAYTM."
          },
          {
            "in": "query",
            "name": "iin",
            "schema": {
              "type": "string"
            },
            "description": "Debit/Credit card prefix (first 6 digit).",
            "examples": {
              "Net Banking Payment mode": {
                "value": null
              },
              "Card payment mode": {
                "value": 424242
              }
            }
          },
          {
            "in": "query",
            "name": "network",
            "schema": {
              "type": "string"
            },
            "description": "Credit/Debit card issuer, e.g. VISA, MASTERCARD, RUPAY.",
            "examples": {
              "Net Banking Payment mode": {
                "value": null
              },
              "Card payment mode": {
                "value": null
              }
            }
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            },
            "description": "Card type, e.g. Credit, Debit.",
            "examples": {
              "Net Banking Payment mode": {
                "value": null
              },
              "Card payment mode": {
                "value": null
              }
            }
          },
          {
            "in": "query",
            "name": "card_id",
            "schema": {
              "type": "string"
            },
            "description": "Saved card token reference id.",
            "examples": {
              "Net Banking Payment mode": {
                "value": null
              },
              "Card payment mode": {
                "value": null
              }
            }
          },
          {
            "in": "query",
            "name": "cart_type",
            "schema": {
              "type": "string",
              "enum": [
                "universal"
              ]
            },
            "description": "Type of the cart."
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a success message and the coupon validity. Refer `PaymentCouponValidate` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentCouponValidate"
                },
                "examples": {
                  "Net Banking Payment mode": {
                    "value": {
                      "success": true,
                      "message": "",
                      "coupon_validity": {
                        "valid": true,
                        "discount": 499.5,
                        "code": "testpayment",
                        "display_message_en": "",
                        "title": "Coupon value will change.",
                        "next_validation_required": false
                      }
                    }
                  },
                  "Card payment mode": {
                    "value": {
                      "success": true,
                      "message": "",
                      "coupon_validity": {
                        "valid": true,
                        "discount": 499.5,
                        "code": "testpayment",
                        "display_message_en": "",
                        "title": "Coupon value will change.",
                        "next_validation_required": false
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Payment mode"
        ]
      }
    },
    "/service/application/cart/v1.0/meta": {
      "put": {
        "summary": "updateCartMeta | Update cart metadata.",
        "description": "Update metadata associated with a cart, which includes customer preferences, delivery instructions, or any special requirements related to the cart items.",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "examples": {
              "200_OKAY": {
                "value": "65c06fe589db42581e4be72e"
              },
              "400_NOT_OKAY": {
                "value": "65c06fe589db42581e4be72e"
              }
            },
            "description": "The unique identifier of the cart."
          },
          {
            "in": "query",
            "name": "buy_now",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to get buy_now cart."
          }
        ],
        "requestBody": {
          "description": "gstin: Pass gstin number to claim GST credit, e.g. 27AAPFU0939F1ZV checkout_mode: Pass checkout mode for current order as described below.\n    self: Customer him self placing order staff:Placing order on behalf of customer comment: Set comments to be passed to order team during adding items, e.g. leave the package with my neighbour.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CartMetaPayload"
              },
              "examples": {
                "200_OKAY": {
                  "value": {
                    "checkout_mode": "self",
                    "gstin": "27AAPFU0939F1ZV",
                    "comment": "Leave it with neighbour",
                    "pan_no": "AAPFU0939F",
                    "custom_cart_meta": {
                      "test": "test"
                    }
                  }
                },
                "400_NOT_OKAY": {
                  "value": {
                    "checkout_mode": "self",
                    "comment": "updating pan with null",
                    "pan_no": null
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a message indicating the success of cart meta updation as shown below.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartMetaResult"
                },
                "examples": {
                  "200_OKAY": {
                    "value": {
                      "is_valid": true,
                      "message": "cart meta updated"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing required Field",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartMetaMissingResult"
                },
                "examples": {
                  "400_NOT_OKAY": {
                    "value": {
                      "success": false,
                      "message": "Field may not be null.",
                      "errors": {
                        "pan_no": [
                          "Field may not be null."
                        ]
                      },
                      "meta": {
                        "pan_no": [
                          "Field may not be null."
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Cart"
        ]
      }
    },
    "/service/application/cart/v1.0/share-cart": {
      "post": {
        "summary": "getCartShareLink | Create share cart link",
        "description": "Generate a unique shareable link for the customer's cart for a specific sales channel. This link enables easy sharing of the cart contents with other users, facilitating collaborative shopping experiences.",
        "tags": [
          "Cart"
        ],
        "requestBody": {
          "description": "Pass object to generate share cart snapshot uid Cart id for sharing cart. meta Staff, ordering store and other store related data meta data to merge",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetShareCartLinkPayload"
              },
              "examples": {
                "Get share token": {
                  "value": {
                    "id": "65c06fe589db42581e4be72e",
                    "meta": {
                      "selected_staff": "5d0e058878c5444245dc686c",
                      "ordering_store": 2890
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a URL to share and a token as shown below.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetShareCartLinkResult"
                },
                "examples": {
                  "Get share token": {
                    "value": {
                      "token": "ZweG1XyX",
                      "share_url": "https://uniket-testing.addsale.link/shared-cart/ZweG1XyX"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Cart"
        ]
      }
    },
    "/service/application/cart/v1.0/share-cart/{token}": {
      "get": {
        "summary": "getCartSharedItems | List shared cart items",
        "description": "Get cart items from the shared cart link based on unique token.",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "name": "token",
            "description": "Token of the shared short link.",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "examples": {
              "Shared Cart": {
                "value": "5McSFzjO"
              },
              "Invalid Token": {
                "value": "XYZ"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a Cart object as per the valid token. Refer `SharedCartResult` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SharedCartResult"
                },
                "examples": {
                  "Shared Cart": {
                    "value": {
                      "cart": {
                        "shared_cart_details": {
                          "token": "BQ9jySQ9",
                          "user": {
                            "user_id": "23109086",
                            "is_anonymous": false
                          },
                          "meta": {
                            "selected_staff": "",
                            "ordering_store": null
                          },
                          "selected_staff": "",
                          "ordering_store": null,
                          "source": {},
                          "created_on": "2019-12-18T14:00:07.165000"
                        },
                        "items": [
                          {
                            "key": "791651_6",
                            "identifiers": {
                              "identifier": "5mPyy88URXuh3Lo35uaTg"
                            },
                            "discount": "",
                            "bulk_offer": {},
                            "coupon_message": "",
                            "article": {
                              "type": "article",
                              "uid": "304_1054_9036_R1005753_6",
                              "size": "6",
                              "seller": {
                                "uid": 304,
                                "name": "LEAYAN GLOBAL PVT. LTD."
                              },
                              "store": {
                                "uid": 5322,
                                "name": "Vaisali Nagar"
                              },
                              "quantity": 1,
                              "price": {
                                "base": {
                                  "marked": 2095,
                                  "effective": 2095,
                                  "currency_code": "INR"
                                },
                                "converted": {
                                  "marked": 2095,
                                  "effective": 2095,
                                  "currency_code": "INR"
                                }
                              }
                            },
                            "product": {
                              "type": "product",
                              "uid": 791651,
                              "name": "Black Running Shoes",
                              "slug": "furo-black-running-shoes-791651-f8bcc3",
                              "brand": {
                                "uid": 1054,
                                "name": "Furo"
                              },
                              "categories": [
                                {
                                  "uid": 160,
                                  "name": "Running Shoes"
                                }
                              ],
                              "images": [
                                {
                                  "aspect_ratio": "16:25",
                                  "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/1054_R1005753/1_1546490507364.jpg",
                                  "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/1054_R1005753/1_1546490507364.jpg"
                                }
                              ],
                              "action": {
                                "type": "product",
                                "url": "https://api.addsale.com/platform/content/v1/products/furo-black-running-shoes-791651-f8bcc3/",
                                "query": {
                                  "product_slug": [
                                    "furo-black-running-shoes-791651-f8bcc3"
                                  ]
                                }
                              }
                            },
                            "message": "",
                            "quantity": 1,
                            "availability": {
                              "sizes": [
                                "7",
                                "8",
                                "9",
                                "10",
                                "6"
                              ],
                              "other_store_quantity": 12,
                              "out_of_stock": false,
                              "deliverable": true,
                              "is_valid": true
                            },
                            "price": {
                              "base": {
                                "add_on": 2095,
                                "marked": 2095,
                                "effective": 2095,
                                "selling": 2095,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "add_on": 2095,
                                "marked": 2095,
                                "effective": 2095,
                                "selling": 2095,
                                "currency_code": "INR"
                              }
                            }
                          },
                          {
                            "key": "791651_7",
                            "identifiers": {
                              "identifier": "5mPyy88URXuh3Lo35uaTg"
                            },
                            "discount": "",
                            "bulk_offer": {},
                            "coupon_message": "",
                            "article": {
                              "type": "article",
                              "uid": "304_1054_9036_R1005753_7",
                              "size": "7",
                              "seller": {
                                "uid": 304,
                                "name": "LEAYAN GLOBAL PVT. LTD."
                              },
                              "store": {
                                "uid": 5322,
                                "name": "Vaisali Nagar"
                              },
                              "quantity": 2,
                              "price": {
                                "base": {
                                  "marked": 2095,
                                  "effective": 2095,
                                  "currency_code": "INR"
                                },
                                "converted": {
                                  "marked": 2095,
                                  "effective": 2095,
                                  "currency_code": "INR"
                                }
                              }
                            },
                            "product": {
                              "type": "product",
                              "uid": 791651,
                              "name": "Black Running Shoes",
                              "slug": "furo-black-running-shoes-791651-f8bcc3",
                              "brand": {
                                "uid": 1054,
                                "name": "Furo"
                              },
                              "categories": [
                                {
                                  "uid": 160,
                                  "name": "Running Shoes"
                                }
                              ],
                              "images": [
                                {
                                  "aspect_ratio": "16:25",
                                  "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/1054_R1005753/1_1546490507364.jpg",
                                  "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/1054_R1005753/1_1546490507364.jpg"
                                }
                              ],
                              "action": {
                                "type": "product",
                                "url": "https://api.addsale.com/platform/content/v1/products/furo-black-running-shoes-791651-f8bcc3/",
                                "query": {
                                  "product_slug": [
                                    "furo-black-running-shoes-791651-f8bcc3"
                                  ]
                                }
                              }
                            },
                            "message": "",
                            "quantity": 2,
                            "availability": {
                              "sizes": [
                                "7",
                                "8",
                                "9",
                                "10",
                                "6"
                              ],
                              "other_store_quantity": 7,
                              "out_of_stock": false,
                              "deliverable": true,
                              "is_valid": true
                            },
                            "price": {
                              "base": {
                                "add_on": 4190,
                                "marked": 4190,
                                "effective": 4190,
                                "selling": 4190,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "add_on": 4190,
                                "marked": 4190,
                                "effective": 4190,
                                "selling": 4190,
                                "currency_code": "INR"
                              }
                            }
                          }
                        ],
                        "cart_id": 13055,
                        "uid": "13055",
                        "breakup_values": {
                          "raw": {
                            "cod_charge": 0,
                            "convenience_fee": 0,
                            "coupon": 0,
                            "delivery_charge": 0,
                            "discount": 0,
                            "fynd_cash": 0,
                            "gift_card": 0,
                            "gst_charges": 958.73,
                            "mrp_total": 6285,
                            "subtotal": 6285,
                            "sub_total": 6285,
                            "total": 6285,
                            "vog": 5326.27,
                            "you_saved": 0,
                            "promotion": 0
                          },
                          "loyalty_points": {
                            "total": 0,
                            "applicable": 0,
                            "is_applied": false,
                            "message": "Reward point not applicable with Coupon",
                            "description": "Your cashback, referrals, and refund amount get credited to Fynd Cash which can be redeemed while placing an order."
                          },
                          "coupon": {
                            "type": "cash",
                            "coupon_type": "cart",
                            "sub_title": "",
                            "title": "",
                            "minimum_cart_value": 0,
                            "coupon_value": 0,
                            "description": "",
                            "code": "",
                            "uid": null,
                            "value": 0,
                            "is_applied": false,
                            "message": "Sorry! Invalid coupon"
                          },
                          "display": [
                            {
                              "display": "MRP Total",
                              "key": "mrp_total",
                              "value": 6285,
                              "currency_code": "INR",
                              "meta": {}
                            },
                            {
                              "display": "Subtotal",
                              "key": "subtotal",
                              "value": 6285,
                              "currency_code": "INR",
                              "meta": {}
                            },
                            {
                              "display": "Total",
                              "key": "total",
                              "value": 6285,
                              "currency_code": "INR"
                            }
                          ]
                        },
                        "delivery_charge_info": "",
                        "coupon_text": "View all offers",
                        "gstin": null,
                        "pan_no": null,
                        "message": "",
                        "comment": "",
                        "checkout_mode": "self",
                        "payment_selection_lock": {
                          "enabled": false,
                          "default_options": "COD",
                          "payment_identifier": "JIOPP"
                        },
                        "restrict_checkout": false,
                        "is_valid": true,
                        "custom_cart_meta": {},
                        "pan_config": {},
                        "is_pan_received": false,
                        "notification": {},
                        "common_config": {
                          "delivery_charges_config": {
                            "enabled": true,
                            "charges": [
                              {
                                "threshold": 1499,
                                "charges": 99
                              }
                            ]
                          }
                        },
                        "last_modified": "2023-03-03"
                      },
                      "error": ""
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No cart found for the token sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SharedCartResult"
                },
                "examples": {
                  "Invalid Token": {
                    "value": {
                      "cart": {},
                      "error": "Invalid or Expired token"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Cart"
        ]
      }
    },
    "/service/application/cart/v1.0/share-cart/{token}/{action}": {
      "post": {
        "summary": "updateCartWithSharedItems | Update with shared items",
        "description": "Merge or replace shared cart items with existing cart.",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "name": "token",
            "description": "Token of the shared short link.",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "examples": {
              "Cart Merged/Replaced": {
                "value": "5McSFzjO"
              },
              "Invalid Token": {
                "value": "XYZ"
              }
            }
          },
          {
            "name": "action",
            "description": "Operation to perform on the existing cart merge or replace.",
            "schema": {
              "type": "string",
              "enum": [
                "merge",
                "replace"
              ]
            },
            "in": "path",
            "required": true,
            "examples": {
              "Cart Merged/Replaced": {
                "value": "merge"
              },
              "Invalid Token": {
                "value": "merge"
              }
            }
          },
          {
            "name": "cart_id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Cart Merged/Replaced": {
                "value": "65c06fe589db42581e4be72e"
              },
              "Invalid Token": {
                "value": "65c06fe589db42581e4be72e"
              }
            },
            "description": "The unique identifier of the cart."
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a merged or replaced cart as per the valid token. Refer `SharedCartResult` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SharedCartResult"
                },
                "examples": {
                  "Cart Merged/Replaced": {
                    "value": {
                      "cart": {
                        "shared_cart_details": {
                          "token": "BQ9jySQ9",
                          "user": {
                            "user_id": "23109086",
                            "is_anonymous": false
                          },
                          "meta": {
                            "selected_staff": "",
                            "ordering_store": null
                          },
                          "selected_staff": "",
                          "ordering_store": null,
                          "source": {},
                          "created_on": "2019-12-18T14:00:07.165000"
                        },
                        "items": [
                          {
                            "key": "791651_6",
                            "identifiers": {
                              "identifier": "5mPyy88URXuh3Lo35uaTg"
                            },
                            "discount": "",
                            "bulk_offer": {},
                            "coupon_message": "",
                            "article": {
                              "type": "article",
                              "uid": "304_1054_9036_R1005753_6",
                              "size": "6",
                              "seller": {
                                "uid": 304,
                                "name": "LEAYAN GLOBAL PVT. LTD."
                              },
                              "store": {
                                "uid": 5322,
                                "name": "Vaisali Nagar"
                              },
                              "quantity": 1,
                              "price": {
                                "base": {
                                  "marked": 2095,
                                  "effective": 2095,
                                  "currency_code": "INR"
                                },
                                "converted": {
                                  "marked": 2095,
                                  "effective": 2095,
                                  "currency_code": "INR"
                                }
                              }
                            },
                            "product": {
                              "type": "product",
                              "uid": 791651,
                              "name": "Black Running Shoes",
                              "slug": "furo-black-running-shoes-791651-f8bcc3",
                              "brand": {
                                "uid": 1054,
                                "name": "Furo"
                              },
                              "categories": [
                                {
                                  "uid": 160,
                                  "name": "Running Shoes"
                                }
                              ],
                              "images": [
                                {
                                  "aspect_ratio": "16:25",
                                  "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/1054_R1005753/1_1546490507364.jpg",
                                  "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/1054_R1005753/1_1546490507364.jpg"
                                }
                              ],
                              "action": {
                                "type": "product",
                                "url": "https://api.addsale.com/platform/content/v1/products/furo-black-running-shoes-791651-f8bcc3/",
                                "query": {
                                  "product_slug": [
                                    "furo-black-running-shoes-791651-f8bcc3"
                                  ]
                                }
                              }
                            },
                            "message": "",
                            "quantity": 1,
                            "availability": {
                              "sizes": [
                                "7",
                                "8",
                                "9",
                                "10",
                                "6"
                              ],
                              "other_store_quantity": 12,
                              "out_of_stock": false,
                              "deliverable": true,
                              "is_valid": true
                            },
                            "price": {
                              "base": {
                                "add_on": 2095,
                                "marked": 2095,
                                "effective": 2095,
                                "selling": 2095,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "add_on": 2095,
                                "marked": 2095,
                                "effective": 2095,
                                "selling": 2095,
                                "currency_code": "INR"
                              }
                            }
                          },
                          {
                            "key": "791651_7",
                            "identifiers": {
                              "identifier": "5mPyy88URXuh3Lo35uaTg"
                            },
                            "discount": "",
                            "bulk_offer": {},
                            "coupon_message": "",
                            "article": {
                              "type": "article",
                              "uid": "304_1054_9036_R1005753_7",
                              "size": "7",
                              "seller": {
                                "uid": 304,
                                "name": "LEAYAN GLOBAL PVT. LTD."
                              },
                              "store": {
                                "uid": 5322,
                                "name": "Vaisali Nagar"
                              },
                              "quantity": 2,
                              "price": {
                                "base": {
                                  "marked": 2095,
                                  "effective": 2095,
                                  "currency_code": "INR"
                                },
                                "converted": {
                                  "marked": 2095,
                                  "effective": 2095,
                                  "currency_code": "INR"
                                }
                              }
                            },
                            "product": {
                              "type": "product",
                              "uid": 791651,
                              "name": "Black Running Shoes",
                              "slug": "furo-black-running-shoes-791651-f8bcc3",
                              "brand": {
                                "uid": 1054,
                                "name": "Furo"
                              },
                              "categories": [
                                {
                                  "uid": 160,
                                  "name": "Running Shoes"
                                }
                              ],
                              "images": [
                                {
                                  "aspect_ratio": "16:25",
                                  "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/1054_R1005753/1_1546490507364.jpg",
                                  "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/1054_R1005753/1_1546490507364.jpg"
                                }
                              ],
                              "action": {
                                "type": "product",
                                "url": "https://api.addsale.com/platform/content/v1/products/furo-black-running-shoes-791651-f8bcc3/",
                                "query": {
                                  "product_slug": [
                                    "furo-black-running-shoes-791651-f8bcc3"
                                  ]
                                }
                              }
                            },
                            "message": "",
                            "quantity": 2,
                            "availability": {
                              "sizes": [
                                "7",
                                "8",
                                "9",
                                "10",
                                "6"
                              ],
                              "other_store_quantity": 7,
                              "out_of_stock": false,
                              "deliverable": true,
                              "is_valid": true
                            },
                            "price": {
                              "base": {
                                "add_on": 4190,
                                "marked": 4190,
                                "effective": 4190,
                                "selling": 4190,
                                "currency_code": "INR"
                              },
                              "converted": {
                                "add_on": 4190,
                                "marked": 4190,
                                "effective": 4190,
                                "selling": 4190,
                                "currency_code": "INR"
                              }
                            }
                          }
                        ],
                        "cart_id": 13055,
                        "uid": "13055",
                        "breakup_values": {
                          "raw": {
                            "cod_charge": 0,
                            "convenience_fee": 0,
                            "coupon": 0,
                            "delivery_charge": 0,
                            "discount": 0,
                            "fynd_cash": 0,
                            "gift_card": 0,
                            "gst_charges": 958.73,
                            "mrp_total": 6285,
                            "subtotal": 6285,
                            "sub_total": 6285,
                            "total": 6285,
                            "vog": 5326.27,
                            "you_saved": 0,
                            "promotion": 0
                          },
                          "loyalty_points": {
                            "total": 0,
                            "applicable": 0,
                            "is_applied": false,
                            "message": "Reward point not applicable with Coupon",
                            "description": "Your cashback, referrals, and refund amount get credited to Fynd Cash which can be redeemed while placing an order."
                          },
                          "coupon": {
                            "type": "cash",
                            "coupon_type": "cart",
                            "sub_title": "",
                            "title": "",
                            "minimum_cart_value": 0,
                            "coupon_value": 0,
                            "description": "",
                            "code": "",
                            "uid": null,
                            "value": 0,
                            "is_applied": false,
                            "message": "Sorry! Invalid coupon"
                          },
                          "display": [
                            {
                              "display": "MRP Total",
                              "key": "mrp_total",
                              "value": 6285,
                              "currency_code": "INR"
                            },
                            {
                              "display": "Subtotal",
                              "key": "subtotal",
                              "value": 6285,
                              "currency_code": "INR"
                            },
                            {
                              "display": "Total",
                              "key": "total",
                              "value": 6285,
                              "currency_code": "INR"
                            }
                          ]
                        },
                        "delivery_charge_info": "",
                        "coupon_text": "View all offers",
                        "gstin": null,
                        "pan_no": null,
                        "message": "",
                        "comment": "",
                        "checkout_mode": "self",
                        "payment_selection_lock": {
                          "enabled": false,
                          "default_options": "COD",
                          "payment_identifier": "JIOPP"
                        },
                        "restrict_checkout": false,
                        "is_valid": true,
                        "custom_cart_meta": {},
                        "pan_config": {},
                        "is_pan_received": false,
                        "notification": {},
                        "common_config": {
                          "delivery_charges_config": {
                            "enabled": true,
                            "charges": [
                              {
                                "threshold": 1499,
                                "charges": 99
                              }
                            ]
                          }
                        },
                        "last_modified": "2023-03-03"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No cart found for the token sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SharedCartResult"
                },
                "examples": {
                  "Invalid Token": {
                    "value": {
                      "cart": {},
                      "error": "Invalid or Expired token"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Cart"
        ]
      }
    },
    "/service/application/cart/v1.0/available-promotions": {
      "get": {
        "summary": "getPromotionOffers | List available promotion offers",
        "description": "List all promotional offers available for the items in the cart, including details such as offer text, unique promotion ID, and validity period.",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "name": "slug",
            "description": "A short, human-readable, URL-friendly identifier of a product.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "examples": {
              "200_OKAY": {
                "value": "global-desi-aw19gbdst31blakblack-1077515-1f6956"
              },
              "Item Not Found": {
                "value": "xyz"
              }
            }
          },
          {
            "name": "page_size",
            "description": "Number of offers to be fetched to show.",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "examples": {
              "200_OKAY": {
                "value": 1
              },
              "Item Not Found": {
                "value": 1
              }
            }
          },
          {
            "name": "promotion_group",
            "description": "Type of promotion groups.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "examples": {
              "200_OKAY": {
                "value": "product"
              },
              "Item Not Found": {
                "value": "product"
              }
            }
          },
          {
            "name": "store_id",
            "description": "Unique identifier of a store.",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a array containing the available offers (if exists) on product via promotions. Refer `PromotionOffersResult` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionOffersResult"
                },
                "examples": {
                  "200_OKAY": {
                    "value": {
                      "available_promotions": [
                        {
                          "offer_text": "Buy 2 apple/gionee product get 500 off",
                          "description": "Test promotion",
                          "id": "61d1db23f5b315cf265126c0",
                          "valid_till": "2022-03-29T09:05:49.063Z",
                          "promotion_group": "cart"
                        },
                        {
                          "offer_text": "Buy 2 apple/gionee product get 500 off",
                          "description": "Test promotion",
                          "id": "6203cb1393506f8a75ecd566",
                          "valid_till": "2022-03-29T09:05:49.063Z",
                          "promotion_group": "product"
                        },
                        {
                          "offer_text": "Buy 2 apple/gionee product get 500 off",
                          "description": "Test promotion",
                          "id": "6203cb1393506f8a75ecd567",
                          "valid_till": "2022-03-29T09:05:49.063Z",
                          "promotion_group": "product"
                        },
                        {
                          "offer_text": "Buy 2 apple/gionee product get 500 off",
                          "description": "Test promotion",
                          "id": "6203cb1393506f8a75ecd569",
                          "valid_till": "2022-03-29T09:05:49.063Z",
                          "promotion_group": "product"
                        },
                        {
                          "free_gift_items": [
                            {
                              "item_id": 7513738,
                              "item_name": "dinshaws milk",
                              "item_images_url": [
                                "https://hdn-1.jmpx2.de/jmpx2/products/pictures/item/free/original/-uah4-ZMe-ProductTestAR2.jpeg"
                              ],
                              "item_brand_name": "Arpita",
                              "item_price_details": {
                                "effective": {
                                  "min": 80,
                                  "max": 700
                                },
                                "marked": {
                                  "min": 100,
                                  "max": 800
                                },
                                "currency": "INR"
                              }
                            },
                            {
                              "item_slug": "Dinshaw"
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Item not found with provided `slug` query parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationErrorResult"
                },
                "examples": {
                  "Item Not Found": {
                    "value": {
                      "message": "Item not found"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Promotion offers"
        ]
      }
    },
    "/service/application/cart/v1.0/available-ladder-prices": {
      "get": {
        "summary": "getLadderOffers | List ladder offers",
        "description": "Get ladder offers associated for the items in the cart. Ladder offers provide discounts or special pricing based on item quantity, allowing users to benefit from bulk purchases or promotional deals.",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "name": "slug",
            "description": "A short, human-readable, URL-friendly identifier of a product.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "200_OKAY": {
                "value": "global-desi-aw19gbdst31blakblack-1077515-1f6956"
              },
              "Item not found": {
                "value": "xyz"
              }
            }
          },
          {
            "name": "store_id",
            "description": "Store uid of assigned store on PDP page. If not passed default first created ladder will be returned.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "examples": {
              "200_OKAY": {
                "value": 2890
              },
              "Item not found": {
                "value": 2890
              }
            }
          },
          {
            "name": "promotion_id",
            "description": "Get ladder information of given promotion id explicitely.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "examples": {
              "200_OKAY": {
                "value": "61d1db23f5b315cf265126c4"
              },
              "Item not found": {
                "value": "61d1db23f5b315cf265126c4"
              }
            }
          },
          {
            "name": "page_size",
            "description": "Number of offers to be fetched to show.",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "examples": {
              "200_OKAY": {
                "value": 1
              },
              "Item not found": {
                "value": 1
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a object containing the applicable ladder price offers (if exists) on product. Refer `PromotionOffersResult` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LadderPriceOffers"
                },
                "examples": {
                  "200_OKAY": {
                    "value": {
                      "available_offers": [
                        {
                          "id": "6203cb1393506f8a75ecd56b",
                          "offer_text": "Ladder Price 2",
                          "description": "Ladder Price 2",
                          "offer_prices": [
                            {
                              "min_quantity": 0,
                              "max_quantity": 0,
                              "margin": 5,
                              "type": "percentage",
                              "price": {
                                "marked": 5499,
                                "effective": 5499,
                                "offer_price": 5224.05
                              }
                            },
                            {
                              "min_quantity": 0,
                              "max_quantity": 0,
                              "margin": 10,
                              "type": "percentage",
                              "price": {
                                "marked": 5499,
                                "effective": 5499,
                                "offer_price": 4949.1
                              }
                            },
                            {
                              "min_quantity": 0,
                              "max_quantity": 0,
                              "margin": 20,
                              "type": "percentage",
                              "price": {
                                "marked": 5499,
                                "effective": 5499,
                                "offer_price": 4399.2
                              }
                            }
                          ]
                        },
                        {
                          "id": "6203cb1393506f8a75ecd56a",
                          "offer_text": "Ladder Price 1",
                          "description": "Ladder Price 1",
                          "offer_prices": [
                            {
                              "min_quantity": 0,
                              "max_quantity": 0,
                              "margin": 10,
                              "type": "amount",
                              "price": {
                                "marked": 5499,
                                "effective": 5499,
                                "offer_price": 4949.1
                              }
                            },
                            {
                              "min_quantity": 0,
                              "max_quantity": 0,
                              "margin": 15,
                              "type": "amount",
                              "price": {
                                "marked": 5499,
                                "effective": 5499,
                                "offer_price": 4674.15
                              }
                            },
                            {
                              "min_quantity": 0,
                              "max_quantity": 0,
                              "margin": 20,
                              "type": "amount",
                              "price": {
                                "marked": 5499,
                                "effective": 5499,
                                "offer_price": 4399.2
                              }
                            }
                          ]
                        }
                      ],
                      "store_id": [
                        2890
                      ],
                      "currency": {
                        "code": "INR",
                        "symbol": "â‚¹"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Item not found with provided `slug` query parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationErrorResult"
                },
                "examples": {
                  "Item not found": {
                    "value": {
                      "message": "Item not found"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Promotion offers"
        ]
      }
    },
    "/service/application/cart/v1.0/shipment": {
      "get": {
        "summary": "getShipments | List shipments.",
        "description": "Get shipment details for the items in a cart, specific to the selected address. Shipment details include delivery promises, seller information, item details, and other relevant information.",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "pick_at_store_uid",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the store from where the order will be picked up by the customer, assuming the order_type is `PickAtStore`. This may or may not be the same as the ID of the ordering store."
          },
          {
            "in": "query",
            "name": "ordering_store_id",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "examples": {
              "Shipment Generated": {
                "value": 2890
              },
              "Shipment Generation Failed": {
                "value": 2890
              }
            },
            "description": "ID of the store where the customer is ordering from."
          },
          {
            "name": "i",
            "description": "This is a boolean value. Select `true` to retrieve all the items added in the cart.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "examples": {
              "Shipment Generated": {
                "value": false
              },
              "Shipment Generation Failed": {
                "value": false
              }
            }
          },
          {
            "name": "p",
            "description": "Select `true` for getting a payment option in response.",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier of the cart.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Shipment Generated": {
                "value": "65c06fe589db42581e4be72e"
              },
              "Shipment Generation Failed": {
                "value": "65c06fe589db42581e4be72e"
              }
            }
          },
          {
            "in": "query",
            "name": "buy_now",
            "schema": {
              "type": "boolean"
            },
            "description": "This is boolean to get buy_now cart."
          },
          {
            "name": "address_id",
            "description": "ID allotted to the selected address.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Shipment Generated": {
                "value": "65bb5a41feeb84432e132c03"
              },
              "Shipment Generation Failed": {
                "value": "65bb5a41feeb84432e132c03"
              }
            }
          },
          {
            "name": "area_code",
            "description": "The PIN Code of the destination address, e.g. 400059.",
            "in": "query",
            "x-not-enum": true,
            "schema": {
              "type": "string",
              "x-not-enum": true
            },
            "examples": {
              "Shipment Generated": {
                "value": 400093
              },
              "Shipment Generation Failed": {
                "value": 400093
              }
            }
          },
          {
            "name": "order_type",
            "description": "The order type of shipment HomeDelivery - If the customer wants the order home-delivered PickAtStore - If the customer wants the handover of an order at the store itself. Digital - If the customer wants to buy digital voucher ( for jiogames ).",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "HomeDelivery",
                "PickAtStore"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns delivery promise along with shipment details and price breakup. Refer `CartShipmentsResult` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartShipmentsResult"
                },
                "examples": {
                  "Shipment Generated": {
                    "value": {
                      "items": [],
                      "buy_now": false,
                      "cart_id": 7501,
                      "uid": "7501",
                      "success": true,
                      "breakup_values": {
                        "loyalty_points": {
                          "total": 0,
                          "applicable": 0,
                          "is_applied": false,
                          "message": "Reward point not applicable with Coupon",
                          "description": "Your cashback, referrals, and refund amount get credited to Fynd Cash which can be redeemed while placing an order."
                        },
                        "coupon": {
                          "type": "cash",
                          "coupon_type": "cart",
                          "sub_title": "",
                          "title": "",
                          "minimum_cart_value": 0,
                          "coupon_value": 0,
                          "description": "",
                          "code": "",
                          "uid": null,
                          "value": 0,
                          "is_applied": false,
                          "message": "Sorry! Invalid Coupon"
                        },
                        "raw": {
                          "cod_charge": 0,
                          "convenience_fee": 0,
                          "coupon": 0,
                          "delivery_charge": 0,
                          "discount": 0,
                          "fynd_cash": 0,
                          "gift_card": 0,
                          "gst_charges": 214.18,
                          "mrp_total": 1999,
                          "mop_total": 0,
                          "total_charge": 10,
                          "subtotal": 1999,
                          "sub_total": 1999,
                          "total": 1999,
                          "vog": 1784.82,
                          "you_saved": 0,
                          "promotion": 0
                        },
                        "display": [
                          {
                            "display": "MRP Total",
                            "key": "mrp_total",
                            "value": 1999,
                            "currency_code": "INR",
                            "meta": {}
                          },
                          {
                            "display": "Subtotal",
                            "key": "subtotal",
                            "value": 1999,
                            "currency_code": "INR",
                            "meta": {}
                          },
                          {
                            "display": "Total",
                            "key": "total",
                            "value": 1999,
                            "currency_code": "INR",
                            "meta": {}
                          }
                        ]
                      },
                      "shipments": [
                        {
                          "fulfillment_id": 3009,
                          "shipment_type": "single_shipment",
                          "order_type": "HomeDelivery",
                          "fulfillment_type": "store",
                          "dp_id": "29",
                          "dp_options": {
                            "4": {
                              "f_priority": 4,
                              "r_priority": 5,
                              "is_cod": true,
                              "is_prepaid": true,
                              "is_reverse": true
                            },
                            "7": {
                              "f_priority": 3,
                              "r_priority": 4,
                              "is_cod": true,
                              "is_prepaid": true,
                              "is_reverse": true
                            },
                            "29": {
                              "f_priority": 1,
                              "r_priority": 2,
                              "is_cod": true,
                              "is_prepaid": true,
                              "is_reverse": true
                            }
                          },
                          "promise": {
                            "timestamp": {
                              "min": 1566678108,
                              "max": 1567023708
                            },
                            "formatted": {
                              "min": "Aug 24",
                              "max": "Aug 28"
                            },
                            "iso": {
                              "min": "2019-08-25T00:35:08Z",
                              "max": "2019-08-29T07:55:08Z"
                            }
                          },
                          "box_type": "Small Courier bag",
                          "shipments": 1,
                          "items": [
                            {
                              "quantity": 1,
                              "identifiers": {},
                              "product": {
                                "type": "product",
                                "uid": 820312,
                                "name": "Navy Blue Melange Shorts",
                                "slug": "883-police-navy-blue-melange-shorts-820312-4943a8",
                                "brand": {
                                  "uid": 610,
                                  "name": "883 Police"
                                },
                                "categories": [
                                  {
                                    "uid": 193,
                                    "name": "Shorts"
                                  }
                                ],
                                "images": [
                                  {
                                    "aspect_ratio": "16:25",
                                    "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/610_SPIRAL19ANAVY/1_1549105947281.jpg",
                                    "secure_url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/original/610_SPIRAL19ANAVY/1_1549105947281.jpg"
                                  }
                                ],
                                "action": {
                                  "type": "product",
                                  "url": "https://api.addsale.com/platform/content/v1/products/883-police-navy-blue-melange-shorts-820312-4943a8/",
                                  "query": {
                                    "product_slug": [
                                      "883-police-navy-blue-melange-shorts-820312-4943a8"
                                    ]
                                  }
                                }
                              },
                              "discount": "",
                              "bulk_offer": {},
                              "key": "820312_L",
                              "price": {
                                "base": {
                                  "add_on": 1999,
                                  "marked": 1999,
                                  "effective": 1999,
                                  "selling": 1999,
                                  "currency_code": "INR"
                                },
                                "converted": {
                                  "add_on": 1999,
                                  "marked": 1999,
                                  "effective": 1999,
                                  "selling": 1999,
                                  "currency_code": "INR"
                                }
                              },
                              "article": {
                                "type": "article",
                                "uid": "381_610_IGPL01_SPIRAL19ANAVY_L",
                                "size": "L",
                                "seller": {
                                  "uid": 381,
                                  "name": "INTERSOURCE GARMENTS PVT LTD"
                                },
                                "store": {
                                  "uid": 3009,
                                  "name": "Kormangala"
                                },
                                "quantity": 2,
                                "tags": [],
                                "price": {
                                  "base": {
                                    "marked": 1999,
                                    "effective": 1999,
                                    "currency_code": "INR"
                                  },
                                  "converted": {
                                    "marked": 1999,
                                    "effective": 1999,
                                    "currency_code": "INR"
                                  }
                                }
                              },
                              "charges": [
                                {
                                  "type": "convenience fee",
                                  "name": "convenience fee",
                                  "code": "convenience fee",
                                  "amount": {
                                    "value": 10,
                                    "currency": "INR"
                                  },
                                  "meta": {
                                    "price_adjustment_id": "64c22d66fe278c0796bd8e4d",
                                    "article_level_distribution": true
                                  }
                                }
                              ],
                              "availability": {
                                "sizes": [
                                  "L",
                                  "XL",
                                  "XXL"
                                ],
                                "other_store_quantity": 1,
                                "out_of_stock": false,
                                "deliverable": true,
                                "is_valid": true
                              },
                              "coupon_message": "",
                              "message": ""
                            }
                          ]
                        }
                      ],
                      "delivery_charge_info": "",
                      "coupon_text": "View all offers",
                      "gstin": null,
                      "pan_no": null,
                      "message": "",
                      "checkout_mode": "self",
                      "last_modified": "2020-03-09T00:00:00.000Z",
                      "restrict_checkout": false,
                      "is_valid": true,
                      "custom_cart_meta": {},
                      "pan_config": {},
                      "is_pan_received": false,
                      "payment_selection_lock": {
                        "default_options": "cod",
                        "payment_identifier": "cod",
                        "enabled": false
                      },
                      "notification": {},
                      "common_config": {
                        "delivery_charges_config": {
                          "enabled": true,
                          "charges": [
                            {
                              "threshold": 1499,
                              "charges": 99
                            }
                          ]
                        }
                      }
                    }
                  },
                  "Shipment Generation Failed": {
                    "value": {
                      "items": [],
                      "buy_now": false,
                      "cart_id": 7501,
                      "uid": "7501",
                      "success": true,
                      "breakup_values": {
                        "loyalty_points": {
                          "total": 0,
                          "applicable": 0,
                          "is_applied": false,
                          "message": "Reward point not applicable with Coupon",
                          "description": "Your cashback, referrals, and refund amount get credited to Fynd Cash which can be redeemed while placing an order."
                        },
                        "coupon": {
                          "type": "cash",
                          "coupon_type": "cart",
                          "sub_title": "",
                          "title": "",
                          "minimum_cart_value": 0,
                          "coupon_value": 0,
                          "description": "",
                          "code": "",
                          "uid": null,
                          "value": 0,
                          "is_applied": false,
                          "message": "Sorry! Invalid Coupon"
                        },
                        "raw": {
                          "cod_charge": 0,
                          "convenience_fee": 0,
                          "coupon": 0,
                          "delivery_charge": 0,
                          "discount": 0,
                          "fynd_cash": 0,
                          "gift_card": 0,
                          "gst_charges": 214.18,
                          "mrp_total": 1999,
                          "mop_total": 0,
                          "total_charge": 10,
                          "subtotal": 1999,
                          "sub_total": 1999,
                          "total": 1999,
                          "vog": 1784.82,
                          "you_saved": 0,
                          "promotion": 0
                        },
                        "display": [
                          {
                            "display": "MRP Total",
                            "key": "mrp_total",
                            "value": 1999,
                            "currency_code": "INR",
                            "meta": {}
                          },
                          {
                            "display": "Subtotal",
                            "key": "subtotal",
                            "value": 1999,
                            "currency_code": "INR",
                            "meta": {}
                          },
                          {
                            "display": "Total",
                            "key": "total",
                            "value": 1999,
                            "currency_code": "INR",
                            "meta": {}
                          }
                        ]
                      },
                      "shipments": [],
                      "message": "Shipments could not be generated. Please Try again after some time.",
                      "delivery_charge_info": "",
                      "coupon_text": "View all offers",
                      "gstin": null,
                      "pan_no": null,
                      "checkout_mode": "self",
                      "last_modified": "2020-03-09T00:00:00.000Z",
                      "restrict_checkout": false,
                      "is_valid": false,
                      "custom_cart_meta": {},
                      "pan_config": {},
                      "is_pan_received": false,
                      "payment_selection_lock": {
                        "default_options": "cod",
                        "payment_identifier": "cod",
                        "enabled": false
                      },
                      "notification": {},
                      "common_config": {
                        "delivery_charges_config": {
                          "enabled": true,
                          "charges": [
                            {
                              "threshold": 1499,
                              "charges": 99
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Shipment"
        ]
      }
    },
    "/service/application/cart/v1.0/checkout": {
      "post": {
        "summary": "checkoutCart | Checkout cart",
        "description": "The checkout cart initiates the order creation process based on the selected address and payment method. It revalidates the cart details to ensure safe and seamless order placement.",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "buy_now",
            "description": "This indicates the type of cart to checkout.",
            "schema": {
              "type": "boolean"
            },
            "examples": {
              "Successful checkout with NetBanking": {
                "value": "false"
              }
            }
          },
          {
            "name": "cart_type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "universal"
              ]
            },
            "description": "The type of cart."
          }
        ],
        "requestBody": {
          "description": "Check the example shown below or refer `CartCheckoutDetailPayload` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CartCheckoutDetailPayload"
              },
              "examples": {
                "Successful checkout with NetBanking": {
                  "value": {
                    "id": "65c06fe589db42581e4be72e",
                    "address_id": "65bb5a41feeb84432e132c03",
                    "billing_address_id": "65bb5a41feeb84432e132c03",
                    "aggregator": "Razorpay",
                    "merchant_code": "NB_ICICI",
                    "payment_identifier": "ICIC",
                    "payment_mode": "NB",
                    "custom_meta": [
                      {
                        "key": "name",
                        "value": "shantanu pandey"
                      }
                    ],
                    "customer_details": {
                      "name": "Customer Name",
                      "mobile": "9876543210",
                      "email": "example@mail.com"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Returns the status of cart checkout. Refer `CartCheckoutResultSchema` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartCheckoutResult"
                },
                "examples": {
                  "Successful checkout with NetBanking": {
                    "value": {
                      "callback_url": "https://cms-tms.hostx1.de/cart/order-status",
                      "payment_confirm_url": "https://api.fyndx1.de/service/webhooks/payment/v1.0/confirm/",
                      "cart": {
                        "is_valid": true,
                        "order_id": "FY65D436190E473C0E28",
                        "items": [
                          {
                            "identifiers": {
                              "identifier": "nS1r8vl7RV2S6NGhQcGSyQ"
                            },
                            "charges": [],
                            "coupon_message": "",
                            "article": {
                              "meta": {},
                              "size": "OS",
                              "_custom_json": {},
                              "price": {
                                "converted": {
                                  "marked": 234,
                                  "currency_code": "INR",
                                  "currency_symbol": "â‚¹",
                                  "selling": 23,
                                  "effective": 23
                                },
                                "base": {
                                  "marked": 234,
                                  "currency_code": "INR",
                                  "currency_symbol": "â‚¹",
                                  "selling": 23,
                                  "effective": 23
                                }
                              },
                              "uid": "655625cb5c853dee2f6984e2",
                              "mto_quantity": 0,
                              "seller": {
                                "name": "auto_company_POS_2",
                                "uid": 2
                              },
                              "quantity": 999,
                              "type": "article",
                              "store": {
                                "name": "test",
                                "uid": 23039,
                                "store_code": "2"
                              },
                              "tags": [],
                              "seller_identifier": "1692344346344",
                              "gift_card": {
                                "gift_price": 0,
                                "display_text": "",
                                "is_gift_applied": false
                              },
                              "product_group_tags": null,
                              "cart_item_meta": {},
                              "identifier": {
                                "ean": "1692344346344"
                              },
                              "is_gift_visible": false,
                              "extra_meta": {}
                            },
                            "price": {
                              "converted": {
                                "marked": 2106,
                                "currency_code": "INR",
                                "currency_symbol": "â‚¹",
                                "add_on": 207,
                                "selling": 207,
                                "effective": 207
                              },
                              "base": {
                                "marked": 2106,
                                "currency_code": "INR",
                                "currency_symbol": "â‚¹",
                                "add_on": 207,
                                "selling": 207,
                                "effective": 207
                              }
                            },
                            "bulk_offer": {},
                            "is_set": false,
                            "promo_meta": {},
                            "seller_count": 1,
                            "discount": "90% OFF",
                            "price_adjustment_applied": [],
                            "delivery_promise": {
                              "iso": {
                                "max": "2024-02-24T22:00:15Z",
                                "min": "2024-02-22T11:00:15Z"
                              },
                              "timestamp": {
                                "max": 1708812015,
                                "min": 1708599615
                              },
                              "formatted": {
                                "max": "Sat, 24 Feb",
                                "min": "Thu, 22 Feb"
                              }
                            },
                            "quantity": 9,
                            "message": "",
                            "parent_item_identifiers": {
                              "identifier": null,
                              "parent_item_size": null,
                              "parent_item_id": null
                            },
                            "availability": {
                              "available_sizes": [
                                {
                                  "display": "OS",
                                  "value": "OS",
                                  "is_available": true
                                }
                              ],
                              "is_valid": true,
                              "out_of_stock": false,
                              "deliverable": true,
                              "other_store_quantity": 9,
                              "sizes": [
                                "OS"
                              ]
                            },
                            "custom_order": {
                              "is_custom_order": false,
                              "manufacturing_time_unit": "days",
                              "manufacturing_time": 0
                            },
                            "coupon": {},
                            "product": {
                              "name": "Product-Lonie857287501872023139344",
                              "brand": {
                                "name": "",
                                "uid": 8135
                              },
                              "_custom_json": {},
                              "images": [
                                {
                                  "url": "https://hdn-1.fynd.com/media/fynd_store_items/l2_category/720x0/2830_c5bb5fc02f414307a828c4c56483c30a.jpg",
                                  "secure_url": "https://hdn-1.fynd.com/media/fynd_store_items/l2_category/720x0/2830_c5bb5fc02f414307a828c4c56483c30a.jpg",
                                  "aspect_ratio": "16:25"
                                }
                              ],
                              "slug": "product-lonie857287501872023139344-7536704",
                              "teaser_tag": {},
                              "type": "product",
                              "item_code": "BRUNT-1692344346344",
                              "uid": 7536704,
                              "tags": [],
                              "action": {
                                "type": "product",
                                "url": "https://api.fyndx1.de/platform/content/v1/products/product-lonie857287501872023139344-7536704/",
                                "query": {
                                  "product_slug": [
                                    "product-lonie857287501872023139344-7536704"
                                  ]
                                }
                              },
                              "categories": [
                                {
                                  "name": "Laura65601729187202313942",
                                  "uid": 30263
                                }
                              ],
                              "attributes": {
                                "name": "Product-Lonie857287501872023139344",
                                "brand_name": "Sam146400281872023132226"
                              }
                            },
                            "price_per_unit": {
                              "converted": {
                                "marked": 234,
                                "currency_code": "INR",
                                "currency_symbol": "â‚¹",
                                "selling_price": 23,
                                "effective": 23
                              },
                              "base": {
                                "marked": 234,
                                "currency_code": "INR",
                                "currency_symbol": "â‚¹",
                                "selling_price": 23,
                                "effective": 23
                              }
                            },
                            "key": "7536704_OS",
                            "moq": {
                              "minimum": 1
                            },
                            "promotions_applied": []
                          },
                          {
                            "identifiers": {
                              "identifier": "zGloF_1dSHWDdjn70vgCAA"
                            },
                            "charges": [],
                            "coupon_message": "",
                            "article": {
                              "meta": {},
                              "size": "OS",
                              "_custom_json": {},
                              "price": {
                                "converted": {
                                  "marked": 150,
                                  "currency_code": "INR",
                                  "currency_symbol": "â‚¹",
                                  "selling": 134,
                                  "effective": 134
                                },
                                "base": {
                                  "marked": 150,
                                  "currency_code": "INR",
                                  "currency_symbol": "â‚¹",
                                  "selling": 134,
                                  "effective": 134
                                }
                              },
                              "uid": "65cb055562a3bd024c5cdfd4",
                              "mto_quantity": 0,
                              "seller": {
                                "name": "auto_company_POS_2",
                                "uid": 2
                              },
                              "quantity": 99985,
                              "type": "article",
                              "store": {
                                "name": "Agarwal Pvt Ltd",
                                "uid": 3809,
                                "store_code": "HS-2fl3h"
                              },
                              "tags": [],
                              "seller_identifier": "DK783927489JK",
                              "gift_card": {
                                "gift_price": 0,
                                "display_text": "",
                                "is_gift_applied": false
                              },
                              "product_group_tags": null,
                              "cart_item_meta": {},
                              "identifier": {
                                "ean": "DK783927489JK"
                              },
                              "is_gift_visible": false,
                              "extra_meta": {}
                            },
                            "price": {
                              "converted": {
                                "marked": 150,
                                "currency_code": "INR",
                                "currency_symbol": "â‚¹",
                                "add_on": 134,
                                "selling": 134,
                                "effective": 134
                              },
                              "base": {
                                "marked": 150,
                                "currency_code": "INR",
                                "currency_symbol": "â‚¹",
                                "add_on": 134,
                                "selling": 134,
                                "effective": 134
                              }
                            },
                            "bulk_offer": {},
                            "is_set": false,
                            "promo_meta": {},
                            "seller_count": 1,
                            "discount": "10% OFF",
                            "price_adjustment_applied": [],
                            "delivery_promise": {
                              "iso": {
                                "max": "2024-02-24T22:00:15Z",
                                "min": "2024-02-22T11:00:15Z"
                              },
                              "timestamp": {
                                "max": 1708812015,
                                "min": 1708599615
                              },
                              "formatted": {
                                "max": "Sat, 24 Feb",
                                "min": "Thu, 22 Feb"
                              }
                            },
                            "quantity": 1,
                            "message": "",
                            "parent_item_identifiers": {
                              "identifier": null,
                              "parent_item_size": null,
                              "parent_item_id": null
                            },
                            "availability": {
                              "available_sizes": [
                                {
                                  "display": "OS",
                                  "value": "OS",
                                  "is_available": true
                                }
                              ],
                              "is_valid": true,
                              "out_of_stock": false,
                              "deliverable": true,
                              "other_store_quantity": 1,
                              "sizes": [
                                "OS"
                              ]
                            },
                            "custom_order": {
                              "is_custom_order": false,
                              "manufacturing_time_unit": "days",
                              "manufacturing_time": 0
                            },
                            "coupon": {},
                            "product": {
                              "name": "dk electronic gla",
                              "brand": {
                                "name": "new brand29Jan2024",
                                "uid": 65221
                              },
                              "_custom_json": {},
                              "images": [
                                {
                                  "url": "https://cdn.fynd.com/v2/falling-surf-7c8bb8/fyndnp/wrkr/addsale/products/pictures/item/free/original/FrcCI3f-J-Super-Man-Logo.jpeg",
                                  "secure_url": "https://cdn.fynd.com/v2/falling-surf-7c8bb8/fyndnp/wrkr/addsale/products/pictures/item/free/original/FrcCI3f-J-Super-Man-Logo.jpeg",
                                  "aspect_ratio": "16:25"
                                }
                              ],
                              "slug": "dk-electronic-gla-7644300",
                              "teaser_tag": {},
                              "type": "product",
                              "item_code": "DK7839475BD",
                              "uid": 7644300,
                              "tags": [],
                              "action": {
                                "type": "product",
                                "url": "https://api.fyndx1.de/platform/content/v1/products/dk-electronic-gla-7644300/",
                                "query": {
                                  "product_slug": [
                                    "dk-electronic-gla-7644300"
                                  ]
                                }
                              },
                              "categories": [
                                {
                                  "name": "Camera Lenses",
                                  "uid": 900
                                }
                              ],
                              "attributes": {
                                "warranty": "yes",
                                "name": "dk electronic gla",
                                "brand_name": "new brand29Jan2024"
                              }
                            },
                            "price_per_unit": {
                              "converted": {
                                "marked": 150,
                                "currency_code": "INR",
                                "currency_symbol": "â‚¹",
                                "selling_price": 134,
                                "effective": 134
                              },
                              "base": {
                                "marked": 150,
                                "currency_code": "INR",
                                "currency_symbol": "â‚¹",
                                "selling_price": 134,
                                "effective": 134
                              }
                            },
                            "key": "7644300_OS",
                            "moq": {
                              "minimum": 1
                            },
                            "promotions_applied": []
                          }
                        ],
                        "currency": {
                          "code": "INR",
                          "symbol": "â‚¹"
                        },
                        "restrict_checkout": false,
                        "id": "65a13f86ec3cfdffce31fad5",
                        "breakup_values": {
                          "raw": {
                            "delivery_charge": 200,
                            "discount": -1915,
                            "coupon": 0,
                            "mop_total": 0,
                            "total": 541,
                            "vog": 293.56,
                            "convenience_fee": 0,
                            "mrp_total": 2256,
                            "cod_charge": 0,
                            "total_charge": 0,
                            "fynd_cash": 0,
                            "you_saved": 0,
                            "gst_charges": 47.44,
                            "promotion": 0,
                            "subtotal": 341,
                            "gift_card": 0,
                            "sub_total": 341
                          },
                          "coupon": {
                            "sub_title": "",
                            "title": "",
                            "type": "cash",
                            "code": "",
                            "uid": null,
                            "is_applied": false,
                            "message": "Sorry! Invalid coupon",
                            "description": "",
                            "minimum_cart_value": 0,
                            "value": 0,
                            "coupon_value": 0,
                            "coupon_type": "cart"
                          },
                          "display": [
                            {
                              "currency_code": "INR",
                              "currency_symbol": "â‚¹",
                              "attr": "mrp_total",
                              "meta": {},
                              "original": 2256,
                              "key": "mrp_total",
                              "message": [],
                              "value": 2256,
                              "display": "Total MRP"
                            },
                            {
                              "currency_code": "INR",
                              "currency_symbol": "â‚¹",
                              "attr": "discount",
                              "meta": {},
                              "original": -1915,
                              "key": "discount",
                              "message": [],
                              "value": -1915,
                              "display": "Discount"
                            },
                            {
                              "currency_code": "INR",
                              "currency_symbol": "â‚¹",
                              "attr": "subtotal",
                              "meta": {},
                              "original": 341,
                              "key": "subtotal",
                              "message": [],
                              "value": 341,
                              "display": "Subtotal"
                            },
                            {
                              "currency_code": "INR",
                              "currency_symbol": "â‚¹",
                              "attr": "delivery_charge",
                              "meta": {},
                              "preset": 200,
                              "original": 200,
                              "key": "delivery_charge",
                              "message": [
                                "Delivery charges applicable ?200.00 on order upto ?2,000.00",
                                "Delivery charges applicable ?300.00 on order upto ?3,000.00",
                                "Delivery charges applicable ?500.00 on order upto ?5,000.00",
                                "Free delivery on order above ?5,000.00"
                              ],
                              "value": 200,
                              "display": "Delivery Charge"
                            },
                            {
                              "currency_code": "INR",
                              "currency_symbol": "â‚¹",
                              "attr": "total",
                              "meta": {},
                              "original": 541,
                              "key": "total",
                              "message": [],
                              "value": 541,
                              "display": "Total"
                            }
                          ],
                          "loyalty_points": {
                            "total": 0,
                            "description": "Your cashback, reward points, and refund amount get credited to Fynd Cash which can be redeemed while placing an order.",
                            "is_applied": false,
                            "applicable": 0,
                            "message": "No Fynd Cash Applied"
                          }
                        },
                        "coupon_text": "View all offers",
                        "last_modified": "Tue, 20 Feb 2024 05:18:16 GMT",
                        "delivery_charge_info": "Delivery charges applicable ?200.00 on order upto ?2,000.00 Delivery charges applicable ?300.00 on order upto ?3,000.00 Delivery charges applicable ?500.00 on order upto ?5,000.00 Free delivery on order above ?5,000.00",
                        "uid": "57659",
                        "cart_id": 57659,
                        "delivery_promise": {},
                        "pan_config": {
                          "online_threshold_amount": 0,
                          "enabled": false,
                          "cod_threshold_amount": -2
                        },
                        "message": "",
                        "checkout_mode": "self",
                        "coupon": {
                          "coupon_code": "",
                          "coupon_type": "cart",
                          "is_applied": false,
                          "is_valid": false,
                          "message": "Sorry! Invalid coupon",
                          "coupon_id": null,
                          "discount": 0,
                          "cashback_amount": 0,
                          "cashback_message_primary": "",
                          "cashback_message_secondary": "",
                          "coupon_title": "",
                          "coupon_subtitle": "",
                          "coupon_description": "",
                          "minimum_cart_value": 0,
                          "maximum_discount_value": 0,
                          "coupon_value": 0,
                          "medias": []
                        },
                        "gstin": null,
                        "comment": "",
                        "custom_cart": {
                          "cart_name": "Update",
                          "cart_type": "universal",
                          "is_universal": true,
                          "id": "651bc8cf5b8d4da35102362a"
                        },
                        "success": true,
                        "pan_no": null,
                        "applied_promo_details": [],
                        "common_config": {
                          "delivery_charges_config": {
                            "charges": [
                              {
                                "charges": 200,
                                "threshold": 2000
                              },
                              {
                                "charges": 300,
                                "threshold": 3000
                              },
                              {
                                "charges": 500,
                                "threshold": 5000
                              },
                              {
                                "charges": 0,
                                "threshold": 0
                              }
                            ],
                            "enabled": true
                          }
                        },
                        "payment_selection_lock": {
                          "enabled": false,
                          "payment_identifier": "cod",
                          "default_options": "cod"
                        },
                        "buy_now": false,
                        "custom_cart_meta": {},
                        "is_pan_received": false,
                        "notification": {}
                      },
                      "order_id": "FY65D436190E473C0E28",
                      "success": true,
                      "message": "",
                      "data": {
                        "order_id": "FY65D436190E473C0E28"
                      },
                      "app_intercept_url": "https://cms-tms.hostx1.de/cart/order-status"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Shipment"
        ]
      }
    },
    "/service/application/cart/v2.0/checkout": {
      "post": {
        "summary": "checkoutCartV2 | Enhanced cart checkout process",
        "description": "Enhanced version of checkout process that supports multiple mode of payment(MOP).",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "buy_now",
            "description": "This indicates the type of cart to checkout.",
            "schema": {
              "type": "boolean"
            },
            "examples": {
              "Successful checkout cod payment": {
                "value": false
              }
            }
          },
          {
            "name": "cart_type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "universal"
              ]
            },
            "description": "The type of cart."
          }
        ],
        "requestBody": {
          "description": "Check the example shown below or refer `CartCheckoutDetailV2Payload` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CartCheckoutDetailV2Payload"
              },
              "examples": {
                "Successful checkout cod payment": {
                  "value": {
                    "cart_id": "65c06fe589db42581e4be72e",
                    "address_id": "65bb5a41feeb84432e132c03",
                    "billing_address_id": "65bb5a41feeb84432e132c03",
                    "aggregator": "Razorpay",
                    "merchant_code": "NB_ICICI",
                    "payment_mode": "NB",
                    "meta": {
                      "is_reward_product_available": false
                    },
                    "customer_details": {
                      "name": "Customer Name",
                      "mobile": "9876543210",
                      "email": "example@mail.com"
                    },
                    "payment_methods": [
                      {
                        "mode": "NB",
                        "name": "NB",
                        "payment": "required",
                        "payment_identifier": "NB_ICICI",
                        "payment_meta": {
                          "merchant_code": "NB_ICICI",
                          "payment_gateway": "Razorpay",
                          "payment_identifier": "NB_ICICI"
                        }
                      }
                    ],
                    "payment_identifier": "NB_ICICI"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Returns the status of cart checkout. Refer `CartCheckoutResultSchema` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartCheckoutResult"
                },
                "examples": {
                  "Successful checkout cod payment": {
                    "value": {
                      "callback_url": "https://cms-tms.hostx1.de/cart/order-status",
                      "payment_confirm_url": "https://api.fyndx1.de/service/webhooks/payment/v1.0/confirm/",
                      "cart": {
                        "is_valid": true,
                        "order_id": "FY65D436190E473C0E28",
                        "items": [
                          {
                            "identifiers": {
                              "identifier": "nS1r8vl7RV2S6NGhQcGSyQ"
                            },
                            "charges": [],
                            "coupon_message": "",
                            "article": {
                              "meta": {},
                              "size": "OS",
                              "_custom_json": {},
                              "price": {
                                "converted": {
                                  "marked": 234,
                                  "currency_code": "INR",
                                  "currency_symbol": "â‚¹",
                                  "selling": 23,
                                  "effective": 23
                                },
                                "base": {
                                  "marked": 234,
                                  "currency_code": "INR",
                                  "currency_symbol": "â‚¹",
                                  "selling": 23,
                                  "effective": 23
                                }
                              },
                              "uid": "655625cb5c853dee2f6984e2",
                              "mto_quantity": 0,
                              "seller": {
                                "name": "auto_company_POS_2",
                                "uid": 2
                              },
                              "quantity": 999,
                              "type": "article",
                              "store": {
                                "name": "test",
                                "uid": 23039,
                                "store_code": "2"
                              },
                              "tags": [],
                              "seller_identifier": "1692344346344",
                              "gift_card": {
                                "gift_price": 0,
                                "display_text": "",
                                "is_gift_applied": false
                              },
                              "product_group_tags": null,
                              "cart_item_meta": {},
                              "identifier": {
                                "ean": "1692344346344"
                              },
                              "is_gift_visible": false,
                              "extra_meta": {}
                            },
                            "price": {
                              "converted": {
                                "marked": 2106,
                                "currency_code": "INR",
                                "currency_symbol": "â‚¹",
                                "add_on": 207,
                                "selling": 207,
                                "effective": 207
                              },
                              "base": {
                                "marked": 2106,
                                "currency_code": "INR",
                                "currency_symbol": "â‚¹",
                                "add_on": 207,
                                "selling": 207,
                                "effective": 207
                              }
                            },
                            "bulk_offer": {},
                            "is_set": false,
                            "promo_meta": {},
                            "seller_count": 1,
                            "discount": "90% OFF",
                            "price_adjustment_applied": [],
                            "delivery_promise": {
                              "iso": {
                                "max": "2024-02-24T22:00:15Z",
                                "min": "2024-02-22T11:00:15Z"
                              },
                              "timestamp": {
                                "max": 1708812015,
                                "min": 1708599615
                              },
                              "formatted": {
                                "max": "Sat, 24 Feb",
                                "min": "Thu, 22 Feb"
                              }
                            },
                            "quantity": 9,
                            "message": "",
                            "parent_item_identifiers": {
                              "identifier": null,
                              "parent_item_size": null,
                              "parent_item_id": null
                            },
                            "availability": {
                              "available_sizes": [
                                {
                                  "display": "OS",
                                  "value": "OS",
                                  "is_available": true
                                }
                              ],
                              "is_valid": true,
                              "out_of_stock": false,
                              "deliverable": true,
                              "other_store_quantity": 9,
                              "sizes": [
                                "OS"
                              ]
                            },
                            "custom_order": {
                              "is_custom_order": false,
                              "manufacturing_time_unit": "days",
                              "manufacturing_time": 0
                            },
                            "coupon": {},
                            "product": {
                              "name": "Product-Lonie857287501872023139344",
                              "brand": {
                                "name": "",
                                "uid": 8135
                              },
                              "_custom_json": {},
                              "images": [
                                {
                                  "url": "https://hdn-1.fynd.com/media/fynd_store_items/l2_category/720x0/2830_c5bb5fc02f414307a828c4c56483c30a.jpg",
                                  "secure_url": "https://hdn-1.fynd.com/media/fynd_store_items/l2_category/720x0/2830_c5bb5fc02f414307a828c4c56483c30a.jpg",
                                  "aspect_ratio": "16:25"
                                }
                              ],
                              "slug": "product-lonie857287501872023139344-7536704",
                              "teaser_tag": {},
                              "type": "product",
                              "item_code": "BRUNT-1692344346344",
                              "uid": 7536704,
                              "tags": [],
                              "action": {
                                "type": "product",
                                "url": "https://api.fyndx1.de/platform/content/v1/products/product-lonie857287501872023139344-7536704/",
                                "query": {
                                  "product_slug": [
                                    "product-lonie857287501872023139344-7536704"
                                  ]
                                }
                              },
                              "categories": [
                                {
                                  "name": "Laura65601729187202313942",
                                  "uid": 30263
                                }
                              ],
                              "attributes": {
                                "name": "Product-Lonie857287501872023139344",
                                "brand_name": "Sam146400281872023132226"
                              }
                            },
                            "price_per_unit": {
                              "converted": {
                                "marked": 234,
                                "currency_code": "INR",
                                "currency_symbol": "â‚¹",
                                "selling_price": 23,
                                "effective": 23
                              },
                              "base": {
                                "marked": 234,
                                "currency_code": "INR",
                                "currency_symbol": "â‚¹",
                                "selling_price": 23,
                                "effective": 23
                              }
                            },
                            "key": "7536704_OS",
                            "moq": {
                              "minimum": 1
                            },
                            "promotions_applied": []
                          },
                          {
                            "identifiers": {
                              "identifier": "zGloF_1dSHWDdjn70vgCAA"
                            },
                            "charges": [],
                            "coupon_message": "",
                            "article": {
                              "meta": {},
                              "size": "OS",
                              "_custom_json": {},
                              "price": {
                                "converted": {
                                  "marked": 150,
                                  "currency_code": "INR",
                                  "currency_symbol": "â‚¹",
                                  "selling": 134,
                                  "effective": 134
                                },
                                "base": {
                                  "marked": 150,
                                  "currency_code": "INR",
                                  "currency_symbol": "â‚¹",
                                  "selling": 134,
                                  "effective": 134
                                }
                              },
                              "uid": "65cb055562a3bd024c5cdfd4",
                              "mto_quantity": 0,
                              "seller": {
                                "name": "auto_company_POS_2",
                                "uid": 2
                              },
                              "quantity": 99985,
                              "type": "article",
                              "store": {
                                "name": "Agarwal Pvt Ltd",
                                "uid": 3809,
                                "store_code": "HS-2fl3h"
                              },
                              "tags": [],
                              "seller_identifier": "DK783927489JK",
                              "gift_card": {
                                "gift_price": 0,
                                "display_text": "",
                                "is_gift_applied": false
                              },
                              "product_group_tags": null,
                              "cart_item_meta": {},
                              "identifier": {
                                "ean": "DK783927489JK"
                              },
                              "is_gift_visible": false,
                              "extra_meta": {}
                            },
                            "price": {
                              "converted": {
                                "marked": 150,
                                "currency_code": "INR",
                                "currency_symbol": "â‚¹",
                                "add_on": 134,
                                "selling": 134,
                                "effective": 134
                              },
                              "base": {
                                "marked": 150,
                                "currency_code": "INR",
                                "currency_symbol": "â‚¹",
                                "add_on": 134,
                                "selling": 134,
                                "effective": 134
                              }
                            },
                            "bulk_offer": {},
                            "is_set": false,
                            "promo_meta": {},
                            "seller_count": 1,
                            "discount": "10% OFF",
                            "price_adjustment_applied": [],
                            "delivery_promise": {
                              "iso": {
                                "max": "2024-02-24T22:00:15Z",
                                "min": "2024-02-22T11:00:15Z"
                              },
                              "timestamp": {
                                "max": 1708812015,
                                "min": 1708599615
                              },
                              "formatted": {
                                "max": "Sat, 24 Feb",
                                "min": "Thu, 22 Feb"
                              }
                            },
                            "quantity": 1,
                            "message": "",
                            "parent_item_identifiers": {
                              "identifier": null,
                              "parent_item_size": null,
                              "parent_item_id": null
                            },
                            "availability": {
                              "available_sizes": [
                                {
                                  "display": "OS",
                                  "value": "OS",
                                  "is_available": true
                                }
                              ],
                              "is_valid": true,
                              "out_of_stock": false,
                              "deliverable": true,
                              "other_store_quantity": 1,
                              "sizes": [
                                "OS"
                              ]
                            },
                            "custom_order": {
                              "is_custom_order": false,
                              "manufacturing_time_unit": "days",
                              "manufacturing_time": 0
                            },
                            "coupon": {},
                            "product": {
                              "name": "dk electronic gla",
                              "brand": {
                                "name": "new brand29Jan2024",
                                "uid": 65221
                              },
                              "_custom_json": {},
                              "images": [
                                {
                                  "url": "https://cdn.fynd.com/v2/falling-surf-7c8bb8/fyndnp/wrkr/addsale/products/pictures/item/free/original/FrcCI3f-J-Super-Man-Logo.jpeg",
                                  "secure_url": "https://cdn.fynd.com/v2/falling-surf-7c8bb8/fyndnp/wrkr/addsale/products/pictures/item/free/original/FrcCI3f-J-Super-Man-Logo.jpeg",
                                  "aspect_ratio": "16:25"
                                }
                              ],
                              "slug": "dk-electronic-gla-7644300",
                              "teaser_tag": {},
                              "type": "product",
                              "item_code": "DK7839475BD",
                              "uid": 7644300,
                              "tags": [],
                              "action": {
                                "type": "product",
                                "url": "https://api.fyndx1.de/platform/content/v1/products/dk-electronic-gla-7644300/",
                                "query": {
                                  "product_slug": [
                                    "dk-electronic-gla-7644300"
                                  ]
                                }
                              },
                              "categories": [
                                {
                                  "name": "Camera Lenses",
                                  "uid": 900
                                }
                              ],
                              "attributes": {
                                "warranty": "yes",
                                "name": "dk electronic gla",
                                "brand_name": "new brand29Jan2024"
                              }
                            },
                            "price_per_unit": {
                              "converted": {
                                "marked": 150,
                                "currency_code": "INR",
                                "currency_symbol": "â‚¹",
                                "selling_price": 134,
                                "effective": 134
                              },
                              "base": {
                                "marked": 150,
                                "currency_code": "INR",
                                "currency_symbol": "â‚¹",
                                "selling_price": 134,
                                "effective": 134
                              }
                            },
                            "key": "7644300_OS",
                            "moq": {
                              "minimum": 1
                            },
                            "promotions_applied": []
                          }
                        ],
                        "currency": {
                          "code": "INR",
                          "symbol": "â‚¹"
                        },
                        "restrict_checkout": false,
                        "id": "65a13f86ec3cfdffce31fad5",
                        "breakup_values": {
                          "raw": {
                            "delivery_charge": 200,
                            "discount": -1915,
                            "coupon": 0,
                            "mop_total": 0,
                            "total": 541,
                            "vog": 293.56,
                            "convenience_fee": 0,
                            "mrp_total": 2256,
                            "cod_charge": 0,
                            "total_charge": 0,
                            "fynd_cash": 0,
                            "you_saved": 0,
                            "gst_charges": 47.44,
                            "promotion": 0,
                            "subtotal": 341,
                            "gift_card": 0,
                            "sub_total": 341
                          },
                          "coupon": {
                            "sub_title": "",
                            "title": "",
                            "type": "cash",
                            "code": "",
                            "uid": null,
                            "is_applied": false,
                            "message": "Sorry! Invalid coupon",
                            "description": "",
                            "minimum_cart_value": 0,
                            "value": 0,
                            "coupon_value": 0,
                            "coupon_type": "cart"
                          },
                          "display": [
                            {
                              "currency_code": "INR",
                              "currency_symbol": "â‚¹",
                              "attr": "mrp_total",
                              "meta": {},
                              "original": 2256,
                              "key": "mrp_total",
                              "message": [],
                              "value": 2256,
                              "display": "Total MRP"
                            },
                            {
                              "currency_code": "INR",
                              "currency_symbol": "â‚¹",
                              "attr": "discount",
                              "meta": {},
                              "original": -1915,
                              "key": "discount",
                              "message": [],
                              "value": -1915,
                              "display": "Discount"
                            },
                            {
                              "currency_code": "INR",
                              "currency_symbol": "â‚¹",
                              "attr": "subtotal",
                              "meta": {},
                              "original": 341,
                              "key": "subtotal",
                              "message": [],
                              "value": 341,
                              "display": "Subtotal"
                            },
                            {
                              "currency_code": "INR",
                              "currency_symbol": "â‚¹",
                              "attr": "delivery_charge",
                              "meta": {},
                              "preset": 200,
                              "original": 200,
                              "key": "delivery_charge",
                              "message": [
                                "Delivery charges applicable ?200.00 on order upto ?2,000.00",
                                "Delivery charges applicable ?300.00 on order upto ?3,000.00",
                                "Delivery charges applicable ?500.00 on order upto ?5,000.00",
                                "Free delivery on order above ?5,000.00"
                              ],
                              "value": 200,
                              "display": "Delivery Charge"
                            },
                            {
                              "currency_code": "INR",
                              "currency_symbol": "â‚¹",
                              "attr": "total",
                              "meta": {},
                              "original": 541,
                              "key": "total",
                              "message": [],
                              "value": 541,
                              "display": "Total"
                            }
                          ],
                          "loyalty_points": {
                            "total": 0,
                            "description": "Your cashback, reward points, and refund amount get credited to Fynd Cash which can be redeemed while placing an order.",
                            "is_applied": false,
                            "applicable": 0,
                            "message": "No Fynd Cash Applied"
                          }
                        },
                        "coupon_text": "View all offers",
                        "last_modified": "Tue, 20 Feb 2024 05:18:16 GMT",
                        "delivery_charge_info": "Delivery charges applicable ?200.00 on order upto ?2,000.00 Delivery charges applicable ?300.00 on order upto ?3,000.00 Delivery charges applicable ?500.00 on order upto ?5,000.00 Free delivery on order above ?5,000.00",
                        "uid": "57659",
                        "cart_id": 57659,
                        "delivery_promise": {},
                        "pan_config": {
                          "online_threshold_amount": 0,
                          "enabled": false,
                          "cod_threshold_amount": -2
                        },
                        "message": "",
                        "checkout_mode": "self",
                        "coupon": {
                          "coupon_code": "",
                          "coupon_type": "cart",
                          "is_applied": false,
                          "is_valid": false,
                          "message": "Sorry! Invalid coupon",
                          "coupon_id": null,
                          "discount": 0,
                          "cashback_amount": 0,
                          "cashback_message_primary": "",
                          "cashback_message_secondary": "",
                          "coupon_title": "",
                          "coupon_subtitle": "",
                          "coupon_description": "",
                          "minimum_cart_value": 0,
                          "maximum_discount_value": 0,
                          "coupon_value": 0,
                          "medias": []
                        },
                        "gstin": null,
                        "comment": "",
                        "custom_cart": {
                          "cart_name": "Update",
                          "cart_type": "universal",
                          "is_universal": true,
                          "id": "651bc8cf5b8d4da35102362a"
                        },
                        "success": true,
                        "pan_no": null,
                        "applied_promo_details": [],
                        "common_config": {
                          "delivery_charges_config": {
                            "charges": [
                              {
                                "charges": 200,
                                "threshold": 2000
                              },
                              {
                                "charges": 300,
                                "threshold": 3000
                              },
                              {
                                "charges": 500,
                                "threshold": 5000
                              },
                              {
                                "charges": 0,
                                "threshold": 0
                              }
                            ],
                            "enabled": true
                          }
                        },
                        "payment_selection_lock": {
                          "enabled": false,
                          "payment_identifier": "cod",
                          "default_options": "cod"
                        },
                        "buy_now": false,
                        "custom_cart_meta": {},
                        "is_pan_received": false,
                        "notification": {}
                      },
                      "order_id": "FY65D436190E473C0E28",
                      "success": true,
                      "message": "",
                      "data": {
                        "order_id": "FY65D436190E473C0E28"
                      },
                      "app_intercept_url": "https://cms-tms.hostx1.de/cart/order-status"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Checkout"
        ]
      }
    },
    "/service/application/cart/v1.0/available-payment-offers": {
      "get": {
        "summary": "getPaymentPromotionOffers | Fetch available promotions payment offers",
        "description": "Use this API to get top 5 payment offers available for current cart.",
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "Cart id of the user cart.",
            "examples": {
              "200_OKAY": {
                "value": "65c06fe589db42581e4be72e"
              },
              "400_ITEM_NOT_FOUND": {
                "value": "65c06fe589db42581e4be72f"
              }
            }
          },
          {
            "name": "uid",
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "description": "Cart uid of the user cart."
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a array containing the available offers (if exists) on cart via promotions. Refer `PromotionPaymentOffersResult` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionPaymentOffersResult"
                },
                "examples": {
                  "200_OKAY": {
                    "value": {
                      "success": true,
                      "promotions": [
                        {
                          "offer_text": "Bank offer promotion",
                          "description": "Bank offer promotion",
                          "promotion_name": "Bank offer promotion",
                          "promotion_type": "amount",
                          "id": "66587348e0046e268206b5ae",
                          "promotion_group": "cart",
                          "buy_rules": [
                            {
                              "item_criteria": {},
                              "cart_conditions": {}
                            }
                          ],
                          "discount_rules": [
                            {
                              "item_criteria": {
                                "buy_rules": [
                                  "rule#1"
                                ]
                              },
                              "matched_buy_rules": [
                                "rule#1"
                              ],
                              "offer": {
                                "discount_amount": 5
                              },
                              "raw_offer": {
                                "offer": {
                                  "discount_amount": 5
                                },
                                "buy_condition": "rule#1",
                                "discount_type": "amount",
                                "item_criteria": {
                                  "buy_rules": [
                                    "rule#1"
                                  ]
                                }
                              }
                            }
                          ],
                          "application_id": "62f35968d101a6d38c886d85",
                          "calculate_on": "esp",
                          "valid_till": "2023-07-30T18:30:00.000Z"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Cart not found with provided `cart id` query parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                },
                "examples": {
                  "400_ITEM_NOT_FOUND": {
                    "value": {
                      "message": "Cart not found for user id."
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Promotion offers"
        ],
        "tags": [
          "Cart"
        ]
      }
    },
    "/service/application/cart/v1.0/cart/configuration": {
      "get": {
        "summary": "getCartMetaConfigs | Get cart configuration",
        "description": "Get cart configuration.",
        "tags": [
          "Cart"
        ],
        "responses": {
          "200": {
            "description": "Cart Config fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartMetaConfigListResult"
                },
                "examples": {
                  "200_OKAY": {
                    "value": {
                      "success": true,
                      "data": [
                        {
                          "id": "645ba594d414eb0669e6ee14",
                          "name": "Universal",
                          "slug": "universal",
                          "article_tags": [
                            "sale",
                            "offer"
                          ],
                          "created_on": "2023-12-21T12:17:12"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Cart"
        ]
      }
    },
    "/service/application/cart/v1.0/cart/configuration/{cart_meta_id}": {
      "get": {
        "summary": "getCartMetaConfig | Get cart configuration by id",
        "description": "Get cart configuration by id.",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "name": "cart_meta_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "CartMeta mongo id for fetching single cart meta data",
            "required": true,
            "examples": {
              "200_OKAY": {
                "value": "61d1db23f5b315cf265126c0"
              },
              "Invalid cart meta data": {
                "value": "61d1db23f5b315cf26512345"
              }
            }
          },
          {
            "name": "is_bank_offer",
            "description": "Boolean flag stating if promotions with bank offer need to be fetched.",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cart Meta Config Fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartConfigDetailResult"
                },
                "examples": {
                  "200_OKAY": {
                    "value": {
                      "success": true,
                      "data": {
                        "id": "645ba594d414eb0669e6ee14",
                        "app_id": "60792ded7826bd09330ed90d",
                        "company_id": 884,
                        "bulk_coupons": false,
                        "delivery_charges": {
                          "charges": [],
                          "enabled": false
                        },
                        "international_delivery_charges": {
                          "charges": [],
                          "enabled": false
                        },
                        "enabled": true,
                        "max_cart_items": 50,
                        "min_cart_value": 0,
                        "revenue_engine_coupon": false,
                        "gift_pricing": 50,
                        "gift_display_text": "",
                        "is_universal": false,
                        "is_active": true,
                        "order_placing": {
                          "enabled": true,
                          "message": ""
                        },
                        "name": "Universal",
                        "slug": "universal",
                        "article_tags": [
                          "sale",
                          "offer"
                        ],
                        "allow_coupon_with_rewards": false,
                        "gst_input": true,
                        "staff_selection": true,
                        "placing_for_customer": false,
                        "hide_on_storefront": false,
                        "pan_card": {
                          "enabled": false,
                          "cod_threshold_amount": 0,
                          "online_threshold_amount": 0
                        },
                        "created_on": "2023-12-21T12:17:12",
                        "updated_on": "2023-12-21T12:17:12",
                        "last_modified_by": "5b84e9ffb02426353608c380"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Invalid cart meta data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationErrorResult"
                },
                "examples": {
                  "Invalid cart meta data": {
                    "value": {
                      "success": false,
                      "message": "Active cart configuration not found"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Cart"
        ]
      }
    },
    "/service/application/cart/v2.0/detail": {
      "post": {
        "summary": "addItemsv2 | Add items to a cart",
        "description": "Add product items to the customer's existing shopping cart. If there is no existing cart associated with the customer, it creates a new one and adds the items to it.",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "buy_now",
            "schema": {
              "type": "boolean"
            },
            "description": "Select `true` to set/initialize buy now cart."
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "The unique identifier of the cart.",
            "examples": {
              "Product_has_been_added_to_your_cart": {
                "value": "65c06fe589db42581e4be72e"
              },
              "Sorry_item_is_out_of_stock": {
                "value": "65c06fe589db42581e4be72e"
              }
            }
          },
          {
            "in": "query",
            "name": "cart_type",
            "x-not-enum": true,
            "schema": {
              "type": "string",
              "enum": [
                "universal"
              ]
            },
            "description": "The type of cart"
          },
          {
            "in": "query",
            "name": "order_type",
            "schema": {
              "type": "string",
              "x-not-enum": true
            },
            "description": "The order type of shipment HomeDelivery - If the customer wants the order home-delivered PickAtStore - If the customer wants the handover of an order at the store itself."
          }
        ],
        "requestBody": {
          "description": "Specify the item details as shown below. Refer `AddCartPayload` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCartPayload"
              },
              "examples": {
                "Product_has_been_added_to_your_cart": {
                  "value": {
                    "items": [
                      {
                        "item_id": 1077515,
                        "item_size": "OS",
                        "quantity": 1,
                        "article_assignment": {
                          "level": "multi-companies",
                          "strategy": "optimal"
                        },
                        "seller_id": 1,
                        "store_id": 2890,
                        "extra_meta": {}
                      }
                    ]
                  }
                },
                "Sorry_item_is_out_of_stock": {
                  "value": {
                    "items": [
                      {
                        "item_id": 1077515,
                        "item_size": "OS",
                        "quantity": 250,
                        "article_assignment": {
                          "level": "multi-companies",
                          "strategy": "optimal"
                        },
                        "seller_id": 1,
                        "store_id": 2890,
                        "extra_meta": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Returns a cart object as shown below. Refer `AddCartDetailResultV2` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddCartDetailResultV2"
                },
                "examples": {
                  "Product_has_been_added_to_your_cart": {
                    "value": {
                      "message": "Product has been added to your cart",
                      "partial": false,
                      "success": true,
                      "cart_id": "65c06fe589db42581e4be72e"
                    }
                  },
                  "Sorry_item_is_out_of_stock": {
                    "value": {
                      "message": "Sorry, item is out of stock",
                      "success": false,
                      "cart_id": null
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Cart"
        ]
      }
    },
    "/service/application/catalog/v1.0/products/{slug}": {
      "get": {
        "summary": "getProductDetailBySlug | Fetches detailed product information by slug.",
        "description": "Get product details such as price, attributes, HSN code, SKU code, etc.",
        "tags": [
          "Catalog"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "description": "A short, human-readable, URL-friendly identifier of a product. You can get slug value from the endpoint /service/application/catalog/v1.0/products/.",
            "schema": {
              "type": "string"
            },
            "required": true,
            "examples": {
              "success": {
                "value": "facilitate-value-added-infrastructures"
              },
              "failure": {
                "value": "test"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a Product object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDetail"
                },
                "examples": {
                  "success": {
                    "value": {
                      "type": "product",
                      "grouped_attributes": [
                        {
                          "title": "Alexander Sawyer",
                          "details": [
                            {
                              "key": "Kimberly Davidson",
                              "type": "text",
                              "value": "DarkGrey"
                            },
                            {
                              "key": "Kimberly Mcdaniel",
                              "type": "text",
                              "value": "Men,Women"
                            },
                            {
                              "key": "Monica Hampton",
                              "type": "text",
                              "value": "Neoprene"
                            },
                            {
                              "key": "John Mendoza",
                              "type": "text",
                              "value": "100 g"
                            }
                          ]
                        }
                      ],
                      "medias": [
                        {
                          "type": "image",
                          "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/1309_LGLAPTOPSLEEVE5/1_1564735832806.jpg"
                        }
                      ],
                      "brand": {
                        "name": "Barry, Jennings and Larson",
                        "uid": 1,
                        "logo": {
                          "type": "image",
                          "url": "https://hdn-1.fynd.com/media/logo/brand/original/12391_0d956c6c71a4427895c15e44cba82f88.jpg"
                        },
                        "action": {
                          "page": {
                            "type": "products",
                            "query": {
                              "brand": [
                                "Hess-Inc"
                              ]
                            }
                          },
                          "type": "page"
                        },
                        "_custom_json": {}
                      },
                      "department": {
                        "name": "Electronics",
                        "uid": 1,
                        "logo": {
                          "type": "image",
                          "url": "https://hdn-1.fynd.com/media/logo/brand/original/12391_0d956c6c71a4427895c15e44cba82f88.jpg"
                        },
                        "slug": "electronics"
                      },
                      "uid": 1,
                      "slug": "benchmark-collaborative-paradigms",
                      "item_code": "829H137",
                      "attributes": {
                        "color_hex": "808080",
                        "weight": 100,
                        "product_type": "LaptopBags",
                        "gender": [
                          "Men",
                          "Women"
                        ],
                        "material": "Neoprene",
                        "style_note": "Shape up your overall appeal with this stunning laptop bag. The amazing storage and great design will let you carry your laptop in style!",
                        "item_code": "LGLAPTOPSLEEVE5",
                        "occasion": "Casual",
                        "primary_color": "Grey",
                        "primary_material": "Others",
                        "variant": "LGLAPTOPSLEEVE5",
                        "color": "DarkGrey",
                        "product_details": "This is a Unisex Product.",
                        "primary_color_hex": "808080",
                        "brand": "Barry, Jennings and Larson"
                      },
                      "name": "benchmark collaborative paradigms",
                      "has_variant": true,
                      "categories": [
                        {
                          "uid": 3,
                          "name": "Amy Kim DDS",
                          "logo": {
                            "type": "image",
                            "url": "https://hdn-1.fynd.com/media/banner_portrait/brand/original/540_ecba3a1af141467da8abc20500f983db.jpg"
                          },
                          "action": {
                            "page": {
                              "type": "category",
                              "query": {
                                "category": [
                                  "Amy-Kim-DDS"
                                ]
                              }
                            },
                            "type": "page"
                          },
                          "_custom_json": {}
                        }
                      ],
                      "category_map": {
                        "l1": {
                          "uid": 1,
                          "name": "Clothing",
                          "logo": {
                            "type": "image",
                            "url": "https://hdn-1.fynd.com/media/banner_portrait/brand/original/540_ecba3a1af141467da8abc20500f983db.jpg"
                          },
                          "action": {
                            "page": {
                              "type": "category",
                              "query": {
                                "category": [
                                  "Amy-Kim-DDS"
                                ]
                              }
                            },
                            "type": "page"
                          },
                          "_custom_json": {}
                        },
                        "l2": {
                          "uid": 2,
                          "name": "Shirts & T-Shirts",
                          "logo": {
                            "type": "image",
                            "url": "https://hdn-1.fynd.com/media/banner_portrait/brand/original/540_ecba3a1af141467da8abc20500f983db.jpg"
                          },
                          "action": {
                            "page": {
                              "type": "category",
                              "query": {
                                "category": [
                                  "Amy-Kim-DDS"
                                ]
                              }
                            },
                            "type": "page"
                          },
                          "_custom_json": {}
                        },
                        "l3": {
                          "uid": 3,
                          "name": "T-Shirts",
                          "logo": {
                            "type": "image",
                            "url": "https://hdn-1.fynd.com/media/banner_portrait/brand/original/540_ecba3a1af141467da8abc20500f983db.jpg"
                          },
                          "action": {
                            "page": {
                              "type": "category",
                              "query": {
                                "category": [
                                  "Amy-Kim-DDS"
                                ]
                              }
                            },
                            "type": "page"
                          },
                          "_custom_json": {}
                        }
                      },
                      "tryouts": [],
                      "promo_meta": {},
                      "rating": 2.7,
                      "rating_count": 2,
                      "image_nature": "standard",
                      "tags": [
                        "Digital"
                      ],
                      "teaser_tag": "",
                      "no_of_boxes": 1,
                      "custom_order": {
                        "is_custom_order": false,
                        "manufacturing_time": 0,
                        "manufacturing_time_unit": "days"
                      },
                      "moq": {
                        "minimum": 1,
                        "increment_unit": 1
                      },
                      "similars": [
                        "brand"
                      ],
                      "_custom_json": {},
                      "_custom_meta": [],
                      "seo": {
                        "title": "Shirts",
                        "description": ""
                      },
                      "net_quantity": {},
                      "highlights": [],
                      "description": "",
                      "short_description": "",
                      "country_of_origin": "India",
                      "is_dependent": false,
                      "item_type": "standard"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bad request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                },
                "examples": {
                  "failure": {
                    "value": {
                      "code": 404,
                      "message": "Not Found."
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Product"
        ]
      }
    },
    "/service/application/catalog/v1.0/products/{slug}/sizes": {
      "get": {
        "summary": "getProductSizesBySlug | Retrieves available sizes for a product by slug.",
        "description": "Provides detailed information about a product, including its availability (sellable), available sizes with quantities, dimensions, weight, availability status, price details (marked, effective, selling), minimum order quantity (MOQ).",
        "tags": [
          "Catalog"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "description": "A short, human-readable, URL-friendly identifier of a product. You can get slug value from the endpoint /service/application/catalog/v1.0/products/.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "facilitate-value-added-infrastructures"
              },
              "failure": {
                "value": "test"
              }
            },
            "required": true
          },
          {
            "in": "query",
            "name": "store_id",
            "description": "The ID of the store that is selling the product, e.g. 1,2,3.",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "examples": {
              "success": {
                "value": 9690
              },
              "failure": {
                "value": "xyz"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a ProductSize object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSizes"
                },
                "examples": {
                  "success": {
                    "value": {
                      "sellable": true,
                      "sizes": [
                        {
                          "display": "13",
                          "value": "13",
                          "quantity": 10,
                          "seller_identifiers": [
                            "123456789",
                            "987654321"
                          ],
                          "weight": {
                            "shipping": 345,
                            "is_default": true,
                            "unit": "gram"
                          },
                          "dimension": {
                            "is_default": false,
                            "height": 2,
                            "width": 25,
                            "length": 30,
                            "unit": "cm"
                          },
                          "is_available": true,
                          "set": {
                            "size_distribution": {
                              "sizes": [
                                {
                                  "size": "5",
                                  "pieces": 1
                                },
                                {
                                  "size": "7",
                                  "pieces": 1
                                },
                                {
                                  "size": "8",
                                  "pieces": 2
                                },
                                {
                                  "size": "9",
                                  "pieces": 1
                                },
                                {
                                  "size": "10",
                                  "pieces": 1
                                }
                              ]
                            },
                            "quantity": 6
                          }
                        }
                      ],
                      "discount": "",
                      "stores": {
                        "count": 1
                      },
                      "size_chart": {},
                      "price": {
                        "marked": {
                          "min": 66.5,
                          "max": 66.5,
                          "currency_code": "INR",
                          "currency_symbol": "₹"
                        },
                        "effective": {
                          "min": 66.5,
                          "max": 66.5,
                          "currency_code": "INR",
                          "currency_symbol": "₹"
                        }
                      },
                      "moq": {
                        "increment_unit": 1,
                        "minimum": 1
                      },
                      "no_of_boxes": 1,
                      "custom_order": {
                        "manufacturing_time": 0,
                        "manufacturing_time_unit": "days",
                        "is_custom_order": false
                      },
                      "multi_size": true,
                      "tags": [
                        "Digital"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "examples": {
                  "failure": {
                    "value": {
                      "code": 400,
                      "message": "Bad Request."
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "x-groups": [
          "Product"
        ]
      }
    },
    "/service/application/catalog/v1.0/products/compare": {
      "get": {
        "summary": "getProductComparisonBySlugs | Compares multiple products by slugs.",
        "description": "Get all the products that have the same category.",
        "tags": [
          "Catalog"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "slug",
            "description": "A short, human-readable, URL-friendly identifier of a product. You can get slug value from the endpoint /service/application/catalog/v1.0/products/.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "minItems": 1
            },
            "required": true,
            "explode": true,
            "style": "form",
            "examples": {
              "success": {
                "value": [
                  "extend-back-end-relationships",
                  "facilitate value-added infrastructures"
                ]
              },
              "failure": {
                "value": [
                  "test1",
                  "test2"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns an array of objects containing the attributes for comparision.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductsComparisonResponseSchema"
                },
                "examples": {
                  "success": {
                    "value": {
                      "attributes_metadata": [
                        {
                          "title": "Alexander Sawyer",
                          "details": [
                            {
                              "key": "color",
                              "display": "Kimberly Davidson",
                              "description": ""
                            },
                            {
                              "key": "gender",
                              "display": "Kimberly Mcdaniel",
                              "description": ""
                            },
                            {
                              "key": "material",
                              "display": "Monica Hampton",
                              "description": ""
                            },
                            {
                              "key": "weight",
                              "display": "John Mendoza",
                              "description": ""
                            }
                          ]
                        }
                      ],
                      "items": [
                        {
                          "type": "product",
                          "template_tag": "test_product",
                          "name": "benchmark collaborative paradigms",
                          "item_type": "set",
                          "item_code": "12H33",
                          "slug": "benchmark-collaborative-paradigms",
                          "uid": 1242,
                          "sellable": true,
                          "_custom_meta": [],
                          "brand": {
                            "type": "brand",
                            "name": "Barry, Jennings and Larson",
                            "logo": {
                              "type": "image",
                              "url": "https://hdn-1.fynd.com/media/logo/brand/original/12391_0d956c6c71a4427895c15e44cba82f88.jpg"
                            },
                            "action": {
                              "page": {
                                "type": "products",
                                "query": {
                                  "brand": [
                                    "Hess-Inc"
                                  ]
                                }
                              },
                              "type": "page"
                            },
                            "_custom_json": {}
                          },
                          "action": {
                            "page": {
                              "type": "product",
                              "query": {
                                "category": [
                                  "benchmark-collaborative-paradigms"
                                ]
                              }
                            },
                            "type": "page"
                          },
                          "attributes": {
                            "color_hex": "808080",
                            "weight": 100,
                            "product_type": "LaptopBags",
                            "gender": [
                              "Men",
                              "Women"
                            ],
                            "material": "Neoprene",
                            "style_note": "Shape up your overall appeal with this stunning laptop bag. The amazing storage and great design will let you carry your laptop in style!",
                            "item_code": "LGLAPTOPSLEEVE5",
                            "occasion": "Casual",
                            "primary_color": "Grey",
                            "primary_material": "Others",
                            "variant": "LGLAPTOPSLEEVE5",
                            "color": "DarkGrey",
                            "product_details": "This is a Unisex Product.",
                            "primary_color_hex": "808080"
                          },
                          "medias": [
                            {
                              "type": "image",
                              "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/1309_LGLAPTOPSLEEVE5/1_1564735832806.jpg"
                            }
                          ],
                          "categories": [
                            {
                              "uid": 3,
                              "name": "Amy Kim DDS",
                              "logo": {
                                "type": "image",
                                "url": "https://hdn-1.fynd.com/media/banner_portrait/brand/original/540_ecba3a1af141467da8abc20500f983db.jpg"
                              },
                              "action": {
                                "page": {
                                  "type": "category",
                                  "query": {
                                    "category": [
                                      "Amy-Kim-DDS"
                                    ]
                                  }
                                },
                                "type": "page"
                              },
                              "_custom_json": {}
                            }
                          ],
                          "discount": "14% OFF",
                          "price": {
                            "marked": {
                              "min": 1399,
                              "max": 1399,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "effective": {
                              "min": 1199,
                              "max": 1399,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            }
                          },
                          "net_quantity": {},
                          "highlights": [],
                          "description": "",
                          "short_description": "",
                          "country_of_origin": ""
                        },
                        {
                          "type": "product",
                          "name": "deploy viral systems",
                          "item_type": "set",
                          "slug": "deploy-viral-systems",
                          "brand": {
                            "type": "brand",
                            "name": "Barry, Jennings and Larson",
                            "logo": {
                              "type": "image",
                              "url": "https://hdn-1.fynd.com/media/logo/brand/original/12391_0d956c6c71a4427895c15e44cba82f88.jpg"
                            },
                            "action": {
                              "page": {
                                "type": "products",
                                "query": {
                                  "brand": [
                                    "Hess-Inc"
                                  ]
                                }
                              },
                              "type": "page"
                            },
                            "_custom_json": {}
                          },
                          "action": {
                            "page": {
                              "type": "product",
                              "query": {
                                "category": [
                                  "deploy-viral-systems"
                                ]
                              }
                            },
                            "type": "page"
                          },
                          "attributes": {
                            "color_hex": "808080",
                            "weight": 100,
                            "product_type": "LaptopBags",
                            "gender": [
                              "Men",
                              "Women"
                            ],
                            "material": "Neoprene",
                            "style_note": "Shape up your overall appeal with this stunning laptop bag. The amazing storage and great design will let you carry your laptop in style!",
                            "item_code": "LGLAPTOPSLEEVE5",
                            "occasion": "Casual",
                            "primary_color": "Grey",
                            "primary_material": "Others",
                            "variant": "LGLAPTOPSLEEVE5",
                            "color": "DarkGrey",
                            "product_details": "This is a Unisex Product.",
                            "primary_color_hex": "808080"
                          },
                          "medias": [
                            {
                              "type": "image",
                              "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/1309_LGLAPTOPSLEEVE5/1_1564735832806.jpg"
                            }
                          ],
                          "categories": [
                            {
                              "uid": 3,
                              "name": "Amy Kim DDS",
                              "logo": {
                                "type": "image",
                                "url": "https://hdn-1.fynd.com/media/banner_portrait/brand/original/540_ecba3a1af141467da8abc20500f983db.jpg"
                              },
                              "action": {
                                "page": {
                                  "type": "category",
                                  "query": {
                                    "category": [
                                      "Amy-Kim-DDS"
                                    ]
                                  }
                                },
                                "type": "page"
                              },
                              "_custom_json": {}
                            }
                          ],
                          "discount": "14% OFF",
                          "price": {
                            "marked": {
                              "min": 1399,
                              "max": 1399,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "effective": {
                              "min": 1199,
                              "max": 1399,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            }
                          },
                          "rating": 2.7,
                          "rating_count": 2
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bad request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                },
                "examples": {
                  "failure": {
                    "value": {
                      "code": 404,
                      "message": "Not Found."
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Product"
        ]
      }
    },
    "/service/application/catalog/v1.0/products/{slug}/similar/compare": {
      "get": {
        "summary": "getSimilarComparisonProductBySlug | Fetches similar products for comparison.",
        "description": "Get all products within the same category as the one specified by the provided slug.",
        "tags": [
          "Catalog"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "description": "A short, human-readable, URL-friendly identifier of a product. You can get slug value from the endpoint /service/application/catalog/v1.0/products/.",
            "schema": {
              "type": "string"
            },
            "required": true,
            "examples": {
              "success": {
                "value": "facilitate-value-added-infrastructures"
              },
              "failure": {
                "value": "test"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns an array of objects containing the attributes for comparision.",
            "content": {
              "application/json": {
                "examples": {
                  "success": {
                    "value": {
                      "attributes_metadata": [
                        {
                          "title": "Kevin Everett",
                          "details": [
                            {
                              "key": "color",
                              "display": "Steven Walker",
                              "description": ""
                            },
                            {
                              "key": "gender",
                              "display": "Wesley Sandoval",
                              "description": ""
                            },
                            {
                              "key": "material",
                              "display": "Lawrence Spencer",
                              "description": ""
                            },
                            {
                              "key": "weight",
                              "display": "April Lopez",
                              "description": ""
                            }
                          ]
                        }
                      ],
                      "items": [
                        {
                          "type": "product",
                          "template_tag": "test_template",
                          "name": "facilitate value-added infrastructures",
                          "item_type": "set",
                          "item_code": "LGLAPTOPSLEEVE5",
                          "slug": "facilitate-value-added-infrastructures",
                          "uid": 1,
                          "brand": {
                            "type": "brand",
                            "name": "Guerra-Chang",
                            "logo": {
                              "type": "image",
                              "url": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/media/logo/brand/original/12391_0d956c6c71a4427895c15e44cba82f88.jpg"
                            },
                            "action": {
                              "page": {
                                "type": "products",
                                "query": {
                                  "brand": [
                                    "Guerra-Chang"
                                  ]
                                }
                              },
                              "type": "page"
                            },
                            "_custom_json": {
                              "how_to_redeem": [
                                "Go to PlayStation Store and click on your Avatar at the top of the screen",
                                "Select Redeem Codes from the drop-down menu",
                                "Carefully enter the code and select Redeem",
                                "The credit or content is now applied to your account"
                              ],
                              "terms_and_condition": [],
                              "order_short_description": "Thank you for your purchase! Please visit the PlayStation Store to redeem your code"
                            }
                          },
                          "sellable": false,
                          "action": {
                            "page": {
                              "type": "product",
                              "params": {
                                "slug": [
                                  "facilitate-value-added-infrastructures"
                                ]
                              }
                            },
                            "type": "page"
                          },
                          "attributes": {
                            "color_hex": "808080",
                            "weight": 100,
                            "product_type": "LaptopBags",
                            "gender": [
                              "Men",
                              "Women"
                            ],
                            "material": "Neoprene",
                            "style_note": "Shape up your overall appeal with this stunning laptop bag. The amazing storage and great design will let you carry your laptop in style!",
                            "item_code": "LGLAPTOPSLEEVE5",
                            "occasion": "Casual",
                            "primary_color": "Grey",
                            "primary_material": "Others",
                            "variant": "LGLAPTOPSLEEVE5",
                            "color": "Red",
                            "product_details": "This is a Unisex Product.",
                            "primary_color_hex": "808080"
                          },
                          "_custom_meta": [],
                          "medias": [
                            {
                              "url": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/jiox5/products/pictures/item/free/original/DfIRf_k-6M-hp-56-c6656aa-ink-cartridge-black-490783783-i-1-1200wx1200h.jpeg",
                              "type": "image",
                              "alt": ""
                            }
                          ],
                          "categories": [
                            {
                              "uid": 3,
                              "name": "Sarah Carter",
                              "logo": {
                                "type": "image",
                                "url": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/media/banner_portrait/brand/original/540_ecba3a1af141467da8abc20500f983db.jpg"
                              },
                              "action": {
                                "page": {
                                  "type": "products",
                                  "query": {
                                    "category": [
                                      "Sarah-Carter"
                                    ]
                                  }
                                },
                                "type": "page"
                              },
                              "_custom_json": {}
                            }
                          ],
                          "discount": "14% OFF",
                          "price": {
                            "marked": {
                              "min": 1399,
                              "max": 1399,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "effective": {
                              "min": 1199,
                              "max": 1399,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            }
                          },
                          "net_quantity": {
                            "value": 2,
                            "unit": "kg"
                          },
                          "rating": 2.7,
                          "rating_count": 2,
                          "short_description": ""
                        },
                        {
                          "type": "product",
                          "attributes": {
                            "primary_color_hex": null,
                            "color": "808080",
                            "gender": "women",
                            "material": "Neoprene",
                            "weight": "100"
                          },
                          "categories": [
                            {
                              "uid": 3,
                              "name": "Sarah Carter",
                              "logo": {
                                "type": "image",
                                "url": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/media/banner_portrait/brand/original/540_ecba3a1af141467da8abc20500f983db.jpg"
                              },
                              "action": {
                                "page": {
                                  "type": "products",
                                  "query": {
                                    "category": [
                                      "Sarah-Carter"
                                    ]
                                  }
                                },
                                "type": "page"
                              },
                              "_custom_json": {}
                            }
                          ],
                          "_custom_meta": [],
                          "sellable": false,
                          "name": "product-name-updated",
                          "sizes": [
                            "13"
                          ],
                          "slug": "mesh-magnetic-e-business",
                          "tags": [
                            "Digital"
                          ],
                          "uid": 10,
                          "item_code": "LGLAPTOPSLEEVE5",
                          "item_type": "set",
                          "brand": {
                            "type": "brand",
                            "name": "Edwards, Chapman and Anderson",
                            "logo": {
                              "type": "image",
                              "url": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/media/logo/brand/original/12391_0d956c6c71a4427895c15e44cba82f88.jpg"
                            },
                            "action": {
                              "page": {
                                "type": "products",
                                "query": {
                                  "brand": [
                                    "Edwards,-Chapman-and-Anderson"
                                  ]
                                }
                              },
                              "type": "page"
                            },
                            "_custom_json": {
                              "how_to_redeem": [
                                "Go to PlayStation Store and click on your Avatar at the top of the screen",
                                "Select Redeem Codes from the drop-down menu",
                                "Carefully enter the code and select Redeem",
                                "The credit or content is now applied to your account"
                              ],
                              "terms_and_condition": [],
                              "order_short_description": "Thank you for your purchase! Please visit the PlayStation Store to redeem your code"
                            }
                          },
                          "action": {
                            "page": {
                              "type": "product",
                              "params": {
                                "slug": [
                                  "mesh-magnetic-e-business"
                                ]
                              }
                            },
                            "type": "page"
                          },
                          "medias": [
                            {
                              "type": "image",
                              "url": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/media/pictures/tagged_items/original/1309_LGLAPTOPSLEEVE5/1_1564735832806.jpg",
                              "alt": "product-name-updated"
                            }
                          ],
                          "identifiers": [],
                          "discount": "14% OFF",
                          "price": {
                            "marked": {
                              "min": 1399,
                              "max": 2000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "effective": {
                              "min": 1199,
                              "max": 1600,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "selling": {
                              "min": 1399,
                              "max": 1800,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            }
                          },
                          "is_tryout": false,
                          "channel": "000000000000000000000001",
                          "rating": 2.7,
                          "_custom_json": {},
                          "moq": {
                            "minimum": 1,
                            "increment_unit": 1
                          },
                          "net_quantity": {},
                          "discount_meta": {},
                          "seo": {},
                          "variants": []
                        },
                        {
                          "type": "product",
                          "attributes": {
                            "primary_color_hex": null,
                            "color": "808080",
                            "gender": "women",
                            "material": "Neoprene",
                            "weight": "100"
                          },
                          "categories": [
                            {
                              "uid": 3,
                              "name": "Sarah Carter",
                              "logo": {
                                "type": "image",
                                "url": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/media/banner_portrait/brand/original/540_ecba3a1af141467da8abc20500f983db.jpg"
                              },
                              "action": {
                                "page": {
                                  "type": "products",
                                  "query": {
                                    "category": [
                                      "Sarah-Carter"
                                    ]
                                  }
                                },
                                "type": "page"
                              },
                              "_custom_json": {}
                            }
                          ],
                          "_custom_meta": [],
                          "sellable": false,
                          "name": "product-name-updated",
                          "sizes": [
                            "13"
                          ],
                          "slug": "evolve-e-business-web-services",
                          "tags": [
                            "Digital"
                          ],
                          "uid": 11,
                          "item_code": "LGLAPTOPSLEEVE5",
                          "item_type": "set",
                          "brand": {
                            "type": "brand",
                            "name": "Edwards, Chapman and Anderson",
                            "logo": {
                              "type": "image",
                              "url": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/media/logo/brand/original/12391_0d956c6c71a4427895c15e44cba82f88.jpg"
                            },
                            "action": {
                              "page": {
                                "type": "products",
                                "query": {
                                  "brand": [
                                    "Edwards,-Chapman-and-Anderson"
                                  ]
                                }
                              },
                              "type": "page"
                            },
                            "_custom_json": {
                              "how_to_redeem": [
                                "Go to PlayStation Store and click on your Avatar at the top of the screen",
                                "Select Redeem Codes from the drop-down menu",
                                "Carefully enter the code and select Redeem",
                                "The credit or content is now applied to your account"
                              ],
                              "terms_and_condition": [],
                              "order_short_description": "Thank you for your purchase! Please visit the PlayStation Store to redeem your code"
                            }
                          },
                          "action": {
                            "page": {
                              "type": "product",
                              "params": {
                                "slug": [
                                  "evolve-e-business-web-services"
                                ]
                              }
                            },
                            "type": "page"
                          },
                          "medias": [
                            {
                              "type": "image",
                              "url": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/media/pictures/tagged_items/original/1309_LGLAPTOPSLEEVE5/1_1564735832806.jpg",
                              "alt": "product-name-updated"
                            }
                          ],
                          "identifiers": [],
                          "discount": "14% OFF",
                          "price": {
                            "marked": {
                              "min": 1399,
                              "max": 2000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "effective": {
                              "min": 1199,
                              "max": 1600,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "selling": {
                              "min": 1399,
                              "max": 1800,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            }
                          },
                          "is_tryout": false,
                          "channel": "000000000000000000000001",
                          "rating": 2.7,
                          "_custom_json": {},
                          "moq": {
                            "minimum": 1,
                            "increment_unit": 1
                          },
                          "net_quantity": {},
                          "discount_meta": {},
                          "seo": {},
                          "variants": []
                        },
                        {
                          "type": "product",
                          "attributes": {
                            "primary_color_hex": null,
                            "color": "808080",
                            "gender": "women",
                            "material": "Neoprene",
                            "weight": "100"
                          },
                          "categories": [
                            {
                              "uid": 3,
                              "name": "Sarah Carter",
                              "logo": {
                                "type": "image",
                                "url": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/media/banner_portrait/brand/original/540_ecba3a1af141467da8abc20500f983db.jpg"
                              },
                              "action": {
                                "page": {
                                  "type": "products",
                                  "query": {
                                    "category": [
                                      "Sarah-Carter"
                                    ]
                                  }
                                },
                                "type": "page"
                              },
                              "_custom_json": {}
                            }
                          ],
                          "_custom_meta": [],
                          "sellable": false,
                          "name": "product-name-updated",
                          "sizes": [
                            "13"
                          ],
                          "slug": "reinvent-cutting-edge-web-services",
                          "tags": [
                            "Digital"
                          ],
                          "uid": 12,
                          "item_code": "LGLAPTOPSLEEVE5",
                          "item_type": "set",
                          "brand": {
                            "type": "brand",
                            "name": "Edwards, Chapman and Anderson",
                            "logo": {
                              "type": "image",
                              "url": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/media/logo/brand/original/12391_0d956c6c71a4427895c15e44cba82f88.jpg"
                            },
                            "action": {
                              "page": {
                                "type": "products",
                                "query": {
                                  "brand": [
                                    "Edwards,-Chapman-and-Anderson"
                                  ]
                                }
                              },
                              "type": "page"
                            },
                            "_custom_json": {
                              "how_to_redeem": [
                                "Go to PlayStation Store and click on your Avatar at the top of the screen",
                                "Select Redeem Codes from the drop-down menu",
                                "Carefully enter the code and select Redeem",
                                "The credit or content is now applied to your account"
                              ],
                              "terms_and_condition": [],
                              "order_short_description": "Thank you for your purchase! Please visit the PlayStation Store to redeem your code"
                            }
                          },
                          "action": {
                            "page": {
                              "type": "product",
                              "params": {
                                "slug": [
                                  "reinvent-cutting-edge-web-services"
                                ]
                              }
                            },
                            "type": "page"
                          },
                          "medias": [
                            {
                              "type": "image",
                              "url": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/media/pictures/tagged_items/original/1309_LGLAPTOPSLEEVE5/1_1564735832806.jpg",
                              "alt": "product-name-updated"
                            }
                          ],
                          "identifiers": [],
                          "discount": "14% OFF",
                          "price": {
                            "marked": {
                              "min": 1399,
                              "max": 2000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "effective": {
                              "min": 1199,
                              "max": 1600,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "selling": {
                              "min": 1399,
                              "max": 1800,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            }
                          },
                          "is_tryout": false,
                          "channel": "000000000000000000000001",
                          "rating": 2.7,
                          "_custom_json": {},
                          "moq": {
                            "minimum": 1,
                            "increment_unit": 1
                          },
                          "net_quantity": {},
                          "discount_meta": {},
                          "seo": {},
                          "variants": []
                        },
                        {
                          "type": "product",
                          "attributes": {
                            "primary_color_hex": null,
                            "color": "808080",
                            "gender": "women",
                            "material": "Neoprene",
                            "weight": "100"
                          },
                          "categories": [
                            {
                              "uid": 3,
                              "name": "Sarah Carter",
                              "logo": {
                                "type": "image",
                                "url": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/media/banner_portrait/brand/original/540_ecba3a1af141467da8abc20500f983db.jpg"
                              },
                              "action": {
                                "page": {
                                  "type": "products",
                                  "query": {
                                    "category": [
                                      "Sarah-Carter"
                                    ]
                                  }
                                },
                                "type": "page"
                              },
                              "_custom_json": {}
                            }
                          ],
                          "_custom_meta": [],
                          "sellable": false,
                          "name": "product-name-updated",
                          "sizes": [
                            "13"
                          ],
                          "slug": "seize-mission-critical-e-tailers",
                          "tags": [
                            "Digital"
                          ],
                          "uid": 13,
                          "item_code": "LGLAPTOPSLEEVE5",
                          "item_type": "set",
                          "brand": {
                            "type": "brand",
                            "name": "Edwards, Chapman and Anderson",
                            "logo": {
                              "type": "image",
                              "url": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/media/logo/brand/original/12391_0d956c6c71a4427895c15e44cba82f88.jpg"
                            },
                            "action": {
                              "page": {
                                "type": "products",
                                "query": {
                                  "brand": [
                                    "Edwards,-Chapman-and-Anderson"
                                  ]
                                }
                              },
                              "type": "page"
                            },
                            "_custom_json": {
                              "how_to_redeem": [
                                "Go to PlayStation Store and click on your Avatar at the top of the screen",
                                "Select Redeem Codes from the drop-down menu",
                                "Carefully enter the code and select Redeem",
                                "The credit or content is now applied to your account"
                              ],
                              "terms_and_condition": [],
                              "order_short_description": "Thank you for your purchase! Please visit the PlayStation Store to redeem your code"
                            }
                          },
                          "action": {
                            "page": {
                              "type": "product",
                              "params": {
                                "slug": [
                                  "seize-mission-critical-e-tailers"
                                ]
                              }
                            },
                            "type": "page"
                          },
                          "medias": [
                            {
                              "type": "image",
                              "url": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/media/pictures/tagged_items/original/1309_LGLAPTOPSLEEVE5/1_1564735832806.jpg",
                              "alt": "product-name-updated"
                            }
                          ],
                          "identifiers": [],
                          "discount": "14% OFF",
                          "price": {
                            "marked": {
                              "min": 1399,
                              "max": 2000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "effective": {
                              "min": 1199,
                              "max": 1600,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "selling": {
                              "min": 1399,
                              "max": 1800,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            }
                          },
                          "is_tryout": false,
                          "channel": "000000000000000000000001",
                          "rating": 2.7,
                          "_custom_json": {},
                          "moq": {
                            "minimum": 1,
                            "increment_unit": 1
                          },
                          "net_quantity": {},
                          "discount_meta": {},
                          "seo": {},
                          "variants": []
                        },
                        {
                          "type": "product",
                          "attributes": {
                            "primary_color_hex": null,
                            "color": "808080",
                            "gender": "women",
                            "material": "Neoprene",
                            "weight": "100"
                          },
                          "categories": [
                            {
                              "uid": 3,
                              "name": "Sarah Carter",
                              "logo": {
                                "type": "image",
                                "url": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/media/banner_portrait/brand/original/540_ecba3a1af141467da8abc20500f983db.jpg"
                              },
                              "action": {
                                "page": {
                                  "type": "products",
                                  "query": {
                                    "category": [
                                      "Sarah-Carter"
                                    ]
                                  }
                                },
                                "type": "page"
                              },
                              "_custom_json": {}
                            }
                          ],
                          "_custom_meta": [],
                          "sellable": false,
                          "name": "product-name-updated",
                          "sizes": [
                            "13"
                          ],
                          "slug": "cultivate-strategic-supply-chains",
                          "tags": [
                            "Digital"
                          ],
                          "uid": 14,
                          "item_code": "LGLAPTOPSLEEVE5",
                          "item_type": "set",
                          "brand": {
                            "type": "brand",
                            "name": "Edwards, Chapman and Anderson",
                            "logo": {
                              "type": "image",
                              "url": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/media/logo/brand/original/12391_0d956c6c71a4427895c15e44cba82f88.jpg"
                            },
                            "action": {
                              "page": {
                                "type": "products",
                                "query": {
                                  "brand": [
                                    "Edwards,-Chapman-and-Anderson"
                                  ]
                                }
                              },
                              "type": "page"
                            },
                            "_custom_json": {
                              "how_to_redeem": [
                                "Go to PlayStation Store and click on your Avatar at the top of the screen",
                                "Select Redeem Codes from the drop-down menu",
                                "Carefully enter the code and select Redeem",
                                "The credit or content is now applied to your account"
                              ],
                              "terms_and_condition": [],
                              "order_short_description": "Thank you for your purchase! Please visit the PlayStation Store to redeem your code"
                            }
                          },
                          "action": {
                            "page": {
                              "type": "product",
                              "params": {
                                "slug": [
                                  "cultivate-strategic-supply-chains"
                                ]
                              }
                            },
                            "type": "page"
                          },
                          "medias": [
                            {
                              "type": "image",
                              "url": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/media/pictures/tagged_items/original/1309_LGLAPTOPSLEEVE5/1_1564735832806.jpg",
                              "alt": "product-name-updated"
                            }
                          ],
                          "identifiers": [],
                          "discount": "14% OFF",
                          "price": {
                            "marked": {
                              "min": 1399,
                              "max": 2000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "effective": {
                              "min": 1199,
                              "max": 1600,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "selling": {
                              "min": 1399,
                              "max": 1800,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            }
                          },
                          "is_tryout": false,
                          "channel": "000000000000000000000001",
                          "rating": 2.7,
                          "_custom_json": {},
                          "moq": {
                            "minimum": 1,
                            "increment_unit": 1
                          },
                          "net_quantity": {},
                          "discount_meta": {},
                          "seo": {},
                          "variants": []
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ProductCompareResponseSchema"
                }
              }
            }
          },
          "404": {
            "description": "Bad request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "examples": {
                  "failure": {
                    "value": {
                      "code": 404,
                      "message": "Not Found."
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "x-groups": [
          "Product"
        ]
      }
    },
    "/service/application/catalog/v1.0/products/{slug}/similar/compared-frequently": {
      "get": {
        "summary": "getComparedFrequentlyProductBySlug | Retrieves products frequently compared with a given product.",
        "description": "Get products that are often compared to the product specified by its slug.",
        "tags": [
          "Catalog"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "description": "A short, human-readable, URL-friendly identifier of a product. You can get slug value from the endpoint /service/application/catalog/v1.0/products/.",
            "schema": {
              "type": "string"
            },
            "required": true,
            "examples": {
              "success": {
                "value": "facilitate-value-added-infrastructures"
              },
              "failure": {
                "value": "test"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns an array of objects containing the attributes for comparision.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductFrequentlyComparedSimilarResponseSchema"
                },
                "examples": {
                  "success": {
                    "value": {
                      "similars": {
                        "title": "Most Compared",
                        "subtitle": "We bet you would love these!",
                        "attributes_metadata": [
                          {
                            "title": "Alexander Sawyer",
                            "details": [
                              {
                                "key": "color",
                                "display": "Kimberly Davidson",
                                "description": ""
                              },
                              {
                                "key": "gender",
                                "display": "Kimberly Mcdaniel",
                                "description": ""
                              },
                              {
                                "key": "material",
                                "display": "Monica Hampton",
                                "description": ""
                              },
                              {
                                "key": "weight",
                                "display": "John Mendoza",
                                "description": ""
                              }
                            ]
                          }
                        ],
                        "items": [
                          {
                            "type": "product",
                            "name": "benchmark collaborative paradigms",
                            "item_type": "set",
                            "slug": "benchmark-collaborative-paradigms",
                            "brand": {
                              "type": "brand",
                              "name": "Barry, Jennings and Larson",
                              "logo": {
                                "type": "image",
                                "url": "https://hdn-1.fynd.com/media/logo/brand/original/12391_0d956c6c71a4427895c15e44cba82f88.jpg"
                              },
                              "action": {
                                "page": {
                                  "type": "products",
                                  "query": {
                                    "brand": [
                                      "Hess-Inc"
                                    ]
                                  }
                                },
                                "type": "page"
                              },
                              "_custom_json": {}
                            },
                            "action": {
                              "page": {
                                "type": "product",
                                "query": {
                                  "category": [
                                    "benchmark-collaborative-paradigms"
                                  ]
                                }
                              },
                              "type": "page"
                            },
                            "attributes": {
                              "color_hex": "808080",
                              "weight": 100,
                              "product_type": "LaptopBags",
                              "gender": [
                                "Men",
                                "Women"
                              ],
                              "material": "Neoprene",
                              "style_note": "Shape up your overall appeal with this stunning laptop bag. The amazing storage and great design will let you carry your laptop in style!",
                              "item_code": "LGLAPTOPSLEEVE5",
                              "occasion": "Casual",
                              "primary_color": "Grey",
                              "primary_material": "Others",
                              "variant": "LGLAPTOPSLEEVE5",
                              "color": "DarkGrey",
                              "product_details": "This is a Unisex Product.",
                              "primary_color_hex": "808080"
                            },
                            "medias": [
                              {
                                "type": "image",
                                "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/1309_LGLAPTOPSLEEVE5/1_1564735832806.jpg"
                              }
                            ],
                            "categories": [
                              {
                                "uid": 3,
                                "name": "Amy Kim DDS",
                                "logo": {
                                  "type": "image",
                                  "url": "https://hdn-1.fynd.com/media/banner_portrait/brand/original/540_ecba3a1af141467da8abc20500f983db.jpg"
                                },
                                "action": {
                                  "page": {
                                    "type": "category",
                                    "query": {
                                      "category": [
                                        "Amy-Kim-DDS"
                                      ]
                                    }
                                  },
                                  "type": "page"
                                },
                                "_custom_json": {}
                              }
                            ],
                            "discount": "14% OFF",
                            "price": {
                              "marked": {
                                "min": 1399,
                                "max": 1399,
                                "currency_code": "INR",
                                "currency_symbol": "₹"
                              },
                              "effective": {
                                "min": 1199,
                                "max": 1399,
                                "currency_code": "INR",
                                "currency_symbol": "₹"
                              }
                            },
                            "rating": 2.7,
                            "rating_count": 2
                          },
                          {
                            "type": "product",
                            "attributes": {
                              "primary_color_hex": "808080",
                              "weight": "100",
                              "gender": "women",
                              "material": "Neoprene",
                              "primary_color": "DarkGrey"
                            },
                            "categories": [
                              {
                                "uid": 3,
                                "name": "Amy Kim DDS",
                                "logo": {
                                  "type": "image",
                                  "url": "https://hdn-1.fynd.com/media/banner_portrait/brand/original/540_ecba3a1af141467da8abc20500f983db.jpg"
                                },
                                "action": {
                                  "page": {
                                    "type": "category",
                                    "query": {
                                      "category": [
                                        "Amy-Kim-DDS"
                                      ]
                                    }
                                  },
                                  "type": "page"
                                },
                                "_custom_json": {}
                              }
                            ],
                            "sellable": true,
                            "name": "deploy viral systems",
                            "slug": "deploy-viral-systems",
                            "uid": 2,
                            "item_type": "set",
                            "brand": {
                              "type": "brand",
                              "name": "Hess Inc",
                              "logo": {
                                "type": "image",
                                "url": "https://hdn-1.fynd.com/media/logo/brand/original/12391_0d956c6c71a4427895c15e44cba82f88.jpg"
                              },
                              "action": {
                                "page": {
                                  "type": "products",
                                  "query": {
                                    "brand": [
                                      "Hess-Inc"
                                    ]
                                  }
                                },
                                "type": "page"
                              },
                              "_custom_json": {}
                            },
                            "action": {
                              "page": {
                                "type": "product",
                                "query": {
                                  "category": [
                                    "deploy-viral-systems"
                                  ]
                                }
                              },
                              "type": "page"
                            },
                            "medias": [
                              {
                                "type": "image",
                                "url": "https://hdn-1.fynd.com/media/fynd_store_items/l2_category/original/2830_c5bb5fc02f414307a828c4c56483c30a.jpg"
                              }
                            ],
                            "discount": "14% OFF",
                            "price": {
                              "marked": {
                                "min": 1399,
                                "max": 1499,
                                "currency_code": "INR",
                                "currency_symbol": "₹"
                              },
                              "effective": {
                                "min": 1199,
                                "max": 1399,
                                "currency_code": "INR",
                                "currency_symbol": "₹"
                              }
                            },
                            "is_tryout": false,
                            "rating": 2.7
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Product"
        ]
      }
    },
    "/service/application/catalog/v1.0/products/{slug}/variants": {
      "get": {
        "summary": "getProductVariantsBySlug | Retrieves product variants by slug.",
        "description": "Get all available variants of a specific product identified by its slug.",
        "tags": [
          "Catalog"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "description": "A short, human-readable, URL-friendly identifier of a product. You can get slug value from the endpoint /service/application/catalog/v1.0/products/.",
            "schema": {
              "type": "string"
            },
            "required": true,
            "examples": {
              "success": {
                "value": "facilitate-value-added-infrastructures"
              },
              "failure": {
                "value": "test-product"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns all variants of a product. For `display_type:image`, `color` key will be present otherwise `value` key will be shown.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariantsResponseSchema"
                },
                "examples": {
                  "success": {
                    "value": {
                      "variants": [
                        {
                          "header": "Addtn. Color",
                          "key": "color",
                          "group_id": "darkgrey-18928016",
                          "display_type": "image",
                          "logo": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/360x0/56_MKT02AI060CORAL/1_1567590349681.jpg",
                          "items": [
                            {
                              "action": {
                                "page": {
                                  "type": "product",
                                  "params": {
                                    "slug": [
                                      "benchmark-collaborative-paradigms"
                                    ]
                                  }
                                },
                                "type": "page"
                              },
                              "uid": 1,
                              "slug": "benchmark-collaborative-paradigms",
                              "medias": [
                                {
                                  "type": "image",
                                  "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/1309_LGLAPTOPSLEEVE5/1_1564735832806.jpg"
                                }
                              ],
                              "name": "benchmark collaborative paradigms",
                              "is_available": true,
                              "color_name": "DarkGrey",
                              "color": "808080"
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Product"
        ]
      }
    },
    "/service/application/catalog/v1.0/products/stock-status": {
      "get": {
        "summary": "getProductStockByIds | Checks product stock by IDs.",
        "description": "Get the current stock status for products identified by their IDs, such as SKU, ALU, EAN, etc.",
        "tags": [
          "Catalog"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "item_id",
            "description": "The Item ID of the product (Max. 50 allowed).",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "examples": {
              "success": {
                "value": 1
              },
              "failure": {
                "value": 981
              }
            }
          },
          {
            "in": "query",
            "name": "alu",
            "description": "ALU of the product (limited upto 50 ALU identifier in a single request).",
            "schema": {
              "type": "string"
            },
            "required": false,
            "examples": {
              "success": {
                "value": "#8680705321086"
              },
              "failure": {
                "value": "test-alu"
              }
            }
          },
          {
            "in": "query",
            "name": "sku_code",
            "description": "Stock-keeping Unit of the product (limited upto 50 SKU Code in a single request).",
            "schema": {
              "type": "string",
              "x-not-enum": true
            },
            "required": false,
            "examples": {
              "success": {
                "value": "P10101101154425S"
              },
              "failure": {
                "value": "test-sku"
              }
            }
          },
          {
            "in": "query",
            "name": "ean",
            "description": "European Article Number of the product (limited upto 50 EAN identifier in a single request).",
            "schema": {
              "type": "string"
            },
            "required": false,
            "examples": {
              "success": {
                "value": "#8680705340025"
              },
              "failure": {
                "value": "test-ean"
              }
            }
          },
          {
            "in": "query",
            "name": "upc",
            "description": "Universal Product Code of the product (limited upto 50 UPC identifier in a single request).",
            "schema": {
              "type": "string"
            },
            "required": false,
            "examples": {
              "success": {
                "value": "#8680705326012"
              },
              "failure": {
                "value": "test-upc"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns the status of the product stock.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductStockStatusResponseSchema"
                },
                "examples": {
                  "success": {
                    "value": {
                      "items": [
                        {
                          "uid": "1",
                          "item_id": 1,
                          "identifier": {
                            "sku_code": "P10101101154425S"
                          },
                          "price": {
                            "effective": 399,
                            "marked": 399,
                            "currency": "INR"
                          },
                          "size": "13",
                          "company": {
                            "id": 1,
                            "name": "Natalie Norman"
                          },
                          "seller_identifier": "",
                          "store": {
                            "id": 1,
                            "name": "Wayne Lamb",
                            "code": "Wayne-Lamb"
                          },
                          "quantity": 5,
                          "price_marked": 1499,
                          "price_effective": 799,
                          "price_selling": 799,
                          "discount_meta": {},
                          "discount_applied": {}
                        },
                        {
                          "uid": "2",
                          "item_id": 1,
                          "identifier": {
                            "sku_code": "P10101101154425S"
                          },
                          "price": {
                            "effective": 399,
                            "marked": 399,
                            "currency": "INR"
                          },
                          "size": "13",
                          "company": {
                            "id": 1,
                            "name": "Natalie Norman"
                          },
                          "store": {
                            "id": 1,
                            "name": "Wayne Lamb",
                            "code": "Wayne-Lamb"
                          },
                          "quantity": 5
                        },
                        {
                          "uid": "3",
                          "item_id": 2,
                          "identifier": {
                            "sku_code": "P10101101154425S"
                          },
                          "price": {
                            "effective": 399,
                            "marked": 399,
                            "currency": "INR"
                          },
                          "size": "13",
                          "company": {
                            "id": 1,
                            "name": "Natalie Norman"
                          },
                          "seller_identifier": "",
                          "store": {
                            "id": 1,
                            "name": "Wayne Lamb",
                            "code": "Wayne-Lamb"
                          },
                          "quantity": 5,
                          "price_marked": 1499,
                          "price_effective": 799,
                          "price_selling": 799,
                          "discount_meta": {},
                          "discount_applied": {}
                        },
                        {
                          "uid": "4",
                          "item_id": 2,
                          "identifier": {
                            "sku_code": "P10101101154425S"
                          },
                          "price": {
                            "effective": 399,
                            "marked": 399,
                            "currency": "INR"
                          },
                          "size": "13",
                          "company": {
                            "id": 1,
                            "name": "Natalie Norman"
                          },
                          "seller_identifier": "",
                          "store": {
                            "id": 1,
                            "name": "Wayne Lamb",
                            "code": "Wayne-Lamb"
                          },
                          "quantity": 5,
                          "price_marked": 1499,
                          "price_effective": 799,
                          "price_selling": 799,
                          "discount_meta": {},
                          "discount_applied": {}
                        },
                        {
                          "uid": "5",
                          "item_id": 3,
                          "identifier": {
                            "sku_code": "P10101101154425S"
                          },
                          "price": {
                            "effective": 399,
                            "marked": 399,
                            "currency": "INR"
                          },
                          "size": "13",
                          "company": {
                            "id": 1,
                            "name": "Natalie Norman"
                          },
                          "seller_identifier": "",
                          "store": {
                            "id": 1,
                            "name": "Wayne Lamb",
                            "code": "Wayne-Lamb"
                          },
                          "quantity": 5,
                          "price_marked": 1499,
                          "price_effective": 799,
                          "price_selling": 799,
                          "discount_meta": {},
                          "discount_applied": {}
                        },
                        {
                          "uid": "6",
                          "item_id": 3,
                          "identifier": {
                            "sku_code": "P10101101154425S"
                          },
                          "price": {
                            "effective": 399,
                            "marked": 399,
                            "currency": "INR"
                          },
                          "size": "13",
                          "company": {
                            "id": 1,
                            "name": "Natalie Norman"
                          },
                          "seller_identifier": "",
                          "store": {
                            "id": 1,
                            "name": "Wayne Lamb",
                            "code": "Wayne-Lamb"
                          },
                          "quantity": 5,
                          "price_marked": 1499,
                          "price_effective": 799,
                          "price_selling": 799,
                          "discount_meta": {},
                          "discount_applied": {}
                        },
                        {
                          "uid": "7",
                          "item_id": 4,
                          "identifier": {
                            "sku_code": "P10101101154425S"
                          },
                          "price": {
                            "effective": 399,
                            "marked": 399,
                            "currency": "INR"
                          },
                          "size": "13",
                          "company": {
                            "id": 1,
                            "name": "Natalie Norman"
                          },
                          "seller_identifier": "",
                          "store": {
                            "id": 1,
                            "name": "Wayne Lamb",
                            "code": "Wayne-Lamb"
                          },
                          "quantity": 5,
                          "price_marked": 1499,
                          "price_effective": 799,
                          "price_selling": 799,
                          "discount_meta": {},
                          "discount_applied": {}
                        },
                        {
                          "uid": "8",
                          "item_id": 4,
                          "identifier": {
                            "sku_code": "P10101101154425S"
                          },
                          "price": {
                            "effective": 399,
                            "marked": 399,
                            "currency": "INR"
                          },
                          "size": "13",
                          "company": {
                            "id": 1,
                            "name": "Natalie Norman"
                          },
                          "seller_identifier": "",
                          "store": {
                            "id": 1,
                            "name": "Wayne Lamb",
                            "code": "Wayne-Lamb"
                          },
                          "quantity": 5,
                          "price_marked": 1499,
                          "price_effective": 799,
                          "price_selling": 799,
                          "discount_meta": {},
                          "discount_applied": {}
                        },
                        {
                          "uid": "9",
                          "item_id": 5,
                          "identifier": {
                            "sku_code": "P10101101154425S"
                          },
                          "price": {
                            "effective": 399,
                            "marked": 399,
                            "currency": "INR"
                          },
                          "size": "13",
                          "company": {
                            "id": 1,
                            "name": "Natalie Norman"
                          },
                          "seller_identifier": "",
                          "store": {
                            "id": 1,
                            "name": "Wayne Lamb",
                            "code": "Wayne-Lamb"
                          },
                          "quantity": 5,
                          "price_marked": 1499,
                          "price_effective": 799,
                          "price_selling": 799,
                          "discount_meta": {},
                          "discount_applied": {}
                        },
                        {
                          "uid": "10",
                          "item_id": 5,
                          "identifier": {
                            "sku_code": "P10101101154425S"
                          },
                          "price": {
                            "effective": 399,
                            "marked": 399,
                            "currency": "INR"
                          },
                          "size": "13",
                          "company": {
                            "id": 1,
                            "name": "Natalie Norman"
                          },
                          "seller_identifier": "",
                          "store": {
                            "id": 1,
                            "name": "Wayne Lamb",
                            "code": "Wayne-Lamb"
                          },
                          "quantity": 5,
                          "price_marked": 1499,
                          "price_effective": 799,
                          "price_selling": 799,
                          "discount_meta": {},
                          "discount_applied": {}
                        },
                        {
                          "uid": "11",
                          "item_id": 6,
                          "identifier": {
                            "sku_code": "P10101101154425S"
                          },
                          "price": {
                            "effective": 399,
                            "marked": 399,
                            "currency": "INR"
                          },
                          "size": "13",
                          "company": {
                            "id": 1,
                            "name": "Natalie Norman"
                          },
                          "seller_identifier": "",
                          "store": {
                            "id": 1,
                            "name": "Wayne Lamb",
                            "code": "Wayne-Lamb"
                          },
                          "quantity": 5,
                          "price_marked": 1499,
                          "price_effective": 799,
                          "price_selling": 799,
                          "discount_meta": {},
                          "discount_applied": {}
                        },
                        {
                          "uid": "12",
                          "item_id": 6,
                          "identifier": {
                            "sku_code": "P10101101154425S"
                          },
                          "price": {
                            "effective": 399,
                            "marked": 399,
                            "currency": "INR"
                          },
                          "size": "13",
                          "company": {
                            "id": 1,
                            "name": "Natalie Norman"
                          },
                          "seller_identifier": "",
                          "store": {
                            "id": 1,
                            "name": "Wayne Lamb",
                            "code": "Wayne-Lamb"
                          },
                          "quantity": 5,
                          "price_marked": 1499,
                          "price_effective": 799,
                          "price_selling": 799,
                          "discount_meta": {},
                          "discount_applied": {}
                        },
                        {
                          "uid": "13",
                          "item_id": 7,
                          "identifier": {
                            "sku_code": "P10101101154425S"
                          },
                          "price": {
                            "effective": 399,
                            "marked": 399,
                            "currency": "INR"
                          },
                          "size": "13",
                          "company": {
                            "id": 1,
                            "name": "Natalie Norman"
                          },
                          "seller_identifier": "",
                          "store": {
                            "id": 1,
                            "name": "Wayne Lamb",
                            "code": "Wayne-Lamb"
                          },
                          "quantity": 5,
                          "price_marked": 1499,
                          "price_effective": 799,
                          "price_selling": 799,
                          "discount_meta": {},
                          "discount_applied": {}
                        },
                        {
                          "uid": "14",
                          "item_id": 7,
                          "identifier": {
                            "sku_code": "P10101101154425S"
                          },
                          "price": {
                            "effective": 399,
                            "marked": 399,
                            "currency": "INR"
                          },
                          "size": "13",
                          "company": {
                            "id": 1,
                            "name": "Natalie Norman"
                          },
                          "seller_identifier": "",
                          "store": {
                            "id": 1,
                            "name": "Wayne Lamb",
                            "code": "Wayne-Lamb"
                          },
                          "quantity": 5,
                          "price_marked": 1499,
                          "price_effective": 799,
                          "price_selling": 799,
                          "discount_meta": {},
                          "discount_applied": {}
                        },
                        {
                          "uid": "15",
                          "item_id": 8,
                          "identifier": {
                            "sku_code": "P10101101154425S"
                          },
                          "price": {
                            "effective": 399,
                            "marked": 399,
                            "currency": "INR"
                          },
                          "size": "13",
                          "company": {
                            "id": 1,
                            "name": "Natalie Norman"
                          },
                          "seller_identifier": "",
                          "store": {
                            "id": 1,
                            "name": "Wayne Lamb",
                            "code": "Wayne-Lamb"
                          },
                          "quantity": 5,
                          "price_marked": 1499,
                          "price_effective": 799,
                          "price_selling": 799,
                          "discount_meta": {},
                          "discount_applied": {}
                        },
                        {
                          "uid": "16",
                          "item_id": 8,
                          "identifier": {
                            "sku_code": "P10101101154425S"
                          },
                          "price": {
                            "effective": 399,
                            "marked": 399,
                            "currency": "INR"
                          },
                          "size": "13",
                          "company": {
                            "id": 1,
                            "name": "Natalie Norman"
                          },
                          "seller_identifier": "",
                          "store": {
                            "id": 1,
                            "name": "Wayne Lamb",
                            "code": "Wayne-Lamb"
                          },
                          "quantity": 5,
                          "price_marked": 1499,
                          "price_effective": 799,
                          "price_selling": 799,
                          "discount_meta": {},
                          "discount_applied": {}
                        },
                        {
                          "uid": "17",
                          "item_id": 9,
                          "identifier": {
                            "sku_code": "P10101101154425S"
                          },
                          "price": {
                            "effective": 399,
                            "marked": 399,
                            "currency": "INR"
                          },
                          "size": "13",
                          "company": {
                            "id": 1,
                            "name": "Natalie Norman"
                          },
                          "seller_identifier": "",
                          "store": {
                            "id": 1,
                            "name": "Wayne Lamb",
                            "code": "Wayne-Lamb"
                          },
                          "quantity": 5,
                          "price_marked": 1499,
                          "price_effective": 799,
                          "price_selling": 799,
                          "discount_meta": {},
                          "discount_applied": {}
                        },
                        {
                          "uid": "18",
                          "item_id": 9,
                          "identifier": {
                            "sku_code": "P10101101154425S"
                          },
                          "price": {
                            "effective": 399,
                            "marked": 399,
                            "currency": "INR"
                          },
                          "size": "13",
                          "company": {
                            "id": 1,
                            "name": "Natalie Norman"
                          },
                          "seller_identifier": "",
                          "store": {
                            "id": 1,
                            "name": "Wayne Lamb",
                            "code": "Wayne-Lamb"
                          },
                          "quantity": 5,
                          "price_marked": 1499,
                          "price_effective": 799,
                          "price_selling": 799,
                          "discount_meta": {},
                          "discount_applied": {}
                        },
                        {
                          "uid": "19",
                          "item_id": 10,
                          "identifier": {
                            "sku_code": "P10101101154425S"
                          },
                          "price": {
                            "effective": 399,
                            "marked": 399,
                            "currency": "INR"
                          },
                          "size": "13",
                          "company": {
                            "id": 1,
                            "name": "Natalie Norman"
                          },
                          "seller_identifier": "",
                          "store": {
                            "id": 1,
                            "name": "Wayne Lamb",
                            "code": "Wayne-Lamb"
                          },
                          "quantity": 5,
                          "price_marked": 1499,
                          "price_effective": 799,
                          "price_selling": 799,
                          "discount_meta": {},
                          "discount_applied": {}
                        },
                        {
                          "uid": "20",
                          "item_id": 10,
                          "identifier": {
                            "sku_code": "P10101101154425S"
                          },
                          "price": {
                            "effective": 399,
                            "marked": 399,
                            "currency": "INR"
                          },
                          "size": "13",
                          "company": {
                            "id": 1,
                            "name": "Natalie Norman"
                          },
                          "seller_identifier": "",
                          "store": {
                            "id": 1,
                            "name": "Wayne Lamb",
                            "code": "Wayne-Lamb"
                          },
                          "quantity": 5,
                          "price_marked": 1499,
                          "price_effective": 799,
                          "price_selling": 799,
                          "discount_meta": {},
                          "discount_applied": {}
                        },
                        {
                          "uid": "21",
                          "item_id": 11,
                          "identifier": {
                            "sku_code": "P10101101154425S"
                          },
                          "price": {
                            "effective": 399,
                            "marked": 399,
                            "currency": "INR"
                          },
                          "size": "13",
                          "company": {
                            "id": 1,
                            "name": "Natalie Norman"
                          },
                          "seller_identifier": "",
                          "store": {
                            "id": 1,
                            "name": "Wayne Lamb",
                            "code": "Wayne-Lamb"
                          },
                          "quantity": 5,
                          "price_marked": 1499,
                          "price_effective": 799,
                          "price_selling": 799,
                          "discount_meta": {},
                          "discount_applied": {}
                        },
                        {
                          "uid": "22",
                          "item_id": 11,
                          "identifier": {
                            "sku_code": "P10101101154425S"
                          },
                          "price": {
                            "effective": 399,
                            "marked": 399,
                            "currency": "INR"
                          },
                          "size": "13",
                          "company": {
                            "id": 1,
                            "name": "Natalie Norman"
                          },
                          "seller_identifier": "",
                          "store": {
                            "id": 1,
                            "name": "Wayne Lamb",
                            "code": "Wayne-Lamb"
                          },
                          "quantity": 5,
                          "price_marked": 1499,
                          "price_effective": 799,
                          "price_selling": 799,
                          "discount_meta": {},
                          "discount_applied": {}
                        },
                        {
                          "uid": "23",
                          "item_id": 12,
                          "identifier": {
                            "sku_code": "P10101101154425S"
                          },
                          "price": {
                            "effective": 399,
                            "marked": 399,
                            "currency": "INR"
                          },
                          "size": "13",
                          "company": {
                            "id": 1,
                            "name": "Natalie Norman"
                          },
                          "seller_identifier": "",
                          "store": {
                            "id": 1,
                            "name": "Wayne Lamb",
                            "code": "Wayne-Lamb"
                          },
                          "quantity": 5,
                          "price_marked": 1499,
                          "price_effective": 799,
                          "price_selling": 799,
                          "discount_meta": {},
                          "discount_applied": {}
                        },
                        {
                          "uid": "24",
                          "item_id": 12,
                          "identifier": {
                            "sku_code": "P10101101154425S"
                          },
                          "price": {
                            "effective": 399,
                            "marked": 399,
                            "currency": "INR"
                          },
                          "size": "13",
                          "company": {
                            "id": 1,
                            "name": "Natalie Norman"
                          },
                          "seller_identifier": "",
                          "store": {
                            "id": 1,
                            "name": "Wayne Lamb",
                            "code": "Wayne-Lamb"
                          },
                          "quantity": 5,
                          "price_marked": 1499,
                          "price_effective": 799,
                          "price_selling": 799,
                          "discount_meta": {},
                          "discount_applied": {}
                        },
                        {
                          "uid": "25",
                          "item_id": 13,
                          "identifier": {
                            "sku_code": "P10101101154425S"
                          },
                          "price": {
                            "effective": 399,
                            "marked": 399,
                            "currency": "INR"
                          },
                          "size": "13",
                          "company": {
                            "id": 1,
                            "name": "Natalie Norman"
                          },
                          "seller_identifier": "",
                          "store": {
                            "id": 1,
                            "name": "Wayne Lamb",
                            "code": "Wayne-Lamb"
                          },
                          "quantity": 5,
                          "price_marked": 1499,
                          "price_effective": 799,
                          "price_selling": 799,
                          "discount_meta": {},
                          "discount_applied": {}
                        },
                        {
                          "uid": "26",
                          "item_id": 13,
                          "identifier": {
                            "sku_code": "P10101101154425S"
                          },
                          "price": {
                            "effective": 399,
                            "marked": 399,
                            "currency": "INR"
                          },
                          "size": "13",
                          "company": {
                            "id": 1,
                            "name": "Natalie Norman"
                          },
                          "seller_identifier": "",
                          "store": {
                            "id": 1,
                            "name": "Wayne Lamb",
                            "code": "Wayne-Lamb"
                          },
                          "quantity": 5,
                          "price_marked": 1499,
                          "price_effective": 799,
                          "price_selling": 799,
                          "discount_meta": {},
                          "discount_applied": {}
                        },
                        {
                          "uid": "27",
                          "item_id": 14,
                          "identifier": {
                            "sku_code": "P10101101154425S"
                          },
                          "price": {
                            "effective": 399,
                            "marked": 399,
                            "currency": "INR"
                          },
                          "size": "13",
                          "company": {
                            "id": 1,
                            "name": "Natalie Norman"
                          },
                          "seller_identifier": "",
                          "store": {
                            "id": 1,
                            "name": "Wayne Lamb",
                            "code": "Wayne-Lamb"
                          },
                          "quantity": 5,
                          "price_marked": 1499,
                          "price_effective": 799,
                          "price_selling": 799,
                          "discount_meta": {},
                          "discount_applied": {}
                        },
                        {
                          "uid": "28",
                          "item_id": 14,
                          "identifier": {
                            "sku_code": "P10101101154425S"
                          },
                          "price": {
                            "effective": 399,
                            "marked": 399,
                            "currency": "INR"
                          },
                          "size": "13",
                          "company": {
                            "id": 1,
                            "name": "Natalie Norman"
                          },
                          "seller_identifier": "",
                          "store": {
                            "id": 1,
                            "name": "Wayne Lamb",
                            "code": "Wayne-Lamb"
                          },
                          "quantity": 5,
                          "price_marked": 1499,
                          "price_effective": 799,
                          "price_selling": 799,
                          "discount_meta": {},
                          "discount_applied": {}
                        },
                        {
                          "uid": "29",
                          "item_id": 15,
                          "identifier": {
                            "sku_code": "P10101101154425S"
                          },
                          "price": {
                            "effective": 399,
                            "marked": 399,
                            "currency": "INR"
                          },
                          "size": "13",
                          "company": {
                            "id": 1,
                            "name": "Natalie Norman"
                          },
                          "seller_identifier": "",
                          "store": {
                            "id": 1,
                            "name": "Wayne Lamb",
                            "code": "Wayne-Lamb"
                          },
                          "quantity": 5,
                          "price_marked": 1499,
                          "price_effective": 799,
                          "price_selling": 799,
                          "discount_meta": {},
                          "discount_applied": {}
                        },
                        {
                          "uid": "30",
                          "item_id": 15,
                          "identifier": {
                            "sku_code": "P10101101154425S"
                          },
                          "price": {
                            "effective": 399,
                            "marked": 399,
                            "currency": "INR"
                          },
                          "size": "13",
                          "company": {
                            "id": 1,
                            "name": "Natalie Norman"
                          },
                          "seller_identifier": "",
                          "store": {
                            "id": 1,
                            "name": "Wayne Lamb",
                            "code": "Wayne-Lamb"
                          },
                          "quantity": 5,
                          "price_marked": 1499,
                          "price_effective": 799,
                          "price_selling": 799,
                          "discount_meta": {},
                          "discount_applied": {}
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bad request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "examples": {
                  "failure": {
                    "value": {
                      "code": 404,
                      "message": "Invalid Request",
                      "errors": {
                        "message": "Invalid Request"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "x-groups": [
          "Product"
        ]
      }
    },
    "/service/application/catalog/v1.0/products/stock-status/poll": {
      "get": {
        "summary": "getProductStockForTimeByIds | Fetches future stock data for products.",
        "description": "Get the available stock levels for all products associated with a particular sales channel at a specified future time.",
        "tags": [
          "Catalog"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "timestamp",
            "description": "Timestamp in UTC format (2020-07-23T10:27:50Z).",
            "schema": {
              "type": "string"
            },
            "required": true,
            "examples": {
              "success": {
                "value": "2023-07-31T08:56:10.192+0000"
              },
              "failure": {
                "value": 32
              }
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of items to retrieve in each page.",
            "schema": {
              "type": "integer",
              "default": 12
            },
            "required": false,
            "examples": {
              "success": {
                "value": 12
              },
              "failure": {
                "value": 1
              }
            }
          },
          {
            "in": "query",
            "name": "page_id",
            "description": "Page ID to retrieve next set of results.",
            "schema": {
              "type": "string"
            },
            "required": false,
            "examples": {
              "success": {
                "value": "636a4c5c295d937d233826a5"
              },
              "failure": {
                "value": "636a4c5c295d937d233826a5"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns the status of the product stock.",
            "content": {
              "application/json": {
                "examples": {
                  "success": {
                    "value": {
                      "items": [
                        {
                          "uid": "1",
                          "brand": {
                            "name": "Guerra-Chang",
                            "id": 1
                          },
                          "item_id": 1,
                          "identifier": {
                            "sku_code": "P10101101154425S"
                          },
                          "seller_identifier": "2022-11-03T15:48:25.340Z",
                          "price": {
                            "effective": 319,
                            "marked": 399,
                            "currency": "INR"
                          },
                          "size": "13",
                          "company": {
                            "id": 1,
                            "name": "Jordan Wagner"
                          },
                          "store": {
                            "id": 1,
                            "name": "Zachary Waller",
                            "code": "Zachary-Waller"
                          },
                          "quantity": 5,
                          "price_marked": 399,
                          "price_effective": 319,
                          "price_selling": 399,
                          "discount_meta": {},
                          "discount_applied": {
                            "_id": "65cc93264f63e8da2ee70487",
                            "job_id": "648009ff1c6f01961b0bbbeb",
                            "discount": [
                              {
                                "value": 20,
                                "min_items": 1
                              }
                            ],
                            "item_id": 1,
                            "seller_identifier": "2022-11-03T15:48:25.340Z",
                            "discount_type": "percentage",
                            "company_id": 1,
                            "store_ids": [
                              9690,
                              1
                            ],
                            "brand_ids": [
                              1
                            ],
                            "abandoned": false,
                            "app_ids": [
                              "000000000000000000000001"
                            ],
                            "zone_ids": [],
                            "created_on": "2024-02-14T10:17:09.135000",
                            "modified_on": "2024-02-14T10:17:09.135000",
                            "discount_meta": {
                              "start": "2024-02-13T10:17:09.136000Z",
                              "end": "2024-02-15T10:17:09.136000Z",
                              "timer": true,
                              "start_timer_in_minutes": 62
                            },
                            "discount_job": {
                              "_id": "648009ff1c6f01961b0bbbeb",
                              "name": "test api",
                              "job_type": "app|brand|inventory",
                              "discount_type": "percentage",
                              "discount_level": "application",
                              "company_id": 1,
                              "brand_ids": [],
                              "store_ids": [],
                              "app_ids": [
                                "000000000000000000000001"
                              ],
                              "extension_ids": [],
                              "zone_ids": [],
                              "validity": {
                                "start": "2024-02-13T10:17:09.136000",
                                "end": "2024-02-15T10:17:09.136000"
                              },
                              "created_on": "2024-02-14T10:17:09.136000",
                              "modified_on": "2024-02-14T10:17:09.136000",
                              "is_active": true,
                              "value": "",
                              "file_path": ""
                            }
                          }
                        }
                      ],
                      "page": {
                        "type": "cursor",
                        "next_id": "65cc93264f63e8da2ee7040f",
                        "has_previous": true,
                        "has_next": true,
                        "item_total": 12
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ProductStockPolling"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "examples": {
                  "failure": {
                    "value": {
                      "code": 400,
                      "message": "Invalid Request",
                      "errors": {
                        "message": "Product with given slug does not exist"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "x-groups": [
          "Product"
        ]
      }
    },
    "/service/application/catalog/v1.0/products": {
      "get": {
        "summary": "getProducts | Lists all products.",
        "description": "List all products available in the catalog. It supports filtering based on product name, brand, department, category, collection, and more, while also offering sorting options based on factors like price, ratings, discounts, and other relevant criteria.",
        "tags": [
          "Catalog"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "description": "The search query for entering partial or full name of product, brand, category, or collection.",
            "schema": {
              "type": "string"
            },
            "required": false,
            "examples": {
              "success": {
                "value": "interactive"
              },
              "failure": {
                "value": "testing-products"
              }
            }
          },
          {
            "in": "query",
            "name": "f",
            "description": "The search filter parameters. Filter parameters will be passed in f parameter as shown in the example below. Double Pipe (||) denotes the OR condition, whereas Triple-colon (:::) indicates a new filter parameter applied as an AND condition.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "brand:Guerra:::l3_categories:Carter"
              },
              "failure": {
                "value": "brand:test:::l3_categories:test-categories"
              }
            },
            "required": false
          },
          {
            "in": "query",
            "name": "filters",
            "description": "True for fetching all filter parameters and False for disabling the filter parameters.",
            "schema": {
              "type": "boolean",
              "default": true
            },
            "required": false,
            "examples": {
              "success": {
                "value": true
              },
              "failure": {
                "value": false
              }
            }
          },
          {
            "in": "query",
            "name": "sort_on",
            "description": "The order in which the list of products should be sorted, e.g. popularity, price, latest and discount, in either ascending or descending order. See the supported values below.",
            "schema": {
              "type": "string",
              "enum": [
                "latest",
                "popular",
                "price_asc",
                "price_dsc",
                "discount_asc",
                "discount_dsc"
              ]
            },
            "required": false,
            "examples": {
              "success": {
                "value": "popular"
              },
              "failure": {
                "value": "popular"
              }
            }
          },
          {
            "in": "query",
            "name": "page_id",
            "description": "Page ID to retrieve next set of results.",
            "schema": {
              "type": "string"
            },
            "required": false,
            "examples": {
              "success": {
                "value": "636a4c5c295d937d233826a5"
              },
              "failure": {
                "value": "636a4c5c295d937d233826a5"
              }
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of items to retrieve in each page.",
            "schema": {
              "type": "integer",
              "default": 12
            },
            "required": false,
            "examples": {
              "success": {
                "value": 12
              },
              "failure": {
                "value": 1
              }
            }
          },
          {
            "in": "query",
            "name": "page_no",
            "description": "The page number to navigate through the given set of results.",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "required": false,
            "examples": {
              "success": {
                "value": 1
              },
              "failure": {
                "value": 1
              }
            }
          },
          {
            "in": "query",
            "name": "page_type",
            "description": "Available pagination types are cursor or number.",
            "schema": {
              "type": "string",
              "enum": [
                "cursor",
                "number"
              ],
              "default": "cursor"
            },
            "required": false,
            "examples": {
              "success": {
                "value": "cursor"
              },
              "failure": {
                "value": "cursor"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a paginated list of products..",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListingResponseSchema"
                },
                "examples": {
                  "success": {
                    "value": {
                      "filters": [
                        {
                          "key": {
                            "display": "Department",
                            "name": "department",
                            "kind": "multivalued",
                            "logo": "https://hdn-1.fynd.com/products/pictures/attribute/logo/original/FiQP7BeJbz-Department.png"
                          },
                          "values": [
                            {
                              "display": "Fashion",
                              "count": 2496,
                              "is_selected": false,
                              "value": "fashion",
                              "logo": "https://hdn-1.addsale.com/x0/department/pictures/square-logo/original/ziRuAA0EX-https/hdn-1.fynd.com/department/pictures/square-logo/original/jSt0jjI7D-https/hdn-1.fynd.com/department/pictures/square-logo/original/6ouiCBSSn-https/hdn-1.fynd.com/department/pictures/square-logo/original/o2Rti5if7-.jpeg.jpeg.jpeg.jpeg"
                            },
                            {
                              "display": "Mary-Vargas",
                              "count": 15,
                              "is_selected": false,
                              "value": "Mary-Vargas"
                            },
                            {
                              "display": "Michael-Davis",
                              "count": 15,
                              "is_selected": false,
                              "value": "Michael-Davis"
                            },
                            {
                              "display": "Toys & games",
                              "count": 2,
                              "is_selected": false,
                              "value": "toys",
                              "logo": "https://hdn-1.addsale.com/x0/department/pictures/square-logo/original/WU_YDGrIe-https/hdn-1.fynd.com/media/category_tab_icons/department/Toys.png.png"
                            }
                          ]
                        },
                        {
                          "key": {
                            "display": "Category",
                            "name": "category",
                            "kind": "multivalued",
                            "logo": "https://hdn-1.fynd.com/products/pictures/attribute/logo/original/YuQYSFD6Tu-Category.png"
                          },
                          "values": [
                            {
                              "display": "running-shoes",
                              "count": 2495,
                              "is_selected": false,
                              "value": "running-shoes"
                            },
                            {
                              "display": "Mr.-Robert-Wilson",
                              "count": 15,
                              "is_selected": false,
                              "value": "Mr.-Robert-Wilson"
                            },
                            {
                              "display": "action-figures",
                              "count": 2,
                              "is_selected": false,
                              "value": "action-figures"
                            },
                            {
                              "display": "hats",
                              "count": 1,
                              "is_selected": false,
                              "value": "hats"
                            }
                          ]
                        },
                        {
                          "key": {
                            "display": "Size",
                            "name": "sizes",
                            "kind": "multivalued",
                            "logo": "https://hdn-1.fynd.com/products/pictures/attribute/logo/original/M45tOYu45x-Sizes.png"
                          },
                          "values": [
                            {
                              "display": "11",
                              "count": 1492,
                              "is_selected": false,
                              "value": "11"
                            },
                            {
                              "display": "8",
                              "count": 1003,
                              "is_selected": false,
                              "value": "8"
                            },
                            {
                              "display": "13",
                              "count": 15,
                              "is_selected": false,
                              "value": "13"
                            },
                            {
                              "display": "FREE",
                              "count": 2,
                              "is_selected": false,
                              "value": "FREE"
                            },
                            {
                              "display": "OS",
                              "count": 2,
                              "is_selected": false,
                              "value": "OS"
                            },
                            {
                              "display": "R4",
                              "count": 2,
                              "is_selected": false,
                              "value": "R4"
                            },
                            {
                              "display": "10",
                              "count": 1,
                              "is_selected": false,
                              "value": "10"
                            },
                            {
                              "display": "9",
                              "count": 1,
                              "is_selected": false,
                              "value": "9"
                            }
                          ]
                        },
                        {
                          "key": {
                            "display": "Brand",
                            "name": "brand",
                            "kind": "multivalued",
                            "logo": "https://hdn-1.fynd.com/products/pictures/attribute/logo/original/m4SDdD279_-Min-price-effective.png"
                          },
                          "values": [
                            {
                              "display": "load-brand-1",
                              "count": 1492,
                              "is_selected": false,
                              "value": "load-brand-1"
                            },
                            {
                              "display": "caneworks",
                              "count": 1002,
                              "is_selected": false,
                              "value": "caneworks"
                            },
                            {
                              "display": "Mann-Morris",
                              "count": 15,
                              "is_selected": false,
                              "value": "Mann-Morris"
                            },
                            {
                              "display": "test",
                              "count": 2,
                              "is_selected": false,
                              "value": "test"
                            },
                            {
                              "display": "nexus",
                              "count": 1,
                              "is_selected": false,
                              "value": "nexus"
                            },
                            {
                              "display": "nike",
                              "count": 1,
                              "is_selected": false,
                              "value": "nike"
                            }
                          ]
                        },
                        {
                          "key": {
                            "display": "Image",
                            "name": "image_nature",
                            "kind": "multivalued",
                            "logo": "https://hdn-1.fynd.com/products/pictures/attribute/logo/original/JcGqgsW9FR-image-Nature.png"
                          },
                          "values": [
                            {
                              "display": "No Image",
                              "count": 2479,
                              "is_selected": false,
                              "value": "default"
                            },
                            {
                              "display": "Good Quality",
                              "count": 34,
                              "is_selected": false,
                              "value": "standard"
                            }
                          ]
                        },
                        {
                          "key": {
                            "display": "Size Depth",
                            "name": "size_depth",
                            "kind": "range",
                            "logo": "https://hdn-1.fynd.com/products/pictures/attribute/logo/original/D6W3aAamqz-Size-Depth.png"
                          },
                          "values": [
                            {
                              "count": 2513,
                              "min": 1,
                              "max": 4,
                              "is_selected": false,
                              "selected_min": 1,
                              "selected_max": 4,
                              "display_format": "{} - {}",
                              "query_format": "[{} TO {}]",
                              "display": "1 - 4"
                            }
                          ]
                        },
                        {
                          "key": {
                            "display": "Price",
                            "name": "min_price_effective",
                            "kind": "range",
                            "logo": "https://hdn-1.fynd.com/products/pictures/attribute/logo/original/m4SDdD279_-Min-price-effective.png"
                          },
                          "values": [
                            {
                              "count": 2513,
                              "min": 9,
                              "max": 6789,
                              "is_selected": false,
                              "selected_min": 9,
                              "selected_max": 6788,
                              "display_format": "{} to {}",
                              "currency_code": "INR",
                              "currency_symbol": "₹",
                              "query_format": "[{},INR TO {},INR]",
                              "display": "₹9.51 to ₹6788.44"
                            }
                          ]
                        },
                        {
                          "key": {
                            "display": "Discount",
                            "name": "discount",
                            "kind": "range",
                            "logo": "https://hdn-1.fynd.com/products/pictures/attribute/logo/original/qsYhcYuntC-Platform-Discount.png"
                          },
                          "values": [
                            {
                              "count": 2513,
                              "min": 0,
                              "max": 83,
                              "is_selected": false,
                              "selected_min": 0,
                              "selected_max": 83,
                              "display_format": "{}% - {}%",
                              "query_format": "[{} TO {}]",
                              "display": "0% - 83%"
                            }
                          ]
                        }
                      ],
                      "items": [
                        {
                          "type": "product",
                          "attributes": {
                            "primary_color_hex": null,
                            "filtercollection": "test",
                            "gender": "men",
                            "marketer-address": "Andheri",
                            "marketer-name": "Puma",
                            "primary_color": null,
                            "primary_material": "Cotton"
                          },
                          "categories": [
                            {
                              "uid": 1,
                              "name": "shoes-1048",
                              "logo": {
                                "type": "image",
                                "url": "https://hdn-1.fynd.com/products/pictures/attribute/logo/original/QEvUfhsfyg-Latest-Products.png"
                              }
                            }
                          ],
                          "_custom_meta": [],
                          "sellable": true,
                          "name": "Shoe 671",
                          "slug": "shoes-671-gs7hedxv_w01",
                          "moq": {
                            "maximum": 5,
                            "minimum": 1,
                            "increment_unit": 1
                          },
                          "uid": 7501985,
                          "item_code": "SHOE-671",
                          "item_type": "standard",
                          "sizes": [
                            "L"
                          ],
                          "brand": {
                            "type": "brand",
                            "name": "CaneWorks",
                            "logo": {},
                            "action": {
                              "page": {
                                "type": "products",
                                "query": {
                                  "brand": [
                                    "caneworks"
                                  ]
                                }
                              },
                              "type": "page"
                            },
                            "_custom_json": {}
                          },
                          "action": {
                            "page": {
                              "type": "product",
                              "params": {
                                "slug": [
                                  "shoes-671-gs7hedxv_w01"
                                ]
                              }
                            },
                            "type": "page"
                          },
                          "medias": [
                            {
                              "type": "image",
                              "url": "https://hdn-1.fynd.com/media/fynd_store_items/l2_category/original/2830_c5bb5fc02f414307a828c4c56483c30a.jpg"
                            }
                          ],
                          "discount": "50% OFF",
                          "net_quantity": {},
                          "price": {
                            "marked": {
                              "min": 2000,
                              "max": 9000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "effective": {
                              "min": 1000,
                              "max": 6000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            }
                          },
                          "is_tryout": false,
                          "seo": {
                            "title": "shoes",
                            "description": ""
                          },
                          "short_description": "",
                          "modified_on": "2025-02-20T11:46:50.968000Z",
                          "channel": "000000000000000000000001",
                          "_custom_json": {},
                          "country_of_origin": "India",
                          "variants": [
                            {
                              "display_type": "image",
                              "header": "Additional Colors",
                              "items": [
                                {
                                  "action": {
                                    "page": {
                                      "type": "product",
                                      "params": {
                                        "slug": [
                                          "shoes-487-ciaqajcbvhxi"
                                        ]
                                      }
                                    },
                                    "type": "page"
                                  },
                                  "uid": 7501992,
                                  "slug": "shoes-487-ciaqajcbvhxi",
                                  "color": "4A90E2",
                                  "medias": [
                                    {
                                      "type": "image",
                                      "url": "https://hdn-1.fynd.com/media/fynd_store_items/l2_category/original/2830_c5bb5fc02f414307a828c4c56483c30a.jpg"
                                    }
                                  ],
                                  "name": "Shoe 487",
                                  "is_available": false,
                                  "_custom_json": {}
                                }
                              ],
                              "key": "color",
                              "total": 2
                            },
                            {
                              "display_type": "text",
                              "header": "RAM",
                              "items": [
                                {
                                  "action": {
                                    "page": {
                                      "type": "product",
                                      "params": {
                                        "slug": [
                                          "shoes-1255-7_dtnnaaqay"
                                        ]
                                      }
                                    },
                                    "type": "page"
                                  },
                                  "uid": 7503196,
                                  "slug": "shoes-1255-7_dtnnaaqay",
                                  "value": "",
                                  "medias": [
                                    {
                                      "url": "https://hdn-1.addsale.com/x0/products/pictures/item/free/original/aM_8QuyQH-HP6YCHrbk7-484A0178.jpg",
                                      "type": "image"
                                    }
                                  ],
                                  "name": "test1",
                                  "is_available": false,
                                  "_custom_json": {
                                    "k a": [
                                      "https://hdn-1.addsale.com/x0/misc/general/free/original/rnq4jjauz-Screenshot-2022-03-29-at-7.55.43-PM.png"
                                    ]
                                  },
                                  "color_name": "Red"
                                },
                                {
                                  "action": {
                                    "page": {
                                      "type": "product",
                                      "params": {
                                        "slug": [
                                          "shoes-413-yeskjstfl6va"
                                        ]
                                      }
                                    },
                                    "type": "page"
                                  },
                                  "uid": 7502115,
                                  "slug": "shoes-413-yeskjstfl6va",
                                  "value": "",
                                  "medias": [
                                    {
                                      "url": "https://hdn-1.addsale.com/x0/products/pictures/item/free/original/uCrIUYgNs-Neemans-FieryRed-ReLive-Knits-Jogger-FrontRightLogo-Comfortable-Shoes_1024x.jpg",
                                      "type": "image"
                                    },
                                    {
                                      "url": "https://hdn-1.addsale.com/x0/products/pictures/item/free/original/J87k8IiMW-nike-free-og-royal-blue-running-imported-sport-shoes-500x500.jpg",
                                      "type": "image"
                                    },
                                    {
                                      "url": "https://hdn-1.addsale.com/x0/products/pictures/item/free/original/UHKXhrzCK-5_1_72f25caf-a641-402e-8f3a-c56604b7f602_765x.jpg",
                                      "type": "image"
                                    },
                                    {
                                      "url": "https://hdn-1.addsale.com/x0/products/pictures/item/free/original/aUnsm8Z_T-sneaker-index-1587142381.jpg",
                                      "type": "image"
                                    }
                                  ],
                                  "name": "Shoe 413 TEST2",
                                  "is_available": false,
                                  "_custom_json": {}
                                }
                              ],
                              "key": "ram",
                              "total": 2
                            }
                          ]
                        },
                        {
                          "type": "product",
                          "attributes": {
                            "primary_color_hex": null,
                            "filtercollection": "test",
                            "gender": "men",
                            "marketer-address": "Andheri",
                            "marketer-name": "Puma",
                            "primary_color": null,
                            "primary_material": "Cotton"
                          },
                          "categories": [],
                          "_custom_meta": [],
                          "sellable": true,
                          "name": "Shoe 671",
                          "slug": "shoes-671-gs7hedxv_w01",
                          "uid": 7501985,
                          "item_code": "SHOE-671",
                          "item_type": "standard",
                          "brand": {
                            "type": "brand",
                            "name": "CaneWorks",
                            "logo": {},
                            "action": {
                              "page": {
                                "type": "products",
                                "query": {
                                  "brand": [
                                    "caneworks"
                                  ]
                                }
                              },
                              "type": "page"
                            },
                            "_custom_json": {}
                          },
                          "action": {
                            "page": {
                              "type": "product",
                              "params": {
                                "slug": [
                                  "shoes-671-gs7hedxv_w01"
                                ]
                              }
                            },
                            "type": "page"
                          },
                          "medias": [
                            {
                              "type": "image",
                              "url": "https://hdn-1.fynd.com/media/fynd_store_items/l2_category/original/2830_c5bb5fc02f414307a828c4c56483c30a.jpg"
                            }
                          ],
                          "discount": "50% OFF",
                          "price": {
                            "marked": {
                              "min": 2000,
                              "max": 9000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "effective": {
                              "min": 1000,
                              "max": 6000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            }
                          },
                          "is_tryout": false,
                          "channel": "000000000000000000000001",
                          "_custom_json": {},
                          "country_of_origin": "India",
                          "variants": [
                            {
                              "display_type": "image",
                              "header": "Additional Colors",
                              "items": [
                                {
                                  "action": {
                                    "page": {
                                      "type": "product",
                                      "params": {
                                        "slug": [
                                          "shoes-487-ciaqajcbvhxi"
                                        ]
                                      }
                                    },
                                    "type": "page"
                                  },
                                  "uid": 7501992,
                                  "slug": "shoes-487-ciaqajcbvhxi",
                                  "color": "4A90E2",
                                  "medias": [
                                    {
                                      "type": "image",
                                      "url": "https://hdn-1.fynd.com/media/fynd_store_items/l2_category/original/2830_c5bb5fc02f414307a828c4c56483c30a.jpg"
                                    }
                                  ],
                                  "name": "Shoe 487",
                                  "is_available": false,
                                  "_custom_json": {}
                                }
                              ],
                              "key": "color",
                              "total": 2
                            },
                            {
                              "display_type": "text",
                              "header": "RAM",
                              "items": [
                                {
                                  "action": {
                                    "page": {
                                      "type": "product",
                                      "params": {
                                        "slug": [
                                          "shoes-1255-7_dtnnaaqay"
                                        ]
                                      }
                                    },
                                    "type": "page"
                                  },
                                  "uid": 7503196,
                                  "slug": "shoes-1255-7_dtnnaaqay",
                                  "value": "",
                                  "medias": [
                                    {
                                      "url": "https://hdn-1.addsale.com/x0/products/pictures/item/free/original/aM_8QuyQH-HP6YCHrbk7-484A0178.jpg",
                                      "type": "image"
                                    }
                                  ],
                                  "name": "test1",
                                  "is_available": false,
                                  "_custom_json": {
                                    "k a": [
                                      "https://hdn-1.addsale.com/x0/misc/general/free/original/rnq4jjauz-Screenshot-2022-03-29-at-7.55.43-PM.png"
                                    ]
                                  },
                                  "color_name": "Red"
                                },
                                {
                                  "action": {
                                    "page": {
                                      "type": "product",
                                      "params": {
                                        "slug": [
                                          "shoes-413-yeskjstfl6va"
                                        ]
                                      }
                                    },
                                    "type": "page"
                                  },
                                  "uid": 7502115,
                                  "slug": "shoes-413-yeskjstfl6va",
                                  "value": "",
                                  "medias": [
                                    {
                                      "url": "https://hdn-1.addsale.com/x0/products/pictures/item/free/original/uCrIUYgNs-Neemans-FieryRed-ReLive-Knits-Jogger-FrontRightLogo-Comfortable-Shoes_1024x.jpg",
                                      "type": "image"
                                    },
                                    {
                                      "url": "https://hdn-1.addsale.com/x0/products/pictures/item/free/original/J87k8IiMW-nike-free-og-royal-blue-running-imported-sport-shoes-500x500.jpg",
                                      "type": "image"
                                    },
                                    {
                                      "url": "https://hdn-1.addsale.com/x0/products/pictures/item/free/original/UHKXhrzCK-5_1_72f25caf-a641-402e-8f3a-c56604b7f602_765x.jpg",
                                      "type": "image"
                                    },
                                    {
                                      "url": "https://hdn-1.addsale.com/x0/products/pictures/item/free/original/aUnsm8Z_T-sneaker-index-1587142381.jpg",
                                      "type": "image"
                                    }
                                  ],
                                  "name": "Shoe 413 TEST2",
                                  "is_available": false,
                                  "_custom_json": {}
                                }
                              ],
                              "key": "ram",
                              "total": 2
                            }
                          ]
                        },
                        {
                          "type": "product",
                          "attributes": {
                            "primary_color_hex": null,
                            "gender": "men",
                            "marketer-address": "Load Galli, Mumbai",
                            "marketer-name": "Load Wala",
                            "primary_color": null,
                            "primary_material": "Fabric"
                          },
                          "categories": [],
                          "_custom_meta": [],
                          "sellable": true,
                          "name": "Load Shoes 100931",
                          "slug": "load-shoes-100931-qnuugutshoec",
                          "uid": 7522863,
                          "item_code": "LS100931",
                          "item_type": "standard",
                          "brand": {
                            "type": "brand",
                            "name": "Load Brand 1",
                            "logo": {},
                            "action": {
                              "page": {
                                "type": "products",
                                "query": {
                                  "brand": [
                                    "load-brand-1"
                                  ]
                                }
                              },
                              "type": "page"
                            },
                            "_custom_json": {}
                          },
                          "action": {
                            "page": {
                              "type": "product",
                              "params": {
                                "slug": [
                                  "load-shoes-100931-qnuugutshoec"
                                ]
                              }
                            },
                            "type": "page"
                          },
                          "medias": [
                            {
                              "type": "image",
                              "url": "https://hdn-1.fynd.com/media/fynd_store_items/l2_category/original/2830_c5bb5fc02f414307a828c4c56483c30a.jpg"
                            }
                          ],
                          "discount": "6% OFF",
                          "price": {
                            "marked": {
                              "min": 5000,
                              "max": 5000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "effective": {
                              "min": 4699,
                              "max": 4699,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            }
                          },
                          "is_tryout": false,
                          "channel": "000000000000000000000001",
                          "_custom_json": {},
                          "country_of_origin": "India",
                          "variants": []
                        },
                        {
                          "type": "product",
                          "attributes": {
                            "primary_color_hex": null,
                            "gender": "men",
                            "marketer-address": "Load Galli, Mumbai",
                            "marketer-name": "Load Wala",
                            "primary_color": null,
                            "primary_material": "Fabric"
                          },
                          "categories": [],
                          "_custom_meta": [],
                          "sellable": true,
                          "name": "Load Shoes 101490",
                          "slug": "load-shoes-101490-0cgg_86ozi6s",
                          "uid": 7523770,
                          "item_code": "LS101490",
                          "item_type": "standard",
                          "brand": {
                            "type": "brand",
                            "name": "Load Brand 1",
                            "logo": {},
                            "action": {
                              "page": {
                                "type": "products",
                                "query": {
                                  "brand": [
                                    "load-brand-1"
                                  ]
                                }
                              },
                              "type": "page"
                            },
                            "_custom_json": {}
                          },
                          "action": {
                            "page": {
                              "type": "product",
                              "params": {
                                "slug": [
                                  "load-shoes-101490-0cgg_86ozi6s"
                                ]
                              }
                            },
                            "type": "page"
                          },
                          "medias": [
                            {
                              "type": "image",
                              "url": "https://hdn-1.fynd.com/media/fynd_store_items/l2_category/original/2830_c5bb5fc02f414307a828c4c56483c30a.jpg"
                            }
                          ],
                          "discount": "6% OFF",
                          "price": {
                            "marked": {
                              "min": 5000,
                              "max": 5000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "effective": {
                              "min": 4699,
                              "max": 4699,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            }
                          },
                          "is_tryout": false,
                          "channel": "000000000000000000000001",
                          "_custom_json": {},
                          "country_of_origin": "India",
                          "variants": []
                        },
                        {
                          "type": "product",
                          "attributes": {
                            "primary_color_hex": null,
                            "gender": "men",
                            "marketer-address": "Andheri",
                            "marketer-name": "Puma",
                            "primary_color": null,
                            "primary_material": "Cotton"
                          },
                          "categories": [],
                          "_custom_meta": [],
                          "sellable": true,
                          "name": "Shoe 487",
                          "slug": "shoes-487-ciaqajcbvhxi",
                          "uid": 7501992,
                          "item_code": "SHOE-487",
                          "item_type": "standard",
                          "brand": {
                            "type": "brand",
                            "name": "CaneWorks",
                            "logo": {},
                            "action": {
                              "page": {
                                "type": "products",
                                "query": {
                                  "brand": [
                                    "caneworks"
                                  ]
                                }
                              },
                              "type": "page"
                            },
                            "_custom_json": {}
                          },
                          "action": {
                            "page": {
                              "type": "product",
                              "params": {
                                "slug": [
                                  "shoes-487-ciaqajcbvhxi"
                                ]
                              }
                            },
                            "type": "page"
                          },
                          "medias": [
                            {
                              "type": "image",
                              "url": "https://hdn-1.fynd.com/media/fynd_store_items/l2_category/original/2830_c5bb5fc02f414307a828c4c56483c30a.jpg"
                            }
                          ],
                          "discount": "50% OFF",
                          "price": {
                            "marked": {
                              "min": 2000,
                              "max": 2000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "effective": {
                              "min": 1000,
                              "max": 1000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            }
                          },
                          "is_tryout": false,
                          "channel": "000000000000000000000001",
                          "_custom_json": {},
                          "country_of_origin": "India",
                          "variants": [
                            {
                              "display_type": "image",
                              "header": "Additional Colors",
                              "items": [
                                {
                                  "action": {
                                    "page": {
                                      "type": "product",
                                      "params": {
                                        "slug": [
                                          "shoes-671-gs7hedxv_w01"
                                        ]
                                      }
                                    },
                                    "type": "page"
                                  },
                                  "uid": 7501985,
                                  "slug": "shoes-671-gs7hedxv_w01",
                                  "color": "4A90E2",
                                  "medias": [
                                    {
                                      "type": "image",
                                      "url": "https://hdn-1.fynd.com/media/fynd_store_items/l2_category/original/2830_c5bb5fc02f414307a828c4c56483c30a.jpg"
                                    }
                                  ],
                                  "name": "Shoe 671",
                                  "is_available": false,
                                  "_custom_json": {}
                                }
                              ],
                              "key": "color",
                              "total": 2
                            }
                          ]
                        },
                        {
                          "type": "product",
                          "attributes": {
                            "primary_color_hex": null,
                            "gender": "men",
                            "marketer-address": "Andheri",
                            "marketer-name": "Puma",
                            "primary_color": null,
                            "primary_material": "Cotton"
                          },
                          "categories": [],
                          "_custom_meta": [],
                          "sellable": true,
                          "name": "Shoe 487",
                          "slug": "shoes-487-ciaqajcbvhxi",
                          "uid": 7501992,
                          "item_code": "SHOE-487",
                          "item_type": "standard",
                          "brand": {
                            "type": "brand",
                            "name": "CaneWorks",
                            "logo": {},
                            "action": {
                              "page": {
                                "type": "products",
                                "query": {
                                  "brand": [
                                    "caneworks"
                                  ]
                                }
                              },
                              "type": "page"
                            },
                            "_custom_json": {}
                          },
                          "action": {
                            "page": {
                              "type": "product",
                              "params": {
                                "slug": [
                                  "shoes-487-ciaqajcbvhxi"
                                ]
                              }
                            },
                            "type": "page"
                          },
                          "medias": [
                            {
                              "type": "image",
                              "url": "https://hdn-1.fynd.com/media/fynd_store_items/l2_category/original/2830_c5bb5fc02f414307a828c4c56483c30a.jpg"
                            }
                          ],
                          "discount": "50% OFF",
                          "price": {
                            "marked": {
                              "min": 2000,
                              "max": 2000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "effective": {
                              "min": 1000,
                              "max": 1000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            }
                          },
                          "is_tryout": false,
                          "channel": "000000000000000000000001",
                          "_custom_json": {},
                          "country_of_origin": "India",
                          "variants": [
                            {
                              "display_type": "image",
                              "header": "Additional Colors",
                              "items": [
                                {
                                  "action": {
                                    "page": {
                                      "type": "product",
                                      "params": {
                                        "slug": [
                                          "shoes-671-gs7hedxv_w01"
                                        ]
                                      }
                                    },
                                    "type": "page"
                                  },
                                  "uid": 7501985,
                                  "slug": "shoes-671-gs7hedxv_w01",
                                  "color": "4A90E2",
                                  "medias": [
                                    {
                                      "type": "image",
                                      "url": "https://hdn-1.fynd.com/media/fynd_store_items/l2_category/original/2830_c5bb5fc02f414307a828c4c56483c30a.jpg"
                                    }
                                  ],
                                  "name": "Shoe 671",
                                  "is_available": false,
                                  "_custom_json": {}
                                }
                              ],
                              "key": "color",
                              "total": 2
                            }
                          ]
                        },
                        {
                          "type": "product",
                          "attributes": {
                            "primary_color_hex": null,
                            "gender": "men",
                            "marketer-address": "Load Galli, Mumbai",
                            "marketer-name": "Load Wala",
                            "primary_color": null,
                            "primary_material": "Fabric"
                          },
                          "categories": [],
                          "_custom_meta": [],
                          "sellable": true,
                          "name": "Load Shoes 100241",
                          "slug": "load-shoes-100241-9ee51v8qxpz",
                          "uid": 7523366,
                          "item_code": "LS100241",
                          "item_type": "standard",
                          "brand": {
                            "type": "brand",
                            "name": "Load Brand 1",
                            "logo": {},
                            "action": {
                              "page": {
                                "type": "products",
                                "query": {
                                  "brand": [
                                    "load-brand-1"
                                  ]
                                }
                              },
                              "type": "page"
                            },
                            "_custom_json": {}
                          },
                          "action": {
                            "page": {
                              "type": "product",
                              "params": {
                                "slug": [
                                  "load-shoes-100241-9ee51v8qxpz"
                                ]
                              }
                            },
                            "type": "page"
                          },
                          "medias": [
                            {
                              "type": "image",
                              "url": "https://hdn-1.fynd.com/media/fynd_store_items/l2_category/original/2830_c5bb5fc02f414307a828c4c56483c30a.jpg"
                            }
                          ],
                          "discount": "6% OFF",
                          "price": {
                            "marked": {
                              "min": 5000,
                              "max": 5000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "effective": {
                              "min": 4699,
                              "max": 4699,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            }
                          },
                          "is_tryout": false,
                          "channel": "000000000000000000000001",
                          "_custom_json": {},
                          "country_of_origin": "India",
                          "variants": []
                        },
                        {
                          "type": "product",
                          "attributes": {
                            "primary_color_hex": null,
                            "gender": "men",
                            "marketer-address": "Load Galli, Mumbai",
                            "marketer-name": "Load Wala",
                            "primary_color": null,
                            "primary_material": "Fabric"
                          },
                          "categories": [],
                          "_custom_meta": [],
                          "sellable": true,
                          "name": "Load Shoes 100407",
                          "slug": "load-shoes-100407-jcubbw5xz3wa",
                          "uid": 7523709,
                          "item_code": "LS100407",
                          "item_type": "standard",
                          "brand": {
                            "type": "brand",
                            "name": "Load Brand 1",
                            "logo": {},
                            "action": {
                              "page": {
                                "type": "products",
                                "query": {
                                  "brand": [
                                    "load-brand-1"
                                  ]
                                }
                              },
                              "type": "page"
                            },
                            "_custom_json": {}
                          },
                          "action": {
                            "page": {
                              "type": "product",
                              "params": {
                                "slug": [
                                  "load-shoes-100407-jcubbw5xz3wa"
                                ]
                              }
                            },
                            "type": "page"
                          },
                          "medias": [
                            {
                              "type": "image",
                              "url": "https://hdn-1.fynd.com/media/fynd_store_items/l2_category/original/2830_c5bb5fc02f414307a828c4c56483c30a.jpg"
                            }
                          ],
                          "discount": "6% OFF",
                          "price": {
                            "marked": {
                              "min": 5000,
                              "max": 5000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "effective": {
                              "min": 4699,
                              "max": 4699,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            }
                          },
                          "is_tryout": false,
                          "channel": "000000000000000000000001",
                          "_custom_json": {},
                          "country_of_origin": "India",
                          "variants": []
                        },
                        {
                          "type": "product",
                          "attributes": {
                            "primary_color_hex": null,
                            "gender": "men",
                            "marketer-address": "Load Galli, Mumbai",
                            "marketer-name": "Load Wala",
                            "primary_color": null,
                            "primary_material": "Fabric"
                          },
                          "categories": [],
                          "_custom_meta": [],
                          "sellable": true,
                          "name": "Load Shoes 100763",
                          "slug": "load-shoes-100763-gse_mewuxfxv",
                          "uid": 7523185,
                          "item_code": "LS100763",
                          "item_type": "standard",
                          "brand": {
                            "type": "brand",
                            "name": "Load Brand 1",
                            "logo": {},
                            "action": {
                              "page": {
                                "type": "products",
                                "query": {
                                  "brand": [
                                    "load-brand-1"
                                  ]
                                }
                              },
                              "type": "page"
                            },
                            "_custom_json": {}
                          },
                          "action": {
                            "page": {
                              "type": "product",
                              "params": {
                                "slug": [
                                  "load-shoes-100763-gse_mewuxfxv"
                                ]
                              }
                            },
                            "type": "page"
                          },
                          "medias": [
                            {
                              "type": "image",
                              "url": "https://hdn-1.fynd.com/media/fynd_store_items/l2_category/original/2830_c5bb5fc02f414307a828c4c56483c30a.jpg"
                            }
                          ],
                          "discount": "6% OFF",
                          "price": {
                            "marked": {
                              "min": 5000,
                              "max": 5000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "effective": {
                              "min": 4699,
                              "max": 4699,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            }
                          },
                          "is_tryout": false,
                          "channel": "000000000000000000000001",
                          "_custom_json": {},
                          "country_of_origin": "India",
                          "variants": []
                        },
                        {
                          "type": "product",
                          "attributes": {
                            "primary_color_hex": null,
                            "gender": "men",
                            "marketer-address": "Andheri",
                            "marketer-name": "Puma",
                            "primary_color": null,
                            "primary_material": "Cotton"
                          },
                          "categories": [],
                          "_custom_meta": [],
                          "sellable": true,
                          "name": "Shoe 539",
                          "slug": "shoes-539-dkkfadu66m1l",
                          "uid": 7501643,
                          "item_code": "SHOE-539",
                          "item_type": "standard",
                          "brand": {
                            "type": "brand",
                            "name": "CaneWorks",
                            "logo": {},
                            "action": {
                              "page": {
                                "type": "products",
                                "query": {
                                  "brand": [
                                    "caneworks"
                                  ]
                                }
                              },
                              "type": "page"
                            },
                            "_custom_json": {}
                          },
                          "action": {
                            "page": {
                              "type": "product",
                              "params": {
                                "slug": [
                                  "shoes-539-dkkfadu66m1l"
                                ]
                              }
                            },
                            "type": "page"
                          },
                          "medias": [
                            {
                              "type": "image",
                              "url": "https://hdn-1.fynd.com/media/fynd_store_items/l2_category/original/2830_c5bb5fc02f414307a828c4c56483c30a.jpg"
                            }
                          ],
                          "discount": "50% OFF",
                          "price": {
                            "marked": {
                              "min": 2000,
                              "max": 2000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "effective": {
                              "min": 1000,
                              "max": 1000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            }
                          },
                          "is_tryout": false,
                          "channel": "000000000000000000000001",
                          "_custom_json": {},
                          "country_of_origin": "India",
                          "variants": []
                        },
                        {
                          "type": "product",
                          "attributes": {
                            "primary_color_hex": null,
                            "gender": "men",
                            "marketer-address": "Andheri",
                            "marketer-name": "Puma",
                            "primary_color": null,
                            "primary_material": "Cotton"
                          },
                          "categories": [],
                          "_custom_meta": [],
                          "sellable": true,
                          "name": "Shoe 348",
                          "slug": "shoes-348-dcnhciie0v3",
                          "uid": 7502012,
                          "item_code": "SHOE-348",
                          "item_type": "standard",
                          "brand": {
                            "type": "brand",
                            "name": "CaneWorks",
                            "logo": {},
                            "action": {
                              "page": {
                                "type": "products",
                                "query": {
                                  "brand": [
                                    "caneworks"
                                  ]
                                }
                              },
                              "type": "page"
                            },
                            "_custom_json": {}
                          },
                          "action": {
                            "page": {
                              "type": "product",
                              "params": {
                                "slug": [
                                  "shoes-348-dcnhciie0v3"
                                ]
                              }
                            },
                            "type": "page"
                          },
                          "medias": [
                            {
                              "type": "image",
                              "url": "https://hdn-1.fynd.com/media/fynd_store_items/l2_category/original/2830_c5bb5fc02f414307a828c4c56483c30a.jpg"
                            }
                          ],
                          "discount": "50% OFF",
                          "price": {
                            "marked": {
                              "min": 2000,
                              "max": 2000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "effective": {
                              "min": 1000,
                              "max": 1000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            }
                          },
                          "is_tryout": false,
                          "channel": "000000000000000000000001",
                          "_custom_json": {},
                          "country_of_origin": "India",
                          "variants": []
                        },
                        {
                          "type": "product",
                          "attributes": {
                            "primary_color_hex": null,
                            "gender": "men",
                            "marketer-address": "Andheri",
                            "marketer-name": "Puma",
                            "primary_color": null,
                            "primary_material": "Cotton"
                          },
                          "categories": [],
                          "_custom_meta": [],
                          "sellable": true,
                          "name": "Shoe 1048",
                          "slug": "shoes-1048-piqk6-rwmts5",
                          "uid": 7502307,
                          "item_code": "SHOE-1048",
                          "item_type": "standard",
                          "brand": {
                            "type": "brand",
                            "name": "CaneWorks",
                            "logo": {},
                            "action": {
                              "page": {
                                "type": "products",
                                "query": {
                                  "brand": [
                                    "caneworks"
                                  ]
                                }
                              },
                              "type": "page"
                            },
                            "_custom_json": {}
                          },
                          "action": {
                            "page": {
                              "type": "product",
                              "params": {
                                "slug": [
                                  "shoes-1048-piqk6-rwmts5"
                                ]
                              }
                            },
                            "type": "page"
                          },
                          "medias": [
                            {
                              "type": "image",
                              "url": "https://hdn-1.fynd.com/media/fynd_store_items/l2_category/original/2830_c5bb5fc02f414307a828c4c56483c30a.jpg"
                            }
                          ],
                          "discount": "50% OFF",
                          "price": {
                            "marked": {
                              "min": 2000,
                              "max": 2000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "effective": {
                              "min": 1000,
                              "max": 1000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            }
                          },
                          "is_tryout": false,
                          "channel": "000000000000000000000001",
                          "_custom_json": {},
                          "country_of_origin": "India",
                          "variants": []
                        }
                      ],
                      "sort_on": [
                        {
                          "display": "Latest Products",
                          "name": "Latest Products",
                          "logo": "https://hdn-1.fynd.com/products/pictures/attribute/logo/original/QEvUfhsfyg-Latest-Products.png",
                          "value": "latest",
                          "is_selected": false
                        },
                        {
                          "display": "Popularity",
                          "name": "Popularity",
                          "logo": "https://hdn-1.fynd.com/products/pictures/attribute/logo/original/iG82Qjay9X-Popularity.png",
                          "value": "popular",
                          "is_selected": true
                        },
                        {
                          "display": "Price Low to High",
                          "name": "Price Low to High",
                          "logo": "https://hdn-1.fynd.com/products/pictures/attribute/logo/original/dLUtvNwoQt-Price-High-to-Low.png",
                          "value": "price_asc",
                          "is_selected": false
                        },
                        {
                          "display": "Price High to Low",
                          "name": "Price High to Low",
                          "logo": "https://hdn-1.fynd.com/products/pictures/attribute/logo/original/dLUtvNwoQt-Price-High-to-Low.png",
                          "value": "price_dsc",
                          "is_selected": false
                        },
                        {
                          "display": "Discount Low to High",
                          "name": "Discount Low to High",
                          "logo": "https://hdn-1.fynd.com/products/pictures/attribute/logo/original/9VdjDVc_aR-Discount-Low-to-High.png",
                          "value": "discount_asc",
                          "is_selected": false
                        },
                        {
                          "display": "Discount High to Low",
                          "name": "Discount High to Low",
                          "logo": "https://hdn-1.fynd.com/products/pictures/attribute/logo/original/9VdjDVc_aR-Discount-Low-to-High.png",
                          "value": "discount_dsc",
                          "is_selected": false
                        },
                        {
                          "display": "Rating",
                          "name": "Rating",
                          "logo": "https://hdn-1.fynd.com/products/pictures/attribute/logo/original/IyaIm4EZXI-Rating.png",
                          "value": "rating_dsc",
                          "is_selected": false
                        },
                        {
                          "display": "Size Depth (High to Low)",
                          "name": "Size Depth (High to Low)",
                          "logo": "https://hdn-1.fynd.com/products/pictures/attribute/logo/original/hyWWrNJ1A--Size-Depth.png",
                          "value": "depth_desc",
                          "is_selected": false
                        }
                      ],
                      "page": {
                        "type": "cursor",
                        "next_id": "AoIIRHjAAD8HMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAxIV9hbGxfITc1MDIzMDc=",
                        "has_previous": false,
                        "has_next": true,
                        "item_total": 2513
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Product"
        ]
      }
    },
    "/service/application/catalog/v1.0/brands": {
      "get": {
        "summary": "getBrands | Fetches all available brands.",
        "description": "Get a list of all the available brands. Filtering can be applied to the department.",
        "tags": [
          "Catalog"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "department",
            "description": "The name of the department. Use this parameter to filter products by a particular department. See the list of available departments below. Also, you can get available departments from the endpoint /service/application/catalog/v1.0/departments/.",
            "schema": {
              "type": "string"
            },
            "required": false,
            "examples": {
              "success": {
                "value": "fashion"
              },
              "failure": {
                "value": "not-fashion"
              }
            }
          },
          {
            "in": "query",
            "name": "page_no",
            "description": "The page number to navigate through the given set of results.",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "required": false,
            "examples": {
              "success": {
                "value": 1
              },
              "failure": {
                "value": ""
              }
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of items to retrieve in each page.",
            "schema": {
              "type": "integer",
              "default": 12
            },
            "required": false,
            "examples": {
              "success": {
                "value": 12
              },
              "failure": {
                "value": ""
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a paginated list of brands.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrandListingResponseSchema"
                },
                "examples": {
                  "success": {
                    "value": {
                      "items": [
                        {
                          "uid": 1,
                          "name": "Barry, Jennings and Larson",
                          "slug": "Hess-Inc",
                          "action": {
                            "page": {
                              "type": "products",
                              "query": {
                                "brand": [
                                  "Hess-Inc"
                                ],
                                "department": [
                                  "fashion"
                                ]
                              }
                            },
                            "type": "page"
                          },
                          "seo": {
                            "title": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                            "description": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                            "breadcrumbs": [
                              {
                                "url": "https://xx.com/products/?brand=a-one-garbage",
                                "action": {
                                  "page": {
                                    "params": {},
                                    "query": {
                                      "brand": [
                                        "a-one-garbage"
                                      ]
                                    },
                                    "type": "products",
                                    "url": "/products/?brand=a-one-garbage"
                                  },
                                  "type": "page"
                                }
                              },
                              {
                                "url": "https://xx.com/collection/crafts-of-india",
                                "action": {
                                  "page": {
                                    "params": {
                                      "slug": [
                                        "crafts-of-india"
                                      ]
                                    },
                                    "query": {},
                                    "type": "collection",
                                    "url": "/collection/crafts-of-india"
                                  },
                                  "type": "page"
                                }
                              },
                              {
                                "url": "https://xx.com/products/?department=1accessories-old",
                                "action": {
                                  "page": {
                                    "params": {},
                                    "query": {
                                      "department": [
                                        "1accessories-old"
                                      ]
                                    },
                                    "type": "products",
                                    "url": "/products/?department=1accessories-old"
                                  },
                                  "type": "page"
                                }
                              }
                            ],
                            "sitemap": {
                              "priority": 0.5,
                              "frequency": "never"
                            }
                          },
                          "logo": {
                            "type": "image",
                            "url": "https://hdn-1.fynd.com/media/logo/brand/original/12391_0d956c6c71a4427895c15e44cba82f88.jpg"
                          },
                          "banners": {
                            "portrait": {
                              "type": "image",
                              "url": "https://hdn-1.fynd.com/media/banner_portrait/brand/original/12537_9cdfc6835e814b0986ee1643d38cf6cd.png"
                            }
                          },
                          "description": "Brand Description"
                        }
                      ],
                      "page": {
                        "current": 1,
                        "total": 1,
                        "has_previous": false,
                        "has_next": false,
                        "item_total": 1,
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                },
                "examples": {
                  "failure": {
                    "value": {
                      "code": 400,
                      "message": "Product with given slug does not exist",
                      "errors": {
                        "message": "Product with given slug does not exist"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Brand"
        ]
      }
    },
    "/service/application/catalog/v1.0/brands/{slug}": {
      "get": {
        "summary": "getBrandDetailBySlug | Retrieves detailed brand info by slug.",
        "description": "Get metadata of a brand such as name, information, logo, banner, etc.",
        "tags": [
          "Catalog"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "description": "A short, human-readable, URL-friendly identifier of a brand. You can get slug value from the endpoint /service/application/catalog/v1.0/brands/.",
            "schema": {
              "type": "string"
            },
            "required": true,
            "examples": {
              "success": {
                "value": "Guerra-Chang"
              },
              "failure": {
                "value": "abc"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a metadata object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrandDetailResponseSchema"
                },
                "examples": {
                  "success": {
                    "value": {
                      "logo": {
                        "type": "image",
                        "url": "https://hdn-1.fynd.com/media/logo/brand/original/12391_0d956c6c71a4427895c15e44cba82f88.jpg"
                      },
                      "banners": {
                        "portrait": {
                          "type": "image",
                          "url": "https://hdn-1.fynd.com/media/banner_portrait/brand/original/12537_9cdfc6835e814b0986ee1643d38cf6cd.png"
                        },
                        "landscape": {
                          "type": "image",
                          "url": "https://hdn-1.fynd.com/media/banner/brand/original/12536_e1a5cdcefc7540e68cedd8c2b0673179.png"
                        }
                      },
                      "uid": 1,
                      "name": "Hess Inc",
                      "slug": "warpgame",
                      "description": "Brand description",
                      "_custom_json": {},
                      "_app": {}
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                },
                "examples": {
                  "failure": {
                    "value": {
                      "code": 400,
                      "message": "Invalid Request",
                      "errors": {
                        "message": "Invalid Request"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Brand"
        ]
      }
    },
    "/service/application/catalog/v1.0/categories": {
      "get": {
        "summary": "getCategories | Lists all product categories.",
        "description": "List all available product categories. Also, users can filter the categories by department.",
        "tags": [
          "Catalog"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "department",
            "description": "The name of the department. Use this parameter to filter products by a particular department. See the list of available departments below. Also, you can get available departments from the endpoint /service/application/catalog/v1.0/departments/.",
            "schema": {
              "type": "string",
              "enum": [
                "baby-care-kids-essentials",
                "beauty-personal-care",
                "home-living",
                "fashion",
                "others",
                "toys"
              ]
            },
            "required": false,
            "examples": {
              "success": {
                "value": "fashion"
              },
              "failure": {
                "value": "baby-care-kids-essentials"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a list of categories.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryListingResponseSchema"
                },
                "examples": {
                  "success": {
                    "value": {
                      "departments": [
                        {
                          "slug": "Cody-Doyle",
                          "uid": 1
                        }
                      ],
                      "data": [
                        {
                          "department": "Cody-Doyle",
                          "items": [
                            {
                              "name": "Janet Parker",
                              "banners": {
                                "landscape": {
                                  "type": "image",
                                  "url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/banner_portrait/category/resize-w:130,h:200/12064_e69e1d8b5e934d3488f0dc8663d8a158.jpg"
                                },
                                "portrait": {
                                  "type": "image",
                                  "url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/banner_portrait/category/resize-w:130,h:200/12064_e69e1d8b5e934d3488f0dc8663d8a158.jpg"
                                }
                              },
                              "uid": 1,
                              "slug": "Janet-Parker",
                              "_custom_json": {},
                              "action": {
                                "type": "page",
                                "page": {
                                  "type": "category",
                                  "query": {
                                    "category": [
                                      "Janet-Parker"
                                    ],
                                    "department": [
                                      "Jaime-Chambers"
                                    ]
                                  }
                                }
                              },
                              "childs": [
                                {
                                  "name": "Hannah Lawson",
                                  "banners": {
                                    "landscape": {
                                      "type": "image",
                                      "url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/banner_portrait/category/resize-w:130,h:200/12064_e69e1d8b5e934d3488f0dc8663d8a158.jpg"
                                    },
                                    "portrait": {
                                      "type": "image",
                                      "url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/banner_portrait/category/resize-w:130,h:200/12064_e69e1d8b5e934d3488f0dc8663d8a158.jpg"
                                    }
                                  },
                                  "uid": 2,
                                  "slug": "Hannah-Lawson",
                                  "_custom_json": {},
                                  "action": {
                                    "type": "page",
                                    "page": {
                                      "type": "category",
                                      "query": {
                                        "category": [
                                          "Hannah-Lawson"
                                        ],
                                        "department": [
                                          "Jaime-Chambers"
                                        ]
                                      }
                                    }
                                  },
                                  "childs": [
                                    {
                                      "name": "Logan Black",
                                      "banners": {
                                        "landscape": {
                                          "type": "image",
                                          "url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/banner_portrait/category/resize-w:130,h:200/12064_e69e1d8b5e934d3488f0dc8663d8a158.jpg"
                                        },
                                        "portrait": {
                                          "type": "image",
                                          "url": "https://d2zv4gzhlr4ud6.cloudfront.net/media/banner_portrait/category/resize-w:130,h:200/12064_e69e1d8b5e934d3488f0dc8663d8a158.jpg"
                                        }
                                      },
                                      "uid": 3,
                                      "slug": "Logan-Black",
                                      "_custom_json": {},
                                      "action": {
                                        "type": "page",
                                        "page": {
                                          "type": "category",
                                          "query": {
                                            "category": [
                                              "Logan-Black"
                                            ],
                                            "department": [
                                              "Jaime-Chambers"
                                            ]
                                          }
                                        }
                                      },
                                      "childs": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bad request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                },
                "examples": {
                  "failure": {
                    "value": {
                      "code": 404,
                      "message": "Product with given slug does not exist",
                      "errors": {
                        "message": "Product with given slug does not exist"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Category"
        ]
      }
    },
    "/service/application/catalog/v1.0/categories/{slug}": {
      "get": {
        "summary": "getCategoryDetailBySlug | Retrieves category details by slug.",
        "description": "Get detailed information about a specific product category using its slug and get metadata of a category such as name, information, logo, banner, etc.",
        "tags": [
          "Catalog"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "description": "A short, human-readable, URL-friendly identifier of a brand. You can get slug value from the endpoint /service/application/catalog/v1.0/brands/.",
            "schema": {
              "type": "string"
            },
            "required": true,
            "examples": {
              "success": {
                "value": "Paul-Walker"
              },
              "failure": {
                "value": "test"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns metadata of a category.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryMetaResponseSchema"
                },
                "examples": {
                  "success": {
                    "value": {
                      "logo": {
                        "type": "image",
                        "url": "http://cdn4.gofynd.com/media/banner/category/original/12063_a5bb91bd5cb44c3c9db98c2a0e6b3d99.jpg"
                      },
                      "uid": 1,
                      "name": "Kyle Cabrera",
                      "banners": {
                        "portrait": {
                          "type": "image",
                          "url": "http://cdn4.gofynd.com/media/banner_portrait/category/original/12064_e69e1d8b5e934d3488f0dc8663d8a158.jpg"
                        },
                        "landscape": {
                          "type": "image",
                          "url": "http://cdn4.gofynd.com/media/banner/category/original/12063_a5bb91bd5cb44c3c9db98c2a0e6b3d99.jpg"
                        }
                      },
                      "_custom_json": {},
                      "_app": {}
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Category"
        ]
      }
    },
    "/service/application/catalog/v1.0/home/listing": {
      "get": {
        "summary": "getHomeProducts | Fetches homepage-featured products.",
        "description": "List all the products associated with a brand, collection or category in a random order.",
        "tags": [
          "Catalog"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "sort_on",
            "description": "The order in which the list of products should be sorted, e.g. popularity, price, latest and discount, in either ascending or descending order.",
            "schema": {
              "type": "string",
              "enum": [
                "latest",
                "popular",
                "price_asc",
                "price_dsc",
                "discount_asc",
                "discount_dsc"
              ]
            },
            "required": false,
            "examples": {
              "success": {
                "value": "latest"
              },
              "failure": {
                "value": "latest"
              }
            }
          },
          {
            "in": "query",
            "name": "page_id",
            "description": "Page ID to retrieve next set of results.",
            "schema": {
              "type": "string",
              "default": "1"
            },
            "required": false,
            "examples": {
              "success": {
                "value": "636a4c5c295d937d233826a5"
              },
              "failure": {
                "value": "636a4c5c295d937d233826a5"
              }
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of items to retrieve in each page.",
            "schema": {
              "type": "integer",
              "default": 12
            },
            "required": false,
            "examples": {
              "success": {
                "value": 12
              },
              "failure": {
                "value": 12
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a paginated list of products.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HomeListingResponseSchema"
                },
                "examples": {
                  "success": {
                    "value": {
                      "items": [
                        {
                          "type": "product",
                          "attributes": {
                            "primary_color_hex": null,
                            "filtercollection": "test",
                            "gender": "men",
                            "marketer-address": "Andheri",
                            "marketer-name": "Puma",
                            "primary_color": null,
                            "primary_material": "Cotton"
                          },
                          "categories": [
                            {
                              "uid": 3,
                              "name": "Amy Kim DDS",
                              "logo": {
                                "type": "image",
                                "url": "https://hdn-1.fynd.com/media/banner_portrait/brand/original/540_ecba3a1af141467da8abc20500f983db.jpg"
                              },
                              "action": {
                                "page": {
                                  "type": "category",
                                  "query": {
                                    "category": [
                                      "Amy-Kim-DDS"
                                    ]
                                  }
                                },
                                "type": "page"
                              },
                              "_custom_json": {}
                            }
                          ],
                          "_custom_meta": [],
                          "sellable": true,
                          "name": "Shoe 671",
                          "sizes": [
                            "L",
                            "M"
                          ],
                          "slug": "shoes-671-gs7hedxv_w01",
                          "tags": [],
                          "uid": 7501985,
                          "item_code": "SHOE-671",
                          "item_type": "standard",
                          "brand": {
                            "type": "brand",
                            "name": "CaneWorks",
                            "logo": {
                              "type": "image",
                              "url": "https://cdn.fynd.com/v2/falling-surf-7c8bb8/fyprod/wrkr/brands/pictures/square-logo/original/Cm9YMQJQD-Logo.jpeg"
                            },
                            "action": {
                              "page": {
                                "type": "products",
                                "query": {
                                  "brand": [
                                    "caneworks"
                                  ]
                                }
                              },
                              "type": "page"
                            },
                            "_custom_json": {}
                          },
                          "action": {
                            "page": {
                              "type": "product",
                              "params": {
                                "slug": [
                                  "shoes-671-gs7hedxv_w01"
                                ]
                              }
                            },
                            "type": "page"
                          },
                          "medias": [
                            {
                              "type": "image",
                              "url": "https://hdn-1.fynd.com/media/fynd_store_items/l2_category/original/2830_c5bb5fc02f414307a828c4c56483c30a.jpg"
                            }
                          ],
                          "identifiers": [
                            "89123Y",
                            "67831T"
                          ],
                          "discount": "50% OFF",
                          "price": {
                            "marked": {
                              "min": 2000,
                              "max": 9000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "effective": {
                              "min": 1000,
                              "max": 6000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            }
                          },
                          "is_tryout": false,
                          "channel": "000000000000000000000001",
                          "_custom_json": {},
                          "moq": {
                            "increment_unit": 1,
                            "minimum": 1
                          },
                          "net_quantity": {},
                          "seo": {
                            "title": "shoe",
                            "description": ""
                          },
                          "short_description": "",
                          "country_of_origin": "India",
                          "variants": [
                            {
                              "display_type": "image",
                              "header": "Additional Colors",
                              "items": [
                                {
                                  "action": {
                                    "page": {
                                      "type": "product",
                                      "params": {
                                        "slug": [
                                          "shoes-487-ciaqajcbvhxi"
                                        ]
                                      }
                                    },
                                    "type": "page"
                                  },
                                  "uid": 7501992,
                                  "slug": "shoes-487-ciaqajcbvhxi",
                                  "color": "4A90E2",
                                  "medias": [
                                    {
                                      "type": "image",
                                      "url": "https://hdn-1.fynd.com/media/fynd_store_items/l2_category/original/2830_c5bb5fc02f414307a828c4c56483c30a.jpg"
                                    }
                                  ],
                                  "name": "Shoe 487",
                                  "is_available": false,
                                  "_custom_json": {}
                                }
                              ],
                              "key": "color",
                              "total": 2
                            },
                            {
                              "display_type": "text",
                              "header": "RAM",
                              "items": [
                                {
                                  "action": {
                                    "page": {
                                      "type": "product",
                                      "params": {
                                        "slug": [
                                          "shoes-1255-7_dtnnaaqay"
                                        ]
                                      }
                                    },
                                    "type": "page"
                                  },
                                  "uid": 7503196,
                                  "slug": "shoes-1255-7_dtnnaaqay",
                                  "value": "",
                                  "medias": [
                                    {
                                      "url": "https://hdn-1.addsale.com/x0/products/pictures/item/free/original/aM_8QuyQH-HP6YCHrbk7-484A0178.jpg",
                                      "type": "image"
                                    }
                                  ],
                                  "name": "test1",
                                  "is_available": false,
                                  "_custom_json": {
                                    "k a": [
                                      "https://hdn-1.addsale.com/x0/misc/general/free/original/rnq4jjauz-Screenshot-2022-03-29-at-7.55.43-PM.png"
                                    ]
                                  },
                                  "color_name": "Red"
                                },
                                {
                                  "action": {
                                    "page": {
                                      "type": "product",
                                      "params": {
                                        "slug": [
                                          "shoes-413-yeskjstfl6va"
                                        ]
                                      }
                                    },
                                    "type": "page"
                                  },
                                  "uid": 7502115,
                                  "slug": "shoes-413-yeskjstfl6va",
                                  "value": "",
                                  "medias": [
                                    {
                                      "url": "https://hdn-1.addsale.com/x0/products/pictures/item/free/original/uCrIUYgNs-Neemans-FieryRed-ReLive-Knits-Jogger-FrontRightLogo-Comfortable-Shoes_1024x.jpg",
                                      "type": "image"
                                    },
                                    {
                                      "url": "https://hdn-1.addsale.com/x0/products/pictures/item/free/original/J87k8IiMW-nike-free-og-royal-blue-running-imported-sport-shoes-500x500.jpg",
                                      "type": "image"
                                    },
                                    {
                                      "url": "https://hdn-1.addsale.com/x0/products/pictures/item/free/original/UHKXhrzCK-5_1_72f25caf-a641-402e-8f3a-c56604b7f602_765x.jpg",
                                      "type": "image"
                                    },
                                    {
                                      "url": "https://hdn-1.addsale.com/x0/products/pictures/item/free/original/aUnsm8Z_T-sneaker-index-1587142381.jpg",
                                      "type": "image"
                                    }
                                  ],
                                  "name": "Shoe 413 TEST2",
                                  "is_available": false,
                                  "_custom_json": {}
                                }
                              ],
                              "key": "ram",
                              "total": 2
                            }
                          ]
                        },
                        {
                          "type": "product",
                          "attributes": {
                            "primary_color_hex": null,
                            "filtercollection": "test",
                            "gender": "men",
                            "marketer-address": "Andheri",
                            "marketer-name": "Puma",
                            "primary_color": null,
                            "primary_material": "Cotton"
                          },
                          "categories": [],
                          "_custom_meta": [],
                          "sellable": true,
                          "name": "Shoe 671",
                          "slug": "shoes-671-gs7hedxv_w01",
                          "uid": 7501985,
                          "item_code": "SHOE-671",
                          "item_type": "standard",
                          "brand": {
                            "type": "brand",
                            "name": "CaneWorks",
                            "logo": {},
                            "action": {
                              "page": {
                                "type": "products",
                                "query": {
                                  "brand": [
                                    "caneworks"
                                  ]
                                }
                              },
                              "type": "page"
                            },
                            "_custom_json": {}
                          },
                          "action": {
                            "page": {
                              "type": "product",
                              "params": {
                                "slug": [
                                  "shoes-671-gs7hedxv_w01"
                                ]
                              }
                            },
                            "type": "page"
                          },
                          "medias": [
                            {
                              "type": "image",
                              "url": "https://hdn-1.fynd.com/media/fynd_store_items/l2_category/original/2830_c5bb5fc02f414307a828c4c56483c30a.jpg"
                            }
                          ],
                          "discount": "50% OFF",
                          "price": {
                            "marked": {
                              "min": 2000,
                              "max": 9000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "effective": {
                              "min": 1000,
                              "max": 6000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            }
                          },
                          "is_tryout": false,
                          "channel": "000000000000000000000001",
                          "_custom_json": {},
                          "country_of_origin": "India",
                          "variants": [
                            {
                              "display_type": "image",
                              "header": "Additional Colors",
                              "items": [
                                {
                                  "action": {
                                    "page": {
                                      "type": "product",
                                      "params": {
                                        "slug": [
                                          "shoes-487-ciaqajcbvhxi"
                                        ]
                                      }
                                    },
                                    "type": "page"
                                  },
                                  "uid": 7501992,
                                  "slug": "shoes-487-ciaqajcbvhxi",
                                  "color": "4A90E2",
                                  "medias": [
                                    {
                                      "type": "image",
                                      "url": "https://hdn-1.fynd.com/media/fynd_store_items/l2_category/original/2830_c5bb5fc02f414307a828c4c56483c30a.jpg"
                                    }
                                  ],
                                  "name": "Shoe 487",
                                  "is_available": false,
                                  "_custom_json": {}
                                }
                              ],
                              "key": "color",
                              "total": 2
                            },
                            {
                              "display_type": "text",
                              "header": "RAM",
                              "items": [
                                {
                                  "action": {
                                    "page": {
                                      "type": "product",
                                      "params": {
                                        "slug": [
                                          "shoes-1255-7_dtnnaaqay"
                                        ]
                                      }
                                    },
                                    "type": "page"
                                  },
                                  "uid": 7503196,
                                  "slug": "shoes-1255-7_dtnnaaqay",
                                  "value": "",
                                  "medias": [
                                    {
                                      "url": "https://hdn-1.addsale.com/x0/products/pictures/item/free/original/aM_8QuyQH-HP6YCHrbk7-484A0178.jpg",
                                      "type": "image"
                                    }
                                  ],
                                  "name": "test1",
                                  "is_available": false,
                                  "_custom_json": {
                                    "k a": [
                                      "https://hdn-1.addsale.com/x0/misc/general/free/original/rnq4jjauz-Screenshot-2022-03-29-at-7.55.43-PM.png"
                                    ]
                                  },
                                  "color_name": "Red"
                                },
                                {
                                  "action": {
                                    "page": {
                                      "type": "product",
                                      "params": {
                                        "slug": [
                                          "shoes-413-yeskjstfl6va"
                                        ]
                                      }
                                    },
                                    "type": "page"
                                  },
                                  "uid": 7502115,
                                  "slug": "shoes-413-yeskjstfl6va",
                                  "value": "",
                                  "medias": [
                                    {
                                      "url": "https://hdn-1.addsale.com/x0/products/pictures/item/free/original/uCrIUYgNs-Neemans-FieryRed-ReLive-Knits-Jogger-FrontRightLogo-Comfortable-Shoes_1024x.jpg",
                                      "type": "image"
                                    },
                                    {
                                      "url": "https://hdn-1.addsale.com/x0/products/pictures/item/free/original/J87k8IiMW-nike-free-og-royal-blue-running-imported-sport-shoes-500x500.jpg",
                                      "type": "image"
                                    },
                                    {
                                      "url": "https://hdn-1.addsale.com/x0/products/pictures/item/free/original/UHKXhrzCK-5_1_72f25caf-a641-402e-8f3a-c56604b7f602_765x.jpg",
                                      "type": "image"
                                    },
                                    {
                                      "url": "https://hdn-1.addsale.com/x0/products/pictures/item/free/original/aUnsm8Z_T-sneaker-index-1587142381.jpg",
                                      "type": "image"
                                    }
                                  ],
                                  "name": "Shoe 413 TEST2",
                                  "is_available": false,
                                  "_custom_json": {}
                                }
                              ],
                              "key": "ram",
                              "total": 2
                            }
                          ]
                        },
                        {
                          "type": "product",
                          "attributes": {
                            "primary_color_hex": null,
                            "gender": "men",
                            "marketer-address": "Load Galli, Mumbai",
                            "marketer-name": "Load Wala",
                            "primary_color": null,
                            "primary_material": "Fabric"
                          },
                          "categories": [],
                          "_custom_meta": [],
                          "sellable": true,
                          "name": "Load Shoes 100931",
                          "slug": "load-shoes-100931-qnuugutshoec",
                          "uid": 7522863,
                          "item_code": "LS100931",
                          "item_type": "standard",
                          "brand": {
                            "type": "brand",
                            "name": "Load Brand 1",
                            "logo": {},
                            "action": {
                              "page": {
                                "type": "products",
                                "query": {
                                  "brand": [
                                    "load-brand-1"
                                  ]
                                }
                              },
                              "type": "page"
                            },
                            "_custom_json": {}
                          },
                          "action": {
                            "page": {
                              "type": "product",
                              "params": {
                                "slug": [
                                  "load-shoes-100931-qnuugutshoec"
                                ]
                              }
                            },
                            "type": "page"
                          },
                          "medias": [
                            {
                              "type": "image",
                              "url": "https://hdn-1.fynd.com/media/fynd_store_items/l2_category/original/2830_c5bb5fc02f414307a828c4c56483c30a.jpg"
                            }
                          ],
                          "discount": "6% OFF",
                          "price": {
                            "marked": {
                              "min": 5000,
                              "max": 5000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "effective": {
                              "min": 4699,
                              "max": 4699,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            }
                          },
                          "is_tryout": false,
                          "channel": "000000000000000000000001",
                          "_custom_json": {},
                          "country_of_origin": "India",
                          "variants": []
                        },
                        {
                          "type": "product",
                          "attributes": {
                            "primary_color_hex": null,
                            "gender": "men",
                            "marketer-address": "Load Galli, Mumbai",
                            "marketer-name": "Load Wala",
                            "primary_color": null,
                            "primary_material": "Fabric"
                          },
                          "categories": [],
                          "_custom_meta": [],
                          "sellable": true,
                          "name": "Load Shoes 101490",
                          "slug": "load-shoes-101490-0cgg_86ozi6s",
                          "uid": 7523770,
                          "item_code": "LS101490",
                          "item_type": "standard",
                          "brand": {
                            "type": "brand",
                            "name": "Load Brand 1",
                            "logo": {},
                            "action": {
                              "page": {
                                "type": "products",
                                "query": {
                                  "brand": [
                                    "load-brand-1"
                                  ]
                                }
                              },
                              "type": "page"
                            },
                            "_custom_json": {}
                          },
                          "action": {
                            "page": {
                              "type": "product",
                              "params": {
                                "slug": [
                                  "load-shoes-101490-0cgg_86ozi6s"
                                ]
                              }
                            },
                            "type": "page"
                          },
                          "medias": [
                            {
                              "type": "image",
                              "url": "https://hdn-1.fynd.com/media/fynd_store_items/l2_category/original/2830_c5bb5fc02f414307a828c4c56483c30a.jpg"
                            }
                          ],
                          "discount": "6% OFF",
                          "price": {
                            "marked": {
                              "min": 5000,
                              "max": 5000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "effective": {
                              "min": 4699,
                              "max": 4699,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            }
                          },
                          "is_tryout": false,
                          "channel": "000000000000000000000001",
                          "_custom_json": {},
                          "country_of_origin": "India",
                          "variants": []
                        },
                        {
                          "type": "product",
                          "attributes": {
                            "primary_color_hex": null,
                            "gender": "men",
                            "marketer-address": "Andheri",
                            "marketer-name": "Puma",
                            "primary_color": null,
                            "primary_material": "Cotton"
                          },
                          "categories": [],
                          "_custom_meta": [],
                          "sellable": true,
                          "name": "Shoe 487",
                          "slug": "shoes-487-ciaqajcbvhxi",
                          "uid": 7501992,
                          "item_code": "SHOE-487",
                          "item_type": "standard",
                          "brand": {
                            "type": "brand",
                            "name": "CaneWorks",
                            "logo": {},
                            "action": {
                              "page": {
                                "type": "products",
                                "query": {
                                  "brand": [
                                    "caneworks"
                                  ]
                                }
                              },
                              "type": "page"
                            },
                            "_custom_json": {}
                          },
                          "action": {
                            "page": {
                              "type": "product",
                              "params": {
                                "slug": [
                                  "shoes-487-ciaqajcbvhxi"
                                ]
                              }
                            },
                            "type": "page"
                          },
                          "medias": [
                            {
                              "type": "image",
                              "url": "https://hdn-1.fynd.com/media/fynd_store_items/l2_category/original/2830_c5bb5fc02f414307a828c4c56483c30a.jpg"
                            }
                          ],
                          "discount": "50% OFF",
                          "price": {
                            "marked": {
                              "min": 2000,
                              "max": 2000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "effective": {
                              "min": 1000,
                              "max": 1000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            }
                          },
                          "is_tryout": false,
                          "channel": "000000000000000000000001",
                          "_custom_json": {},
                          "country_of_origin": "India",
                          "variants": [
                            {
                              "display_type": "image",
                              "header": "Additional Colors",
                              "items": [
                                {
                                  "action": {
                                    "page": {
                                      "type": "product",
                                      "params": {
                                        "slug": [
                                          "shoes-671-gs7hedxv_w01"
                                        ]
                                      }
                                    },
                                    "type": "page"
                                  },
                                  "uid": 7501985,
                                  "slug": "shoes-671-gs7hedxv_w01",
                                  "color": "4A90E2",
                                  "medias": [
                                    {
                                      "type": "image",
                                      "url": "https://hdn-1.fynd.com/media/fynd_store_items/l2_category/original/2830_c5bb5fc02f414307a828c4c56483c30a.jpg"
                                    }
                                  ],
                                  "name": "Shoe 671",
                                  "is_available": false,
                                  "_custom_json": {}
                                }
                              ],
                              "key": "color",
                              "total": 2
                            }
                          ]
                        },
                        {
                          "type": "product",
                          "attributes": {
                            "primary_color_hex": null,
                            "gender": "men",
                            "marketer-address": "Andheri",
                            "marketer-name": "Puma",
                            "primary_color": null,
                            "primary_material": "Cotton"
                          },
                          "categories": [],
                          "_custom_meta": [],
                          "sellable": true,
                          "name": "Shoe 487",
                          "slug": "shoes-487-ciaqajcbvhxi",
                          "uid": 7501992,
                          "item_code": "SHOE-487",
                          "item_type": "standard",
                          "brand": {
                            "type": "brand",
                            "name": "CaneWorks",
                            "logo": {},
                            "action": {
                              "page": {
                                "type": "products",
                                "query": {
                                  "brand": [
                                    "caneworks"
                                  ]
                                }
                              },
                              "type": "page"
                            },
                            "_custom_json": {}
                          },
                          "action": {
                            "page": {
                              "type": "product",
                              "params": {
                                "slug": [
                                  "shoes-487-ciaqajcbvhxi"
                                ]
                              }
                            },
                            "type": "page"
                          },
                          "medias": [
                            {
                              "type": "image",
                              "url": "https://hdn-1.fynd.com/media/fynd_store_items/l2_category/original/2830_c5bb5fc02f414307a828c4c56483c30a.jpg"
                            }
                          ],
                          "discount": "50% OFF",
                          "price": {
                            "marked": {
                              "min": 2000,
                              "max": 2000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "effective": {
                              "min": 1000,
                              "max": 1000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            }
                          },
                          "is_tryout": false,
                          "channel": "000000000000000000000001",
                          "_custom_json": {},
                          "country_of_origin": "India",
                          "variants": [
                            {
                              "display_type": "image",
                              "header": "Additional Colors",
                              "items": [
                                {
                                  "action": {
                                    "page": {
                                      "type": "product",
                                      "params": {
                                        "slug": [
                                          "shoes-671-gs7hedxv_w01"
                                        ]
                                      }
                                    },
                                    "type": "page"
                                  },
                                  "uid": 7501985,
                                  "slug": "shoes-671-gs7hedxv_w01",
                                  "color": "4A90E2",
                                  "medias": [
                                    {
                                      "type": "image",
                                      "url": "https://hdn-1.fynd.com/media/fynd_store_items/l2_category/original/2830_c5bb5fc02f414307a828c4c56483c30a.jpg"
                                    }
                                  ],
                                  "name": "Shoe 671",
                                  "is_available": false,
                                  "_custom_json": {}
                                }
                              ],
                              "key": "color",
                              "total": 2
                            }
                          ]
                        },
                        {
                          "type": "product",
                          "attributes": {
                            "primary_color_hex": null,
                            "gender": "men",
                            "marketer-address": "Load Galli, Mumbai",
                            "marketer-name": "Load Wala",
                            "primary_color": null,
                            "primary_material": "Fabric"
                          },
                          "categories": [],
                          "_custom_meta": [],
                          "sellable": true,
                          "name": "Load Shoes 100241",
                          "slug": "load-shoes-100241-9ee51v8qxpz",
                          "uid": 7523366,
                          "item_code": "LS100241",
                          "item_type": "standard",
                          "brand": {
                            "type": "brand",
                            "name": "Load Brand 1",
                            "logo": {},
                            "action": {
                              "page": {
                                "type": "products",
                                "query": {
                                  "brand": [
                                    "load-brand-1"
                                  ]
                                }
                              },
                              "type": "page"
                            },
                            "_custom_json": {}
                          },
                          "action": {
                            "page": {
                              "type": "product",
                              "params": {
                                "slug": [
                                  "load-shoes-100241-9ee51v8qxpz"
                                ]
                              }
                            },
                            "type": "page"
                          },
                          "medias": [
                            {
                              "type": "image",
                              "url": "https://hdn-1.fynd.com/media/fynd_store_items/l2_category/original/2830_c5bb5fc02f414307a828c4c56483c30a.jpg"
                            }
                          ],
                          "discount": "6% OFF",
                          "price": {
                            "marked": {
                              "min": 5000,
                              "max": 5000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "effective": {
                              "min": 4699,
                              "max": 4699,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            }
                          },
                          "is_tryout": false,
                          "channel": "000000000000000000000001",
                          "_custom_json": {},
                          "country_of_origin": "India",
                          "variants": []
                        },
                        {
                          "type": "product",
                          "attributes": {
                            "primary_color_hex": null,
                            "gender": "men",
                            "marketer-address": "Load Galli, Mumbai",
                            "marketer-name": "Load Wala",
                            "primary_color": null,
                            "primary_material": "Fabric"
                          },
                          "categories": [],
                          "_custom_meta": [],
                          "sellable": true,
                          "name": "Load Shoes 100407",
                          "slug": "load-shoes-100407-jcubbw5xz3wa",
                          "uid": 7523709,
                          "item_code": "LS100407",
                          "item_type": "standard",
                          "brand": {
                            "type": "brand",
                            "name": "Load Brand 1",
                            "logo": {},
                            "action": {
                              "page": {
                                "type": "products",
                                "query": {
                                  "brand": [
                                    "load-brand-1"
                                  ]
                                }
                              },
                              "type": "page"
                            },
                            "_custom_json": {}
                          },
                          "action": {
                            "page": {
                              "type": "product",
                              "params": {
                                "slug": [
                                  "load-shoes-100407-jcubbw5xz3wa"
                                ]
                              }
                            },
                            "type": "page"
                          },
                          "medias": [
                            {
                              "type": "image",
                              "url": "https://hdn-1.fynd.com/media/fynd_store_items/l2_category/original/2830_c5bb5fc02f414307a828c4c56483c30a.jpg"
                            }
                          ],
                          "discount": "6% OFF",
                          "price": {
                            "marked": {
                              "min": 5000,
                              "max": 5000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "effective": {
                              "min": 4699,
                              "max": 4699,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            }
                          },
                          "is_tryout": false,
                          "channel": "000000000000000000000001",
                          "_custom_json": {},
                          "country_of_origin": "India",
                          "variants": []
                        },
                        {
                          "type": "product",
                          "attributes": {
                            "primary_color_hex": null,
                            "gender": "men",
                            "marketer-address": "Load Galli, Mumbai",
                            "marketer-name": "Load Wala",
                            "primary_color": null,
                            "primary_material": "Fabric"
                          },
                          "categories": [],
                          "_custom_meta": [],
                          "sellable": true,
                          "name": "Load Shoes 100763",
                          "slug": "load-shoes-100763-gse_mewuxfxv",
                          "uid": 7523185,
                          "item_code": "LS100763",
                          "item_type": "standard",
                          "brand": {
                            "type": "brand",
                            "name": "Load Brand 1",
                            "logo": {},
                            "action": {
                              "page": {
                                "type": "products",
                                "query": {
                                  "brand": [
                                    "load-brand-1"
                                  ]
                                }
                              },
                              "type": "page"
                            },
                            "_custom_json": {}
                          },
                          "action": {
                            "page": {
                              "type": "product",
                              "params": {
                                "slug": [
                                  "load-shoes-100763-gse_mewuxfxv"
                                ]
                              }
                            },
                            "type": "page"
                          },
                          "medias": [
                            {
                              "type": "image",
                              "url": "https://hdn-1.fynd.com/media/fynd_store_items/l2_category/original/2830_c5bb5fc02f414307a828c4c56483c30a.jpg"
                            }
                          ],
                          "discount": "6% OFF",
                          "price": {
                            "marked": {
                              "min": 5000,
                              "max": 5000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "effective": {
                              "min": 4699,
                              "max": 4699,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            }
                          },
                          "is_tryout": false,
                          "channel": "000000000000000000000001",
                          "_custom_json": {},
                          "country_of_origin": "India",
                          "variants": []
                        },
                        {
                          "type": "product",
                          "attributes": {
                            "primary_color_hex": null,
                            "gender": "men",
                            "marketer-address": "Andheri",
                            "marketer-name": "Puma",
                            "primary_color": null,
                            "primary_material": "Cotton"
                          },
                          "categories": [],
                          "_custom_meta": [],
                          "sellable": true,
                          "name": "Shoe 539",
                          "slug": "shoes-539-dkkfadu66m1l",
                          "uid": 7501643,
                          "item_code": "SHOE-539",
                          "item_type": "standard",
                          "brand": {
                            "type": "brand",
                            "name": "CaneWorks",
                            "logo": {},
                            "action": {
                              "page": {
                                "type": "products",
                                "query": {
                                  "brand": [
                                    "caneworks"
                                  ]
                                }
                              },
                              "type": "page"
                            },
                            "_custom_json": {}
                          },
                          "action": {
                            "page": {
                              "type": "product",
                              "params": {
                                "slug": [
                                  "shoes-539-dkkfadu66m1l"
                                ]
                              }
                            },
                            "type": "page"
                          },
                          "medias": [
                            {
                              "type": "image",
                              "url": "https://hdn-1.fynd.com/media/fynd_store_items/l2_category/original/2830_c5bb5fc02f414307a828c4c56483c30a.jpg"
                            }
                          ],
                          "discount": "50% OFF",
                          "price": {
                            "marked": {
                              "min": 2000,
                              "max": 2000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "effective": {
                              "min": 1000,
                              "max": 1000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            }
                          },
                          "is_tryout": false,
                          "channel": "000000000000000000000001",
                          "_custom_json": {},
                          "country_of_origin": "India",
                          "variants": []
                        },
                        {
                          "type": "product",
                          "attributes": {
                            "primary_color_hex": null,
                            "gender": "men",
                            "marketer-address": "Andheri",
                            "marketer-name": "Puma",
                            "primary_color": null,
                            "primary_material": "Cotton"
                          },
                          "categories": [],
                          "_custom_meta": [],
                          "sellable": true,
                          "name": "Shoe 348",
                          "slug": "shoes-348-dcnhciie0v3",
                          "uid": 7502012,
                          "item_code": "SHOE-348",
                          "item_type": "standard",
                          "brand": {
                            "type": "brand",
                            "name": "CaneWorks",
                            "logo": {},
                            "action": {
                              "page": {
                                "type": "products",
                                "query": {
                                  "brand": [
                                    "caneworks"
                                  ]
                                }
                              },
                              "type": "page"
                            },
                            "_custom_json": {}
                          },
                          "action": {
                            "page": {
                              "type": "product",
                              "params": {
                                "slug": [
                                  "shoes-348-dcnhciie0v3"
                                ]
                              }
                            },
                            "type": "page"
                          },
                          "medias": [
                            {
                              "type": "image",
                              "url": "https://hdn-1.fynd.com/media/fynd_store_items/l2_category/original/2830_c5bb5fc02f414307a828c4c56483c30a.jpg"
                            }
                          ],
                          "discount": "50% OFF",
                          "price": {
                            "marked": {
                              "min": 2000,
                              "max": 2000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "effective": {
                              "min": 1000,
                              "max": 1000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            }
                          },
                          "is_tryout": false,
                          "channel": "000000000000000000000001",
                          "_custom_json": {},
                          "country_of_origin": "India",
                          "variants": []
                        },
                        {
                          "type": "product",
                          "attributes": {
                            "primary_color_hex": null,
                            "gender": "men",
                            "marketer-address": "Andheri",
                            "marketer-name": "Puma",
                            "primary_color": null,
                            "primary_material": "Cotton"
                          },
                          "categories": [],
                          "_custom_meta": [],
                          "sellable": true,
                          "name": "Shoe 1048",
                          "slug": "shoes-1048-piqk6-rwmts5",
                          "uid": 7502307,
                          "item_code": "SHOE-1048",
                          "item_type": "standard",
                          "brand": {
                            "type": "brand",
                            "name": "CaneWorks",
                            "logo": {},
                            "action": {
                              "page": {
                                "type": "products",
                                "query": {
                                  "brand": [
                                    "caneworks"
                                  ]
                                }
                              },
                              "type": "page"
                            },
                            "_custom_json": {}
                          },
                          "action": {
                            "page": {
                              "type": "product",
                              "params": {
                                "slug": [
                                  "shoes-1048-piqk6-rwmts5"
                                ]
                              }
                            },
                            "type": "page"
                          },
                          "medias": [
                            {
                              "type": "image",
                              "url": "https://hdn-1.fynd.com/media/fynd_store_items/l2_category/original/2830_c5bb5fc02f414307a828c4c56483c30a.jpg"
                            }
                          ],
                          "discount": "50% OFF",
                          "price": {
                            "marked": {
                              "min": 2000,
                              "max": 2000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "effective": {
                              "min": 1000,
                              "max": 1000,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            }
                          },
                          "is_tryout": false,
                          "channel": "000000000000000000000001",
                          "_custom_json": {},
                          "country_of_origin": "India",
                          "variants": []
                        }
                      ],
                      "sort_on": "created_on desc, score desc",
                      "page": {
                        "type": "cursor",
                        "next_id": "AoIIRHjAAD8HMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAxIV9hbGxfITc1MDIzMDc=",
                        "has_previous": false,
                        "has_next": true,
                        "item_total": 2513
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Department"
        ]
      }
    },
    "/service/application/catalog/v1.0/departments": {
      "get": {
        "summary": "getDepartments | Lists all departments.",
        "description": "List all departments associated with available products.",
        "tags": [
          "Catalog"
        ],
        "responses": {
          "200": {
            "description": "List of Departments.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentResponseSchema"
                },
                "examples": {
                  "success": {
                    "value": {
                      "items": [
                        {
                          "uid": 1,
                          "name": "Zachary Harris",
                          "slug": "Zachary-Harris",
                          "priority_order": 7,
                          "logo": {
                            "type": "image",
                            "url": "http://cdn4.gofynd.com/media/category_tab_icons/department/Men.png"
                          }
                        },
                        {
                          "uid": 2,
                          "name": "Aaron Reilly",
                          "slug": "Aaron-Reilly",
                          "priority_order": 7,
                          "logo": {
                            "type": "image",
                            "url": "http://cdn4.gofynd.com/media/category_tab_icons/department/Men.png"
                          }
                        },
                        {
                          "uid": 3,
                          "name": "Bobby Sandoval",
                          "slug": "Bobby-Sandoval",
                          "priority_order": 7,
                          "logo": {
                            "type": "image",
                            "url": "http://cdn4.gofynd.com/media/category_tab_icons/department/Men.png"
                          }
                        },
                        {
                          "uid": 4,
                          "name": "Seth Hughes",
                          "slug": "Seth-Hughes",
                          "priority_order": 7,
                          "logo": {
                            "type": "image",
                            "url": "http://cdn4.gofynd.com/media/category_tab_icons/department/Men.png"
                          }
                        },
                        {
                          "uid": 5,
                          "name": "Michelle Moore",
                          "slug": "Michelle-Moore",
                          "priority_order": 7,
                          "logo": {
                            "type": "image",
                            "url": "http://cdn4.gofynd.com/media/category_tab_icons/department/Men.png"
                          }
                        },
                        {
                          "uid": 6,
                          "name": "Annette Baldwin",
                          "slug": "Annette-Baldwin",
                          "priority_order": 7,
                          "logo": {
                            "type": "image",
                            "url": "http://cdn4.gofynd.com/media/category_tab_icons/department/Men.png"
                          }
                        },
                        {
                          "uid": 7,
                          "name": "Chris Mata",
                          "slug": "Chris-Mata",
                          "priority_order": 7,
                          "logo": {
                            "type": "image",
                            "url": "http://cdn4.gofynd.com/media/category_tab_icons/department/Men.png"
                          }
                        },
                        {
                          "uid": 8,
                          "name": "Nicole Jacobs",
                          "slug": "Nicole-Jacobs",
                          "priority_order": 7,
                          "logo": {
                            "type": "image",
                            "url": "http://cdn4.gofynd.com/media/category_tab_icons/department/Men.png"
                          }
                        },
                        {
                          "uid": 9,
                          "name": "Pamela Smith",
                          "slug": "Pamela-Smith",
                          "priority_order": 7,
                          "logo": {
                            "type": "image",
                            "url": "http://cdn4.gofynd.com/media/category_tab_icons/department/Men.png"
                          }
                        },
                        {
                          "uid": 10,
                          "name": "Nicole Simon",
                          "slug": "Nicole-Simon",
                          "priority_order": 7,
                          "logo": {
                            "type": "image",
                            "url": "http://cdn4.gofynd.com/media/category_tab_icons/department/Men.png"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Department"
        ]
      }
    },
    "/service/application/catalog/v1.0/auto-complete": {
      "get": {
        "summary": "getSearchResults | Retrieves search result listings.",
        "description": "Get products, brands, or categories based on a search query, which can be a partial or full name match.",
        "tags": [
          "Catalog"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "description": "The search query for entering partial or full name of a product, brand or category. For example, if the given search query `q` is _ski_, the relevant search suggestions could be _skirt_, _ski shoes_, __skin cream_ etc.",
            "schema": {
              "type": "string"
            },
            "required": true,
            "examples": {
              "success": {
                "value": "Sarah"
              },
              "failure": {
                "value": ""
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a list autocomplete suggestions for the search query `q`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoCompleteResponseSchema"
                },
                "examples": {
                  "success": {
                    "value": {
                      "items": [
                        {
                          "display": "CDN test 002 03",
                          "type": "category",
                          "action": {
                            "page": {
                              "type": "products",
                              "query": {
                                "category": [
                                  "cdn-test-002-03"
                                ]
                              }
                            },
                            "type": "page"
                          },
                          "logo": {
                            "type": "image",
                            "url": "https://cdn.fynd.com/v2/falling-surf-7c8bb8/fyndnp/wrkr/x5/department/pictures/square-logo/original/SqBYEE2EC-department.png"
                          },
                          "_custom_json": {}
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Search Autocomplete Suggestions"
        ]
      }
    },
    "/service/application/catalog/v1.0/collections": {
      "get": {
        "summary": "getCollections | Fetches all available collections.",
        "description": "List of curated product collections with filtering options based on tags and collection names.",
        "tags": [
          "Catalog"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page_no",
            "description": "The page number to navigate through the given set of results.",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "required": false,
            "examples": {
              "success": {
                "value": 1
              },
              "failure": {
                "value": 1
              }
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of items to retrieve in each page.",
            "schema": {
              "type": "integer",
              "default": 12
            },
            "required": false,
            "examples": {
              "success": {
                "value": 12
              },
              "failure": {
                "value": 2
              }
            }
          },
          {
            "in": "query",
            "name": "tag",
            "description": "List of tags  to filter collections.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "minItems": 1
            },
            "required": false,
            "examples": {
              "success": {
                "value": [
                  "test"
                ]
              },
              "failure": {
                "value": [
                  "hello"
                ]
              }
            }
          },
          {
            "in": "query",
            "name": "q",
            "description": "Name of the collection to filter collection.",
            "schema": {
              "type": "string"
            },
            "required": false,
            "examples": {
              "success": {
                "value": "trending"
              },
              "failure": {
                "value": "test-invalid"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a list of collections.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCollectionListingResponseSchema"
                },
                "examples": {
                  "success": {
                    "value": {
                      "page": {
                        "type": "number",
                        "current": 1,
                        "total": 1,
                        "has_previous": false,
                        "has_next": false,
                        "item_total": 2
                      },
                      "items": [
                        {
                          "uid": "601a4f39448327cfa83e7db2",
                          "type": "query",
                          "query": [
                            {
                              "op": "in",
                              "value": [],
                              "attribute": "",
                              "category": [
                                "Anna-Navarro"
                              ]
                            }
                          ],
                          "name": "collection with Anna-Navarro",
                          "banners": {
                            "portrait": {
                              "url": "https://res.cloudinary.com/dwzm9bysq/image/upload/v1571729908/production/applications/app_000000000000000000000001/media/collection/portrait/pewrpnjrhcrca1dmtvx5.png",
                              "aspect_ratio": "13:20"
                            },
                            "landscape": {
                              "url": "https://res.cloudinary.com/dwzm9bysq/image/upload/v1571729858/production/applications/app_000000000000000000000001/media/collection/landscape/tkclmj847hdvfbudeqbr.png",
                              "aspect_ratio": "27:20"
                            }
                          },
                          "logo": {
                            "url": "https://res.cloudinary.com/dwzm9bysq/image/upload/v1571729838/production/applications/app_000000000000000000000001/media/collection/logo/xierjsrcwhd2fphzyjod.png",
                            "aspect_ratio": "1:1"
                          },
                          "published": true,
                          "description": "Crimsoune Club | Upto 70% Off",
                          "is_active": true,
                          "tags": [
                            "men",
                            "women"
                          ],
                          "slug": "crimsoune-club-upto-70-off-754fa043",
                          "action": {
                            "type": "collection",
                            "url": "https://api.addsale.com/platform/content/v1/collections/crimsoune-club-upto-70-off-754fa043/items/"
                          },
                          "allow_facets": true,
                          "allow_sort": true,
                          "visible_facets_keys": [],
                          "meta": {},
                          "badge": {},
                          "sort_on": "popular",
                          "_custom_json": {},
                          "_locale_language": {},
                          "_schedule": {}
                        },
                        {
                          "uid": "601a4f39448327cfa83e7db0",
                          "type": "items",
                          "query": [
                            {
                              "op": "in",
                              "value": [],
                              "attribute": "",
                              "category": [
                                "Anna-Navarro"
                              ]
                            }
                          ],
                          "name": "collection with items",
                          "banners": {
                            "portrait": {
                              "url": "https://res.cloudinary.com/dwzm9bysq/image/upload/v1571729908/production/applications/app_000000000000000000000001/media/collection/portrait/pewrpnjrhcrca1dmtvx5.png",
                              "aspect_ratio": "13:20"
                            },
                            "landscape": {
                              "url": "https://res.cloudinary.com/dwzm9bysq/image/upload/v1571729858/production/applications/app_000000000000000000000001/media/collection/landscape/tkclmj847hdvfbudeqbr.png",
                              "aspect_ratio": "27:20"
                            }
                          },
                          "logo": {
                            "url": "https://res.cloudinary.com/dwzm9bysq/image/upload/v1571729838/production/applications/app_000000000000000000000001/media/collection/logo/xierjsrcwhd2fphzyjod.png",
                            "aspect_ratio": "1:1"
                          },
                          "published": true,
                          "description": "Crimsoune Club | Upto 70% Off",
                          "is_active": true,
                          "tags": [
                            "men",
                            "women"
                          ],
                          "slug": "crimsoune-club-upto-70-off-754fa043",
                          "action": {
                            "type": "collection",
                            "url": "https://api.addsale.com/platform/content/v1/collections/crimsoune-club-upto-70-off-754fa043/items/"
                          },
                          "allow_facets": true,
                          "allow_sort": true,
                          "visible_facets_keys": [],
                          "meta": {},
                          "badge": {},
                          "sort_on": "popular",
                          "_custom_json": {},
                          "_locale_language": {},
                          "_schedule": {},
                          "modified_on": "2024-02-14T10:17:09.135000Z"
                        }
                      ],
                      "filters": {
                        "tags": [
                          {
                            "name": "men",
                            "is_selected": false,
                            "display": "men"
                          },
                          {
                            "name": "women",
                            "is_selected": false,
                            "display": "women"
                          }
                        ],
                        "type": [
                          {
                            "name": "items",
                            "is_selected": false,
                            "display": "items"
                          },
                          {
                            "name": "query",
                            "is_selected": false,
                            "display": "query"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bad request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "x-groups": [
          "Collection"
        ]
      }
    },
    "/service/application/catalog/v1.0/collections/{slug}/items": {
      "get": {
        "summary": "getCollectionItemsBySlug | Lists items in a collection by slug.",
        "description": "Fetch items within a particular collection identified by its slug.",
        "tags": [
          "Catalog"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "description": "A short, human-readable, URL-friendly identifier of a collection. You can get slug value from the endpoint /service/application/catalog/v1.0/collections/.",
            "schema": {
              "type": "string"
            },
            "required": true,
            "examples": {
              "success": {
                "value": "test-collection-6aecd5b7"
              },
              "failure": {
                "value": "test-collecxtion"
              }
            }
          },
          {
            "in": "query",
            "name": "f",
            "description": "The search filter parameters. Filter parameters will be passed in f parameter as shown in the example below. Double Pipe (||) denotes the OR condition, whereas Triple-colon (:::) indicates a new filter parameter applied as an AND condition.",
            "schema": {
              "type": "string",
              "example": "brand:voi-jeans||reliance:::l3_categories:t-shirts||shirts"
            },
            "required": false,
            "examples": {
              "success": {
                "value": "brand:Guerra-Chang||test-brand:::l3_categories:Paul-Walker||Sarah-Murray||Sarah-Carter||Rerank-Category"
              },
              "failure": {
                "value": "brand:test-brand||test-brand-2:::l3_categories:test||test1"
              }
            }
          },
          {
            "in": "query",
            "name": "q",
            "description": "The search query for entering partial or full name of product, brand, category, or collection.",
            "schema": {
              "type": "string",
              "example": "shirts"
            },
            "required": false,
            "examples": {
              "success": {
                "value": "test"
              },
              "failure": {
                "value": "abc"
              }
            }
          },
          {
            "in": "query",
            "name": "filters",
            "description": "True for fetching all filter parameters and False for disabling the filter parameters.",
            "schema": {
              "type": "boolean",
              "default": true
            },
            "required": false,
            "examples": {
              "success": {
                "value": true
              },
              "failure": {
                "value": false
              }
            }
          },
          {
            "in": "query",
            "name": "sort_on",
            "description": "The order in which the list of products should be sorted, e.g. popularity, price, latest and discount, in either ascending or descending order. See the supported values below.",
            "schema": {
              "type": "string",
              "enum": [
                "latest",
                "popular",
                "price_asc",
                "price_dsc",
                "discount_asc",
                "discount_dsc"
              ]
            },
            "required": false,
            "examples": {
              "success": {
                "value": "popular"
              },
              "failure": {
                "value": "test"
              }
            }
          },
          {
            "in": "query",
            "name": "page_id",
            "description": "Page ID to retrieve next set of results.",
            "schema": {
              "type": "string",
              "default": "1"
            },
            "required": false,
            "examples": {
              "success": {
                "value": "1"
              },
              "failure": {
                "value": "a"
              }
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of items to retrieve in each page.",
            "schema": {
              "type": "integer",
              "default": 12
            },
            "required": false,
            "examples": {
              "success": {
                "value": 12
              },
              "failure": {
                "value": 1
              }
            }
          },
          {
            "in": "query",
            "name": "page_no",
            "description": "Page Number to retrieve next set of results.",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "required": false,
            "examples": {
              "success": {
                "value": 1
              },
              "failure": {
                "value": 0
              }
            }
          },
          {
            "in": "query",
            "name": "page_type",
            "description": "Page Type to retrieve set of results can be cursor or number.",
            "schema": {
              "type": "string",
              "enum": [
                "cursor",
                "number"
              ]
            },
            "required": false,
            "examples": {
              "success": {
                "value": "number"
              },
              "failure": {
                "value": "number"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a list items in a given collection. Check the example shown below or refer `ProductListingResponse` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListingResponseSchema"
                },
                "examples": {
                  "success": {
                    "value": {
                      "filters": [
                        {
                          "key": {
                            "display": "Department",
                            "name": "department",
                            "kind": "multivalued",
                            "logo": "https://hdn-1.fynd.com/global/menu-icons/Department.svg"
                          },
                          "values": [
                            {
                              "display": "Debra Villarreal",
                              "count": 1,
                              "is_selected": false,
                              "value": "Debra-Villarreal",
                              "logo": "http://cdn4.gofynd.com/media/category_tab_icons/department/Men.png"
                            },
                            {
                              "display": "Tracey Miller",
                              "count": 1,
                              "is_selected": false,
                              "value": "Tracey-Miller",
                              "logo": "http://cdn4.gofynd.com/media/category_tab_icons/department/Men.png"
                            }
                          ]
                        },
                        {
                          "key": {
                            "display": "Category",
                            "name": "category",
                            "kind": "multivalued",
                            "logo": "https://hdn-1.fynd.com/global/menu-icons/Category.svg"
                          },
                          "values": [
                            {
                              "display": "Amy Kim DDS",
                              "count": 1,
                              "is_selected": false,
                              "value": "3",
                              "logo": "http://cdn4.gofynd.com/media/banner/category/original/12063_a5bb91bd5cb44c3c9db98c2a0e6b3d99.jpg"
                            }
                          ]
                        },
                        {
                          "key": {
                            "display": "Gender",
                            "name": "gender",
                            "kind": "multivalued",
                            "logo": "https://hdn-1.fynd.com/global/menu-icons/Gender.svg"
                          },
                          "values": [
                            {
                              "display": "Men",
                              "count": 1,
                              "is_selected": false,
                              "value": "men"
                            },
                            {
                              "display": "Women",
                              "count": 1,
                              "is_selected": false,
                              "value": "women"
                            }
                          ]
                        },
                        {
                          "key": {
                            "display": "Size",
                            "name": "sizes",
                            "kind": "multivalued",
                            "logo": "https://hdn-1.fynd.com/global/menu-icons/Sizes.svg"
                          },
                          "values": [
                            {
                              "display": "13",
                              "count": 1,
                              "is_selected": false,
                              "value": "13"
                            }
                          ]
                        },
                        {
                          "key": {
                            "display": "Brand",
                            "name": "brand",
                            "kind": "multivalued",
                            "logo": "https://hdn-1.fynd.com/global/menu-icons/Brand%20ID.svg"
                          },
                          "values": [
                            {
                              "display": "Barry, Jennings and Larson",
                              "count": 1,
                              "is_selected": false,
                              "value": "1",
                              "logo": "https://hdn-1.fynd.com/media/logo/brand/original/12391_0d956c6c71a4427895c15e44cba82f88.jpg"
                            }
                          ]
                        },
                        {
                          "key": {
                            "display": "Rating",
                            "name": "rating",
                            "kind": "multivalued",
                            "logo": "https://hdn-1.fynd.com/global/menu-icons/Rating.svg"
                          },
                          "values": [
                            {
                              "count": 1,
                              "display": "2 - 3",
                              "value": "[2 TO 3}",
                              "is_selected": false
                            }
                          ]
                        },
                        {
                          "key": {
                            "display": "Image",
                            "name": "image_nature",
                            "kind": "multivalued",
                            "logo": "https://hdn-1.fynd.com/global/menu-icons/image%20Nature.svg"
                          },
                          "values": [
                            {
                              "display": "GoodQuality",
                              "count": 1,
                              "is_selected": false,
                              "value": "standard"
                            }
                          ]
                        },
                        {
                          "key": {
                            "display": "Monica Hampton",
                            "name": "material",
                            "kind": "multivalued",
                            "logo": "https://hdn-1.fynd.com/global/menu-icons/image%20Nature.svg"
                          },
                          "values": [
                            {
                              "display": "Neoprene",
                              "count": 1,
                              "is_selected": false,
                              "value": "Neoprene"
                            }
                          ]
                        },
                        {
                          "key": {
                            "display": "John Mendoza",
                            "name": "weight",
                            "kind": "multivalued",
                            "logo": "https://hdn-1.fynd.com/global/menu-icons/image%20Nature.svg"
                          },
                          "values": [
                            {
                              "display": "100",
                              "count": 1,
                              "is_selected": false,
                              "value": "100"
                            }
                          ]
                        },
                        {
                          "key": {
                            "display": "Kimberly Mcdaniel",
                            "name": "gender",
                            "kind": "multivalued",
                            "logo": "https://hdn-1.fynd.com/global/menu-icons/image%20Nature.svg"
                          },
                          "values": [
                            {
                              "display": "['Men', 'Women']",
                              "count": 1,
                              "is_selected": false,
                              "value": "['Men', 'Women']"
                            }
                          ]
                        },
                        {
                          "key": {
                            "display": "Kimberly Davidson",
                            "name": "color",
                            "kind": "multivalued",
                            "logo": "https://hdn-1.fynd.com/global/menu-icons/image%20Nature.svg"
                          },
                          "values": [
                            {
                              "display": "Grey",
                              "count": 1,
                              "is_selected": false,
                              "value": "808080"
                            }
                          ]
                        },
                        {
                          "key": {
                            "display": "Available",
                            "name": "is_available",
                            "kind": "singlevalued"
                          },
                          "values": [
                            {
                              "display": "Available",
                              "count": 3,
                              "is_selected": false,
                              "value": "true"
                            }
                          ]
                        }
                      ],
                      "items": [
                        {
                          "type": "product",
                          "attributes": {
                            "primary_color_hex": "808080",
                            "weight": "100",
                            "gender": "women",
                            "material": "Neoprene",
                            "primary_color": "DarkGrey"
                          },
                          "categories": [
                            {
                              "id": 3,
                              "uid": 3,
                              "name": "Amy Kim DDS",
                              "logo": {
                                "type": "image",
                                "url": "https://hdn-1.fynd.com/media/banner_portrait/brand/original/540_ecba3a1af141467da8abc20500f983db.jpg"
                              },
                              "action": {
                                "page": {
                                  "type": "category",
                                  "query": {
                                    "category": [
                                      "Amy-Kim-DDS"
                                    ]
                                  }
                                },
                                "type": "page"
                              },
                              "_custom_json": {}
                            }
                          ],
                          "_custom_meta": [],
                          "sellable": true,
                          "name": "benchmark collaborative paradigms",
                          "sizes": [
                            "XS"
                          ],
                          "slug": "benchmark-collaborative-paradigms",
                          "uid": 1,
                          "tags": [],
                          "item_code": "3249HGY",
                          "item_type": "set",
                          "brand": {
                            "type": "brand",
                            "name": "Hess Inc",
                            "logo": {
                              "type": "image",
                              "url": "https://hdn-1.fynd.com/media/logo/brand/original/12391_0d956c6c71a4427895c15e44cba82f88.jpg"
                            },
                            "action": {
                              "page": {
                                "type": "products",
                                "query": {
                                  "brand": [
                                    "Hess-Inc"
                                  ]
                                }
                              },
                              "type": "page"
                            },
                            "_custom_json": {}
                          },
                          "action": {
                            "page": {
                              "type": "product",
                              "query": {
                                "slug": "benchmark-collaborative-paradigms"
                              }
                            },
                            "type": "page"
                          },
                          "medias": [
                            {
                              "type": "image",
                              "url": "https://hdn-1.fynd.com/media/fynd_store_items/l2_category/original/2830_c5bb5fc02f414307a828c4c56483c30a.jpg"
                            }
                          ],
                          "identifiers": [
                            "JK213HD"
                          ],
                          "discount": "14% OFF",
                          "price": {
                            "marked": {
                              "min": 1399,
                              "max": 1499,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "effective": {
                              "min": 1199,
                              "max": 1399,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            }
                          },
                          "is_tryout": false,
                          "channel": "1",
                          "_custom_json": {},
                          "moq": {
                            "increment_unit": 1,
                            "unit": "nos"
                          },
                          "net_quantity": {},
                          "seo": {
                            "title": "test-product",
                            "description": ""
                          },
                          "short_description": "Grey Suede Block Heel Thigh High Boots",
                          "country_of_origin": "India",
                          "variants": []
                        }
                      ],
                      "sort_on": [
                        {
                          "display": "Latest Products.",
                          "name": "Latest Products.",
                          "logo": "https://d2zv4gzhlr4ud6.cloudfront.net/media/pictures/tagged_items/360x0/56_MKT02AI060CORAL/1_1567590349681.jpg",
                          "value": "latest",
                          "is_selected": false
                        }
                      ],
                      "page": {
                        "type": "number",
                        "current": 1,
                        "total": 1,
                        "has_previous": false,
                        "has_next": false,
                        "item_total": 1
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Collection"
        ]
      }
    },
    "/service/application/catalog/v1.0/collections/{slug}": {
      "get": {
        "summary": "getCollectionDetailBySlug | Retrieves collection details by slug.",
        "description": "Get detailed information about a specific collection using its slug.",
        "tags": [
          "Catalog"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "description": "A short, human-readable, URL-friendly identifier of a collection. You can get slug value from the endpoint /service/application/catalog/v1.0/collections/.",
            "schema": {
              "type": "string"
            },
            "required": true,
            "examples": {
              "success": {
                "value": "test-collection-6aecd5b7"
              },
              "failure": {
                "value": "test-collecxtion"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a Collection object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionDetailResponseSchema"
                },
                "examples": {
                  "success": {
                    "value": {
                      "uid": "601a4f39448327cfa83e7db0",
                      "type": "items",
                      "query": [
                        {
                          "op": "in",
                          "value": [],
                          "attribute": ""
                        }
                      ],
                      "name": "collection with items",
                      "banners": {
                        "portrait": {
                          "type": "image",
                          "url": "https://res.cloudinary.com/dwzm9bysq/image/upload/v1571729908/production/applications/app_000000000000000000000001/media/collection/portrait/pewrpnjrhcrca1dmtvx5.png"
                        },
                        "landscape": {
                          "type": "image",
                          "url": "https://res.cloudinary.com/dwzm9bysq/image/upload/v1571729858/production/applications/app_000000000000000000000001/media/collection/landscape/tkclmj847hdvfbudeqbr.png"
                        }
                      },
                      "logo": {
                        "type": "image",
                        "url": "https://res.cloudinary.com/dwzm9bysq/image/upload/v1571729838/production/applications/app_000000000000000000000001/media/collection/logo/xierjsrcwhd2fphzyjod.png"
                      },
                      "published": true,
                      "description": "Crimsoune Club | Upto 70% Off",
                      "is_active": true,
                      "tags": [
                        "men",
                        "women"
                      ],
                      "slug": "crimsoune-club-upto-70-off-754fa043",
                      "action": {
                        "page": {
                          "type": "collection",
                          "query": {
                            "collection": [
                              "crimsoune-club-upto-70-off-754fa043"
                            ]
                          }
                        },
                        "type": "page"
                      },
                      "allow_facets": true,
                      "allow_sort": true,
                      "visible_facets_keys": [],
                      "meta": {},
                      "badge": {},
                      "sort_on": "popular",
                      "_custom_json": {},
                      "_locale_language": {},
                      "seo": {
                        "description": "",
                        "title": ""
                      },
                      "priority": 79,
                      "_schedule": {
                        "end": "9998-01-30T23:59:00Z",
                        "next_schedule": [
                          {
                            "start": "2023-05-15T06:03:45.835000Z",
                            "end": "9998-01-30T23:59:00Z"
                          }
                        ],
                        "start": "2023-05-15T06:03:45.835000Z"
                      },
                      "modified_on": "2024-02-14T10:17:09.135000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bad request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                },
                "examples": {
                  "failure": {
                    "value": {
                      "code": 404,
                      "message": "Invalid Request",
                      "errors": {
                        "message": "Invalid Request"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Collection"
        ]
      }
    },
    "/service/application/catalog/v1.0/follow/{collection_type}": {
      "get": {
        "summary": "getFollowedListing | Retrieves user's followed listings.",
        "description": "Get a list of products or brands the user is following.",
        "tags": [
          "Catalog"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection_type",
            "description": "Type of collection followed, i.e. products, brands, or collections.",
            "schema": {
              "type": "string",
              "enum": [
                "products",
                "brands",
                "collections"
              ]
            },
            "required": true,
            "examples": {
              "success": {
                "value": "products"
              },
              "failure": {
                "value": "test-products"
              }
            }
          },
          {
            "in": "query",
            "name": "page_id",
            "description": "Page ID to retrieve next set of results.",
            "schema": {
              "type": "string",
              "default": "1"
            },
            "required": false,
            "examples": {
              "success": {
                "value": "636a4c5c295d937d233826a5"
              },
              "failure": {
                "value": "636a4c5c295d937d233826a5"
              }
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "Page ID to retrieve next set of results.",
            "schema": {
              "type": "integer",
              "default": 12
            },
            "required": false,
            "examples": {
              "success": {
                "value": 12
              },
              "failure": {
                "value": 12
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a Followed resource object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFollowListingResponseSchema"
                },
                "examples": {
                  "success": {
                    "value": {
                      "items": [
                        {
                          "type": "product",
                          "name": "revolutionize end-to-end technologies",
                          "item_type": "set",
                          "slug": "revolutionize-end-to-end-technologies",
                          "uid": 1,
                          "brand": {
                            "type": "brand",
                            "name": "Chen PLC",
                            "logo": {
                              "type": "image",
                              "url": "https://hdn-1.fynd.com/media/logo/brand/original/12391_0d956c6c71a4427895c15e44cba82f88.jpg"
                            },
                            "action": {
                              "page": {
                                "type": "products",
                                "query": {
                                  "brand": [
                                    "Chen-PLC"
                                  ]
                                }
                              },
                              "type": "page"
                            },
                            "_custom_json": {}
                          },
                          "sellable": false,
                          "action": {
                            "page": {
                              "type": "product",
                              "query": {
                                "slug": "revolutionize-end-to-end-technologies"
                              }
                            },
                            "type": "page"
                          },
                          "attributes": {
                            "color_hex": "808080",
                            "weight": 100,
                            "product_type": "LaptopBags",
                            "gender": [
                              "Men",
                              "Women"
                            ],
                            "material": "Neoprene",
                            "style_note": "Shape up your overall appeal with this stunning laptop bag. The amazing storage and great design will let you carry your laptop in style!",
                            "item_code": "LGLAPTOPSLEEVE5",
                            "occasion": "Casual",
                            "primary_color": "Grey",
                            "primary_material": "Others",
                            "variant": "LGLAPTOPSLEEVE5",
                            "color": "DarkGrey",
                            "product_details": "This is a Unisex Product.",
                            "primary_color_hex": "808080"
                          },
                          "medias": [
                            {
                              "type": "image",
                              "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/1309_LGLAPTOPSLEEVE5/1_1564735832806.jpg"
                            }
                          ],
                          "categories": [
                            {
                              "id": 3,
                              "uid": 3,
                              "name": "Paul Palmer",
                              "logo": {
                                "type": "image",
                                "url": "https://hdn-1.fynd.com/media/banner_portrait/brand/original/540_ecba3a1af141467da8abc20500f983db.jpg"
                              },
                              "action": {
                                "page": {
                                  "type": "category",
                                  "query": {
                                    "category": [
                                      "Paul-Palmer"
                                    ]
                                  }
                                },
                                "type": "page"
                              },
                              "_custom_json": {}
                            }
                          ],
                          "discount": "14% OFF",
                          "price": {
                            "marked": {
                              "min": 1399,
                              "max": 1399,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "effective": {
                              "min": 1199,
                              "max": 1399,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            }
                          },
                          "rating": 2.7,
                          "rating_count": 2
                        },
                        {
                          "type": "product",
                          "name": "grow B2B experiences",
                          "item_type": "set",
                          "slug": "grow-B2B-experiences",
                          "uid": 15,
                          "brand": {
                            "type": "brand",
                            "name": "Chen PLC",
                            "logo": {
                              "type": "image",
                              "url": "https://hdn-1.fynd.com/media/logo/brand/original/12391_0d956c6c71a4427895c15e44cba82f88.jpg"
                            },
                            "action": {
                              "page": {
                                "type": "products",
                                "query": {
                                  "brand": [
                                    "Chen-PLC"
                                  ]
                                }
                              },
                              "type": "page"
                            },
                            "_custom_json": {}
                          },
                          "sellable": false,
                          "action": {
                            "page": {
                              "type": "product",
                              "query": {
                                "slug": "grow-B2B-experiences"
                              }
                            },
                            "type": "page"
                          },
                          "attributes": {
                            "color_hex": "808080",
                            "weight": 100,
                            "product_type": "LaptopBags",
                            "gender": [
                              "Men",
                              "Women"
                            ],
                            "material": "Neoprene",
                            "style_note": "Shape up your overall appeal with this stunning laptop bag. The amazing storage and great design will let you carry your laptop in style!",
                            "item_code": "LGLAPTOPSLEEVE5",
                            "occasion": "Casual",
                            "primary_color": "Grey",
                            "primary_material": "Others",
                            "variant": "LGLAPTOPSLEEVE5",
                            "color": "DarkGrey",
                            "product_details": "This is a Unisex Product.",
                            "primary_color_hex": "808080"
                          },
                          "medias": [
                            {
                              "type": "image",
                              "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/1309_LGLAPTOPSLEEVE5/1_1564735832806.jpg"
                            }
                          ],
                          "categories": [
                            {
                              "id": 3,
                              "uid": 3,
                              "name": "Paul Palmer",
                              "logo": {
                                "type": "image",
                                "url": "https://hdn-1.fynd.com/media/banner_portrait/brand/original/540_ecba3a1af141467da8abc20500f983db.jpg"
                              },
                              "action": {
                                "page": {
                                  "type": "category",
                                  "query": {
                                    "category": [
                                      "Paul-Palmer"
                                    ]
                                  }
                                },
                                "type": "page"
                              },
                              "_custom_json": {}
                            }
                          ],
                          "discount": "14% OFF",
                          "price": {
                            "marked": {
                              "min": 1399,
                              "max": 1399,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "effective": {
                              "min": 1199,
                              "max": 1399,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            }
                          },
                          "rating": 2.7,
                          "rating_count": 2
                        },
                        {
                          "type": "product",
                          "name": "target robust systems",
                          "item_type": "set",
                          "slug": "target-robust-systems",
                          "uid": 14,
                          "brand": {
                            "type": "brand",
                            "name": "Chen PLC",
                            "logo": {
                              "type": "image",
                              "url": "https://hdn-1.fynd.com/media/logo/brand/original/12391_0d956c6c71a4427895c15e44cba82f88.jpg"
                            },
                            "action": {
                              "page": {
                                "type": "products",
                                "query": {
                                  "brand": [
                                    "Chen-PLC"
                                  ]
                                }
                              },
                              "type": "page"
                            },
                            "_custom_json": {}
                          },
                          "sellable": false,
                          "action": {
                            "page": {
                              "type": "product",
                              "query": {
                                "slug": "target-robust-systems"
                              }
                            },
                            "type": "page"
                          },
                          "attributes": {
                            "color_hex": "808080",
                            "weight": 100,
                            "product_type": "LaptopBags",
                            "gender": [
                              "Men",
                              "Women"
                            ],
                            "material": "Neoprene",
                            "style_note": "Shape up your overall appeal with this stunning laptop bag. The amazing storage and great design will let you carry your laptop in style!",
                            "item_code": "LGLAPTOPSLEEVE5",
                            "occasion": "Casual",
                            "primary_color": "Grey",
                            "primary_material": "Others",
                            "variant": "LGLAPTOPSLEEVE5",
                            "color": "DarkGrey",
                            "product_details": "This is a Unisex Product.",
                            "primary_color_hex": "808080"
                          },
                          "medias": [
                            {
                              "type": "image",
                              "url": "http://cdn4.gofynd.com/media/pictures/tagged_items/original/1309_LGLAPTOPSLEEVE5/1_1564735832806.jpg"
                            }
                          ],
                          "categories": [
                            {
                              "id": 3,
                              "uid": 3,
                              "name": "Paul Palmer",
                              "logo": {
                                "type": "image",
                                "url": "https://hdn-1.fynd.com/media/banner_portrait/brand/original/540_ecba3a1af141467da8abc20500f983db.jpg"
                              },
                              "action": {
                                "page": {
                                  "type": "category",
                                  "query": {
                                    "category": [
                                      "Paul-Palmer"
                                    ]
                                  }
                                },
                                "type": "page"
                              },
                              "_custom_json": {}
                            }
                          ],
                          "discount": "14% OFF",
                          "price": {
                            "marked": {
                              "min": 1399,
                              "max": 1399,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            },
                            "effective": {
                              "min": 1199,
                              "max": 1399,
                              "currency_code": "INR",
                              "currency_symbol": "₹"
                            }
                          },
                          "rating": 2.7,
                          "rating_count": 2
                        }
                      ],
                      "page": {
                        "next_id": "6066fc7b3b17fd7038c46317",
                        "has_previous": false,
                        "has_next": true,
                        "item_total": 15,
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Follow and Unfollow"
        ]
      }
    },
    "/service/application/catalog/v1.0/follow/{collection_type}/{collection_id}": {
      "delete": {
        "summary": "unfollowById | Delete item, brand, product",
        "description": "Remove a followed item, brand, or product using its collection ID.",
        "tags": [
          "Catalog"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection_type",
            "description": "Type of collection followed, i.e. products, brands, or collections.",
            "schema": {
              "type": "string",
              "enum": [
                "products",
                "brands",
                "collections"
              ]
            },
            "required": true,
            "examples": {
              "success": {
                "value": "products"
              },
              "failure": {
                "value": "test"
              }
            }
          },
          {
            "in": "path",
            "name": "collection_id",
            "description": "The ID of the collection type.",
            "schema": {
              "type": "string"
            },
            "required": true,
            "examples": {
              "success": {
                "value": "1"
              },
              "failure": {
                "value": 100
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a response object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FollowPostResponseSchema"
                },
                "example": {
                  "message": "Products Removed From Wishlist",
                  "id": "1"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                },
                "examples": {
                  "failure": {
                    "value": {
                      "code": 400,
                      "message": "Invalid Request",
                      "errors": {
                        "message": "Invalid Request"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Follow and Unfollow"
        ]
      },
      "post": {
        "summary": "followById | Follows an item by ID.",
        "description": "Add a product, brand, or item to the user's followed list by collection Id.",
        "tags": [
          "Catalog"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection_type",
            "description": "Type of collection followed, i.e. products, brands, or collections.",
            "schema": {
              "type": "string",
              "enum": [
                "products",
                "brands",
                "collections"
              ]
            },
            "required": true,
            "examples": {
              "success": {
                "value": "products"
              },
              "failure": {
                "value": "brands"
              }
            }
          },
          {
            "in": "path",
            "name": "collection_id",
            "description": "The ID of the collection type.",
            "schema": {
              "type": "string"
            },
            "required": true,
            "examples": {
              "success": {
                "value": "1"
              },
              "failure": {
                "value": 100
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a response object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FollowPostResponseSchema"
                },
                "examples": {
                  "success": {
                    "value": {
                      "message": "Brands Added To Wishlist",
                      "id": "1"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bad request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                },
                "examples": {
                  "failure": {
                    "value": {
                      "code": 404,
                      "message": "Collection not found",
                      "errors": {
                        "message": "The provided collection type or collection ID is invalid or does not exist."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Follow and Unfollow"
        ]
      }
    },
    "/service/application/catalog/v1.0/follow/{collection_type}/{collection_id}/count": {
      "get": {
        "summary": "getFollowerCountById | Retrieves follower count for an item.",
        "description": "Get the total number of followers for a specific item by its ID.",
        "tags": [
          "Catalog"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection_type",
            "description": "Type of collection, i.e. products, brands, or collections.",
            "schema": {
              "type": "string",
              "enum": [
                "products",
                "brands",
                "collections"
              ]
            },
            "required": true,
            "examples": {
              "success": {
                "value": "products"
              },
              "failure": {
                "value": "test"
              }
            }
          },
          {
            "in": "path",
            "name": "collection_id",
            "description": "The ID of the collection type.",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "examples": {
              "success": {
                "value": 1
              },
              "failure": {
                "value": 99
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns the number of followers for a given collection type.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FollowerCountResponseSchema"
                },
                "example": {
                  "count": 0
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                },
                "examples": {
                  "failure": {
                    "value": {
                      "code": 400,
                      "message": "Invalid Request",
                      "errors": {
                        "message": "Invalid Request"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Follow and Unfollow"
        ]
      }
    },
    "/service/application/catalog/v1.0/follow/ids": {
      "get": {
        "summary": "getFollowIds | Fetches IDs of followed items.",
        "description": "Get the IDs of all items the user is currently following, such as Products, Brands, and Collections.",
        "tags": [
          "Catalog"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "collection_type",
            "description": "Type of collection, i.e. products, brands, collections.",
            "schema": {
              "type": "string",
              "enum": [
                "products",
                "brands",
                "collections"
              ]
            },
            "required": false,
            "examples": {
              "success": {
                "value": "products"
              },
              "failure": {
                "value": "test"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns the IDs of all the Products, Brands and Collections which were followed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FollowIdsResponseSchema"
                },
                "examples": {
                  "success": {
                    "value": {
                      "data": {
                        "products": [
                          1,
                          15,
                          14,
                          13,
                          12,
                          11,
                          10,
                          9,
                          8,
                          7,
                          6,
                          5,
                          4,
                          3,
                          2
                        ],
                        "brands": [
                          1
                        ],
                        "collections": []
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "x-groups": [
          "Follow and Unfollow"
        ]
      }
    },
    "/service/application/catalog/v2.0/locations": {
      "get": {
        "summary": "getStores | Get store meta information.",
        "description": "List all stores associated with the sales channel.",
        "tags": [
          "Catalog"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page_no",
            "description": "The page number to navigate through the given set of results.",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "required": false,
            "examples": {
              "success": {
                "value": 1
              },
              "failure": {
                "value": 1
              }
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "Number of items to retrieve in each page.",
            "schema": {
              "type": "integer",
              "default": 12
            },
            "examples": {
              "success": {
                "value": 12
              },
              "failure": {
                "value": 1
              }
            },
            "required": false
          },
          {
            "in": "query",
            "name": "q",
            "description": "Search a store by its name or store_code.",
            "schema": {
              "type": "string"
            },
            "required": false,
            "examples": {
              "success": {
                "value": "Zachary-Waller"
              },
              "failure": {
                "value": "test"
              }
            }
          },
          {
            "in": "query",
            "name": "city",
            "description": "Search stores by the city in which they are situated.",
            "schema": {
              "type": "string"
            },
            "required": false,
            "examples": {
              "success": {
                "value": "mumbai"
              },
              "failure": {
                "value": "test-city"
              }
            }
          },
          {
            "in": "query",
            "name": "range",
            "description": "Use this to retrieve stores within a particular range in meters, e.g. 10000, to indicate a 10km range.",
            "schema": {
              "type": "integer",
              "default": 20000
            },
            "required": false,
            "examples": {
              "success": {
                "value": 20000
              },
              "failure": {
                "value": 10
              }
            }
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude of the location from where one wants to retrieve the nearest stores, e.g. 72.8691788.",
            "schema": {
              "type": "number"
            },
            "required": false,
            "examples": {
              "success": {
                "value": 72.915978
              },
              "failure": {
                "value": 10.915978
              }
            }
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude of the location from where one wants to retrieve the nearest stores, e.g. 19.1174114.",
            "schema": {
              "type": "number"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "tags",
            "description": "Search stores based on tags.",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a list of selling locations.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreListingResponseSchema"
                },
                "examples": {
                  "success": {
                    "value": {
                      "items": [
                        {}
                      ],
                      "page": {
                        "type": "number",
                        "current": 1,
                        "total": 1,
                        "has_previous": false,
                        "has_next": false,
                        "item_total": 1
                      },
                      "data": [
                        {
                          "pincode": 400059,
                          "city": "MUMBAI",
                          "state": "MAHARASHTRA",
                          "country": "INDIA",
                          "address": "SHOPSENSE RETAIL TECHNOLOGIES PRIVATE LIMITED 1ST FLOOR WEWORK VIJAY DIAMOND, CROSS RD B, AJIT NAGAR,",
                          "store_email": "ASHISHCHANDORKAR@FYND.COM",
                          "lat_long": {
                            "type": "Point",
                            "coordinates": [
                              72.8691788,
                              19.1174114
                            ]
                          },
                          "name": "RRL01",
                          "store_code": "WH_8513",
                          "uid": 1
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Selling Location"
        ]
      }
    },
    "/service/application/catalog/v2.0/in-stock/locations": {
      "get": {
        "summary": "getInStockLocations | Get store meta information.",
        "description": "List stores where specified products are currently in stock.",
        "tags": [
          "Catalog"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page_no",
            "description": "The page number to navigate through the given set of results.",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "required": false,
            "examples": {
              "success": {
                "value": 1
              },
              "failure": {
                "value": 1
              }
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "Number of items to retrieve in each page.",
            "schema": {
              "type": "integer",
              "default": 12
            },
            "required": false,
            "examples": {
              "success": {
                "value": 12
              },
              "failure": {
                "value": 12
              }
            }
          },
          {
            "in": "query",
            "name": "q",
            "description": "Search a store by its name or store_code.",
            "schema": {
              "type": "string"
            },
            "required": false,
            "examples": {
              "success": {
                "value": "Zachary-Waller"
              },
              "failure": {
                "value": "test"
              }
            }
          },
          {
            "in": "query",
            "name": "city",
            "description": "Search stores by the city in which they are situated.",
            "schema": {
              "type": "string"
            },
            "required": false,
            "examples": {
              "success": {
                "value": "mumbai"
              },
              "failure": {
                "value": "test-city"
              }
            }
          },
          {
            "in": "query",
            "name": "range",
            "description": "Use this to retrieve stores within a particular range in meters, e.g. 10000, to indicate a 10km range.",
            "schema": {
              "type": "integer",
              "default": 20000
            },
            "required": false,
            "examples": {
              "success": {
                "value": 20
              },
              "failure": {
                "value": 100000
              }
            }
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude of the location from where one wants to retrieve the nearest stores, e.g. 72.8691788.",
            "schema": {
              "type": "number"
            },
            "required": false,
            "examples": {
              "success": {
                "value": 72.9159784
              },
              "failure": {
                "value": 72.9159784
              }
            }
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude of the location from where one wants to retrieve the nearest stores, e.g. 19.1174114.",
            "schema": {
              "type": "number"
            },
            "required": false,
            "examples": {
              "success": {
                "value": 19.0990231
              },
              "failure": {
                "value": 19.0990231
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a list of selling locations.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationStoreListing"
                },
                "examples": {
                  "success": {
                    "value": {
                      "page": {
                        "current": 1,
                        "type": "number",
                        "total": 1,
                        "has_previous": false,
                        "has_next": false,
                        "item_total": 5
                      },
                      "items": [
                        {
                          "uid": 1,
                          "_custom_json": {},
                          "additional_contacts": [
                            {
                              "country_code": 91,
                              "number": "9594495254"
                            }
                          ],
                          "address": {
                            "lat_long": {
                              "type": "Point",
                              "coordinates": [
                                72.809786,
                                19.138787
                              ]
                            },
                            "city": "MUMBAI",
                            "pincode": "400061",
                            "state": "MAHARASHTRA",
                            "country": "INDIA",
                            "landmark": "",
                            "address2": "",
                            "address1": "YARI ROAD, ANDHERI WEST"
                          },
                          "auto_invoice": false,
                          "credit_note": false,
                          "gst_credentials": {
                            "e_invoice": {
                              "enabled": false
                            },
                            "e_waybill": {
                              "enabled": false
                            }
                          },
                          "product_return_config": {
                            "on_same_store": true
                          },
                          "avg_order_processing_time": {
                            "duration": 23,
                            "duration_type": "hours"
                          },
                          "bulk_shipment": false,
                          "default_order_acceptance_timing": false,
                          "company": {
                            "company_type": "manufacturer-owner",
                            "business_type": "ltd/pvt ltd",
                            "name": "Reliance Digital P. Ltd",
                            "uid": 1
                          },
                          "company_id": 1,
                          "display_name": "Reliance Digital P. Ltd",
                          "manager": {
                            "mobile_no": {
                              "country_code": 91,
                              "number": "9594495254"
                            },
                            "name": "Fahim Sakri",
                            "email": "fahimsakri@gmail.com"
                          },
                          "name": "Reliance Digital P. Ltd",
                          "store_code": "HS-52b69",
                          "store_type": "high_street",
                          "departments": [
                            {
                              "priority_order": 7,
                              "name": "Baby Care & Kids Essentials",
                              "uid": 7,
                              "logo": {
                                "type": "image",
                                "url": "https://hdn-1.fynd.com/media/category_tab_icons/department/Babycareandkidsessential.png"
                              },
                              "is_active": true,
                              "slug": "baby-care-kids-essentials"
                            },
                            {
                              "priority_order": 9,
                              "name": "Industrial Supplies",
                              "uid": 11,
                              "logo": {
                                "type": "image",
                                "url": "https://hdn-1.fynd.com/media/logo/department/original/15483_a8803bf3fc244c748180588166df82da.jpg"
                              },
                              "is_active": true,
                              "slug": "industrial-supplies"
                            },
                            {
                              "priority_order": 10,
                              "name": "Electricals",
                              "uid": 14,
                              "logo": {
                                "type": "image",
                                "url": "https://hdn-1.fynd.com/department/pictures/square-logo/original/M93qfyuh1-https:hdn-1.fynd.commedialogodepartmentoriginal17588_44516b7413fd4a4a858556857aa0c4c8.jpg.jpeg"
                              },
                              "is_active": true,
                              "slug": "electricals"
                            },
                            {
                              "priority_order": 1,
                              "name": "Fashion",
                              "uid": 21,
                              "logo": {
                                "type": "image",
                                "url": "https://hdn-1.fynd.com/department/pictures/square-logo/original/jSt0jjI7D-https/hdn-1.fynd.com/department/pictures/square-logo/original/6ouiCBSSn-https/hdn-1.fynd.com/department/pictures/square-logo/original/o2Rti5if7-.jpeg.jpeg.jpeg"
                              },
                              "is_active": true,
                              "slug": "fashion"
                            },
                            {
                              "slug": "automobile",
                              "is_active": true,
                              "logo": {
                                "type": "image",
                                "url": "https://hdn-1.addsale.com/x0/department/pictures/square-logo/original/kRhYFHWZ5-.jpeg"
                              },
                              "name": "AUTOMOBILE",
                              "uid": 24,
                              "priority_order": 1
                            }
                          ],
                          "filters": [
                            {
                              "name": "Fashion",
                              "is_active": true,
                              "priority_order": 1,
                              "logo": "/department/pictures/square-logo/original/FpGKlnVrH-department.png",
                              "slug": "fashion",
                              "uid": 21
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Selling Location"
        ]
      }
    },
    "/service/application/catalog/v2.0/locations/{location_id}": {
      "get": {
        "summary": "getLocationDetailsById | Get store meta information.",
        "description": "Get details about a store based on its location Id.",
        "tags": [
          "Catalog"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "Unique Location ID.",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "examples": {
              "success": {
                "value": 1
              },
              "failure": {
                "value": 213123
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a metadata object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreDetails"
                },
                "examples": {
                  "success": {
                    "value": {
                      "uid": 1,
                      "_custom_json": {},
                      "additional_contacts": [
                        {
                          "country_code": 91,
                          "number": "9594495254"
                        }
                      ],
                      "address": {
                        "lat_long": {
                          "type": "Point",
                          "coordinates": [
                            72.809786,
                            19.138787
                          ]
                        },
                        "city": "MUMBAI",
                        "pincode": "400061",
                        "state": "MAHARASHTRA",
                        "country": "INDIA",
                        "landmark": "",
                        "address2": "",
                        "address1": "YARI ROAD, ANDHERI WEST"
                      },
                      "company_id": 1,
                      "display_name": "Reliance Digital P. Ltd",
                      "manager": {
                        "mobile_no": {
                          "country_code": 91,
                          "number": "9594495254"
                        },
                        "name": "Fahim Sakri",
                        "email": "fahimsakri@gmail.com"
                      },
                      "name": "Reliance Digital P. Ltd",
                      "store_code": "HS-52b69",
                      "store_type": "high_street",
                      "auto_invoice": false,
                      "credit_note": false,
                      "gst_credentials": {
                        "e_invoice": {
                          "enabled": false
                        },
                        "e_waybill": {
                          "enabled": false
                        }
                      },
                      "product_return_config": {
                        "on_same_store": true
                      },
                      "avg_order_processing_time": {
                        "duration": 23,
                        "duration_type": "hours"
                      },
                      "bulk_shipment": false,
                      "default_order_acceptance_timing": false,
                      "timing": [
                        {
                          "weekday": "monday",
                          "open": true,
                          "closing": {
                            "minute": 30,
                            "hour": 21
                          },
                          "opening": {
                            "minute": 0,
                            "hour": 11
                          }
                        },
                        {
                          "weekday": "tuesday",
                          "open": true,
                          "closing": {
                            "minute": 30,
                            "hour": 21
                          },
                          "opening": {
                            "minute": 0,
                            "hour": 11
                          }
                        },
                        {
                          "weekday": "wednesday",
                          "open": true,
                          "closing": {
                            "minute": 30,
                            "hour": 21
                          },
                          "opening": {
                            "minute": 0,
                            "hour": 11
                          }
                        },
                        {
                          "weekday": "thursday",
                          "open": true,
                          "closing": {
                            "minute": 30,
                            "hour": 21
                          },
                          "opening": {
                            "minute": 0,
                            "hour": 11
                          }
                        },
                        {
                          "weekday": "friday",
                          "open": true,
                          "closing": {
                            "minute": 30,
                            "hour": 21
                          },
                          "opening": {
                            "minute": 0,
                            "hour": 11
                          }
                        },
                        {
                          "weekday": "saturday",
                          "open": true,
                          "closing": {
                            "minute": 30,
                            "hour": 21
                          },
                          "opening": {
                            "minute": 0,
                            "hour": 11
                          }
                        },
                        {
                          "weekday": "sunday",
                          "open": true,
                          "closing": {
                            "minute": 30,
                            "hour": 21
                          },
                          "opening": {
                            "minute": 0,
                            "hour": 11
                          }
                        }
                      ],
                      "company": {
                        "company_type": "mbo",
                        "business_type": "ltd/pvt ltd",
                        "name": "Reliance Digital P. Ltd1234789123",
                        "uid": 1
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                },
                "examples": {
                  "failure": {
                    "value": {
                      "code": 400,
                      "message": "Product with given slug does not exist",
                      "errors": {
                        "message": "Product with given slug does not exist"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Selling Location"
        ]
      }
    },
    "/service/application/catalog/v2.0/product-grouping": {
      "get": {
        "summary": "getProductBundlesBySlug | Fetches product bundles by slug.",
        "description": "Get products bundles to the one specified by its slug.",
        "tags": [
          "Catalog"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "slug",
            "description": "Product slug for which bundles need to be fetched.",
            "schema": {
              "type": "string"
            },
            "required": false,
            "examples": {
              "success": {
                "value": "facilitate-value-added-infrastructures"
              },
              "failure": {
                "value": "test"
              }
            }
          },
          {
            "in": "query",
            "name": "id",
            "description": "Product uid.",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "examples": {
              "success": {
                "value": 1
              },
              "failure": {
                "value": 100
              }
            }
          },
          {
            "in": "query",
            "name": "size",
            "description": "specific size of the parent product",
            "schema": {
              "type": "string"
            },
            "required": false,
            "examples": {
              "success": {
                "value": "OS"
              }
            }
          },
          {
            "in": "query",
            "name": "seller_id",
            "description": "company id of the seller",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "examples": {
              "success": {
                "value": 1
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a group of products bundle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductBundle"
                },
                "examples": {
                  "success": {
                    "value": {
                      "items": [
                        {
                          "company_id": 1,
                          "page_visibility": [],
                          "name": "Test bundle",
                          "choice": "multi",
                          "same_store_assignment": true,
                          "slug": "test-bundle",
                          "logo": null,
                          "is_active": true,
                          "meta": {},
                          "created_on": "2020-05-21T03:58:41.237000Z",
                          "modified_on": "2020-05-21T03:58:41.237000Z",
                          "auto_select": true,
                          "allow_removal": true,
                          "auto_add_to_cart": true,
                          "prefer_single_shipment": true,
                          "allow_individual_return": true,
                          "allow_individual_cancel": true,
                          "products": [
                            {
                              "product_uid": 7502119,
                              "min_quantity": 1,
                              "product_details": {
                                "name": "Neopack WSLTBR42 42 & 44 mm Leather Strap, Brown",
                                "out_of_stock": false,
                                "is_set": false,
                                "identifier": {
                                  "sku_code": [
                                    "491667188"
                                  ]
                                },
                                "country_of_origin": "India",
                                "media": [
                                  {
                                    "type": "image",
                                    "url": "https://hdn-1.jiox0.de/jiox5/products/pictures/item/free/original/G8moRC9NMj-neopack-wsltbr42-smart-watch-bands-491667188-i-1-1200wx1200h.jpeg"
                                  },
                                  {
                                    "type": "image",
                                    "url": "https://hdn-1.jiox0.de/jiox5/products/pictures/item/free/original/3Xumb2A0tV-neopack-wsltbr42-smart-watch-bands-491667188-i-2-1200wx1200h.jpeg"
                                  },
                                  {
                                    "type": "image",
                                    "url": "https://hdn-1.jiox0.de/jiox5/products/pictures/item/free/original/ZOnlihkNUS-neopack-wsltbr42-smart-watch-bands-491667188-i-3-1200wx1200h.jpeg"
                                  },
                                  {
                                    "type": "image",
                                    "url": "https://hdn-1.jiox0.de/jiox5/products/pictures/item/free/original/mu9B2afklQ-neopack-wsltbr42-smart-watch-bands-491667188-i-4-1200wx1200h.jpeg"
                                  }
                                ],
                                "template_tag": "health-care",
                                "description": "Personalize your Apple Watch with this Classic and fashionable Neopack WSLTBR42 Leather Strap that fits your different mood and outfits in daily life & any occasion. It is a Perfect Replacement for original straps and is fully adjustable so that it can be adjusted and fit perfectly. The wrist strap is made of genuine calf leather and includes Space Grey Adapter and buckle.",
                                "images": [
                                  "https://hdn-1.jiox0.de/jiox5/products/pictures/item/free/original/G8moRC9NMj-neopack-wsltbr42-smart-watch-bands-491667188-i-1-1200wx1200h.jpeg",
                                  "https://hdn-1.jiox0.de/jiox5/products/pictures/item/free/original/3Xumb2A0tV-neopack-wsltbr42-smart-watch-bands-491667188-i-2-1200wx1200h.jpeg",
                                  "https://hdn-1.jiox0.de/jiox5/products/pictures/item/free/original/ZOnlihkNUS-neopack-wsltbr42-smart-watch-bands-491667188-i-3-1200wx1200h.jpeg",
                                  "https://hdn-1.jiox0.de/jiox5/products/pictures/item/free/original/mu9B2afklQ-neopack-wsltbr42-smart-watch-bands-491667188-i-4-1200wx1200h.jpeg"
                                ],
                                "attributes": {
                                  "color": "Brown",
                                  "model": "WSLTBR42",
                                  "action": "upsert",
                                  "warranty": "1 Year",
                                  "product_details": "Personalize your Apple Watch with this Classic and fashionable Neopack WSLTBR42 Leather Strap that fits your different mood and outfits in daily life & any occasion. It is a Perfect Replacement for original straps and is fully adjustable so that it can be adjusted and fit perfectly. The wrist strap is made of genuine calf leather and includes Space Grey Adapter and buckle.",
                                  "brand_name": "Neopack",
                                  "primary_color_hex": "8B572A"
                                },
                                "hsn_code": 91130000,
                                "image_nature": "standard",
                                "slug": "neopack-wsltbr42-42-and-44-mm-leather-strap-brown",
                                "brand_uid": 90,
                                "item_code": "491667188"
                              },
                              "price": {
                                "selling": 4999,
                                "marked\"": 5000,
                                "effective": 4999,
                                "currency": "INR"
                              },
                              "sizes": [
                                {
                                  "value": "OS",
                                  "is_available": true,
                                  "quantity": 30000,
                                  "display": "OS"
                                }
                              ],
                              "max_quantity": 1
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bad request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "x-groups": [
          "Product"
        ]
      }
    },
    "/service/application/catalog/v1.0/products/sizes/price": {
      "post": {
        "summary": "getProductPriceBySlug | get size price for multiple products",
        "description": "Get the price of a product size at all the selling locations near to a PIN Code.",
        "requestBody": {
          "description": "Items and associated group items",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSizePriceV1RequestSchema"
              },
              "examples": {
                "success": {
                  "value": {
                    "items": [
                      {
                        "slug": "test_product",
                        "size": "XL",
                        "parent_slug": "test_product_parent",
                        "product_grouping_id": "666ad44a68adbde2c7a9a0"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "success1": {
                    "value": {
                      "items": [
                        {
                          "price_per_piece": {
                            "effective": 66.5,
                            "marked": 66.5,
                            "currency_code": "INR",
                            "currency_symbol": "₹"
                          },
                          "price": {
                            "effective": 399,
                            "marked": 399,
                            "currency_code": "INR",
                            "currency_symbol": "₹"
                          },
                          "quantity": 5,
                          "pincode": "400603",
                          "article_id": "1",
                          "long_lat": [
                            72.9159784,
                            19.0990231
                          ],
                          "item_type": "set",
                          "discount": "",
                          "article_assignment": {
                            "level": "multi-companies",
                            "strategy": "optimal"
                          },
                          "seller": {
                            "uid": 1,
                            "name": "Natalie Norman",
                            "count": 2
                          },
                          "store": {
                            "uid": 1,
                            "name": "Wayne Lamb",
                            "count": 2
                          },
                          "strategy_wise_listing": [
                            {
                              "distance": 11,
                              "quantity": 5,
                              "tat": 2592000,
                              "pincode": "400603"
                            },
                            {
                              "distance": 11,
                              "quantity": 5,
                              "tat": 2592000,
                              "pincode": "400603"
                            }
                          ],
                          "set": {
                            "size_distribution": {
                              "sizes": [
                                {
                                  "size": "5",
                                  "pieces": 1
                                },
                                {
                                  "size": "7",
                                  "pieces": 1
                                },
                                {
                                  "size": "8",
                                  "pieces": 2
                                },
                                {
                                  "size": "9",
                                  "pieces": 1
                                },
                                {
                                  "size": "10",
                                  "pieces": 1
                                }
                              ]
                            },
                            "quantity": 6,
                            "is_gift": true,
                            "is_cod": false,
                            "delivery_promise": {
                              "min": "2023-08-03T18:19:23",
                              "max": "2023-08-04T14:19:23"
                            },
                            "product_name": "Updated Product Name"
                          }
                        }
                      ]
                    }
                  },
                  "success2": {
                    "value": {
                      "items": [
                        {
                          "error": "Out of Stock",
                          "slug": "shilpi-handcarved-wooden-room-divider-panels-nshc022-7571994-7565049",
                          "size": "REGULAR"
                        },
                        {
                          "price_per_piece": {
                            "effective": 4510,
                            "marked": 5500,
                            "selling": 4510,
                            "currency_code": "INR",
                            "currency_symbol": "₹"
                          },
                          "price_per_unit": {
                            "price": 4510,
                            "currency_code": "INR",
                            "currency_symbol": "₹",
                            "unit": "nos"
                          },
                          "price": {
                            "effective": 4510,
                            "marked": 5500,
                            "selling": 4510,
                            "currency_code": "INR",
                            "currency_symbol": "₹"
                          },
                          "quantity": 3,
                          "article_id": "86_STGABCF33WA33965",
                          "grouped_attributes": [],
                          "marketplace_attributes": [
                            {
                              "title": "Other Details",
                              "details": [
                                {
                                  "key": "MRP",
                                  "type": "text",
                                  "value": "₹5,500.00 inclusive of all taxes"
                                },
                                {
                                  "key": "Dimension",
                                  "type": "text",
                                  "value": "43.942 x 43.434 x 88.9 cm"
                                }
                              ]
                            }
                          ],
                          "long_lat": [
                            77.41411036,
                            12.78211907
                          ],
                          "item_type": "standard",
                          "discount": "18% OFF",
                          "article_assignment": {
                            "level": "multi-companies",
                            "strategy": "optimal"
                          },
                          "seller": {
                            "uid": 57,
                            "name": "Urban Ladder",
                            "count": 1
                          },
                          "store": {
                            "uid": 86,
                            "name": "Bidadi_FC",
                            "count": 1
                          },
                          "strategy_wise_listing": [
                            {
                              "distance": 0,
                              "quantity": 3,
                              "tat": 0,
                              "pincode": "562109"
                            }
                          ],
                          "return_config": {
                            "unit": "days",
                            "time": 0,
                            "returnable": false
                          },
                          "trader": [],
                          "_custom_json": {},
                          "is_gift": false,
                          "is_cod": true,
                          "tags": [],
                          "product_name": "Karm Coffee Table",
                          "discount_meta": {},
                          "pincode": "562109",
                          "is_serviceable": true,
                          "size": "REGULAR",
                          "slug": "karm-coffee-table-7530688"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ProductSizePriceResponseV1"
                }
              }
            },
            "description": "List of Size Price Object refer ProductSizePriceResponseV3 object"
          },
          "400": {
            "description": "Bad request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                },
                "examples": {
                  "failure": {
                    "value": {
                      "code": 400,
                      "message": "Invalid Request",
                      "errors": {
                        "message": "Invalid Request"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Catalog"
        ],
        "x-groups": [
          "Product"
        ]
      }
    },
    "/service/application/catalog/v4.0/products/{slug}/sizes/{size}/sellers": {
      "get": {
        "summary": "getProductSellersBySlug | Get the sellers of a product size at a PIN Code",
        "description": "List all sellers offering a specific product identified by its slug and size.",
        "tags": [
          "Catalog"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "description": "A short, human-readable, URL-friendly identifier of a product. You can get slug value from the endpoint /service/application/catalog/v1.0/products/.",
            "schema": {
              "type": "string"
            },
            "required": true,
            "examples": {
              "success": {
                "value": "facilitate-value-added-infrastructures"
              },
              "failure": {
                "value": "test"
              }
            }
          },
          {
            "in": "path",
            "name": "size",
            "description": "A string indicating the size of the product, e.g. S, M, XL. You can get slug value from the endpoint /service/application/catalog/v1.0/products/sizes.",
            "schema": {
              "type": "string"
            },
            "required": true,
            "examples": {
              "success": {
                "value": "13"
              },
              "failure": {
                "value": "test-size"
              }
            }
          },
          {
            "in": "query",
            "name": "pincode",
            "description": "The 6-digit PIN Code of the area near which the selling locations should be searched, e.g. 400059",
            "schema": {
              "type": "string"
            },
            "required": false,
            "examples": {
              "success": {
                "value": "400603"
              },
              "failure": {
                "value": "000000"
              }
            }
          },
          {
            "in": "query",
            "name": "strategy",
            "description": "Sort stores on the basis of strategy. eg, fast-delivery, low-price, optimal.",
            "schema": {
              "type": "string",
              "enum": [
                "fast-delivery",
                "low-price",
                "optimal"
              ]
            },
            "examples": {
              "success": {
                "value": "optimal"
              },
              "failure": {
                "value": "optimal"
              }
            }
          },
          {
            "in": "query",
            "name": "page_no",
            "description": "The page number to navigate through the given set of results.",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "required": false,
            "examples": {
              "success": {
                "value": 1
              },
              "failure": {
                "value": 1
              }
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of items to retrieve in each page.",
            "schema": {
              "type": "integer",
              "default": 12
            },
            "required": false,
            "examples": {
              "success": {
                "value": 12
              },
              "failure": {
                "value": 12
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a ProductSizeSellerV3 object. Check the example shown below or refer `ProductSizeSellersResponseV4` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSizeSellersResponseV4"
                },
                "examples": {
                  "success": {
                    "value": {
                      "items": [
                        {
                          "price_per_piece": {
                            "effective": 66.5,
                            "marked": 66.5,
                            "currency_code": "INR",
                            "currency_symbol": "₹"
                          },
                          "price": {
                            "effective": 399,
                            "marked": 399,
                            "currency_code": "INR",
                            "currency_symbol": "₹"
                          },
                          "quantity": 5,
                          "marketplace_attributes": [],
                          "pincode": "400603",
                          "article_id": "1",
                          "discount": "",
                          "article_assignment": {
                            "level": "single-company",
                            "strategy": "optimal"
                          },
                          "seller": {
                            "uid": 1,
                            "name": "Natalie Norman"
                          },
                          "store": {
                            "uid": 1,
                            "name": "Wayne Lamb"
                          },
                          "is_gift": true,
                          "is_cod": false
                        },
                        {
                          "price_per_piece": {
                            "effective": 66.5,
                            "marked": 66.5,
                            "currency_code": "INR",
                            "currency_symbol": "₹"
                          },
                          "price": {
                            "effective": 399,
                            "marked": 399,
                            "currency_code": "INR",
                            "currency_symbol": "₹"
                          },
                          "quantity": 5,
                          "marketplace_attributes": [],
                          "pincode": "400603",
                          "article_id": "2",
                          "discount": "",
                          "article_assignment": {
                            "level": "single-company",
                            "strategy": "optimal"
                          },
                          "seller": {
                            "uid": 1,
                            "name": "Natalie Norman"
                          },
                          "store": {
                            "uid": 1,
                            "name": "Wayne Lamb"
                          },
                          "is_gift": true,
                          "is_cod": false
                        }
                      ],
                      "page": {
                        "current": 1,
                        "total": 1,
                        "has_previous": false,
                        "has_next": false,
                        "item_total": 2,
                        "type": "number"
                      },
                      "sort_on": [
                        {
                          "default": true,
                          "is_selected": true,
                          "name": "Best price & fast delivery",
                          "value": "optimal"
                        },
                        {
                          "default": false,
                          "is_selected": false,
                          "name": "Best Price",
                          "value": "low-price"
                        },
                        {
                          "default": false,
                          "is_selected": false,
                          "name": "Fastest Delivery",
                          "value": "fast-delivery"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotServiceableError"
                },
                "examples": {
                  "failure": {
                    "value": {
                      "code": "400",
                      "message": "Product Not Serviceable at given locality",
                      "errors": {
                        "message": "Product Not Serviceable at given locality"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Product"
        ]
      }
    },
    "/service/common/configuration/v1.0/application/search-application": {
      "get": {
        "description": "Get an active sales channel based on a provided query. The query can be a valid sales channel ID or a verified domain name. If the sales channel is found, a success response is returned. If not, a 404 error response is returned.",
        "summary": "searchApplication | Searches through applications.",
        "x-documentation": false,
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "schema": {
              "type": "string"
            },
            "description": "Basic auth string to access the api endpoint."
          },
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            },
            "description": "Provide application name."
          }
        ],
        "tags": [
          "Common"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationResponseSchema"
                },
                "example": {
                  "application": {
                    "website": {
                      "enabled": true,
                      "basepath": "/"
                    },
                    "cors": {
                      "domains": []
                    },
                    "auth": {
                      "enabled": true
                    },
                    "description": "test",
                    "channel_type": "store",
                    "cache_ttl": -1,
                    "internal": false,
                    "is_active": true,
                    "mode": "live",
                    "_id": "620b931ee7bfb11f910bf4a3",
                    "company_id": 2,
                    "name": "test",
                    "owner": "5b9b98150df588546aaea6d2",
                    "logo": {
                      "secure_url": "https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png"
                    },
                    "favicon": {
                      "secure_url": "https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png"
                    },
                    "banner": {
                      "secure_url": "https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png"
                    },
                    "token": "tPQv0nc23",
                    "tokens": [
                      {
                        "token": "tPQv0nc23",
                        "created_at": "2022-02-15T11:48:46.90900Z"
                      }
                    ],
                    "domains": [
                      {
                        "verified": true,
                        "is_primary": true,
                        "is_shortlink": true,
                        "_id": "620b931ee7bfb11f910bf4a4",
                        "name": "qckvv5lhp.hostfynd.dev"
                      }
                    ],
                    "redirections": [],
                    "meta": [],
                    "created_at": "2022-02-15T11:48:46.90900Z",
                    "modified_at": "2022-02-15T11:48:46.90900Z",
                    "__v": 0,
                    "domain": {
                      "verified": true,
                      "is_primary": true,
                      "is_shortlink": true,
                      "_id": "620b931ee7bfb11f910bf4a4",
                      "name": "qckvv5lhp.hostfynd.dev"
                    },
                    "id": "620b931ee7bfb11f910bf4a3"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestSchema"
                },
                "example": {
                  "value": {
                    "message": "Invalid application domain or id."
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "value": {
                    "message": "No application found"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Application search"
        ]
      }
    },
    "/service/common/configuration/v1.0/location": {
      "get": {
        "tags": [
          "Common"
        ],
        "summary": "getLocations | Fetches available locations.",
        "description": "Get countries , state , cities data associated with the sales channel.",
        "x-documentation": false,
        "parameters": [
          {
            "in": "query",
            "name": "location_type",
            "schema": {
              "type": "string",
              "enum": [
                "country",
                "state",
                "city"
              ]
            },
            "description": "Provide location type to query on. Possible values : country, state, city."
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Locations"
                }
              }
            }
          }
        },
        "x-groups": [
          "Location Information"
        ]
      }
    },
    "/service/application/communication/v1.0/consent": {
      "get": {
        "description": "Get the consent provided by the user for receiving communication.",
        "summary": "getCommunicationConsent | Retrieves communication consent status.",
        "tags": [
          "Communication"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success. Returns all available communication opt-ins along with the consent details. Check the example shown below or refer `CommunicationConsent` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommunicationConsent"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/CommunicationConsent"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Communication Consent"
        ]
      },
      "post": {
        "description": "Update or insert the consent provided by the user for receiving communication messages.",
        "summary": "upsertCommunicationConsent | Updates or inserts consent settings.",
        "tags": [
          "Communication"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Pass the response (yes/no), action (optin) and channel (sms/email/whatsapp) in the response body as shown below.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommunicationConsentReq"
              },
              "examples": {
                "success": {
                  "$ref": "#/components/examples/CommunicationConsentReq"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Updates the channels for which user has consented. Check the example shown below or refer `CommunicationConsentRes` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommunicationConsentRes"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/CommunicationConsentRes"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Communication Consent"
        ]
      }
    },
    "/service/application/communication/v1.0/current/communication/consent": {
      "get": {
        "description": "Retrieve the consent provided by the user for receiving communication messages over Email/SMS/WhatsApp. .",
        "summary": "getCurrentCommunicationConsent | Retrieves communication consent status.",
        "tags": [
          "Communication"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success. Returns all available communication opt-ins along with the consent details. Check the example shown below or refer `CommunicationConsent` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommunicationConsent"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/CommunicationConsent"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Communication Consent"
        ]
      },
      "post": {
        "description": "Update and insert the consent provided by the user for receiving communication messages over Email/SMS/WhatsApp. .",
        "summary": "upsertCurrentCommunicationConsent | Updates or inserts consent settings.",
        "tags": [
          "Communication"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Pass the response (yes/no), action (optin) and channel (sms/email/whatsapp) in the response body as shown below.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommunicationConsentReq"
              },
              "examples": {
                "success": {
                  "$ref": "#/components/examples/CommunicationConsentReq"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Updates the channels for which user has consented. Check the example shown below or refer `CommunicationConsentRes` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommunicationConsentRes"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/CommunicationConsentRes"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Communication Consent"
        ]
      }
    },
    "/service/application/communication/v1.0/otp/otp-configuration": {
      "get": {
        "description": "Get otp-configuration.",
        "summary": "getOtpConfiguration | Get otp-configuration, if not present in db then return default settings",
        "tags": [
          "Communication"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtpConfiguration"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/OtpConfiguration"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "OTP"
        ]
      }
    },
    "/service/application/configuration/v1.0/application": {
      "get": {
        "description": "Get details of the current sales channel.",
        "summary": "getApplication | Fetches application details.",
        "tags": [
          "Configuration"
        ],
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `Application` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                },
                "examples": {
                  "success": {
                    "value": {
                      "website": {
                        "enabled": true,
                        "basepath": "/"
                      },
                      "cors": {
                        "domains": []
                      },
                      "auth": {
                        "enabled": false
                      },
                      "description": "Uniket B2B - India's Fastest Growing Retail Store - Aapki Badhti Dukaan",
                      "channel_type": "uniket",
                      "cache_ttl": -1,
                      "internal": false,
                      "is_active": true,
                      "_id": "000000000000000000000004",
                      "name": "Uniket B2B",
                      "owner": "5e71a60dc671daffd81992ea",
                      "company_id": 1,
                      "token": "iTNjY_yAI",
                      "redirections": [],
                      "meta": [],
                      "created_at": "2019-12-26T13:22:23.61900Z",
                      "modified_at": "2020-12-02T05:49:41.61000Z",
                      "__v": 29,
                      "banner": {
                        "secure_url": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/x1/company/1/applications/000000000000000000000004/application/pictures/landscape-banner/original/uSwlNpygq-Uniket-B2B.png"
                      },
                      "logo": {
                        "secure_url": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/x1/company/1/applications/000000000000000000000004/application/pictures/free-logo/original/oEf3SQjda-Uniket-B2B.png"
                      },
                      "favicon": {
                        "secure_url": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/x1/company/1/applications/000000000000000000000004/application/pictures/favicon/original/y3h6SSlY5-Uniket-B2B.png"
                      },
                      "domains": [
                        {
                          "verified": true,
                          "is_primary": true,
                          "is_shortlink": true,
                          "_id": "5eb1177748312a3bd55d0f1e",
                          "name": "uniket.hostx0.de"
                        },
                        {
                          "verified": true,
                          "is_primary": false,
                          "is_shortlink": false,
                          "_id": "5f0858c5f86e00cd42dccc8d",
                          "name": "jd.hostx0.de"
                        }
                      ],
                      "app_type": "live",
                      "mobile_logo": {
                        "secure_url": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/x1/company/1/applications/000000000000000000000004/application/pictures/free-logo/original/oEf3SQjda-Uniket-B2B.png"
                      },
                      "domain": {
                        "verified": true,
                        "is_primary": true,
                        "is_shortlink": true,
                        "_id": "5eb1177748312a3bd55d0f1e",
                        "name": "uniket.hostx0.de"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Invalid App Headers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "examples": {
                  "404": {
                    "value": {
                      "message": "App not found"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Application Information"
        ]
      }
    },
    "/service/application/configuration/v2.0/about": {
      "get": {
        "description": "Get details of the sales channel owner.",
        "summary": "getOwnerInfo | Get sales channel, owner and seller information",
        "tags": [
          "Configuration"
        ],
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `ApplicationAboutResponseSchema` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationAboutResponseSchema"
                },
                "examples": {
                  "success": {
                    "value": {
                      "application_info": {
                        "domains": [
                          {
                            "verified": true,
                            "name": "uniket-testing.addsale.link",
                            "custom": false,
                            "is_primary": true
                          }
                        ],
                        "website": {
                          "enabled": true,
                          "basepath": "/"
                        },
                        "cors": {
                          "domains": []
                        },
                        "description": "R-City Mall,Ghatkoper East,Mumbai",
                        "is_active": true,
                        "_id": "5cd3db5e9d692cfe5302a7ba",
                        "name": "Shivam Clothing Store",
                        "meta": [
                          {
                            "name": "tes",
                            "value": "test"
                          }
                        ],
                        "token": "xOfcP-aYE",
                        "secret": "",
                        "created_at": "2019-05-09T07:48:46.21800Z",
                        "banner": {
                          "secure_url": "https://res.cloudinary.com/jkvora/image/upload/v1561551809/fqt2djkddoe2yjjlln2h.png"
                        },
                        "logo": {
                          "secure_url": "https://res.cloudinary.com/dwzm9bysq/image/upload/v1577513094/addsale/applications/app_5cd3db5e9d692cfe5302a7ba/media/store/logo/ayrkk2uzfknst2ohluzc.png"
                        },
                        "company_info": {
                          "_id": "5da4274a723af4000188a66c",
                          "uid": 873,
                          "created_on": "2019-10-14T07:44:10.39100Z",
                          "is_active": true,
                          "name": "SAPPER LIFESTYLE PRIVATE LIMITED",
                          "addresses": [
                            {
                              "pincode": "110042",
                              "address1": "412, SISODIA MOHALLA BADALI VILLAGE",
                              "city": "NEW DELHI",
                              "state": "DELHI",
                              "country": "INDIA",
                              "address_type": "registered"
                            },
                            {
                              "pincode": "110042",
                              "address1": "412, SISODIA MOHALLA BADALI VILLAGE",
                              "city": "NEW DELHI",
                              "state": "DELHI",
                              "country": "INDIA",
                              "address_type": "office"
                            }
                          ],
                          "notification_emails": [
                            "ecom.sapperlifestyle@f2fretail.com"
                          ]
                        },
                        "owner_info": {
                          "_id": "5c77921fa1bf7d8695ed57fd",
                          "emails": [
                            {
                              "active": true,
                              "primary": true,
                              "verified": true,
                              "email": "abc@test.com"
                            },
                            {
                              "active": true,
                              "primary": false,
                              "verified": true,
                              "email": "abc@test.com"
                            },
                            {
                              "active": true,
                              "primary": false,
                              "verified": true,
                              "email": "abc@test.com"
                            }
                          ],
                          "phone_numbers": [
                            {
                              "active": true,
                              "primary": true,
                              "verified": true,
                              "country_code": 91,
                              "phone": "9408282323"
                            }
                          ],
                          "first_name": "Jalak",
                          "last_name": "Vora",
                          "profile_pic": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Application Information"
        ]
      }
    },
    "/service/application/configuration/v1.0/detail": {
      "get": {
        "tags": [
          "Configuration"
        ],
        "summary": "getBasicDetails | Retrieves basic app info.",
        "description": "Get basic details of the sales channel.",
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `ApplicationDetail` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationDetail"
                },
                "examples": {
                  "success": {
                    "value": {
                      "name": "Uniket B2B",
                      "description": "Uniket B2B - India's Fastest Growing Retail Store - Aapki Badhti Dukaan",
                      "logo": {
                        "secure_url": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/x1/company/1/applications/000000000000000000000004/application/pictures/free-logo/original/oEf3SQjda-Uniket-B2B.png"
                      },
                      "mobile_logo": {
                        "secure_url": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/x1/company/1/applications/000000000000000000000004/application/pictures/free-logo/original/oEf3SQjda-Uniket-B2B.png"
                      },
                      "favicon": {
                        "secure_url": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/x1/company/1/applications/000000000000000000000004/application/pictures/favicon/original/y3h6SSlY5-Uniket-B2B.png"
                      },
                      "banner": {
                        "secure_url": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/x1/company/1/applications/000000000000000000000004/application/pictures/landscape-banner/original/uSwlNpygq-Uniket-B2B.png"
                      },
                      "domain": {
                        "verified": true,
                        "is_primary": true,
                        "is_shortlink": false,
                        "_id": "5eb1177748312a3bd55d0f1e",
                        "name": "uniket.hostx0.de"
                      },
                      "domains": [
                        {
                          "verified": true,
                          "is_primary": true,
                          "is_shortlink": false,
                          "_id": "5eb1177748312a3bd55d0f1e",
                          "name": "uniket.hostx0.de"
                        },
                        {
                          "verified": true,
                          "is_primary": false,
                          "is_shortlink": true,
                          "_id": "5f0858c5f86e00cd42dccc8d",
                          "name": "jd.hostx0.de"
                        }
                      ],
                      "company_id": 1,
                      "_id": "000000000000000000000004"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Application Information"
        ]
      }
    },
    "/service/application/configuration/v1.0/token": {
      "get": {
        "description": "Get tools integration token of the sales channel. For example, Firebase, MoEngage, Segment, GTM, Freshchat, Safetynet, Google Map, and Facebook.",
        "summary": "getIntegrationTokens | Fetches API tokens.",
        "tags": [
          "Configuration"
        ],
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `AppTokenResponseSchema` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTokenResponseSchema"
                },
                "examples": {
                  "success": {
                    "value": {
                      "tokens": {
                        "firebase": {
                          "credentials": {
                            "project_id": "",
                            "gcm_sender_id": "",
                            "application_id": "",
                            "api_key": ""
                          },
                          "enabled": false
                        },
                        "moengage": {
                          "credentials": {
                            "app_id": ""
                          },
                          "enabled": false
                        },
                        "segment": {
                          "credentials": {
                            "write_key": "U2FsdGVkX18E920z+xtaD+GnGWoK/5SNxu61phXf6/o="
                          },
                          "enabled": false
                        },
                        "gtm": {
                          "credentials": {
                            "api_key": ""
                          },
                          "enabled": false
                        },
                        "freshchat": {
                          "credentials": {
                            "app_id": "U2FsdGVkX19+Egjfy8alIB4S+n2IQEXz2X4yxzimxbGzq9M5+iFsvGjrBAyQrDZ/iIXgWQyWOFRHmf9xhFGajQ==",
                            "app_key": "U2FsdGVkX18OydYSvUBRKJDsLD1KCcwK6+jJVGma4Ck2PVwOv6BW5vyiM2sZ4kEpHbRV38KBPZPqlx3EfZd6mw=="
                          },
                          "enabled": true
                        },
                        "safetynet": {
                          "credentials": {
                            "api_key": "U2FsdGVkX1/Ex0BXvB16B81dwWIfVK8LPwexMMbVC3/nB9Y5n4stcnOMUCDalDs8Z92MecOQKydWg+E17QfZ4Q=="
                          },
                          "enabled": true
                        },
                        "fynd_rewards": {
                          "credentials": {
                            "public_key": "U2FsdGVkX1/C7x0hybxKPpWSMYBEKukQCVjnm7wfW3lrTJPmcr06xvLzVatPQJTKXeXvay0rdvcXuHlp8n/VAX7v9Usobmp1znadnPWt07GOvq5aPK9zDlg05tb+TX8Wx0q2rVonRK0Q6ZyMcn6Oy+Z812TpRAlcU1AmSrDtl/PMjuH1rSRTxKJLD0HzXk9zPl2M6GOKmgzjpHD4ZmtRSfJmm/h+qbZZ4AuD9upTbJzDm/pcp4S4cYu9rSV31JpOtAkrCxZFzCT8seWKa2eU8VdleRltwF5DO1x8Pny/hKNmhrUqxdkevY6lm4aEQjThA/EeBv1UPq52EFDteXLsZ6yBXyNAxcFNuPupour+K8hi0nfgbd/fsFqu5NUBOwz0hsqQh9OsTGt7SdiIyMSQgCttphaqhBbJ926UlG9d/O1W1u+i9rn7pECcH1eyUYlsNbYqghciz9pTrfRdqA8AIa2j7H/3Lxq37arxZCIDlTgl+Kk/8QUTsTefk+seGZsyiDyIkxW+FcmHBZLr3y85ST23szWSnyweV2hQHtPWnCE="
                          }
                        },
                        "google_map": {
                          "enabled": true,
                          "credentials": {
                            "api_key": "U2FsdGVkX1+5tBH/3lREPiDwVukCS/Q2ftu/CYD9RdLYK8hGO/XJfrs2zpoGDKCJBhgTDRESItRKR7Lt/w+zeQ=="
                          }
                        }
                      },
                      "_id": "5e285cb1df7e5b1421d5f840",
                      "application": "000000000000000000000004",
                      "created_at": "2020-01-22T14:31:13.19200Z",
                      "modified_at": "2020-05-01T04:14:42.11700Z",
                      "__v": 0
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Application Information"
        ]
      }
    },
    "/service/application/configuration/v2.0/ordering-store/stores": {
      "get": {
        "description": "Get details of all the deployment store locations where the sales channel will be used for order placement.",
        "summary": "getOrderingStores | Get all deployment stores",
        "tags": [
          "Configuration"
        ],
        "parameters": [
          {
            "name": "page_no",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The page number to navigate through the given set of results. Default value is 1."
          },
          {
            "name": "page_size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The number of items to retrieve in each page. Default value is 10."
          },
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Store code or name of the ordering store.",
            "examples": {
              "success": {
                "value": "MRVLB01"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `OrderingStores` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderingStores"
                },
                "examples": {
                  "success": {
                    "value": {
                      "items": [
                        {
                          "uid": 1
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Invalid App Headers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "examples": {
                  "404": {
                    "value": {
                      "message": "No deployment meta found"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Application Information"
        ]
      }
    },
    "/service/application/configuration/v2.0/ordering-store/stores/{store_id}": {
      "get": {
        "description": "Get details of a selling location (store) by its ID.",
        "summary": "getStoreDetailById | Get ordering store details",
        "tags": [
          "Configuration"
        ],
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for a store.",
            "schema": {
              "type": "integer"
            },
            "examples": {
              "404": {
                "value": 990
              },
              "success": {
                "value": 1
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `OrderingStore` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderingStore"
                },
                "examples": {
                  "success": {
                    "value": {
                      "uid": 1,
                      "name": "THE MANDHANA PARK KAMLANAGAR DELHI",
                      "pincode": "110007",
                      "store_code": "MRVLB22",
                      "code": "MRVLB22",
                      "display_name": "Kamla Nagar",
                      "store_type": "mall"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "examples": {
                  "404": {
                    "value": {
                      "message": "Store not found"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Application Information"
        ]
      }
    },
    "/service/application/configuration/v1.0/feature": {
      "get": {
        "description": "Get configuration of the features of the sales channel.",
        "summary": "getFeatures | Fetches app features.",
        "tags": [
          "Configuration"
        ],
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `AppFeatureResponseSchema` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppFeatureResponseSchema"
                },
                "examples": {
                  "success": {
                    "value": {
                      "feature": {
                        "product_detail": {
                          "similar": [
                            "basic",
                            "visual",
                            "brand",
                            "category",
                            "seller",
                            "price",
                            "specs"
                          ],
                          "seller_selection": true,
                          "update_product_meta": true,
                          "request_product": true
                        },
                        "landing_page": {
                          "launch_page": {
                            "page_type": "home",
                            "params": {},
                            "query": {}
                          },
                          "continue_as_guest": true,
                          "login_btn_text": "Click here to sign-in",
                          "show_domain_textbox": true,
                          "show_register_btn": true
                        },
                        "registration_page": {
                          "ask_store_address": false
                        },
                        "home_page": {
                          "order_processing": true
                        },
                        "common": {
                          "communication_optin_dialog": {
                            "visibility": true
                          },
                          "deployment_store_selection": {
                            "enabled": true,
                            "type": "hard"
                          },
                          "listing_price": {
                            "value": "min",
                            "sort": "min"
                          },
                          "currency": {
                            "value": [
                              "INR"
                            ],
                            "type": "explicit",
                            "default_currency": "INR"
                          },
                          "revenue_engine": {
                            "enabled": false
                          },
                          "feedback": {
                            "enabled": true
                          },
                          "compare_products": {
                            "enabled": true
                          },
                          "reward_points": {
                            "credit": {
                              "enabled": true
                            },
                            "debit": {
                              "enabled": true,
                              "auto_apply": false,
                              "strategy_channel": "REWARDS"
                            }
                          }
                        },
                        "cart": {
                          "gst_input": true,
                          "staff_selection": true,
                          "placing_for_customer": true,
                          "google_map": true
                        },
                        "qr": {
                          "application": true,
                          "products": true,
                          "collections": true
                        },
                        "pcr": {
                          "staff_selection": true
                        },
                        "order": {
                          "buy_again": true
                        },
                        "buybox": {
                          "show_name": true,
                          "enable_selection": true,
                          "is_seller_buybox_enabled": false
                        },
                        "_id": "5e57643c986e4119c973df7d",
                        "app": "000000000000000000000004",
                        "created_at": "2020-02-27T06:39:56.08800Z",
                        "modified_at": "2021-02-02T11:04:14.28900Z",
                        "__v": 1
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Application Information"
        ]
      }
    },
    "/service/application/configuration/v1.0/information": {
      "get": {
        "description": "Get contact details of the sales channel.",
        "summary": "getContactInfo | Retrieves contact details.",
        "tags": [
          "Configuration"
        ],
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `ApplicationAboutResponseSchema` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationInformation"
                },
                "examples": {
                  "success": {
                    "value": {
                      "address": {
                        "loc": {},
                        "address_line": [
                          "Warehouse 5, Near Industrial Complex",
                          "2nd Lane, Andheri"
                        ],
                        "phone": [
                          {
                            "code": "+91",
                            "number": "9988776654"
                          }
                        ],
                        "city": "Mumbai , Maharashtra , India",
                        "country": "India",
                        "pincode": 400059
                      },
                      "support": {
                        "phone": [],
                        "email": [],
                        "timing": "9 AM to 9 PM"
                      },
                      "social_links": {
                        "facebook": {
                          "title": "Facebook",
                          "icon": "https://hdn-1.fynd.com/system/svg/social-media/icon/original/hQAbAKdvHK-facebookfooteraopcjq.svg",
                          "link": ""
                        },
                        "instagram": {
                          "title": "Instagram",
                          "icon": "https://hdn-1.fynd.com/system/svg/social-media/icon/original/UZYsGWOqXp-instagramfooterl3utrr.svg",
                          "link": ""
                        },
                        "twitter": {
                          "title": "Twitter",
                          "icon": "https://hdn-1.fynd.com/system/svg/social-media/icon/original/oT2hW-BJjq-twitterfooternajsyr.svg",
                          "link": ""
                        },
                        "pinterest": {
                          "title": "Pinterest",
                          "icon": "https://hdn-1.fynd.com/system/svg/social-media/icon/original/v0erlcMk8p-pinterestfooternzmq4b.svg",
                          "link": ""
                        },
                        "google_plus": {
                          "title": "Google+",
                          "icon": "https://hdn-1.fynd.com/system/svg/social-media/icon/original/lw3Y5S58h4-googleplusysukr1.png",
                          "link": ""
                        },
                        "youtube": {
                          "title": "Youtube",
                          "icon": "https://hdn-1.fynd.com/system/svg/social-media/icon/original/EYV03PDST_-youtubefootermqhcr7.svg",
                          "link": ""
                        },
                        "linked_in": {
                          "title": "LinkedIn",
                          "icon": "https://hdn-1.fynd.com/system/svg/social-media/icon/original/qa7gx_bW9O-linkedinfooterrcr0yq.svg",
                          "link": ""
                        },
                        "vimeo": {
                          "title": "Vimeo",
                          "icon": "https://hdn-1.fynd.com/system/svg/social-media/icon/original/Ttc80b3U78-vimeofooternho4br.svg",
                          "link": ""
                        },
                        "blog_link": {
                          "title": "Blog",
                          "icon": "https://hdn-1.fynd.com/system/svg/social-media/icon/original/LKpxTk1I3s-mediumfooterdtvrva.svg",
                          "link": ""
                        }
                      },
                      "links": [
                        {
                          "title": "Shipping",
                          "link": "www.uniket.store/shipping-details"
                        },
                        {
                          "title": "Returns",
                          "link": "www.uniket.store/policy/return-policy"
                        },
                        {
                          "title": "Privacy",
                          "link": "www.uniket.store/policy/privacy-policy"
                        },
                        {
                          "title": "Terms",
                          "link": "www.uniket.store/policy/terms-conditions"
                        }
                      ],
                      "copyright_text": "#MadeInIndia © 2020 Shopsense Retail Technologies",
                      "_id": "5e6627bd0732616083e83750",
                      "business_highlights": [
                        {
                          "_id": "5fc901611dfba6c2e87d1ca9",
                          "title": "Most Genuine Products",
                          "icon": "https://hdn-1.addsale.com/x0/company/1/applications/000000000000000000000004/business-highlights/pictures/square-logo/original/bVlx43F2a-H6pvZ9tzp-business-logo-icon.png",
                          "sub_title": "Directly from brands"
                        },
                        {
                          "_id": "5fc901611dfba64ce57d1caa",
                          "title": "Credit Facility Available",
                          "icon": "https://hdn-1.addsale.com/x0/company/1/applications/000000000000000000000004/business-highlights/pictures/square-logo/original/VMnltS1m3-QuUnEjOsA-business-logo-icon.png",
                          "sub_title": "Free 30 Days Credit"
                        },
                        {
                          "_id": "5fc901611dfba64b2e7d1cab",
                          "title": "Assured Returns",
                          "icon": "https://hdn-1.addsale.com/x0/company/1/applications/000000000000000000000004/business-highlights/pictures/square-logo/original/cTHzgHJXK-sROtLMalN-business-logo-icon.png",
                          "sub_title": "For all damaged/wrong items"
                        }
                      ],
                      "application": "000000000000000000000004",
                      "created_at": "2020-03-09T11:25:49.92100Z",
                      "modified_at": "2020-12-03T15:16:49.08700Z",
                      "__v": 99
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Application Information"
        ]
      }
    },
    "/service/application/configuration/v1.0/currencies": {
      "get": {
        "description": "List available currencies.",
        "summary": "getCurrencies | Lists supported currencies.",
        "tags": [
          "Configuration"
        ],
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `CurrenciesResponseSchema` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrenciesResponseSchema"
                },
                "examples": {
                  "success": {
                    "value": {
                      "items": [
                        {
                          "_id": "5ec75d11f7bfb54d798f3516",
                          "is_active": true,
                          "name": "United States Dollar",
                          "code": "USD",
                          "created_at": "2020-05-22T05:03:13.35400Z",
                          "modified_at": "2020-06-05T09:12:04.24800Z",
                          "decimal_digits": 2,
                          "symbol": "$"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Currency Management"
        ]
      }
    },
    "/service/application/configuration/v1.0/currency/{id}": {
      "get": {
        "description": "Get details of the currency.",
        "summary": "getCurrencyById | Fetches currency by ID.",
        "tags": [
          "Configuration"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID assigned to the currency.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "5bc8a62e21d33c25ebbfd6d3"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `Currency` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                },
                "examples": {
                  "success": {
                    "value": {
                      "_id": "5ec75d11f7bfb501d88f3559",
                      "is_active": true,
                      "name": "Gold Ounce",
                      "code": "XAU",
                      "created_at": "2020-05-22T05:03:13.42900Z",
                      "modified_at": "2020-06-05T09:12:04.24800Z",
                      "decimal_digits": 1,
                      "symbol": ""
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Currency Management"
        ]
      }
    },
    "/service/application/configuration/v1.0/currency": {
      "get": {
        "description": "Get currency configuration of the sales channel.",
        "summary": "getAppCurrencies | Retrieves app-specific currencies.",
        "tags": [
          "Configuration"
        ],
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `AppCurrencyResponseSchema` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppCurrencyResponseSchema"
                },
                "examples": {
                  "success": {
                    "value": {
                      "application": "000000000000000000000001",
                      "default_currency": {
                        "ref": "5ecf6122d953d4242c044907",
                        "code": "INR"
                      },
                      "supported_currency": [
                        {
                          "_id": "5ecf6122d953d4242c044907",
                          "is_active": true,
                          "name": "Indian Rupee",
                          "code": "INR",
                          "decimal_digits": 2,
                          "symbol": "₹",
                          "created_at": "2020-05-28T06:58:42.53200Z",
                          "modified_at": "2021-04-05T16:44:14.35800Z"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Currency Management"
        ]
      }
    },
    "/service/application/configuration/v1.0/languages": {
      "get": {
        "description": "List available languages.",
        "summary": "getLanguages | Lists available languages.",
        "tags": [
          "Configuration"
        ],
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `LanguageResponseSchema` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LanguageResponseSchema"
                },
                "examples": {
                  "success": {
                    "value": {
                      "items": [
                        {
                          "name": "??????",
                          "code": "hi-IN"
                        },
                        {
                          "name": "English",
                          "code": "en-IN"
                        },
                        {
                          "name": "????",
                          "code": "ar-AE"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Language Information"
        ]
      }
    },
    "/service/application/configuration/v1.0/ordering-store/select": {
      "post": {
        "description": "Reset cookie of ordering store.",
        "summary": "getOrderingStoreCookie | Retrieves store selection cookie.",
        "tags": [
          "Configuration"
        ],
        "requestBody": {
          "description": "Pass the UID of the ordering store in the request body as shown below.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderingStoreSelectRequestSchema"
              },
              "examples": {
                "400": {
                  "value": {
                    "ordering_store": {
                      "uid": 990
                    }
                  }
                },
                "success": {
                  "value": {
                    "ordering_store": {
                      "uid": 1
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "set-cookie": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessMessageResponseSchema"
                },
                "examples": {
                  "success": {
                    "value": {
                      "message": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "API Error. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "examples": {
                  "400": {
                    "value": {
                      "message": "store not found"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Store Information"
        ]
      },
      "delete": {
        "description": "Delete store cookie.",
        "summary": "removeOrderingStoreCookie | Deletes store cookie.",
        "tags": [
          "Configuration"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "set-cookie": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessMessageResponseSchema"
                },
                "examples": {
                  "success": {
                    "value": {
                      "message": "success"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Store Information"
        ]
      }
    },
    "/service/application/configuration/v1.0/staff/list": {
      "get": {
        "description": "List all staff members of the sales channel.",
        "summary": "getAppStaffList | Lists app staff members.",
        "tags": [
          "Configuration"
        ],
        "parameters": [
          {
            "name": "page_no",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The page number to navigate through the given set of results. Default value is 1."
          },
          {
            "name": "page_size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The number of items to retrieve in each page."
          },
          {
            "name": "order_incent",
            "in": "query",
            "description": "Select `true` to retrieve the staff members eligible for getting incentives on orders.",
            "required": false,
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "ordering_store",
            "in": "query",
            "description": "ID of the ordering store. Helps in retrieving staff members working at a particular ordering store.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 12
            },
            "examples": {
              "400": {
                "value": 1
              },
              "success": {
                "value": 1
              }
            }
          },
          {
            "name": "user",
            "in": "query",
            "description": "ID of the staff. Helps in retrieving the details of a particular staff member.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "5e6b6ae7d450b1219ffdf3b2"
            },
            "examples": {
              "400": {
                "value": "test"
              },
              "success": {
                "value": "000000000000000016841367"
              }
            }
          },
          {
            "name": "user_name",
            "in": "query",
            "description": "Username of the member.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "400": {
                "value": "Fynd"
              },
              "success": {
                "value": "Fynd"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `AppStaffListResponseSchema` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStaffListResponseSchema"
                },
                "examples": {
                  "success": {
                    "value": {
                      "items": [
                        {
                          "_id": "5e6b6ae7d450b1219ffdf3b2"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or Missing params",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidPayloadRequestSchema"
                },
                "examples": {
                  "400": {
                    "value": {
                      "message": "UserId Is Not Valid"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Staff and User Management"
        ]
      }
    },
    "/service/application/configuration/v1.0/staff": {
      "get": {
        "description": "Get a staff user including the names, employee code, incentive status, assigned ordering stores, and title of each staff added to the sales channel.",
        "summary": "getAppStaffs | Fetches detailed staff info.",
        "tags": [
          "Configuration"
        ],
        "parameters": [
          {
            "name": "order_incent",
            "in": "query",
            "description": "Select `true` to retrieve the staff members eligible for getting incentives on orders.",
            "required": false,
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "ordering_store",
            "in": "query",
            "description": "ID of the ordering store. Helps in retrieving staff members working at a particular ordering store.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 12
            },
            "examples": {
              "400": {
                "value": 1
              },
              "success": {
                "value": 1
              }
            }
          },
          {
            "name": "user",
            "in": "query",
            "description": "ID of the staff. Helps in retrieving the details of a particular staff member.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "5e6b6ae7d450b1219ffdf3b2"
            },
            "examples": {
              "400": {
                "value": "test"
              },
              "success": {
                "value": "000000000000000016841367"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `AppStaffResponseSchema` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStaffResponseSchema"
                },
                "examples": {
                  "success": {
                    "value": {
                      "staff_users": [
                        {
                          "_id": "5e6b6ae7d450b1219ffdf3b2"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or Missing params",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidPayloadRequestSchema"
                },
                "examples": {
                  "400": {
                    "value": {
                      "message": "UserId Is Not Valid"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Staff and User Management"
        ]
      }
    },
    "/service/application/content/v1.0/announcements": {
      "get": {
        "description": "List all current announcements in the application.",
        "summary": "getAnnouncements | List announcements",
        "tags": [
          "Content"
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a JSON object with the details of the announcement shown on an individual page. `$all` is a special slug to indicate that an announcement is being shown on all the pages. Check the example shown below or refer `AnnouncementsResponseSchema` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnouncementsResponseSchema"
                },
                "examples": {
                  "success": {
                    "value": {
                      "announcements": {
                        "$all": [
                          {
                            "announcement": "<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdnjs.cloudflare.com/ajax/libs/github-markdown-css/2.9.0/github-markdown.min.css\" /> <div class=\"markdown-body\" style='padding: 12px; color: #000; background-color: #fff;'><p>test Announcement</p>\n</div>",
                            "schedule": {
                              "start": "2021-03-31T11:22:08.167Z"
                            }
                          }
                        ]
                      },
                      "refresh_rate": 900,
                      "refresh_pages": []
                    }
                  },
                  "No Announcement enabled": {
                    "value": {
                      "announcements": {},
                      "refresh_rate": 900,
                      "refresh_pages": []
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Announcement"
        ]
      }
    },
    "/service/application/content/v1.0/blogs/{slug}": {
      "get": {
        "summary": "getBlog | Get a blog",
        "description": "Get information related to a specific blog such as it's contents, author, publish date, SEO related information.",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "A short, human-readable, URL-friendly identifier of a blog. You can get slug value from the endpoint /service/application/content/v1.0/blogs/.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "Test10"
              },
              "failure": {
                "value": "abcdef"
              }
            }
          },
          {
            "name": "root_id",
            "in": "query",
            "description": "ID given to the HTML element",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a JSON object with blog details. Check the example shown below or refer `BlogSchema` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogSchema"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/BlogResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "API Error. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentAPIError"
                },
                "examples": {
                  "failure": {
                    "$ref": "#/components/examples/4XXAPIError"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Blog"
        ],
        "tags": [
          "Content"
        ]
      }
    },
    "/service/application/content/v1.0/blogs": {
      "get": {
        "description": "List all the blogs against an application.",
        "summary": "getBlogs | List blogs",
        "parameters": [
          {
            "name": "page_no",
            "in": "query",
            "description": "The page number to navigate through the given set of results. Default value is 1.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items to retrieve in each page.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "tags",
            "in": "query",
            "description": "Blogs retrieve based on the list of tags passed.",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Comma separated list of tags."
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "Blogs retrieve based on the title.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `BlogGetResponseSchema` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogGetResponseSchema"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/BlogGetResponse"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Blog"
        ],
        "tags": [
          "Content"
        ]
      }
    },
    "/service/application/content/v1.0/data-loader": {
      "get": {
        "description": "List all the data loaders that are enabled for an application.",
        "summary": "getDataLoaders | List Dataloaders",
        "responses": {
          "200": {
            "description": "Success. Returns a JSON object containing all the data loaders injected in the application. Check the example shown below or refer `DataLoadersSchema` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataLoadersSchema"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/DataLoaderResponse"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Data Loaders"
        ],
        "tags": [
          "Content"
        ]
      }
    },
    "/service/application/content/v1.0/faq": {
      "get": {
        "description": "List frequently asked questions and answers.",
        "summary": "getFaqs | List FAQs",
        "responses": {
          "200": {
            "description": "Success. Returns a JSON object with question and answers. Check the example shown below or refer `FaqResponseSchema` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqResponseSchema"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/AppFaqs"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "FAQs"
        ],
        "tags": [
          "Content"
        ]
      }
    },
    "/service/application/content/v1.0/faq/categories": {
      "get": {
        "description": "List categories for organizing FAQs.",
        "summary": "getFaqCategories | List FAQ Categories",
        "responses": {
          "200": {
            "description": "Success. Returns a JSON object with categories of FAQ. Check the example shown below or refer `GetFaqCategoriesSchema` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFaqCategoriesSchema"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/CategorySchema"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "FAQs"
        ],
        "tags": [
          "Content"
        ]
      }
    },
    "/service/application/content/v1.0/faq/{slug}": {
      "get": {
        "description": "Get a specific FAQ using its slug identifier.",
        "summary": "getFaqBySlug | Get FAQ",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "A short, human-readable, URL-friendly identifier of an FAQ. You can get slug value from the endpoint /service/application/content/v1.0/faq.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "question-1"
              },
              "failure": {
                "value": "abcdef"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a question and answer by its slug. Check the example shown below or refer `FaqSchema` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqSchema"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/FaqSchema"
                  }
                }
              }
            }
          },
          "400": {
            "description": "API Error. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentAPIError"
                },
                "examples": {
                  "failure": {
                    "$ref": "#/components/examples/4XXAPIError"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "FAQs"
        ],
        "tags": [
          "Content"
        ]
      }
    },
    "/service/application/content/v1.0/faq/category/{slug}": {
      "get": {
        "description": "Get a specific FAQ category using its slug.",
        "summary": "getFaqCategoryBySlug | Get a FAQ category",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "A short, human-readable, URL-friendly identifier of an FAQ category. You can get slug value from the endpoint /service/application/content/v1.0/faq/categories.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "testingslugfirsst"
              },
              "failure": {
                "value": "adcdefghiokl"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a FAQ category with its slug. Check the example shown below or refer `GetFaqCategoryBySlugSchema` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFaqCategoryBySlugSchema"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/GetFaqCategoryBySlugSchema"
                  }
                }
              }
            }
          },
          "400": {
            "description": "API Error. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentAPIError"
                },
                "examples": {
                  "failure": {
                    "$ref": "#/components/examples/4XXAPIError"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "FAQs"
        ],
        "tags": [
          "Content"
        ]
      }
    },
    "/service/application/content/v1.0/faq/category/{slug}/faqs": {
      "get": {
        "description": "Get FAQs belonging to a specific category slug.",
        "summary": "getFaqsByCategorySlug | List FAQs by category",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "A short, human-readable, URL-friendly identifier of an FAQ category. You can get slug value from the endpoint /service/application/content/v1.0/faq/categories.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "testingslugsecond"
              },
              "failure": {
                "value": ""
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a categorized list of question and answers using its slug. Check the example shown below or refer `GetFaqSchema` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFaqSchema"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/GetFaqSchema"
                  }
                }
              }
            }
          },
          "404": {
            "description": "API Error. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentAPIError"
                },
                "examples": {
                  "failure": {
                    "$ref": "#/components/examples/4XXAPIError"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "FAQs"
        ],
        "tags": [
          "Content"
        ]
      }
    },
    "/service/application/content/v1.0/landing-page": {
      "get": {
        "summary": "getLandingPage | Get a landing page",
        "description": "Gets the content of the application's landing page.",
        "responses": {
          "200": {
            "description": "Success. Returns the landing page details. Check the example shown below or refer `LandingPageSchema` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LandingPageSchema"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/LandingPageResponse"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Landing Page"
        ],
        "tags": [
          "Content"
        ]
      }
    },
    "/service/application/content/v1.0/legal": {
      "get": {
        "description": "Get legal policies for an application which includes Terms and conditions, return policy, shipping policy and privacy policy.",
        "summary": "getLegalInformation | Get legal information",
        "responses": {
          "200": {
            "description": "Success. Returns the T&C, Shipping Policy, Privacy Policy and Return Policy. Check the example shown below or refer `ApplicationLegal` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationLegal"
                },
                "examples": {
                  "Success": {
                    "$ref": "#/components/examples/Legal"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Legal Page"
        ],
        "tags": [
          "Content"
        ]
      }
    },
    "/service/application/content/v2.0/navigations": {
      "get": {
        "summary": "getNavigations | List navigation items",
        "description": "Get the navigation link items which can be powered to generate menus on application's website or equivalent mobile apps.",
        "parameters": [
          {
            "name": "page_no",
            "in": "query",
            "description": "The page number to navigate through the given set of results. Default value is 1.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "examples": {
              "success": {
                "value": 1
              }
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items to retrieve in each page.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            },
            "examples": {
              "success": {
                "value": 10
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a JSON object with navigation details. Check the example shown below or refer `NavigationGetResponseSchema` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NavigationGetResponseSchema"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/NavigationGet"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Navigation"
        ],
        "tags": [
          "Content"
        ]
      }
    },
    "/service/application/content/v1.0/seo": {
      "get": {
        "description": "Get search engine optimization configurations of an application. Details include the title, description and an image.",
        "summary": "getSEOConfiguration | Get SEO settings",
        "responses": {
          "200": {
            "description": "Success. Returns a JSON object SEO details such as robots.txt, meta-tags, and sitemap. Check the example shown below or refer `SeoComponent` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeoComponent"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/Seo"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Sales Channel SEO"
        ],
        "tags": [
          "Content"
        ]
      }
    },
    "/service/application/content/v1.0/seo/schema": {
      "get": {
        "description": "Get all SEO Markup schema Templates setup for an application.",
        "summary": "getSEOMarkupSchemas | List SEO Markup schemas",
        "tags": [
          "Content"
        ],
        "parameters": [
          {
            "name": "page_type",
            "in": "query",
            "description": "The type of page against which schema template was created",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "about-us",
                "addresses",
                "blog",
                "brands",
                "cards",
                "cart",
                "categories",
                "brand",
                "category",
                "collection",
                "collections",
                "contact-us",
                "external",
                "faq",
                "freshchat",
                "home",
                "notification-settings",
                "orders",
                "page",
                "policy",
                "product",
                "product-request",
                "products",
                "profile",
                "profile-order-shipment",
                "profile-basic",
                "profile-company",
                "profile-emails",
                "profile-phones",
                "rate-us",
                "refer-earn",
                "settings",
                "shared-cart",
                "tnc",
                "track-order",
                "wishlist",
                "sections",
                "form",
                "cart-delivery",
                "cart-payment",
                "cart-review",
                "login",
                "register",
                "shipping-policy",
                "return-policy",
                "order-status"
              ]
            },
            "examples": {
              "success": {
                "value": "products"
              }
            }
          },
          {
            "name": "active",
            "in": "query",
            "description": "Boolean value for fetching seo schema.",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Refer `SeoSchemaComponent` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeoSchemaComponent"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/SeoSchemaComponent"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Sales Channel SEO"
        ]
      }
    },
    "/service/application/content/v1.0/seo/sitemap/default": {
      "get": {
        "summary": "getDefaultSitemapConfig | Get default sitemap configuration",
        "description": "Retrieves the current default sitemap configuration settings",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultSitemapConfig"
                },
                "examples": {
                  "success": {
                    "value": {
                      "root": {
                        "enabled": true
                      },
                      "brand": {
                        "enabled": true
                      },
                      "collections": {
                        "enabled": true
                      },
                      "category_l1": {
                        "enabled": true
                      },
                      "category_l2": {
                        "enabled": true
                      },
                      "category_l3": {
                        "enabled": true
                      },
                      "pages": {
                        "enabled": true
                      },
                      "blog": {
                        "enabled": true
                      },
                      "section": {
                        "enabled": true
                      },
                      "faq": {
                        "enabled": true
                      },
                      "sitemap": {
                        "enabled": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Sitemap Configuration"
        ],
        "tags": [
          "Content"
        ]
      }
    },
    "/service/application/content/v1.0/seo/sitemaps": {
      "get": {
        "summary": "getSitemaps | List sitemap configurations",
        "description": "Retrieve a list of sitemap configurations for a specific company and application. Each configuration contains the sitemap XML data and its activation status. \n",
        "parameters": [
          {
            "name": "page_no",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "This is the page number"
            },
            "examples": {
              "success": {
                "value": 1
              },
              "failure": {
                "value": 1
              }
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "This is the page size"
            },
            "examples": {
              "success": {
                "value": 10
              },
              "failure": {
                "value": 10
              }
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "description": "Boolean flag for checking if sitemap is active or not in storefront",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Query parameter to search sitemaps with name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved sitemap configurations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SitemapConfigurationList"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/SitemapConfigurationListSuccess"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Sitemap Configuration",
          "Sales Channel SEO"
        ],
        "tags": [
          "Content"
        ]
      }
    },
    "/service/application/content/v1.0/seo/sitemaps/{name}": {
      "get": {
        "summary": "getSitemap | Get a specific sitemap configuration",
        "description": "Retrieve a specific sitemap configuration by its name. Returns the complete configuration including the sitemap XML data, activation status, and timestamps.\n",
        "parameters": [
          {
            "name": "name",
            "schema": {
              "type": "string",
              "description": "Unique identifier for the sitemap configuration"
            },
            "in": "path",
            "required": true,
            "examples": {
              "success": {
                "value": "get-application-sitemap"
              },
              "successDeleteSitemap": {
                "value": "delete-sitemap"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved sitemap configuration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SitemapConfig"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/SitemapConfigurationSuccess"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentAPIError"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/4XXAPIError"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Sitemap Configuration",
          "Sales Channel SEO"
        ],
        "tags": [
          "Content"
        ]
      }
    },
    "/service/application/content/v1.0/support": {
      "get": {
        "description": "Get customer support contact details. Contact Details can be either a phone number or an email-id or both.",
        "summary": "getSupportInformation | Get customer support information",
        "responses": {
          "200": {
            "description": "Success. Returns all support information including email and phone number. Check the example shown below or refer `Support` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Support"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/Support"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Customer Support"
        ],
        "tags": [
          "Content"
        ]
      }
    },
    "/service/application/content/v1.0/tags": {
      "get": {
        "description": "Lists HTML tags to power additional functionalities within an application.",
        "summary": "getTags | Get HTML tags",
        "responses": {
          "200": {
            "description": "Success. Returns a JSON object containing all the tags injected in the application. Check the example shown below or refer `TagsSchema` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagsSchema"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/TagsSchema"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "HTML Tags"
        ],
        "tags": [
          "Content"
        ]
      }
    },
    "/service/application/content/v2.0/pages": {
      "get": {
        "description": "Lists all Custom Pages",
        "summary": "getPages | Lists pages",
        "parameters": [
          {
            "name": "page_no",
            "in": "query",
            "description": "The page number to navigate through the given set of results. Default value is 1.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "examples": {
              "success": {
                "value": 1
              }
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items to retrieve in each page.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            },
            "examples": {
              "success": {
                "value": 10
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a list of pages along with their details. Check the example shown below or refer `PageGetStorefrontResponse` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageGetResponseSchema"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/PageGetStorefrontResponse"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Page"
        ],
        "tags": [
          "Content"
        ]
      }
    },
    "/service/application/content/v2.0/pages/{slug}": {
      "get": {
        "summary": "getPage | Get page by slug",
        "description": "Get detailed information about a specific page using its slug.",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "A short, human-readable, URL-friendly identifier of a page. You can get slug value from the endpoint /service/application/content/v2.0/pages/.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "testing_slug_for_fetch"
              },
              "failure": {
                "value": "abcdefghij"
              }
            }
          },
          {
            "name": "root_id",
            "in": "query",
            "description": "ID given to the HTML element",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a JSON object with page details. Check the example shown below or refer `CustomPageSchema` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageSchema"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/PageStorefrontResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "API Error. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentAPIError"
                },
                "examples": {
                  "failure": {
                    "$ref": "#/components/examples/4XXAPIError"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Page"
        ],
        "tags": [
          "Content"
        ]
      }
    },
    "/service/application/content/v2.0/customobjects/definition/{definition_slug}/entries/{slug}": {
      "get": {
        "summary": "getCustomObjectBySlug | Get custom object details",
        "description": "Details of a custom object entry can be obtained using this endpoint.",
        "parameters": [
          {
            "name": "definition_slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "This is custom object definition slug"
            },
            "examples": {
              "success": {
                "value": "manufacturer"
              },
              "successMetaObjectApplicationLevelGet": {
                "value": "address"
              },
              "failure": {
                "value": "namespace_failure"
              }
            }
          },
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "This is custom object entry slug"
            },
            "examples": {
              "success": {
                "value": "nike"
              },
              "successMetaObjectApplicationLevelGet": {
                "value": "jaipur"
              },
              "success2": {
                "value": "lenevo-success"
              },
              "failure": {
                "value": "address-1-failure"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a custom object. Refer `CustomObjectByIdSchema` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomObjectByIdSchema"
                },
                "examples": {
                  "successMetaObjectApplicationLevelGet": {
                    "$ref": "#/components/examples/CustomObjectBySlugRes"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bad Request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentAPIError"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/4XXAPIError"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Custom Objects"
        ],
        "tags": [
          "Content"
        ]
      }
    },
    "/service/application/content/v2.0/customfields/resource/{resource}/{resource_slug}": {
      "get": {
        "summary": "getCustomFieldsByResourceId | Get list of custom fields of given resource and resource slug",
        "description": "Retrieves a list of custom fields attached to a particular resource by using the resource and resource slug.",
        "parameters": [
          {
            "name": "resource",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "This is the name of resource for which you want to fetch custom fields eg. product, collection, customer etc.",
            "examples": {
              "success": {
                "value": "product"
              },
              "failure": {
                "value": "inventory"
              }
            }
          },
          {
            "name": "resource_slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "This is the resource id for which custom fields created",
            "examples": {
              "success": {
                "value": "64bb987e9a3c4b6c29d676bc"
              },
              "failure": {
                "value": "64bb987e9a3c4b6c29d67eee"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a list of custom fields. Refer `CustomFieldsResponseByResourceIdSchema` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldsResponseByResourceIdSchema"
                },
                "examples": {
                  "success": {
                    "value": {
                      "items": [
                        {
                          "id": "65705772a20cc45d3f2585b3",
                          "namespace": "custom",
                          "slug": "designer-name",
                          "resource": "product",
                          "value": [
                            "ramsons"
                          ],
                          "resource_slug": "64bb987e9a3c4b6c29d676bc",
                          "type": "string_single_line",
                          "multi_value": false,
                          "company_id": "2",
                          "has_invalid_values": false,
                          "invalid_value_errors": [],
                          "is_deleted": false
                        },
                        {
                          "id": "65705772a20cc45d3f2585b4",
                          "namespace": "custom",
                          "slug": "manufactures",
                          "resource": "product",
                          "value": [
                            "kartik"
                          ],
                          "resource_slug": "7612437",
                          "type": "string_single_line",
                          "multi_value": false,
                          "company_id": "2",
                          "has_invalid_values": false,
                          "invalid_value_errors": [],
                          "is_deleted": false
                        },
                        {
                          "id": "65705772a20cc45d3f2585b1",
                          "namespace": "custom",
                          "slug": "product-designer",
                          "resource": "product",
                          "value": [
                            "65702b4574c5764716ee671d"
                          ],
                          "resource_slug": "7612437",
                          "type": "metaobject",
                          "multi_value": true,
                          "company_id": "2",
                          "has_invalid_values": false,
                          "invalid_value_errors": [],
                          "is_deleted": false
                        },
                        {
                          "id": "65705772a20cc45d3f2585b2",
                          "namespace": "custom",
                          "slug": "validation-check",
                          "resource": "product",
                          "value": [
                            "ram"
                          ],
                          "resource_slug": "7612437",
                          "type": "string_single_line",
                          "multi_value": false,
                          "company_id": "2",
                          "has_invalid_values": false,
                          "invalid_value_errors": [],
                          "is_deleted": false
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Custom Fields"
        ],
        "tags": [
          "Content"
        ]
      }
    },
    "/service/application/content/v1.0/well-known/{slug}": {
      "get": {
        "summary": "getWellKnownUrl | Get a specific well-known URL",
        "description": "Retrieves the details of a specific well-known URL by its slug.",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The unique identifier/path of the well-known URL (e.g., assetlinks.json)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "assetlinks.json"
              },
              "failure": {
                "value": "invalid-slug"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Well-known URL details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WellKnownResponseSchema"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/WellKnown"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentAPIError"
                },
                "examples": {
                  "failure": {
                    "$ref": "#/components/examples/4XXAPIError"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Well known routes"
        ],
        "tags": [
          "Content"
        ]
      }
    },
    "/service/application/assets/v2.0/namespaces/{namespace}/upload/start": {
      "post": {
        "summary": "startUpload | Initiates file upload",
        "description": "Starts the process of uploading a file to storage location, and returns a signed url in response.",
        "tags": [
          "FileStorage"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "description": "Segregation of different types of files(products, orders, logistics etc), Required for validating the data of the file being uploaded, decides where exactly the file will be stored inside the storage bucket.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "test"
              },
              "failure": {
                "value": "test123"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileUploadStart"
              },
              "examples": {
                "success": {
                  "value": {
                    "file_name": "shirt.png",
                    "content_type": "application/pdf",
                    "size": 500,
                    "params": {
                      "subpath": "test"
                    },
                    "tags": [
                      "clothing",
                      "men"
                    ]
                  }
                },
                "failure": {
                  "value": {
                    "file_name": "shirt.png",
                    "content_type": "image/png",
                    "namespace": "products-item-assets",
                    "size": 500,
                    "params": {
                      "subpath": "test"
                    },
                    "tags": [
                      "clothing",
                      "men"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Returns a response containing relaving and absolute_url of storage service",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileUpload"
                },
                "examples": {
                  "success": {
                    "value": {
                      "file_name": "shirt.png",
                      "file_path": "/path/qwertyuiop-shirt.png",
                      "content_type": "image/png",
                      "method": "PUT",
                      "namespace": "products-item-images",
                      "operation": "putObject",
                      "tags": [
                        "clothing",
                        "shirt"
                      ],
                      "size": 9999,
                      "upload": {
                        "expiry": 5000,
                        "url": "https://xxx.xxx.xxx/products/pictures/free/original/qwertyuiop-shirt.png?AWSAccessKeyId=xxx&Content-Type=image%2Fpng&Expires=5000&Signature=xxx&x-amz-acl=public-read"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing or incorrect required field",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "A message describing the error."
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the response, indicating an error."
                    },
                    "valid_namespaces": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of valid namespaces."
                    }
                  }
                },
                "examples": {
                  "failure": {
                    "value": {
                      "status": "error",
                      "message": "params.subpath required",
                      "valid_namespaces": [
                        "misc",
                        "admin-catalogue-import-export",
                        "admin-catalogue-assets"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "File Upload"
        ]
      }
    },
    "/service/application/assets/v2.0/namespaces/{namespace}/upload/complete": {
      "post": {
        "summary": "completeUpload | Finalizes upload process.",
        "description": "\nComplete the file upload and store the file details such as name, size, content type, and namespace to maintain integrity within the system's database.",
        "tags": [
          "FileStorage"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "description": "Segregation of different types of files(products, orders, logistics etc), Required for validating the data of the file being uploaded, decides where exactly the file will be stored inside the storage bucket.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "test"
              },
              "failure": {
                "value": "test123"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileUpload"
              },
              "examples": {
                "success": {
                  "value": {
                    "file_name": "shirt.png",
                    "file_path": "/path/qwertyuiop-shirt.png",
                    "content_type": "image/png",
                    "method": "PUT",
                    "namespace": "test",
                    "operation": "putObject",
                    "tags": [
                      "clothing",
                      "shirt"
                    ],
                    "size": 9999,
                    "upload": {
                      "expiry": 5000,
                      "url": "https://hdn-1.jiomarketx0.de/x0/support-ticket-private/file/free/original/myl1-tBeF-download.jpeg"
                    }
                  }
                },
                "failure": {
                  "value": {
                    "file_name": "XKCFY",
                    "file_path": "FOTTR",
                    "content_type": "FEYDL",
                    "method": "PUT",
                    "namespace": "test123",
                    "operation": "IDJRE",
                    "tags": [
                      "IVHOO",
                      "UWWGU"
                    ],
                    "size": 117,
                    "upload": {
                      "expiry": 5000,
                      "url": "NSIUE"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileUploadComplete"
                },
                "examples": {
                  "success": {
                    "value": {
                      "success": true,
                      "_id": "xxxxxxxxxxxxxxxxxxxxxx",
                      "file_name": "shirt.png",
                      "file_path": "/path/qwertyuiop-shirt.png",
                      "content_type": "image/png",
                      "namespace": "products-item-images",
                      "operation": "putObject",
                      "tags": [
                        "clothing",
                        "shirt"
                      ],
                      "size": 9999,
                      "cdn": {
                        "url": "https://xxx.xxx.xxx/products/pictures/free/original/qwertyuiop-shirt.png",
                        "absolute_url": "https://xxx.xxx.xxx/products/pictures/free/original/qwertyuiop-shirt.png",
                        "relative_url": "products/pictures/free/original/qwertyuiop-shirt.png"
                      },
                      "upload": {
                        "expiry": 5000,
                        "url": "https://xxx.xxx.xxx/products/pictures/free/original/qwertyuiop-shirt.png?AWSAccessKeyId=xxx&Content-Type=image%2Fpng&Expires=5000&Signature=xxx&x-amz-acl=public-read"
                      },
                      "created_on": "2020-02-03T09:50:04.240Z",
                      "modified_on": "2020-02-03T09:50:04.240Z",
                      "created_by": {
                        "username": "app@fynd.com"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "cdn is not passed correctly",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "A message describing the error."
                    },
                    "_message": {
                      "type": "string",
                      "description": "A message describing the error."
                    },
                    "name": {
                      "type": "string",
                      "description": "The type of validation error."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "namespace": {
                          "type": "object",
                          "description": "Details about the namespace validation error.",
                          "properties": {
                            "message": {
                              "type": "string",
                              "description": "Error message indicating why the value is invalid."
                            },
                            "name": {
                              "type": "string",
                              "description": "The type of validation error."
                            },
                            "value": {
                              "type": "string",
                              "description": "The invalid value provided for the namespace."
                            },
                            "kind": {
                              "type": "string",
                              "description": "The type of error (e.g., enum)."
                            },
                            "path": {
                              "type": "string",
                              "description": "The path of the field that caused the error."
                            },
                            "properties": {
                              "type": "object",
                              "properties": {
                                "message": {
                                  "type": "string",
                                  "description": "Error message describing the validation issue."
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of validation that failed."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "The value that caused the validation error."
                                },
                                "path": {
                                  "type": "string",
                                  "description": "The path of the field that caused the error."
                                },
                                "enumValues": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "description": "The list of valid enum values for the field."
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "failure": {
                    "value": {
                      "errors": {
                        "namespace": {
                          "name": "ValidatorError",
                          "message": "`test123` is not a valid enum value for path `namespace`.",
                          "properties": {
                            "message": "`test123` is not a valid enum value for path `namespace`.",
                            "type": "enum",
                            "enumValues": [
                              "misc",
                              "admin-catalogue-import-export",
                              "admin-catalogue-assets"
                            ],
                            "path": "namespace",
                            "value": "test123"
                          },
                          "kind": "enum",
                          "path": "namespace",
                          "value": "test123"
                        }
                      },
                      "_message": "Assets validation failed",
                      "name": "ValidationError",
                      "message": "Assets validation failed: namespace: `test123` is not a valid enum value for path `namespace`."
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "File Upload"
        ]
      }
    },
    "/service/application/assets/v1.0/sign-urls": {
      "post": {
        "summary": "signUrls | Signs file URLs.",
        "description": "Generates secure, signed URLs that is valid for certain expiry time for accessing stored files.",
        "tags": [
          "FileStorage"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUrl"
              },
              "examples": {
                "success": {
                  "value": {
                    "expiry": 5000,
                    "urls": [
                      "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/x0/documents/manifest/PDFs/test/s3EtYk5p9-new_fee.pdf"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignUrlResult"
                },
                "examples": {
                  "success": {
                    "value": {
                      "urls": [
                        {
                          "url": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/x0/documents/manifest/PDFs/test/s3EtYk5p9-new_fee.pdf",
                          "signed_url": "https://fynd-staging-assets-private.s3-accelerate.amazonaws.com/addsale/v2/falling-surf-7c8bb8/fyndnp/wrkr/x0/documents/manifest/PDFs/test/s3EtYk5p9-new_fee.pdf",
                          "expiry": 1800
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Signed URLs"
        ]
      }
    },
    "/service/application/finance/v1.0/customer-credit-balance": {
      "post": {
        "tags": [
          "Finance"
        ],
        "summary": "customerCreditBalance | This API will provide customer's credit balance against phone number or email and seller*affiliate id",
        "description": "This API will provide customer's credit balance against phone number or email and seller*affiliate id",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerCreditBalanceRequestSchema"
              },
              "examples": {
                "get_balance_success": {
                  "value": {
                    "data": {
                      "seller_id": 123,
                      "affiliate_id": "12345",
                      "customer_mobile_number": "1234567890",
                      "customer_email": "test@example.com"
                    }
                  }
                },
                "get_balance_error": {
                  "value": {
                    "data": {
                      "affiliate_id": "12345",
                      "customer_mobile_number": "1234567890",
                      "customer_email": "test@example.com"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerCreditBalanceResponseSchema"
                },
                "examples": {
                  "get_balance_success": {
                    "value": {
                      "success": true,
                      "data": {
                        "customer_mobile_number": "7066772322",
                        "customer_email": "test@example.com",
                        "total_credited_balance": 100,
                        "total_locked_amount": 50,
                        "allowed_redemption_amount": 50
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "get_balance_error": {
                    "value": {
                      "success": false,
                      "reason": "body.data.app_id:Field required",
                      "message": "body.data.app_id:Field required",
                      "status": 400,
                      "code": null,
                      "exception": "RequestValidationError",
                      "info": null,
                      "request_id": null,
                      "stack_trace": null,
                      "meta": {
                        "columns_errors": [
                          {
                            "code": null,
                            "message": "body.data.app_id:Field required"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Customer Credit Note"
        ]
      }
    },
    "/service/application/finance/v1.0/lock-unlock-credit-note": {
      "post": {
        "tags": [
          "Finance"
        ],
        "summary": "lockUnlockCreditNote | Lock or Unlock requested credit note.",
        "description": "Used to lock or unlock requested credit note.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LockUnlockRequestSchema"
              },
              "examples": {
                "lock_200": {
                  "value": {
                    "data": {
                      "seller_id": 100,
                      "affiliate_id": "100",
                      "ordering_channel": "platform-pos",
                      "credit_note_number": "credit_note_test_exchange_6",
                      "amount": 10,
                      "request_type": "lock",
                      "order_id": "11111"
                    }
                  }
                },
                "lock_400": {
                  "value": {
                    "data": {
                      "seller_id": 101,
                      "affiliate_id": "100",
                      "ordering_channel": "platform-pos",
                      "credit_note_number": "D00009907A000117",
                      "amount": 100,
                      "request_type": "lock",
                      "order_id": "11111"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LockUnlockResponseSchema"
                },
                "examples": {
                  "lock_200": {
                    "value": {
                      "success": true,
                      "data": {
                        "credit_note_number": "D00009907A000117",
                        "amount": 100
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request failed due to invalid data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "lock_400": {
                    "value": {
                      "success": false,
                      "reason": "body.data.app_id:Field required"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Customer Credit Note"
        ]
      }
    },
    "/service/application/lead/v1.0/ticket/{id}": {
      "get": {
        "description": "Get details of a specific customer support ticket.",
        "summary": "getTicket | Get a support ticket",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of ticket to be retrieved",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "5f150f33d8bd5237b16bc279"
              },
              "not_found": {
                "value": "5eabef971a8e0830e6d56xx"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/TicketResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                },
                "examples": {
                  "not_found": {
                    "$ref": "#/components/examples/NotFoundExample"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Ticket"
        ],
        "tags": [
          "Lead"
        ]
      }
    },
    "/service/application/lead/v1.0/ticket/{id}/history": {
      "post": {
        "description": "Create a history entry for a specific support ticket.",
        "summary": "createHistory | Logs ticket history.",
        "tags": [
          "Lead"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Ticket ID for which history is created",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "5f150f33d8bd5237b16bc279"
              },
              "failure": {
                "value": "5f3f7803f31c03e0386630gr"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketHistoryPayload"
              },
              "examples": {
                "success": {
                  "$ref": "#/components/examples/TicketHistoryCreatePayload"
                },
                "failure": {
                  "$ref": "#/components/examples/FailureTicketHistoryCreatePayload"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketHistory"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/CreateTicketHistoryResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error4XX"
                },
                "examples": {
                  "failure": {
                    "$ref": "#/components/examples/Error4XXExample"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Ticket History"
        ]
      }
    },
    "/service/application/lead/v1.0/ticket": {
      "post": {
        "description": "Create a new customer support ticket for a user query.",
        "summary": "createTicket | Creates a ticket",
        "tags": [
          "Lead"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddTicketPayload"
              },
              "examples": {
                "success": {
                  "$ref": "#/components/examples/AddTicketPayload"
                },
                "failure": {
                  "$ref": "#/components/examples/FailureAddTicketPayload"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/CreateTicketResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error4XX"
                },
                "examples": {
                  "failure": {
                    "$ref": "#/components/examples/Error4XXExample"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Ticket"
        ]
      }
    },
    "/service/application/lead/v1.0/form/{slug}": {
      "get": {
        "description": "Get a customizable form template for data collection.",
        "summary": "getCustomForm | Get custom form",
        "tags": [
          "Lead"
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "Slug of form whose response is getting submitted",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "video-assistance"
              },
              "not_found": {
                "value": "qwertyasdfghji"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomForm"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/CustomFormResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                },
                "examples": {
                  "not_found": {
                    "$ref": "#/components/examples/NotFoundExample"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Custom Form"
        ]
      }
    },
    "/service/application/lead/v1.0/form/{slug}/submit": {
      "post": {
        "description": "Create user-entered data from a custom form for processing.",
        "summary": "submitCustomForm | Submits form data",
        "tags": [
          "Lead"
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "Slug of form whose response is getting submitted",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "video-assistance"
              },
              "not_found": {
                "value": "qwertyasdfghjiop"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFormSubmissionPayload"
              },
              "examples": {
                "success": {
                  "$ref": "#/components/examples/CustomFormSubmissionPayload"
                },
                "not_found": {
                  "$ref": "#/components/examples/FailureCustomFormSubmissionPayload"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmitCustomFormResponseSchema"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/SubmitCustomFormResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                },
                "examples": {
                  "not_found": {
                    "$ref": "#/components/examples/NotFoundExample"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Custom Form"
        ]
      }
    },
    "/service/application/logistics/v1.0/pincode/{pincode}": {
      "get": {
        "summary": "getPincodeCity | Get Pincode API",
        "description": "Get details of a specific pincode, such as obtaining its city and state information.",
        "deprecated": true,
        "tags": [
          "Logistic"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "pincode",
            "description": "Postal code or PIN code of the address area.",
            "schema": {
              "type": "string"
            },
            "required": true,
            "examples": {
              "example_1": {
                "value": "pincode1"
              },
              "example_2": {
                "value": "lllllll"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get pincode data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PincodeApiResponseSchema"
                },
                "examples": {
                  "Pincode data found": {
                    "value": {
                      "data": [
                        {
                          "sub_type": "pincode",
                          "name": "411057",
                          "error": {
                            "type": null,
                            "value": null,
                            "message": null
                          },
                          "uid": "64aec5aa3a079bd32853a0fb",
                          "display_name": "411057",
                          "meta": {},
                          "parents": [
                            {
                              "uid": "64aec5a93a079bd328537835",
                              "name": "INDIA",
                              "display_name": "India",
                              "sub_type": "country"
                            },
                            {
                              "uid": "64aec5a93a079bd32853783b",
                              "name": "MAHARASHTRA",
                              "display_name": "MAHARASHTRA",
                              "sub_type": "state"
                            },
                            {
                              "uid": "64aec5a93a079bd328537c9e",
                              "name": "PUNE",
                              "display_name": "PUNE",
                              "sub_type": "city"
                            }
                          ],
                          "lat_long": {
                            "type": "Point",
                            "coordinates": [
                              73.7183639,
                              18.5925785
                            ]
                          },
                          "meta_code": {
                            "iso2": "IN",
                            "iso3": "IND",
                            "currency": {
                              "code": "INR",
                              "name": "Indian Rupee",
                              "symbol": "â‚¹"
                            },
                            "phone_code": "+91",
                            "zone": "red",
                            "deliverables": [
                              "essential"
                            ],
                            "parent_id": null,
                            "hierarchy": [
                              {
                                "display_name": "Pincode",
                                "slug": "pincode"
                              },
                              {
                                "display_name": "City",
                                "slug": "city"
                              },
                              {
                                "display_name": "State",
                                "slug": "state"
                              }
                            ]
                          }
                        }
                      ],
                      "error": {
                        "type": "",
                        "value": "",
                        "message": ""
                      },
                      "success": true,
                      "request_uuid": null,
                      "stormbreaker_uuid": "3696bec5-22c9-49ce-aac6-35ded46279c8"
                    }
                  },
                  "Pincode not found": {
                    "value": {
                      "data": [
                        {
                          "sub_type": "pincode",
                          "name": "999999",
                          "error": {
                            "type": "DoesNotExist",
                            "value": "999999",
                            "message": "pincode 999999 does not exist"
                          }
                        }
                      ],
                      "request_uuid": null,
                      "stormbreaker_uuid": "",
                      "error": {
                        "type": "DoesNotExist",
                        "value": "999999",
                        "message": "pincode 999999 does not exist"
                      },
                      "success": false
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Country & Locality"
        ]
      }
    },
    "/service/application/logistics/v1.0/country-list": {
      "get": {
        "summary": "getAllCountries | Get deliverable countries",
        "description": "Get a list of countries within the specified delivery zones for that application.",
        "tags": [
          "Logistic"
        ],
        "responses": {
          "200": {
            "description": "Get Country List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountryListResponseSchema"
                },
                "examples": {
                  "example_1": {
                    "$ref": "#/components/examples/GetCountriesList1"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Country & Locality"
        ]
      }
    },
    "/service/application/logistics/v2.0/company/{company_id}/application/{application_id}/zones": {
      "get": {
        "summary": "getZones | Shows zones defined at the application level",
        "description": "Displays the list of zones defined at the application level.",
        "tags": [
          "Logistic"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "company_id",
            "description": "The unique identifier for the company.",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "examples": {
              "Example": {
                "value": 1
              },
              "Failed Example": {
                "value": 1
              }
            }
          },
          {
            "in": "path",
            "name": "application_id",
            "description": "A `application_id` is a unique identifier for a particular sale channel.",
            "schema": {
              "type": "string"
            },
            "required": true,
            "examples": {
              "Example": {
                "value": "64aec5a93a079bd328537835"
              },
              "Failed Example": {
                "value": "64aec5a93a079bd328537838"
              }
            }
          },
          {
            "in": "query",
            "name": "stage",
            "description": "Identifies the specific stage of zone bing requested.",
            "schema": {
              "type": "string",
              "enum": [
                "in_progress",
                "failed",
                "completed"
              ]
            },
            "examples": {
              "Success Example": {
                "value": "completed"
              },
              "Failed Example": {
                "value": "failed"
              },
              "Inprogress Example": {
                "value": "in_progress"
              }
            }
          },
          {
            "in": "query",
            "name": "type",
            "description": "Using type, you can filter custom or default zones",
            "schema": {
              "type": "string",
              "enum": [
                "default",
                "custom"
              ]
            },
            "examples": {
              "Success Example": {
                "value": "custom"
              },
              "Failed Example": {
                "value": "custom"
              }
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "Defines the number of items displayed per page.",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1
            },
            "examples": {
              "Example": {
                "value": 10
              },
              "Failed Example": {
                "value": 1
              }
            }
          },
          {
            "in": "query",
            "name": "page_no",
            "description": "current page number.",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "examples": {
              "Example": {
                "value": 1
              },
              "Failed Example": {
                "value": 1
              }
            }
          },
          {
            "in": "query",
            "name": "is_active",
            "description": "Status of Zone (either active or inactive)",
            "schema": {
              "type": "boolean"
            },
            "examples": {
              "Example": {
                "value": true
              },
              "Failed Example": {
                "value": true
              }
            }
          },
          {
            "in": "query",
            "name": "q",
            "description": "Search with name as a free text.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Example": {
                "value": "zone"
              },
              "Failed Example": {
                "value": "zone"
              }
            }
          },
          {
            "in": "query",
            "name": "country_iso_code",
            "description": "ISO2 code of the country.",
            "schema": {
              "type": "string",
              "x-not-enum": true
            },
            "examples": {
              "Example": {
                "value": "IN"
              },
              "Failed Example": {
                "value": "IND"
              }
            }
          },
          {
            "in": "query",
            "name": "pincode",
            "description": "PIN Code of the country.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Example": {
                "value": "500060"
              },
              "Failed Example": {
                "value": "5000601"
              }
            }
          },
          {
            "in": "query",
            "name": "state",
            "description": "State of the country.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Example": {
                "value": "MAHARASTRA"
              },
              "Failed Example": {
                "value": "MAHARSTRA"
              }
            }
          },
          {
            "in": "query",
            "name": "city",
            "description": "City of the country.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Example": {
                "value": "MUMBAI"
              },
              "Failed Example": {
                "value": "MU"
              }
            }
          },
          {
            "in": "query",
            "name": "sector",
            "description": "Sector name of mentioned address.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Example": {
                "value": "ABU_DHABI"
              },
              "Failed Example": {
                "value": "AB_DHABI"
              }
            }
          },
          {
            "in": "query",
            "name": "store_uid",
            "description": "Unique identifier for a specific store.",
            "schema": {
              "type": "integer"
            },
            "examples": {
              "Example": {
                "value": 2
              }
            }
          },
          {
            "in": "query",
            "name": "region_uid",
            "description": "Unique identifier for a geographical region.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Example": {
                "value": "64aec5aa3a079bd328539e25"
              }
            }
          }
        ],
        "x-groups": [
          "Delivery Zone"
        ],
        "responses": {
          "200": {
            "description": "Zone List of application in descending order of their last modified date.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListViewResponseSchemaV2"
                },
                "examples": {
                  "Example": {
                    "$ref": "#/components/examples/SuccessfulZoneCreation"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/service/application/logistics/v1.0/company/{company_id}/application/{application_id}/geoareas": {
      "get": {
        "summary": "getGeoAreas | Get all geoareas in the current application.",
        "description": "Retrieves a listing view of created GeoAreas.",
        "tags": [
          "Logistic"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "application_id",
            "description": "A `application_id` is a unique identifier for an application.",
            "schema": {
              "type": "string"
            },
            "required": true,
            "examples": {
              "success": {
                "value": "65e2d5b3a71cf1bff40723f5"
              },
              "Failed Example": {
                "value": "64aec5a93a079bd328537838"
              }
            }
          },
          {
            "in": "path",
            "name": "company_id",
            "description": "A `company_id` is a unique identifier for a particular sale channel.",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "examples": {
              "success": {
                "value": 1
              },
              "Failed Example": {
                "value": 1
              }
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "Determines the items to be displayed in a page",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1
            },
            "examples": {
              "success": {
                "value": 10
              },
              "Failed Example": {
                "value": 1
              }
            }
          },
          {
            "in": "query",
            "name": "page_no",
            "description": "Current page number",
            "schema": {
              "type": "integer"
            },
            "examples": {
              "page_no": {
                "value": 1
              }
            }
          },
          {
            "in": "query",
            "name": "type",
            "description": "To fetch the type of a specific geoarea.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "type": {
                "value": "price"
              }
            }
          },
          {
            "in": "query",
            "name": "is_active",
            "description": "Status of GeoAreas (either active or inactive)",
            "schema": {
              "type": "boolean"
            },
            "examples": {
              "success": {
                "value": true
              },
              "InActive Geoareas": {
                "value": false
              }
            }
          },
          {
            "in": "query",
            "name": "q",
            "description": "search with name as a free text",
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "geoareas"
              },
              "Failed Example": {
                "value": "geoarea"
              }
            }
          },
          {
            "in": "query",
            "name": "country_iso_code",
            "description": "ISO2 code of the country",
            "schema": {
              "type": "string",
              "x-not-enum": true
            },
            "examples": {
              "India": {
                "value": "IN"
              },
              "Failed Example": {
                "value": "IND"
              }
            }
          },
          {
            "in": "query",
            "name": "state",
            "description": "State name",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Indian State": {
                "value": "Maharashtra"
              },
              "Failed Example": {
                "value": "MAHARSTRA"
              }
            }
          },
          {
            "in": "query",
            "name": "city",
            "description": "City name",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Indian City": {
                "value": "Mumbai"
              },
              "Failed Example": {
                "value": "TH"
              },
              "UAE City": {
                "value": "ABU_DHABI"
              }
            }
          },
          {
            "in": "query",
            "name": "pincode",
            "description": "Pincode value to search geoareas",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Pincode": {
                "value": "400603"
              },
              "Failed Example": {
                "value": "5000601"
              }
            }
          },
          {
            "in": "query",
            "name": "sector",
            "description": "Sector value to search geoareas",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Sector": {
                "value": "Abu Dhabi"
              },
              "Failed Example": {
                "value": "AB_DHABI"
              }
            }
          }
        ],
        "x-groups": [
          "Delivery Zone"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved GeoArea.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeoAreaGetResponseBody"
                },
                "examples": {
                  "success": {
                    "value": {
                      "items": [
                        {
                          "name": "test1",
                          "is_active": true,
                          "slug": "test1",
                          "type": "delivery",
                          "region_type": "pincode",
                          "geoarea_id": "64aec5aa3a079bd32853a746",
                          "company_id": 1,
                          "application_id": "65e2d5b3a71cf1bff40723f5",
                          "areas": [
                            {
                              "country": {
                                "uid": "64aec5aa3a079bd32853a746",
                                "display_name": "India"
                              },
                              "regions": [
                                {
                                  "uid": "64aec5aa3a079bd32853a746",
                                  "display_name": "500060",
                                  "sub_type": "pincode",
                                  "parent_id": [
                                    "64aec5a93a079bd328537e3a",
                                    "64aec5a93a079bd328537853",
                                    "64aec5a93a079bd328537835"
                                  ]
                                }
                              ]
                            }
                          ],
                          "created_on": "2024-02-12T02:15:52.700522",
                          "modified_on": "2024-02-12T02:15:52.700522",
                          "created_by": "firstname",
                          "modified_by": "lastname"
                        }
                      ],
                      "page": {
                        "type": "number",
                        "size": 1,
                        "current": 1,
                        "has_next": false,
                        "item_total": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/service/application/logistics/v2.0/countries": {
      "get": {
        "summary": "getCountries | Get all countries and associated data.",
        "description": "Retrieve a list of countries for logistical purposes.",
        "tags": [
          "Logistic"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "onboard",
            "description": "Only fetch countries which allowed for onboard on Platform.",
            "schema": {
              "type": "boolean"
            },
            "required": false,
            "examples": {
              "example_1": {
                "value": true
              },
              "example_3": {
                "value": false
              }
            }
          },
          {
            "in": "query",
            "name": "page_no",
            "description": "The page number to navigate through the given set of results. Default value is 1.",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "required": false,
            "examples": {
              "example_1": {
                "value": 1
              },
              "example_3": {
                "value": 0
              }
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of items to retrieve in each page. Default value is 12",
            "schema": {
              "type": "integer",
              "default": 12,
              "maximum": 300
            },
            "required": false,
            "examples": {
              "example_1": {
                "value": 6
              },
              "example_3": {
                "value": 190
              }
            }
          },
          {
            "in": "query",
            "name": "q",
            "description": "The search string to search in the list of countries by name.",
            "schema": {
              "type": "string"
            },
            "required": false,
            "examples": {
              "example_1": {
                "value": "I"
              },
              "example_3": {
                "value": "Z"
              }
            }
          },
          {
            "in": "query",
            "name": "hierarchy",
            "description": "The search filter to filter countries based on their available hierarchy.",
            "schema": {
              "type": "string"
            },
            "required": false,
            "examples": {
              "example_1": {
                "value": "pincode"
              },
              "example_3": {
                "value": "pincode"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved all countries with associated data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCountries"
                },
                "examples": {
                  "example_1": {
                    "$ref": "#/components/examples/GetCountries1"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unsuccessful Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example_3": {
                    "value": {
                      "error": "The page_size for countries is less that 1"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Country & Locality"
        ]
      }
    },
    "/service/application/logistics/v1.0/countries/{country_iso_code}": {
      "get": {
        "summary": "getCountry | Get country details",
        "description": "Get details about a particular country and its address format customized for different business scenarios.",
        "tags": [
          "Logistic"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "country_iso_code",
            "description": "The ISO 3166-1 alpha-2 code representing the country (e.g., \"IN\" for India, \"US\" for the United States).",
            "schema": {
              "type": "string",
              "x-not-enum": true
            },
            "required": true,
            "examples": {
              "example_1": {
                "value": "IN"
              },
              "example_2": {
                "value": "US"
              },
              "example_3": {
                "value": "ZN"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get country data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCountry"
                },
                "examples": {
                  "example_1": {
                    "$ref": "#/components/examples/GetCountry1"
                  },
                  "example_2": {
                    "$ref": "#/components/examples/GetCountry2"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseV2"
                },
                "examples": {
                  "example_3": {
                    "value": {
                      "message": "Country not found."
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Country & Locality"
        ]
      }
    },
    "/service/application/logistics/v1.0/localities": {
      "get": {
        "summary": "getLocalitiesByPrefix | Get Localities by Name Prefix",
        "description": "Get localities that start with a specified prefix.",
        "tags": [
          "Logistic"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page_no",
            "description": "Starting index of the items.",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "examples": {
              "example_1": {
                "value": 1
              }
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "Number of items per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1
            },
            "examples": {
              "example_1": {
                "value": 10
              }
            }
          },
          {
            "in": "query",
            "name": "q",
            "description": "Localities starting with the specified prefix.",
            "schema": {
              "type": "string"
            },
            "required": false,
            "examples": {
              "example_1": {
                "value": "40000"
              },
              "example_3": {
                "value": "ZNX"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Locality data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLocalities"
                },
                "examples": {
                  "example_1": {
                    "$ref": "#/components/examples/GetLocalities1"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example_3": {
                    "value": {
                      "message": "No items found with search value ZNX"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Country & Locality"
        ],
        "security": [
          {
            "oauth2": [
              "company/logistics/read"
            ]
          }
        ]
      }
    },
    "/service/application/logistics/v1.0/localities/{locality_type}": {
      "get": {
        "summary": "getLocalities | Get Localities",
        "description": "Get geographical data for a specific type of locality based on the provided filters. For instance, obtain a list of cities for a given country and state.",
        "tags": [
          "Logistic"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "locality_type",
            "description": "Unique geographical division.",
            "schema": {
              "type": "string",
              "enum": [
                "state",
                "city",
                "pincode",
                "sector"
              ]
            },
            "required": true,
            "examples": {
              "example_1": {
                "value": "pincode"
              },
              "example_3": {
                "value": "pincode"
              }
            }
          },
          {
            "in": "query",
            "name": "country",
            "description": "Country name.",
            "schema": {
              "type": "string"
            },
            "required": false,
            "examples": {
              "example_1": {
                "value": "IN"
              },
              "example_3": {
                "value": "US"
              }
            }
          },
          {
            "in": "query",
            "name": "state",
            "description": "State or the province.",
            "schema": {
              "type": "string"
            },
            "required": false,
            "examples": {
              "example_1": {
                "value": "MAHARASHTRA"
              },
              "example_3": {
                "value": "MAHARASHTRA"
              }
            }
          },
          {
            "in": "query",
            "name": "city",
            "description": "City.",
            "schema": {
              "type": "string"
            },
            "required": false,
            "examples": {
              "example_1": {
                "value": "MUMBAI"
              },
              "example_3": {
                "value": "MUMBAI"
              }
            }
          },
          {
            "in": "query",
            "name": "page_no",
            "description": "The page number to navigate through the given set of results. Default value is 1.",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "required": false,
            "examples": {
              "example_1": {
                "value": 1
              },
              "example_3": {
                "value": 1
              }
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of items to retrieve in each page. Default value is 12.",
            "schema": {
              "type": "integer",
              "default": 12,
              "maximum": 1000
            },
            "required": false,
            "examples": {
              "example_1": {
                "value": 6
              },
              "example_3": {
                "value": 5
              }
            }
          },
          {
            "in": "query",
            "name": "q",
            "description": "This parameter is used to filter or search the records.",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "name",
            "description": "Search for localities. Either provide a full name or a search term.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "example_1": {
                "value": "400001"
              },
              "example_3": {
                "value": "400001"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Localities data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLocalities"
                },
                "examples": {
                  "example_1": {
                    "$ref": "#/components/examples/GetLocalities1"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                },
                "examples": {
                  "example_3": {
                    "value": {
                      "error": "Hierarchy is not present or invalid for India",
                      "message": "Hierarchy is not present or invalid for India"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Country & Locality"
        ]
      }
    },
    "/service/application/logistics/v1.0/localities/{locality_type}/{locality_value}": {
      "get": {
        "summary": "getLocality | Get locality detail",
        "description": "Get detailed geographical data for a specific locality, such as a pincode. For example, for a pincode value of 400603, the service returns its parent locations, including city, state, and country details.",
        "tags": [
          "Logistic"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "locality_type",
            "description": "Geographical division.",
            "schema": {
              "type": "string",
              "enum": [
                "pincode",
                "sector"
              ]
            },
            "required": true,
            "examples": {
              "example_1": {
                "value": "pincode"
              },
              "example_3": {
                "value": "pincode"
              }
            }
          },
          {
            "in": "path",
            "name": "locality_value",
            "description": "Name of the locality.",
            "schema": {
              "type": "string"
            },
            "required": true,
            "examples": {
              "example_1": {
                "value": "400001"
              },
              "example_3": {
                "value": "40001"
              }
            }
          },
          {
            "in": "query",
            "name": "country",
            "description": "Country name.",
            "schema": {
              "type": "string"
            },
            "required": false,
            "examples": {
              "example_1": {
                "value": "IN"
              },
              "example_3": {
                "value": "IN"
              }
            }
          },
          {
            "in": "query",
            "name": "state",
            "description": "State or the province.",
            "schema": {
              "type": "string"
            },
            "required": false,
            "examples": {
              "example_1": {
                "value": "MAHARASHTRA"
              },
              "example_3": {
                "value": "MAHARASHTRA"
              }
            }
          },
          {
            "in": "query",
            "name": "city",
            "description": "City.",
            "schema": {
              "type": "string"
            },
            "required": false,
            "examples": {
              "example_1": {
                "value": "MUMBAI"
              },
              "example_3": {
                "value": "MUMBAI"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Locality data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLocality"
                },
                "examples": {
                  "example_1": {
                    "$ref": "#/components/examples/GetLocality1"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                },
                "examples": {
                  "example_3": {
                    "value": {
                      "error": "The Pincode - 40001 is invalid or does not exist",
                      "message": "The Pincode - 40001 is invalid or does not exist"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Country & Locality"
        ]
      }
    },
    "/service/application/logistics/v1.0/country/{country_iso_code}/address/templates/{template_name}/validate": {
      "post": {
        "summary": "validateAddress | Validate address",
        "description": "Validate addresses using specific templates customized for each country and tailored to various business scenarios. This validation ensures that the data conforms to the information currently stored in the system.",
        "parameters": [
          {
            "in": "path",
            "name": "country_iso_code",
            "description": "The ISO 3166-1 alpha-2 code representing the country (e.g., \"IN\" for India, \"US\" for the United States).",
            "schema": {
              "type": "string",
              "x-not-enum": true
            },
            "required": true,
            "examples": {
              "example_1": {
                "value": "IN"
              },
              "example_3": {
                "value": "ZN"
              }
            }
          },
          {
            "in": "path",
            "name": "template_name",
            "description": "The type of address form.",
            "schema": {
              "type": "string",
              "enum": [
                "checkout_form",
                "store_os_form",
                "default_display"
              ]
            },
            "required": true,
            "examples": {
              "example_1": {
                "value": "default_display"
              },
              "example_3": {
                "value": "default_display"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateAddressRequestSchema"
              },
              "examples": {
                "example_1": {
                  "$ref": "#/components/examples/India"
                },
                "example_3": {
                  "$ref": "#/components/examples/UAE"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Valid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateAddressRequestSchema"
                },
                "examples": {
                  "example_1": {
                    "$ref": "#/components/examples/ValidateAddressResponse1"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseV3"
                },
                "examples": {
                  "example_3": {
                    "value": {
                      "success": false,
                      "error": {
                        "type": null,
                        "value": null,
                        "message": "No address fields found for the specified country code"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Country & Locality"
        ],
        "tags": [
          "Logistic"
        ]
      }
    },
    "/service/application/logistics/v1.0/company/{company_id}/application/{application_id}/shipments": {
      "post": {
        "summary": "createShipments | Create and return shipments.",
        "description": "Create and return shipments.",
        "tags": [
          "Logistic"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "company_id",
            "description": "The ID of the company.",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "examples": {
              "Mumbai": {
                "value": 101
              },
              "Pune": {
                "value": 123
              }
            }
          },
          {
            "in": "path",
            "name": "application_id",
            "description": "The ID of the application.",
            "schema": {
              "type": "string"
            },
            "required": true,
            "examples": {
              "Mumbai": {
                "value": "7524dac0e2e6dec99c1856d9"
              },
              "Pune": {
                "value": "6524dac0e2e6dec99c1856da"
              }
            }
          }
        ],
        "x-groups": [
          "Shipment Packaging"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateShipmentsRequestSchema"
              },
              "examples": {
                "Mumbai": {
                  "$ref": "#/components/examples/GenerateShipmentsMumbai"
                },
                "Pune": {
                  "$ref": "#/components/examples/GenerateShipmentsPune"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Valid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateShipmentsAndCourierPartnerResponseSchema"
                },
                "examples": {
                  "Mumbai": {
                    "$ref": "#/components/examples/GenerateShipmentsAndCourierPartnerMumbai"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceabilityErrorResponseSchema"
                },
                "examples": {
                  "Pune": {
                    "value": {
                      "type": "ValueError",
                      "value": "400002",
                      "message": "We are not delivering to '400002'"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/service/application/logistics/v1.0/delivery-promise": {
      "get": {
        "summary": "getDeliveryPromise | Get delivery promise",
        "description": "Get delivery promises for both global and store levels based on a specific locality type.",
        "tags": [
          "Logistic"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page_no",
            "description": "The page number to navigate through the given set of results. Default value is 1.",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "required": false,
            "examples": {
              "success": {
                "value": 1
              },
              "failure": {
                "value": "xx"
              }
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of items to retrieve in each page. Default value is 12.",
            "schema": {
              "type": "integer",
              "default": 12
            },
            "required": false,
            "examples": {
              "success": {
                "value": 6
              },
              "failure": {
                "value": "xx"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get delivery promise data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPromiseDetails"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/GetPromiseDetailsExample"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failure Response Status for bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                },
                "examples": {
                  "failure": {
                    "value": {
                      "message": "INVALID_PAGE_NO_PAGE_SIZE"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Promise"
        ]
      }
    },
    "/service/application/order-manage/v1.0/shipment/{shipment_id}/refund-summary": {
      "get": {
        "summary": "getShipmentRefundSummary | Retreives shipment's refund summary.",
        "description": "Retreives shipment's refund summary using its shipment ID.",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "in": "path",
            "description": "ID of the shipment. An order may contain multiple items and may get divided into one or more shipment, each having its own ID.",
            "name": "shipment_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "16722505549091367924"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `ShipmentRefundSummaries` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipmentRefundSummaryResponseSchema"
                },
                "examples": {
                  "success": {
                    "value": {
                      "currency": {
                        "currency_code": "INR",
                        "currency_name": "Indian Rupee",
                        "currency_symbol": "₹",
                        "currency_sub_unit": "Paisa"
                      },
                      "refund_summary": [
                        {
                          "amount": 100,
                          "mode": "NB",
                          "mode_display_name": "Net Banking",
                          "refund_status": "REFUND PROCESSING",
                          "refund_initiated_at": "2024-04-29T08:30:00Z",
                          "refund_updated_at": "2024-04-29T08:30:00Z",
                          "meta": {
                            "utr": "411700512844"
                          }
                        },
                        {
                          "amount": 200,
                          "mode": "CARD",
                          "mode_display_name": "CARD",
                          "refund_status": "REFUND COMPLETED",
                          "refund_initiated_at": "2024-04-29T08:30:00Z",
                          "refund_updated_at": "2024-04-29T08:30:00Z",
                          "meta": {
                            "utr": "411700512888"
                          }
                        }
                      ],
                      "success": true
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bad request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApefaceApiError"
                },
                "examples": {
                  "failure": {
                    "value": {
                      "message": "Invalid Shipment Id",
                      "success": false
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "applicationId": [],
            "applicationToken": []
          }
        ],
        "x-groups": [
          "Refund"
        ]
      }
    },
    "/service/application/order-manage/v1.0/shipment/{shipment_id}/refund-options": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "getRefundOptions | Retrieve refund options with amount breakup for  specific shipment and bags.",
        "description": "This API can be used for giving the refund amount with available option of MOPs.",
        "parameters": [
          {
            "in": "path",
            "description": "ID of the shipment. An order may contain multiple items and may get divided into one or more shipment, each having its own ID.",
            "name": "shipment_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "summary": "Valid shipment_id.",
                "value": "17171553441681910006"
              },
              "failure": {
                "summary": "Invalid shipment ID.",
                "value": 1
              }
            }
          },
          {
            "in": "query",
            "description": "It is the bag_id of the bags with comma separated.",
            "name": "bag_ids",
            "required": false,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "summary": "Valid bag id with comma separated.",
                "value": "21248920"
              },
              "failure": {
                "summary": "Invalid bag ids",
                "value": "abc,123"
              }
            }
          },
          {
            "in": "query",
            "description": "It is the desired state at which refund amount needs to be calculated.",
            "name": "state",
            "required": false,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "summary": "Valid state of a shipment.",
                "value": "cancelled_customer"
              },
              "failure": {
                "summary": "Invalid state of a shipment.",
                "value": 1
              }
            }
          },
          {
            "in": "query",
            "description": "It is affiliate id of the order in case of cross selling.",
            "name": "optin_app_id",
            "required": false,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "summary": "Valid optin_app_id in case of cross selling.",
                "value": "5e2fafc88b352fdcbc49fa30"
              },
              "failure": {
                "summary": "Invalid option_app_id in case of cross selling.",
                "value": "1"
              }
            }
          },
          {
            "in": "query",
            "description": "It is company id of the order in case of cross selling.",
            "name": "optin_company_id",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "examples": {
              "success": {
                "summary": "Valid optin_company_id in case of cross selling.",
                "value": 123
              },
              "failure": {
                "summary": "Invalid option_company_id in case of cross selling.",
                "value": "abcd"
              }
            }
          },
          {
            "in": "query",
            "description": "It specifies the desired status to which the shipment should be updated. It represents the next step in the shipment's lifecycle,  such as being cancelled by the customer or moved to another status in the shipping process.",
            "name": "status",
            "required": false,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "summary": "Valid status name.",
                "value": "cancelled_customer"
              },
              "failure": {
                "summary": "Invalid status name.",
                "value": "12345"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "refund option response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefundOptionsSchemaResponseSchema"
                },
                "examples": {
                  "success": {
                    "value": {
                      "success": true,
                      "currency": {
                        "currency_code": "INR",
                        "currency_symbol": "₹"
                      },
                      "refund_options": [
                        {
                          "id": 210,
                          "name": "refund_to_source",
                          "display_name": "Refund to Source",
                          "is_active": true,
                          "breakups": [
                            {
                              "mode": "Online",
                              "amount": 1150,
                              "display_name": "Online Modes",
                              "offline": false
                            }
                          ],
                          "option": [],
                          "offline": false
                        },
                        {
                          "id": 211,
                          "name": "creditnote",
                          "display_name": "Credit Note",
                          "is_active": true,
                          "amount": 2300,
                          "breakups": [],
                          "option": [],
                          "offline": false
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "applicationId": [],
            "applicationToken": []
          }
        ],
        "x-groups": [
          "Refund"
        ]
      }
    },
    "/service/application/order/v1.0/orders": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "getOrders | List customer orders",
        "description": "Get all orders associated with a customer account.",
        "parameters": [
          {
            "in": "query",
            "description": "A filter to retrieve orders by their current status such as 'placed', 'delivered' etc.",
            "name": "status",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "examples": {
              "success": {
                "value": 2
              },
              "failure": {
                "value": 2
              }
            }
          },
          {
            "in": "query",
            "description": "The page number to navigate through the given set of results. Default value is 1.",
            "name": "page_no",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "examples": {
              "success": {
                "value": 1
              },
              "failure": {
                "value": 1
              }
            }
          },
          {
            "in": "query",
            "description": "The number of items to retrieve in each page. Default value is 10.",
            "name": "page_size",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "examples": {
              "success": {
                "value": 10
              },
              "failure": {
                "value": 10
              }
            }
          },
          {
            "in": "query",
            "description": "The date from which the orders should be retrieved.",
            "name": "from_date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "examples": {
              "success": {
                "value": "02-18-2024"
              },
              "failure": {
                "value": "2024-02-18"
              }
            }
          },
          {
            "in": "query",
            "description": "The date till which the orders should be retrieved.",
            "name": "to_date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "examples": {
              "success": {
                "value": "03-20-2024"
              },
              "failure": {
                "value": "2024-03-20"
              }
            }
          },
          {
            "in": "query",
            "description": "Start date in UTC (ISO-8601 format).",
            "name": "start_date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "examples": {
              "success": {
                "value": "08-21-2024"
              },
              "failure": {
                "value": "2024-08-21"
              }
            }
          },
          {
            "in": "query",
            "description": "End date in UTC (ISO-8601 format).",
            "name": "end_date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "examples": {
              "success": {
                "value": "08-21-2024"
              },
              "failure": {
                "value": "2024-08-21"
              }
            }
          },
          {
            "in": "query",
            "description": "A filter and retrieve data using special fields included for special use-cases.",
            "name": "custom_meta",
            "required": false,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "6388422a5ebd6a6cf4a8ede6"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns all the orders.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderList"
                },
                "examples": {
                  "success": {
                    "value": {
                      "items": [
                        {
                          "order": null,
                          "bags_for_reorder": [
                            {
                              "item_id": 7500429,
                              "item_size": "OS",
                              "store_id": 50,
                              "seller_id": 33,
                              "article_assignment": {
                                "level": "multi-companies",
                                "strategy": "low-price"
                              },
                              "quantity": 3
                            }
                          ],
                          "gstin_code": "27AALCA0442L1ZM",
                          "user_info": {
                            "mobile": "9892133001",
                            "first_name": "User",
                            "last_name": "-",
                            "gender": "male"
                          },
                          "order_created_time": "2022-09-23T12:07:20.000Z",
                          "total_shipments_in_order": 2,
                          "order_id": "FY632D541F01152493D0",
                          "charges": [],
                          "breakup_values": [
                            {
                              "name": "mrp_total",
                              "display": "MRP Total",
                              "value": 3000
                            },
                            {
                              "name": "sub_total",
                              "display": "Sub Total",
                              "value": 1797
                            },
                            {
                              "name": "coupon",
                              "display": "Coupon",
                              "value": 0
                            },
                            {
                              "name": "discount",
                              "display": "Discount",
                              "value": -1203
                            },
                            {
                              "name": "promotion",
                              "display": "Promotion",
                              "value": 0
                            },
                            {
                              "name": "reward_points",
                              "display": "Reward Points",
                              "value": 0
                            },
                            {
                              "name": "cashback_applied",
                              "display": "Cashback Applied",
                              "value": 0
                            },
                            {
                              "name": "delivery_charges",
                              "display": "Delivery Charges",
                              "value": 0
                            },
                            {
                              "name": "cod_charges",
                              "display": "COD Charges",
                              "value": 0
                            },
                            {
                              "name": "amount_to_be_collected",
                              "display": "Amount To Be Collected",
                              "value": 0
                            },
                            {
                              "name": "Delivery Charge 2",
                              "display": "Delivery Charge 2",
                              "value": 100
                            },
                            {
                              "name": "total",
                              "display": "Total",
                              "value": 1897
                            }
                          ],
                          "shipments": [
                            {
                              "order_id": "FY632D541F01152493D0",
                              "order": {
                                "meta": {
                                  "custom_cart_id": "652ce6972512f05477a32547",
                                  "name": "Universal/Smart Bazar/Fresh Cart",
                                  "slug": "universal/smart-bazar/fresh-cart"
                                },
                                "charges": [
                                  {
                                    "code": "Delivery Charge 2",
                                    "name": "Delivery Charge 2",
                                    "type": "charge",
                                    "amount": {
                                      "base_currency": {
                                        "value": 100,
                                        "currency": "INR"
                                      },
                                      "ordering_currency": {
                                        "value": 100,
                                        "currency": "INR"
                                      }
                                    },
                                    "distribution_logic": {
                                      "distribution": {
                                        "rule": {
                                          "conditions": {
                                            "department": [
                                              "elect",
                                              "groceries"
                                            ],
                                            "article_tag": "1p"
                                          }
                                        },
                                        "type": "multi",
                                        "logic": "apportion"
                                      },
                                      "distribution_level": "shipment"
                                    }
                                  }
                                ]
                              },
                              "breakup_values": [
                                {
                                  "name": "mrp_total",
                                  "display": "MRP Total",
                                  "value": 2000
                                },
                                {
                                  "name": "sub_total",
                                  "display": "Sub Total",
                                  "value": 1198
                                },
                                {
                                  "name": "coupon",
                                  "display": "Coupon",
                                  "value": 0
                                },
                                {
                                  "name": "discount",
                                  "display": "Discount",
                                  "value": -802
                                },
                                {
                                  "name": "promotion",
                                  "display": "Promotion",
                                  "value": 0
                                },
                                {
                                  "name": "reward_points",
                                  "display": "Reward Points",
                                  "value": 0
                                },
                                {
                                  "name": "cashback_applied",
                                  "display": "Cashback Applied",
                                  "value": 0
                                },
                                {
                                  "name": "delivery_charges",
                                  "display": "Delivery Charges",
                                  "value": 0
                                },
                                {
                                  "name": "cod_charges",
                                  "display": "COD Charges",
                                  "value": 0
                                },
                                {
                                  "name": "amount_to_be_collected",
                                  "display": "Amount To Be Collected",
                                  "value": 0
                                },
                                {
                                  "name": "Delivery Charge 2",
                                  "display": "Delivery Charge 2",
                                  "value": 100
                                },
                                {
                                  "name": "total",
                                  "display": "Total",
                                  "value": 1298
                                }
                              ],
                              "beneficiary_details": false,
                              "shipment_created_at": "2022-09-23T12:07:35.000Z",
                              "shipment_id": "16639150404761166748K",
                              "shipment_status": {
                                "title": "Placed",
                                "value": "processing",
                                "hex_code": "#02D1CB"
                              },
                              "track_url": "",
                              "traking_no": "",
                              "awb_no": "",
                              "dp_name": "",
                              "tracking_details": [
                                {
                                  "status": "Order Placed",
                                  "time": "2022-09-23T12:07:35.000Z",
                                  "is_passed": true,
                                  "value": "processing"
                                },
                                {
                                  "status": "Order Confirmed",
                                  "time": "",
                                  "is_passed": false,
                                  "value": "confirmed"
                                },
                                {
                                  "status": "Delivery Partner Assigned",
                                  "time": "",
                                  "is_passed": false,
                                  "value": "dp_assigned"
                                },
                                {
                                  "status": "In Transit",
                                  "time": "",
                                  "is_passed": false,
                                  "value": "in_transit"
                                },
                                {
                                  "status": "Out For Delivery",
                                  "time": "",
                                  "is_passed": false,
                                  "value": "out_for_delivery"
                                },
                                {
                                  "status": "Delivered",
                                  "time": "",
                                  "is_passed": false,
                                  "value": "delivered"
                                }
                              ],
                              "total_bags": 1,
                              "order_type": "HomeDelivery",
                              "promise": {
                                "show_promise": true,
                                "timestamp": {
                                  "dp_promise": null,
                                  "min": "2022-09-26T06:37:17.000Z",
                                  "max": "2022-09-27T06:37:17.000Z"
                                }
                              },
                              "bags": [
                                {
                                  "id": 67631,
                                  "current_status": {
                                    "status": "placed",
                                    "updated_at": "2022-09-23T12:07:35.000Z",
                                    "name": "Placed",
                                    "journey_type": "forward"
                                  },
                                  "charges": [],
                                  "prices": {
                                    "price_effective": 599,
                                    "discount": 401,
                                    "amount_paid": 599,
                                    "coupon_effective_discount": 0,
                                    "delivery_charge": 0,
                                    "fynd_credits": 0,
                                    "cod_charges": 0,
                                    "refund_credit": 0,
                                    "cashback": 0,
                                    "refund_amount": 599,
                                    "added_to_fynd_cash": false,
                                    "cashback_applied": 0,
                                    "gst_tax_percentage": 5,
                                    "value_of_good": 570.48,
                                    "price_marked": 1000,
                                    "transfer_price": 0,
                                    "brand_calculated_amount": 599,
                                    "promotion_effective_discount": 0,
                                    "coupon_value": 0,
                                    "amount_to_be_collected": 0,
                                    "pm_price_split": {
                                      "": 599
                                    }
                                  },
                                  "item": {
                                    "name": "FYND Black T-Shirt 03",
                                    "brand": {
                                      "name": "lacoste",
                                      "logo": "https://hdn-1.jiomarketx0.de/x0/brands/pictures/square-logo/original/JK1ZUAgrl-Logo.png"
                                    },
                                    "image": [
                                      "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/Cg5vRX38t-FYND-Black-Cotton-Mens-T-shirt.jpeg",
                                      "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/QkYTI_VBn-FYND-Black-Cotton-Mens-T-shirt.jpeg",
                                      "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/QRNIZFn7_-FYND-Black-T-Shirt.jpeg",
                                      "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/TJLO6V8dW-FYND-Black-T-Shirt.jpeg",
                                      "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/h0HW_3rr5-FYND-Black-T-Shirt-01.jpeg",
                                      "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/u1zbaCncl-FYND-Black-T-Shirt-01.jpeg",
                                      "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/TJLO6V8dW-FYND-Black-T-Shirt.jpeg",
                                      "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/h0HW_3rr5-FYND-Black-T-Shirt-01.jpeg",
                                      "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/u1zbaCncl-FYND-Black-T-Shirt-01.jpeg"
                                    ],
                                    "slug_key": "fynd-black-cotton-mens-t-shirt",
                                    "size": "OS",
                                    "code": "SHIRT-01",
                                    "id": 7500429,
                                    "category": {
                                      "l1": [
                                        {
                                          "uid": 124,
                                          "name": "Apparel",
                                          "level": 1,
                                          "departments": [
                                            {
                                              "uid": 24,
                                              "name": "Crafts Of India"
                                            },
                                            {
                                              "uid": 8,
                                              "name": "Fashion"
                                            }
                                          ],
                                          "gated_category_types": {}
                                        }
                                      ],
                                      "l2": [
                                        {
                                          "uid": 50,
                                          "name": "Western Wear",
                                          "level": 2,
                                          "departments": [
                                            {
                                              "uid": 8,
                                              "name": "Fashion"
                                            }
                                          ],
                                          "gated_category_types": {}
                                        }
                                      ],
                                      "l3": [
                                        {
                                          "uid": 25,
                                          "name": "T-Shirts",
                                          "level": 3,
                                          "departments": [
                                            {
                                              "uid": 1,
                                              "name": "Men's Fashionjhjh"
                                            },
                                            {
                                              "uid": 8,
                                              "name": "Fashion"
                                            }
                                          ],
                                          "gated_category_types": {
                                            "food": false
                                          }
                                        }
                                      ]
                                    },
                                    "seller_identifier": "SHIRT-01"
                                  },
                                  "financial_breakup": [
                                    {
                                      "price_effective": 599,
                                      "discount": 401,
                                      "amount_paid": 599,
                                      "coupon_effective_discount": 0,
                                      "delivery_charge": 0,
                                      "fynd_credits": 0,
                                      "cod_charges": 0,
                                      "refund_credit": 0,
                                      "cashback": 0,
                                      "refund_amount": 599,
                                      "added_to_fynd_cash": false,
                                      "cashback_applied": 0,
                                      "gst_tax_percentage": 5,
                                      "value_of_good": 570.48,
                                      "price_marked": 1000,
                                      "transfer_price": 0,
                                      "brand_calculated_amount": 599,
                                      "promotion_effective_discount": 0,
                                      "coupon_value": 0,
                                      "amount_to_be_collected": 0,
                                      "pm_price_split": {
                                        "": 599
                                      },
                                      "size": "OS",
                                      "total_units": 1,
                                      "hsn_code": "62063000",
                                      "identifiers": {
                                        "sku_code": "SHIRT-01"
                                      },
                                      "item_name": "FYND Black T-Shirt 03",
                                      "gst_fee": 28.52,
                                      "gst_tag": "SGST"
                                    }
                                  ],
                                  "quantity": 2,
                                  "can_cancel": true,
                                  "can_return": false,
                                  "delivery_date": null,
                                  "returnable_date": null,
                                  "article": [
                                    {
                                      "tags": [
                                        "1P"
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "size_info": {
                                "SHIRT-01": {
                                  "quantity": 2,
                                  "price_effective": 599,
                                  "amount_paid": 599,
                                  "price_marked": 1000,
                                  "margin": 40.1
                                }
                              },
                              "total_details": {
                                "sizes": 1,
                                "total_price": 599,
                                "pieces": 2
                              },
                              "fulfilling_store": {
                                "name": "Jio-market-store4",
                                "company_id": 33,
                                "id": 50,
                                "code": "store3"
                              },
                              "fulfilling_company": {
                                "id": 33,
                                "name": "RELIANCE JIO INFOCOMM LIMITED"
                              },
                              "delivery_date": null,
                              "delivery_address": {
                                "id": "62dfe1d112b842b2959de99e",
                                "uid": 660,
                                "area": "asd",
                                "city": "Mumbai",
                                "name": "Vaishakh Shetty",
                                "email": "vaishakh@gofynd.com",
                                "phone": "9892133001",
                                "state": "Maharashtra",
                                "address": "dsa",
                                "country": "India",
                                "pincode": "400059",
                                "version": "1.0",
                                "address1": " asd",
                                "address2": "",
                                "landmark": "tr",
                                "latitude": 19.1157486,
                                "address_1": " asd",
                                "area_code": "400059",
                                "longitude": 72.8773159,
                                "created_at": "2022-09-22T18:19:29.000Z",
                                "updated_at": "2022-09-22T18:19:29.000Z",
                                "address_type": "home",
                                "country_code": "91",
                                "geo_location": {
                                  "latitude": 19.1157486,
                                  "longitude": 72.8773159
                                },
                                "area_code_slug": "pincode",
                                "delivery_address_id": 660,
                                "addressee_name": "Vaishakh Shetty",
                                "delivery_code_required": 1
                              },
                              "billing_address": {
                                "id": "62dfe1d112b842b2959de99e",
                                "uid": 660,
                                "area": "asd",
                                "city": "Mumbai",
                                "name": "Vaishakh Shetty",
                                "email": "vaishakh@gofynd.com",
                                "phone": "9892133001",
                                "state": "Maharashtra",
                                "address": "dsa",
                                "country": "India",
                                "pincode": "400059",
                                "version": "1.0",
                                "address1": " asd",
                                "address2": "",
                                "landmark": "tr",
                                "latitude": 19.1157486,
                                "address_1": " asd",
                                "area_code": "400059",
                                "longitude": 72.8773159,
                                "created_at": "2022-09-22T18:19:29.000Z",
                                "updated_at": "2022-09-22T18:19:29.000Z",
                                "address_type": "home",
                                "country_code": "91",
                                "geo_location": {
                                  "latitude": 19.1157486,
                                  "longitude": 72.8773159
                                },
                                "area_code_slug": "pincode",
                                "delivery_address_id": 660,
                                "addressee_name": "Vaishakh Shetty",
                                "delivery_code_required": 1
                              },
                              "can_cancel": true,
                              "can_return": false,
                              "returnable_date": null,
                              "show_download_invoice": false,
                              "show_track_link": false,
                              "prices": {
                                "amount_paid": 1198,
                                "refund_amount": 1198,
                                "price_marked": 2000,
                                "cod_charges": 0,
                                "coupon_value": 0,
                                "discount": 802,
                                "cashback_applied": 0,
                                "delivery_charge": 0,
                                "fynd_credits": 0,
                                "cashback": 0,
                                "price_effective": 1198,
                                "refund_credit": 0,
                                "value_of_good": 1140.96,
                                "discount_percent": 40,
                                "amount_to_be_collected": 0
                              },
                              "can_break": {
                                "bag_repriced": {
                                  "can_break_entity": false
                                },
                                "cancelled_seller": {
                                  "can_break_entity": false
                                },
                                "bag_not_verified": {
                                  "can_break_entity": false
                                },
                                "product_not_available": {
                                  "can_break_entity": false
                                },
                                "bag_invoiced": {
                                  "can_break_entity": false
                                },
                                "store_reassigned": {
                                  "can_break_entity": false
                                },
                                "cancelled_fynd": {
                                  "can_break_entity": false
                                },
                                "cancelled_operations": {
                                  "can_break_entity": true
                                },
                                "cancelled_customer": {
                                  "can_break_entity": true
                                },
                                "bag_not_confirmed": {
                                  "can_break_entity": true
                                },
                                "delivery_sla_breached": {
                                  "can_break_entity": false
                                },
                                "bag_confirmed": {
                                  "can_break_entity": true
                                }
                              },
                              "need_help_url": "https://fynd.freshdesk.com/support/solutions/33000003306",
                              "payment": {
                                "logo": "https://hdn-1.fynd.com/payment/Pos+Logo.png",
                                "mode": "Jio Partner Pay",
                                "mop": "PREPAID",
                                "status": "Paid"
                              },
                              "payment_info": [
                                {
                                  "logo": "https://hdn-1.fynd.com/payment/Pos+Logo.png",
                                  "mode": "Jio Partner Pay",
                                  "mop": "PREPAID",
                                  "status": "Paid"
                                }
                              ],
                              "user_info": {
                                "email": "paymentsdummy@gofynd.com",
                                "gender": "male",
                                "mobile": "9892133001",
                                "name": "User -"
                              },
                              "comment": "",
                              "invoice": {
                                "updated_date": "1970-01-01T00:00:00.000Z",
                                "store_invoice_id": null,
                                "invoice_url": "",
                                "label_url": ""
                              },
                              "refund_details": {
                                "rrn": null
                              }
                            },
                            {
                              "order_id": "FY632D541F01152493D0",
                              "breakup_values": [
                                {
                                  "name": "mrp_total",
                                  "display": "MRP Total",
                                  "value": 1000
                                },
                                {
                                  "name": "sub_total",
                                  "display": "Sub Total",
                                  "value": 599
                                },
                                {
                                  "name": "coupon",
                                  "display": "Coupon",
                                  "value": 0
                                },
                                {
                                  "name": "discount",
                                  "display": "Discount",
                                  "value": -401
                                },
                                {
                                  "name": "promotion",
                                  "display": "Promotion",
                                  "value": 0
                                },
                                {
                                  "name": "reward_points",
                                  "display": "Reward Points",
                                  "value": 0
                                },
                                {
                                  "name": "cashback_applied",
                                  "display": "Cashback Applied",
                                  "value": 0
                                },
                                {
                                  "name": "delivery_charges",
                                  "display": "Delivery Charges",
                                  "value": 0
                                },
                                {
                                  "name": "cod_charges",
                                  "display": "COD Charges",
                                  "value": 0
                                },
                                {
                                  "name": "amount_to_be_collected",
                                  "display": "Amount To Be Collected",
                                  "value": 0
                                },
                                {
                                  "name": "total",
                                  "display": "Total",
                                  "value": 599
                                }
                              ],
                              "beneficiary_details": false,
                              "shipment_created_at": "2022-09-23T12:07:58.000Z",
                              "shipment_id": "16639150772951172388K",
                              "shipment_status": {
                                "title": "Refund Initiated",
                                "value": "refund_initiated",
                                "hex_code": "#FE8F46"
                              },
                              "track_url": "",
                              "traking_no": "",
                              "awb_no": "",
                              "dp_name": "",
                              "tracking_details": [
                                {
                                  "status": "Order Placed",
                                  "time": "2022-09-23T12:07:35.000Z",
                                  "is_passed": true,
                                  "value": "processing"
                                },
                                {
                                  "status": "Cancelled",
                                  "time": "2022-09-23T12:07:57.000Z",
                                  "is_passed": true,
                                  "value": "cancelled"
                                },
                                {
                                  "status": "Refund Processing",
                                  "time": "2022-09-23T12:07:58.000Z",
                                  "is_passed": true,
                                  "value": "refund_initiated",
                                  "tracking_details": [
                                    {
                                      "status": "Refund Initiated",
                                      "time": "2022-09-23T12:07:58.000Z",
                                      "is_passed": true,
                                      "value": "refund_initiated"
                                    },
                                    {
                                      "status": "Refund Completed",
                                      "time": "",
                                      "is_passed": false,
                                      "value": "refund_done"
                                    }
                                  ]
                                }
                              ],
                              "total_bags": 1,
                              "order_type": null,
                              "promise": {
                                "show_promise": false,
                                "timestamp": {
                                  "dp_promise": null,
                                  "min": "2022-09-26T06:37:17.000Z",
                                  "max": "2022-09-27T06:37:17.000Z"
                                }
                              },
                              "bags": [
                                {
                                  "id": 67632,
                                  "current_status": {
                                    "status": "refund_acknowledged",
                                    "updated_at": "2022-09-23T12:07:58.000Z",
                                    "name": "Refund Acknowledged",
                                    "journey_type": null
                                  },
                                  "prices": {
                                    "price_effective": 599,
                                    "discount": 401,
                                    "amount_paid": 599,
                                    "coupon_effective_discount": 0,
                                    "delivery_charge": 0,
                                    "fynd_credits": 0,
                                    "cod_charges": 0,
                                    "refund_credit": 0,
                                    "cashback": 0,
                                    "refund_amount": 599,
                                    "added_to_fynd_cash": false,
                                    "cashback_applied": 0,
                                    "gst_tax_percentage": 5,
                                    "value_of_good": 570.48,
                                    "price_marked": 1000,
                                    "transfer_price": 0,
                                    "brand_calculated_amount": 599,
                                    "promotion_effective_discount": 0,
                                    "coupon_value": 0,
                                    "amount_to_be_collected": 0,
                                    "pm_price_split": {
                                      "": 599
                                    }
                                  },
                                  "item": {
                                    "name": "FYND Black T-Shirt 03",
                                    "brand": {
                                      "name": "lacoste",
                                      "logo": "https://hdn-1.jiomarketx0.de/x0/brands/pictures/square-logo/original/JK1ZUAgrl-Logo.png"
                                    },
                                    "image": [
                                      "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/Cg5vRX38t-FYND-Black-Cotton-Mens-T-shirt.jpeg",
                                      "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/QkYTI_VBn-FYND-Black-Cotton-Mens-T-shirt.jpeg",
                                      "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/QRNIZFn7_-FYND-Black-T-Shirt.jpeg",
                                      "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/TJLO6V8dW-FYND-Black-T-Shirt.jpeg",
                                      "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/h0HW_3rr5-FYND-Black-T-Shirt-01.jpeg",
                                      "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/u1zbaCncl-FYND-Black-T-Shirt-01.jpeg",
                                      "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/TJLO6V8dW-FYND-Black-T-Shirt.jpeg",
                                      "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/h0HW_3rr5-FYND-Black-T-Shirt-01.jpeg",
                                      "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/u1zbaCncl-FYND-Black-T-Shirt-01.jpeg"
                                    ],
                                    "slug_key": "fynd-black-cotton-mens-t-shirt",
                                    "size": "OS",
                                    "code": "SHIRT-01",
                                    "id": 7500429,
                                    "category": {
                                      "l1": [
                                        {
                                          "uid": 124,
                                          "name": "Apparel",
                                          "level": 1,
                                          "departments": [
                                            {
                                              "uid": 24,
                                              "name": "Crafts Of India"
                                            },
                                            {
                                              "uid": 8,
                                              "name": "Fashion"
                                            }
                                          ],
                                          "gated_category_types": {}
                                        }
                                      ],
                                      "l2": [
                                        {
                                          "uid": 50,
                                          "name": "Western Wear",
                                          "level": 2,
                                          "departments": [
                                            {
                                              "uid": 8,
                                              "name": "Fashion"
                                            }
                                          ],
                                          "gated_category_types": {}
                                        }
                                      ],
                                      "l3": [
                                        {
                                          "uid": 25,
                                          "name": "T-Shirts",
                                          "level": 3,
                                          "departments": [
                                            {
                                              "uid": 1,
                                              "name": "Men's Fashionjhjh"
                                            },
                                            {
                                              "uid": 8,
                                              "name": "Fashion"
                                            }
                                          ],
                                          "gated_category_types": {
                                            "food": false
                                          }
                                        }
                                      ]
                                    },
                                    "seller_identifier": "SHIRT-01",
                                    "attributes": {
                                      "name": "BAG-LATCH",
                                      "brand_name": "MOTOROLO",
                                      "aaa-attribute": "latch",
                                      "media": []
                                    },
                                    "variants": {
                                      "size": "490863714_size"
                                    }
                                  },
                                  "financial_breakup": [
                                    {
                                      "price_effective": 599,
                                      "discount": 401,
                                      "amount_paid": 599,
                                      "coupon_effective_discount": 0,
                                      "delivery_charge": 0,
                                      "fynd_credits": 0,
                                      "cod_charges": 0,
                                      "refund_credit": 0,
                                      "cashback": 0,
                                      "refund_amount": 599,
                                      "added_to_fynd_cash": false,
                                      "cashback_applied": 0,
                                      "gst_tax_percentage": 5,
                                      "value_of_good": 570.48,
                                      "price_marked": 1000,
                                      "transfer_price": 0,
                                      "brand_calculated_amount": 599,
                                      "promotion_effective_discount": 0,
                                      "coupon_value": 0,
                                      "amount_to_be_collected": 0,
                                      "pm_price_split": {
                                        "": 599
                                      },
                                      "size": "OS",
                                      "total_units": 1,
                                      "hsn_code": "62063000",
                                      "identifiers": {
                                        "sku_code": "SHIRT-01"
                                      },
                                      "item_name": "FYND Black T-Shirt 03",
                                      "gst_fee": 28.52,
                                      "gst_tag": "SGST"
                                    }
                                  ],
                                  "quantity": 1,
                                  "can_cancel": false,
                                  "can_return": false,
                                  "delivery_date": null,
                                  "returnable_date": null
                                }
                              ],
                              "size_info": {
                                "SHIRT-01": {
                                  "quantity": 1,
                                  "price_effective": 599,
                                  "amount_paid": 599,
                                  "price_marked": 1000,
                                  "margin": 40.1
                                }
                              },
                              "total_details": {
                                "sizes": 1,
                                "total_price": 599,
                                "pieces": 1
                              },
                              "fulfilling_store": {
                                "name": "Jio-market-store4",
                                "company_id": 33,
                                "id": 50,
                                "code": "store3"
                              },
                              "fulfilling_company": {
                                "id": 33,
                                "name": "RELIANCE JIO INFOCOMM LIMITED"
                              },
                              "delivery_date": null,
                              "delivery_address": {
                                "id": "62dfe1d112b842b2959de99e",
                                "uid": 660,
                                "area": "asd",
                                "city": "Mumbai",
                                "name": "Vaishakh Shetty",
                                "email": "vaishakh@gofynd.com",
                                "phone": "9892133001",
                                "state": "Maharashtra",
                                "address": "dsa",
                                "country": "India",
                                "pincode": "400059",
                                "version": "1.0",
                                "address1": " asd",
                                "address2": "",
                                "landmark": "tr",
                                "latitude": 19.1157486,
                                "address_1": " asd",
                                "area_code": "400059",
                                "longitude": 72.8773159,
                                "created_at": "2022-09-22T18:19:29.000Z",
                                "updated_at": "2022-09-22T18:19:29.000Z",
                                "address_type": "home",
                                "country_code": "91",
                                "geo_location": {
                                  "latitude": 19.1157486,
                                  "longitude": 72.8773159
                                },
                                "area_code_slug": "pincode",
                                "delivery_address_id": 660,
                                "addressee_name": "Vaishakh Shetty",
                                "delivery_code_required": 1
                              },
                              "can_cancel": false,
                              "can_return": false,
                              "returnable_date": null,
                              "show_download_invoice": false,
                              "show_track_link": false,
                              "prices": {
                                "amount_paid": 599,
                                "refund_amount": 599,
                                "price_marked": 1000,
                                "cod_charges": 0,
                                "coupon_value": 0,
                                "discount": 401,
                                "cashback_applied": 0,
                                "delivery_charge": 0,
                                "fynd_credits": 0,
                                "cashback": 0,
                                "price_effective": 599,
                                "refund_credit": 0,
                                "value_of_good": 570.48,
                                "discount_percent": 40,
                                "amount_to_be_collected": 0
                              },
                              "can_break": {
                                "refund_completed": {
                                  "can_break_entity": false
                                },
                                "rto_delivery_attempt_failed": {
                                  "can_break_entity": false
                                },
                                "return_rejected_by_dp": {
                                  "can_break_entity": false
                                },
                                "return_to_origin": {
                                  "can_break_entity": false
                                },
                                "rto_initiated": {
                                  "can_break_entity": false
                                },
                                "refund_failed": {
                                  "can_break_entity": false
                                },
                                "bag_picked": {
                                  "can_break_entity": false
                                },
                                "rto_bag_delivered": {
                                  "can_break_entity": false
                                },
                                "return_dp_assigned": {
                                  "can_break_entity": false
                                },
                                "return_bag_in_transit": {
                                  "can_break_entity": false
                                },
                                "return_bag_out_for_delivery": {
                                  "can_break_entity": false
                                },
                                "return_initiated": {
                                  "can_break_entity": true
                                },
                                "return_rejected_by_store": {
                                  "can_break_entity": false
                                },
                                "rto_bag_out_for_delivery": {
                                  "can_break_entity": false
                                },
                                "deadstock": {
                                  "can_break_entity": false
                                },
                                "bag_lost": {
                                  "can_break_entity": false
                                },
                                "return_bag_delivered": {
                                  "can_break_entity": false
                                },
                                "return_completed": {
                                  "can_break_entity": false
                                },
                                "return_bag_picked": {
                                  "can_break_entity": false
                                },
                                "rto_bag_accepted": {
                                  "can_break_entity": false
                                },
                                "deadstock_defective": {
                                  "can_break_entity": false
                                },
                                "rto_in_transit": {
                                  "can_break_entity": false
                                },
                                "return_accepted": {
                                  "can_break_entity": false
                                },
                                "out_for_pickup": {
                                  "can_break_entity": false
                                },
                                "return_bag_not_delivered": {
                                  "can_break_entity": false
                                },
                                "cancelled_customer": {
                                  "can_break_entity": true
                                },
                                "return_bag_lost": {
                                  "can_break_entity": false
                                }
                              },
                              "need_help_url": "https://fynd.freshdesk.com/support/solutions/33000003306",
                              "payment": {
                                "logo": "https://hdn-1.fynd.com/payment/Pos+Logo.png",
                                "mode": "Jio Partner Pay",
                                "mop": "PREPAID",
                                "status": "Paid"
                              },
                              "payment_info": [
                                {
                                  "logo": "https://hdn-1.fynd.com/payment/Pos+Logo.png",
                                  "mode": "Jio Partner Pay",
                                  "mop": "PREPAID",
                                  "status": "Paid"
                                }
                              ],
                              "user_info": {
                                "email": "paymentsdummy@gofynd.com",
                                "gender": "male",
                                "mobile": "9892133001",
                                "name": "User -"
                              },
                              "comment": "",
                              "invoice": {
                                "updated_date": "1970-01-01T00:00:00.000Z",
                                "store_invoice_id": null,
                                "invoice_url": "",
                                "label_url": ""
                              },
                              "refund_details": {
                                "rrn": ""
                              }
                            }
                          ],
                          "is_validated": false,
                          "meta": {}
                        }
                      ],
                      "page": {
                        "type": "number",
                        "size": 12,
                        "current": 1,
                        "has_next": false,
                        "item_total": 10
                      },
                      "filters": {
                        "statuses": [
                          {
                            "display": "All Status",
                            "value": 1,
                            "is_selected": true
                          },
                          {
                            "display": "Delivered",
                            "value": 2,
                            "is_selected": false
                          },
                          {
                            "display": "Cancelled",
                            "value": 3,
                            "is_selected": false
                          },
                          {
                            "display": "Returned",
                            "value": 4,
                            "is_selected": false
                          }
                        ],
                        "global": [
                          {
                            "display_test": "Status",
                            "value": "status",
                            "type": "single_select",
                            "placeholder_text": "Select status",
                            "required": false,
                            "options": [
                              {
                                "display_text": "All",
                                "value": "all",
                                "is_selected": true
                              },
                              {
                                "display_text": "Delivered",
                                "value": "delivered",
                                "is_selected": false
                              },
                              {
                                "display_text": "Cancelled",
                                "value": "cancelled",
                                "is_selected": false
                              },
                              {
                                "display_text": "Returned",
                                "value": "returned",
                                "is_selected": false
                              }
                            ]
                          },
                          {
                            "display_test": "Time",
                            "value": "time_range",
                            "type": "single_select",
                            "placeholder_text": "Select time",
                            "required": false,
                            "options": [
                              {
                                "display_text": "Last 30 days",
                                "value": "last_30_days",
                                "is_selected": false
                              },
                              {
                                "display_text": "Last 3 months",
                                "value": "last_3_months",
                                "is_selected": false
                              },
                              {
                                "display_text": "2024",
                                "value": 2024,
                                "is_selected": false
                              },
                              {
                                "display_text": "2023",
                                "value": 2023,
                                "is_selected": false
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApefaceApiError"
                },
                "examples": {
                  "failure": {
                    "value": {
                      "status": false,
                      "message": "time data '2024-02-18T18%3A30%3A00.000Z' does not match format '%m-%d-%Y'"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Order"
        ]
      }
    },
    "/service/application/order/v1.0/orders/{order_id}": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "getOrderById | Get an order",
        "description": "Get order details such as tracking details, shipment, store information using Fynd Order ID.",
        "parameters": [
          {
            "in": "path",
            "name": "order_id",
            "description": "A unique number used for identifying and tracking an order.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "FY6119EF9A0185F48339"
              },
              "failure": {
                "value": "FY63A51DE50EFBCC3216"
              }
            }
          },
          {
            "in": "query",
            "name": "allow_inactive",
            "description": "Flag to allow inactive shipments.",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "examples": {
              "success": {
                "value": true
              },
              "failure": {
                "value": false
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderById"
                },
                "examples": {
                  "success": {
                    "value": {
                      "$ref": "#/components/examples/GetOrderByIdExample"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bad request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApefaceApiError"
                },
                "examples": {
                  "failure": {
                    "value": {
                      "message": "Order not found!",
                      "success": false
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Order"
        ]
      }
    },
    "/service/application/order/v1.0/orders/pos-order/{order_id}": {
      "get": {
        "summary": "getPosOrderById | Retrieves POS order details.",
        "description": "Retrieve a POS order and all its details such as tracking details, shipment, store information using Fynd Order ID.",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "order_id",
            "description": "A unique number used for identifying and tracking your orders.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "FY6119EF9A0185F48339"
              },
              "failure": {
                "value": "FY6119EF9A0185F42537"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `PosOrderById` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderById"
                },
                "examples": {
                  "success": {
                    "value": {
                      "order": {
                        "order_created_time": "2022-08-11T16:09:17.000Z",
                        "total_shipments_in_order": 1,
                        "order_id": "FY62F4CE260113EFCC64",
                        "charges": [],
                        "external_order_id": "FY62F4CE260113EFCC64",
                        "breakup_values": [
                          {
                            "name": "mrp_total",
                            "display": "MRP Total",
                            "value": 1000
                          },
                          {
                            "name": "sub_total",
                            "display": "Sub Total",
                            "value": 999
                          },
                          {
                            "name": "coupon",
                            "display": "Coupon",
                            "value": 0
                          },
                          {
                            "name": "discount",
                            "display": "Discount",
                            "value": -1
                          },
                          {
                            "name": "promotion",
                            "display": "Promotion",
                            "value": 0
                          },
                          {
                            "name": "reward_points",
                            "display": "Reward Points",
                            "value": 0
                          },
                          {
                            "name": "cashback_applied",
                            "display": "Cashback Applied",
                            "value": 0
                          },
                          {
                            "name": "delivery_charges",
                            "display": "Delivery Charges",
                            "value": 0
                          },
                          {
                            "name": "cod_charges",
                            "display": "COD Charges",
                            "value": 0
                          },
                          {
                            "name": "total",
                            "display": "Total",
                            "value": 999
                          }
                        ],
                        "shipments": [
                          {
                            "order_id": "FY62F4CE260113EFCC64",
                            "external_shipment_id": "16602143565551542371K",
                            "previous_shipment_id": null,
                            "charges": [],
                            "breakup_values": [
                              {
                                "name": "mrp_total",
                                "display": "MRP Total",
                                "value": 1000
                              },
                              {
                                "name": "sub_total",
                                "display": "Sub Total",
                                "value": 999
                              },
                              {
                                "name": "coupon",
                                "display": "Coupon",
                                "value": 0
                              },
                              {
                                "name": "discount",
                                "display": "Discount",
                                "value": -1
                              },
                              {
                                "name": "promotion",
                                "display": "Promotion",
                                "value": 0
                              },
                              {
                                "name": "reward_points",
                                "display": "Reward Points",
                                "value": 0
                              },
                              {
                                "name": "cashback_applied",
                                "display": "Cashback Applied",
                                "value": 0
                              },
                              {
                                "name": "delivery_charges",
                                "display": "Delivery Charges",
                                "value": 0
                              },
                              {
                                "name": "cod_charges",
                                "display": "COD Charges",
                                "value": 0
                              },
                              {
                                "name": "total",
                                "display": "Total",
                                "value": 999
                              }
                            ],
                            "beneficiary_details": false,
                            "shipment_created_at": "2022-08-22T21:33:33.000Z",
                            "shipment_id": "16602143565551542371K",
                            "shipment_status": {
                              "title": "DP Assigned",
                              "value": "dp_assigned",
                              "hex_code": "#FE8F46"
                            },
                            "track_url": "",
                            "traking_no": "Tracking No.: 118022046",
                            "awb_no": "118022046",
                            "dp_name": "ecom_jio",
                            "tracking_details": [
                              {
                                "status": "Order Placed",
                                "time": "2022-08-11T16:09:17.000Z",
                                "is_passed": true,
                                "value": "processing"
                              },
                              {
                                "status": "Order Confirmed",
                                "time": "2022-08-22T17:14:02.000Z",
                                "is_passed": true,
                                "value": "confirmed"
                              },
                              {
                                "status": "Delivery Partner Assigned",
                                "time": "2022-08-22T17:14:13.000Z",
                                "is_passed": true,
                                "value": "dp_assigned"
                              },
                              {
                                "status": "In Transit",
                                "time": "",
                                "is_passed": false,
                                "value": "in_transit"
                              },
                              {
                                "status": "Out For Delivery",
                                "time": "",
                                "is_passed": false,
                                "value": "out_for_delivery"
                              },
                              {
                                "status": "Delivered",
                                "time": "",
                                "is_passed": false,
                                "value": "delivered"
                              }
                            ],
                            "total_bags": 1,
                            "order_type": null,
                            "promise": {
                              "show_promise": false,
                              "timestamp": {
                                "dp_promise": null,
                                "min": "2022-08-15T09:38:44+00:00",
                                "max": "2022-08-18T09:38:44+00:00"
                              }
                            },
                            "bags": [
                              {
                                "id": 59987,
                                "current_status": {
                                  "status": "bag_not_picked",
                                  "updated_at": "2022-08-22T21:33:33+00:00",
                                  "name": "Bag Not Picked",
                                  "journey_type": "forward"
                                },
                                "charges": [],
                                "prices": {
                                  "price_effective": 999,
                                  "discount": 1,
                                  "amount_paid": 999,
                                  "coupon_effective_discount": 0,
                                  "delivery_charge": 0,
                                  "fynd_credits": 0,
                                  "cod_charges": 0,
                                  "refund_credit": 0,
                                  "cashback": 0,
                                  "refund_amount": 999,
                                  "added_to_fynd_cash": false,
                                  "cashback_applied": 0,
                                  "gst_tax_percentage": 18,
                                  "value_of_good": 846.61,
                                  "price_marked": 1000,
                                  "transfer_price": 0,
                                  "brand_calculated_amount": 999,
                                  "promotion_effective_discount": 0,
                                  "coupon_value": 0,
                                  "pm_price_split": {
                                    "Net Banking": 999
                                  }
                                },
                                "item": {
                                  "name": "Puma Men Tshirt",
                                  "brand": {
                                    "name": "Dabur",
                                    "logo": "https://hdn-1.jiomarketx0.de/x0/brands/pictures/square-logo/original/kv5DZy0J8-Logo.jpeg"
                                  },
                                  "image": [
                                    "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/e6qJ_Bihn-61x838nYQUL._UL1440_.jpg"
                                  ],
                                  "slug_key": "puma-men-tshirt",
                                  "size": "OS",
                                  "code": "PUMATSHIRT",
                                  "id": 7507572,
                                  "category": [],
                                  "seller_identifier": "PUMATSHIRT"
                                },
                                "financial_breakup": [
                                  {
                                    "price_effective": 999,
                                    "discount": 1,
                                    "amount_paid": 999,
                                    "coupon_effective_discount": 0,
                                    "delivery_charge": 0,
                                    "fynd_credits": 0,
                                    "cod_charges": 0,
                                    "refund_credit": 0,
                                    "cashback": 0,
                                    "refund_amount": 999,
                                    "added_to_fynd_cash": false,
                                    "cashback_applied": 0,
                                    "gst_tax_percentage": 18,
                                    "value_of_good": 846.61,
                                    "price_marked": 1000,
                                    "transfer_price": 0,
                                    "brand_calculated_amount": 999,
                                    "promotion_effective_discount": 0,
                                    "coupon_value": 0,
                                    "pm_price_split": {
                                      "Net Banking": 999
                                    },
                                    "size": "OS",
                                    "total_units": 1,
                                    "hsn_code": "99972900",
                                    "identifiers": {
                                      "sku_code": "PUMATSHIRT"
                                    },
                                    "item_name": "Puma Men Tshirt",
                                    "gst_fee": 152.38,
                                    "gst_tag": "IGST"
                                  }
                                ],
                                "quantity": 1
                              }
                            ],
                            "size_info": {
                              "PUMATSHIRT": {
                                "quantity": 1,
                                "price_effective": 999,
                                "amount_paid": 999,
                                "price_marked": 1000,
                                "margin": 0.1
                              }
                            },
                            "total_details": {
                              "sizes": 1,
                              "total_price": 999,
                              "pieces": 1
                            },
                            "fulfilling_store": {
                              "name": "jio-location",
                              "company_id": 41,
                              "id": 8,
                              "code": "jio-location"
                            },
                            "fulfilling_company": {
                              "id": 41,
                              "name": "Jio"
                            }
                          }
                        ],
                        "is_validated": false
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bad request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApefaceApiError"
                },
                "examples": {
                  "failure": {
                    "value": {
                      "success": false,
                      "message": "Order Not found!"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Order"
        ]
      }
    },
    "/service/application/order/v1.0/orders/shipments/{shipment_id}": {
      "get": {
        "summary": "getShipmentById | Fetches shipment by ID.",
        "description": "Get shipment details such as price breakup, tracking details, store information, etc. using Shipment ID.",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "in": "path",
            "description": "ID of the shipment. An order may contain multiple items and may get divided into one or more shipment, each having its own ID.",
            "name": "shipment_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "16712173702241747844"
              },
              "failure": {
                "value": "16290896910211240426"
              }
            }
          },
          {
            "in": "query",
            "name": "allow_inactive",
            "description": "Flag to allow inactive shipments.",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "examples": {
              "success": {
                "value": true
              },
              "failure": {
                "value": false
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `ShipmentById` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipmentById"
                },
                "examples": {
                  "success": {
                    "value": {
                      "shipment": {
                        "order_id": "FY62F3B8290150D13E36",
                        "order": {
                          "meta": {
                            "custom_cart_id": "652ce6972512f05477a32547",
                            "name": "Universal/Smart Bazar/Fresh Cart",
                            "slug": "universal/smart-bazar/fresh-cart"
                          },
                          "external_order_id": "FY62F3B8290150D13E36"
                        },
                        "charges": [],
                        "breakup_values": [
                          {
                            "name": "mrp_total",
                            "display": "MRP Total",
                            "value": 50
                          },
                          {
                            "name": "sub_total",
                            "display": "Sub Total",
                            "value": 50
                          },
                          {
                            "name": "coupon",
                            "display": "Coupon",
                            "value": 0
                          },
                          {
                            "name": "discount",
                            "display": "Discount",
                            "value": 0
                          },
                          {
                            "name": "promotion",
                            "display": "Promotion",
                            "value": 0
                          },
                          {
                            "name": "reward_points",
                            "display": "Reward Points",
                            "value": 0
                          },
                          {
                            "name": "cashback_applied",
                            "display": "Cashback Applied",
                            "value": 0
                          },
                          {
                            "name": "delivery_charges",
                            "display": "Delivery Charges",
                            "value": 0
                          },
                          {
                            "name": "cod_charges",
                            "display": "COD Charges",
                            "value": 0
                          },
                          {
                            "name": "amount_to_be_collected",
                            "display": "Amount To Be Collected",
                            "value": 0
                          },
                          {
                            "name": "total",
                            "display": "Total",
                            "value": 50
                          }
                        ],
                        "beneficiary_details": false,
                        "external_shipment_id": "16601395620321798247K",
                        "previous_shipment_id": null,
                        "need_help_url": "https://fynd.freshdesk.com/support/solutions/33000003306",
                        "shipment_created_at": "2022-08-10T19:22:42.000Z",
                        "shipment_id": "16601395620321798247K",
                        "shipment_status": {
                          "title": "DP Assigned",
                          "value": "dp_assigned",
                          "hex_code": "#FE8F46"
                        },
                        "track_url": "",
                        "traking_no": "Tracking No.: 5923410031146",
                        "awb_no": "5923410031146",
                        "dp_name": "delhivery_jio_surface",
                        "tracking_details": [
                          {
                            "status": "Order Placed",
                            "time": "2022-08-10T19:22:55.000Z",
                            "is_passed": true,
                            "value": "processing"
                          },
                          {
                            "status": "Order Confirmed",
                            "time": "2022-08-18T19:11:02.000Z",
                            "is_passed": true,
                            "value": "confirmed"
                          },
                          {
                            "status": "Delivery Partner Assigned",
                            "time": "2022-08-18T19:11:38.000Z",
                            "is_passed": true,
                            "value": "dp_assigned"
                          },
                          {
                            "status": "In Transit",
                            "time": "",
                            "is_passed": false,
                            "value": "in_transit"
                          },
                          {
                            "status": "Out For Delivery",
                            "time": "",
                            "is_passed": false,
                            "value": "out_for_delivery"
                          },
                          {
                            "status": "Delivered",
                            "time": "",
                            "is_passed": false,
                            "value": "delivered"
                          }
                        ],
                        "total_bags": 1,
                        "promise": {
                          "show_promise": false,
                          "timestamp": {
                            "min": "2022-08-14T13:52:37+00:00",
                            "max": "2022-08-17T13:52:37+00:00",
                            "dp_promise": null
                          }
                        },
                        "bags": [
                          {
                            "id": 59624,
                            "current_status": {
                              "status": "bag_not_picked",
                              "updated_at": "2022-08-18T23:46:11+00:00",
                              "name": "Bag Not Picked",
                              "journey_type": "forward"
                            },
                            "charges": [],
                            "prices": {
                              "price_effective": 50,
                              "discount": 0,
                              "amount_paid": 50,
                              "coupon_effective_discount": 0,
                              "delivery_charge": 0,
                              "fynd_credits": 0,
                              "cod_charges": 0,
                              "refund_credit": 0,
                              "cashback": 0,
                              "refund_amount": 50,
                              "added_to_fynd_cash": false,
                              "cashback_applied": 0,
                              "gst_tax_percentage": 18,
                              "value_of_good": 42.37,
                              "price_marked": 50,
                              "transfer_price": 0,
                              "brand_calculated_amount": 50,
                              "promotion_effective_discount": 0,
                              "coupon_value": 0,
                              "amount_to_be_collected": 0,
                              "pm_price_split": {
                                "COD": 50
                              }
                            },
                            "item": {
                              "name": "Tissues",
                              "brand": {
                                "name": "Zepto",
                                "logo": "https://hdn-1.jiomarketx0.de/x0/brands/pictures/square-logo/original/5XLRHXC5H-Logo.png"
                              },
                              "image": [
                                "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/hGov80Pbv-411yLXtNYNL._SL1000_.jpg",
                                "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/U-6bpneFP-Tissues.jpeg",
                                "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/U-6bpneFP-Tissues.jpeg",
                                "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/U-6bpneFP-Tissues.jpeg",
                                "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/U-6bpneFP-Tissues.jpeg",
                                "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/U-6bpneFP-Tissues.jpeg",
                                "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/U-6bpneFP-Tissues.jpeg",
                                "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/U-6bpneFP-Tissues.jpeg",
                                "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/U-6bpneFP-Tissues.jpeg",
                                "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/U-6bpneFP-Tissues.jpeg",
                                "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/U-6bpneFP-Tissues.jpeg"
                              ],
                              "slug_key": "tissues",
                              "size": "OS",
                              "code": "TIS-102",
                              "id": 7500474,
                              "seller_identifier": "987432134",
                              "attributes": {},
                              "variants": {
                                "size": "490863714_size"
                              }
                            },
                            "financial_breakup": [
                              {
                                "price_effective": 50,
                                "discount": 0,
                                "amount_paid": 50,
                                "coupon_effective_discount": 0,
                                "delivery_charge": 0,
                                "fynd_credits": 0,
                                "cod_charges": 0,
                                "refund_credit": 0,
                                "cashback": 0,
                                "refund_amount": 50,
                                "added_to_fynd_cash": false,
                                "cashback_applied": 0,
                                "gst_tax_percentage": 18,
                                "value_of_good": 42.37,
                                "price_marked": 50,
                                "transfer_price": 0,
                                "brand_calculated_amount": 50,
                                "promotion_effective_discount": 0,
                                "coupon_value": 0,
                                "amount_to_be_collected": 0,
                                "pm_price_split": {
                                  "COD": 50
                                },
                                "size": "OS",
                                "total_units": 1,
                                "hsn_code": "70099200",
                                "identifiers": {
                                  "sku_code": "987432134"
                                },
                                "item_name": "Tissues",
                                "gst_fee": 7.62,
                                "gst_tag": "SGST"
                              }
                            ],
                            "quantity": 1,
                            "departments": [
                              31
                            ],
                            "can_cancel": false,
                            "can_return": false,
                            "article": {
                              "tags": [
                                "1P"
                              ],
                              "variants": {
                                "size": "490863714_size"
                              }
                            }
                          }
                        ],
                        "size_info": {
                          "TIS-102": {
                            "quantity": 1,
                            "price_effective": 50,
                            "amount_paid": 50,
                            "price_marked": 50,
                            "margin": 0
                          }
                        },
                        "total_details": {
                          "sizes": 1,
                          "total_price": 50,
                          "pieces": 1
                        },
                        "fulfilling_store": {
                          "name": "Jio-market-store3",
                          "company_id": 33,
                          "id": 50,
                          "code": "store3",
                          "tags": [
                            "infibeam"
                          ]
                        },
                        "fulfilling_company": {
                          "id": 33,
                          "name": "RELIANCE JIO INFOCOMM LIMITED"
                        },
                        "gstin_code": "27AALCA0442L1ZM",
                        "billing_address": {
                          "id": "62e8fc91c1700b808fe528bd",
                          "uid": 745,
                          "area": "test",
                          "city": "Mumbai",
                          "name": "abc",
                          "email": "abc@gofynd.com",
                          "phone": "1234567890",
                          "state": "Maharashtra",
                          "address": "1234",
                          "country": "India",
                          "pincode": "400074",
                          "version": "1.0",
                          "address1": " test",
                          "address2": "",
                          "landmark": "test",
                          "latitude": 19.0653252,
                          "address_1": " test",
                          "area_code": "400074",
                          "longitude": 72.8423802,
                          "created_at": "2022-08-10T18:52:38.000Z",
                          "updated_at": "2022-08-10T18:52:38.000Z",
                          "address_type": "home",
                          "country_code": "91",
                          "geo_location": {
                            "latitude": 19.0653252,
                            "longitude": 72.8423802
                          },
                          "area_code_slug": "pincode",
                          "delivery_address_id": 745,
                          "addressee_name": "abc",
                          "delivery_code_required": 1
                        },
                        "delivery_address": {
                          "id": "62e8fc91c1700b808fe528bd",
                          "uid": 745,
                          "area": "test",
                          "city": "Mumbai",
                          "name": "abc",
                          "email": "abc@gofynd.com",
                          "phone": "1234567890",
                          "state": "Maharashtra",
                          "address": "1234",
                          "country": "India",
                          "pincode": "400074",
                          "version": "1.0",
                          "address1": " test",
                          "address2": "",
                          "landmark": "test",
                          "latitude": 19.0653252,
                          "address_1": " test",
                          "area_code": "400074",
                          "longitude": 72.8423802,
                          "created_at": "2022-08-10T18:52:38+00:00",
                          "updated_at": "2022-08-10T18:52:38+00:00",
                          "address_type": "home",
                          "country_code": "91",
                          "geo_location": {
                            "latitude": 19.0653252,
                            "longitude": 72.8423802
                          },
                          "area_code_slug": "pincode",
                          "delivery_address_id": 745,
                          "addressee_name": "abc",
                          "delivery_code_required": 1
                        },
                        "can_cancel": false,
                        "can_return": false,
                        "delivery_date": null,
                        "returnable_date": null,
                        "show_download_invoice": true,
                        "show_track_link": true,
                        "prices": {
                          "amount_paid": 50,
                          "refund_amount": 50,
                          "price_marked": 50,
                          "cod_charges": 0,
                          "coupon_value": 0,
                          "discount": 0,
                          "cashback_applied": 0,
                          "delivery_charge": 0,
                          "fynd_credits": 0,
                          "cashback": 0,
                          "price_effective": 50,
                          "refund_credit": 0,
                          "value_of_good": 42.37,
                          "amount_to_be_collected": 0
                        },
                        "can_break": {
                          "bag_not_picked": {
                            "can_break_entity": false
                          },
                          "cancelled_customer": {
                            "can_break_entity": true
                          },
                          "bag_picked": {
                            "can_break_entity": false
                          },
                          "cancelled_fynd": {
                            "can_break_entity": true
                          },
                          "bag_rescheduled": {
                            "can_break_entity": false
                          },
                          "cancelled_at_dp": {
                            "can_break_entity": false
                          },
                          "handed_over_to_dg": {
                            "can_break_entity": false
                          },
                          "dp_assigned": {
                            "can_break_entity": false
                          },
                          "cancelled_operations": {
                            "can_break_entity": false
                          },
                          "cancelled_seller": {
                            "can_break_entity": false
                          },
                          "out_for_pickup": {
                            "can_break_entity": false
                          },
                          "bag_pick_failed": {
                            "can_break_entity": false
                          },
                          "update_qr_code": {
                            "can_break_entity": false
                          }
                        },
                        "payment": {
                          "logo": "https://hdn-1.fynd.com/payment/Pos+Logo.png",
                          "mode": "Jio Partner Pay",
                          "mop": "COD",
                          "display_name": "COD",
                          "payment_mode": "COD",
                          "status": "Unpaid"
                        },
                        "payment_info": [
                          {
                            "logo": "https://hdn-1.fynd.com/payment/Pos+Logo.png",
                            "mode": "Jio Partner Pay",
                            "mop": "COD",
                            "display_name": "COD",
                            "payment_mode": "COD",
                            "status": "Unpaid"
                          }
                        ],
                        "user_info": {
                          "email": "paymentsdummy@gofynd.com",
                          "gender": "male",
                          "mobile": "1234567890",
                          "name": "User -"
                        },
                        "comment": "",
                        "invoice": {
                          "updated_date": "2022-08-18T19:11:02.000Z",
                          "store_invoice_id": "00000050AA000147",
                          "invoice_url": "",
                          "label_url": ""
                        },
                        "refund_details": {
                          "rrn": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bad request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApefaceApiError"
                },
                "examples": {
                  "failure": {
                    "value": {
                      "message": "Shipment not found",
                      "success": false
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "applicationId": [],
            "applicationToken": []
          }
        ],
        "x-groups": [
          "Shipment"
        ]
      }
    },
    "/service/application/order/v1.0/orders/shipments/{shipment_id}/invoice": {
      "get": {
        "summary": "getInvoiceByShipmentId | Retrieves invoice for shipment.",
        "description": "Get invoice corresponding to a specific shipment ID.",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "in": "path",
            "description": "Unique identifier for a shipment.",
            "name": "shipment_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "16712173702241747844"
              },
              "failure": {
                "value": "16712173702241747813"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGetInvoiceShipment"
                },
                "examples": {
                  "success": {
                    "value": {
                      "$ref": "#/components/examples/GetInvoiceShipmentExample"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApefaceApiError"
                },
                "examples": {
                  "failure": {
                    "value": {
                      "$ref": "#/components/examples/BaseErrorResponseExample"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "applicationId": [],
            "applicationToken": []
          }
        ],
        "x-groups": [
          "Shipment"
        ]
      }
    },
    "/service/application/order/v1.0/orders/shipments/{shipment_id}/track": {
      "get": {
        "summary": "trackShipment | Tracks shipment status.",
        "tags": [
          "Order"
        ],
        "description": "Track Shipment by shipment id, for application based on application Id.",
        "parameters": [
          {
            "in": "path",
            "name": "shipment_id",
            "description": "ID of the shipment. An order may contain multiple items and may get divided into one or more shipment, each having its own ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "16691355532841431595"
              },
              "failure": {
                "value": "16691355532841431426"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipmentTrack"
                },
                "examples": {
                  "success": {
                    "value": {
                      "results": [
                        {
                          "updated_at": "11 Oct, 12:14 PM",
                          "last_location_recieved_at": "Mumbai MIDC (Maharashtra)",
                          "reason": "Delhivery Delhivery vaishakh - eway bill 1 100kg 1-100kg",
                          "shipment_type": "forward",
                          "status": "bag_not_picked",
                          "updated_time": "2024-10-11T12:14:10+5:30",
                          "account_name": "Delhivery Delhivery vaishakh - eway bill 1 100kg 1-100kg",
                          "awb": "5638010004340",
                          "raw_status": "UD-Not Picked|Shipment not received from client",
                          "meta": {
                            "remark": "Shipment not received from client",
                            "is_polling": true,
                            "courier_partner_scheme_id": "6572f74821fabd7e53660e4b",
                            "courier_partner_extension_id": "656da76de7b208e46ca12f97",
                            "courier_partner_shipper_name": "Delhivery"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApefaceApiError"
                },
                "examples": {
                  "failure": {
                    "value": {
                      "success": false,
                      "message": "Bad Request"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "applicationId": [],
            "applicationToken": []
          }
        ],
        "x-groups": [
          "Order"
        ]
      }
    },
    "/service/application/order/v1.0/orders/{order_id}/shipments/{shipment_id}/customer-details": {
      "get": {
        "summary": "getCustomerDetailsByShipmentId | Retrieves shipment customer.",
        "description": "Get customer details such as mobile number using Shipment ID.",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "in": "path",
            "description": "A unique number used for identifying and tracking your orders.",
            "name": "order_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "FY6119EF9A0185F48339"
              },
              "failure": {
                "value": "FY63A51DE50EFBCC3216"
              }
            }
          },
          {
            "in": "path",
            "description": "ID of the shipment. An order may contain multiple items and may get divided into one or more shipment, each having its own ID.",
            "name": "shipment_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "16290896910211243162"
              },
              "failure": {
                "value": "16288351560381181315"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDetailsResponseSchema"
                },
                "examples": {
                  "success": {
                    "value": {
                      "order_id": "FYMP629D972D01B6BD76",
                      "shipment_id": "16544950215681060915J",
                      "name": "sagar Kulkarni",
                      "phone": "XXX-XXX-6780",
                      "country": "India"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bad request. See the error object in the response body to know the exact message.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApefaceApiError"
                },
                "examples": {
                  "failure": {
                    "value": {
                      "status": false,
                      "message": "Shipment_id or Order_id not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "applicationId": [],
            "applicationToken": []
          }
        ],
        "x-groups": [
          "Shipment"
        ]
      }
    },
    "/service/application/order/v1.0/orders/{order_id}/shipments/{shipment_id}/otp/send/": {
      "post": {
        "summary": "sendOtpToShipmentCustomer | Sends OTP to customer.",
        "description": "Send OTP to the customer for shipment verification.",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "order_id",
            "description": "A unique number used for identifying and tracking your orders.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "FY6119EF9A0185F48339"
              },
              "failure": {
                "value": "FY6299E19701B4EAEFC2"
              }
            }
          },
          {
            "in": "path",
            "name": "shipment_id",
            "description": "ID of the shipment. An order may contain multiple items and may get divided into one or more shipment, each having its own ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "16290896910211243162"
              },
              "failure": {
                "value": "16544950215681060915J"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success to acknowledge the service was notified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendOtpToCustomerResponseSchema"
                },
                "examples": {
                  "success": {
                    "value": {
                      "success": true,
                      "request_id": "0fe0d6e16205ddc57d212e947ee31896",
                      "message": "OTP sent",
                      "resend_timer": 30
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bad request. See the error object in the response body to know the exact message.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApefaceApiError"
                },
                "examples": {
                  "failure": {
                    "value": {
                      "message": "Shipment_id or Order_id not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "applicationId": [],
            "applicationToken": []
          }
        ],
        "x-groups": [
          "Shipment"
        ]
      }
    },
    "/service/application/order/v1.0/orders/{order_id}/shipments/{shipment_id}/otp/verify/": {
      "post": {
        "summary": "verifyOtpShipmentCustomer | Verifies OTP.",
        "description": "Verify OTP sent by customer.",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "order_id",
            "description": "A string that represents the unique identifier assigned to the order.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "FYMP6294545C010B89FD"
              },
              "failure": {
                "value": "FYMP6294545C010B8435"
              }
            }
          },
          {
            "in": "path",
            "name": "shipment_id",
            "description": "The unique identifier for the shipment.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "16538880933361957252J"
              },
              "failure": {
                "value": "16538880933361957232J"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyOtp"
              },
              "examples": {
                "success": {
                  "value": {
                    "request_id": "54b2ddb6cb99a609e12a9bea54b2ddb6cb99a609e12a9bea",
                    "otp_code": "5402"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success, the code is valid and returns a session token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyOtpResponseSchema"
                },
                "examples": {
                  "success": {
                    "value": {
                      "success": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApefaceApiError"
                },
                "examples": {
                  "failure": {
                    "value": {
                      "message": "Otp not verified"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "applicationId": [],
            "applicationToken": []
          }
        ],
        "x-groups": [
          "Shipment"
        ]
      }
    },
    "/service/application/order/v1.0/orders/shipments/{shipment_id}/bags/{bag_id}/reasons": {
      "get": {
        "summary": "getShipmentBagReasons | Retrieve Reasons for Cancellation and Return journey",
        "description": "Allows users to retrieve a comprehensive list of reasons for cancellation  or returning a shipment. It provides both cancellation and return reasons, with an emphasis  on Quality Control (QC) evaluations.",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The unique identifier for the shipment",
            "name": "shipment_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "16712173702241747844"
              },
              "failure": {
                "value": "16712173702241747844"
              }
            }
          },
          {
            "in": "path",
            "description": "Identifier for a bag or product.",
            "name": "bag_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "6393"
              },
              "failure": {
                "value": "221"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipmentBagReasons"
                },
                "examples": {
                  "success": {
                    "value": {
                      "success": true,
                      "rule_id": 23,
                      "reasons": [
                        {
                          "id": 87,
                          "display_name": "Others",
                          "meta": {
                            "show_text_area": true
                          },
                          "qc_type": [],
                          "question_set": [],
                          "reasons": []
                        },
                        {
                          "id": 84,
                          "display_name": "Changed my mind",
                          "meta": {
                            "show_text_area": false
                          },
                          "qc_type": [
                            "pre_qc",
                            "doorstep_qc"
                          ],
                          "question_set": [
                            {
                              "id": 1,
                              "display_name": "Check formal-shirt size."
                            }
                          ],
                          "reasons": [
                            {
                              "id": 86,
                              "display_name": "Found better price elsewhere",
                              "meta": {
                                "show_text_area": false
                              },
                              "qc_type": [],
                              "question_set": [],
                              "reasons": []
                            },
                            {
                              "id": 162,
                              "display_name": "Myntra VFS",
                              "meta": {
                                "show_text_area": false
                              },
                              "qc_type": [],
                              "question_set": [],
                              "reasons": [
                                {
                                  "id": 85,
                                  "display_name": "Delivery address is wrong",
                                  "meta": {
                                    "show_text_area": false
                                  },
                                  "qc_type": [],
                                  "question_set": [],
                                  "reasons": []
                                },
                                {
                                  "id": 163,
                                  "display_name": "Myntra VFS",
                                  "meta": {
                                    "show_text_area": false
                                  },
                                  "qc_type": [],
                                  "question_set": [],
                                  "reasons": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bad request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApefaceApiError"
                },
                "examples": {
                  "failure": {
                    "$ref": "#/components/examples/BaseErrorResponseExample"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "applicationId": [],
            "applicationToken": []
          }
        ],
        "x-groups": [
          "Bag"
        ]
      }
    },
    "/service/application/order/v1.0/orders/shipments/{shipment_id}/reasons": {
      "get": {
        "summary": "getShipmentReasons | Lists shipment reasons.",
        "description": "Get reasons to perform full or partial cancellation of a shipment.",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "in": "path",
            "description": "ID of the shipment. An order may contain multiple items and may get divided into one or more shipment, each having its own ID.",
            "name": "shipment_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "16290896910211243162"
              },
              "failure": {
                "value": "16290896910211243160"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipmentReasons"
                },
                "examples": {
                  "success": {
                    "value": {
                      "reasons": [
                        {
                          "reason_id": 115,
                          "priority": 9,
                          "reason_text": "Wrong size/colour delivered",
                          "show_text_area": false,
                          "feedback_type": "bag",
                          "flow": "return"
                        },
                        {
                          "reason_id": 116,
                          "priority": 10,
                          "reason_text": "Product does not fit me",
                          "show_text_area": false,
                          "feedback_type": "bag",
                          "flow": "return"
                        },
                        {
                          "reason_id": 117,
                          "priority": 11,
                          "reason_text": "Quality of product is not good",
                          "show_text_area": false,
                          "feedback_type": "bag",
                          "flow": "return"
                        },
                        {
                          "reason_id": 118,
                          "priority": 12,
                          "reason_text": "Wrong product delivered",
                          "show_text_area": true,
                          "feedback_type": "bag",
                          "flow": "return"
                        },
                        {
                          "reason_id": 119,
                          "priority": 13,
                          "reason_text": "Damaged product delivered",
                          "show_text_area": true,
                          "feedback_type": "bag",
                          "flow": "return"
                        },
                        {
                          "reason_id": 120,
                          "priority": 14,
                          "reason_text": "Used product delivered",
                          "show_text_area": true,
                          "feedback_type": "bag",
                          "flow": "return"
                        },
                        {
                          "reason_id": 124,
                          "priority": 15,
                          "reason_text": "Missing Items/Partially Received",
                          "show_text_area": true,
                          "feedback_type": "bag",
                          "flow": "return"
                        },
                        {
                          "reason_id": 121,
                          "priority": 16,
                          "reason_text": "Found better price elsewhere",
                          "show_text_area": true,
                          "feedback_type": "bag",
                          "flow": "return"
                        },
                        {
                          "reason_id": 122,
                          "priority": 17,
                          "reason_text": "Product looks different from image",
                          "show_text_area": true,
                          "feedback_type": "bag",
                          "flow": "return"
                        },
                        {
                          "reason_id": 123,
                          "priority": 18,
                          "reason_text": "Other issue",
                          "show_text_area": true,
                          "feedback_type": "bag",
                          "flow": "return"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bad request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApefaceApiError"
                },
                "examples": {
                  "failure": {
                    "value": {
                      "message": "Invalid Shipment Id",
                      "success": false
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "applicationId": [],
            "applicationToken": []
          }
        ],
        "x-groups": [
          "Shipment"
        ]
      }
    },
    "/service/application/order/v1.0/orders/shipments/{shipment_id}/status": {
      "put": {
        "summary": "updateShipmentStatus | Updates shipment status.",
        "description": "This operation allows for updating the status and properties of a shipment.  For example, it allows users to initiate a return by providing reasons and  uploading quality check images.",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The unique identifier for the shipment.",
            "name": "shipment_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "16722505549091367924"
              }
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateShipmentStatusRequestSchema"
              },
              "examples": {
                "success": {
                  "value": {
                    "statuses": [
                      {
                        "shipments": [
                          {
                            "identifier": "16722505549091367924",
                            "products": [
                              {
                                "line_number": 1,
                                "quantity": 2
                              }
                            ],
                            "reasons": {
                              "products": [
                                {
                                  "filters": [
                                    {
                                      "line_number": 1,
                                      "quantity": 2
                                    }
                                  ],
                                  "data": {
                                    "reason_id": 84,
                                    "reason_text": ""
                                  }
                                }
                              ]
                            },
                            "data_updates": {
                              "products": [
                                {
                                  "filters": [],
                                  "data": {
                                    "meta": {
                                      "return_qc_json": {
                                        "images": [],
                                        "return_reason": {
                                          "id": 3,
                                          "display_name": "Size is M",
                                          "meta": {
                                            "show_text_area": false
                                          },
                                          "qc_type": [],
                                          "reasons": [],
                                          "question_set": [
                                            {
                                              "id": 84,
                                              "display_name": "Check the brand"
                                            }
                                          ]
                                        },
                                        "reason_options": []
                                      }
                                    }
                                  }
                                }
                              ],
                              "entities": [
                                {
                                  "filters": [],
                                  "data": {
                                    "meta": {
                                      "qc_requried": false
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        ],
                        "status": "return_initiated"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipmentApplicationStatusResponseSchema"
                },
                "examples": {
                  "success": {
                    "value": {
                      "statuses": [
                        {
                          "shipments": [
                            {
                              "16291129095851065963": {
                                "status": 400,
                                "message": {
                                  "16291129095851065963": "Invalid State Transition bag_invoiced detected for given entity"
                                },
                                "code": null,
                                "exception": "ValidationError",
                                "stack_trace": null
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Shipment"
        ]
      }
    },
    "/service/application/payment/v1.0/config/aggregators/key": {
      "get": {
        "summary": "getAggregatorsConfig | Get payment aggregators",
        "description": "Get aggregator secret key of all payment gateways utilized for payments when using the SDK for the payment gateway.",
        "parameters": [
          {
            "name": "x-api-token",
            "in": "header",
            "description": "Basic auth token.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "examples": {
              "agg_key_success": {
                "summary": "x-api-token",
                "value": "Basic YWRtaW46BF9d0FF65Ff"
              }
            }
          },
          {
            "name": "refresh",
            "in": "query",
            "description": "Select `true` to remove temporary cache files on payment gateway and replace with the latest one.",
            "schema": {
              "type": "boolean"
            },
            "examples": {
              "agg_key_success": {
                "summary": "refresh the cache",
                "value": true
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns the keys of all payment gateways. Check the example shown below or refer `AggregatorsConfigDetail` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AggregatorsConfigDetail"
                },
                "examples": {
                  "agg_key_success": {
                    "value": {
                      "simpl": {
                        "key": "bf9d0ff65ffe6e54223a871e733bbd1c",
                        "secret": "XXXX-XXXX-XXXX-XXXX",
                        "config_type": "fynd",
                        "sdk": true
                      },
                      "juspay": {
                        "key": "XXXX-XXXX-XXXX-XXXX",
                        "secret": "XXXX-XXXX-XXXX-XXXX",
                        "config_type": "fynd",
                        "merchant_key": "XXXX-XXXX-XXXX-XXXX",
                        "sdk": false,
                        "api": "https://api.juspay.in"
                      },
                      "mswipe": {
                        "key": "XXXX-XXXX-XXXX-XXXX",
                        "secret": "XXXX-XXXX-XXXX-XXXX",
                        "config_type": "fynd",
                        "merchant_id": "XXXX-XXXX-XXXX-XXXX",
                        "user_id": "XXXX-XXXX-XXXX-XXXX",
                        "pin": "XXXX-XXXX-XXXX-XXXX",
                        "sdk": true,
                        "verify_api": "https://www.mswipetech.com/verificationapi/api/VerificationApi/MswipeCardSaleVerificationApi"
                      },
                      "razorpay": {
                        "key": "XXXX-XXXX-XXXX-XXXX",
                        "secret": "XXXX-XXXX-XXXX-XXXX",
                        "config_type": "fynd",
                        "webhook_secret": "XXXX-XXXX-XXXX-XXXX",
                        "sdk": true,
                        "api": "https://api.razorpay.com/v1/",
                        "vpa": "XXXX-XXXX-XXXX-XXXX"
                      },
                      "success": true,
                      "env": "live"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorCodeDetails"
                },
                "example": {
                  "success": false,
                  "error": {
                    "code": "BAD_REQUEST_ERROR",
                    "description": "application id not found."
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Payment"
        ],
        "tags": [
          "Payment"
        ]
      }
    },
    "/service/application/payment/v1.0/card/attach": {
      "post": {
        "summary": "attachCardToCustomer | Link payment card to customer",
        "description": "Link payment card to a user account for seamless transactions. Upon successful linking, the card becomes associated with the user's profile, enabling secure and convenient payments.",
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "description": "Pass the Card ID in the request body as shown below.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachCard"
              },
              "examples": {
                "card_success": {
                  "value": {
                    "card_id": "pm_1IGQlvHY5NCLOJpYNTBP6WpY",
                    "refresh": true,
                    "name_on_card": "Lorem Ipsum",
                    "nickname": "Lorem Ipsum"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachCardsDetails"
                },
                "examples": {
                  "card_success": {
                    "value": {
                      "success": true,
                      "message": "",
                      "data": {
                        "id": "pm_1IGQlvHY5NCLOJpYNTBP6WpY",
                        "brand": "visa",
                        "checks": {
                          "address_line1_check": null,
                          "address_postal_code_check": null,
                          "cvc_check": "pass"
                        },
                        "country": "US",
                        "exp_month": 11,
                        "exp_year": 2025,
                        "fingerprint": "poKWfSweJ0I5CvEA",
                        "funding": "credit",
                        "generated_from": null,
                        "last4": "1111",
                        "networks": {
                          "available": [
                            "visa"
                          ],
                          "preferred": null
                        },
                        "three_d_secure_usage": {
                          "supported": true
                        },
                        "wallet": null
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorCodeAndMessage"
                },
                "example": {
                  "success": false,
                  "error": {
                    "code": "BAD_REQUEST_ERROR",
                    "description": "Some thing wrong in payload"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Card"
        ]
      }
    },
    "/service/application/payment/v1.0/card/aggregator": {
      "get": {
        "summary": "getActiveCardAggregator | Retrieve active card aggregator",
        "description": "Get details about the active card aggregator used by the user, including the aggregator name.You can refresh the data by setting the 'refresh' parameter to true if needed.",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "refresh",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Select `true` to remove temporary cache files on payment gateway and replace with the latest one.",
            "examples": {
              "card_aggregator_success": {
                "value": true
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns an active payment gateway.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActiveCardPaymentGatewayDetails"
                },
                "examples": {
                  "card_aggregator_success": {
                    "value": {
                      "success": true,
                      "message": "",
                      "cards": {
                        "aggregator": "Stripe",
                        "api": "https://www.example.com/cards/",
                        "customer_id": "lorem_12345"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorCodeDetails"
                },
                "example": {
                  "success": false,
                  "error": {
                    "code": "BAD_REQUEST_ERROR",
                    "description": "Some thing wrong in payload"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Card"
        ]
      },
      "post": {
        "summary": "updateUserCard | card aggregator",
        "description": "Use this API to get card of user.",
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "description": "Pass the Card ID in the request body as shown below.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAggregatorCardReq"
              },
              "examples": {
                "card_success": {
                  "value": {
                    "refresh": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Returns a success message if card is deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAggregatorCardDetails"
                },
                "examples": {
                  "card_success": {
                    "value": {
                      "success": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorCodeDetails"
                },
                "example": {
                  "success": false,
                  "error": {
                    "code": "BAD_REQUEST_ERROR",
                    "description": "Some thing wrong in payload"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Card"
        ]
      }
    },
    "/service/application/payment/v1.0/cards": {
      "get": {
        "summary": "getActiveUserCards | List user's cards.",
        "description": "List all active cards saved by the user.Includes details such as the card's aggregator name, card ID, token, reference, number, expiration date, type, issuer, brand, nickname, and whether it has expired.",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "force_refresh",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Select `true` to clear the cache.",
            "examples": {
              "get_saved_cards": {
                "value": true
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a list of cards saved by the user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCardsDetails"
                },
                "examples": {
                  "get_saved_cards": {
                    "value": {
                      "success": true,
                      "message": "Success",
                      "data": [
                        {
                          "aggregator_name": "Razorpay",
                          "card_id": "token_lorem_ipsum_001",
                          "card_token": "card_token_lorem_ipsum_001",
                          "card_reference": "ref_lorem_ipsum_001",
                          "card_number": "XXXX-XXXX-XXXX-1111",
                          "card_isin": "001",
                          "exp_year": 2025,
                          "exp_month": 5,
                          "card_type": "credit",
                          "card_issuer": "ICIC",
                          "card_brand": "VISA",
                          "nickname": "Visa",
                          "card_name": "Lorem Ipsum",
                          "expired": false,
                          "card_fingerprint": null,
                          "card_brand_image": "https://hdn-1.fynd.com/payment/visa.png",
                          "bank_logo": "https://hdn-1.fynd.com/payment/bank.png",
                          "compliant_with_tokenisation_guidelines": true
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorCodeDetails"
                },
                "example": {
                  "success": false,
                  "error": {
                    "code": "BAD_REQUEST_ERROR",
                    "description": "Some thing wrong in payload"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Card"
        ]
      },
      "post": {
        "summary": "updateActiveCards | update a card",
        "description": "Use this API to update a card list added by a user on the payment gateway.",
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "description": "Pass the Card ID in the request body as shown below.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAggregatorCardReq"
              },
              "examples": {
                "card_success": {
                  "value": {
                    "refresh": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Returns a success message if card is updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCard"
                },
                "examples": {
                  "card_success": {
                    "value": {
                      "success": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorCodeDetails"
                },
                "example": {
                  "success": false,
                  "error": {
                    "code": "BAD_REQUEST_ERROR",
                    "description": "Some thing wrong in payload"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Card"
        ]
      }
    },
    "/service/application/payment/v1.0/card/remove": {
      "post": {
        "summary": "deleteUserCard | Delete customer card",
        "description": "Delete payment card from the user's account.",
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "description": "Pass the Card ID in the request body as shown below.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteCard"
              },
              "examples": {
                "card_remove_success": {
                  "value": {
                    "card_id": "token_lorem_ipsum_001"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success. Returns a success message if card is deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteCardsDetails"
                },
                "examples": {
                  "card_remove_success": {
                    "value": {
                      "success": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorCodeDetails"
                },
                "example": {
                  "success": false,
                  "error": {
                    "code": "BAD_REQUEST_ERROR",
                    "description": "Some thing wrong in payload"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Card"
        ]
      }
    },
    "/service/application/payment/v1.0/payment/customer/validation": {
      "post": {
        "summary": "verifyCustomerForPayment | Verify payment customer.",
        "description": "Verify if the user is eligible for pay-later payment from the payment aggregator side using the customer's phone number.",
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "description": "Pass the payload, payment aggregator, phone number and other details in the request body as shown below.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateCustomer"
              },
              "examples": {
                "validate_success": {
                  "value": {
                    "payload": "hashed_encoded_payload",
                    "order_items": [
                      {
                        "sku": "1",
                        "price": 100,
                        "quantity": 1
                      }
                    ],
                    "delivery_address": {
                      "line1": "string",
                      "line2": "string",
                      "city": "string",
                      "state": "string",
                      "country": "string",
                      "pincode": "string",
                      "type": "string",
                      "geoLocation": {
                        "latitude": "string",
                        "longitude": "string"
                      }
                    },
                    "billing_address": {
                      "line1": "string",
                      "line2": "string",
                      "city": "string",
                      "state": "string",
                      "country": "string",
                      "pincode": "string",
                      "type": "string",
                      "geoLocation": {
                        "latitude": "string",
                        "longitude": "string"
                      }
                    },
                    "aggregator": "Simpl",
                    "phone_number": "9876543210",
                    "merchant_params": {
                      "dummy": "lorem"
                    },
                    "transaction_amount_in_paise": 9128
                  }
                },
                "validate_fail": {
                  "value": {
                    "payload": "hashed_encoded_payload",
                    "aggregator": "Simpl",
                    "phone_number": "9876543210",
                    "merchant_params": {
                      "dummy": "lorem"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateCustomerDetails"
                },
                "examples": {
                  "validate_success": {
                    "value": {
                      "success": true,
                      "message": "data fetched",
                      "data": {
                        "api_version": 2,
                        "data": {
                          "approved": true,
                          "button_text": "Buy Now, Pay Later",
                          "first_transaction": false
                        },
                        "aggregator": "Simpl"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorCodeDetails"
                },
                "example": {
                  "success": false,
                  "error": {
                    "code": "BAD_REQUEST_ERROR",
                    "description": "Some thing wrong in payload"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Paylater"
        ]
      }
    },
    "/service/application/payment/v1.0/payment/confirm/charge": {
      "post": {
        "summary": "verifyAndChargePayment | Verify order confirmation and charge",
        "description": "Verify the payment status and charge from the customer's BNPL (Buy Now, Pay Later) account after order confirmation.",
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "description": "Pass the transaction token, order ID, payment aggregator, verified status and amount in the request body as shown below.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChargeCustomer"
              },
              "examples": {
                "charge_payment_success": {
                  "value": {
                    "transaction_token": "paylater_transaction_id",
                    "order_id": "FY000000001000000101",
                    "aggregator": "Simpl",
                    "verified": true,
                    "amount": 10000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChargeCustomerDetails"
                },
                "examples": {
                  "charge_payment_success": {
                    "value": {
                      "success": true,
                      "message": "Payment Successful",
                      "status": "complete",
                      "order_id": "FY000000001000000101",
                      "aggregator": "Simpl",
                      "cart_id": "0000000",
                      "delivery_address_id": "0000000"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Paylater"
        ]
      }
    },
    "/service/application/payment/v1.0/payment/request": {
      "post": {
        "summary": "initialisePayment | Start payment process.",
        "description": "Initiate the payment procedure for an order. Upon successful initiation, it returns a  details including the success status, aggregator information, payment method, status, merchant order ID aggregator order , polling URL, timeout, virtual ID, Razorpay payment ID, customer ID, and device ID.",
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInitialization"
              },
              "examples": {
                "payment_request_success": {
                  "value": {
                    "amount": 10000,
                    "order_id": "lorem_GX8W00p2ipsum",
                    "email": "dummy@example.com",
                    "contact": "9876543210",
                    "currency": "INR",
                    "customer_id": "cust_lorem_001",
                    "method": "paymentlink",
                    "aggregator": "fynd",
                    "merchant_order_id": "FY65C47E27CB249F378C",
                    "vpa": "success@razopray",
                    "device_id": "1234567890"
                  }
                },
                "payment_request_fail": {
                  "value": {
                    "amount": 10000,
                    "order_id": "lorem_GX8W00p2ipsum",
                    "email": "dummy@example.com",
                    "contact": "9876543210",
                    "currency": "INR",
                    "customer_id": "cust_lorem_001",
                    "method": "upi",
                    "aggregator": "UPI_Razorpay",
                    "merchant_order_id": "FY000120000101",
                    "vpa": "success@razopray",
                    "device_id": "1234567890"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInitializationDetails"
                },
                "examples": {
                  "payment_request_success": {
                    "value": {
                      "success": true,
                      "aggregator": "UPI_Razorpay",
                      "method": "upi",
                      "status": "success",
                      "merchant_order_id": "FY000120000101",
                      "aggregator_order_id": "lorem_GX8W00p2ipsum",
                      "polling_url": "https://api.fynd.com/service/application/payment/v0.1/payments/confirm/polling/?app_id=000000000000000000000001",
                      "timeout": 240,
                      "virtual_id": null,
                      "razorpay_payment_id": "pay_dummy_001",
                      "customer_id": "cust_dummy_001",
                      "device_id": "1234567890"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorCodeAndMessage"
                },
                "examples": {
                  "payment_request_fail": {
                    "value": {
                      "success": false,
                      "error_msg": ""
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Payment"
        ]
      }
    },
    "/service/application/payment/v1.0/payment/confirm/polling": {
      "post": {
        "summary": "checkAndUpdatePaymentStatus | Update payment status",
        "description": "Polling process to confirm the payment status. It periodically checks and updates the current status of a payment, ensuring timely and accurate confirmation of payment transactions.",
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentStatusUpdate"
              },
              "examples": {
                "payment_status_success": {
                  "value": {
                    "merchant_transaction_id": "TR65C47E27CBFD964727",
                    "status": "Paid",
                    "amount": 10000,
                    "order_id": "lorem_GX8W00p2ipsum",
                    "email": "dummy@example.com",
                    "contact": "9876543210",
                    "currency": "INR",
                    "customer_id": "cust_lorem_001",
                    "method": "paymentlink",
                    "aggregator": "fynd",
                    "merchant_order_id": "FY65C47E27CB249F378C",
                    "unique_link_id": "b594184d9a060657566cef7e1ad61b43",
                    "device_id": "1234567890"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Returns the status of payment.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentStatusUpdateDetails"
                },
                "examples": {
                  "payment_status_success": {
                    "value": {
                      "aggregator_name": "UPI_Razorpay",
                      "status": "success",
                      "retry": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorCodeDetails"
                },
                "example": {
                  "success": false,
                  "error": {
                    "code": "BAD_REQUEST_ERROR",
                    "description": "Some thing wrong in payload"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Payment"
        ]
      }
    },
    "/service/application/payment/v1.0/payment/options": {
      "get": {
        "summary": "getPaymentModeRoutes | Get payment modes",
        "description": "Get available payment methods on the payment page, specifying the aggregator for each option, such as 'Netbanking powered by Juspay' and 'Card powered by Razorpay'.",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "amount",
            "in": "query",
            "description": "Payable amount.",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "examples": {
              "payment_options_success": {
                "summary": "amount",
                "value": 1000
              },
              "payment_options_fail": {
                "summary": "amount",
                "value": 1000
              },
              "internal_server_fail": {
                "summary": "amount",
                "value": 1000
              }
            }
          },
          {
            "name": "cart_id",
            "in": "query",
            "description": "Identifier of the cart.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "payment_options_success": {
                "summary": "cart id",
                "value": "4234324234"
              },
              "payment_options_fail": {
                "summary": "cart id",
                "value": "4234324234"
              },
              "internal_server_fail": {
                "summary": "cart id",
                "value": "4234324234"
              }
            }
          },
          {
            "name": "checkout_mode",
            "in": "query",
            "description": "Option to checkout for self or for others.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "examples": {
              "payment_options_success": {
                "summary": "checkout_mode",
                "value": "self"
              },
              "payment_options_fail": {
                "summary": "checkout_mode",
                "value": "self"
              },
              "internal_server_fail": {
                "summary": "checkout_mode",
                "value": "self"
              }
            }
          },
          {
            "name": "refresh",
            "in": "query",
            "description": "Select `true` to remove temporary cache files on payment gateway and replace with the latest one.",
            "schema": {
              "type": "boolean"
            },
            "examples": {
              "payment_options_success": {
                "summary": "refresh",
                "value": true
              },
              "payment_options_fail": {
                "summary": "refresh",
                "value": true
              },
              "internal_server_fail": {
                "summary": "refresh",
                "value": true
              }
            }
          },
          {
            "name": "order_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "examples": {
              "payment_options_success": {
                "summary": "order_id",
                "value": "FY65C47E27CB249F378C"
              },
              "payment_options_fail": {
                "summary": "order_id",
                "value": "xyzxyzxyz"
              },
              "internal_server_fail": {
                "summary": "order_id",
                "value": "xyzxyzxyz"
              }
            },
            "description": "Identifier of the order, order_id."
          },
          {
            "name": "card_reference",
            "in": "query",
            "required": false,
            "description": "Card reference id of user's debit or credit card.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "payment_options_success": {
                "summary": "card_reference",
                "value": "1"
              },
              "payment_options_fail": {
                "summary": "card_reference",
                "value": "1"
              },
              "internal_server_fail": {
                "summary": "card_reference",
                "value": "1"
              }
            }
          },
          {
            "name": "user_details",
            "in": "query",
            "required": false,
            "description": "URLencoded JSON containing details of an anonymous user.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "payment_options_success": {
                "summary": "user_details",
                "value": "1"
              },
              "payment_options_fail": {
                "summary": "user_details",
                "value": "1"
              },
              "internal_server_fail": {
                "summary": "user_details",
                "value": "1"
              }
            }
          },
          {
            "name": "display_split",
            "in": "query",
            "required": false,
            "description": "Display Split Payment Option or not.",
            "schema": {
              "type": "boolean"
            },
            "examples": {
              "payment_options_success": {
                "summary": "display_split",
                "value": false
              },
              "payment_options_fail": {
                "summary": "display_split",
                "value": false
              },
              "internal_server_fail": {
                "summary": "display_split",
                "value": false
              }
            }
          },
          {
            "name": "advance_payment",
            "in": "query",
            "required": false,
            "description": "Display Advance Payment Options or Normal.",
            "schema": {
              "type": "boolean"
            },
            "examples": {
              "payment_options_success": {
                "summary": "advance_payment",
                "value": false
              },
              "payment_options_fail": {
                "summary": "advance_payment",
                "value": false
              },
              "internal_server_fail": {
                "summary": "advance_payment",
                "value": false
              }
            }
          },
          {
            "name": "shipment_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "examples": {
              "payment_options_success": {
                "summary": "shipment_id",
                "value": 12345
              },
              "payment_options_fail": {
                "summary": "shipment_id",
                "value": 12345
              },
              "internal_server_fail": {
                "summary": "shipment_id",
                "value": 12345
              }
            },
            "description": "Identifier of the shipment, shipment_id."
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns all available options for payment. Check the example shown below or refer `PaymentModeRouteDetails` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentModeRouteDetails"
                },
                "examples": {
                  "payment_options_success": {
                    "value": {
                      "success": true,
                      "payment_options": {
                        "payment_option": [
                          {
                            "name": "COD",
                            "display_name": "Cash on Delivery",
                            "display_priority": 1,
                            "payment_mode_id": 11,
                            "aggregator_name": "Fynd",
                            "logo": "https://hdn-1.fynd.com/payment/cod.png",
                            "logo_url": {
                              "small": "https://hdn-1.fynd.com/payment/cod.png",
                              "large": "https://hdn-1.fynd.com/payment/cod.png"
                            },
                            "list": [
                              {
                                "cod_limit": 1000,
                                "remaining_limit": 100,
                                "aggregator_name": "name"
                              }
                            ]
                          },
                          {
                            "name": "CARD",
                            "display_priority": 2,
                            "payment_mode_id": 2,
                            "display_name": "Card",
                            "list": [],
                            "anonymous_enable": true,
                            "aggregator_name": "Razorpay",
                            "add_card_enabled": false,
                            "save_card": true,
                            "types": [],
                            "networks": [],
                            "banks": []
                          },
                          {
                            "name": "NB",
                            "display_priority": 3,
                            "payment_mode_id": 3,
                            "display_name": "Net Banking",
                            "list": [
                              {
                                "aggregator_name": "Razorpay",
                                "name": "ICICI Bank",
                                "code": "ICIC",
                                "bank_name": "ICICI Bank",
                                "bank_code": "ICIC",
                                "url": "https://hdn-1.fynd.com/payment/NB_ICICI.png",
                                "logo_url": {
                                  "small": "https://hdn-1.fynd.com/payment/NB_ICICI.png",
                                  "large": "https://hdn-1.fynd.com/payment/NB_ICICI.png"
                                },
                                "merchant_code": "NB_ICICI",
                                "display_priority": 1,
                                "display_name": "ICICI Bank"
                              },
                              {
                                "aggregator_name": "Razorpay",
                                "name": "HDFC Bank",
                                "code": "HDFC",
                                "bank_name": "HDFC Bank",
                                "bank_code": "HDFC",
                                "url": "https://hdn-1.fynd.com/payment/NB_HDFC.png",
                                "logo_url": {
                                  "small": "https://hdn-1.fynd.com/payment/NB_HDFC.png",
                                  "large": "https://hdn-1.fynd.com/payment/NB_HDFC.png"
                                },
                                "merchant_code": "NB_HDFC",
                                "display_priority": 2,
                                "display_name": "HDFC Bank"
                              },
                              {
                                "aggregator_name": "Razorpay",
                                "name": "Axis Bank",
                                "code": "UTIB",
                                "bank_name": "Axis Bank",
                                "bank_code": "UTIB",
                                "url": "https://hdn-1.fynd.com/payment/NB_AXIS.png",
                                "logo_url": {
                                  "small": "https://hdn-1.fynd.com/payment/NB_AXIS.png",
                                  "large": "https://hdn-1.fynd.com/payment/NB_AXIS.png"
                                },
                                "merchant_code": "NB_AXIS",
                                "display_priority": 3,
                                "display_name": "Axis Bank"
                              },
                              {
                                "aggregator_name": "Razorpay",
                                "name": "State Bank of India",
                                "code": "SBIN",
                                "bank_name": "State Bank of India",
                                "bank_code": "SBIN",
                                "url": "https://hdn-1.fynd.com/payment/NB_SBI.png",
                                "logo_url": {
                                  "small": "https://hdn-1.fynd.com/payment/NB_SBI.png",
                                  "large": "https://hdn-1.fynd.com/payment/NB_SBI.png"
                                },
                                "merchant_code": "NB_SBI",
                                "display_priority": 4,
                                "display_name": "State Bank of India"
                              },
                              {
                                "aggregator_name": "Razorpay",
                                "name": "Kotak Mahindra Bank",
                                "code": "KKBK",
                                "bank_name": "Kotak Mahindra Bank",
                                "bank_code": "KKBK",
                                "url": "https://hdn-1.fynd.com/payment/NB_KOTAK.png",
                                "logo_url": {
                                  "small": "https://hdn-1.fynd.com/payment/NB_KOTAK.png",
                                  "large": "https://hdn-1.fynd.com/payment/NB_KOTAK.png"
                                },
                                "merchant_code": "NB_KOTAK",
                                "display_priority": 5,
                                "display_name": "Kotak Mahindra Bank"
                              },
                              {
                                "aggregator_name": "Razorpay",
                                "name": "Indusind Bank",
                                "code": "INDB",
                                "bank_name": "Indusind Bank",
                                "bank_code": "INDB",
                                "url": "https://hdn-1.fynd.com/payment/NB_INDUS.png",
                                "logo_url": {
                                  "small": "https://hdn-1.fynd.com/payment/NB_INDUS.png",
                                  "large": "https://hdn-1.fynd.com/payment/NB_INDUS.png"
                                },
                                "merchant_code": "INDB",
                                "display_priority": 6,
                                "display_name": "Indusind Bank"
                              },
                              {
                                "aggregator_name": "Razorpay",
                                "name": "City Union Bank",
                                "code": "CIUB",
                                "bank_name": "City Union Bank",
                                "bank_code": "CIUB",
                                "url": "https://hdn-1.fynd.com/payment/NB_generic.png",
                                "logo_url": {
                                  "small": "https://hdn-1.fynd.com/payment/NB_generic.png",
                                  "large": "https://hdn-1.fynd.com/payment/NB_generic.png"
                                },
                                "merchant_code": "NB_CUB",
                                "display_priority": 9,
                                "display_name": "City Union Bank"
                              },
                              {
                                "aggregator_name": "Razorpay",
                                "name": "Catholic Syrian Bank",
                                "code": "CSBK",
                                "bank_name": "Catholic Syrian Bank",
                                "bank_code": "CSBK",
                                "url": "https://hdn-1.fynd.com/payment/NB_generic.png",
                                "logo_url": {
                                  "small": "https://hdn-1.fynd.com/payment/NB_generic.png",
                                  "large": "https://hdn-1.fynd.com/payment/NB_generic.png"
                                },
                                "merchant_code": "CSBK",
                                "display_priority": 11,
                                "display_name": "Catholic Syrian Bank"
                              },
                              {
                                "aggregator_name": "Razorpay",
                                "name": "State Bank of Hyderabad",
                                "code": "SBHY",
                                "bank_name": "State Bank of Hyderabad",
                                "bank_code": "SBHY",
                                "url": "https://hdn-1.fynd.com/payment/NB_generic.png",
                                "logo_url": {
                                  "small": "https://hdn-1.fynd.com/payment/NB_generic.png",
                                  "large": "https://hdn-1.fynd.com/payment/NB_generic.png"
                                },
                                "merchant_code": "NB_SBH",
                                "display_priority": 12,
                                "display_name": "State Bank of Hyderabad"
                              },
                              {
                                "aggregator_name": "Razorpay",
                                "name": "Allahabad Bank",
                                "code": "ALLA",
                                "bank_name": "Allahabad Bank",
                                "bank_code": "ALLA",
                                "url": "https://hdn-1.fynd.com/payment/NB_generic.png",
                                "logo_url": {
                                  "small": "https://hdn-1.fynd.com/payment/NB_generic.png",
                                  "large": "https://hdn-1.fynd.com/payment/NB_generic.png"
                                },
                                "merchant_code": "ALLA",
                                "display_priority": 15,
                                "display_name": "Allahabad Bank"
                              },
                              {
                                "aggregator_name": "Razorpay",
                                "name": "Syndicate Bank",
                                "code": "SYNB",
                                "bank_name": "Syndicate Bank",
                                "bank_code": "SYNB",
                                "url": "https://hdn-1.fynd.com/payment/NB_generic.png",
                                "logo_url": {
                                  "small": "https://hdn-1.fynd.com/payment/NB_generic.png",
                                  "large": "https://hdn-1.fynd.com/payment/NB_generic.png"
                                },
                                "merchant_code": "SYNB",
                                "display_priority": 17,
                                "display_name": "Syndicate Bank"
                              }
                            ]
                          },
                          {
                            "name": "WL",
                            "display_priority": 4,
                            "payment_mode_id": 4,
                            "display_name": "Wallet",
                            "list": [
                              {
                                "wallet_name": "Paytm",
                                "wallet_code": "paytm",
                                "name": "Paytm",
                                "display_name": "Paytm",
                                "code": "paytm",
                                "wallet_id": 4,
                                "merchant_code": "PAYTM",
                                "logo_url": {
                                  "small": "https://hdn-1.fynd.com/payment/paytm_logo_small.png",
                                  "large": "https://hdn-1.fynd.com/payment/paytm_logo_large.png"
                                },
                                "aggregator_name": "Juspay",
                                "display_priority": 1
                              },
                              {
                                "wallet_name": "Mobikwik",
                                "wallet_code": "mobikwik",
                                "name": "Mobikwik",
                                "display_name": "Mobikwik",
                                "code": "MOBIKWIK",
                                "wallet_id": 5,
                                "merchant_code": "MOBIKWIK",
                                "logo_url": {
                                  "small": "https://hdn-1.fynd.com/payment/mobikwik_logo_small.png",
                                  "large": "https://hdn-1.fynd.com/payment/mobikwik_logo_small.png"
                                },
                                "aggregator_name": "Juspay",
                                "display_priority": 3
                              },
                              {
                                "wallet_name": "Ola Money",
                                "wallet_code": "olamoney",
                                "name": "Ola Money",
                                "display_name": "Ola Money",
                                "code": "OLAMONEY",
                                "wallet_id": 6,
                                "merchant_code": "OLAMONEY",
                                "logo_url": {
                                  "small": "https://hdn-1.fynd.com/payment/olamoney.png",
                                  "large": "https://hdn-1.fynd.com/payment/olamoney.png"
                                },
                                "aggregator_name": "Razorpay",
                                "display_priority": 4
                              },
                              {
                                "wallet_name": "Amazon Pay",
                                "wallet_code": "amazonpay",
                                "name": "Amazon Pay",
                                "display_name": "Amazon Pay",
                                "code": "amazonpay",
                                "wallet_id": 10,
                                "merchant_code": "AMAZONPAY",
                                "logo_url": {
                                  "small": "https://hdn-1.fynd.com/payment/amazon-pay.png",
                                  "large": "https://hdn-1.fynd.com/payment/amazon-pay.png"
                                },
                                "aggregator_name": "Razorpay",
                                "display_priority": 9
                              },
                              {
                                "wallet_name": "PayPal",
                                "wallet_code": "paypal",
                                "name": "PayPal",
                                "display_name": "PayPal",
                                "code": "PAYPAL",
                                "wallet_id": 11,
                                "merchant_code": "PAYPAL",
                                "logo_url": {
                                  "small": "https://hdn-1.fynd.com/payment/paypal.jpg",
                                  "large": "https://hdn-1.fynd.com/payment/paypal.jpg"
                                },
                                "aggregator_name": "Razorpay",
                                "display_priority": 10
                              }
                            ]
                          },
                          {
                            "name": "UPI",
                            "display_priority": 9,
                            "payment_mode_id": 7,
                            "display_name": "UPI",
                            "list": [
                              {
                                "aggregator_name": "Razorpay",
                                "name": "UPI",
                                "display_name": "BHIM UPI",
                                "code": "UPI",
                                "logo_url": {
                                  "large": "https://hdn-1.fynd.com/payment/upi_150x100.png",
                                  "small": "https://hdn-1.fynd.com/payment/upi_100x78.png"
                                },
                                "merchant_code": "UPI",
                                "timeout": 240,
                                "retry_count": 0,
                                "fynd_vpa": "shopsense.rzp@hdfcbank",
                                "intent_flow": true,
                                "intent_app": [
                                  {
                                    "code": "google_pay",
                                    "display_name": "Google Pay",
                                    "package_name": "com.google.android.apps.nbu.paisa.user",
                                    "logos": {
                                      "small": "https://hdn-1.fynd.com/payment/upi-google-pay.png",
                                      "large": "https://hdn-1.fynd.com/payment/upi-google-pay.png"
                                    }
                                  }
                                ],
                                "intent_app_error_list": [
                                  "com.csam.icici.bank.imobile",
                                  "in.org.npci.upiapp",
                                  "com.whatsapp"
                                ],
                                "intent_app_error_dict_list": [
                                  {
                                    "package_name": "com.csam.icici.bank.imobile",
                                    "code": "icici"
                                  },
                                  {
                                    "package_name": "in.org.npci.upiapp",
                                    "code": "upiapp"
                                  },
                                  {
                                    "package_name": "com.whatsapp",
                                    "code": "whatsapp"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "name": "EMI",
                            "display_priority": 18,
                            "payment_mode_id": 19,
                            "display_name": "Easy EMI",
                            "list": [
                              {
                                "aggregator_name": "Razorpay",
                                "name": "EMI",
                                "display_name": "Easy EMI",
                                "code": "EMI",
                                "logo_url": {
                                  "large": "https://hdn-1.fynd.com/payment/Pos+Logo.png",
                                  "small": "https://hdn-1.fynd.com/payment/Pos+Logo.png"
                                },
                                "merchant_code": "EMI"
                              }
                            ]
                          },
                          {
                            "name": "JUSPAYPG",
                            "display_priority": 18,
                            "payment_mode_id": 23,
                            "display_name": "Pay Using Juspay",
                            "list": [
                              {
                                "aggregator_name": "Juspay",
                                "name": "JUSPAYPG",
                                "display_name": "Pay Using Juspay",
                                "code": "JUSPAYPG",
                                "logo_url": {
                                  "large": "https://hdn-1.fynd.com/payment/netbanking.png",
                                  "small": "https://hdn-1.fynd.com/payment/netbanking.png"
                                },
                                "merchant_code": "JUSPAYPG"
                              }
                            ]
                          },
                          {
                            "name": "PG_PAYMENT",
                            "display_priority": 20,
                            "display_name": "Other payment gateway",
                            "list": [
                              {
                                "aggregator_name": "Stripe",
                                "name": "STRIPEPG",
                                "display_name": "Pay using Stripe",
                                "code": "STRIPEPG",
                                "logo_url": {
                                  "large": "https://hdn-1.fynd.com/payment/Pos+Logo.png",
                                  "small": "https://hdn-1.fynd.com/payment/Pos+Logo.png"
                                },
                                "merchant_code": "STRIPEPG"
                              },
                              {
                                "aggregator_name": "Ccavenue",
                                "name": "CCAVENUEPG",
                                "display_name": "Pay using Ccavenue",
                                "code": "CCAVENUEPG",
                                "logo_url": {
                                  "large": "https://hdn-1.fynd.com/payment/Pos+Logo.png",
                                  "small": "https://hdn-1.fynd.com/payment/Pos+Logo.png"
                                },
                                "merchant_code": "CCAVENUEPG"
                              },
                              {
                                "aggregator_name": "Payumoney",
                                "name": "PAYUMONEYPG",
                                "display_name": "Pay using Payumoney",
                                "code": "PAYUMONEYPG",
                                "logo_url": {
                                  "large": "https://fynd-obscuro-media-new.s3.amazonaws.com/payment/payu_logo_large.png",
                                  "small": "https://fynd-obscuro-media-new.s3.amazonaws.com/payment/payu_logo_small.png"
                                },
                                "merchant_code": "PAYUMONEYPG"
                              },
                              {
                                "aggregator_name": "Payubiz",
                                "name": "PAYUBIZPG",
                                "display_name": "Pay using Payubiz",
                                "code": "PAYUBIZPG",
                                "logo_url": {
                                  "large": "https://hdn-1.fynd.com/payment/payu.png",
                                  "small": "https://hdn-1.fynd.com/payment/payu.png"
                                },
                                "merchant_code": "PAYUBIZPG"
                              }
                            ]
                          },
                          {
                            "name": "PL",
                            "display_priority": 21,
                            "display_name": "Pay Later",
                            "list": [
                              {
                                "aggregator_name": "Simpl",
                                "name": "Simpl",
                                "display_name": "Simpl",
                                "code": "simpl",
                                "merchant_code": "SIMPL",
                                "logo": "https://hdn-1.fynd.com/payment/simpl_logo.png",
                                "logo_url": {
                                  "small": "https://hdn-1.fynd.com/payment/simpl_logo.png",
                                  "large": "https://hdn-1.fynd.com/payment/simpl_logo.png"
                                }
                              },
                              {
                                "aggregator_name": "Potlee",
                                "name": "POTLEE",
                                "display_name": "Potlee",
                                "code": "POTLEE",
                                "merchant_code": "POTLEE",
                                "logo_url": {
                                  "large": "https://hdn-1.fynd.com/payment/Potlee.png",
                                  "small": "https://hdn-1.fynd.com/payment/Potlee.png"
                                }
                              }
                            ]
                          },
                          {
                            "name": "JIOPP",
                            "display_priority": 15,
                            "payment_mode_id": 15,
                            "display_name": "Jio Partner Pay",
                            "list": [
                              {
                                "aggregator_name": "Jio",
                                "name": "JioPP",
                                "display_name": "Jio Partner Pay",
                                "code": "JIOPP",
                                "logo_url": {
                                  "large": "https://hdn-1.fynd.com/payment/Pos+Logo.png",
                                  "small": "https://hdn-1.fynd.com/payment/Pos+Logo.png"
                                },
                                "merchant_code": "JIOPP"
                              }
                            ]
                          }
                        ],
                        "payment_flows": {
                          "simpl": {
                            "data": {
                              "gateway": {
                                "route": "simpl",
                                "entity": "sdk",
                                "is_customer_validation_required": true,
                                "cust_validation_url": "https://api.fyndx0.de/gringotts/api/v1/validate-customer/?app_id=000000000000000000000001",
                                "sdk": {
                                  "config": {
                                    "redirect": false,
                                    "callback_url": null,
                                    "action_url": "https://api.fyndx0.de/platform/payment/v2/external/payments/confirm/charge/?app_id=000000000000000000000001"
                                  },
                                  "data": {
                                    "user_phone": "9999632145",
                                    "user_email": "app@fynd.com"
                                  }
                                },
                                "return_url": null
                              }
                            },
                            "api_link": "https://api.fyndx0.de/platform/payment/v2/external/payments/request/?app_id=000000000000000000000001",
                            "payment_flow": "sdk",
                            "payment_flow_data": null,
                            "is_customer_validation_required": true,
                            "cust_validation_url": "https://api.fyndx0.de/platform/payment/api/v1/validate-customer/?app_id=000000000000000000000001",
                            "config": {
                              "redirect": false,
                              "final_payment_action_url": "https://api.fyndx0.de/platform/payment/v2/external/payments/confirm/charge/?app_id=000000000000000000000001"
                            }
                          },
                          "potlee": {
                            "data": {
                              "gateway": {
                                "route": "potlee",
                                "entity": "api",
                                "is_customer_validation_required": true,
                                "cust_validation_url": "https://api.fyndx0.de/gringotts/api/v1/validate-customer/",
                                "return_url": null
                              },
                              "payment_flow_data": {
                                "is_customer_validation_required": true,
                                "cust_validation_url": "https://api.fyndx0.de/platform/payment/v2/external/payments/callback/",
                                "config": {
                                  "redirect": true,
                                  "final_payment_action_url": "https://api.fyndx0.de/platform/payment/v2/external/payments/callback/"
                                },
                                "return_url": null
                              }
                            },
                            "api_link": "https://api.fyndx0.de/platform/payment/v2/external/payments/request/?app_id=000000000000000000000001",
                            "payment_flow": "api",
                            "payment_flow_data": {
                              "return_url": null,
                              "cust_validation_url": "https://api.fyndx0.de/gringotts/api/v1/validate-customer/",
                              "is_customer_validation_required": true
                            }
                          },
                          "mswipe": {
                            "data": {
                              "gateway": {
                                "sdk": {
                                  "config": {
                                    "redirect": false,
                                    "action_url": "url",
                                    "webhook_url": "url",
                                    "timeout": 60
                                  }
                                }
                              }
                            },
                            "api_link": "https://api.fyndx0.de/platform/payment/v2/external/payments/request/?app_id=000000000000000000000001",
                            "payment_flow": "sdk"
                          },
                          "juspay": {
                            "data": {},
                            "api_link": "https://sandbox.juspay.in/txns",
                            "payment_flow": "api"
                          },
                          "razorpay": {
                            "data": {},
                            "api_link": "https://api.fyndx0.de/platform/payment/v2/external/payments/request/?app_id=000000000000000000000001",
                            "payment_flow": "sdk"
                          },
                          "bqr_razorpay": {
                            "data": {},
                            "api_link": "https://api.fyndx0.de/platform/payment/v2/external/payments/request/?app_id=000000000000000000000001",
                            "payment_flow": "api"
                          },
                          "fynd": {
                            "data": {},
                            "api_link": "https://api.fyndx0.de/platform/payment/v2/external/payments/request/?app_id=000000000000000000000001",
                            "payment_flow": "api"
                          },
                          "jio": {
                            "data": {},
                            "api_link": "https://api.fyndx0.de/platform/payment/v2/external/payments/request/?app_id=000000000000000000000001",
                            "payment_flow": "api"
                          },
                          "stripe": {
                            "data": {},
                            "api_link": "https://api.fyndx0.de/platform/payment/v2/external/payments/request/?app_id=000000000000000000000001",
                            "payment_flow": "sdk"
                          },
                          "ccavenue": {
                            "data": {},
                            "api_link": "https://api.fyndx0.de/platform/payment/v2/external/payments/request/?app_id=000000000000000000000001",
                            "payment_flow": "sdk"
                          },
                          "payumoney": {
                            "data": {},
                            "api_link": "https://api.fyndx0.de/platform/payment/v2/external/payments/request/?app_id=000000000000000000000001",
                            "payment_flow": "sdk"
                          },
                          "rupifi": {
                            "data": {},
                            "api_link": "https://api.fyndx0.de/platform/payment/v2/external/payments/request/?app_id=000000000000000000000001",
                            "return_url": "",
                            "payment_flow": "api",
                            "cust_validation_url": "https://api.jiox0.de/gringotts/api/v1/validate-customer/",
                            "payment_flow_data": null,
                            "is_customer_validation_required": true
                          },
                          "jiopay": {
                            "api_link": "http://psp-mandate-merchant-sit.jiomoney.com:3003/pg",
                            "payment_flow": "api",
                            "data": {}
                          },
                          "epaylater": {
                            "data": {},
                            "api_link": "https://api-blackbox.epaylater.in/web/process-transaction/",
                            "payment_flow": "api"
                          },
                          "Jio": {
                            "data": {},
                            "api_link": "https://api.fyndx0.de/platform/payment/v2/external/payments/request/?app_id=000000000000000000000001",
                            "payment_flow": "api"
                          }
                        }
                      },
                      "advance_payment": [
                        {
                          "name": "SPLIT",
                          "display_priority": 22,
                          "payment_mode_id": 34,
                          "display_name": "Split Payment",
                          "list": [
                            {
                              "aggregator_name": "Fynd",
                              "name": "Split Payment",
                              "display_name": "Split Payment",
                              "code": "SPLIT",
                              "logo_url": {
                                "small": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/testz0/misc/default-assets/original/yDRf9iyLbH-PosLogo.png",
                                "large": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/testz0/misc/default-assets/original/yDRf9iyLbH-PosLogo.png"
                              },
                              "merchant_code": "SPLIT"
                            }
                          ],
                          "split": {
                            "total_number_of_splits": 7,
                            "splits_remaining": 7
                          }
                        },
                        {
                          "name": "ADVANCE",
                          "display_priority": 22,
                          "payment_mode_id": 35,
                          "display_name": "Advance Payment",
                          "list": [
                            {
                              "aggregator_name": "Fynd",
                              "name": "Advance Payment",
                              "display_name": "Advance Payment",
                              "code": "ADVANCE",
                              "logo_url": {
                                "small": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/testz0/misc/default-assets/original/yDRf9iyLbH-PosLogo.png",
                                "large": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/testz0/misc/default-assets/original/yDRf9iyLbH-PosLogo.png"
                              },
                              "merchant_code": "ADVANCE"
                            }
                          ],
                          "advance": {
                            "is_active": true,
                            "time_unit": "DAYS",
                            "description": "Pay Rs 3000 or more of the total amount",
                            "display_name": "Pay using Advance Payment",
                            "prepayment_type": "PERCENTAGE",
                            "prepayment_value": 20,
                            "cancellation_type": "AUTO",
                            "refund_time_limit": 4,
                            "all_prepayment_type": [
                              "PERCENTAGE",
                              "FIXED"
                            ],
                            "allow_custom_advance_amount": true
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Internal Server Error. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorCodeDetails"
                },
                "example": {
                  "success": false,
                  "error": {
                    "code": "BAD_REQUEST_ERROR",
                    "description": ""
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Payment"
        ]
      }
    },
    "/service/application/payment/v1.0/payment/options/pos": {
      "get": {
        "summary": "getPosPaymentModeRoutes | POS payment modes",
        "description": "Get available payment methods on the payment page for POS, specifying the aggregator for each option, such as 'CARD powered by Juspay' and 'QR powered by Razorpay'.",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "amount",
            "in": "query",
            "description": "Payable amount.",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "examples": {
              "payment_pos_success": {
                "summary": "amount",
                "value": 1000
              },
              "payment_options_fail": {
                "summary": "amount",
                "value": 1000
              },
              "internal_server_fail": {
                "summary": "amount",
                "value": 1000
              }
            }
          },
          {
            "name": "cart_id",
            "in": "query",
            "description": "Identifier of the cart.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "payment_pos_success": {
                "summary": "cart_id",
                "value": "2343432412342"
              },
              "payment_options_fail": {
                "summary": "cart_id",
                "value": "2343432412342"
              },
              "internal_server_fail": {
                "summary": "cart_id",
                "value": "2343432412342"
              }
            }
          },
          {
            "name": "pincode",
            "in": "query",
            "description": "The PIN Code of the destination address, e.g. 400059.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "payment_pos_success": {
                "summary": "pincode",
                "value": 122001
              },
              "payment_options_fail": {
                "summary": "pincode",
                "value": 122001
              },
              "internal_server_fail": {
                "summary": "pincode",
                "value": 122001
              }
            }
          },
          {
            "name": "checkout_mode",
            "in": "query",
            "description": "Option to checkout for self or for others.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "examples": {
              "payment_pos_success": {
                "summary": "checkout_mode",
                "value": "self"
              },
              "payment_options_fail": {
                "summary": "checkout_mode",
                "value": "self"
              },
              "internal_server_fail": {
                "summary": "checkout_mode",
                "value": "self"
              }
            }
          },
          {
            "name": "refresh",
            "in": "query",
            "description": "Select `true` to remove temporary cache files on payment gateway and replace with the latest one.",
            "schema": {
              "type": "boolean"
            },
            "examples": {
              "payment_pos_success": {
                "summary": "refresh",
                "value": true
              },
              "payment_options_fail": {
                "summary": "refresh",
                "value": true
              },
              "internal_server_fail": {
                "summary": "refresh",
                "value": true
              }
            }
          },
          {
            "name": "card_reference",
            "in": "query",
            "description": "Card reference id of user's debit or credit card.",
            "schema": {
              "type": "string"
            },
            "required": false,
            "examples": {
              "payment_pos_success": {
                "summary": "card_reference",
                "value": "1"
              },
              "payment_options_fail": {
                "summary": "card_reference",
                "value": "1"
              },
              "internal_server_fail": {
                "summary": "card_reference",
                "value": "1"
              }
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "required": true,
            "description": "The order type of shipment  HomeDelivery - If the customer wants the order home-delivered  PickAtStore - If the customer wants the handover of an order at the store itself.",
            "schema": {
              "x-not-enum": true,
              "type": "string"
            },
            "examples": {
              "payment_pos_success": {
                "summary": "order_type",
                "value": "HomeDelivery"
              },
              "payment_options_fail": {
                "summary": "order_type",
                "value": "HomeDelivery"
              },
              "internal_server_fail": {
                "summary": "order_type",
                "value": "HomeDelivery"
              }
            }
          },
          {
            "name": "user_details",
            "in": "query",
            "description": "URLencoded JSON containing details of an anonymous user.",
            "schema": {
              "type": "string"
            },
            "required": false,
            "examples": {
              "payment_pos_success": {
                "summary": "user_details",
                "value": "1"
              },
              "payment_options_fail": {
                "summary": "user_details",
                "value": "1"
              },
              "internal_server_fail": {
                "summary": "user_details",
                "value": "1"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns all available options for payment. Check the example shown below or refer `PaymentModeRouteDetails` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentModeRouteDetails"
                },
                "examples": {
                  "payment_pos_success": {
                    "value": {
                      "success": true,
                      "payment_options": {
                        "payment_option": [
                          {
                            "name": "CAS",
                            "display_priority": 21,
                            "payment_mode_id": 39,
                            "display_name": "Cash at Store",
                            "list": [
                              {
                                "aggregator_name": "Fynd",
                                "name": "CAS",
                                "display_name": "Cash",
                                "code": "CAS",
                                "logo_url": {
                                  "large": "https://hdn-1.fynd.com/payment/cod.png",
                                  "small": "https://hdn-1.fynd.com/payment/cod.png"
                                },
                                "merchant_code": "CAS"
                              }
                            ]
                          },
                          {
                            "name": "CSAS",
                            "display_priority": 21,
                            "payment_mode_id": 40,
                            "display_name": "Card Swiped at Store",
                            "list": [
                              {
                                "aggregator_name": "Fynd",
                                "name": "CSAS",
                                "display_name": "Card Swipe",
                                "code": "CSAS",
                                "logo_url": {
                                  "large": "https://hdn-1.fynd.com/payment/cod.png",
                                  "small": "https://hdn-1.fynd.com/payment/cod.png"
                                },
                                "merchant_code": "CSAS"
                              }
                            ]
                          },
                          {
                            "name": "UPI",
                            "display_priority": 9,
                            "payment_mode_id": 7,
                            "display_name": "UPI",
                            "list": [
                              {
                                "aggregator_name": "Razorpay",
                                "name": "UPI",
                                "display_name": "BHIM UPI",
                                "code": "UPI",
                                "logo_url": {
                                  "small": "https://hdn-1.fynd.com/payment/upi_100x78.png",
                                  "large": "https://hdn-1.fynd.com/payment/upi_150x100.png"
                                },
                                "merchant_code": "UPI",
                                "timeout": 240,
                                "retry_count": 0,
                                "fynd_vpa": "shopsense.rzp@hdfcbank",
                                "intent_flow": true,
                                "intent_app": [
                                  {
                                    "code": "google_pay",
                                    "display_name": "Google Pay",
                                    "package_name": "com.google.android.apps.nbu.paisa.user",
                                    "logos": {
                                      "small": "https://hdn-1.fynd.com/payment/upi-google-pay.png",
                                      "large": "https://hdn-1.fynd.com/payment/upi-google-pay.png"
                                    }
                                  }
                                ],
                                "intent_app_error_list": [
                                  "com.csam.icici.bank.imobile",
                                  "in.org.npci.upiapp",
                                  "com.whatsapp"
                                ],
                                "intent_app_error_dict_list": [
                                  {
                                    "package_name": "com.csam.icici.bank.imobile",
                                    "code": "icici"
                                  },
                                  {
                                    "package_name": "in.org.npci.upiapp",
                                    "code": "upiapp"
                                  },
                                  {
                                    "package_name": "com.whatsapp",
                                    "code": "whatsapp"
                                  }
                                ]
                              }
                            ]
                          }
                        ],
                        "payment_flows": {
                          "simpl": {
                            "data": {
                              "gateway": {
                                "route": "simpl",
                                "entity": "sdk",
                                "is_customer_validation_required": true,
                                "cust_validation_url": "https://api.fyndx0.de/gringotts/api/v1/validate-customer/?app_id=000000000000000000000001",
                                "sdk": {
                                  "config": {
                                    "redirect": false,
                                    "callback_url": null,
                                    "action_url": "https://api.fyndx0.de/platform/payment/v2/external/payments/confirm/charge/?app_id=000000000000000000000001"
                                  },
                                  "data": {
                                    "user_phone": "9999632145",
                                    "user_email": "app@fynd.com"
                                  }
                                },
                                "return_url": null
                              }
                            },
                            "api_link": "https://api.fyndx0.de/platform/payment/v2/external/payments/request/?app_id=000000000000000000000001",
                            "payment_flow": "sdk"
                          },
                          "juspay": {
                            "data": {},
                            "api_link": "https://sandbox.juspay.in/txns",
                            "payment_flow": "api"
                          },
                          "razorpay": {
                            "data": {},
                            "api_link": "https://api.fyndx0.de/platform/payment/v2/external/payments/request/?app_id=000000000000000000000001",
                            "payment_flow": "sdk"
                          },
                          "upi_razorpay": {
                            "data": {},
                            "api_link": "https://api.fyndx0.de/platform/payment/v2/external/payments/request/?app_id=000000000000000000000001",
                            "payment_flow": "api"
                          },
                          "bqr_razorpay": {
                            "data": {},
                            "api_link": "https://api.fyndx0.de/platform/payment/v2/external/payments/request/?app_id=000000000000000000000001",
                            "payment_flow": "api"
                          },
                          "cashfree": {
                            "data": {},
                            "api_link": "https://api.fyndx0.de/platform/payment/v2/external/payments/request/?app_id=000000000000000000000001",
                            "payment_flow": "api"
                          },
                          "fynd": {
                            "data": {},
                            "api_link": "https://api.fyndx0.de/platform/payment/v2/external/payments/request/?app_id=000000000000000000000001",
                            "payment_flow": "api"
                          },
                          "jio": {
                            "data": {},
                            "api_link": "https://api.fyndx0.de/platform/payment/v2/external/payments/request/?app_id=000000000000000000000001",
                            "payment_flow": "api"
                          },
                          "stripe": {
                            "data": {},
                            "api_link": "https://api.fyndx0.de/platform/payment/v2/external/payments/request/?app_id=000000000000000000000001",
                            "payment_flow": "sdk"
                          },
                          "ccavenue": {
                            "data": {},
                            "api_link": "https://api.fyndx0.de/platform/payment/v2/external/payments/request/?app_id=000000000000000000000001",
                            "payment_flow": "sdk"
                          },
                          "payumoney": {
                            "data": {},
                            "api_link": "https://api.fyndx0.de/platform/payment/v2/external/payments/request/?app_id=000000000000000000000001",
                            "payment_flow": "sdk"
                          },
                          "rupifi": {
                            "data": {},
                            "api_link": "https://api.fyndx0.de/platform/payment/v2/external/payments/request/?app_id=000000000000000000000001",
                            "return_url": "",
                            "payment_flow": "api",
                            "cust_validation_url": "https://api.jiox0.de/gringotts/api/v1/validate-customer/"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorCodeDetails"
                },
                "example": {
                  "success": false,
                  "error": {
                    "code": "BAD_REQUEST_ERROR",
                    "description": ""
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Payment"
        ]
      }
    },
    "/service/application/payment/v1.0/payment/options/wallet/link": {
      "post": {
        "summary": "walletLinkInitiate | Initiate linking of wallet",
        "description": "Link wallet for the aggregator for processing of payment.",
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WalletLinkRequestSchema"
              },
              "examples": {
                "wallet_link_success": {
                  "value": {
                    "aggregator": "Jio",
                    "mobile": "8999999999",
                    "wallet_code": "Paytm"
                  }
                },
                "wallet_link_failed": {
                  "value": {
                    "mobile": "8999999999",
                    "wallet_code": "Paytm"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP for Wallet Linking sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletResponseSchema"
                },
                "examples": {
                  "wallet_link_success": {
                    "summary": "OTP sent successfully",
                    "value": {
                      "success": true,
                      "data": {
                        "message": "OTP sent successfully",
                        "link_token": "31a2f5a7-ee30-4cbb-8669-53071878f6d7"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Payment"
        ]
      }
    },
    "/service/application/payment/v1.0/payment/options/wallet/verify": {
      "post": {
        "summary": "linkWallet | OTP verification",
        "description": "Verify the linking of wallet using OTP for further processing of payment.",
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WalletVerifyRequestSchema"
              },
              "examples": {
                "wallet_verify_success": {
                  "value": {
                    "aggregator": "Jio",
                    "link_token": "31a2f5a7-ee30-4cbb-8669-53071878f6d7",
                    "otp": 489871
                  }
                },
                "wallet_verify_failed": {
                  "value": {
                    "link_token": "31a2f5a7-ee30-4cbb-8669-53071878f6d7",
                    "otp": 489871
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP Verification",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletResponseSchema"
                },
                "examples": {
                  "wallet_verify_success": {
                    "summary": "OTP verification success",
                    "value": {
                      "success": true,
                      "data": {
                        "message": "OTP verified successfully",
                        "balance": 234,
                        "token": "100f8193-63b6-4f2b-a9bc-6830639583a6"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Payment"
        ]
      }
    },
    "/service/application/payment/v1.0/payment/options/wallet/delink": {
      "post": {
        "summary": "delinkWallet | Delink the wallet",
        "description": "Delink the wallet.",
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WalletDelinkRequestSchema"
              },
              "examples": {
                "wallet_delink_success": {
                  "value": {
                    "aggregator": "Jio",
                    "wallet_code": "Paytm"
                  }
                },
                "wallet_delink_fail": {
                  "value": {
                    "wallet_code": "Paytm"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Wallet delinked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletResponseSchema"
                },
                "examples": {
                  "wallet_delink_success": {
                    "summary": "Wallet delinked successfully",
                    "value": {
                      "success": true,
                      "data": {
                        "message": "Wallet delinked successfully"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Payment"
        ]
      }
    },
    "/service/application/payment/v1.0/rupifi/banner": {
      "get": {
        "summary": "getRupifiBannerDetails | Rupifi banner info.",
        "description": "Get Rupifi payment banner details. It provides information such as the KYC URL and the current status of the Rupifi payment banner.",
        "tags": [
          "Payment"
        ],
        "responses": {
          "200": {
            "description": "Success. Return CreditLine Offer detail.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RupifiBannerDetails"
                },
                "examples": {
                  "rupifi_banner_success": {
                    "value": {
                      "success": true,
                      "data": {
                        "kyc_url": "http://rupifi.kyc1.com/",
                        "status": "APPROVED"
                      },
                      "error": {
                        "code": "INTERNAL_SERVER_ERROR",
                        "description": ""
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorCodeDetails"
                },
                "example": {
                  "success": false,
                  "error": {
                    "code": "BAD_REQUEST_ERROR",
                    "description": ""
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Banner"
        ]
      }
    },
    "/service/application/payment/v1.0/epaylater/banner": {
      "get": {
        "summary": "getEpaylaterBannerDetails | Epaylater banner info",
        "description": "Get Epaylater payment banner details. It provides information about the banner's display status, along with relevant messages and the user's registration status.",
        "tags": [
          "Payment"
        ],
        "responses": {
          "200": {
            "description": "Success. Return Epaylater Offer detail. if `display=True`, then show banner otherwise do not show.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EpaylaterBannerDetails"
                },
                "examples": {
                  "epaylater_success": {
                    "value": {
                      "success": true,
                      "data": {
                        "display": false,
                        "message": "User is Active",
                        "status": "ACTIVE"
                      },
                      "error": {
                        "description": ""
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorCodeDetails"
                },
                "example": {
                  "success": false,
                  "error": {
                    "code": "BAD_REQUEST_ERROR",
                    "description": ""
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Banner"
        ]
      }
    },
    "/service/application/payment/v1.0/payment/resend_or_cancel": {
      "post": {
        "summary": "resendOrCancelPayment | Resend or cancel a pending payment transaction",
        "description": "Resend or cancel payment link that have been initiated but may require modification or cancellation for various reasons, ensuring flexibility and control in payment processing.",
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendOrCancelPayment"
              },
              "examples": {
                "payment_resend_success": {
                  "value": {
                    "order_id": "FY65C47E27CB249F378C",
                    "request_type": "resend",
                    "device_id": "1234567890"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Returns the status of payment.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResendOrCancelPaymentDetails"
                },
                "examples": {
                  "payment_resend_success": {
                    "value": {
                      "success": true,
                      "data": {
                        "message": "Payment link Cancelled.",
                        "status": true
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorCodeDetails"
                },
                "example": {
                  "success": false,
                  "error": {
                    "code": "BAD_REQUEST_ERROR",
                    "description": "Some thing wrong in payload"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Payment link"
        ]
      }
    },
    "/service/application/payment/v1.0/payment/html/render": {
      "post": {
        "summary": "renderHTML | Render HTML.",
        "description": "Render HTML for a payment aggregator page.",
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RenderHTML"
              },
              "examples": {
                "html_success": {
                  "value": {
                    "base64_html": "PGh0bWw+PGhlYWQ+PG1ldGEgbmFtZT0ndmlld3BvcnQnIGNvbnRlbnQ9J3dpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xICwgbWF4aW11bS1zY2FsZT0xLCB1c2VyLXNjYWxhYmxlPW5vJz48c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCc+ZnVuY3Rpb24gZm9ybVN1Ym1pdCgpe2RvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwYXltZW50Jykuc3VibWl0KCk7fTwvc2NyaXB0PjwvaGVhZD48Ym9keSBvbmxvYWQ9J2phdmFzY3JpcHQ6Zm9ybVN1Ym1pdCgpOyc+PGZvcm0gbmFtZT0ncGF5bWVudCcgaWQ9J3BheW1lbnQnIG1ldGhvZD0nUE9TVCcgYWN0aW9uPSdodHRwczovL3J0c3MtcmVwbGljYS5qaW9sYWJzLmNvbS9qaW9wYXlwZy92MS9wYXltZW50LW9wdGlvbnMnPjxpbWcgc3JjPSdodHRwczovL3J0c3MtcmVwbGljYS5qaW9sYWJzLmNvbS91cGxvYWQvbXlqaW9jb3Jlc3RhdGljZmlsZXMvaW1hZ2VzL2xvYWRlci5naWYnIHdpZHRoPScyNSUnIGhlaWdodD0nYXV0bycgc3R5bGU9J2Rpc3BsYXk6IGJsb2NrOyBtYXJnaW4tdG9wOiAxMjBweDttYXJnaW4tbGVmdDogYXV0bzsgbWFyZ2luLXJpZ2h0OiBhdXRvOyBtYXJnaW4tYm90dG9tOjEwcHg7Jy8+PGRpdiBzdHlsZT0ndGV4dC1hbGlnbjogY2VudGVyJz48cCBzdHlsZT0nZGlzcGxheTogaW5saW5lLWJsb2NrO3ZlcnRpY2FsLWFsaWduOiBtaWRkbGU7Zm9udC1zaXplOjE2cHgnPlJlZGlyZWN0aW5nIHRvIHBheW1lbnQgZ2F0ZXdheS4gUGxlYXNlIGRvIG5vdCBjbGljayBvbiByZWZyZXNoIG9yIGJhY2sgYnV0dG9uLiA8L3A+PC9kaXY+PGlucHV0IHR5cGU9J2hpZGRlbicgbmFtZT0ncGFyYW0xJyB2YWx1ZT0nZmY1MGI2MWQzMGVkNDMxYWExMGVhOTU1MzZiNzc2MDgnLz48aW5wdXQgdHlwZT0nc3VibWl0JyB2YWx1ZT0nJyBzdHlsZT0nZGlzcGxheTogbm9uZTsnLz48L2Zvcm0+PC9ib2R5PjwvaHRtbD4=",
                    "returntype": "json"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success and return HTML decoded text",
            "content": {
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/RenderHTMLDetails"
                },
                "examples": {
                  "html_success": {
                    "value": {
                      "html": "<html><body>Your HTML text</body></html>"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorCodeDetails"
                },
                "example": {
                  "success": false,
                  "error": {
                    "code": "BAD_REQUEST_ERROR",
                    "description": "Some thing wrong in payload"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Payment"
        ]
      }
    },
    "/service/application/payment/v1.0/validate-vpa": {
      "post": {
        "summary": "validateVPA | Validate VPA.",
        "description": "Validate if a Virtual Payment Address (VPA) is valid for processing payments and returns the validation result.is_valid boolean value indicating whether the VPA is valid for payments.",
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "description": "Available aggregators are razorpay, juspay, jio.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateVPA"
              },
              "examples": {
                "validate_vpa_success": {
                  "value": {
                    "upi_vpa": "success@razorpay",
                    "aggregator": "razorpay"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Returns the status of payment.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateVPADetails"
                },
                "examples": {
                  "validate_vpa_success": {
                    "value": {
                      "success": true,
                      "data": {
                        "upi_vpa": "success@razorpay",
                        "status": "VALID",
                        "is_valid": true,
                        "customer_name": "Verified"
                      },
                      "error": {
                        "description": "error message"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Payment"
        ]
      }
    },
    "/service/application/payment/v1.0/cards/info/{card_info}": {
      "get": {
        "summary": "cardDetails | Get card details",
        "description": "Get details of a specified payment card, including information such as the card type, brand, country, and expiration date.",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "card_info",
            "in": "path",
            "description": "Card first 6 digit IIN(prefix) number.",
            "schema": {
              "type": "string"
            },
            "required": true,
            "examples": {
              "merchant_success": {
                "value": "123456"
              },
              "merchant_fail": {
                "value": "xyz"
              },
              "internal_server_fail": {
                "value": "123456"
              }
            }
          },
          {
            "name": "aggregator",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "juspay"
            },
            "examples": {
              "merchant_success": {
                "value": "jio"
              },
              "merchant_fail": {
                "value": "jio"
              },
              "internal_server_fail": {
                "value": "xyz"
              }
            },
            "description": "This is a string value describing the aggregator name."
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns the status of payment.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardDetailsFetchedDetails"
                },
                "examples": {
                  "merchant_success": {
                    "value": {
                      "success": true,
                      "data": {
                        "country": "INDIA",
                        "extended_card_type": "DEBIT",
                        "card_brand": "MASTERCARD",
                        "card_object": "tkn_1416af8beba94c96a3dqer196cd9fce7",
                        "id": "529992",
                        "card_sub_type": null,
                        "type": "DEBIT",
                        "bank": "",
                        "is_domestic_card": true,
                        "status": true,
                        "user": "63b4fce75a2bca1dw0f08f3f9",
                        "name_on_card": "Dummy",
                        "bank_code": "HDFC",
                        "card_token": "tkn_1416af8beba94c96a3dqer196cd9fce7",
                        "card_exp_year": "2024",
                        "card_exp_month": "12"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Card"
        ]
      }
    },
    "/service/application/payment/v1.0/refund/transfer-mode": {
      "get": {
        "summary": "getActiveRefundTransferModes | Get refund transfer modes",
        "description": "Lists available refund modes, such as UPI, providing details like display name, logo, and ID for each mode.",
        "tags": [
          "Payment"
        ],
        "responses": {
          "200": {
            "description": "Success. Shows the available refund mode to choose, e.g. Netbanking.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferModeFetchDetails"
                },
                "examples": {
                  "refund_mode_success": {
                    "value": {
                      "data": [
                        {
                          "display_name": "BANK",
                          "items": [
                            {
                              "id": 6,
                              "name": "bank",
                              "display_name": "BANK",
                              "logo_small": "https://hdn-1.fynd.com/payment/netbanking.png",
                              "logo_large": "https://hdn-1.fynd.com/payment/netbanking.png"
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Refund Transfer Modes"
        ]
      },
      "put": {
        "summary": "enableOrDisableRefundTransferMode | Toggle refund mode",
        "description": "Enable/Disable a particular refund transfer mode based on the request body parameters, indicating whether the mode should be enabled or disabled.",
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "description": "Pass the refund transfer mode in the request body and whether to enable or disable it.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRefundTransferMode"
              },
              "examples": {
                "update_transfer_mode": {
                  "value": {
                    "transfer_mode": "bank",
                    "enable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Shows whether the refund mode was successfully enabled or disabled.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefundTransferModeUpdateDetails"
                },
                "examples": {
                  "update_transfer_mode": {
                    "value": {
                      "success": true
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Refund Transfer Modes"
        ]
      }
    },
    "/service/application/payment/v1.0/refund/user/beneficiary": {
      "get": {
        "summary": "getUserBeneficiariesDetail | Retrieve beneficiary details",
        "description": "Get beneficiaries associated with the user for processing refunds, based on the provided order ID.",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "in": "query",
            "description": "A unique number used for identifying and tracking your orders.",
            "name": "order_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "get_refund_beneficiary_success": {
                "summary": "valid order_id",
                "value": "FY65C2797B2F00FCF07E"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns the details of the beneficiary getting a refund.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderBeneficiaryFetchDetails"
                },
                "examples": {
                  "get_refund_beneficiary_success": {
                    "value": {
                      "beneficiaries": [
                        {
                          "id": 221,
                          "beneficiary_id": "0f7e44a922df352c05c5f73cb40ba115",
                          "bank_name": "State Bank of India",
                          "branch_name": "State Bank of India",
                          "account_holder": "SHASHI TEST",
                          "account_no": "1234567891",
                          "ifsc_code": "SBIN0005611",
                          "mobile": "9112042174",
                          "email": "payment@gofynd.com",
                          "address": "204A",
                          "comment": "",
                          "is_active": true,
                          "created_on": "2020-06-29T12:38:39.000Z",
                          "modified_on": "2020-06-29T12:38:39.000Z",
                          "display_name": "BANK",
                          "transfer_mode": "bank",
                          "title": "Bank Account",
                          "subtitle": "1234567891",
                          "delights_user_name": null
                        }
                      ],
                      "show_beneficiary_details": false
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Beneficiary"
        ]
      }
    },
    "/service/application/payment/v1.0/ifsc-code/verify": {
      "get": {
        "summary": "verifyIfscCode | Verify IFSC",
        "description": "Validate IFSC code and returns bank details if valid.",
        "tags": [
          "Payment"
        ],
        "x-documentation": false,
        "parameters": [
          {
            "in": "query",
            "name": "ifsc_code",
            "schema": {
              "x-not-enum": true,
              "type": "string"
            },
            "description": "A 11-digit alphanumeric code that uniquely identifies a bank branch.",
            "examples": {
              "refund_account_success": {
                "summary": "valid ifsc code",
                "value": "ICIC00004148"
              },
              "refund_account_fail": {
                "summary": "valid ifsc code",
                "value": "xyz"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Shows whether the IFSC code is valid, and returns the bank details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IfscCodeDetails"
                },
                "example": {
                  "branch_name": "MANPUR",
                  "bank_name": "GAYA",
                  "BRANCH": "MANPUR",
                  "CENTRE": "GAYA",
                  "DISTRICT": "GAYA",
                  "STATE": "BIHAR",
                  "ADDRESS": "POBUNIYADGANJBIHAR",
                  "CONTACT": "00",
                  "MICR": "816002103",
                  "UPI": true,
                  "RTGS": true,
                  "CITY": "GAYA",
                  "NEFT": true,
                  "IMPS": true,
                  "SWIFT": "",
                  "BANK": "State Bank of India",
                  "BANKCODE": "SBIN",
                  "IFSC": "SBIN0005611",
                  "success": true
                }
              }
            }
          }
        },
        "x-groups": [
          "Refund"
        ]
      }
    },
    "/service/application/payment/v1.0/refund/order/beneficiaries": {
      "get": {
        "summary": "getOrderBeneficiariesDetail | Retrieve beneficiary details",
        "description": "Get beneficiary details like bank name , ifsc code , branch name associated with a specific order for refund processing.",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "in": "query",
            "description": "A unique number used for identifying and tracking your orders.",
            "name": "order_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "get_order_beneficiary_success": {
                "summary": "valid order_id",
                "value": "FY65C2797B2F00FCF07E"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns the details of the beneficiary getting a refund.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderBeneficiaryFetchDetails"
                },
                "examples": {
                  "get_order_beneficiary_success": {
                    "value": {
                      "beneficiaries": [
                        {
                          "id": 3695,
                          "beneficiary_id": "4c86dd56e634a4c6a8fb51d195bc7b83",
                          "bank_name": "State Bank of India",
                          "branch_name": "BHOGAT",
                          "account_holder": "PRAKASH TEST",
                          "account_no": "3566342455454",
                          "ifsc_code": "SBIN0014982",
                          "mobile": "7819064010",
                          "email": "prakashtest@gmail.com",
                          "address": "49A, Dabhi seri, jodhpur, kalyanpur",
                          "comment": "COD Refund",
                          "is_active": true,
                          "created_on": "2021-01-22T11:31:02.000Z",
                          "modified_on": "2021-01-22T11:31:02.000Z",
                          "display_name": "BANK",
                          "transfer_mode": "bank",
                          "title": "Bank Account",
                          "subtitle": "35663423659",
                          "delights_user_name": "shreeniwas_24x7_gmail_com_45978_16624463"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefundErrorCodeAndMessage"
                },
                "examples": {
                  "merchant_payment_response_fail": {
                    "value": {
                      "success": false,
                      "message": ""
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Beneficiary"
        ]
      }
    },
    "/service/application/payment/v1.0/refund/account": {
      "post": {
        "summary": "addBeneficiaryDetails | Add beneficiary for refund",
        "description": "Add beneficiary details specifically for refund transactions, including account holder name, account number and bank details.",
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddBeneficiaryDetails"
              },
              "examples": {
                "add_refund_account_fail": {
                  "value": {
                    "details": {
                      "account_holder": "shashi bro",
                      "account_no": "000100289877623",
                      "address": "A-402, HARI SMRUTI BLDG, KHANDWALA LANE",
                      "bank_name": "Test",
                      "branch_name": "Test1",
                      "comment": "Test",
                      "email": "abc@example.com",
                      "ifsc_code": "SBIN0008752",
                      "mobile": "9999999999"
                    },
                    "order_id": "xyzxyzxyz",
                    "transfer_mode": "bank",
                    "shipment_id": "16100144824381402124",
                    "delights": false
                  }
                },
                "add_refund_account_success": {
                  "value": {
                    "details": {
                      "account_holder": "shashi bro",
                      "account_no": "000100289877623",
                      "address": "A-402, HARI SMRUTI BLDG, KHANDWALA LANE",
                      "bank_name": "Test",
                      "branch_name": "Test1",
                      "comment": "Test",
                      "email": "abc@example.com",
                      "ifsc_code": "SBIN0008752",
                      "mobile": "9999999999"
                    },
                    "order_id": "FY65C2797B2F00FCF07E",
                    "transfer_mode": "bank",
                    "shipment_id": "16100144824381402124",
                    "delights": false
                  }
                },
                "internal_server_fail": {
                  "value": {
                    "details": {
                      "account_holder": "shashi bro",
                      "account_no": "000100289877623",
                      "address": "A-402, HARI SMRUTI BLDG, KHANDWALA LANE",
                      "bank_name": "Test",
                      "branch_name": "Test1",
                      "comment": "Test",
                      "email": "abc@example.com",
                      "ifsc_code": "SBIN0008752",
                      "mobile": "9999999999"
                    },
                    "order_id": "FY65C2797B2F00FCF07E",
                    "transfer_mode": "bank",
                    "shipment_id": "16100144824381402124",
                    "delights": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefundAccountDetails"
                },
                "examples": {
                  "add_refund_account_success": {
                    "value": {
                      "success": true,
                      "message": "Account successfully created",
                      "data": {},
                      "is_verified_flag": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefundErrorCodeAndMessage"
                },
                "examples": {
                  "add_refund_account_fail": {
                    "value": {
                      "success": false
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Refund"
        ]
      },
      "patch": {
        "summary": "deleteBeneficiaryDetails | Delete saved beneficiary details of customers",
        "description": "Use this API to delete the saved beneficiary details provided beneficiary Id.",
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "description": "Pass the details in the request body as shown below.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteBeneficiary"
              },
              "examples": {
                "ben_id_delete_success": {
                  "value": {
                    "beneficiary_id": "12344532qwq"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Shows whether the beneficiary details were saved to a returned/cancelled order or not.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteRefundAccountDetails"
                },
                "examples": {
                  "ben_id_delete_success": {
                    "value": {
                      "success": true,
                      "refund_options": "Account successfully deleted",
                      "data": {
                        "status": "failed"
                      },
                      "message": "error message"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Refund"
        ]
      }
    },
    "/service/application/payment/v1.0/refund/verification/bank": {
      "post": {
        "summary": "verifyOtpAndAddBeneficiaryForBank | Verify OTP for bank.",
        "description": "Verify the OTP provided by the user and adds a bank beneficiary for refund processing.",
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "description": "Pass the OTP,  request ID and hash key in the request body as shown below.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddBeneficiaryViaOtpVerification"
              },
              "examples": {
                "verification_bank_success": {
                  "value": {
                    "otp": "9944",
                    "hash_key": "fdefdtefdtedtedvefder",
                    "request_id": "dtefdtferdferdferdfredcefce"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddBeneficiaryViaOtpVerificationDetails"
                },
                "examples": {
                  "verification_bank_success": {
                    "value": {
                      "success": true,
                      "message": "Account successfully created"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WrongOtpError"
                },
                "examples": {
                  "verification_bank_fail": {
                    "value": {
                      "success": "false",
                      "description": "OTP Verification Failed",
                      "is_verified_flag": false
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Refund"
        ]
      }
    },
    "/service/application/payment/v1.0/refund/account/otp": {
      "post": {
        "summary": "addRefundBankAccountUsingOTP | Save bank details for cancelled/returned order",
        "description": "Add bank account specifically for refunds, employing OTP verification for security.",
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddBeneficiaryDetailsOTP"
              },
              "examples": {
                "otp_success": {
                  "value": {
                    "details": {
                      "account_holder": "Lorem Ipsum",
                      "account_no": "1234567890",
                      "bank_name": "SBI",
                      "branch_name": "Lorem Ipsum",
                      "ifsc_code": "SBINLOREMIPSUM0001"
                    },
                    "order_id": "FY65C2797B2F00FCF07E",
                    "request_hash": "33ae131b6e0674043929a3dd0ee76add04e3ba377ec2daddd95c7b9245d1e305"
                  }
                },
                "otp_fail": {
                  "value": {
                    "details": {
                      "account_holder": "Lorem Ipsum",
                      "account_no": "12345678906681",
                      "bank_name": "SBI",
                      "branch_name": "Lorem Ipsum",
                      "ifsc_code": "SBINLOREMIPSUM0001"
                    },
                    "order_id": "FY65C2797B2F00FCF07E"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Shows whether the beneficiary details were saved to a returned/cancelled order or not.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefundAccountDetails"
                },
                "examples": {
                  "otp_success": {
                    "value": {
                      "success": true,
                      "message": "Account successfully created",
                      "data": {},
                      "is_verified_flag": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResourceError"
                },
                "examples": {
                  "otp_fail": {
                    "value": {
                      "success": false,
                      "code": "BAD_REQUEST_ERROR",
                      "description": "Order not found!"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Refund"
        ]
      },
      "get": {
        "summary": "getotpOrderBeneficiariesDetail | Lists the beneficiary of a refund",
        "description": "Get the details of all active beneficiary added by a user for refund.",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "in": "query",
            "description": "A unique number used for identifying and tracking your orders.",
            "name": "order_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "merchant_payment_response_success": {
                "summary": "valid order_id",
                "value": "FY65C2797B2F00FCF07E"
              },
              "merchant_payment_response_fail": {
                "summary": "invalid order_id",
                "value": "FY65C2797B2F00FCF07E"
              }
            }
          },
          {
            "in": "query",
            "description": "A unique number used for identifying and tracking your orders.",
            "name": "request_hash",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "merchant_payment_response_success": {
                "summary": "valid request hash",
                "value": "459e20f8d3720e0d8ec49a397078793342e2968f7bcea4fe84b37899fdb35bcb"
              },
              "merchant_payment_response_fail": {
                "summary": "invalid request hash",
                "value": "xyzxyzxyz"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns the details of the beneficiary getting a refund. Check the example shown below or refer `AddBeneficiaryDetailsOTPDetails` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddBeneficiaryDetailsOTPDetails"
                },
                "examples": {
                  "merchant_payment_response_success": {
                    "value": {
                      "success": true,
                      "data": [
                        {
                          "ifsc_code": "SBIN0008752",
                          "beneficiary_id": "BHMF7MDOyDA3avPLlVkLxOxTnzeYpvOT8WXUkCKkxN0=",
                          "comment": "Test",
                          "account_no": "XXXX-XXXX-7623",
                          "bank_name": "Test",
                          "address": "12/255, Sher-E-Punjab Society, Madhukunj Society",
                          "email": "paymentsdummy@gofynd.com",
                          "branch_name": "Test1",
                          "mobile": "9620489445",
                          "account_holder": "shashi bro"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefundErrorCodeAndMessage"
                },
                "examples": {
                  "merchant_payment_response_fail": {
                    "value": {
                      "success": false
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Refund"
        ]
      }
    },
    "/service/application/payment/v1.0/refund/verification/wallet": {
      "post": {
        "summary": "verifyOtpAndAddBeneficiaryForWallet | Verify OTP for wallet.",
        "description": "Verify OTP provided by the user and adds a wallet beneficiary.",
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "description": "Pass mobile number and country code in the request body as shown below.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WalletOtp"
              },
              "examples": {
                "wallet_success": {
                  "value": {
                    "mobile": "9112042174",
                    "country_code": "91"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Sends the OTP to the given mobile number.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletOtpDetails"
                },
                "examples": {
                  "wallet_success": {
                    "value": {
                      "success": true,
                      "is_verified_flag": "false",
                      "request_id": "c3ca6c13d490c885a125d106b45697b7"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResourceError"
                },
                "example": {
                  "success": false,
                  "code": "BAD_REQUEST_ERROR",
                  "description": "Mobile no wrong"
                }
              }
            }
          }
        },
        "x-groups": [
          "Refund"
        ]
      }
    },
    "/service/application/payment/v1.0/refund/beneficiary/default": {
      "post": {
        "summary": "updateDefaultBeneficiary | Set default beneficiary for refund",
        "description": "Update default beneficiary for the order refund of the user.",
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "description": "Pass the order ID and beneficiary ID in the request body as shown below.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetDefaultBeneficiary"
              },
              "examples": {
                "merchant_payment_response_success": {
                  "value": {
                    "order_id": "FY65C2797B2F00FCF07E",
                    "beneficiary_id": "yZTxV7t318u/tpgAZxUl4XYPMMChxtzeDuNdVD798ro="
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetDefaultBeneficiaryDetails"
                },
                "examples": {
                  "merchant_payment_response_success": {
                    "value": {
                      "success": true,
                      "is_beneficiary_set": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetDefaultBeneficiaryDetails"
                },
                "examples": {
                  "merchant_payment_response_fail": {
                    "value": {
                      "success": false,
                      "is_beneficiary_set": false
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Refund"
        ]
      }
    },
    "/service/application/payment/v1.0/refund/beneficiaries/orders": {
      "post": {
        "summary": "getBenficiaryOrder | Get Payment status and information for a list of order_ids",
        "description": "Use this API to get Payment status and information for a list of order_ids.",
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "description": "Check the example of a request body below or refer `PaymentConfirmationSchema` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefundOrderBen"
              },
              "examples": {
                "payment_option_success": {
                  "value": {
                    "order_ids": [
                      "FY65C2797B2F00FCF07E"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Returns the status of payment. Check the example shown below or refer `RefundOrderBenDetails` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefundOrderBenDetails"
                },
                "examples": {
                  "payment_option_success": {
                    "value": {
                      "success": true
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Beneficiary"
        ]
      }
    },
    "/service/application/payment/v1.0/create-payment-link": {
      "get": {
        "summary": "getPaymentLink | Fetch payment link.",
        "description": "Get a generated payment link.",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "payment_link_id",
            "schema": {
              "type": "string"
            },
            "examples": {
              "payment_option_success": {
                "summary": "Unique payment link id",
                "value": "b594184d9a060657566cef7e1ad61b43"
              },
              "payment_option_fail": {
                "summary": "Unique payment link id",
                "value": "xyzxyz"
              }
            },
            "description": "Unique payment link id."
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Check the example shown below",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPaymentLinkDetails"
                },
                "examples": {
                  "payment_option_success": {
                    "value": {
                      "success": true,
                      "message": "Payment link",
                      "status_code": 200,
                      "payment_link_current_status": "resent",
                      "payment_link_url": "https://api.fyndx0.de/service/application/payment/v1.0/payment/options/link/?id=4adb4451720a82ee69a3c1c4cc9ab442&refresh=false",
                      "external_order_id": "FY62614DF9D5CF31D3D0",
                      "amount": 21900,
                      "merchant_name": "Fynd",
                      "polling_timeout": 1800
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Internal Server Error. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                },
                "examples": {
                  "internal_server_fail": {
                    "value": {
                      "error": {
                        "description": ""
                      },
                      "success": false
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Payment link"
        ]
      },
      "post": {
        "summary": "createPaymentLink | Create payment link.",
        "description": "Create new payment link for transactions.",
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "description": "Pass the external_order_id, amount, mobile number and other details in the request body as shown below.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentLink"
              },
              "examples": {
                "create_payment_link_success": {
                  "value": {
                    "external_order_id": "FY65C2797B2F00FCF07E",
                    "amount": 378500,
                    "meta": {
                      "amount": "378500",
                      "cart_id": "124",
                      "pincode": "400059",
                      "checkout_mode": "self",
                      "assign_card_id": "12345678"
                    },
                    "mobile_number": "9999999999",
                    "country_phone_code": "+91",
                    "email": "abc@example.com",
                    "description": "Payment link for Uniket"
                  }
                },
                "payment_link_error": {
                  "value": {
                    "external_order_id": "xyzxyzxyz",
                    "amount": 378500,
                    "meta": {
                      "amount": "378500",
                      "cart_id": "124",
                      "pincode": "400059",
                      "checkout_mode": "self",
                      "assign_card_id": "12345678"
                    },
                    "mobile_number": "9999999999",
                    "country_phone_code": "+91",
                    "email": "abc@example.com",
                    "description": "Payment link for Uniket"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Check the example shown below",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePaymentLinkDetails"
                },
                "examples": {
                  "create_payment_link_success": {
                    "value": {
                      "success": true,
                      "message": "Payment link created",
                      "status_code": 200,
                      "payment_link_url": "https://api.fyndx0.de/service/application/payment/v1.0/payment/options/link/?id=96b15ea2014a76c8d2774783e239ce26&refresh=false",
                      "payment_link_id": "96b15ea2014a76c8d2774783e239ce26",
                      "polling_timeout": 480
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                },
                "examples": {
                  "payment_link_error": {
                    "value": {
                      "success": false,
                      "message": "Something wrong in payload",
                      "status_code": 400
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Payment link"
        ]
      }
    },
    "/service/application/payment/v1.0/create-payment-link/{id}": {
      "get": {
        "summary": "getPaymentLinkId | Get payment link",
        "description": "get a payment link.",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "examples": {
              "payment_option_success": {
                "summary": "Unique payment link id",
                "value": "b594184d9a060657566cef7e1ad61b43"
              },
              "payment_option_fail": {
                "summary": "Unique payment link id",
                "value": "b594184d9a060657566cef7e1ad61b43"
              }
            },
            "description": "Unique payment link id."
          },
          {
            "in": "query",
            "name": "payment_link_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "payment_option_success": {
                "summary": "Unique payment link id",
                "value": "b594184d9a060657566cef7e1ad61b43"
              },
              "payment_option_fail": {
                "summary": "Unique payment link id",
                "value": "xyzxyz"
              }
            },
            "description": "Unique payment link id."
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Check the example shown below",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPaymentLinkDetails"
                },
                "examples": {
                  "payment_option_success": {
                    "value": {
                      "success": true,
                      "message": "Payment link",
                      "status_code": 200,
                      "payment_link_current_status": "resent",
                      "payment_link_url": "https://api.fyndx0.de/service/application/payment/v1.0/payment/options/link/?id=4adb4451720a82ee69a3c1c4cc9ab442&refresh=false",
                      "external_order_id": "FY62614DF9D5CF31D3D0",
                      "amount": 21900,
                      "merchant_name": "Fynd",
                      "polling_timeout": 1800
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Internal Server Error. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                },
                "examples": {
                  "internal_server_fail": {
                    "value": {
                      "error": {
                        "description": ""
                      },
                      "success": false
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Payment link"
        ]
      }
    },
    "/service/application/payment/v1.0/resend-payment-link": {
      "post": {
        "summary": "resendPaymentLink | Resend payment link",
        "description": "Resend an existing payment link to the user to complete the payment.",
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "description": "Pass payment_link_id",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelOrResendPaymentLink"
              },
              "examples": {
                "resend_payment_link_success": {
                  "value": {
                    "payment_link_id": "b594184d9a060657566cef7e1ad61b43"
                  }
                },
                "payment_option_fail": {
                  "value": {
                    "payment_link_id": "xyzxyz"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Check the example shown below",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResendPaymentLinkDetails"
                },
                "examples": {
                  "resend_payment_link_success": {
                    "value": {
                      "success": true,
                      "message": "Payment link resent",
                      "status_code": 200,
                      "polling_timeout": 480
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Internal Server Error. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                },
                "examples": {
                  "payment_option_fail": {
                    "value": {
                      "error": {
                        "code": "INTERNAL_SERVER_ERROR",
                        "description": ""
                      },
                      "success": false
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Payment link"
        ]
      }
    },
    "/service/application/payment/v1.0/payment/options/link": {
      "get": {
        "summary": "getPaymentModeRoutesPaymentLink | Payment link modes.",
        "description": "List payment modes available for a given payment link.",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "payment_link_id",
            "in": "query",
            "description": "Payment link id.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "payment_option_success": {
                "summary": "Unique payment link id",
                "value": "b594184d9a060657566cef7e1ad61b43"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns all available options for payment. Check the example shown below or refer `PaymentModeRouteDetails` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentModeRouteDetails"
                },
                "examples": {
                  "payment_option_success": {
                    "value": {
                      "success": true,
                      "payment_options": {
                        "payment_option": [
                          {
                            "name": "CARD",
                            "display_priority": 2,
                            "payment_mode_id": 2,
                            "display_name": "Card",
                            "list": [],
                            "anonymous_enable": true,
                            "aggregator_name": "Razorpay",
                            "add_card_enabled": false,
                            "is_pay_by_card_pl": true
                          },
                          {
                            "name": "NB",
                            "display_priority": 3,
                            "payment_mode_id": 3,
                            "display_name": "Net Banking",
                            "list": [
                              {
                                "aggregator_name": "Razorpay",
                                "name": "ICICI Bank",
                                "code": "ICIC",
                                "bank_name": "ICICI Bank",
                                "bank_code": "ICIC",
                                "url": "https://hdn-1.fynd.com/payment/NB_ICICI.png",
                                "logo_url": {
                                  "small": "https://hdn-1.fynd.com/payment/NB_ICICI.png",
                                  "large": "https://hdn-1.fynd.com/payment/NB_ICICI.png"
                                },
                                "merchant_code": "NB_ICICI",
                                "display_priority": 1,
                                "display_name": "ICICI Bank"
                              },
                              {
                                "aggregator_name": "Razorpay",
                                "name": "HDFC Bank",
                                "code": "HDFC",
                                "bank_name": "HDFC Bank",
                                "bank_code": "HDFC",
                                "url": "https://hdn-1.fynd.com/payment/NB_HDFC.png",
                                "logo_url": {
                                  "small": "https://hdn-1.fynd.com/payment/NB_HDFC.png",
                                  "large": "https://hdn-1.fynd.com/payment/NB_HDFC.png"
                                },
                                "merchant_code": "NB_HDFC",
                                "display_priority": 2,
                                "display_name": "HDFC Bank"
                              },
                              {
                                "aggregator_name": "Razorpay",
                                "name": "Axis Bank",
                                "code": "UTIB",
                                "bank_name": "Axis Bank",
                                "bank_code": "UTIB",
                                "url": "https://hdn-1.fynd.com/payment/NB_AXIS.png",
                                "logo_url": {
                                  "small": "https://hdn-1.fynd.com/payment/NB_AXIS.png",
                                  "large": "https://hdn-1.fynd.com/payment/NB_AXIS.png"
                                },
                                "merchant_code": "NB_AXIS",
                                "display_priority": 3,
                                "display_name": "Axis Bank"
                              },
                              {
                                "aggregator_name": "Razorpay",
                                "name": "State Bank of India",
                                "code": "SBIN",
                                "bank_name": "State Bank of India",
                                "bank_code": "SBIN",
                                "url": "https://hdn-1.fynd.com/payment/NB_SBI.png",
                                "logo_url": {
                                  "small": "https://hdn-1.fynd.com/payment/NB_SBI.png",
                                  "large": "https://hdn-1.fynd.com/payment/NB_SBI.png"
                                },
                                "merchant_code": "NB_SBI",
                                "display_priority": 4,
                                "display_name": "State Bank of India"
                              },
                              {
                                "aggregator_name": "Razorpay",
                                "name": "Kotak Mahindra Bank",
                                "code": "KKBK",
                                "bank_name": "Kotak Mahindra Bank",
                                "bank_code": "KKBK",
                                "url": "https://hdn-1.fynd.com/payment/NB_KOTAK.png",
                                "logo_url": {
                                  "small": "https://hdn-1.fynd.com/payment/NB_KOTAK.png",
                                  "large": "https://hdn-1.fynd.com/payment/NB_KOTAK.png"
                                },
                                "merchant_code": "NB_KOTAK",
                                "display_priority": 5,
                                "display_name": "Kotak Mahindra Bank"
                              },
                              {
                                "aggregator_name": "Razorpay",
                                "name": "Indusind Bank",
                                "code": "INDB",
                                "bank_name": "Indusind Bank",
                                "bank_code": "INDB",
                                "url": "https://hdn-1.fynd.com/payment/NB_INDUS.png",
                                "logo_url": {
                                  "small": "https://hdn-1.fynd.com/payment/NB_INDUS.png",
                                  "large": "https://hdn-1.fynd.com/payment/NB_INDUS.png"
                                },
                                "merchant_code": "INDB",
                                "display_priority": 6,
                                "display_name": "Indusind Bank"
                              },
                              {
                                "aggregator_name": "Razorpay",
                                "name": "City Union Bank",
                                "code": "CIUB",
                                "bank_name": "City Union Bank",
                                "bank_code": "CIUB",
                                "url": "https://hdn-1.fynd.com/payment/NB_generic.png",
                                "logo_url": {
                                  "small": "https://hdn-1.fynd.com/payment/NB_generic.png",
                                  "large": "https://hdn-1.fynd.com/payment/NB_generic.png"
                                },
                                "merchant_code": "NB_CUB",
                                "display_priority": 9,
                                "display_name": "City Union Bank"
                              },
                              {
                                "aggregator_name": "Razorpay",
                                "name": "Catholic Syrian Bank",
                                "code": "CSBK",
                                "bank_name": "Catholic Syrian Bank",
                                "bank_code": "CSBK",
                                "url": "https://hdn-1.fynd.com/payment/NB_generic.png",
                                "logo_url": {
                                  "small": "https://hdn-1.fynd.com/payment/NB_generic.png",
                                  "large": "https://hdn-1.fynd.com/payment/NB_generic.png"
                                },
                                "merchant_code": "CSBK",
                                "display_priority": 11,
                                "display_name": "Catholic Syrian Bank"
                              },
                              {
                                "aggregator_name": "Razorpay",
                                "name": "State Bank of Hyderabad",
                                "code": "SBHY",
                                "bank_name": "State Bank of Hyderabad",
                                "bank_code": "SBHY",
                                "url": "https://hdn-1.fynd.com/payment/NB_generic.png",
                                "logo_url": {
                                  "small": "https://hdn-1.fynd.com/payment/NB_generic.png",
                                  "large": "https://hdn-1.fynd.com/payment/NB_generic.png"
                                },
                                "merchant_code": "NB_SBH",
                                "display_priority": 12,
                                "display_name": "State Bank of Hyderabad"
                              },
                              {
                                "aggregator_name": "Razorpay",
                                "name": "Allahabad Bank",
                                "code": "ALLA",
                                "bank_name": "Allahabad Bank",
                                "bank_code": "ALLA",
                                "url": "https://hdn-1.fynd.com/payment/NB_generic.png",
                                "logo_url": {
                                  "small": "https://hdn-1.fynd.com/payment/NB_generic.png",
                                  "large": "https://hdn-1.fynd.com/payment/NB_generic.png"
                                },
                                "merchant_code": "ALLA",
                                "display_priority": 15,
                                "display_name": "Allahabad Bank"
                              },
                              {
                                "aggregator_name": "Razorpay",
                                "name": "Syndicate Bank",
                                "code": "SYNB",
                                "bank_name": "Syndicate Bank",
                                "bank_code": "SYNB",
                                "url": "https://hdn-1.fynd.com/payment/NB_generic.png",
                                "logo_url": {
                                  "small": "https://hdn-1.fynd.com/payment/NB_generic.png",
                                  "large": "https://hdn-1.fynd.com/payment/NB_generic.png"
                                },
                                "merchant_code": "SYNB",
                                "display_priority": 17,
                                "display_name": "Syndicate Bank"
                              }
                            ]
                          },
                          {
                            "name": "WL",
                            "display_priority": 4,
                            "payment_mode_id": 4,
                            "display_name": "Wallet",
                            "list": [
                              {
                                "wallet_name": "Paytm",
                                "wallet_code": "paytm",
                                "name": "Paytm",
                                "display_name": "Paytm",
                                "code": "paytm",
                                "wallet_id": 4,
                                "merchant_code": "PAYTM",
                                "logo_url": {
                                  "small": "https://hdn-1.fynd.com/payment/paytm_logo_small.png",
                                  "large": "https://hdn-1.fynd.com/payment/paytm_logo_large.png"
                                },
                                "aggregator_name": "Juspay",
                                "display_priority": 1
                              },
                              {
                                "wallet_name": "Amazon Pay",
                                "wallet_code": "amazonpay",
                                "name": "Amazon Pay",
                                "display_name": "Amazon Pay",
                                "code": "amazonpay",
                                "wallet_id": 10,
                                "merchant_code": "AMAZONPAY",
                                "logo_url": {
                                  "small": "https://hdn-1.fynd.com/payment/amazon-pay.png",
                                  "large": "https://hdn-1.fynd.com/payment/amazon-pay.png"
                                },
                                "aggregator_name": "Razorpay",
                                "display_priority": 9
                              }
                            ]
                          },
                          {
                            "name": "UPI",
                            "display_priority": 9,
                            "payment_mode_id": 7,
                            "display_name": "UPI",
                            "list": [
                              {
                                "aggregator_name": "Razorpay",
                                "name": "UPI",
                                "display_name": "BHIM UPI",
                                "code": "UPI",
                                "logo_url": {
                                  "small": "https://hdn-1.fynd.com/payment/upi_100x78.png",
                                  "large": "https://hdn-1.fynd.com/payment/upi_150x100.png"
                                },
                                "merchant_code": "UPI",
                                "timeout": 310,
                                "retry_count": 0,
                                "fynd_vpa": "shopsense.rzp@hdfcbank",
                                "intent_flow": true,
                                "intent_app": [
                                  {
                                    "code": "google_pay",
                                    "display_name": "Google Pay",
                                    "logos": {
                                      "small": "https://hdn-1.fynd.com/payment/upi-google-pay.png",
                                      "large": "https://hdn-1.fynd.com/payment/upi-google-pay.png"
                                    }
                                  }
                                ],
                                "intent_app_error_list": [
                                  "com.csam.icici.bank.imobile",
                                  "in.org.npci.upiapp",
                                  "com.whatsapp"
                                ]
                              }
                            ]
                          },
                          {
                            "name": "JUSPAYPG",
                            "display_priority": 18,
                            "payment_mode_id": 24,
                            "display_name": "Pay Using Juspay",
                            "list": []
                          },
                          {
                            "name": "PL",
                            "display_priority": 21,
                            "display_name": "Pay Later",
                            "list": [
                              {
                                "aggregator_name": "Simpl",
                                "name": "Simpl",
                                "display_name": "Simpl",
                                "code": "simpl",
                                "merchant_code": "SIMPL",
                                "logo": "https://hdn-1.fynd.com/payment/simpl_logo.png",
                                "logo_url": {
                                  "small": "https://hdn-1.fynd.com/payment/simpl_logo.png",
                                  "large": "https://hdn-1.fynd.com/payment/simpl_logo.png"
                                }
                              }
                            ]
                          }
                        ],
                        "payment_flows": {
                          "simpl": {
                            "data": {
                              "gateway": {
                                "route": "simpl",
                                "entity": "sdk",
                                "is_customer_validation_required": true,
                                "cust_validation_url": "https://api.fyndx0.de/gringotts/api/v1/validate-customer/?app_id=000000000000000000000001",
                                "sdk": {
                                  "config": {
                                    "redirect": false,
                                    "callback_url": null,
                                    "action_url": "https://api.fyndx0.de/platform/payment/v2/external/payments/confirm/charge/?app_id=000000000000000000000001"
                                  },
                                  "data": {
                                    "user_phone": "9999632145",
                                    "user_email": "app@fynd.com"
                                  }
                                },
                                "return_url": null
                              }
                            },
                            "api_link": "https://api.fyndx0.de/platform/payment/v2/external/payments/request/?app_id=000000000000000000000001",
                            "payment_flow": "sdk",
                            "payment_flow_data": null,
                            "is_customer_validation_required": true,
                            "cust_validation_url": "https://api.fyndx0.de/platform/payment/api/v1/validate-customer/?app_id=000000000000000000000001",
                            "config": {
                              "redirect": false,
                              "final_payment_action_url": "https://api.fyndx0.de/platform/payment/v2/external/payments/confirm/charge/?app_id=000000000000000000000001"
                            }
                          },
                          "mswipe": {
                            "data": {
                              "gateway": {
                                "sdk": {
                                  "config": {
                                    "redirect": false,
                                    "action_url": "url",
                                    "webhook_url": "url",
                                    "timeout": 60
                                  }
                                }
                              }
                            },
                            "api_link": "https://api.fyndx0.de/platform/payment/v2/external/payments/request/?app_id=000000000000000000000001",
                            "payment_flow": "sdk"
                          },
                          "juspay": {
                            "data": {},
                            "api_link": "https://sandbox.juspay.in/txns",
                            "payment_flow": "api"
                          },
                          "razorpay": {
                            "data": {},
                            "api_link": "https://api.fyndx0.de/platform/payment/v2/external/payments/request/?app_id=000000000000000000000001",
                            "payment_flow": "sdk"
                          },
                          "bqr_razorpay": {
                            "data": {},
                            "api_link": "https://api.fyndx0.de/platform/payment/v2/external/payments/request/?app_id=000000000000000000000001",
                            "payment_flow": "api"
                          },
                          "fynd": {
                            "data": {},
                            "api_link": "https://api.fyndx0.de/platform/payment/v2/external/payments/request/?app_id=000000000000000000000001",
                            "payment_flow": "api"
                          },
                          "jio": {
                            "data": {},
                            "api_link": "https://api.fyndx0.de/platform/payment/v2/external/payments/request/?app_id=000000000000000000000001",
                            "payment_flow": "api"
                          },
                          "stripe": {
                            "data": {},
                            "api_link": "https://api.fyndx0.de/platform/payment/v2/external/payments/request/?app_id=000000000000000000000001",
                            "payment_flow": "sdk"
                          },
                          "ccavenue": {
                            "data": {},
                            "api_link": "https://api.fyndx0.de/platform/payment/v2/external/payments/request/?app_id=000000000000000000000001",
                            "payment_flow": "sdk"
                          },
                          "payumoney": {
                            "data": {},
                            "api_link": "https://api.fyndx0.de/platform/payment/v2/external/payments/request/?app_id=000000000000000000000001",
                            "payment_flow": "sdk"
                          },
                          "rupifi": {
                            "data": {},
                            "api_link": "https://api.fyndx0.de/platform/payment/v2/external/payments/request/?app_id=000000000000000000000001",
                            "return_url": "",
                            "payment_flow": "api",
                            "cust_validation_url": "https://api.jiox0.de/gringotts/api/v1/validate-customer/",
                            "payment_flow_data": null,
                            "is_customer_validation_required": true,
                            "config": {
                              "redirect": false,
                              "final_payment_action_url": "https://api.fyndx0.de/platform/payment/v2/external/payments/confirm/charge/?app_id=000000000000000000000001"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                },
                "example": {
                  "success": false,
                  "message": "Something wrong in payload",
                  "status_code": 400
                }
              }
            }
          }
        },
        "x-groups": [
          "Payment link"
        ]
      }
    },
    "/service/application/payment/v1.0/polling-payment-link": {
      "get": {
        "summary": "pollingPaymentLink | Poll payment link.",
        "description": "Get real-time information about the payment link's current status, such as whether it has been processed, cancelled, or expired.",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "payment_link_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "get_polling_success": {
                "summary": "valid payment_link_id",
                "value": "b594184d9a060657566cef7e1ad61b43"
              },
              "payment_link_fail": {
                "summary": "valid payment_link_id",
                "value": "xyzxyz"
              }
            },
            "description": "Unique payment link id."
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Check the example shown below",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PollingPaymentLinkDetails"
                },
                "examples": {
                  "get_polling_success": {
                    "value": {
                      "aggregator_name": "Fynd",
                      "status": "complete",
                      "redirect_url": "https://api.fyndx0.de/service/application/order/v1.0/orders/?success=true&order_id=FY62B3FF87016F24A4E6&aggregator_name=Fynd&cart_id=412&delivery_address_id=136&billing_address_id=136",
                      "payment_link_id": "223d2a8df39a5dcdd8525498bee73199",
                      "amount": 21900,
                      "order_id": "FY62B3FF87016F24A4E6",
                      "status_code": 200
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PollingPaymentLinkError"
                },
                "examples": {
                  "payment_link_fail": {
                    "value": {
                      "success": false,
                      "message": "Something wrong in payload",
                      "status_code": 400,
                      "error": "Invalid payment link id"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Payment link"
        ]
      }
    },
    "/service/application/payment/v1.0/create-order/link": {
      "post": {
        "summary": "createOrderHandlerPaymentLink | Order via link.",
        "description": "Initiate the creation of an order handler for processing payments through a link.",
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "description": "Pass the details in the request body as shown below.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderUser"
              },
              "examples": {
                "paymentlink_order_success": {
                  "value": {
                    "payment_link_id": "b594184d9a060657566cef7e1ad61b43",
                    "meta": null,
                    "currency": "INR",
                    "payment_methods": {
                      "mode": "UPI",
                      "name": "UPI",
                      "meta": {
                        "payment_gateway": "payumoney",
                        "payment_identifier": "UPI",
                        "merchant_code": "UPI"
                      }
                    },
                    "success_callback_url": " https://api.fyndx0.de/service/application/order/v1.0/orders/",
                    "failure_callback_url": "http://localdev.fyndx0.de:8087/payment/link/15eb90d4edb56a11b577b72f267c97c6"
                  }
                },
                "order_fail": {
                  "value": {
                    "payment_link_id": "880456ee40445eab449088dd135ca293",
                    "meta": null,
                    "currency": "INR",
                    "payment_methods": {
                      "mode": "UPI",
                      "name": "UPI",
                      "meta": {
                        "payment_gateway": "Razorpay",
                        "payment_identifier": "UPI",
                        "merchant_code": "UPI"
                      }
                    },
                    "success_callback_url": " https://api.fyndx0.de/service/application/order/v1.0/orders/",
                    "failure_callback_url": "http://localdev.fyndx0.de:8087/payment/link/15eb90d4edb56a11b577b72f267c97c6"
                  }
                },
                "order_internal_server_fail": {
                  "value": {
                    "payment_link_id": "b594184d9a060657566cef7e1ad61b43",
                    "meta": null,
                    "currency": "INR",
                    "payment_methods": {
                      "mode": "UPI",
                      "name": "UPI",
                      "meta": {
                        "payment_gateway": "Razorpay",
                        "payment_identifier": "UPI",
                        "merchant_code": "UPI"
                      }
                    },
                    "success_callback_url": " https://api.fyndx0.de/service/application/order/v1.0/orders/",
                    "failure_callback_url": "http://localdev.fyndx0.de:8087/payment/link/15eb90d4edb56a11b577b72f267c97c6"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Check the example shown below",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOrderUserDetails"
                },
                "examples": {
                  "paymentlink_order_success": {
                    "value": {
                      "message": "",
                      "status_code": 200,
                      "success": true,
                      "data": {
                        "amount": 2190000,
                        "order_id": "order_JeaZ5ryKO01rno",
                        "email": "abc@example.com",
                        "contact": "9999999999",
                        "currency": "INR",
                        "customer_id": "cust_CZgcLVGsGP8BUQ",
                        "callback_url": "https://api.fyndx0.com/service/webhooks/payment/v1.0/callback/link/?razorpay_order_id=order_JeaZ5ryKO01rno",
                        "method": "upi",
                        "aggregator": "Razorpay",
                        "merchant_order_id": "FY629EDC0980B6A8C1EA"
                      },
                      "callback_url": "https://api.fyndx0.com/service/webhooks/payment/v1.0/callback/link/?razorpay_order_id=order_JeaZ5ryKO01rno",
                      "payment_confirm_url": "https://api.fyndx0.com/service/webhooks/payment/v1.0/callback/link/?razorpay_order_id=order_JeaZ5ryKO01rno",
                      "order_id": "FY629EDC0980B6A8C1EA"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                },
                "examples": {
                  "order_fail": {
                    "value": {
                      "success": false,
                      "message": "Something wrong in payload",
                      "status_code": 400
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Payment link"
        ]
      }
    },
    "/service/application/payment/v1.0/payment/request/link": {
      "post": {
        "summary": "initialisePaymentPaymentLink | Initialise link payment.",
        "description": "Begin payment process for an order by initializing it through a payment link.Upon successful initialization, the response includes details about the payment status, aggregator details, order IDs, polling URL for status updates, and other relevant information.",
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInitialization"
              },
              "examples": {
                "payment_link_success": {
                  "value": {
                    "amount": 10000,
                    "order_id": "lorem_GX8W00p2ipsum",
                    "email": "dummy@example.com",
                    "contact": "9876543210",
                    "currency": "INR",
                    "vpa": "success@razopray",
                    "customer_id": "cust_lorem_001",
                    "method": "paymentlink",
                    "aggregator": "fynd",
                    "merchant_order_id": "FY65C47E27CB249F378C",
                    "unique_link_id": "b594184d9a060657566cef7e1ad61b43",
                    "device_id": "1234567890"
                  }
                },
                "payment_link_fail": {
                  "value": {
                    "amount": 10000,
                    "email": "dummy@example.com",
                    "contact": "9876543210",
                    "currency": "INR",
                    "vpa": "success@razopray",
                    "customer_id": "cust_lorem_001",
                    "method": "paymentlink",
                    "aggregator": "fynd",
                    "merchant_order_id": "FY65C47E27CB249F378C",
                    "unique_link_id": "b594184d9a060657566cef7e1ad61b43",
                    "device_id": "1234567890"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInitializationDetails"
                },
                "examples": {
                  "payment_link_success": {
                    "value": {
                      "success": true,
                      "aggregator": "UPI_Razorpay",
                      "method": "upi",
                      "status": "success",
                      "merchant_order_id": "FY000120000101",
                      "aggregator_order_id": "lorem_GX8W00p2ipsum",
                      "polling_url": "https://api.fynd.com/service/application/payment/v0.1/payments/confirm/polling/?app_id=000000000000000000000001",
                      "timeout": 240,
                      "virtual_id": null,
                      "razorpay_payment_id": "pay_dummy_001",
                      "customer_id": "cust_dummy_001"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorCodeAndMessage"
                },
                "examples": {
                  "payment_link_fail": {
                    "value": {
                      "success": false
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Payment link"
        ]
      }
    },
    "/service/application/payment/v1.0/payment/confirm/polling/link": {
      "post": {
        "summary": "checkAndUpdatePaymentStatusPaymentLink | Performs continuous polling to check status of payment on the server",
        "description": "Verify and update status of a payment made through a link.Upon successful verification and update, the response includes details about the aggregator name, payment status, and whether retrying the process is required.",
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentStatusUpdate"
              },
              "examples": {
                "pay_link_success": {
                  "value": {
                    "status": "200",
                    "amount": 10000,
                    "order_id": "FY65C47E27CB249F378C",
                    "aggregator_order_id": "FY65C47E27CB249F378C",
                    "email": "dummy@example.com",
                    "contact": "9876543210",
                    "currency": "INR",
                    "customer_id": "cust_lorem_001",
                    "method": "paymentlink",
                    "aggregator": "razorpay",
                    "merchant_order_id": "FY65C47E27CB249F378C",
                    "merchant_transaction_id": "TR65C47E27CBFD964727",
                    "vpa": "success@razopray",
                    "unique_link_id": "b594184d9a060657566cef7e1ad61b43",
                    "razorpay_payment_id": "b594184d9a060657566cef7e1ad61b43"
                  }
                },
                "pay_link_fail": {
                  "value": {
                    "status": "200",
                    "amount": 10000,
                    "email": "dummy@example.com",
                    "contact": "9876543210",
                    "currency": "INR",
                    "customer_id": "cust_lorem_001",
                    "method": "paymentlink",
                    "aggregator": "razorpay",
                    "merchant_order_id": "FY65C47E27CB249F378C",
                    "merchant_transaction_id": "TR65C47E27CBFD964727",
                    "vpa": "success@razopray",
                    "unique_link_id": "b594184d9a060657566cef7e1ad61b43",
                    "razorpay_payment_id": "b594184d9a060657566cef7e1ad61b43"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Returns the status of payment.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentStatusUpdateDetails"
                },
                "examples": {
                  "pay_link_success": {
                    "value": {
                      "aggregator_name": "UPI_Razorpay",
                      "status": "success",
                      "retry": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorCodeAndMessage"
                },
                "examples": {
                  "pay_link_fail": {
                    "value": {
                      "success": false
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Payment link"
        ]
      }
    },
    "/service/application/payment/v1.0/payment/credit-summary": {
      "get": {
        "summary": "customerCreditSummary | Credit summary.",
        "description": "Get summary of the customer's credit information, including details such as merchant customer reference ID, status, balance, limit, due amount, used amount, due date, days overdue, total due amount, and a repayment URL.",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "aggregator",
            "schema": {
              "type": "string"
            },
            "examples": {
              "get_credit_summary_success": {
                "summary": "valid aggregator",
                "value": "epaylater"
              }
            },
            "description": "Aggregator name."
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns the status of payment. chema` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerCreditSummaryDetails"
                },
                "examples": {
                  "get_credit_summary_success": {
                    "value": {
                      "success": true,
                      "data": {
                        "merchant_customer_ref_id": "ABHI0002",
                        "status": "Bill Due",
                        "status_message": "Pay now to avoid interest charges",
                        "balance": {
                          "value": 87424,
                          "formatted_value": "87,424.00",
                          "currency": "INR"
                        },
                        "limit": {
                          "value": 100000,
                          "formatted_value": "100,000.00",
                          "currency": "INR"
                        },
                        "due_amount": {
                          "value": 12576,
                          "formatted_value": "12,576.00",
                          "currency": "INR"
                        },
                        "used_amount": {
                          "value": 12576,
                          "formatted_value": "12,576.00",
                          "currency": "INR"
                        },
                        "due_date": "Oct 22 2021",
                        "days_overdue": 123,
                        "total_due_amount": {
                          "value": 12576,
                          "formatted_value": "12,576.00",
                          "currency": "INR"
                        },
                        "repayment_url": "https://example_url.com/example/"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorCodeDetails"
                },
                "example": {
                  "success": false,
                  "data": {
                    "status": "failed"
                  },
                  "message": "error message"
                }
              }
            }
          }
        },
        "x-groups": [
          "Payment"
        ]
      }
    },
    "/service/application/payment/v1.0/payment/redirect-to-aggregator": {
      "get": {
        "summary": "redirectToAggregator | Redirects users to the payment aggregator's interface",
        "description": "This endpoint is used to redirect users to the payment aggregator's platform where they can complete the payment process. The request may include necessary details for initiating the payment on the aggregator�s side, and the user is transferred seamlessly to their interface.",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "query",
            "description": "Callback URL to get callback from aggregator.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "redirect_aggregator_success": {
                "summary": "valid callback url",
                "value": "https://api.uat.fyndx1.de/service/webhooks/payment/v1.0/callback/"
              }
            }
          },
          {
            "name": "aggregator",
            "in": "query",
            "description": "Aggregator name.",
            "schema": {
              "type": "string"
            },
            "required": true,
            "examples": {
              "redirect_aggregator_success": {
                "summary": "valid aggregator",
                "value": "epaylater"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns the status of payment. chema` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedirectToAggregatorDetails"
                },
                "examples": {
                  "redirect_aggregator_success": {
                    "value": {
                      "success": true,
                      "data": {
                        "redirect_url": "https://api-blackbox.epaylater.in//marketplace/customer/transactions/v2",
                        "status": true
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorCodeDetails"
                },
                "example": {
                  "success": false,
                  "data": {
                    "status": "failed"
                  },
                  "message": "error message"
                }
              }
            }
          }
        },
        "x-groups": [
          "Payment"
        ]
      }
    },
    "/service/application/payment/v1.0/check-credits": {
      "get": {
        "summary": "checkCredit | Verify credit availability and status",
        "description": "Check the availability and status of customer credit, providing the status of payment along with registration information and signup URL if the customer is not registered.",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "aggregator",
            "schema": {
              "type": "string"
            },
            "examples": {
              "check_credit_success": {
                "summary": "valid aggregator",
                "value": "epaylater"
              }
            },
            "description": "Aggregator name."
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns the status of payment.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckCreditDetails"
                },
                "examples": {
                  "check_credit_success": {
                    "value": {
                      "success": true,
                      "data": {
                        "is_registered": false,
                        "status": true,
                        "signup_url": "https://merchant.epaylater.in"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorCodeDetails"
                },
                "example": {
                  "success": false,
                  "data": {
                    "status": "failed"
                  },
                  "message": "error message"
                }
              }
            }
          }
        },
        "x-groups": [
          "Paylater"
        ]
      }
    },
    "/service/application/payment/v1.0/credit-onboard": {
      "post": {
        "summary": "customerOnboard | Onboard customer for payment",
        "description": "Initiate the onboarding process for payment services, providing personal, business, and device information, along with marketplace details, to enable customer registration and credit availability.",
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerOnboarding"
              },
              "examples": {
                "onboard_success": {
                  "value": {
                    "source": "https://jiomart-partner.jiohostx2.de/",
                    "aggregator": "epaylater",
                    "personal_info": {
                      "first_name": "Ashwani",
                      "middle_name": "",
                      "last_name": "Shakya",
                      "gender": "Male",
                      "dob": "24/08/1992",
                      "email": "example@test.com",
                      "phone": "9876543210",
                      "address_as_per_id": {
                        "pincode": "121001",
                        "addressline1": "Sector-21, nit FBD",
                        "city": "Faridabad",
                        "state": "Haryana",
                        "land_mark": "NTPC Chowl",
                        "ownership_type": "Owned(Self)"
                      },
                      "fathers_name": "",
                      "mothers_name": "",
                      "pan": "",
                      "voter_id": "",
                      "passport": "",
                      "driving_license": "",
                      "mobile_verified": true,
                      "email_verified": true
                    },
                    "business_info": {
                      "name": "",
                      "entity_type": "Proprietorship",
                      "pan": "",
                      "fda": "",
                      "state": "Delhi",
                      "fssai": "",
                      "gstin": "",
                      "shop_and_establishment": {
                        "shop_and_establishment": "",
                        "state": "Delhi",
                        "city": "Others"
                      },
                      "business_ownership_type": "Rented",
                      "vintage": "0",
                      "address": {
                        "pincode": "",
                        "addressline1": "",
                        "city": "",
                        "state": "",
                        "land_mark": "",
                        "ownership_type": "Owned(Self)"
                      },
                      "business_type": "Trader"
                    },
                    "mcc": "2421",
                    "marketplace_info": {
                      "name": "Coffee K",
                      "membership_id": "100002000037453",
                      "date_of_joining": "2022-02-02"
                    },
                    "device": {
                      "device_type": "mobile",
                      "device_make": "Samsung",
                      "device_model": "CPH1901",
                      "os": "android",
                      "os_version": "8.1.0",
                      "identifier_type": "ip",
                      "identification_number": "192.168.0.1"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Returns the status of payment.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerOnboardingDetails"
                },
                "examples": {
                  "onboard_success": {
                    "value": {
                      "success": true,
                      "data": {
                        "session": {
                          "session_id": "109dae9a-9fe0-4277-979c-0bebb0136930"
                        },
                        "redirect_url": "https://retail-dev.epaylater.in?sessionId=109dae9a-9fe0-4277-979c-0bebb0136930",
                        "status": true,
                        "merchant_customer_ref_id": "64217ecb42a43c10c5bde1b4",
                        "status_remark": "Your are one step away to avail credit of Amount(value=10000.0, formattedValue=₹ 10,000.00, currency=INR)",
                        "is_eligible_for_txn": false,
                        "activation_url": "https://urlshortener-sandbox.rupifi.com/BHs8Dsc"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorCodeDetails"
                },
                "example": {
                  "success": false,
                  "data": {
                    "status": "failed"
                  },
                  "message": "error message"
                }
              }
            }
          }
        },
        "x-groups": [
          "Paylater"
        ]
      }
    },
    "/service/application/payment/v1.0/payment/outstanding-orders": {
      "get": {
        "summary": "outstandingOrderDetails | Outstanding orders.",
        "description": "Get details of orders with outstanding payments.",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "aggregator",
            "schema": {
              "type": "string"
            },
            "examples": {
              "payment_option_success": {
                "summary": "valid aggregator",
                "value": "ajiodhan"
              }
            },
            "description": "Merchant user ID as value."
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns the status of API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OutstandingOrderDetails"
                },
                "examples": {
                  "payment_option_success": {
                    "value": {
                      "success": true,
                      "data": [
                        {
                          "shipment_id": "16633226023641097847_1",
                          "order_id": "FY633B1E5C74383C591A",
                          "delivery_date": null,
                          "due_date": "1665685799999",
                          "status": "BillDue",
                          "amount": 2190
                        }
                      ],
                      "status_code": 200,
                      "message": "error message"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Paylater"
        ]
      }
    },
    "/service/application/payment/v1.0/cancel-payment-link": {
      "post": {
        "summary": "cancelPaymentLink | Cancel payment link",
        "description": "Cancel previously generated payment link.",
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "description": "Pass the payment_link_id",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelOrResendPaymentLink"
              },
              "examples": {
                "payment_option_success": {
                  "value": {
                    "payment_link_id": "b594184d9a060657566cef7e1ad61b43"
                  }
                },
                "payment_option_success_fail": {
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Check the example shown below",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelPaymentLinkDetails"
                },
                "examples": {
                  "payment_option_success": {
                    "value": {
                      "success": true,
                      "message": "Payment link cancelled",
                      "status_code": 200
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                },
                "examples": {
                  "payment_option_success_fail": {
                    "value": {
                      "success": false,
                      "message": "Something wrong in payload",
                      "status_code": 400
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Order"
        ]
      }
    },
    "/service/application/payment/v1.0/payment/paid-orders": {
      "get": {
        "summary": "paidOrderDetails | Retrieve details of paid orders",
        "description": "Get details of orders that have been paid for, including shipment ID, order ID, due date, payment date, amount, and transaction ID, based on the aggregator merchant user ID.",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "aggregator",
            "schema": {
              "type": "string"
            },
            "examples": {
              "payment_option_success": {
                "summary": "valid aggregator",
                "value": "ajiodhan"
              }
            },
            "description": "Merchant user ID as value."
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns the status of API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaidOrderDetails"
                },
                "examples": {
                  "payment_option_success": {
                    "value": {
                      "success": true,
                      "data": [
                        {
                          "shipment_id": "SSD-0000492872-22",
                          "order_id": "FY62F279815B79F3A281",
                          "due_date": "",
                          "payment_date": "",
                          "amount": 1116,
                          "transaction_id": ""
                        }
                      ],
                      "status_code": 200,
                      "message": "error message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorCodeDetails"
                },
                "example": {
                  "success": false,
                  "data": {
                    "status": "failed"
                  },
                  "message": "error message"
                }
              }
            }
          }
        },
        "x-groups": [
          "Order"
        ]
      }
    },
    "/service/application/payment/v1.0/payment-orders": {
      "post": {
        "summary": "createPaymentOrder | Create Order",
        "description": "Create an order and payment on the aggregator side.",
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "description": "Pass the details in the request body as shown below.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentOrder"
              },
              "examples": {
                "order_success": {
                  "value": {
                    "order_id": "FY66C47E27CB249F399C",
                    "payment_methods": [
                      {
                        "mode": "NB",
                        "name": "NB",
                        "amount": 0.1,
                        "meta": {
                          "logo_url": {
                            "large": "payments/original/hlQxI5lMq-NB_HDFC.png",
                            "small": "payments/original/hlQxI5lMq-NB_HDFC.png"
                          },
                          "merchant_code": "NB_HDFC",
                          "payment_gateway": "Razorpay",
                          "payment_identifier": "HDFC"
                        }
                      }
                    ]
                  }
                },
                "order_fail": {
                  "value": {
                    "order_id": "FY66C47E27CB249F399C",
                    "payment_methods": [
                      {
                        "mode": "NB",
                        "name": "NB",
                        "amount": 1,
                        "meta": {
                          "logo_url": {
                            "large": "payments/original/hlQxI5lMq-NB_HDFC.png",
                            "small": "payments/original/hlQxI5lMq-NB_HDFC.png"
                          },
                          "merchant_code": "NB_HDFC",
                          "payment_identifier": "HDFC"
                        }
                      }
                    ]
                  }
                },
                "order_internal_server_error": {
                  "value": {
                    "order_id": "FY66C47E27CB249F399C"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Check the example shown below",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentOrderDetails"
                },
                "examples": {
                  "order_success": {
                    "value": {
                      "message": "",
                      "success": true,
                      "status_code": 200,
                      "data": {
                        "amount": 2190000,
                        "order_id": "order_JeaZ5ryKO01rno",
                        "email": "abc@example.com",
                        "contact": "9999999999",
                        "currency": "INR",
                        "customer_id": "cust_CZgcLVGsGP8BUQ",
                        "callback_url": "https://api.fyndx0.com/service/webhooks/payment/v1.0/callback/link/?razorpay_order_id=order_JeaZ5ryKO01rno",
                        "method": "upi",
                        "aggregator": "Razorpay",
                        "merchant_order_id": "FY629EDC0980B6A8C1EA"
                      },
                      "callback_url": "https://api.fyndx0.com/service/webhooks/payment/v1.0/callback/link/?razorpay_order_id=order_JeaZ5ryKO01rno",
                      "payment_confirm_url": "https://api.fyndx0.com/service/webhooks/payment/v1.0/callback/link/?razorpay_order_id=order_JeaZ5ryKO01rno",
                      "order_id": "FY629EDC0980B6A8C1EA"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Order"
        ]
      }
    },
    "/service/application/payment/v1.0/payment/refundoptions": {
      "post": {
        "summary": "setRefundOptionforShipment | Save refund source against shipment and order",
        "description": "Save refund source against shipment and order.",
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "description": "Check the example of a request body below or refer `ShipmentRefund` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShipmentRefund"
              },
              "examples": {
                "merchant_payment_response_success": {
                  "value": {
                    "order_id": "FY65C2797B2F00FCF07E",
                    "beneficiary_id": "yZTxV7t318u/tpgAZxUl4XYPMMChxtzeDuNdVD798ro=",
                    "transfer_mode": "bank",
                    "shipment_ids": []
                  }
                },
                "merchant_payment_response_fail": {
                  "value": {
                    "beneficiary_id": "213123213123",
                    "transfer_mode": "bank"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Returns the status of saved refund source for shipment and order. Check the example shown below or refer `ShipmentRefundDetails` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipmentRefundDetails"
                },
                "examples": {
                  "merchant_payment_response_success": {
                    "value": {
                      "success": true,
                      "data": {
                        "order_id": "FY65C2797B2F00FCF07E",
                        "beneficiary_id": "213123213123",
                        "transfer_mode": "bank",
                        "shipment_ids": []
                      },
                      "message": "Saved transfer mode for shipment"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefundOptionErrorCodeAndMessage"
                },
                "examples": {
                  "merchant_payment_response_fail": {
                    "value": {
                      "message": "",
                      "success": false,
                      "data": {
                        "description": "error message"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Refund"
        ]
      }
    },
    "/service/application/payment/v1.0/payment/selected_refund_options": {
      "get": {
        "summary": "getSelectedRefundOption | get the selected refund options for shipment id",
        "description": "get the selected refund options for shipment id.",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "shipment_id",
            "in": "query",
            "description": "shipment Id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "merchant_payment_response_success": {
                "summary": "valid shipment id",
                "value": "16100144824381402124"
              }
            }
          },
          {
            "name": "order_id",
            "in": "query",
            "description": "Order Id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "merchant_payment_response_success": {
                "summary": "valid order id",
                "value": "FY65C2797B2F00FCF07E"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns the selected refund option for shipment. Check the example shown below or refer `SelectedRefundOptionDetails` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectedRefundOptionDetails"
                },
                "examples": {
                  "merchant_payment_response_success": {
                    "value": {
                      "success": true,
                      "shipment_id": "1754345678232412312",
                      "transfer_mode": {
                        "mode": "bank",
                        "display_name": "Transfer to Bank"
                      },
                      "message": "Refund Source",
                      "beneficiary_details": {
                        "refund_to": "bank",
                        "refund_source": "Bank"
                      },
                      "error": {
                        "description": "error message"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Refund"
        ]
      }
    },
    "/service/application/payment/v2.0/refund/user/beneficiary": {
      "get": {
        "summary": "getUserBeneficiariesDetailV2 | Retrieve beneficiary details",
        "description": "Get beneficiaries associated with the user for processing refunds, based on the provided order ID.",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "in": "query",
            "description": "A unique number used for identifying and tracking your orders.",
            "name": "order_id",
            "required": false,
            "schema": {
              "type": "string"
            },
            "examples": {
              "merchant_payment_response_success": {
                "summary": "valid order_id",
                "value": "FY65C2797B2F00FCF07E"
              },
              "merchant_payment_response_fail": {
                "summary": "invalid order_id",
                "value": "xyzxyzxyz"
              }
            }
          },
          {
            "in": "query",
            "description": "A unique number used for identifying and tracking your orders.",
            "name": "shipment_id",
            "required": false,
            "schema": {
              "type": "string"
            },
            "examples": {
              "merchant_payment_response_fail": {
                "summary": "invalid shipment_id",
                "value": "xyzxyzxyz"
              }
            }
          },
          {
            "in": "query",
            "description": "Mode of payment for which beneficiary data required",
            "name": "mop",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns the details of the beneficiary getting a refund. Check the example shown below or refer `OrderBeneficiaryResponse` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderBeneficiaryDetailsSchemaV2"
                },
                "examples": {
                  "merchant_payment_response_success": {
                    "value": {
                      "data": {
                        "bank": [
                          {
                            "id": 221,
                            "beneficiary_id": "0f7e44a922df352c05c5f73cb40ba115",
                            "bank_name": "Example Bank",
                            "branch_name": "Example Bank",
                            "account_holder": "DUMMY NAME",
                            "account_no": "XXXX-XXXX-9999",
                            "ifsc_code": "EXAM0009999",
                            "mobile": "9999999999",
                            "email": "dummy@example.com",
                            "address": "204A",
                            "comment": "",
                            "is_active": null,
                            "created_on": "2020-06-29 12:38:39",
                            "modified_on": "2020-06-29 12:38:39",
                            "display_name": "BANK",
                            "transfer_mode": "bank",
                            "title": "Bank Account",
                            "subtitle": "1234567891",
                            "delights_user_name": null,
                            "default_beneficiary": "true,",
                            "logo": "https://hdn-1.fynd.com/payment/paybycard.png"
                          }
                        ],
                        "upi": [
                          {
                            "id": 222,
                            "beneficiary_id": "0f7e44a922df352c05c5f73cb40ba115",
                            "vpa_address": "success@upi",
                            "vpa": "success@upi",
                            "mobile": "9999999999",
                            "email": "dummy@example.com",
                            "address": "204A",
                            "comment": "",
                            "display_name": "UPI",
                            "transfer_mode": "vpa",
                            "title": "UPI Payment",
                            "subtitle": "success@upi",
                            "delights_user_name": null,
                            "default_beneficiary": "true,",
                            "logo": "https://hdn-1.fynd.com/payment/paybycard.png"
                          }
                        ],
                        "wallet": [
                          {
                            "id": 223,
                            "beneficiary_id": "234567823213123",
                            "wallet_address": "1234567891",
                            "wallet": "1234567891",
                            "mobile": "9999999999",
                            "email": "dummy@example.com",
                            "address": "204A",
                            "comment": "",
                            "display_name": "Wallet",
                            "transfer_mode": "wallet",
                            "title": "DummyWallet",
                            "subtitle": "1234567891",
                            "delights_user_name": null,
                            "default_beneficiary": true,
                            "logo": "https://hdn-1.fynd.com/payment/paybycard.png"
                          }
                        ]
                      },
                      "show_beneficiary_details": true
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Beneficiary"
        ]
      }
    },
    "/service/application/payment/v1.0/validate/beneficiary-address": {
      "post": {
        "summary": "validateBeneficiaryAddress | Validate UPI ID and IFSC code",
        "description": "Validate UPI ID and IFSC code.",
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "description": "Check the example of a request body below or refer `ValidateVPARequestSchema` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateValidateAddress"
              },
              "examples": {
                "merchant_payment_response_success": {
                  "value": {
                    "upi_vpa": "succes@okhdfcbank",
                    "aggregator": "juspay"
                  }
                },
                "merchant_payment_response_fail": {
                  "value": {
                    "xyz": "succes@razorpay"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Returns the IFSC/VPA validation. Check the example shown below or refer `ValidateValidateAddressResponse` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateValidateAddressDetails"
                },
                "examples": {
                  "merchant_payment_response_success": {
                    "value": {
                      "success": true,
                      "ifsc": {
                        "branch_name": "MANPUR",
                        "bank_name": "GAYA",
                        "BRANCH": "MANPUR",
                        "CENTRE": "GAYA",
                        "DISTRICT": "GAYA",
                        "STATE": "BIHAR",
                        "ADDRESS": "POBUNIYADGANJBIHAR",
                        "CONTACT": "00",
                        "MICR": "816002103",
                        "UPI": true,
                        "RTGS": true,
                        "CITY": "GAYA",
                        "NEFT": true,
                        "IMPS": true,
                        "SWIFT": "",
                        "BANK": "State Bank of India",
                        "BANKCODE": "SBIN",
                        "IFSC": "SBIN0005611",
                        "success": true
                      },
                      "vpa": {
                        "upi_vpa": "success@razorpay",
                        "status": "VALID",
                        "is_valid": true,
                        "customer_name": "Verified"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See the error object in the response body to know the exact reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefundErrorCodeAndMessage"
                },
                "examples": {
                  "merchant_payment_response_fail": {
                    "value": {
                      "success": false,
                      "data": {
                        "status": "failed"
                      },
                      "message": "error message"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Beneficiary"
        ]
      }
    },
    "/service/application/payment/v1.0/payment/confirm": {
      "post": {
        "summary": "confirmPayment | Confirm payment after successful payment from payment gateway",
        "description": "confirm payment after payment gateway accepted payment.",
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "description": "Check the example of a request body below or refer `PaymentConfirmationSchema` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentConfirmation"
              },
              "examples": {
                "payment_confirm_success": {
                  "value": {
                    "order_id": "FY65C47E27CB249F378C",
                    "payment_methods": [
                      {
                        "mode": "PP",
                        "amount": 123,
                        "name": "prepaid",
                        "meta": {
                          "order_id": "order_Hbs6ehtThDyJBf",
                          "payment_id": "pay_Hbs7Bm0cg07I2W",
                          "current_status": "captured",
                          "payment_gateway": "fynd"
                        }
                      },
                      {
                        "mode": "COD",
                        "name": "cod",
                        "amount": 123,
                        "meta": {}
                      },
                      {
                        "name": "gift_card",
                        "mode": "GFTCRD",
                        "amount": 123,
                        "meta": {
                          "key": "value"
                        }
                      }
                    ]
                  }
                },
                "payment_confirm_fail": {
                  "value": {
                    "payment_methods": [
                      {
                        "mode": "PP",
                        "amount": 123,
                        "name": "prepaid",
                        "meta": {
                          "order_id": "order_Hbs6ehtThDyJBf",
                          "payment_id": "pay_Hbs7Bm0cg07I2W",
                          "current_status": "captured",
                          "payment_gateway": "Razorpay"
                        }
                      },
                      {
                        "mode": "COD",
                        "name": "cod",
                        "amount": 123,
                        "meta": {}
                      },
                      {
                        "name": "gift_card",
                        "mode": "GFTCRD",
                        "amount": 123,
                        "meta": {
                          "key": "value"
                        }
                      }
                    ]
                  }
                },
                "payment_confirm_internal_error": {
                  "value": {
                    "order_id": "xyzxyzxyz",
                    "payment_methods": [
                      {
                        "mode": "PP",
                        "amount": 123,
                        "name": "prepaid",
                        "meta": {
                          "order_id": "order_Hbs6ehtThDyJBf",
                          "payment_id": "pay_Hbs7Bm0cg07I2W",
                          "current_status": "captured",
                          "payment_gateway": "Razorpay"
                        }
                      },
                      {
                        "mode": "COD",
                        "name": "cod",
                        "amount": 123,
                        "meta": {}
                      },
                      {
                        "name": "gift_card",
                        "mode": "GFTCRD",
                        "amount": 123,
                        "meta": {
                          "key": "value"
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Returns the status of payment. Check the example shown below or refer `PaymentConfirmationDetailsSchema` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentConfirmationDetails"
                },
                "examples": {
                  "payment_confirm_success": {
                    "value": {
                      "success": true,
                      "message": "Payment Successful",
                      "order_id": "FY60F90AEF01FF43E878"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Beneficiary"
        ]
      }
    },
    "/service/application/rewards/v1.0/offers/{name}/": {
      "get": {
        "description": "Retrieves detailed information about an offer by its name.",
        "summary": "getOfferByName | Get specific offer",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "The name given to the offer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Check example below or refer `Offer` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Offer"
                },
                "examples": {
                  "Success": {
                    "$ref": "#/components/examples/Offer"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Offer and Discount"
        ],
        "tags": [
          "Rewards"
        ]
      }
    },
    "/service/application/rewards/v1.0/catalogue/offer/order/": {
      "post": {
        "description": "Place a reward on order items available in the catalogue.",
        "summary": "catalogueOrder | Order from catalogue",
        "requestBody": {
          "description": "Enter article ID",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogueOrderCreation"
              },
              "examples": {
                "CatalogueOrderRequest": {
                  "$ref": "#/components/examples/CatalogueOrderCreation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Check example below or refer `CatalogueOrderDetails` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogueOrderDetails"
                },
                "examples": {
                  "Success": {
                    "$ref": "#/components/examples/CatalogueOrderDetails"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Offer and Discount"
        ],
        "tags": [
          "Rewards"
        ]
      }
    },
    "/service/application/rewards/v1.0/user/points/history/": {
      "get": {
        "description": "Gets the historical data of points earned or spent by the user.",
        "summary": "getUserPointsHistory | Points history",
        "parameters": [
          {
            "name": "page_id",
            "in": "query",
            "description": "PageID is the ID of the requested page. For first request it should be kept empty.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items to retrieve in each page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Check example below or refer `PointsHistoryDetails` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PointsHistoryDetails"
                },
                "examples": {
                  "Success": {
                    "$ref": "#/components/examples/PointsHistoryDetails"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Points"
        ],
        "tags": [
          "Rewards"
        ]
      }
    },
    "/service/application/rewards/v1.0/user/points/": {
      "get": {
        "description": "Retrieves the current reward points balance for the user.",
        "summary": "getUserPoints | Current points",
        "responses": {
          "200": {
            "description": "Success. Check example below or refer `PointsDetails` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PointsDetails"
                },
                "examples": {
                  "Success": {
                    "$ref": "#/components/examples/PointsDetails"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Points"
        ],
        "tags": [
          "Rewards"
        ]
      }
    },
    "/service/application/rewards/v1.0/user/referral/": {
      "get": {
        "description": "Gets the details of the user’s referral status and codes.",
        "summary": "getUserReferralDetails | Referral details",
        "responses": {
          "200": {
            "description": "Success. Check example below or refer `ReferralDetails` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferralDetails"
                },
                "examples": {
                  "Success": {
                    "$ref": "#/components/examples/ReferralDetails"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Points"
        ],
        "tags": [
          "Rewards"
        ]
      }
    },
    "/service/application/rewards/v1.0/user/offer/order-discount/": {
      "post": {
        "description": "Retrieve the discount applied to a specific order.",
        "summary": "getOrderDiscount | Order discount",
        "requestBody": {
          "description": "Enter currency and order amount",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RetrieveOrderDiscount"
              },
              "examples": {
                "RetrieveOrderDiscount": {
                  "$ref": "#/components/examples/RetrieveOrderDiscount"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Check example below or refer `OrderDiscountDetails` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDiscountDetails"
                },
                "examples": {
                  "Success": {
                    "$ref": "#/components/examples/OrderDiscountDetails"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Offer and Discount"
        ],
        "tags": [
          "Rewards"
        ]
      }
    },
    "/service/application/rewards/v1.0/user/referral/redeem/": {
      "post": {
        "description": "Applies a referral code to earn or redeem rewards.",
        "summary": "redeemReferralCode | Redeem code",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RedeemReferralCode"
              },
              "examples": {
                "RedeemReferralCode": {
                  "$ref": "#/components/examples/RedeemReferralCode"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Check example below or refer `RedeemReferralCodeDetails` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedeemReferralCodeDetails"
                },
                "examples": {
                  "Success": {
                    "$ref": "#/components/examples/RedeemReferralCodeDetails"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Points"
        ],
        "tags": [
          "Rewards"
        ]
      }
    },
    "/service/application/share/v1.0/qr": {
      "post": {
        "description": "Generates a QR code for the application for easy sharing.",
        "summary": "getApplicationQRCode | App QR code.",
        "tags": [
          "Share"
        ],
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `QRCodeResp` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QRCodeResp"
                },
                "examples": {
                  "success": {
                    "value": {
                      "link": "https://fynd.com",
                      "svg": "<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 29 29\\\" shape-rendering=\\\"crispEdges\\\"></svg>"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "QR Code & Short Link management"
        ]
      }
    },
    "/service/application/share/v1.0/qr/products/{slug}": {
      "post": {
        "description": "Creates a QR code for a specific product identified by its slug.",
        "summary": "getProductQRCodeBySlug | Product QR code.",
        "tags": [
          "Share"
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "A short, human-readable, URL-friendly identifier of a product. You can get slug value from the endpoint.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "1SDQa"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `QRCodeResp` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QRCodeResp"
                },
                "examples": {
                  "success": {
                    "value": {
                      "link": "https://fynd.com/products/shirt-small-blue",
                      "svg": "<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 29 29\\\" shape-rendering=\\\"crispEdges\\\"></svg>"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "QR Code & Short Link management"
        ]
      }
    },
    "/service/application/share/v1.0/qr/collection/{slug}": {
      "post": {
        "description": "Generates a QR code for a specific product collection using its slug.",
        "summary": "getCollectionQRCodeBySlug | Collection QR code.",
        "tags": [
          "Share"
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "A short, human-readable, URL-friendly identifier of a collection. You can get slug value from the endpoint.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "1SDQa"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `QRCodeResp` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QRCodeResp"
                },
                "examples": {
                  "success": {
                    "value": {
                      "link": "https://fynd.com/collection/flat-50-off",
                      "svg": "<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 29 29\\\" shape-rendering=\\\"crispEdges\\\"></svg>"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "QR Code & Short Link management"
        ]
      }
    },
    "/service/application/share/v1.0/qr/url": {
      "post": {
        "description": "Converts a given URL into a scannable QR code.",
        "summary": "getUrlQRCode | URL to QR code.",
        "tags": [
          "Share"
        ],
        "parameters": [
          {
            "name": "url",
            "in": "query",
            "description": "A link or a web address of a given URL transformed into a scannable QR code.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "https://fynd.com"
              },
              "failure": {
                "value": ""
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `QRCodeResp` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QRCodeResp"
                },
                "examples": {
                  "success": {
                    "value": {
                      "link": "https://fynd.com",
                      "svg": "<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 29 29\\\" shape-rendering=\\\"crispEdges\\\"></svg>"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorRes"
                },
                "examples": {
                  "failure": {
                    "value": {
                      "message": "Something went wrong"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "QR Code & Short Link management"
        ]
      }
    },
    "/service/application/share/v1.0/links/short-link": {
      "post": {
        "description": "Creates a shortened version of a given URL for easier sharing.",
        "summary": "createShortLink | Shorten URL.",
        "tags": [
          "Share"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShortLinkReq"
              },
              "examples": {
                "success": {
                  "value": {
                    "title": "brand",
                    "url": "https://0icof6vvsf.hostx0.de/products/?brand=ruosh"
                  }
                },
                "failure": {
                  "value": null
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `ShortLinkRes` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShortLinkRes"
                },
                "examples": {
                  "success": {
                    "value": {
                      "url": {
                        "original": "https://0icof6vvsf.hostx0.de/products/?brand=ruosh",
                        "short_url": "https://0icof6vvsf.hostx0.de/l/3qKlnsq-x",
                        "hash": "3qKlnsq-x"
                      },
                      "redirects": {
                        "expiry": "",
                        "url": "",
                        "ios": {
                          "type": "web",
                          "link": "https://0icof6vvsf.hostx0.de/products/?brand=ruosh"
                        },
                        "android": {
                          "type": "web",
                          "link": "https://0icof6vvsf.hostx0.de/products/?brand=ruosh"
                        },
                        "web": {
                          "type": "web",
                          "link": "https://0icof6vvsf.hostx0.de/products/?brand=ruosh"
                        },
                        "force_web": false
                      },
                      "created_by": "team",
                      "personalized": false,
                      "app_redirect": false,
                      "fallback": "web",
                      "enable_tracking": false,
                      "active": true,
                      "count": 0,
                      "_id": "601a54054c0349592e76c8f3",
                      "title": "new ",
                      "meta": {
                        "type": "brand"
                      },
                      "expire_at": "",
                      "application": "5eda528b97457fe43a733ace",
                      "user_id": "5e4d01e2c39837ab66144f6d",
                      "created_at": "2021-02-03T07:43:01.342Z",
                      "updated_at": "2021-02-03T07:43:01.342Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorRes"
                },
                "examples": {
                  "failure": {
                    "value": {
                      "message": "Something went wrong"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "QR Code & Short Link management"
        ]
      }
    },
    "/service/application/share/v1.0/links/short-link/{hash}": {
      "get": {
        "description": "Retrieves a previously created short link using its hash identifier.",
        "summary": "getShortLinkByHash | Fetch short link.",
        "tags": [
          "Share"
        ],
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "description": "A string value used for converting long URL to short URL and vice-versa.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "1SDQa"
              },
              "failure": {
                "value": ""
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `ShortLinkRes` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShortLinkRes"
                },
                "examples": {
                  "success": {
                    "value": {
                      "url": {
                        "original": "https://0icof6vvsf.hostx0.de/products/?brand=ruosh",
                        "short": "https://0icof6vvsf.hostx0.de/l/3qKlnsq-x",
                        "hash": "3qKlnsq-x"
                      },
                      "redirects": {
                        "expiry": "null",
                        "url": "null",
                        "ios": {
                          "type": "web",
                          "link": "https://0icof6vvsf.hostx0.de/products/?brand=ruosh"
                        },
                        "android": {
                          "type": "web",
                          "link": "https://0icof6vvsf.hostx0.de/products/?brand=ruosh"
                        },
                        "web": {
                          "type": "web",
                          "link": "https://0icof6vvsf.hostx0.de/products/?brand=ruosh"
                        },
                        "force_web": false
                      },
                      "created_by": "team",
                      "personalized": false,
                      "app_redirect": false,
                      "fallback": "web",
                      "enable_tracking": false,
                      "active": true,
                      "count": 0,
                      "_id": "601a54054c0349592e76c8f3",
                      "title": "new ",
                      "meta": {
                        "type": "brand"
                      },
                      "expire_at": "null",
                      "application": "5eda528b97457fe43a733ace",
                      "user_id": "5e4d01e2c39837ab66144f6d",
                      "created_at": "2021-02-03T07:43:01.342Z",
                      "updated_at": "2021-02-03T07:43:01.342Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorRes"
                },
                "examples": {
                  "failure": {
                    "value": {
                      "message": "Something went wrong"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "QR Code & Short Link management"
        ]
      }
    },
    "/service/application/share/v1.0/links/short-link/{hash}/original": {
      "get": {
        "description": "Retrieve the original link from a short-link by using a hash value.",
        "summary": "getOriginalShortLinkByHash | Original URL.",
        "tags": [
          "Share"
        ],
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "description": "A string value used for converting long URL to short URL and vice-versa.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "1SDQa"
              },
              "failure": {
                "value": ""
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `ShortLinkRes` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShortLinkRes"
                },
                "examples": {
                  "success": {
                    "value": {
                      "url": {
                        "original": "https://0icof6vvsf.hostx0.de/products/?brand=ruosh",
                        "short": "https://0icof6vvsf.hostx0.de/l/3qKlnsq-x",
                        "hash": "3qKlnsq-x"
                      },
                      "redirects": {
                        "expiry": "",
                        "url": "",
                        "ios": {
                          "type": "web",
                          "link": "https://0icof6vvsf.hostx0.de/products/?brand=ruosh"
                        },
                        "android": {
                          "type": "web",
                          "link": "https://0icof6vvsf.hostx0.de/products/?brand=ruosh"
                        },
                        "web": {
                          "type": "web",
                          "link": "https://0icof6vvsf.hostx0.de/products/?brand=ruosh"
                        },
                        "force_web": false
                      },
                      "created_by": "team",
                      "personalized": false,
                      "app_redirect": false,
                      "fallback": "web",
                      "enable_tracking": false,
                      "active": true,
                      "count": 0,
                      "_id": "601a54054c0349592e76c8f3",
                      "title": "new ",
                      "meta": {
                        "type": "brand"
                      },
                      "expire_at": "null",
                      "application": "5eda528b97457fe43a733ace",
                      "user_id": "5e4d01e2c39837ab66144f6d",
                      "created_at": "2021-02-03T07:43:01.342Z",
                      "updated_at": "2021-02-03T07:43:01.342Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorRes"
                },
                "examples": {
                  "failure": {
                    "value": {
                      "message": "Something went wrong"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "QR Code & Short Link management"
        ]
      }
    },
    "/service/application/theme/v1.0/{theme_id}/page": {
      "get": {
        "summary": "getAllPages | Fetch all pages.",
        "description": "Get all page level configs, sections and seo data of a theme.",
        "tags": [
          "Theme"
        ],
        "parameters": [
          {
            "name": "theme_id",
            "in": "path",
            "description": "Id of the theme to be retrieved.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "all_pages": {
                "value": "000000000000000000000001"
              },
              "invalid_id": {
                "value": "test"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns an array all the pages of the theme. Refer `AllAvailablePageSchema` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllAvailablePageSchema"
                },
                "examples": {
                  "all_pages": {
                    "$ref": "#/components/examples/AllAvailablePageExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BlitzkriegApiError"
          }
        },
        "x-groups": [
          "Theme Page"
        ]
      }
    },
    "/service/application/theme/v1.0/{theme_id}/{page_value}": {
      "get": {
        "summary": "getPage | Get theme page",
        "description": "Get page level configurations, applied sections and seo data of a page by `page_value` received from list pages api.",
        "tags": [
          "Theme"
        ],
        "parameters": [
          {
            "name": "theme_id",
            "in": "path",
            "description": "Id of the theme to be retrieved.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "homepage": {
                "value": "000000000000000000000001"
              },
              "invalid_id": {
                "value": "test"
              }
            }
          },
          {
            "name": "page_value",
            "in": "path",
            "description": "Value of the page to be retrieved.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "homepage": {
                "value": "home"
              },
              "invalid_id": {
                "value": "test"
              }
            }
          },
          {
            "name": "filters",
            "in": "query",
            "description": "Filters on sections to be applied or not.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "section_preview_hash",
            "in": "query",
            "description": "Unique hash id on sections preview.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "examples": {
              "homepage": {
                "value": ""
              },
              "invalid_id": {
                "value": "test"
              }
            }
          },
          {
            "name": "company",
            "in": "query",
            "description": "Company id of the application.",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "examples": {
              "homepage": {
                "value": 884
              },
              "invalid_id": {
                "value": 1234
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns an object of the pages.  Refer `AvailablePageSchema` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailablePageSchema"
                },
                "examples": {
                  "homepage": {
                    "$ref": "#/components/examples/AvailablePageHomepageExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BlitzkriegApiError"
          }
        },
        "x-groups": [
          "Theme Page"
        ]
      }
    },
    "/service/application/theme/v2.0/applied-theme": {
      "get": {
        "summary": "getAppliedTheme | Get applied theme ",
        "description": "Gets the theme configuration and template details of a theme applied to the application.",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "Filters on sections to be applied or not.",
            "required": false,
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a JSON object of the theme. Check the example shown below or    refer `ThemesSchema` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThemesSchema"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/ThemeExample"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Sales Channel Theme"
        ],
        "tags": [
          "Theme"
        ]
      }
    },
    "/service/application/theme/v2.0/{theme_id}/preview": {
      "get": {
        "summary": "getThemeForPreview | Get theme for preview ",
        "description": "Gets the theme configuration and template details of a theme by theme id.",
        "tags": [
          "Theme"
        ],
        "parameters": [
          {
            "name": "theme_id",
            "in": "path",
            "description": "Id of the theme to be retrieved.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "000000000000000000000001"
              },
              "invalid_id": {
                "value": "test"
              }
            }
          },
          {
            "name": "filters",
            "in": "query",
            "description": "Filters on sections to be applied or not.",
            "required": false,
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a JSON object of the theme. Check the example shown below or refer `ThemesSchema` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThemesSchema"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/ThemeExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BlitzkriegApiError"
          }
        },
        "x-groups": [
          "Sales Channel Theme"
        ]
      }
    },
    "/service/application/theme/v1.0/applied-theme": {
      "get": {
        "summary": "getAppliedThemeV1 | Current theme.",
        "description": "Gets the theme currently applied to the application.",
        "tags": [
          "Theme"
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a JSON object of the theme. Check the example shown below or    refer `ThemesSchema` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThemesSchema"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/ThemeExample"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Sales Channel Theme"
        ]
      }
    },
    "/service/application/theme/v1.0/{theme_id}/preview": {
      "get": {
        "summary": "getThemeForPreviewV1 | Preview theme.",
        "description": "Retrieves a theme for previewing before applying it to the application.",
        "tags": [
          "Theme"
        ],
        "parameters": [
          {
            "name": "theme_id",
            "in": "path",
            "description": "ID of the theme to be retrieved",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "success": {
                "value": "000000000000000000000001"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a JSON object of the theme. Check the example shown below or refer `ThemesSchema` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThemesSchema"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/ThemeExample"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Sales Channel Theme"
        ]
      }
    },
    "/service/application/user/profile/v1.0/user-attributes": {
      "get": {
        "summary": "getUserAttributes | Get user attributes",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "description": "Get the list of user attributes.",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "description": "Filter by attribute slug.",
            "examples": {
              "success": {
                "value": "attribute-1"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of users attributes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAttributes"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/UserAttributesExample"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Customer Attributes"
        ]
      },
      "patch": {
        "summary": "updateUserAttributes | Update user attributes",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "description": "Update user attributes.",
        "tags": [
          "User"
        ],
        "requestBody": {
          "description": "list of user attributes to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAttributesRequestPayload"
              },
              "examples": {
                "success": {
                  "value": {
                    "attributes": {
                      "attribute-11": "stringT"
                    }
                  }
                },
                "failure": {
                  "value": {
                    "attributes": {}
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a list of users attributes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAttributes"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/UserAttributesExample"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body for specific reason",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                },
                "examples": {
                  "failure": {
                    "value": {
                      "message": "Invalid request. Atleast one attribute must be present."
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Customer Attributes"
        ]
      }
    },
    "/service/application/user/authentication/v1.0/login/facebook-token": {
      "post": {
        "summary": "loginWithFacebook | Login with Facebook",
        "description": "Enable users to log in to the system using their facebook accounts.",
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "description": "ID of the application.",
            "schema": {
              "type": "string",
              "default": "Fynd"
            },
            "examples": {
              "facebook token login success": {
                "value": "5eda528b97457fe43a733ace"
              },
              "facebook token login failure": {
                "value": ""
              }
            }
          }
        ],
        "requestBody": {
          "description": "Check the example of an OAuth request body shown below or refer `OAuthRequestSchema` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OAuthRequestSchema"
              },
              "examples": {
                "facebook token login success": {
                  "value": {
                    "is_signed_in": true,
                    "oauth2": {
                      "access_token": "EAAG8RM6L4x0BAD1TACSknDZBNklZCZAUKPZApOoCwZBo6mpWmdzS7ZBZCK2twJWh2YePo3W7ca2PPtz03TgUpa0Jd28DR3XZBFsZB0svzGz2jZBa9ZCrQZASl4Y6R4ZCyS1UoTpEzZCqk3K1rIbFwsxf5IIMRXAgzrSiOAXdZCWxLZCZB8hnMVZC632wZBotKJkX0d7ZBri0gUx9SI6ZCAOrr5IFRJJ6RJLVH",
                      "expiry": 2147483647,
                      "refresh_token": "token"
                    },
                    "profile": {
                      "id": "108467594681211040588",
                      "email": "www.akash24@gmail.com",
                      "full_name": "Akash Mane",
                      "first_name": "Akash",
                      "last_name": "Mane",
                      "image": "https://lh3.googleusercontent.com/test12=s96-c"
                    }
                  }
                },
                "facebook token login failure": {
                  "value": {
                    "is_signed_in": true,
                    "oauth2": {
                      "access_token": "",
                      "expiry": 2147483647,
                      "refresh_token": "token"
                    },
                    "profile": {
                      "id": "108467594681211040588",
                      "email": "",
                      "full_name": "Akash Mane",
                      "first_name": "Akash",
                      "last_name": "Mane",
                      "image": "https://lh3.googleusercontent.com/test12=s96-c"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Returns a JSON object with the user details. Check the example shown below or refer `AuthSuccess` for more details.",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "f.session=abcde12345; Path=/;"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthSuccess"
                },
                "examples": {
                  "facebook token login success": {
                    "$ref": "#/components/examples/AuthSuccess"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Bad request. See the error object in the response body for specific reason",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                },
                "examples": {
                  "facebook token login failure": {
                    "value": {
                      "message": "Something went wrong."
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Social Login"
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/service/application/user/authentication/v1.0/login/google-token": {
      "post": {
        "summary": "loginWithGoogle | Login with Google",
        "description": "Enable website users to log in to the system using their google accounts.",
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "description": "ID of the application.",
            "schema": {
              "type": "string",
              "default": "Fynd"
            },
            "examples": {
              "google token login success": {
                "value": "5eda528b97457fe43a733ace"
              }
            }
          }
        ],
        "requestBody": {
          "description": "Check the example of an OAuth request body shown below or refer `OAuthRequestSchema` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OAuthRequestSchema"
              },
              "examples": {
                "google token login success": {
                  "value": {
                    "is_signed_in": true,
                    "oauth2": {
                      "access_token": "token",
                      "expiry": 2147483647,
                      "refresh_token": "token"
                    },
                    "profile": {
                      "id": "108467594681211040588",
                      "email": "www.akash24@gmail.com",
                      "full_name": "Akash Mane",
                      "first_name": "Akash",
                      "last_name": "Mane",
                      "image": "https://lh3.googleusercontent.com/test12=s96-c"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Returns a JSON object with the user details. Check the example shown below or refer `AuthSuccess` for more details.",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "f.session=abcde12345; Path=/;"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthSuccess"
                },
                "examples": {
                  "google token login success": {
                    "$ref": "#/components/examples/AuthSuccess"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Social Login"
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/service/application/user/authentication/v1.0/login/google-android": {
      "post": {
        "summary": "loginWithGoogleAndroid | Android Login with Google",
        "description": "Enable android users to log in to the system using their facebook accounts.",
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "description": "ID of the application.",
            "schema": {
              "type": "string",
              "default": "Fynd"
            },
            "examples": {
              "google android token login success": {
                "value": "5eda528b97457fe43a733ace"
              }
            }
          }
        ],
        "requestBody": {
          "description": "Check the example of an OAuth request body shown below or refer `OAuthRequestSchema` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OAuthRequestSchema"
              },
              "examples": {
                "google android token login success": {
                  "value": {
                    "is_signed_in": true,
                    "oauth2": {
                      "access_token": "token",
                      "expiry": 2147483647,
                      "refresh_token": "token"
                    },
                    "profile": {
                      "id": "108467594681211040588",
                      "email": "www.akash24@gmail.com",
                      "full_name": "Akash Mane",
                      "first_name": "Akash",
                      "last_name": "Mane",
                      "image": "https://lh3.googleusercontent.com/test12=s96-c"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Returns a JSON object with the user details. Check the example shown below or refer `AuthSuccess` for more details.",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "f.session=abcde12345; Path=/;"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthSuccess"
                },
                "examples": {
                  "google android token login success": {
                    "$ref": "#/components/examples/AuthSuccess"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Social Login"
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/service/application/user/authentication/v1.0/login/google-ios": {
      "post": {
        "summary": "loginWithGoogleIOS | iOS Login with Google",
        "description": "Enable ios users to log in to the system using their facebook accounts.",
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "description": "ID of the application.",
            "schema": {
              "type": "string",
              "default": "Fynd"
            },
            "examples": {
              "google android token login success": {
                "value": "5eda528b97457fe43a733ace"
              }
            }
          }
        ],
        "requestBody": {
          "description": "Check the example of an OAuth request body shown below or refer `OAuthRequestSchema` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OAuthRequestSchema"
              },
              "examples": {
                "google android token login success": {
                  "value": {
                    "is_signed_in": true,
                    "oauth2": {
                      "access_token": "token",
                      "expiry": 2147483647,
                      "refresh_token": "token"
                    },
                    "profile": {
                      "id": "108467594681211040588",
                      "email": "www.akash24@gmail.com",
                      "full_name": "Akash Mane",
                      "first_name": "Akash",
                      "last_name": "Mane",
                      "image": "https://lh3.googleusercontent.com/test12=s96-c"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Returns a JSON object with the user details. Check the example shown below or refer `AuthSuccess` for more details.",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "f.session=abcde12345; Path=/;"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthSuccess"
                },
                "examples": {
                  "google android token login success": {
                    "$ref": "#/components/examples/AuthSuccess"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Social Login"
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/service/application/user/authentication/v1.0/login/apple-ios": {
      "post": {
        "summary": "loginWithAppleIOS | iOS Login with Apple",
        "description": "Enable ios users to log in to the system using their apple id.",
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "description": "ID of the application.",
            "schema": {
              "type": "string",
              "default": "Fynd"
            },
            "examples": {
              "apple ios login success": {
                "value": "5eda528b97457fe43a733ace"
              }
            }
          }
        ],
        "requestBody": {
          "description": "Check the example of an OAuth request body shown below or refer `OAuthRequestAppleSchema` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OAuthRequestAppleSchema"
              },
              "examples": {
                "apple ios login success": {
                  "value": {
                    "user_identifier": "000119.6f9a75abd756451fa2adee13d004d4f8.0606",
                    "oauth": {
                      "identity_token": "eyJraWQiOiJZdXlYb1kiLCJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJodHRwczovL2FwcGxlaWQuYXBwbGUuY29tIiwiYXVkIjoib3JnLmNvY29hcG9kcy5kZW1vLkdyaW1Mb2NrLUV4YW1wbGUiLCJleHAiOjE2MzU1MDA3MjcsImlhdCI6MTYzNTQxNDMyNywic3ViIjoiMDAwMTE5LjZmOWE3NWFiZDc1NjQ1MWZhMmFkZWUxM2QwMDRkNGY4LjA2MDYiLCJjX2hhc2giOiI5Q09wMGJGR3hrdFU5ZTN3MXU2YnBnIiwiZW1haWwiOiJhbnVyYWdqYWRoYXYxNEBnbWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6InRydWUiLCJhdXRoX3RpbWUiOjE2MzU0MTQzMjcsIm5vbmNlX3N1cHBvcnRlZCI6dHJ1ZX0.dRX3w6IaoD-gsOaBebNJMspboM-HLvl6kAW36cuLPVozt1h8NWWdcHXQVzutlvaT67g2dG5qG-TYsO-hw7ozYXknLuIpdG0utu1ksL_YlxE1B3_cTRwZBioiS109ShPqKzvkeJ0IzyK-iqMU6Q8JEUvktyXnj2jC0VAYALw7BbpOC1G2oEioLeKywb9ASdsV1MVrez82CKlUf5rdwMblo5CRqqFBlXmZRZgNQ2IaM8PwV-dh70HzoMTY-yYJ3_zOfI6hi-_Smjjykbrul1x-FOrgFdhFpoT74XoS7mAE98g05LewmY6KTZBVfpASiCK-wsKMzzFwhWmydnx3vXZdxQ"
                    },
                    "profile": {
                      "full_name": "Akash Mane",
                      "first_name": "Akash",
                      "last_name": "Mane"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Returns a JSON object with the user details. Check the example shown below or refer `AuthSuccess` for more details.",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "f.session=abcde12345; Path=/;"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthSuccess"
                },
                "examples": {
                  "apple ios login success": {
                    "$ref": "#/components/examples/AuthSuccess"
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Social Login"
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/service/application/user/authentication/v1.0/login/otp": {
      "post": {
        "summary": "loginWithOTP | Login with Mobile OTP",
        "description": "Allow users to log in using a one-time password sent to their mobile.",
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "description": "ID of the application.",
            "schema": {
              "type": "string",
              "default": "Fynd"
            },
            "examples": {
              "login otp success": {
                "value": "5eda528b97457fe43a733ace"
              },
              "login otp failure": {
                "value": ""
              }
            }
          }
        ],
        "requestBody": {
          "description": "Check the example of an OTP request body shown below or refer `SendOtpRequestSchema` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendOtpRequestSchema"
              },
              "examples": {
                "login otp success": {
                  "value": {
                    "mobile": "8652523958",
                    "country_code": "91"
                  }
                },
                "login otp failure": {
                  "value": {
                    "mobile": "",
                    "country_code": "91"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `SendOtpResponse` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendOtp"
                },
                "examples": {
                  "login otp success": {
                    "$ref": "#/components/examples/SendOtpResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body for specific reason",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                },
                "examples": {
                  "login otp failure": {
                    "value": {
                      "message": "Invalid mobile/countryCode"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Login and Registration"
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/service/application/user/authentication/v1.0/login/password": {
      "post": {
        "summary": "loginWithEmailAndPassword | Email and Password Login",
        "description": "Allow login using an email and password combination.",
        "requestBody": {
          "description": "Request body must contain Email ID, Password and the Captcha. Refer `PasswordLoginRequestSchema` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordLoginRequestSchema"
              },
              "examples": {
                "login password success": {
                  "value": {
                    "password": "vinit#Fynd123",
                    "username": "vinit.mav123@gofynd.com"
                  }
                },
                "login password failure": {
                  "value": {
                    "password": "vinit#Fynd123",
                    "username": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `LoginSuccess` for more details.",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "f.session=abcde12345; Path=/;"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginSuccess"
                },
                "examples": {
                  "login password success": {
                    "$ref": "#/components/examples/UserExampleObject"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body for specific reason",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                },
                "examples": {
                  "login password failure": {
                    "value": {
                      "message": "Incorrect Email/Mobile."
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Login and Registration"
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/service/application/user/authentication/v1.0/login/password/reset": {
      "post": {
        "summary": "sendResetPasswordEmail | Reset Password via Email",
        "description": "Send a password reset link to the user's email.",
        "requestBody": {
          "description": "Request body must contain Email ID and the Captcha. Refer `SendResetPasswordEmailRequestSchema` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendResetPasswordEmailRequestSchema"
              },
              "examples": {
                "reset password success": {
                  "value": {
                    "email": "vinit.mav12@gofynd.com"
                  }
                },
                "reset password failure": {
                  "value": {
                    "email": ""
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "description": "ID of the application.",
            "schema": {
              "type": "string",
              "default": "Fynd"
            },
            "examples": {
              "reset password success": {
                "value": "5eda528b97457fe43a733ace"
              },
              "reset password failure": {
                "value": ""
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `ResetPasswordSuccess` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetPasswordSuccess"
                },
                "examples": {
                  "reset password success": {
                    "value": {
                      "status": "sent"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body for specific reason",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                },
                "examples": {
                  "reset password failure": {
                    "value": {
                      "message": "User with Email does not exist."
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Customer Password"
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/service/application/user/authentication/v1.0/login/password/reset/token": {
      "post": {
        "summary": "sendResetToken | Validate Password Reset Code",
        "description": "Validate password reset link code.",
        "tags": [
          "User"
        ],
        "requestBody": {
          "description": "Request body must contain the code sent on Email/SMS. Refer `CodeRequestBodySchema` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CodeRequestBodySchema"
              },
              "examples": {
                "reset token success": {
                  "value": {
                    "code": "code123"
                  }
                },
                "reset token failure": {
                  "value": {
                    "code": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `ResetPasswordSuccess` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetPasswordSuccess"
                },
                "examples": {
                  "reset token success": {
                    "value": {
                      "status": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body for specific reason",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                },
                "examples": {
                  "reset token failure": {
                    "value": {
                      "message": "Invalid Code."
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Customer Password"
        ]
      }
    },
    "/service/application/user/authentication/v1.0/login/password/reset/forgot": {
      "post": {
        "summary": "forgotPassword | Reset Password via Code and login",
        "description": "Reset a password using the code sent on email or sms the login.",
        "tags": [
          "User"
        ],
        "requestBody": {
          "description": "Request body must contain Captcha and the code sent on Email/SMS. Refer `ForgotPasswordRequestSchema` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequestSchema"
              },
              "examples": {
                "forgot password success": {
                  "value": {
                    "code": "code123",
                    "password": "Test@1234"
                  }
                },
                "forgot password failure": {
                  "value": {
                    "code": "",
                    "password": "mypassword"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `LoginSuccess` for more details.",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "f.session=abcde12345; Path=/;"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginSuccess"
                },
                "examples": {
                  "forgot password success": {
                    "$ref": "#/components/examples/UserExampleObject"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body for specific reason",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                },
                "examples": {
                  "forgot password failure": {
                    "value": {
                      "message": "Invalid Code."
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Customer Password"
        ]
      }
    },
    "/service/application/user/authentication/v1.0/login/password/forgot": {
      "post": {
        "summary": "resetForgotPassword | Reset Password via Code",
        "description": "Reset a password using the code sent on email or sms.",
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequestSchema"
              },
              "examples": {
                "reset forgot password success": {
                  "value": {
                    "code": "code1234",
                    "password": "Test@1234"
                  }
                },
                "reset forgot password failure": {
                  "value": {
                    "code": "",
                    "password": "mypassword"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `ResetForgotPasswordSuccess` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetForgotPasswordSuccess"
                },
                "examples": {
                  "reset forgot password success": {
                    "$ref": "#/components/examples/ResetForgotPassword"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body for specific reason",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                },
                "examples": {
                  "reset password mobile failure": {
                    "value": {
                      "message": "Invalid Code."
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Customer Password"
        ]
      }
    },
    "/service/application/user/authentication/v1.0/login/token": {
      "post": {
        "summary": "loginWithToken | Login with Token",
        "description": "Login user using a token for authentication.",
        "tags": [
          "User"
        ],
        "requestBody": {
          "description": "Request body must contain authentication token. Refer `TokenRequestBodySchema` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequestBodySchema"
              },
              "examples": {
                "login with token success": {
                  "value": {
                    "token": "s%3AC8BGhOpG9dRstMFeMif7bitaEKFEqLtY.pSyA8%2FWSN2LaWoCLEJ26aE2vgGfThciBEFsIcmxwVUg"
                  }
                },
                "login with token failure": {
                  "value": {
                    "token": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `LoginSuccess` for more details.",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "f.session=abcde12345; Path=/;"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginSuccess"
                },
                "examples": {
                  "login with token success": {
                    "$ref": "#/components/examples/UserExampleObject"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body for specific reason",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                },
                "examples": {
                  "login with token failure": {
                    "value": {
                      "message": "Invalid Token."
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Login and Registration"
        ]
      }
    },
    "/service/application/user/authentication/v1.0/register/form": {
      "post": {
        "summary": "registerWithForm | Register User with Form",
        "description": "Enable new users to register using a form.",
        "requestBody": {
          "description": "Request body must contain user details such as name, last name, contact details and password. Check the example of a Form Registration request body shown below or refer `FormRegisterRequestSchema` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormRegisterRequestSchema"
              },
              "examples": {
                "register form success": {
                  "value": {
                    "first_name": "Akash",
                    "last_name": "Mane",
                    "gender": "male",
                    "phone": {
                      "mobile": "8652523958",
                      "country_code": "91"
                    },
                    "password": "qpalzm1?",
                    "email": "",
                    "register_token": ""
                  }
                },
                "register form failure": {
                  "value": {
                    "first_name": "Akash",
                    "last_name": "Mane",
                    "gender": "malee",
                    "phone": {
                      "mobile": "8652523958",
                      "country_code": "91"
                    },
                    "password": "qpalzm1?",
                    "email": "",
                    "register_token": ""
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "description": "ID of the application.",
            "schema": {
              "type": "string",
              "default": "Fynd"
            },
            "examples": {
              "register form success": {
                "value": "5eda528b97457fe43a733ace"
              },
              "register form failure": {
                "value": ""
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `RegisterFormSuccess` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterFormSuccess"
                },
                "examples": {
                  "register form success": {
                    "value": {
                      "success": true,
                      "request_id": "ebc059191393681cdfb805b5424bddad",
                      "message": "OTP sent",
                      "mobile": "7400448798",
                      "country_code": "91",
                      "resend_timer": 30,
                      "resend_token": "5197ff90-66e2-11eb-9399-0312fbf2c2a6",
                      "verify_mobile_otp": true,
                      "register_token": "276e718a-d406-4a4b-83f7-cb6cb72b99ff",
                      "user_exists": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body for specific reason",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                },
                "examples": {
                  "register form failure": {
                    "value": {
                      "message": "Invalid Gender"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Login and Registration"
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/service/application/user/authentication/v1.0/verify/email": {
      "post": {
        "summary": "verifyEmail | Verify Email with Code",
        "description": "Verify user email with a code sent within a link sent to their email.",
        "requestBody": {
          "description": "Request body must contain the code sent on Email. Refer `CodeRequestBodySchema` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CodeRequestBodySchema"
              },
              "examples": {
                "verify email success": {
                  "value": {
                    "code": "code123"
                  }
                },
                "verify email failure": {
                  "value": {
                    "code": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `VerifyEmailSuccess` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyEmailSuccess"
                },
                "examples": {
                  "verify email success": {
                    "value": {
                      "message": "verified"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body for specific reason",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                },
                "examples": {
                  "verify email failure": {
                    "value": {
                      "message": "Invalid Code."
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Customer Profile"
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/service/application/user/authentication/v1.0/verify/mobile": {
      "post": {
        "summary": "verifyMobile | Verify Mobile with Code",
        "description": "Verify user mobile with a code sent within a link sent to their mobile.",
        "requestBody": {
          "description": "Request body must contain the code sent on Email. Refer `CodeRequestBodySchema` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CodeRequestBodySchema"
              },
              "examples": {
                "verify mobile success": {
                  "value": {
                    "code": "code123"
                  }
                },
                "verify mobile failure": {
                  "value": {
                    "code": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `VerifyEmailSuccess` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyEmailSuccess"
                },
                "examples": {
                  "verify mobile success": {
                    "value": {
                      "message": "verified"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body for specific reason",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                },
                "examples": {
                  "verify mobile failure": {
                    "value": {
                      "message": "Invalid Code."
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Customer Profile"
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/service/application/user/authentication/v1.0/has-password": {
      "get": {
        "summary": "hasPassword | Check Password Existence",
        "description": "Check if user has set an account password.",
        "responses": {
          "200": {
            "description": "Success. Returns a boolean value. Check the example shown below or refer `HasPasswordSuccess` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HasPasswordSuccess"
                },
                "examples": {
                  "has password success": {
                    "value": {
                      "result": 1
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Bad request. See the error object in the response body for specific reason",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                },
                "examples": {
                  "has password failure": {
                    "value": {
                      "message": "Invalid Code."
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Customer Password"
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/service/application/user/authentication/v1.0/password": {
      "post": {
        "summary": "updatePassword | Update Password",
        "description": "Allow user to change their password.",
        "requestBody": {
          "description": "Request body must contain old and new password. Refer `UpdatePasswordRequestSchema` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePasswordRequestSchema"
              },
              "examples": {
                "update password success": {
                  "value": {
                    "old_password": "vinit#Fynd123",
                    "new_password": "Test@1234"
                  }
                },
                "update password failure": {
                  "value": {
                    "old_password": "vinit#Fynd123",
                    "new_password": "new"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Returns a success message. Refer `VerifyEmailSuccess` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyEmailSuccess"
                },
                "examples": {
                  "update password success": {
                    "value": {
                      "message": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body for specific reason",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                },
                "examples": {
                  "update password failure": {
                    "value": {
                      "message": "No password was given"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Customer Password"
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/service/application/user/authentication/v1.0/otp/mobile/send": {
      "post": {
        "summary": "sendOTPOnMobile | Send OTP on Mobile",
        "description": "Send a one-time password to the user's mobile for verification.",
        "requestBody": {
          "description": "Request body must contain mobile no, country code and captcha code. Refer `SendMobileOtpRequestSchema` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendMobileOtpRequestSchema"
              },
              "examples": {
                "send mobile otp success": {
                  "value": {
                    "mobile": "8652523958",
                    "country_code": "91",
                    "token": "resend_token",
                    "action": "send"
                  }
                },
                "send mobile otp failure": {
                  "value": {
                    "mobile": "",
                    "country_code": "91",
                    "token": "resend_token",
                    "action": "send"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "description": "ID of the application.",
            "schema": {
              "type": "string",
              "default": "Fynd"
            },
            "examples": {
              "send mobile otp success": {
                "value": "5eda528b97457fe43a733ace"
              },
              "send mobile otp failure": {
                "value": ""
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a JSON object as shown below. Refer `OtpSuccess` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtpSuccess"
                },
                "examples": {
                  "send mobile otp success": {
                    "value": {
                      "success": true,
                      "request_id": "01503005aeab87cbed93d40f46cc2749",
                      "message": "OTP sent",
                      "mobile": "8652523958",
                      "country_code": "91",
                      "resend_timer": 30,
                      "resend_token": "18fc3d60-66e5-11eb-9399-0312fbf2c2a6"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body for specific reason",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                },
                "examples": {
                  "send mobile otp failure": {
                    "value": {
                      "message": "Invalid Number"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "OTP Authentication"
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/service/application/user/authentication/v1.0/otp/forgot/mobile/send": {
      "post": {
        "summary": "sendForgotOTPOnMobile | Send mobile OTP for forgot-password",
        "description": "Send a one-time password to the user's mobile for verification when resetting a forgotten password.",
        "requestBody": {
          "description": "Request body must contain mobile no, country code. Refer `SendMobileForgotOtpRequestSchema` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendMobileForgotOtpRequestSchema"
              },
              "examples": {
                "send forgot otp on mobile success": {
                  "value": {
                    "mobile": "9987568524",
                    "country_code": "91",
                    "token": "resend_token",
                    "action": "send"
                  }
                },
                "send forgot otp on mobile failure": {
                  "value": {
                    "mobile": "",
                    "country_code": "91",
                    "token": "resend_token",
                    "action": "send"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "description": "ID of the application.",
            "schema": {
              "type": "string",
              "default": "Fynd"
            },
            "examples": {
              "send forgot otp on mobile success": {
                "value": "5eda528b97457fe43a733ace"
              },
              "send forgot otp on mobile failure": {
                "value": ""
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a JSON object as shown below. Refer `OtpSuccess` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtpSuccess"
                },
                "examples": {
                  "send forgot otp on mobile success": {
                    "value": {
                      "success": true,
                      "request_id": "01503005aeab87cbed93d40f46cc2749",
                      "message": "OTP sent",
                      "mobile": "9987568524",
                      "country_code": "91",
                      "resend_timer": 30,
                      "resend_token": "18fc3d60-66e5-11eb-9399-0312fbf2c2a6"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body for specific reason",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                },
                "examples": {
                  "send forgot otp on mobile failure": {
                    "value": {
                      "message": "Invalid Number"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "OTP Authentication"
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/service/application/user/authentication/v1.0/otp/mobile/verify": {
      "post": {
        "summary": "verifyMobileOTP | Verify Mobile OTP",
        "description": "Verify one-time password sent to user's mobile.",
        "requestBody": {
          "description": "Check the example shown below or refer `VerifyOtpRequestSchema` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyOtpRequestSchema"
              },
              "examples": {
                "verify mobile otp success": {
                  "value": {
                    "otp": "5401",
                    "request_id": "01503005aeab87cbed93d40f46cc2749"
                  }
                },
                "verify mobile otp failure": {
                  "value": {
                    "otp": "",
                    "request_id": "01503005aeab87cbed93d40f46cc2749"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "description": "ID of the application.",
            "schema": {
              "type": "string",
              "default": "Fynd"
            },
            "examples": {
              "verify mobile otp success": {
                "value": "5eda528b97457fe43a733ace"
              },
              "verify mobile otp failure": {
                "value": ""
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a JSON object as shown below. Refer `VerifyOtpSuccess` for more details.",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "f.session=abcde12345; Path=/;"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyOtpSuccess"
                },
                "examples": {
                  "verify mobile otp success": {
                    "$ref": "#/components/examples/VerifyMobileOTP"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body for specific reason",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                },
                "examples": {
                  "verify mobile otp failure": {
                    "value": {
                      "message": "Invalid request params"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "OTP Authentication"
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/service/application/user/authentication/v1.0/otp/forgot/mobile/verify": {
      "post": {
        "summary": "verifyMobileForgotOTP | Verify Mobile OTP for Forgot Password",
        "description": "Verify one-time password sent to user's mobile for resetting a forgotten password.",
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyMobileForgotOtpRequestSchema"
              },
              "examples": {
                "verify forgot otp on mobile success": {
                  "value": {
                    "otp": "5401",
                    "request_id": "01503005aeab87cbed93d40f46cc2750"
                  }
                },
                "verify forgot otp on mobile failure": {
                  "value": {
                    "otp": "",
                    "request_id": "01503005aeab87cbed93d40f46cc2750"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "description": "ID of the application.",
            "schema": {
              "type": "string",
              "default": "Fynd"
            },
            "examples": {
              "verify forgot otp on mobile success": {
                "value": "5eda528b97457fe43a733ace"
              },
              "verify forgot otp on mobile failure": {
                "value": ""
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a JSON object as shown below. Refer `VerifyForgotOtpSuccess` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyForgotOtpSuccess"
                },
                "examples": {
                  "verify forgot otp on mobile success": {
                    "value": {
                      "success": true,
                      "forgot_token": "d6c9df22-7e65-41be-9852-8207a8d2d54d"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body for specific reason",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                },
                "examples": {
                  "verify forgot otp on mobile failure": {
                    "value": {
                      "message": "Invalid request params"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "OTP Authentication"
        ]
      }
    },
    "/service/application/user/authentication/v1.0/otp/email/send": {
      "post": {
        "summary": "sendOTPOnEmail | Send OTP on Email",
        "description": "Send a one-time password to the user's email for verification.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailOtpRequestSchema"
              },
              "examples": {
                "send email otp success": {
                  "value": {
                    "email": "test@gmail.com",
                    "token": "resend_token",
                    "action": "send",
                    "register_token": "registerToken123"
                  }
                },
                "send email otp failure": {
                  "value": {
                    "email": "",
                    "token": "resend_token",
                    "action": "send",
                    "register_token": "registerToken123"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "description": "ID of the application.",
            "schema": {
              "type": "string",
              "default": "Fynd"
            },
            "examples": {
              "send email otp success": {
                "value": "5eda528b97457fe43a733ace"
              },
              "send email otp failure": {
                "value": ""
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a JSON object as shown below. Refer `EmailOtpSuccess` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailOtpSuccess"
                },
                "examples": {
                  "send email otp success": {
                    "value": {
                      "success": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body for specific reason",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                },
                "examples": {
                  "send email otp failure": {
                    "value": {
                      "message": "Invalid request params"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "OTP Authentication"
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/service/application/user/authentication/v1.0/otp/forgot/email/send": {
      "post": {
        "summary": "sendForgotOTPOnEmail | Send Email OTP for Forgot Password",
        "description": "Send a one-time password to the user's email for verification when resetting a forgotten password.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailForgotOtpRequestSchema"
              },
              "examples": {
                "send forgot otp on email success": {
                  "value": {
                    "email": "vinit.mav12@gofynd.com",
                    "token": "resend_token",
                    "action": "send"
                  }
                },
                "send forgot otp on email failure": {
                  "value": {
                    "email": "",
                    "token": "vinit.mav12@gofynd.com",
                    "action": "send"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "description": "ID of the application.",
            "schema": {
              "type": "string",
              "default": "Fynd"
            },
            "examples": {
              "send forgot otp on email success": {
                "value": "5eda528b97457fe43a733ace"
              },
              "send forgot otp on email failure": {
                "value": ""
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a JSON object as shown below. Refer `EmailOtpSuccess` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailOtpSuccess"
                },
                "examples": {
                  "send forgot otp on email success": {
                    "value": {
                      "success": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body for specific reason",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                },
                "examples": {
                  "send forgot otp on email failure": {
                    "value": {
                      "message": "Invalid email"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "OTP Authentication"
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/service/application/user/authentication/v1.0/otp/email/verify": {
      "post": {
        "summary": "verifyEmailOTP | Verify Email OTP",
        "description": "Verify one-time password sent to user's email.",
        "requestBody": {
          "description": "Check the example shown below or refer `VerifyEmailOtpRequestSchema` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailOtpRequestSchema"
              },
              "examples": {
                "verify email otp success": {
                  "value": {
                    "otp": "5401",
                    "register_token": "01503005aeab87cbed93d40f46cc2749",
                    "request_id": "760527347886b225ec8f87e27259096b",
                    "action": "verify",
                    "email": "test@gmail.com"
                  }
                },
                "verify email otp failure": {
                  "value": {
                    "otp": "",
                    "request_id": "760527347886b225ec8f87e27259096b",
                    "register_token": "01503005aeab87cbed93d40f46cc2749",
                    "action": "verify",
                    "email": "test@gmail.com"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "description": "ID of the application.",
            "schema": {
              "type": "string",
              "default": "Fynd"
            },
            "examples": {
              "verify email otp success": {
                "value": "5eda528b97457fe43a733ace"
              },
              "verify email otp failure": {
                "value": ""
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a JSON object as shown below. Refer `VerifyOtpSuccess` for more details.",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "f.session=abcde12345; Path=/;"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyOtpSuccess"
                },
                "examples": {
                  "verify email otp success": {
                    "$ref": "#/components/examples/VerifyMobileOTP"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body for specific reason",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                },
                "examples": {
                  "verify email otp failure": {
                    "value": {
                      "message": "Invalid request params"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "OTP Authentication"
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/service/application/user/authentication/v1.0/otp/forgot/email/verify": {
      "post": {
        "summary": "verifyEmailForgotOTP | Verify Email OTP for Forgot Password",
        "description": "Verify one-time password sent to user's email for resetting a forgotten password.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailForgotOtpRequestSchema"
              },
              "examples": {
                "verify forgot otp on email success": {
                  "value": {
                    "otp": "5401",
                    "email": "vinit.mav12@gofynd.com",
                    "request_id": "760527347886b225ec8f87e27259096b"
                  }
                },
                "verify forgot otp on email failure": {
                  "value": {
                    "otp": "",
                    "email": "vinit.mav12@gofynd.com",
                    "request_id": "760527347886b225ec8f87e27259096b"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "description": "ID of the application.",
            "schema": {
              "type": "string",
              "default": "Fynd"
            },
            "examples": {
              "verify forgot otp on email success": {
                "value": "5eda528b97457fe43a733ace"
              },
              "verify forgot otp on email failure": {
                "value": ""
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a JSON object as shown below. Refer `VerifyForgotOtpSuccess` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyForgotOtpSuccess"
                },
                "examples": {
                  "verify forgot otp on email success": {
                    "value": {
                      "success": true,
                      "forgot_token": "d6c9df22-7e65-41be-9852-8207a8d2d54d"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body for specific reason",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                },
                "examples": {
                  "verify forgot otp on email failure": {
                    "value": {
                      "message": "Invalid request params"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "OTP Authentication"
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/service/application/user/authentication/v1.0/session": {
      "get": {
        "summary": "getLoggedInUser | Get Logged in User",
        "description": "Retrieve information about the currently logged-in user.",
        "responses": {
          "200": {
            "description": "Success. Returns a JSON object with user details. Refer `UserObjectSchema` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserObjectSchema"
                },
                "examples": {
                  "get session success": {
                    "$ref": "#/components/examples/UserExampleObject"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Bad request. See the error object in the response body for specific reason",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                },
                "examples": {
                  "get session failure": {
                    "value": {
                      "authenticated": false
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Customer Account"
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/service/application/user/authentication/v1.0/sessions": {
      "get": {
        "summary": "getListOfActiveSessions | Get List OF Active Sessions",
        "description": "Retrieve all active sessions of a user.",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a JSON object containing an array of sessions. Refer `SessionListSuccess` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionListSuccess"
                },
                "examples": {
                  "get all sessions success": {
                    "value": {
                      "sessions": [
                        "session1",
                        "session2"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Bad request. See the error object in the response body for specific reason",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                },
                "examples": {
                  "get all sessions failure": {
                    "value": {
                      "authenticated": false
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Customer Account"
        ]
      }
    },
    "/service/application/user/platform/v1.0/config": {
      "get": {
        "summary": "getPlatformConfig | Get Platform Configuration",
        "description": "Retrieve platform sales channel authentication configuration.",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name of the application, e.g. Fynd.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "get platform config success": {
                "value": "5eda528b97457fe43a733ace"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a JSON object containing the all the platform configurations. Refer `PlatformSchema` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformSchema"
                },
                "examples": {
                  "get platform config success": {
                    "value": {
                      "active": true,
                      "mobile_image": "test",
                      "desktop_image": "test",
                      "social": {
                        "facebook": true,
                        "google": true,
                        "account_kit": true
                      },
                      "flash_card": {
                        "text": "",
                        "text_color": "#FFFFFF",
                        "background_color": "#EF5350"
                      },
                      "register": true,
                      "forgot_password": true,
                      "login": {
                        "password": true,
                        "otp": true
                      },
                      "skip_captcha": false,
                      "display": "Fynd",
                      "subtext": "Login to Fynd",
                      "name": "Fynd",
                      "meta": {},
                      "required_fields": {
                        "email": {
                          "is_required": false,
                          "level": "hard"
                        },
                        "mobile": {
                          "is_required": true,
                          "level": "hard"
                        }
                      },
                      "register_required_fields": {
                        "email": {
                          "is_required": false,
                          "level": "hard"
                        },
                        "mobile": {
                          "is_required": true,
                          "level": "hard"
                        }
                      },
                      "skip_login": false,
                      "look_and_feel": {
                        "background_color": "#F5F5F5",
                        "card_position": "center"
                      },
                      "social_tokens": {
                        "google": {
                          "app_id": "token_123",
                          "app_secret": "test"
                        },
                        "facebook": {
                          "app_id": "2033146826724884",
                          "app_secret": "test"
                        },
                        "accountkit": {
                          "app_id": "548529975557631",
                          "app_secret": "test"
                        }
                      },
                      "delete_account_reasons": [
                        {
                          "reason_text": "test",
                          "reason_id": "123",
                          "show_text_area": true
                        }
                      ],
                      "delete_account_day": 7,
                      "delete_account_consent": {
                        "consent_text": ""
                      },
                      "session_config": {
                        "duration": 30,
                        "type": "Days",
                        "is_rolling": false
                      },
                      "_id": "5e04a5e5220bc15839ad9bc0",
                      "created_at": "2019-12-26T12:21:57.878Z",
                      "updated_at": "2020-08-13T14:31:09.878Z",
                      "__v": 0
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Customer Account"
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/service/application/user/profile/v1.0/detail": {
      "post": {
        "summary": "updateProfile | Edit User Profile Details",
        "description": "Allow users to modify and update their profile details.",
        "tags": [
          "User"
        ],
        "requestBody": {
          "description": "Request body must contain user details such as name, last name, contact details and password. Check the example of a request body shown below or refer `EditProfileRequestSchema` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditProfileRequestSchema"
              },
              "examples": {
                "edit profile success": {
                  "value": {
                    "first_name": "Akash",
                    "last_name": "Mane",
                    "gender": "male"
                  }
                },
                "edit profile failure": {
                  "value": {
                    "first_name": "test@",
                    "last_name": "test@"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "description": "ID of the application.",
            "schema": {
              "type": "string",
              "default": "Fynd"
            },
            "examples": {
              "edit profile success": {
                "value": "5eda528b97457fe43a733ace"
              },
              "edit profile failure": {
                "value": ""
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `LoginSuccess` for more details.",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "f.session=abcde12345; Path=/;"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileEditSuccess"
                },
                "examples": {
                  "edit profile success": {
                    "$ref": "#/components/examples/UserExampleObject"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body for specific reason",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                },
                "examples": {
                  "edit profile failure": {
                    "value": {
                      "message": "Invalid Gender"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Customer Profile"
        ]
      }
    },
    "/service/application/user/profile/v1.0/mobile": {
      "put": {
        "summary": "addMobileNumber | Add Mobile Number to Profile",
        "description": "Add a new mobile number to the user's profile.",
        "requestBody": {
          "description": "Request body must contain mobile no and country code. Refer `EditMobileRequestSchema` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditMobileRequestSchema"
              },
              "examples": {
                "add mobile number to profile success": {
                  "value": {
                    "phone": "8652523958",
                    "country_code": "91"
                  }
                },
                "add mobile number to profile failure": {
                  "value": {
                    "phone": "",
                    "country_code": "91"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "description": "ID of the application.",
            "schema": {
              "type": "string",
              "default": "Fynd"
            },
            "examples": {
              "add mobile number to profile success": {
                "value": "5eda528b97457fe43a733ace"
              },
              "add mobile number to profile failure": {
                "value": ""
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `VerifyMobileOTPSuccess` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyMobileOTPSuccess"
                },
                "examples": {
                  "add mobile number to profile success": {
                    "$ref": "#/components/examples/VerifyMobileOTP"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body for specific reason",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                },
                "examples": {
                  "add mobile number to profile failure": {
                    "value": {
                      "message": "Number required"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Customer Profile"
        ],
        "tags": [
          "User"
        ]
      },
      "delete": {
        "summary": "deleteMobileNumber | Delete Mobile Number From Profile",
        "description": "Delete mobile number from profile.",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "description": "ID of the application.",
            "schema": {
              "type": "string",
              "default": "Fynd"
            },
            "examples": {
              "Delete mobile number from profile success": {
                "value": "5eda528b97457fe43a733ace"
              },
              "Delete mobile number from profile failure": {
                "value": ""
              }
            }
          },
          {
            "name": "active",
            "in": "query",
            "required": true,
            "description": "This is a boolean value to check if mobile number is active 1.True - number is active 2. False - number is inactive.",
            "schema": {
              "type": "boolean"
            },
            "examples": {
              "Delete mobile number from profile success": {
                "value": true
              },
              "Delete mobile number from profile failure": {
                "value": false
              }
            }
          },
          {
            "name": "primary",
            "in": "query",
            "description": "This is a boolean value to check if mobile number is primary number (main number) 1. True - number is primary 2. False - number is not primary.",
            "required": true,
            "schema": {
              "type": "boolean"
            },
            "examples": {
              "Delete mobile number from profile success": {
                "value": true
              },
              "Delete mobile number from profile failure": {
                "value": false
              }
            }
          },
          {
            "name": "verified",
            "in": "query",
            "description": "This is a boolean value to check if mobile number is verified 1. True - number is verified 2.False - number is not verified yet.",
            "required": true,
            "schema": {
              "type": "boolean"
            },
            "examples": {
              "Delete mobile number from profile success": {
                "value": true
              },
              "Delete mobile number from profile failure": {
                "value": false
              }
            }
          },
          {
            "name": "country_code",
            "in": "query",
            "description": "Country code of the phone number, e.g. 91.",
            "required": true,
            "schema": {
              "type": "string",
              "x-not-enum": true
            },
            "examples": {
              "Delete mobile number from profile success": {
                "value": "91"
              },
              "Delete mobile number from profile failure": {
                "value": ""
              }
            }
          },
          {
            "name": "phone",
            "in": "query",
            "description": "Phone number.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "Delete mobile number from profile success": {
                "value": "9987568530"
              },
              "Delete mobile number from profile failure": {
                "value": ""
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `LoginSuccess` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginSuccess"
                },
                "examples": {
                  "Delete mobile number from profile success": {
                    "$ref": "#/components/examples/UserExampleObject"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body for specific reason",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                },
                "examples": {
                  "Delete mobile number from profile failure": {
                    "value": {
                      "message": "Invalid Code."
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Customer Profile"
        ]
      }
    },
    "/service/application/user/profile/v1.0/mobile/primary": {
      "post": {
        "summary": "setMobileNumberAsPrimary | Set Mobile as Primary",
        "description": "Set a mobile number as the primary contact for the user.",
        "requestBody": {
          "description": "Check the example shown below or refer `SendVerificationLinkMobileRequestSchema` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendVerificationLinkMobileRequestSchema"
              },
              "examples": {
                "add mobile number as primary to profile success": {
                  "value": {
                    "active": true,
                    "primary": false,
                    "verified": true,
                    "country_code": "91",
                    "phone": "9987568524"
                  }
                },
                "add mobile number as primary to profile failure": {
                  "value": {
                    "active": true,
                    "primary": false,
                    "verified": true,
                    "country_code": "91",
                    "phone": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `LoginSuccess` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginSuccess"
                },
                "examples": {
                  "add mobile number as primary to profile success": {
                    "$ref": "#/components/examples/UserExampleObject"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body for specific reason",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                },
                "examples": {
                  "add mobile number as primary to profile failure": {
                    "value": {
                      "message": "Number required"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Customer Profile"
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/service/application/user/profile/v1.0/mobile/link/send": {
      "post": {
        "summary": "sendVerificationLinkToMobile | Send Verification Link to Mobile",
        "description": "Send a verification link to a newly added mobile number.",
        "requestBody": {
          "description": "Check the example shown below or refer `SendVerificationLinkMobileRequestSchema` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendVerificationLinkMobileRequestSchema"
              },
              "examples": {
                "send verification link to mobile success": {
                  "value": {
                    "active": true,
                    "primary": false,
                    "verified": true,
                    "country_code": "91",
                    "phone": "8652523958"
                  }
                },
                "send verification link to mobile failure": {
                  "value": {
                    "active": true,
                    "primary": false,
                    "verified": true,
                    "country_code": "91",
                    "phone": ""
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "description": "ID of the application.",
            "schema": {
              "type": "string",
              "default": "Fynd"
            },
            "examples": {
              "send verification link to mobile success": {
                "value": "5eda528b97457fe43a733ace"
              },
              "send verification link to mobile failure": {
                "value": ""
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Check the example shown below or refer `SendMobileVerifyLinkSuccess` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendMobileVerifyLinkSuccess"
                },
                "examples": {
                  "send verification link to mobile success": {
                    "$ref": "#/components/examples/VerifyMobileOTP"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body for specific reason",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                },
                "examples": {
                  "send verification link to mobile failure": {
                    "value": {
                      "message": "Invalid Code."
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Customer Profile"
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/service/application/user/profile/v1.0/email": {
      "put": {
        "summary": "addEmail | Add Email to Profile",
        "description": "Add a new email address to the user's profile.",
        "requestBody": {
          "description": "Check the example shown below or refer `EditEmailRequestSchema` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditEmailRequestSchema"
              },
              "examples": {
                "add email to profile success": {
                  "value": {
                    "email": "test@mymail.com"
                  }
                },
                "add email to profile failure": {
                  "value": {
                    "email": ""
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "description": "ID of the application.",
            "schema": {
              "type": "string",
              "default": "Fynd"
            },
            "examples": {
              "add email to profile success": {
                "value": "5eda528b97457fe43a733ace"
              },
              "add email to profile failure": {
                "value": ""
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a JSON object with user details. Refer `VerifyEmailOTPSuccess` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyEmailOTPSuccess"
                },
                "examples": {
                  "add email to profile success": {
                    "$ref": "#/components/examples/VerifyEmailOTP"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body for specific reason",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                },
                "examples": {
                  "add email to profile failure": {
                    "value": {
                      "message": "Email required."
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Customer Profile"
        ],
        "tags": [
          "User"
        ]
      },
      "delete": {
        "summary": "deleteEmail | Delete Email From Profile",
        "description": "Delete email from profile.",
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "description": "ID of the application.",
            "schema": {
              "type": "string",
              "default": "Fynd"
            },
            "examples": {
              "Delete email from profile success": {
                "value": "5eda528b97457fe43a733ace"
              },
              "Delete email from profile failure": {
                "value": ""
              }
            }
          },
          {
            "name": "active",
            "in": "query",
            "description": "Boolean value to check if email id is active 1. True - email id is active 2.False - email id is inactive.",
            "required": true,
            "schema": {
              "type": "boolean"
            },
            "examples": {
              "Delete email from profile success": {
                "value": true
              },
              "Delete email from profile failure": {
                "value": false
              }
            }
          },
          {
            "name": "primary",
            "in": "query",
            "description": "Boolean value to check if email id is primary (main email id) 1. True - email id is primary 2.False - email id is not primary.",
            "required": true,
            "schema": {
              "type": "boolean"
            },
            "examples": {
              "Delete email from profile success": {
                "value": true
              },
              "Delete email from profile failure": {
                "value": false
              }
            }
          },
          {
            "name": "verified",
            "in": "query",
            "description": "Boolean value to check if email id is verified 1. True - email id is verified 2.False - email id is not verified yet.",
            "required": true,
            "schema": {
              "type": "boolean"
            },
            "examples": {
              "Delete email from profile success": {
                "value": true
              },
              "Delete email from profile failure": {
                "value": false
              }
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "The email id to delete.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "Delete email from profile success": {
                "value": "vinit.mav12345@gofynd.com"
              },
              "Delete email from profile failure": {
                "value": ""
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a JSON object with user details. Refer `LoginSuccess` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginSuccess"
                },
                "examples": {
                  "Delete email from profile success": {
                    "$ref": "#/components/examples/UserExampleObject"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body for specific reason",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                },
                "examples": {
                  "Delete email from profile failure": {
                    "value": {
                      "message": "Invalid Code."
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Customer Profile"
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/service/application/user/profile/v1.0/email/primary": {
      "post": {
        "summary": "setEmailAsPrimary | Set Email as Primary",
        "description": "Set an email address as the primary contact for the user.",
        "requestBody": {
          "description": "Request body must contain an email ID. Refer `EditEmailRequestSchema` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditEmailRequestSchema"
              },
              "examples": {
                "set email as primary success": {
                  "value": {
                    "email": "vinit.mav12@gofynd.com"
                  }
                },
                "set email as primary failure": {
                  "value": {
                    "email": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Returns a JSON object with user details. Refer `LoginSuccess` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginSuccess"
                },
                "examples": {
                  "set email as primary success": {
                    "$ref": "#/components/examples/UserExampleObject"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body for specific reason",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                },
                "examples": {
                  "set email as primary failure": {
                    "value": {
                      "message": "Email required."
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Customer Profile"
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/service/application/user/profile/v1.0/email/link/send": {
      "post": {
        "summary": "sendVerificationLinkToEmail | Send Verification Link to Email",
        "description": "Send a verification link to a newly added email address.",
        "requestBody": {
          "description": "Request body must contain an email ID. Refer `EditEmailRequestSchema` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditEmailRequestSchema"
              },
              "examples": {
                "send verification link to email success": {
                  "value": {
                    "email": "test@mymail.com"
                  }
                },
                "send verification link to email failure": {
                  "value": {
                    "email": ""
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "description": "ID of the application.",
            "schema": {
              "type": "string",
              "default": "Fynd"
            },
            "examples": {
              "send verification link to email success": {
                "value": "5eda528b97457fe43a733ace"
              },
              "send verification link to email failure": {
                "value": ""
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request body must contain an email ID. Refer `EditEmailRequestSchema` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendEmailVerifyLinkSuccess"
                },
                "examples": {
                  "send verification link to email success": {
                    "value": {
                      "verify_email_link": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body for specific reason",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                },
                "examples": {
                  "send verification link to email failure": {
                    "value": {
                      "message": "Invalid Code."
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Customer Profile"
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/service/application/user/authentication/v1.0/user-exists": {
      "get": {
        "summary": "userExists | Check User Existence",
        "description": "Check whether user is already registered or not to the sales channel.",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "description": "Email id or phone number of user.",
            "schema": {
              "type": "string"
            },
            "required": true,
            "examples": {
              "user exists success": {
                "value": "vinit.mav12@gofynd.com"
              },
              "user exists failure": {
                "value": ""
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns true or false based on user is registered or not.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserExists"
                },
                "examples": {
                  "user exists success": {
                    "$ref": "#/components/examples/UserExistsExample"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body for specific reason",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                },
                "examples": {
                  "user exists failure": {
                    "value": {
                      "message": "Invalid Code."
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Customer Account"
        ]
      }
    },
    "/service/application/user/authentication/v1.0/delete": {
      "post": {
        "summary": "deleteUser | Verify OTP and Delete User",
        "description": "Verify OTP sent to mobile/email and delete the user's account.",
        "tags": [
          "User"
        ],
        "requestBody": {
          "description": "Request body must contain user_id. Refer `DeleteApplicationUserRequestSchema` for more details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteApplicationUserRequestSchema"
              },
              "examples": {
                "delete user success": {
                  "value": {
                    "user_id": "61f02c3dcc701256044ed6c0",
                    "reason": "test",
                    "reason_id": "123",
                    "otp": "5401",
                    "request_id": "1234"
                  }
                },
                "delete user failure": {
                  "value": {
                    "user_id": "",
                    "reason": "test",
                    "reason_id": "123",
                    "otp": "1234",
                    "request_id": "1234"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Returns a success message. Refer `DeleteUserSuccess` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteUserSuccess"
                },
                "examples": {
                  "delete user success": {
                    "value": {
                      "success": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. See the error object in the response body for specific reason",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                },
                "examples": {
                  "delete user failure": {
                    "value": {
                      "message": "User Id is required"
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Customer Account"
        ]
      }
    },
    "/service/application/user/authentication/v1.0/logout": {
      "get": {
        "summary": "logout | Logout Current User",
        "description": "Logout currently logged-in user.",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "Success. Returns a success message as shown below. Refer `LogoutSuccess` for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutSuccess"
                },
                "examples": {
                  "logout success": {
                    "value": {
                      "logout": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Bad request. See the error object in the response body for specific reason",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                },
                "examples": {
                  "logout failure": {
                    "value": {
                      "message": "Invalid Code."
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Customer Account"
        ]
      }
    },
    "/service/application/webhook/v1.0/click-analytics/events": {
      "post": {
        "description": "Send click events from various sales channels to enable insightful data collection and analysis.",
        "summary": "saveClickEvent | Capture and save click events from various sales channels",
        "x-accessScopes": [
          "application/webhook/click-analytics"
        ],
        "tags": [
          "Webhook"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClickEventPayload"
              },
              "examples": {
                "success": {
                  "value": {
                    "batch": [
                      {
                        "context": {
                          "library": {
                            "name": "flick",
                            "version": "1.0.4"
                          },
                          "os": {
                            "name": "Mac OS",
                            "version": "10.15.7"
                          },
                          "timezone": "Asia/Calcutta",
                          "screen": {
                            "width": 1512,
                            "height": 944
                          },
                          "userAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.5112.101 Safari/537.36",
                          "locale": "en-GB",
                          "device": {
                            "isMobile": false
                          }
                        },
                        "event_id": "78822fd8-e2cd-4b71-85db-d31926e65ee1",
                        "event_name": "add_to_cart",
                        "properties": {
                          "cart_id": "65fcfaf80f0982322b08eb19",
                          "event_type": "engagement",
                          "product_id": 7577681,
                          "article_id": "6548b4713207dbccd90aabaa",
                          "brand": "Brand1Brand2Brand3Brand4Brand5",
                          "l3_category": "T-Shirt",
                          "l1_category": "TODO",
                          "currency": "INR",
                          "price": 119,
                          "quantity": 1,
                          "source_url": "TODO",
                          "position": "TODO",
                          "value": "TODO"
                        },
                        "event_timestamp": "2024-03-22T03:28:56.660Z",
                        "user_id": "65ded043e420442c53220470"
                      }
                    ],
                    "sent_at": "2024-03-22T03:28:57.054Z"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClickEventDetails"
                },
                "examples": {
                  "success": {
                    "value": {
                      "success_count": 1,
                      "failed_count": 0,
                      "failed_events": []
                    }
                  }
                }
              }
            }
          }
        },
        "x-groups": [
          "Click Event Capture API"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "PromoBuyRuleCartConditions": {
        "type": "object",
        "properties": {
          "cart_quantity": {
            "$ref": "#/components/schemas/PromoBuyRuleCompareFieldsTypes"
          },
          "cart_total": {
            "$ref": "#/components/schemas/PromoBuyRuleCompareFieldsTypes"
          },
          "item_id": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "item_store": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "item_company": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "item_brand": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "item_exclude_brand": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "item_category": {
            "type": "array",
            "items": {
              "type": "number",
              "x-not-enum": true
            }
          },
          "item_exclude_category": {
            "type": "array",
            "items": {
              "type": "number",
              "x-not-enum": true
            }
          },
          "item_l1_category": {
            "type": "array",
            "items": {
              "type": "number",
              "x-not-enum": true
            }
          },
          "item_exclude_l1_category": {
            "type": "array",
            "items": {
              "type": "number",
              "x-not-enum": true
            }
          },
          "item_l2_category": {
            "type": "array",
            "items": {
              "type": "number",
              "x-not-enum": true
            }
          },
          "item_exclude_l2_category": {
            "type": "array",
            "items": {
              "type": "number",
              "x-not-enum": true
            }
          },
          "item_department": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "item_exclude_id": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "available_zones": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "product_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PromoBuyRuleCompareFieldsTypes": {
        "type": "object",
        "properties": {
          "greater_than_equals": {
            "type": "number"
          },
          "greater_than": {
            "type": "number"
          },
          "equals": {
            "type": "number"
          },
          "less_than": {
            "type": "number"
          },
          "less_than_equals": {
            "type": "number"
          }
        }
      },
      "BuyRules": {
        "type": "object",
        "properties": {
          "cart_conditions": {
            "$ref": "#/components/schemas/PromoBuyRuleCartConditions"
          },
          "item_criteria": {
            "type": "object",
            "additionalProperties": true,
            "description": "Item criteria of promotion."
          },
          "all_items": {
            "nullable": true,
            "type": "boolean"
          },
          "mrp_promo": {
            "type": "boolean"
          },
          "slug": {
            "type": "string"
          }
        },
        "description": "Rules of promotion which suffies then only the promotion is applied."
      },
      "PromoDiscountRuleOffer": {
        "type": "object",
        "properties": {
          "max_offer_quantity": {
            "nullable": true,
            "type": "number",
            "format": "int32"
          },
          "discount_percentage": {
            "nullable": true,
            "type": "number",
            "format": "float32"
          },
          "discount_amount": {
            "nullable": true,
            "type": "number"
          }
        }
      },
      "PromoDiscountRuleRawOffer": {
        "type": "object",
        "properties": {
          "buy_condition": {
            "type": "string"
          },
          "discount_type": {
            "type": "string",
            "x-not-enum": true
          },
          "offer": {
            "$ref": "#/components/schemas/PromoDiscountRuleOffer"
          },
          "item_criteria": {
            "$ref": "#/components/schemas/PromoDiscountRuleItemCriteria"
          }
        }
      },
      "PromoDiscountRuleItemCriteria": {
        "type": "object",
        "properties": {
          "item_id": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "buy_rules": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "all_items": {
            "type": "boolean"
          }
        }
      },
      "DiscountRulesApp": {
        "type": "object",
        "properties": {
          "offer": {
            "$ref": "#/components/schemas/PromoDiscountRuleOffer"
          },
          "raw_offer": {
            "$ref": "#/components/schemas/PromoDiscountRuleRawOffer"
          },
          "item_criteria": {
            "$ref": "#/components/schemas/PromoDiscountRuleItemCriteria"
          },
          "matched_buy_rules": {
            "type": "array",
            "description": "Matched buy rules for promotion.",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Discount rules of the promotion."
      },
      "Ownership": {
        "type": "object",
        "properties": {
          "payable_category": {
            "type": "string",
            "enum": [
              "fynd",
              "seller"
            ],
            "description": "Promotion amount payable category."
          },
          "payable_by": {
            "type": "string",
            "description": "Promotion amount bearable party."
          }
        },
        "description": "Ownership details of the promotion responsible for discount expenditure."
      },
      "AppliedFreeArticles": {
        "type": "object",
        "properties": {
          "article_id": {
            "type": "string",
            "description": "The unique identifier for the article."
          },
          "free_gift_item_details": {
            "type": "object",
            "description": "An object containing details about the free gift item.",
            "additionalProperties": true
          },
          "parent_item_identifier": {
            "type": "string",
            "description": "The identifier for the parent item to which this free article is related."
          },
          "quantity": {
            "type": "number",
            "description": "The quantity of the free article."
          }
        },
        "description": "Schema for applied free articles."
      },
      "AppliedPromotion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Promotion id of current promotion."
          },
          "discount": {
            "type": "number",
            "description": "Discount of current promotion."
          },
          "article_quantity": {
            "type": "integer",
            "format": "int32",
            "description": "Quantity of article on which promotion is applicable."
          },
          "original_article_quantity": {
            "type": "integer",
            "format": "int32"
          },
          "ownership": {
            "description": "Ownership of promotion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Ownership"
              }
            ]
          },
          "currency": {
            "$ref": "#/components/schemas/CartCurrency"
          },
          "discount_rules": {
            "description": "Discount rules for promotions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscountRulesApp"
            }
          },
          "applied_free_articles": {
            "description": "Applied free article for free gift item promotions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppliedFreeArticles"
            }
          },
          "promotion_name": {
            "type": "string",
            "description": "Promotion name of current promotion."
          },
          "buy_rules": {
            "description": "Buy rules for promotions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BuyRules"
            }
          },
          "offer_text": {
            "type": "string",
            "description": "Offer text of current promotion."
          },
          "amount": {
            "type": "number",
            "format": "float",
            "description": "Per unit discount amount applied with current promotion."
          },
          "promotion_type": {
            "type": "string",
            "enum": [
              "percentage",
              "amount",
              "fixed_price",
              "bogo",
              "contract_price",
              "shipping_price",
              "ladder_price",
              "bundle_price_percentage",
              "bundle_price_amount",
              "bundle_amount_percentage",
              "custom",
              "free_gift_items",
              "free_non_sellable_items",
              "external_price_adjustment_discount"
            ],
            "description": "Promotion type of current promotion."
          },
          "mrp_promotion": {
            "type": "boolean",
            "description": "If applied promotion is applied on product MRP or ESP."
          },
          "promotion_group": {
            "type": "string",
            "description": "Promotion group for the promotion."
          },
          "promo_id": {
            "type": "string",
            "description": "Promotion id."
          },
          "meta": {
            "type": "object",
            "additionalProperties": true,
            "description": "Meta object for extra data."
          },
          "code": {
            "type": "string",
            "description": "Promotion code.",
            "nullable": true
          },
          "offer_label": {
            "type": "string",
            "nullable": true
          },
          "return_allowed": {
            "nullable": true,
            "type": "boolean"
          },
          "cancellation_allowed": {
            "nullable": true,
            "type": "boolean"
          },
          "promo_code": {
            "nullable": true,
            "type": "string",
            "x-not-enum": true
          },
          "free_quantity": {
            "nullable": true,
            "type": "integer",
            "format": "int32"
          },
          "offer_description": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Fields to determine the applied promotions details on a product."
      },
      "PaymentSelectionLock": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Denotes if default payment selection is enable."
          },
          "default_options": {
            "type": "string",
            "description": "Default Selection Payment Mode."
          },
          "payment_identifier": {
            "type": "string",
            "description": "Identifier for Payment Mode."
          }
        },
        "description": "Payment Default Selection Schema."
      },
      "PromiseFormatted": {
        "type": "object",
        "properties": {
          "max": {
            "nullable": true,
            "type": "string",
            "description": "Maximum Delivery promise formatted timestamp."
          },
          "min": {
            "nullable": true,
            "type": "string",
            "description": "Minimum Delivery promise formatted timestamp."
          }
        },
        "description": "Min and Max Delivery promise formatted timestamp."
      },
      "PromiseISOFormat": {
        "type": "object",
        "description": "Promise in ISO format.",
        "properties": {
          "max": {
            "nullable": true,
            "type": "string",
            "description": "Max promise in ISO format."
          },
          "min": {
            "nullable": true,
            "type": "string",
            "description": "Min Promise in ISO format."
          }
        }
      },
      "PromiseTimestamp": {
        "type": "object",
        "properties": {
          "max": {
            "nullable": true,
            "type": "number",
            "format": "float",
            "description": "Maximum Promise for the shipment."
          },
          "min": {
            "nullable": true,
            "type": "number",
            "format": "float",
            "description": "Minimum delivery promise time for the shipment."
          }
        },
        "description": "Shipment level promise times."
      },
      "ShipmentPromise": {
        "type": "object",
        "properties": {
          "formatted": {
            "$ref": "#/components/schemas/PromiseFormatted"
          },
          "timestamp": {
            "$ref": "#/components/schemas/PromiseTimestamp"
          },
          "iso": {
            "$ref": "#/components/schemas/PromiseISOFormat"
          }
        },
        "description": "Shipment level promise information which denotes time in 3 different formats i.e formatted time, timestamp and iso format."
      },
      "BasePrice": {
        "type": "object",
        "properties": {
          "effective": {
            "type": "number",
            "format": "float",
            "description": "Current per unit price of product after existing deductions."
          },
          "currency_code": {
            "type": "string",
            "x-not-enum": true,
            "description": "Currency code for all amounts."
          },
          "currency_symbol": {
            "type": "string",
            "description": "Currency symbol of the currncy used for price."
          },
          "marked": {
            "type": "number",
            "format": "float",
            "description": "Original price of product."
          },
          "selling": {
            "type": "number",
            "format": "float"
          }
        },
        "description": "Base price information like currency code, currncy symbol, effctive and marked, selling prices."
      },
      "ArticleAppliedPriceAdjustment": {
        "type": "object",
        "properties": {
          "adjusted_value": {
            "type": "object",
            "additionalProperties": true,
            "description": "Value of price adjustment created along with destination currency."
          },
          "article_level_distribution": {
            "type": "boolean",
            "description": "Boolean value true if price adjustment is distributed over articles."
          },
          "article_id": {
            "type": "string",
            "description": "Article Id of product."
          },
          "applied_quantity": {
            "type": "integer",
            "format": "int32",
            "description": "Article quantity on which this price adjusment applied."
          },
          "meta": {
            "type": "object",
            "additionalProperties": true,
            "description": "Meta data added in article of price adjustment."
          }
        }
      },
      "ArticlePriceInfo": {
        "type": "object",
        "properties": {
          "base": {
            "$ref": "#/components/schemas/BasePrice"
          },
          "converted": {
            "$ref": "#/components/schemas/BasePrice"
          }
        },
        "description": "Article level price details which includes base and converted prices of article."
      },
      "BaseInfo": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier of entities like brand or seller."
          },
          "name": {
            "nullable": true,
            "type": "string",
            "description": "Name of entities like brand or seller."
          }
        },
        "description": "Basic information which provides basic info like uid of any entity like brand or seller and name of the entity."
      },
      "StoreInfo": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifiers of the store from where product is fulfileld."
          },
          "name": {
            "nullable": true,
            "type": "string",
            "description": "Store name of the store from where the product is fulfiled ."
          },
          "store_code": {
            "nullable": true,
            "type": "string",
            "x-not-enum": true,
            "description": "A unique code or identifier for the store, often used for internal reference."
          }
        },
        "description": "Store information of the store which includes store name, store id and store code."
      },
      "ArticleGiftCard": {
        "type": "object",
        "properties": {
          "gift_price": {
            "type": "number",
            "format": "float32",
            "description": "Gift price amount applied on article."
          },
          "display_text": {
            "nullable": true,
            "type": "string",
            "description": "A gift message for the recipient to be included with the delivery of the order."
          },
          "gift_message": {
            "type": "string",
            "description": "Gift message for the one while receive the delivery of the order with this message."
          },
          "is_gift_applied": {
            "type": "boolean",
            "description": "A flag indicating if the order is a gift."
          }
        },
        "description": "Gift card detail if gift card applied to the product which indicates gift price, gift applicable flag and display message for the gift."
      },
      "ProductArticle": {
        "type": "object",
        "properties": {
          "seller_identifier": {
            "nullable": true,
            "type": "string",
            "description": "List of identifiers used by sellers for the product size."
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "description": "Quantity of the article added in cart."
          },
          "seller": {
            "$ref": "#/components/schemas/BaseInfo"
          },
          "cart_item_meta": {
            "type": "object",
            "additionalProperties": true,
            "description": "Meta details of the article added from cart."
          },
          "parent_item_identifiers": {
            "type": "object",
            "additionalProperties": true,
            "description": "Fields to determine parent product of the product."
          },
          "is_gift_visible": {
            "type": "boolean",
            "description": "Whether the product can be purchased as a gift. It is true if the product is available for gifting and false otherwise."
          },
          "uid": {
            "type": "string",
            "description": "This unique identifier is assigned to the specific article. This represents item x size x location."
          },
          "gift_card": {
            "$ref": "#/components/schemas/ArticleGiftCard"
          },
          "product_group_tags": {
            "nullable": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List fot the unique identifier for the product grouping."
          },
          "identifier": {
            "nullable": true,
            "type": "object",
            "additionalProperties": true,
            "description": "Unique identifier of the article."
          },
          "mto_quantity": {
            "type": "integer",
            "format": "int32",
            "description": "Quantity of the product which will specially manufactured as not available in stock."
          },
          "extra_meta": {
            "type": "object",
            "additionalProperties": true,
            "description": "Field to update extra meta of the article in cart."
          },
          "type": {
            "type": "string",
            "enum": [
              "article"
            ],
            "description": "Type of the data sent in response. Possible value is article."
          },
          "_custom_json": {
            "type": "object",
            "additionalProperties": true,
            "description": "Field to update custom json of the article in cart."
          },
          "price": {
            "$ref": "#/components/schemas/ArticlePriceInfo"
          },
          "meta": {
            "type": "object",
            "additionalProperties": true,
            "description": "Article meta data."
          },
          "size": {
            "type": "string",
            "description": "Size of the article added in cart."
          },
          "store": {
            "$ref": "#/components/schemas/StoreInfo"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of article tags."
          },
          "variants": {
            "type": "object",
            "additionalProperties": true,
            "description": "Product variant responses, each detailing a specific variant."
          }
        },
        "description": "Product store information of the product added in cart."
      },
      "CartProductIdentifer": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "description": "Article idenfier generated by cart."
          }
        },
        "description": "Product identifiers uniquely generated by cart to uniquely identify the product in cart."
      },
      "PromoMeta": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Loyalty points message denotes how much loyalty points and applied and how much left with the user."
          }
        },
        "description": "Loyalty points message data."
      },
      "ChargesAmount": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "float",
            "description": "This is the value of amount added."
          },
          "currency": {
            "type": "string",
            "description": "This is destination currency of value."
          }
        },
        "description": "Charges amount data which deffently denotes amount of charges in seller currency and customer currency."
      },
      "Charges": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": true,
            "description": "Meta data realted to charges price adjustment."
          },
          "amount": {
            "$ref": "#/components/schemas/ChargesAmount"
          },
          "name": {
            "type": "string",
            "description": "Name of the charge applied."
          },
          "allow_refund": {
            "type": "boolean",
            "description": "Whether refund is allowed or not for the charge."
          },
          "code": {
            "type": "string",
            "description": "Code of the charge applied."
          },
          "type": {
            "type": "string",
            "description": "Type of the charge applied."
          }
        },
        "description": "Charges information which denotes types of charges and amount of charge applied to that product in cart."
      },
      "ProductPrice": {
        "type": "object",
        "properties": {
          "marked": {
            "type": "number",
            "format": "float",
            "description": "Maximum price of the product ."
          },
          "add_on": {
            "type": "number",
            "format": "float",
            "description": "Price before promotion and coupon amount applied for calculation."
          },
          "currency_code": {
            "type": "string",
            "x-not-enum": true,
            "description": "Currency code of the price defined for the product."
          },
          "currency_symbol": {
            "type": "string",
            "description": "Currency symbol of the price defined for the product."
          },
          "effective": {
            "type": "number",
            "format": "float",
            "description": "Selling price of the product."
          },
          "selling": {
            "type": "number",
            "format": "float",
            "description": "Selling price of the product."
          },
          "selling_price": {
            "type": "number",
            "format": "float"
          }
        },
        "description": "Per quantity price of the product ."
      },
      "ProductPriceInfo": {
        "type": "object",
        "properties": {
          "base": {
            "$ref": "#/components/schemas/ProductPrice"
          },
          "converted": {
            "$ref": "#/components/schemas/ProductPrice"
          }
        },
        "description": "Price of single quantity product for seller currency and customer currency."
      },
      "ProductPricePerUnit": {
        "type": "object",
        "properties": {
          "currency_symbol": {
            "type": "string",
            "description": "Currency symbol of the price defined for the product."
          },
          "selling_price": {
            "type": "number",
            "format": "float",
            "description": "Selling price of the product ."
          },
          "currency_code": {
            "type": "string",
            "x-not-enum": true,
            "description": "Currency code of the price defined for the product."
          },
          "add_on": {
            "type": "number",
            "format": "float",
            "description": "Price before promotion and coupon amount applied for calculation."
          },
          "effective": {
            "type": "number",
            "format": "float",
            "description": "Selling price of the product ."
          },
          "marked": {
            "type": "number",
            "format": "float",
            "description": "Maximum price of the product ."
          }
        },
        "description": "Per quantity price of the product ."
      },
      "ProductPricePerUnitInfo": {
        "type": "object",
        "properties": {
          "base": {
            "$ref": "#/components/schemas/ProductPricePerUnit"
          },
          "converted": {
            "$ref": "#/components/schemas/ProductPricePerUnit"
          }
        },
        "description": "Price of single quantity product for seller currency and customer currency."
      },
      "ProductAvailabilitySize": {
        "type": "object",
        "properties": {
          "display": {
            "type": "string",
            "description": "Display size of the product."
          },
          "value": {
            "type": "string",
            "description": "Actual value of the size."
          },
          "is_available": {
            "type": "boolean",
            "description": "Available flag for the size of the product if that is available."
          }
        },
        "description": "Product sizes availability."
      },
      "ProductAvailability": {
        "type": "object",
        "properties": {
          "out_of_stock": {
            "type": "boolean",
            "description": "Denotes if the product is available in stock."
          },
          "deliverable": {
            "type": "boolean",
            "description": "Deliverable flag denotes if the product is deliverable or not."
          },
          "available_sizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductAvailabilitySize"
            },
            "description": "Product sizes availability."
          },
          "is_valid": {
            "type": "boolean",
            "description": "Valid flag for the product if the product added in cart is valid to place the order."
          },
          "other_store_quantity": {
            "type": "integer",
            "format": "int32",
            "description": "Quantity of the product available on other store."
          },
          "sizes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "All sizes of the product."
          }
        },
        "description": "Availability information of the product like deliverable, out of stock, valid product etc."
      },
      "ActionQuery": {
        "type": "object",
        "properties": {
          "product_slug": {
            "type": "array",
            "description": "Contains list of product slug.",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Action query schema which includes list of product slugs."
      },
      "ProductActionParams": {
        "type": "object",
        "description": "Parameters of the redirection page",
        "properties": {
          "slug": {
            "type": "array",
            "description": "Unique product url name generated via product name and other meta data.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ProductActionPage": {
        "type": "object",
        "description": "Redirection Page details from item in cart",
        "properties": {
          "type": {
            "type": "string",
            "description": "Entity of page to be redirected on click"
          },
          "params": {
            "$ref": "#/components/schemas/ProductActionParams"
          }
        }
      },
      "ProductAction": {
        "type": "object",
        "properties": {
          "query": {
            "$ref": "#/components/schemas/ActionQuery"
          },
          "url": {
            "type": "string",
            "description": "Url of the product to render the product"
          },
          "type": {
            "type": "string",
            "description": "Type of action."
          },
          "page": {
            "$ref": "#/components/schemas/ProductActionPage"
          }
        },
        "description": "Schema of Action Object to render the product."
      },
      "Tags": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "object",
            "additionalProperties": true,
            "description": "Tags is a lable or batch that is attached to a product in cart."
          }
        },
        "description": "List of labels or batches attached to a product in cart."
      },
      "ProductImage": {
        "type": "object",
        "properties": {
          "secure_url": {
            "type": "string",
            "description": "Secured url of the product image."
          },
          "aspect_ratio": {
            "type": "string",
            "description": "Aspect ratio of the product image."
          },
          "url": {
            "type": "string",
            "description": "Bucket link url for product image."
          }
        },
        "description": "Product images data in different formats."
      },
      "CategoryInfo": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "integer",
            "format": "int32",
            "description": "Product Category Id."
          },
          "name": {
            "type": "string",
            "description": "Category name of the product ."
          }
        },
        "description": "Category information schema which denotes category name and category id."
      },
      "CartProduct": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "description": "Unique product url name generated via product name and other meta data."
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductImage"
            },
            "description": "Product Images urls of different types like secure url, aspect ration url and url."
          },
          "teaser_tag": {
            "nullable": true,
            "type": "object",
            "additionalProperties": true,
            "description": "Teaser tag or short promotional phrase for the product."
          },
          "brand": {
            "$ref": "#/components/schemas/BaseInfo"
          },
          "action": {
            "$ref": "#/components/schemas/ProductAction"
          },
          "uid": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier of the product in cart."
          },
          "tags": {
            "nullable": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Products tags that are added to each product to identify the set of products."
          },
          "_custom_json": {
            "type": "object",
            "additionalProperties": true,
            "description": "Field to add custom json of the product in cart."
          },
          "type": {
            "nullable": true,
            "type": "string",
            "description": "Type of product in cart."
          },
          "name": {
            "type": "string",
            "description": "Product name of the product in cart which is defined on platform."
          },
          "item_code": {
            "type": "string",
            "nullable": true,
            "x-not-enum": true,
            "description": "Product code of the product while defining product on platform."
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryInfo"
            },
            "description": "Product category information which incldes category name and category id."
          },
          "attributes": {
            "type": "object",
            "nullable": true,
            "additionalProperties": true,
            "description": "Product attributes defined on platform."
          }
        },
        "description": "Cart product data structure which includes product data as action, attributes, brand, categoreis,, images, item code, tags, item id, item name, etc."
      },
      "CouponDetails": {
        "type": "object",
        "description": "Coupon details Schema.",
        "properties": {
          "display": {
            "type": "string",
            "description": "label of the coupon in a human-readable format."
          },
          "code": {
            "type": "string",
            "description": "The actual coupon code used."
          },
          "currency_symbol": {
            "type": "string",
            "description": "The symbol of the currency for the discount"
          },
          "currency_code": {
            "type": "string",
            "x-not-enum": true,
            "description": "The ISO 4217 currency code associated with the discount."
          },
          "value": {
            "type": "number",
            "description": "The discount amount applied using the coupon."
          }
        }
      },
      "ParentItemIdentifiers": {
        "type": "object",
        "properties": {
          "identifier": {
            "nullable": true,
            "type": "string"
          },
          "parent_item_size": {
            "nullable": true,
            "type": "string"
          },
          "parent_item_id": {
            "nullable": true,
            "type": "string"
          }
        }
      },
      "CartItemMOQ": {
        "type": "object",
        "properties": {
          "increment_unit": {
            "nullable": true,
            "type": "number",
            "format": "int32"
          },
          "maximum": {
            "nullable": true,
            "type": "number",
            "format": "int32"
          },
          "minimum": {
            "nullable": true,
            "type": "number",
            "format": "int32"
          }
        }
      },
      "CartItemCustomOrder": {
        "type": "object",
        "properties": {
          "is_custom_order": {
            "type": "boolean"
          },
          "manufacturing_time": {
            "type": "number",
            "format": "int32"
          },
          "manufacturing_time_unit": {
            "type": "string"
          }
        }
      },
      "CartProductInfo": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "integer",
            "format": "int32",
            "description": "Quantity of the product added in cart."
          },
          "product": {
            "$ref": "#/components/schemas/CartProduct"
          },
          "product_ean_id": {
            "type": "string",
            "description": "European Article Number of the product (limited upto 50 EAN identifier in a single request)."
          },
          "parent_item_identifiers": {
            "type": "object",
            "additionalProperties": true,
            "description": "Parent item information of the product which identifies the parent of the product in cart."
          },
          "is_set": {
            "nullable": true,
            "type": "boolean",
            "description": "Whether or not the product is a set of items."
          },
          "article": {
            "$ref": "#/components/schemas/ProductArticle"
          },
          "promotions_applied": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppliedPromotion"
            },
            "description": "List of applicable promotion for the product in cart."
          },
          "delivery_promise": {
            "$ref": "#/components/schemas/ShipmentPromise"
          },
          "key": {
            "type": "string",
            "description": "The attribute key associated with the size."
          },
          "coupon": {
            "$ref": "#/components/schemas/CouponDetails"
          },
          "bulk_offer": {
            "type": "object",
            "additionalProperties": true,
            "description": "Bulk offer information for the product which denotes if any bulk offer is applied to the product in cart."
          },
          "price_adjustment_applied": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArticleAppliedPriceAdjustment"
            }
          },
          "price": {
            "$ref": "#/components/schemas/ProductPriceInfo"
          },
          "coupon_message": {
            "type": "string",
            "description": "Message for the coupon denotes which coupon is applied and empty if not applied."
          },
          "identifiers": {
            "$ref": "#/components/schemas/CartProductIdentifer"
          },
          "message": {
            "type": "string",
            "description": "Product level message which denotes error information to display over the product in cart."
          },
          "discount": {
            "type": "string",
            "description": "Discount amount of the product in cart."
          },
          "availability": {
            "$ref": "#/components/schemas/ProductAvailability"
          },
          "moq": {
            "$ref": "#/components/schemas/CartItemMOQ"
          },
          "price_per_unit": {
            "$ref": "#/components/schemas/ProductPriceInfo"
          },
          "promo_meta": {
            "$ref": "#/components/schemas/PromoMeta"
          },
          "custom_order": {
            "$ref": "#/components/schemas/CartItemCustomOrder"
          },
          "charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Charges"
            },
            "description": "Charges information which denotes types of charges and amount of charge applied to that product in cart."
          },
          "seller_count": {
            "type": "number",
            "description": "Number of sellers offering the product."
          },
          "allow_remove": {
            "type": "boolean",
            "description": "If true, the product is allowed to be removed from the cart."
          },
          "auto_add_to_cart": {
            "type": "boolean",
            "description": "In case of bundle product this product is automatically added with parent product if true."
          },
          "discount_meta": {
            "$ref": "#/components/schemas/DiscountMeta"
          }
        },
        "required": [
          "identifiers"
        ],
        "description": "Product information of the products in cart which includes article information, charges applied, coupon data, delivery promise, discount etc."
      },
      "DiscountMeta": {
        "type": "object",
        "description": "Holds information about the discount countdown timer for a product.",
        "properties": {
          "timer": {
            "type": "boolean",
            "description": "Determines whether the discount countdown is visible or not.",
            "example": true
          },
          "start_timer_in_minutes": {
            "type": "number",
            "description": "The time in minutes before the discount ends when the countdown timer should start.",
            "example": 70
          },
          "start": {
            "type": "string",
            "description": "The start time of the live discount.",
            "example": "2023-07-31T12:40:00.000Z"
          },
          "end": {
            "type": "string",
            "description": "The end time of the live discount.",
            "example": "2023-07-31T18:30:00.000Z"
          }
        },
        "example": {
          "timer": true,
          "start_timer_in_minutes": 67,
          "start": "2022-05-03T10:00:00.000Z",
          "end": "2022-05-04T11:02:00.000Z"
        }
      },
      "PriceAdjustmentApplied": {
        "type": "object",
        "properties": {
          "article_id": {
            "type": "string"
          },
          "adjusted_value": {
            "type": "object",
            "additionalProperties": true
          },
          "applied_quantity": {
            "type": "number"
          },
          "meta": {
            "type": "object",
            "additionalProperties": true
          },
          "article_level_distribution": {
            "type": "boolean"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "CouponBreakup": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true,
            "description": "Coupon Title of the coupon applied denotes name of the coupon."
          },
          "max_discount_value": {
            "type": "number",
            "format": "float",
            "description": "Maximum discount value of the coupon applied to cart."
          },
          "value": {
            "type": "number",
            "format": "float",
            "description": "Coupon value of the coupon applied to cart."
          },
          "is_applied": {
            "type": "boolean",
            "description": "Applied flag which denotes if any coupon is applied to cart."
          },
          "uid": {
            "nullable": true,
            "type": "string",
            "description": "Unique identifier of the coupon applied to cart."
          },
          "coupon_type": {
            "type": "string",
            "nullable": true,
            "x-not-enum": true,
            "description": "Type of the coupon applied to cart."
          },
          "sub_title": {
            "type": "string",
            "nullable": true,
            "description": "Coupon subtitle of the coupon applied to cart which is used to display."
          },
          "coupon_value": {
            "type": "number",
            "format": "float",
            "description": "Value of the coupon applied to cart."
          },
          "code": {
            "type": "string",
            "description": "Coupon code of the coupon applied."
          },
          "type": {
            "type": "string",
            "description": "Type of the coupon applied to cart."
          },
          "minimum_cart_value": {
            "type": "number",
            "format": "float",
            "description": "Minumum cart value of cart after which the coupon can be applied."
          },
          "message": {
            "type": "string",
            "description": "Coupon message of the coupon applied to cart."
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Coupon description of the coupon applied to cart."
          }
        },
        "description": "Coupon price breakup details which includes coupon code, coupon type, coupon value, coupon description, coupn message etc."
      },
      "DisplayBreakup": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Key of the price like total_mrp, total, subtotal etc."
          },
          "value": {
            "type": "number",
            "format": "float",
            "description": "Numeric value of the price."
          },
          "currency_code": {
            "type": "string",
            "x-not-enum": true,
            "description": "Currency code for the price ."
          },
          "currency_symbol": {
            "type": "string",
            "description": "Currency symbol for the price."
          },
          "display": {
            "type": "string",
            "description": "Display key field that to be shown against the value."
          },
          "message": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of message at price level to be displayed."
          },
          "original": {
            "type": "number",
            "format": "float32"
          },
          "attr": {
            "type": "string"
          },
          "meta": {
            "type": "object",
            "additionalProperties": true
          },
          "preset": {
            "type": "number",
            "description": "Value for the price which is set from platform if applicable."
          }
        },
        "description": "Display price breakup schema denotes price currency, key, value,message to display as breakup on UI."
      },
      "LoyaltyPoints": {
        "type": "object",
        "properties": {
          "is_applied": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether the loyalty points are applied on the cart ."
          },
          "total": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "Total loyalty points available with user."
          },
          "applicable": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "Whether the loyalty points are applicable for the cart ."
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Description for loyalty points."
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Loyalty points data for the user cart."
      },
      "RawBreakup": {
        "type": "object",
        "properties": {
          "promotion": {
            "type": "number",
            "format": "float"
          },
          "coupon": {
            "type": "number",
            "format": "float",
            "description": "Coupon amount applied to cart."
          },
          "gst_charges": {
            "type": "number",
            "format": "float",
            "description": "GST charges applied on cart."
          },
          "mrp_total": {
            "type": "number",
            "format": "float",
            "description": "Maximum price total amount of all products in cart."
          },
          "fynd_cash": {
            "type": "number",
            "format": "float",
            "description": "Loyalty points applied on cart."
          },
          "vog": {
            "type": "number",
            "format": "float",
            "description": "Total value of goods after all discount, coupons and promotion applied of all products in cart."
          },
          "gift_card": {
            "type": "number",
            "format": "float",
            "description": "Gift cart amount applied on cart."
          },
          "cod_charge": {
            "type": "number",
            "format": "float",
            "description": "Cod charge value applied to cart. This is applied when user select payment mode as COD."
          },
          "total": {
            "type": "number",
            "format": "float",
            "description": "Total payable amount by the customer."
          },
          "discount": {
            "type": "number",
            "format": "float",
            "description": "Discount amount recieved on cart."
          },
          "delivery_charge": {
            "type": "number",
            "format": "float",
            "description": "Delivery charge applied to cart."
          },
          "you_saved": {
            "type": "number",
            "format": "float",
            "description": "Total amount will be saved if customer places the order."
          },
          "subtotal": {
            "type": "number",
            "format": "float",
            "description": "Selling price amount of all products in cart."
          },
          "sub_total": {
            "type": "number",
            "format": "float"
          },
          "convenience_fee": {
            "type": "number",
            "format": "float",
            "description": "Convenience fee amount applied to cart."
          },
          "total_charge": {
            "type": "number",
            "format": "float",
            "description": "Total amount of charges applied on cart."
          },
          "mop_total": {
            "type": "number",
            "format": "float",
            "description": "Total of payment modes by which payment is going to be done."
          }
        },
        "description": "Price raw breakup of the cart which denotes cod charge, convinience fee, coupon amount, delivery charge, discount, loyalty points, gift card, gst charge, etc."
      },
      "CartBreakup": {
        "type": "object",
        "properties": {
          "coupon": {
            "$ref": "#/components/schemas/CouponBreakup"
          },
          "display": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DisplayBreakup"
            },
            "description": "List of breakup data which is used to display the breakup to the customer like MRP total, Discount, Sub total, coupon value, promotion value and final total."
          },
          "loyalty_points": {
            "$ref": "#/components/schemas/LoyaltyPoints"
          },
          "raw": {
            "$ref": "#/components/schemas/RawBreakup"
          }
        },
        "description": "Price breakup of cart which denotes different values like coupon, display, and loyalty points."
      },
      "CartCurrency": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Currency code defined by ISO 4217:2015."
          },
          "symbol": {
            "type": "string",
            "description": "Currency symbol for currency of user cart prices."
          }
        },
        "description": "Currency data of the cart for prices."
      },
      "CartCouponMedias": {
        "type": "object",
        "properties": {
          "alt": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "CartDetailCoupon": {
        "type": "object",
        "properties": {
          "cashback_amount": {
            "type": "number",
            "format": "float",
            "description": "Fields denotes cashback amount applied to cart."
          },
          "cashback_message_primary": {
            "type": "string",
            "description": "Primary cashback message for coupon applied to cart."
          },
          "cashback_message_secondary": {
            "type": "string",
            "description": "Secondary cashback message for coupon applied to cart."
          },
          "coupon_code": {
            "type": "string",
            "x-not-enum": true,
            "description": "Coupon code to be applied to cart."
          },
          "coupon_description": {
            "type": "string",
            "description": "Coupon description of the coupon applied to cart."
          },
          "coupon_id": {
            "nullable": true,
            "type": "string",
            "description": "Unique identifier of the coupon applied to cart."
          },
          "coupon_subtitle": {
            "type": "string",
            "description": "Coupon subtitle of the coupon applied to cart."
          },
          "coupon_title": {
            "type": "string",
            "description": "Coupon Title of the coupon applied."
          },
          "coupon_type": {
            "type": "string",
            "x-not-enum": true,
            "description": "Type of the coupon applied to cart."
          },
          "coupon_value": {
            "type": "number",
            "format": "float",
            "description": "Value of the coupon applied to cart."
          },
          "discount": {
            "type": "number",
            "format": "float",
            "description": "Total discount earned from coupon applied to cart."
          },
          "is_applied": {
            "type": "boolean",
            "description": "Flag to determine where the coupon is applied to cart or not."
          },
          "is_valid": {
            "type": "boolean",
            "description": "Determine where the coupon applied to cart is valid."
          },
          "maximum_discount_value": {
            "type": "number",
            "format": "float",
            "description": "Maximum discount value of the coupon applied to cart."
          },
          "message": {
            "type": "string",
            "description": "Coupon message of the coupon applied to cart."
          },
          "minimum_cart_value": {
            "type": "number",
            "format": "float",
            "description": "Minimum cart value of the coupon applied to cart."
          },
          "medias": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartCouponMedias"
            }
          }
        },
        "description": "Cart level coupon data which denoes cashback amount, coupon code, coupon description, coupon sub title, and coupon value."
      },
      "ChargesThreshold": {
        "type": "object",
        "properties": {
          "charges": {
            "type": "number",
            "format": "float",
            "description": "Charges amount to be applied on cart."
          },
          "threshold": {
            "type": "number",
            "format": "float",
            "description": "Threshold of cart value on which the charge should be applied ."
          }
        },
        "description": "Charges threshhold data which denotes how much charge will be applied on cart value threshold."
      },
      "DeliveryChargesConfig": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Delivery charge enabled for the cart or not."
          },
          "charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChargesThreshold"
            },
            "description": "Charges applicable based on threshold."
          }
        },
        "description": "Delivery charge config which includes charges applicable condition and enabled flag."
      },
      "CartCommonConfig": {
        "type": "object",
        "properties": {
          "delivery_charges_config": {
            "$ref": "#/components/schemas/DeliveryChargesConfig"
          }
        },
        "description": "Cart common config which determines delivery charge config."
      },
      "CartAppliedPriceAdjustment": {
        "type": "object",
        "properties": {
          "remove_articles": {
            "type": "boolean",
            "description": "Boolean value indicating if articles should be removed from cart."
          },
          "adjusted_value": {
            "type": "object",
            "additionalProperties": true,
            "description": "Value of price adjustment created along with destination currency."
          },
          "article_level_distribution": {
            "type": "boolean",
            "description": "Boolean value true if price adjustment is distributed over articles."
          },
          "auto_remove": {
            "type": "boolean",
            "description": "Boolean value indicating if auto remove is enabled."
          },
          "applied_articles_ids": {
            "type": "array",
            "description": "List of article IDs where the adjustment is applied.",
            "items": {
              "type": "string"
            }
          },
          "message": {
            "type": "string",
            "description": "Message associated with the Price adjustment."
          },
          "_type": {
            "type": "string",
            "enum": [
              "charge",
              "discount",
              "mop",
              "selling_price",
              "delivery_charge"
            ],
            "description": "Type of the Price Adjustment."
          },
          "meta": {
            "type": "object",
            "additionalProperties": true,
            "description": "Meta data added in article of price adjustment."
          },
          "restrictions": {
            "type": "object",
            "additionalProperties": true,
            "description": "It contains all the restrictions applied on price adjustments."
          },
          "_id": {
            "type": "string",
            "description": "ID of the price Adjustment."
          }
        }
      },
      "CustomCart": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of custom cart config."
          },
          "cart_name": {
            "type": "string",
            "description": "Name of custom cart."
          },
          "cart_type": {
            "type": "string",
            "x-not-enum": true,
            "description": "Type of custom cart."
          },
          "is_universal": {
            "type": "boolean",
            "description": "By default all carts are universal, will be false for custom cart."
          }
        }
      },
      "CartDetailResult": {
        "type": "object",
        "properties": {
          "cart_id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier of the user cart."
          },
          "uid": {
            "type": "string",
            "description": "Unique identifier of the user cart."
          },
          "coupon_text": {
            "type": "string",
            "description": "Coupon text of coupon applied on cart."
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of the user cart."
          },
          "delivery_promise": {
            "$ref": "#/components/schemas/ShipmentPromise"
          },
          "comment": {
            "type": "string",
            "description": "Comment message to be added in user cart."
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartProductInfo"
            },
            "description": "Items data list in user cart that includes item id, item size, store id, available sizes and rest of the item related data."
          },
          "payment_selection_lock": {
            "$ref": "#/components/schemas/PaymentSelectionLock"
          },
          "delivery_charge_info": {
            "type": "string",
            "description": "Delivery charge information message of the shipment."
          },
          "common_config": {
            "$ref": "#/components/schemas/CartCommonConfig"
          },
          "coupon": {
            "$ref": "#/components/schemas/CartDetailCoupon"
          },
          "restrict_checkout": {
            "type": "boolean",
            "description": "Restrict checkout flag to restrict the checkout process."
          },
          "message": {
            "type": "string",
            "description": "Message of the get cart detail API response."
          },
          "notification": {
            "type": "object",
            "additionalProperties": true,
            "description": "Notification object which denotes notification data for user cart."
          },
          "staff_user_id": {
            "type": "string",
            "description": "Staff employee user id if cart is created by staff employee for the customer."
          },
          "success": {
            "type": "boolean",
            "description": "Success flag of get cart detail API response."
          },
          "breakup_values": {
            "$ref": "#/components/schemas/CartBreakup"
          },
          "is_valid": {
            "type": "boolean",
            "description": "Cart validity flag determines the if the response is valid or not."
          },
          "currency": {
            "$ref": "#/components/schemas/CartCurrency"
          },
          "checkout_mode": {
            "type": "string",
            "description": "Checkout mode of user cart."
          },
          "last_modified": {
            "type": "string",
            "description": "Last modified timestamp of cart."
          },
          "price_adjustment_applied": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartAppliedPriceAdjustment"
            }
          },
          "buy_now": {
            "type": "boolean",
            "description": "Buy now flag for the cart which denotes user is doing fast checkout for the cart using buy now."
          },
          "gstin": {
            "nullable": true,
            "type": "string",
            "description": "GSTIN added in user cart."
          },
          "applied_promo_details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppliedPromotion"
            },
            "description": "List of applied promotions data to cart which includes promotion id, promotion name, offer text, description, buy rules, discount rules and promotion type."
          },
          "pan_no": {
            "nullable": true,
            "type": "string",
            "description": "Permanent Account Number of the user."
          },
          "custom_cart": {
            "$ref": "#/components/schemas/CustomCart"
          },
          "is_pan_received": {
            "type": "boolean",
            "description": "If the customer provides a PAN number, set it to true."
          },
          "pan_config": {
            "type": "object",
            "additionalProperties": true,
            "description": "Pan card config states at what condition user should enter the pan card."
          },
          "custom_cart_meta": {
            "type": "object",
            "additionalProperties": true,
            "description": "Custom meta details added cart checkout API payload ."
          }
        },
        "description": "Get cart detail API response schema which includes applied promo details, breakup values, buy_now, cart id, checkout mode, comment common config, coupon, coupon text, gstin etc."
      },
      "ArticleAssignment": {
        "type": "object",
        "properties": {
          "level": {
            "type": "string",
            "nullable": true
          },
          "strategy": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AddProductCart": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "integer",
            "format": "int32",
            "description": "Field to specify the product quantity that user wants to buy."
          },
          "item_size": {
            "type": "string",
            "description": "Field to determine size of the product."
          },
          "seller_id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique idetifier of the seller selected by the user from which user want to buy a product ."
          },
          "price_factory_type_id": {
            "type": "string"
          },
          "parent_item_identifiers": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "description": "Fields to determine parent product of the product."
          },
          "product_group_tags": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Field to specify the product groups of the product that the user is trying to add in cart."
          },
          "article_id": {
            "type": "string",
            "description": "Unique identifier of an article ."
          },
          "article_assignment": {
            "$ref": "#/components/schemas/ArticleAssignment"
          },
          "store_id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier of the store selected by the user from which user want to buy a product."
          },
          "display": {
            "type": "string",
            "description": "Display field at article level ."
          },
          "item_id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier to identify product."
          },
          "extra_meta": {
            "type": "object",
            "additionalProperties": true,
            "description": "Extra meta data to be added at article level while add items to cart."
          },
          "_custom_json": {
            "type": "object",
            "additionalProperties": true,
            "description": "Field to add custom json at article level while add items to cart ."
          },
          "meta": {
            "type": "object",
            "additionalProperties": true,
            "description": "Field to add meta data at article level."
          },
          "pos": {
            "type": "boolean",
            "description": "Filed to determine whether user is making request from pos or not."
          },
          "seller_identifier": {
            "type": "string",
            "description": "Add items using seller identifier for store os."
          }
        },
        "description": "Items data list to be added in cart which includes item id, article id, item size, meta, parent item identifier, article assignment and custom json."
      },
      "AddCartPayload": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddProductCart"
            },
            "description": "List of items detail which need to be added to cart like item id, item size, and item quantity."
          },
          "new_cart": {
            "type": "boolean",
            "description": "Field to create to new cart whille user adds item to cart."
          }
        },
        "description": "Add to cart request schema which has items data to be added in cart."
      },
      "AddCartDetailResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "True if all items are added successfully. False if partially added or not added."
          },
          "cart": {
            "$ref": "#/components/schemas/CartDetailResult"
          },
          "partial": {
            "type": "boolean",
            "description": "When adding multiple items check if all added. True if only few are added."
          },
          "message": {
            "type": "string",
            "description": "Message of add to cart API response."
          },
          "result": {
            "type": "object",
            "additionalProperties": true
          }
        },
        "description": "Add cart detail API schema which specifies cart data, response message and success flag."
      },
      "AddCartDetailResultV2": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "True if all items are added successfully. False if partially added or not added."
          },
          "cart_id": {
            "nullable": true,
            "type": "string",
            "description": "Unique identifier of the user cart."
          },
          "partial": {
            "type": "boolean",
            "description": "When adding multiple items check if all added. True if only few are added."
          },
          "message": {
            "type": "string",
            "description": "Message of add to cart API response."
          }
        },
        "description": "Add cart detail API schema which specifies cart_id, response message and success flag."
      },
      "UpdateProductCart": {
        "type": "object",
        "properties": {
          "extra_meta": {
            "type": "object",
            "additionalProperties": true,
            "description": "Field to update extra meta of the product in cart."
          },
          "_custom_json": {
            "type": "object",
            "additionalProperties": true,
            "description": "Field to update custom json of the product in cart."
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "description": "Field to update the quantity of the item in cart."
          },
          "item_size": {
            "type": "string",
            "description": "Field to update the size of the product in cart."
          },
          "item_index": {
            "type": "integer",
            "format": "int32",
            "description": "Item index determines on which index the product falls to be updated."
          },
          "identifiers": {
            "$ref": "#/components/schemas/CartProductIdentifer"
          },
          "article_id": {
            "type": "string",
            "description": "Article id of the product in cart."
          },
          "parent_item_identifiers": {
            "type": "object",
            "additionalProperties": true,
            "description": "Field to update parent product of the item in cart."
          },
          "price_factory_type_id": {
            "type": "string"
          },
          "item_id": {
            "type": "integer",
            "format": "int32",
            "description": "Item id of the product that needs to be updated."
          },
          "meta": {
            "type": "object",
            "additionalProperties": true,
            "description": "Field to update meta of the item in cart."
          }
        },
        "required": [
          "identifiers"
        ],
        "description": "Update cart product request schema details which includes artidcle id, custom json, extra meta, identifiers, item id, item size, item index, meta, parent item identifiers and quantity."
      },
      "FreeGiftItemCreation": {
        "type": "object",
        "properties": {
          "promotion_id": {
            "type": "string",
            "description": "Unique identifier of the free gift promotion."
          },
          "item_id": {
            "type": "string",
            "description": "Unique identifier of the selected free gift item."
          },
          "item_size": {
            "type": "string",
            "description": "Size of the selected free gift item."
          }
        },
        "required": [
          "promotion_id",
          "item_id",
          "item_size"
        ]
      },
      "UpdateCartPayload": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateProductCart"
            },
            "description": "List items data that needs to be updated in cart."
          },
          "free_gift_items": {
            "type": "array",
            "description": "List of free gift items with updated sizes.",
            "items": {
              "$ref": "#/components/schemas/FreeGiftItemCreation"
            }
          },
          "operation": {
            "type": "string",
            "enum": [
              "update_item",
              "remove_item"
            ],
            "description": "Field to determine if item to be removed from cart or it needs to be updated."
          }
        },
        "required": [
          "operation"
        ],
        "description": "Update cart request data that involves items in cart and operation to be performed for items specified."
      },
      "UpdateCartDetailResult": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message of update cart API response."
          },
          "result": {
            "type": "object",
            "additionalProperties": true
          },
          "cart": {
            "$ref": "#/components/schemas/CartDetailResult"
          },
          "success": {
            "type": "boolean",
            "description": "True if all items are added successfully. False if partially added or not added."
          }
        },
        "description": "Update cart detail response schema denotes cart data and message of the update cart API response."
      },
      "DeleteCartDetailResult": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message for delete cart response."
          },
          "success": {
            "type": "boolean",
            "description": "True if cart is archived successfully. False if not archived."
          }
        },
        "description": "Delete cart response which includes message and success flag."
      },
      "CartItemCountResult": {
        "type": "object",
        "properties": {
          "user_cart_items_count": {
            "type": "integer",
            "format": "int32",
            "description": "Item count present in cart."
          }
        },
        "description": "Result schema which defines how many total number of items are in cart."
      },
      "CartItemCountResultV2": {
        "type": "object",
        "properties": {
          "user_all_cart_articles_quantity_count": {
            "type": "integer",
            "format": "int32"
          },
          "user_all_cart_article_count": {
            "type": "integer",
            "format": "int32"
          },
          "custom_cart_count": {
            "type": "object",
            "additionalProperties": true
          },
          "custom_cart_ordered_count": {
            "type": "array",
            "items": {
              "nullable": true,
              "type": "object",
              "additionalProperties": true
            }
          }
        }
      },
      "Coupon": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Coupon Title of the coupon applied denotes name of the coupon."
          },
          "uid": {
            "type": "number",
            "description": "Unique identifier of the coupon."
          },
          "max_discount_value": {
            "type": "number",
            "format": "float",
            "description": "Maximum discount value of the coupon applied to cart."
          },
          "coupon_code": {
            "type": "string",
            "x-not-enum": true,
            "description": "Coupon code of the coupon applied on cart."
          },
          "is_applied": {
            "type": "boolean",
            "description": "Flag to determine where the coupon is applied to cart or not."
          },
          "coupon_type": {
            "type": "string",
            "nullable": true,
            "x-not-enum": true,
            "description": "Type of the coupon applied to cart."
          },
          "expires_on": {
            "type": "string",
            "description": "Message to display to user for expiry of the coupon ."
          },
          "coupon_value": {
            "type": "number",
            "format": "float",
            "description": "Coupon value of the coupon applied to cart."
          },
          "sub_title": {
            "type": "string",
            "description": "Coupon subtitle of the coupon applied to cart which is used to display."
          },
          "minimum_cart_value": {
            "type": "number",
            "format": "float",
            "description": "Minimum cart value of the coupon applied to cart."
          },
          "is_applicable": {
            "type": "boolean",
            "description": "Flag to determine where the coupon is applicable to cart or not."
          },
          "message": {
            "type": "string",
            "description": "Coupon message of the coupon applied to cart."
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Coupon description of the coupon applied to cart."
          },
          "start_date": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "description": "Start date of the coupon when the coupon will be live for the users to apply on cart."
          },
          "end_date": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "description": "End date of the coupon on which the coupon expires."
          },
          "coupon_applicable_message": {
            "type": "string",
            "description": "Message which is used to display to the customer if the coupon is applied successfully."
          },
          "is_bank_offer": {
            "type": "boolean",
            "description": "Bank offer flag for the coupon if the coupon is applicable for only if payment done by bank or mode specified in coupon."
          },
          "offer_text": {
            "type": "string",
            "description": "Offer text of the coupon which highligts coupon offer defined while creating coupon ."
          },
          "coupon_amount": {
            "type": "number",
            "format": "float32",
            "description": "The amount based on cart value."
          },
          "tags": {
            "nullable": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "medias": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartCouponMedias"
            }
          }
        },
        "description": "Coupon data applied on cart that includes coupon code, coupon type, coupon value, description, title, subtitle etc."
      },
      "PageCoupon": {
        "type": "object",
        "properties": {
          "has_next": {
            "type": "boolean",
            "description": "Denotes if next page of coupon is available."
          },
          "current": {
            "type": "integer",
            "format": "int32",
            "description": "Current page number."
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "Total pages of coupon availalbe."
          },
          "total_item_count": {
            "type": "integer",
            "format": "int32",
            "description": "Total coupons are available for the cart."
          },
          "has_previous": {
            "type": "boolean",
            "description": "Denotes if previous page of the coupon is available."
          }
        },
        "description": "Pagination schema for get coupon list available on cart."
      },
      "GetCouponResult": {
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/PageCoupon"
          },
          "available_coupon_list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Coupon"
            },
            "description": "List of available coupon which can be applied on cart."
          }
        },
        "description": "Get coupon list response schema which page information and list of coupons."
      },
      "ApplyCouponPayload": {
        "type": "object",
        "properties": {
          "coupon_code": {
            "type": "string",
            "x-not-enum": true,
            "description": "Coupon code to be applied."
          }
        },
        "required": [
          "coupon_code"
        ],
        "description": "Apply coupon request schema used to apply the coupon that includes cart id and coupon to be applied."
      },
      "OfferPrice": {
        "type": "object",
        "properties": {
          "currency_symbol": {
            "type": "string",
            "description": "Currency symbol for currency."
          },
          "bulk_effective": {
            "type": "number",
            "format": "float",
            "description": "Discounted per unit price for current offer object."
          },
          "currency_code": {
            "type": "string",
            "x-not-enum": true,
            "description": "The currency code for an offer price is the three-letter code that corresponds to the currency in which the offer price is denominated."
          },
          "effective": {
            "type": "integer",
            "format": "int32",
            "description": "The \"effective price\" is the actual price paid by the consumer after accounting for product discounts. It represents the true cost of a product or service after all adjustments have been made."
          },
          "marked": {
            "type": "integer",
            "format": "int32",
            "description": "The price at which the product is sold to the end consumer, typically the original price before discounts."
          }
        },
        "description": "Offer price details of the item includes effective price, selling price, currency and max price."
      },
      "OfferItem": {
        "type": "object",
        "properties": {
          "price": {
            "$ref": "#/components/schemas/OfferPrice"
          },
          "margin": {
            "type": "integer",
            "format": "int32",
            "description": "Percentage value of discount."
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "description": "Quantity on which offer is applicable."
          },
          "best": {
            "type": "boolean",
            "description": "Is true for best offer from all offers present for all sellers."
          },
          "total": {
            "type": "number",
            "format": "float",
            "description": "Total price of offer quantity with discount."
          },
          "auto_applied": {
            "type": "boolean",
            "description": "Whether offer discount is auto applied in cart."
          },
          "type": {
            "type": "string",
            "description": "Type of the offer."
          }
        },
        "description": "Offer Item Details, This consists of margin percentage, price, quantity, offer type and offer price."
      },
      "OfferSeller": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for a seller."
          },
          "name": {
            "type": "string",
            "description": "Name of a seller."
          }
        },
        "description": "Seller details consists of seller uid and seller name."
      },
      "BulkPriceOffer": {
        "type": "object",
        "properties": {
          "offers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OfferItem"
            },
            "description": "Offers is the list of Offer item, which consists of margin percentage, price, quantity, offer type and offer price."
          },
          "seller": {
            "$ref": "#/components/schemas/OfferSeller"
          },
          "article_id": {
            "type": "string",
            "description": "Article Mongo ID"
          }
        },
        "description": "Bulk price offer details which denotes offers list and seller details."
      },
      "BulkPriceResult": {
        "type": "object",
        "properties": {
          "data": {
            "description": "Actual data to be in response consist of offers from multiple seller.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkPriceOffer"
            }
          }
        },
        "description": "Bulk price response schema details consists of offers from multiple seller."
      },
      "RewardPointPayload": {
        "type": "object",
        "properties": {
          "points": {
            "type": "boolean",
            "description": "Points to be applied for cart."
          }
        },
        "required": [
          "points"
        ],
        "description": "Rewards point request details."
      },
      "GeoLocation": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "format": "float",
            "default": 0,
            "description": "Latitude coordinate for address."
          },
          "longitude": {
            "type": "number",
            "format": "float",
            "default": 0,
            "description": "Longitude coordinate for address."
          }
        },
        "description": "Geolocation details for address data."
      },
      "Address": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "nullable": true
          },
          "uid": {
            "type": "integer",
            "nullable": true
          },
          "area": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "pincode": {
            "type": "string",
            "nullable": true
          },
          "landmark": {
            "type": "string",
            "nullable": true
          },
          "area_code": {
            "type": "string",
            "nullable": true,
            "x-not-enum": true
          },
          "address_type": {
            "type": "string",
            "nullable": true,
            "x-not-enum": true
          },
          "country_code": {
            "type": "string",
            "nullable": true,
            "x-not-enum": true
          },
          "area_code_slug": {
            "type": "string",
            "nullable": true
          },
          "delivery_address_id": {
            "type": "integer",
            "nullable": true
          }
        }
      },
      "ValidationConfig": {
        "type": "object",
        "description": "Defines validation rules for user addresses.",
        "properties": {
          "address_max_limit": {
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of addresses a user can have."
          },
          "user_address_count": {
            "type": "integer",
            "format": "int32",
            "description": "The total number of addresses saved by a user."
          }
        },
        "required": [
          "address_max_limit",
          "user_address_count"
        ]
      },
      "GetAddressesResult": {
        "type": "object",
        "properties": {
          "pii_masking": {
            "type": "boolean",
            "description": "Personally Identifiable Information masking flag to denote if the user data in address is masked or not."
          },
          "address": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            },
            "description": "Address description for address data."
          },
          "validation_config": {
            "$ref": "#/components/schemas/ValidationConfig"
          }
        },
        "description": "Fetch address response schema which includes pii masking flag and list of addresses."
      },
      "SaveAddressResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the address."
          },
          "success": {
            "type": "boolean",
            "description": "Success flag of save address Response."
          },
          "is_default_address": {
            "type": "boolean",
            "description": "Default address flag if no address selected then this should be the default address selected."
          },
          "address_id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          }
        },
        "description": "Save address response details, which includes address id, success flag and default address flag."
      },
      "UpdateAddressResult": {
        "type": "object",
        "properties": {
          "is_updated": {
            "type": "boolean",
            "description": "Updated flag for update address operation if the address updated or not."
          },
          "id": {
            "type": "string",
            "description": "ID of an address."
          },
          "success": {
            "type": "boolean",
            "description": "Success flag of update address response."
          },
          "is_default_address": {
            "type": "boolean",
            "description": "Default address flag if no address selected then this should be the default address selected."
          },
          "address_id": {
            "nullable": true,
            "type": "string"
          }
        },
        "description": "Update address response details, includes address id, updated flag and success flag."
      },
      "DeleteAddressResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the address."
          },
          "is_deleted": {
            "type": "boolean",
            "description": "Deleted flag in delete address response states whether the address was deleted or not."
          },
          "address_id": {
            "type": "string"
          }
        },
        "description": "Delete address response, includes address id and deleted flag."
      },
      "SelectCartAddressPayload": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Address is selected by user on which shipment to be delivered."
          },
          "billing_address_id": {
            "type": "string",
            "description": "Billing address id selected by user on which shipment bill to be generated."
          },
          "cart_id": {
            "type": "string",
            "description": "Cart id of the user cart for which the select address operation performed."
          }
        },
        "description": "Select address request schema, includes cart id, address id and billing address id."
      },
      "UpdateCartPaymentPayload": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Cart id of the user cart for which the update cart payment operation performed."
          },
          "payment_identifier": {
            "type": "string",
            "nullable": true,
            "description": "Payment identifier of the payment mode selected to do the payment."
          },
          "address_id": {
            "type": "string",
            "description": "Address id of the user address selected to deliver the shipment."
          },
          "merchant_code": {
            "type": "string",
            "x-not-enum": true,
            "description": "Merchant code of the payment mode selected to do the payment."
          },
          "aggregator_name": {
            "type": "string",
            "description": "Aggregator name of the payment gateway."
          },
          "payment_mode": {
            "type": "string",
            "description": "Payment mode of the payment selected to do the payment."
          }
        },
        "description": "Update cart payment mode request schema to update payment mode by which the payment to be done to process the order, includes cart id, payment identifier, address id, merchant code, aggregator name and payment mode."
      },
      "CouponValidity": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Coupon Title of the coupon applied."
          },
          "next_validation_required": {
            "type": "boolean",
            "nullable": true,
            "description": "Flag for coupon validation required on next page or not."
          },
          "valid": {
            "type": "boolean",
            "description": "Valid flag which denotes if the applied coupon is valid or not."
          },
          "display_message_en": {
            "type": "string",
            "nullable": true,
            "description": "Display message for coupon validity."
          },
          "code": {
            "type": "string",
            "nullable": true,
            "description": "Coupon code of the coupon applied."
          },
          "discount": {
            "type": "number",
            "format": "float",
            "description": "Coupon discount value of the coupon applied."
          }
        },
        "description": "Coupon validity schema which includes coupon title, coupon code, next validation flag, valid flag, error display message and discount of coupon."
      },
      "PaymentCouponValidate": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Success flag of coupon payment mode validity API response."
          },
          "message": {
            "type": "string",
            "description": "Payment mode valid message for coupon."
          },
          "coupon_validity": {
            "$ref": "#/components/schemas/CouponValidity"
          }
        },
        "required": [
          "success"
        ],
        "description": "Payment mode validity details of the coupon which shows coupon is valid for the payment mode or not."
      },
      "ShipmentError": {
        "type": "object",
        "description": "Denotes the various errors in the shipment",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "ShipmentResult": {
        "type": "object",
        "properties": {
          "shipments": {
            "type": "integer",
            "format": "int32",
            "default": 1,
            "description": "Count of shipments that will be shipped."
          },
          "promise": {
            "$ref": "#/components/schemas/ShipmentPromise"
          },
          "order_type": {
            "type": "string",
            "enum": [
              "HomeDelivery",
              "PickAtStore"
            ],
            "description": "Order type of the shipment like pickAtStore or HomeDelivery."
          },
          "box_type": {
            "type": "string",
            "nullable": true,
            "x-not-enum": true,
            "description": "Box type of the shipment in which the shipment will be delivered."
          },
          "shipment_type": {
            "type": "string",
            "x-not-enum": true,
            "description": "Shipment type of the shipment returned in get shipments API like single_shipment or multiple shipment. Single Shipment means 1 item in 1 shipment and vice versa in the other one."
          },
          "dp_options": {
            "type": "object",
            "nullable": true,
            "additionalProperties": true,
            "description": "Delivery partner options that are available to deliver the shipment."
          },
          "dp_id": {
            "type": "string",
            "nullable": true,
            "description": "Delivery partner id of the shipment."
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartProductInfo"
            },
            "description": "Item details in the shipment."
          },
          "fulfillment_type": {
            "type": "string",
            "x-not-enum": true,
            "description": "Fulfilment type of shipment."
          },
          "fulfillment_id": {
            "type": "integer",
            "format": "int32",
            "description": "Fulfilment id of the shipment."
          },
          "meta": {
            "$ref": "#/components/schemas/ShipmentMeta"
          },
          "logistics_meta": {
            "$ref": "#/components/schemas/ShipmentLogisticsMeta"
          },
          "error": {
            "$ref": "#/components/schemas/ShipmentError"
          }
        },
        "description": "Shipment Response details of the cart which how many shipments will be shipped for the items in cart and gives infoormation about box type, order type, promise of each shipment and delivery partner details."
      },
      "ShipmentMeta": {
        "type": "object",
        "properties": {
          "packaging_name": {
            "nullable": true,
            "type": "string"
          },
          "dimension": {
            "$ref": "#/components/schemas/ShipmentMetaDimension"
          },
          "assign_dp_from_sb": {
            "nullable": true,
            "type": "string"
          },
          "dp_sort_key": {
            "nullable": true,
            "type": "string"
          },
          "shipment_weight": {
            "nullable": true,
            "type": "number"
          },
          "shipment_volumetric_weight": {
            "nullable": true,
            "type": "number"
          },
          "shipment_chargeable_weight": {
            "nullable": true,
            "type": "number"
          },
          "shipping_zone": {
            "nullable": true,
            "type": "string"
          },
          "debug": {
            "nullable": true,
            "type": "string"
          }
        }
      },
      "ShipmentMetaDimension": {
        "type": "object",
        "properties": {
          "height": {
            "type": "number",
            "description": "The height of the product.",
            "example": 10.25
          },
          "length": {
            "type": "number",
            "description": "The length of the product.",
            "example": 20.5
          },
          "width": {
            "type": "number",
            "description": "The width of the product.",
            "example": 15
          }
        }
      },
      "ShipmentLogisticsMeta": {
        "type": "object",
        "properties": {
          "account_options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShipmentLogisticsMetaAccount"
            }
          },
          "account_info": {
            "type": "object",
            "additionalProperties": true
          },
          "dp_sort_key": {
            "nullable": true,
            "type": "string"
          },
          "assign_dp_from_sb": {
            "nullable": true,
            "type": "string"
          }
        }
      },
      "ShipmentLogisticsMetaAccount": {
        "type": "object",
        "properties": {
          "name": {
            "nullable": true,
            "type": "string"
          },
          "display_name": {
            "nullable": true,
            "type": "string"
          },
          "fm_priority": {
            "nullable": true,
            "type": "number"
          },
          "lm_priority": {
            "nullable": true,
            "type": "number"
          },
          "rvp_priority": {
            "nullable": true,
            "type": "number"
          },
          "type": {
            "nullable": true,
            "type": "string"
          },
          "sub_type": {
            "nullable": true,
            "type": "string",
            "x-not-enum": true
          },
          "parent_id": {
            "nullable": true,
            "type": "string"
          },
          "is_active": {
            "nullable": true,
            "type": "boolean"
          },
          "payment_mode": {
            "nullable": true,
            "type": "string"
          },
          "assign_dp_from_sb": {
            "nullable": true,
            "type": "string"
          },
          "internal_account_id": {
            "nullable": true,
            "type": "string"
          },
          "external_account_id": {
            "nullable": true,
            "type": "string"
          },
          "f_priority": {
            "nullable": true,
            "type": "number"
          },
          "r_priority": {
            "nullable": true,
            "type": "number"
          },
          "dp_shipping_charges": {
            "nullable": true,
            "type": "number"
          },
          "qc_enabled": {
            "nullable": true,
            "type": "boolean"
          },
          "area_code": {
            "$ref": "#/components/schemas/ShipmentLogisticsMetaAccountAreaCode"
          },
          "operations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dp_tat": {
            "$ref": "#/components/schemas/ShipmentLogisticsMetaAccountDpTat"
          }
        }
      },
      "ShipmentLogisticsMetaAccountAreaCode": {
        "type": "object",
        "properties": {
          "from_pincode": {
            "nullable": true,
            "type": "string"
          },
          "to_pincode": {
            "nullable": true,
            "type": "string"
          },
          "source": {
            "nullable": true,
            "type": "string"
          },
          "destination": {
            "nullable": true,
            "type": "string"
          }
        }
      },
      "ShipmentLogisticsMetaAccountDpTat": {
        "type": "object",
        "properties": {
          "min": {
            "nullable": true,
            "type": "number"
          },
          "max": {
            "nullable": true,
            "type": "number"
          }
        }
      },
      "CartShipmentsResult": {
        "type": "object",
        "properties": {
          "cart_id": {
            "type": "integer",
            "format": "int32",
            "description": "Cart id of the user cart."
          },
          "uid": {
            "type": "string",
            "description": "Cart id of the user cart."
          },
          "coupon_text": {
            "type": "string",
            "description": "Coupon text of coupon applied on cart."
          },
          "id": {
            "type": "string",
            "description": "Cart id of the user cart."
          },
          "pan_config": {
            "type": "object",
            "additionalProperties": true
          },
          "delivery_promise": {
            "$ref": "#/components/schemas/ShipmentPromise"
          },
          "comment": {
            "type": "string",
            "description": "Comment message added in cart."
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartProductInfo"
            }
          },
          "payment_selection_lock": {
            "$ref": "#/components/schemas/PaymentSelectionLock"
          },
          "delivery_charge_info": {
            "type": "string",
            "description": "Delivery charge information message of the shipment."
          },
          "common_config": {
            "$ref": "#/components/schemas/CartCommonConfig"
          },
          "coupon": {
            "$ref": "#/components/schemas/CartDetailCoupon"
          },
          "restrict_checkout": {
            "type": "boolean",
            "description": "Restrict checkout flag to restrict the checkout process."
          },
          "message": {
            "type": "string",
            "description": "Response message of get shipments API."
          },
          "notification": {
            "type": "object",
            "additionalProperties": true
          },
          "staff_user_id": {
            "nullable": true,
            "type": "string"
          },
          "success": {
            "type": "boolean"
          },
          "breakup_values": {
            "$ref": "#/components/schemas/CartBreakup"
          },
          "is_valid": {
            "type": "boolean",
            "description": "Cart validity flag determines the if the response is valid or not."
          },
          "currency": {
            "$ref": "#/components/schemas/CartCurrency"
          },
          "checkout_mode": {
            "type": "string",
            "description": "Checkout mode of cart."
          },
          "last_modified": {
            "type": "string",
            "description": "Last modified timestamp of cart."
          },
          "buy_now": {
            "type": "boolean",
            "description": "Buy now flag of user cart."
          },
          "gstin": {
            "nullable": true,
            "type": "string",
            "description": "GSTIN number added in cart."
          },
          "applied_promo_details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppliedPromotion"
            }
          },
          "pan_no": {
            "nullable": true,
            "type": "string"
          },
          "custom_cart": {
            "$ref": "#/components/schemas/CustomCart"
          },
          "price_adjustment_applied": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartAppliedPriceAdjustment"
            }
          },
          "shipments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShipmentResult"
            },
            "description": "List of Shipments which includes shipment data like shipment items, shipment promise, Shipment type, shipment order type, shipment dp options etc."
          },
          "error": {
            "type": "boolean",
            "description": "Error details if any error occurs which includes type of error, error code and error message."
          },
          "is_pan_received": {
            "type": "boolean",
            "description": "If the customer provides a PAN number, set it to true."
          },
          "custom_cart_meta": {
            "type": "object",
            "additionalProperties": true,
            "description": "Custom meta details added cart checkout API payload."
          }
        },
        "description": "Cart shipment response schema for get shipments API."
      },
      "CartCheckoutCustomMeta": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Key name of custom meta."
          },
          "value": {
            "type": "string",
            "description": "Value to be added in key."
          }
        },
        "required": [
          "key",
          "value"
        ],
        "description": "Custom meta schema which includes key and value that needs to be added in meta data."
      },
      "CustomerDetails": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email of the customer."
          },
          "mobile": {
            "type": "string",
            "description": "Mobile number of the customer."
          },
          "name": {
            "type": "string",
            "description": "Name of the customer."
          }
        }
      },
      "StaffCheckout": {
        "type": "object",
        "properties": {
          "employee_code": {
            "type": "string",
            "x-not-enum": true,
            "description": "Employee code of staff who does checkout on behalf of customer."
          },
          "user": {
            "type": "string",
            "description": "User id of the employee who does checkout on behalf of customer."
          },
          "last_name": {
            "type": "string",
            "description": "Last name of staff employee who does checkout on behalf of customer."
          },
          "first_name": {
            "type": "string",
            "description": "First name of staff emplyee who does checkout on behalf of customer."
          },
          "_id": {
            "type": "string",
            "description": "Id of staff who does checkout on behalf of customer."
          }
        },
        "required": [
          "_id",
          "first_name",
          "last_name",
          "user"
        ],
        "description": "Staff details which can be added while checkout if staff member is doing check on behalf of customer which incluedes empployee code, user, last name, first name and staff user id."
      },
      "CartCheckoutDetailPayload": {
        "type": "object",
        "properties": {
          "custom_meta": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartCheckoutCustomMeta"
            },
            "description": "Custom meta data to be added in order."
          },
          "customer_details": {
            "description": "Customer details to be added in order.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerDetails"
              }
            ]
          },
          "merchant_code": {
            "type": "string",
            "x-not-enum": true,
            "description": "Merchant code of the payment mode selected to do the payment."
          },
          "id": {
            "type": "string",
            "description": "Cart id of the user cart."
          },
          "payment_auto_confirm": {
            "type": "boolean",
            "description": "Payment auto confirm flag if payment need not to be collected from user."
          },
          "payment_mode": {
            "type": "string",
            "description": "Payment mode from which the payment to be done for the order."
          },
          "aggregator": {
            "type": "string",
            "description": "Aggregator name of the payment gateway."
          },
          "address_id": {
            "type": "string",
            "description": "Address id of the user on which the order to be delivered."
          },
          "callback_url": {
            "type": "string",
            "description": "Callback url to be redirected after payment received/failed."
          },
          "delivery_address": {
            "type": "object",
            "additionalProperties": true,
            "description": "Delivery address data which includes customer address, customer phone, customer email, customer pincode, customer landmark and customer name."
          },
          "staff": {
            "$ref": "#/components/schemas/StaffCheckout"
          },
          "order_type": {
            "type": "string",
            "enum": [
              "HomeDelivery",
              "PickAtStore",
              "Digital"
            ],
            "description": "Order type of the order being placed like pickAtStore or HomeDelivery."
          },
          "ordering_store": {
            "type": "integer",
            "format": "int32",
            "description": "Ordering store id of the store from which the order is getting placed."
          },
          "extra_meta": {
            "type": "object",
            "additionalProperties": true,
            "description": "Extra meta to be added while checkout in order."
          },
          "payment_identifier": {
            "type": "string",
            "description": "Payment identifier of the payment mode selected to do the payment."
          },
          "billing_address": {
            "type": "object",
            "additionalProperties": true,
            "description": "Billing address json which includes customer address, customer phone, customer email, customer pincode, customer landmark and customer name."
          },
          "payment_params": {
            "type": "object",
            "additionalProperties": true,
            "description": "Payment params which includes payment identifier and merchant code."
          },
          "billing_address_id": {
            "type": "string",
            "description": "Billing address id of the customer on which the invoice to be generated after the order is placed."
          },
          "meta": {
            "type": "object",
            "additionalProperties": true,
            "description": "Meta data to be added in order."
          },
          "payment_extra_identifiers": {
            "type": "object",
            "additionalProperties": true,
            "description": "Payment extra identifier for the payment mode to do the payment."
          },
          "iin": {
            "type": "string",
            "description": "Issuer Identification Number' number of card if payment mode is card."
          },
          "network": {
            "type": "string",
            "description": "Network of card if payment mode is card to do the payment."
          },
          "type": {
            "type": "string",
            "description": "Type of cart if payment mode is card to do the payment."
          },
          "card_id": {
            "type": "string",
            "description": "Saved card id if payment mode is card to do the payment."
          }
        },
        "required": [
          "payment_mode"
        ],
        "description": "Cart checkout request details schema which includes customer details, custom_meta, merchant_code, cart id, payment_mode, aggregator, address_id,  callback_url, delivery_address, order_type, ordering_store, payment_identifier, billing_address, payment_params, billing_address_id, payment_extra_identifiers and card_id."
      },
      "CheckCart": {
        "type": "object",
        "properties": {
          "user_type": {
            "type": "string",
            "description": "User type of the cart who places the order.",
            "x-not-enum": true
          },
          "cod_message": {
            "type": "string",
            "description": "Cash On Delivery message for the order placed."
          },
          "cart_id": {
            "type": "integer",
            "format": "int32",
            "description": "Cart id of the user cart for which the order placed."
          },
          "uid": {
            "type": "string",
            "description": "Cart id of user cart."
          },
          "coupon_text": {
            "type": "string",
            "description": "Coupon text of the applied coupon on order placed."
          },
          "id": {
            "type": "string",
            "description": "Cart id of the user cart."
          },
          "delivery_promise": {
            "$ref": "#/components/schemas/ShipmentPromise"
          },
          "comment": {
            "type": "string",
            "description": "Comment message added in cart after order placed."
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartProductInfo"
            },
            "description": "Items details in cart after order placed."
          },
          "payment_selection_lock": {
            "$ref": "#/components/schemas/PaymentSelectionLock"
          },
          "delivery_charge_info": {
            "type": "string",
            "description": "Delivery charge information message of the shipment."
          },
          "common_config": {
            "$ref": "#/components/schemas/CartCommonConfig"
          },
          "coupon": {
            "$ref": "#/components/schemas/CartDetailCoupon"
          },
          "restrict_checkout": {
            "type": "boolean",
            "description": "Restrict checkout flag to restrict the checkout process."
          },
          "message": {
            "type": "string",
            "description": "Message of the cart checkout API response."
          },
          "notification": {
            "type": "object",
            "additionalProperties": true
          },
          "staff_user_id": {
            "type": "string"
          },
          "success": {
            "type": "boolean",
            "description": "Success flag of checkout cart API response."
          },
          "breakup_values": {
            "$ref": "#/components/schemas/CartBreakup"
          },
          "is_valid": {
            "type": "boolean",
            "description": "Valid flag fotr the checkout response if order placed was valid."
          },
          "currency": {
            "$ref": "#/components/schemas/CartCurrency"
          },
          "checkout_mode": {
            "type": "string",
            "description": "Checkout mode of user cart."
          },
          "last_modified": {
            "type": "string",
            "description": "Last modified timestamp of cart."
          },
          "buy_now": {
            "type": "boolean",
            "description": "Buy now flag of user cart."
          },
          "gstin": {
            "nullable": true,
            "type": "string",
            "description": "GSTIN number added in cart."
          },
          "applied_promo_details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppliedPromotion"
            }
          },
          "pan_no": {
            "nullable": true,
            "type": "string"
          },
          "custom_cart": {
            "$ref": "#/components/schemas/CustomCart"
          },
          "price_adjustment_applied": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceAdjustmentApplied"
            }
          },
          "is_pan_received": {
            "type": "boolean",
            "description": "If the customer provides a PAN number, set it to true."
          },
          "pan_config": {
            "type": "object",
            "additionalProperties": true
          },
          "order_id": {
            "type": "string",
            "description": "Order id generated after placing order."
          },
          "custom_cart_meta": {
            "type": "object",
            "additionalProperties": true,
            "description": "Custom cart meta details added in cart."
          }
        },
        "description": "Checkout cart detail respoonse schema includes cart id, delivery promise, items, comment, coupon text etc."
      },
      "CartCheckoutResult": {
        "type": "object",
        "properties": {
          "payment_confirm_url": {
            "nullable": true,
            "type": "string",
            "description": "Payment confirm url used to redirect after payment is confirmed."
          },
          "app_intercept_url": {
            "type": "string",
            "description": "App intercept url which is used to redirect on app after payment in confirmed/failed."
          },
          "success": {
            "type": "boolean",
            "description": "Success flag of cart checkout API response."
          },
          "callback_url": {
            "type": "string",
            "description": "Callback url to be redirected after payment received/failed."
          },
          "message": {
            "type": "string",
            "description": "Message of the cart checkout v2 API response."
          },
          "data": {
            "type": "object",
            "additionalProperties": true,
            "description": "Data of the user cart checkout includes cart data, address, user id, order type etc."
          },
          "order_id": {
            "type": "string",
            "description": "Order id generated after placing order."
          },
          "cart": {
            "$ref": "#/components/schemas/CheckCart"
          }
        },
        "description": "Checkout cart detail respoonse schema includes cart id, delivery promise, items, comment, coupon text etc."
      },
      "GiftDetail": {
        "type": "object",
        "properties": {
          "is_gift_applied": {
            "type": "boolean",
            "description": "Is gift applied flag which determines if this is a gift oder not."
          },
          "gift_message": {
            "type": "string",
            "description": "Gift message for the one while receive the delivery of the order with this message."
          }
        },
        "description": "Gift details which includes flag for gift applied or not and gift message added by user."
      },
      "ArticleGiftDetail": {
        "type": "object",
        "properties": {
          "article_id": {
            "$ref": "#/components/schemas/GiftDetail"
          }
        },
        "description": "Article level gift details which includes article id."
      },
      "CartMetaPayload": {
        "type": "object",
        "properties": {
          "gstin": {
            "type": "string",
            "description": "GSTIN number to be added in user cart."
          },
          "pick_up_customer_details": {
            "type": "object",
            "additionalProperties": true,
            "description": "Customer contact details for customer pickup at store."
          },
          "checkout_mode": {
            "type": "string",
            "description": "Checkout mode of user cart."
          },
          "gift_details": {
            "type": "object",
            "nullable": true,
            "additionalProperties": true,
            "description": "Gift details is open json which can include gift message ."
          },
          "pan_no": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "description": "Comment message to be added in user cart."
          },
          "staff_user_id": {
            "type": "string",
            "nullable": true,
            "description": "Staff user id."
          },
          "delivery_slots": {
            "type": "object",
            "additionalProperties": true,
            "description": "Delivery slots details includes article level time slot when the shipment can be delivered."
          },
          "custom_cart_meta": {
            "type": "object",
            "additionalProperties": true,
            "description": "Custom cart meta json to be added in order meta which can be further received in cart API response and order meta in order detail API or webhook."
          }
        },
        "description": "Cart meta request schema to update the cart meta detail like delivery slots, comment message, GSTIN and custom cart meta."
      },
      "CartMetaResult": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Detailed message."
          },
          "is_valid": {
            "type": "boolean",
            "description": "Whether added meta was vaild."
          }
        },
        "description": "Cart meta response schema."
      },
      "CartMetaMissingResult": {
        "type": "object",
        "properties": {
          "errors": {
            "$ref": "#/components/schemas/CartMetaFieldsValidation"
          },
          "message": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          },
          "meta": {
            "$ref": "#/components/schemas/CartMetaFieldsValidation"
          }
        },
        "description": "Cart meta missing response schema if user enters invalid to be saved in cart meta API. This includes errors."
      },
      "CartMetaFieldsValidation": {
        "type": "object",
        "properties": {
          "pan_no": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "gstin": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "checkout_mode": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "comment": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "pick_up_customer_details": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "gift_details": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "staff_user_id": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "delivery_slots": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "custom_cart_meta": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "GetShareCartLinkPayload": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Cart id of user cart for generating cart sharing token."
          },
          "meta": {
            "type": "object",
            "additionalProperties": true,
            "description": "Staff, Ordering store or any other data. This data will be used to generate link as well as sent as shared details."
          }
        },
        "description": "Cart share link request schema used to get the share link to share cart to any other user. This includes cart id and meta json."
      },
      "GetShareCartLinkResult": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Short url unique id of the cart which is opted to share with other user."
          },
          "share_url": {
            "type": "string",
            "description": "Short shareable final url which can populate shared cart items in one's cart or replaced one's cart with shared cart items."
          }
        },
        "description": "Cart share link response schema which includes url and token."
      },
      "SharedCartDetails": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Short link id of the user cart that needs to be shared."
          },
          "user": {
            "type": "object",
            "additionalProperties": true,
            "description": "User details of who generated share link."
          },
          "created_on": {
            "type": "string",
            "format": "date-time",
            "description": "Created on timestamp of user cart."
          },
          "source": {
            "type": "object",
            "additionalProperties": true,
            "description": "Share link device and other source information."
          },
          "ordering_store": {
            "nullable": true,
            "type": "integer",
            "format": "int32",
            "description": "Ordering store id of the store from which the order is getting placed."
          },
          "selected_staff": {
            "nullable": true,
            "type": "string",
            "description": "Staff id of the person from store for which the order is getting placed."
          },
          "meta": {
            "type": "object",
            "additionalProperties": true,
            "description": "Meta data sent while generating share cart link."
          }
        },
        "description": "Shared cart details schema included token, user, created on, source and meta."
      },
      "SharedCart": {
        "type": "object",
        "properties": {
          "cart_id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier of the user cart."
          },
          "uid": {
            "type": "string",
            "description": "Unique identifier of the user cart."
          },
          "coupon_text": {
            "type": "string",
            "description": "Coupon text of the applied coupon on user cart."
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of the user cart."
          },
          "pan_config": {
            "type": "object",
            "additionalProperties": true,
            "description": "Pan card config states at what condition user should enter the pan card."
          },
          "delivery_promise": {
            "$ref": "#/components/schemas/ShipmentPromise"
          },
          "comment": {
            "type": "string",
            "description": "Comment message added in user cart."
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartProductInfo"
            },
            "description": "Items data list in user cart that includes item id, item size, store id, available sizes and rest of the item related data."
          },
          "payment_selection_lock": {
            "$ref": "#/components/schemas/PaymentSelectionLock"
          },
          "delivery_charge_info": {
            "type": "string",
            "description": "Delivery charge info message of the user cart."
          },
          "common_config": {
            "$ref": "#/components/schemas/CartCommonConfig"
          },
          "coupon": {
            "$ref": "#/components/schemas/CartDetailCoupon"
          },
          "restrict_checkout": {
            "type": "boolean",
            "description": "Restrict checkout flag to restrict the checkout process."
          },
          "message": {
            "type": "string",
            "description": "Message of the get shared cart API response."
          },
          "notification": {
            "type": "object",
            "additionalProperties": true,
            "description": "Notification object which denotes notification data for user cart."
          },
          "staff_user_id": {
            "type": "string",
            "description": "Staff employee user id if cart is created by staff employee for the customer."
          },
          "success": {
            "type": "boolean",
            "description": "Success flag of get cart detail API response."
          },
          "breakup_values": {
            "$ref": "#/components/schemas/CartBreakup"
          },
          "is_valid": {
            "type": "boolean",
            "description": "Cart validity flag determines the if the response is valid or not."
          },
          "currency": {
            "$ref": "#/components/schemas/CartCurrency"
          },
          "checkout_mode": {
            "type": "string",
            "description": "Checkout mode of address on which address to be used for which checkout mode of cart."
          },
          "last_modified": {
            "type": "string",
            "description": "Last modified timestamp of user cart."
          },
          "buy_now": {
            "type": "boolean",
            "description": "Buy now flag for the cart which denotes user is doing fast checkout for the cart using buy now."
          },
          "gstin": {
            "nullable": true,
            "type": "string",
            "description": "GSTIN added in user cart."
          },
          "applied_promo_details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppliedPromotion"
            },
            "description": "List of applied promotions data to cart which includes promotion id, promotion name, offer text, description, buy rules, discount rules and promotion type."
          },
          "pan_no": {
            "nullable": true,
            "type": "string",
            "description": "Permanent Account Number of the user."
          },
          "custom_cart": {
            "$ref": "#/components/schemas/CustomCart"
          },
          "price_adjustment_applied": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartAppliedPriceAdjustment"
            }
          },
          "shared_cart_details": {
            "$ref": "#/components/schemas/SharedCartDetails"
          },
          "is_pan_received": {
            "type": "boolean",
            "description": "If the customer provides a PAN number, set it to true."
          },
          "custom_cart_meta": {
            "type": "object",
            "additionalProperties": true,
            "description": "Custom cart meta of user cart added via update cart meta API."
          }
        },
        "description": "Share cart detail includes checkout mode, cart id , payment selection lock config, delivery promise, comment message,  items , breakup values and other cart data of shared cart."
      },
      "SharedCartResult": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error details if any error occurs which includes type of error, error code and error message."
          },
          "cart": {
            "$ref": "#/components/schemas/SharedCart"
          }
        },
        "description": "Shared cart response schema which included error or cart data."
      },
      "PriceMinMax": {
        "type": "object",
        "properties": {
          "min": {
            "type": "number",
            "format": "float",
            "description": "Min price of article added in user cart."
          },
          "max": {
            "type": "number",
            "format": "float",
            "description": "Max price of article added in user cart."
          }
        },
        "description": "Price detail schema of cart which include min and max price of article."
      },
      "ItemPriceDetails": {
        "type": "object",
        "properties": {
          "marked": {
            "$ref": "#/components/schemas/PriceMinMax"
          },
          "effective": {
            "$ref": "#/components/schemas/PriceMinMax"
          },
          "currency": {
            "type": "string",
            "description": "Currency of the article added in cart."
          }
        },
        "description": "Item price details which inclued effective, marked, currency."
      },
      "ArticlePriceDetails": {
        "type": "object",
        "properties": {
          "marked": {
            "type": "number",
            "format": "float",
            "description": "The Marked Price refers to the initial price of the free gift article before product discount."
          },
          "effective": {
            "type": "number",
            "format": "float",
            "description": "The Effective Price refers to the final amount of the free gift article after applying the product discount."
          }
        },
        "description": "Pricing information for the free gift article, including both the initial marked price and the final effective price after applying the product discount."
      },
      "FreeGiftItems": {
        "type": "object",
        "properties": {
          "item_slug": {
            "type": "string",
            "description": "Slug for an item."
          },
          "item_name": {
            "type": "string",
            "description": "Name of the free gift item received via free gift promotion."
          },
          "item_price_details": {
            "$ref": "#/components/schemas/ItemPriceDetails"
          },
          "article_price": {
            "$ref": "#/components/schemas/ArticlePriceDetails"
          },
          "item_brand_name": {
            "type": "string",
            "description": "Item brand name of the free gift item promotion applied on cart."
          },
          "item_id": {
            "type": "integer",
            "format": "int32",
            "description": "Item id of the free gift item."
          },
          "available_sizes": {
            "type": "array",
            "description": "Available sizes for the free gift item.",
            "items": {
              "type": "string"
            }
          },
          "size": {
            "type": "string",
            "description": "Selected size for the free gift item."
          },
          "item_images_url": {
            "type": "array",
            "description": "Images URLs for free gift items.",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Details of free gift items which are received via promotion."
      },
      "PromotionOffer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Promotion id of the promotion which is available on product."
          },
          "buy_rules": {
            "type": "object",
            "additionalProperties": true,
            "description": "Buy rules of promotion which is available on product."
          },
          "offer_text": {
            "type": "string",
            "description": "Offer title of the promotion which is available on product."
          },
          "promotion_type": {
            "type": "string",
            "enum": [
              "percentage",
              "amount",
              "fixed_price",
              "bogo",
              "contract_price",
              "shipping_price",
              "ladder_price",
              "bundle_price_percentage",
              "bundle_price_amount",
              "bundle_amount_percentage",
              "custom",
              "free_gift_items",
              "free_non_sellable_items",
              "external_price_adjustment_discount"
            ],
            "description": "Promotion type of the promotion which is availalbe on product."
          },
          "promotion_name": {
            "type": "string",
            "description": "Name of the promotion which is available on product."
          },
          "promotion_group": {
            "type": "string",
            "description": "Group of the promotion which is available on product."
          },
          "valid_till": {
            "type": "string",
            "description": "Datetime ISO String for promotion end date which is available on product."
          },
          "discount_rules": {
            "type": "array",
            "description": "Discount rules of promotions which is avaiable on product.",
            "items": {
              "type": "object"
            }
          },
          "free_gift_items": {
            "description": "Details of free gift items which included item id, brand name, item name, item slug, item price and item image url.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FreeGiftItems"
            }
          },
          "description": {
            "type": "string",
            "description": "Offer details including T&amp;C of the promotion which is avaiable on product."
          },
          "tags": {
            "description": "Tags for promotion.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "medias": {
            "description": "Medias for promotion.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Media"
            }
          },
          "is_bank_offer": {
            "type": "boolean",
            "description": "Indicates whether the promotion is associated with a bank offer."
          }
        },
        "description": "Promotion offer details includes promotion id, buy rules, offer text, promotion type, promotion name, promotion group, discount rules, free gift items list and promo description."
      },
      "PromotionOffersResult": {
        "type": "object",
        "properties": {
          "available_promotions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PromotionOffer"
            },
            "description": "Available promotion details which are available on product which includes promotion data like promotion id, promotion name, buy rules, discount rules validity dates etc."
          }
        },
        "description": "Promotion offer response detail which incluedes available promotions list."
      },
      "PromotionPaymentOffer": {
        "type": "object",
        "properties": {
          "application_id": {
            "type": "string",
            "description": "Application id on which the promotion was created."
          },
          "buy_rules": {
            "type": "array",
            "description": "Buy rules of promotions which denotes if the rules matches than only promotion is applicable.",
            "items": {
              "type": "object"
            }
          },
          "calculate_on": {
            "type": "string",
            "description": "Article Price on which promotion calculated like effective price or marked price."
          },
          "description": {
            "type": "string",
            "description": "Offer details including T&amp;C of the promotion which is avaiable on cart."
          },
          "discount_rules": {
            "type": "array",
            "description": "Discount rules of promotions which is avaiable on cart.",
            "items": {
              "type": "object"
            }
          },
          "id": {
            "type": "string",
            "description": "Promotion id of the promotion which is available on cart."
          },
          "offer_text": {
            "type": "string",
            "description": "Offer title of the promotion which is available on cart."
          },
          "promotion_group": {
            "type": "string",
            "description": "Group promotion which is available on cart."
          },
          "promotion_type": {
            "type": "string",
            "description": "Promotion type of the promotion which is availalbe on cart.",
            "enum": [
              "percentage",
              "amount",
              "fixed_price",
              "bogo",
              "contract_price",
              "shipping_price",
              "ladder_price",
              "bundle_price_percentage",
              "bundle_price_amount",
              "bundle_amount_percentage",
              "custom",
              "free_gift_items",
              "free_non_sellable_items",
              "external_price_adjustment_discount"
            ]
          },
          "promotion_name": {
            "type": "string",
            "description": "Name of the promotion which is available on cart."
          },
          "valid_till": {
            "type": "string",
            "description": "Datetime ISO String for promotion end date which is available on product."
          },
          "medias": {
            "description": "Medias for promotion.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Media"
            }
          }
        },
        "description": "Promotion payment offer details includes app id, buy rules, calculate on, discount rules etc."
      },
      "PromotionPaymentOffersResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Success flag of get payment offers API response."
          },
          "promotions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PromotionPaymentOffer"
            },
            "description": "List of promotions data which are applicable on cart/product."
          }
        },
        "description": "Promotion payment offer response includes success flag and promotion list applicable."
      },
      "OperationErrorResult": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message of get payment offer API response."
          },
          "success": {
            "type": "boolean",
            "description": "Success flag of get payment offer API response."
          }
        },
        "description": "Operation error response details which includes message and success flag."
      },
      "StandardError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "A brief description of the error."
          }
        },
        "required": [
          "message"
        ]
      },
      "LadderPrice": {
        "type": "object",
        "properties": {
          "currency_symbol": {
            "type": "string",
            "description": "Currency symbol for currency of ladder price product."
          },
          "offer_price": {
            "type": "number",
            "format": "float",
            "description": "Discounted per unit price for current offer object."
          },
          "currency_code": {
            "type": "string",
            "x-not-enum": true,
            "description": "Currency code for all amounts."
          },
          "effective": {
            "type": "integer",
            "format": "int32",
            "description": "Current per unit price of product after existing deductions."
          },
          "marked": {
            "type": "integer",
            "format": "int32",
            "description": "Original price of product."
          }
        },
        "description": "Ladder price details which includes currency symbol, offer price, currency code, effective and marked price."
      },
      "LadderOfferItem": {
        "type": "object",
        "properties": {
          "price": {
            "$ref": "#/components/schemas/LadderPrice"
          },
          "margin": {
            "type": "integer",
            "format": "int32",
            "description": "Percentage value of discount."
          },
          "max_quantity": {
            "type": "integer",
            "format": "int32",
            "description": "Minimum quantity upto which offer is applicable. If not present that offer is applicable on all quantities."
          },
          "min_quantity": {
            "type": "integer",
            "format": "int32",
            "description": "Minimum quantity from which offer is applicable."
          },
          "type": {
            "type": "string",
            "description": "Offer type of the ladder promotion."
          }
        },
        "description": "Ladder offer item  details which includes price, margin, max quantity, min quantity and type."
      },
      "LadderPriceOffer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the promotion."
          },
          "buy_rules": {
            "type": "object",
            "additionalProperties": true,
            "description": "Buy rules of ladder price promotion applicable on product."
          },
          "calculate_on": {
            "type": "string",
            "description": "If this ladder offer is to be calculated on MRP or ESP price."
          },
          "offer_text": {
            "type": "string",
            "description": "Offer title of ladder price promotion applicable on product."
          },
          "promotion_group": {
            "type": "string",
            "description": "Group of ladder price promotion applicable on product."
          },
          "valid_till": {
            "type": "string",
            "description": "Datetime ISO String for promotion end date."
          },
          "discount_rules": {
            "type": "array",
            "description": "Discount rules of ladder price promotion applicable on product.",
            "items": {
              "type": "object"
            }
          },
          "offer_prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LadderOfferItem"
            },
            "description": "Offer prices for ladder price promotion applicable on product."
          },
          "free_gift_items": {
            "description": "Details of free gift items list.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FreeGiftItems"
            }
          },
          "description": {
            "type": "string",
            "description": "Offer details including T&amp;C of ladder price promotion applicable on product."
          },
          "promotion_type": {
            "type": "string",
            "description": "Promotion type of the promotion which is availalbe on product.",
            "enum": [
              "percentage",
              "amount",
              "fixed_price",
              "bogo",
              "contract_price",
              "shipping_price",
              "ladder_price",
              "bundle_price_percentage",
              "bundle_price_amount",
              "bundle_amount_percentage",
              "custom",
              "free_gift_items",
              "free_non_sellable_items",
              "external_price_adjustment_discount"
            ]
          },
          "medias": {
            "description": "Medias for promotion.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Media"
            }
          }
        },
        "description": "Ladder price offer details which included promotion id, buy rules, calculate on, offer text, discount rules, promotino group, free gift items and desription of promotino data."
      },
      "CurrencyInfo": {
        "type": "object",
        "properties": {
          "ordering_currency": {
            "$ref": "#/components/schemas/OrderingCurrency"
          },
          "conversion_rate": {
            "$ref": "#/components/schemas/ConversionRate"
          }
        }
      },
      "LadderPriceOffers": {
        "type": "object",
        "properties": {
          "available_offers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LadderPriceOffer"
            },
            "description": "Available ladder promotions offers list."
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyInfo"
          },
          "store_id": {
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        "description": "Ladder price offers details which includes list of available ladder promotion on product."
      },
      "PaymentMeta": {
        "type": "object",
        "properties": {
          "merchant_code": {
            "type": "string",
            "x-not-enum": true,
            "description": "Merchant code of the payment mode selected to do the payment."
          },
          "type": {
            "type": "string",
            "description": "Type of card if payment mode is card to do the payment."
          },
          "payment_gateway": {
            "type": "string",
            "description": "Payment gateway used to do the payment."
          },
          "payment_identifier": {
            "type": "string",
            "nullable": true,
            "description": "Payment identifier of the payment mode selected to do the payment."
          }
        },
        "description": "Payment meta detail includes merchant code, type, payment gateway, and payment identifier."
      },
      "PaymentMethod": {
        "type": "object",
        "properties": {
          "mode": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "meta": {
            "type": "object",
            "nullable": true,
            "additionalProperties": true
          }
        }
      },
      "CartCheckoutDetailV2Payload": {
        "type": "object",
        "properties": {
          "custom_meta": {
            "type": "object",
            "description": "Custom meta data to be added in order.",
            "additionalProperties": true
          },
          "customer_details": {
            "nullable": true,
            "description": "Customer details to be added in order.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerDetails"
              }
            ]
          },
          "merchant_code": {
            "type": "string",
            "x-not-enum": true,
            "description": "Merchant code of the payment mode selected to do the payment."
          },
          "cart_id": {
            "type": "string",
            "description": "Cart id of the user cart."
          },
          "id": {
            "type": "string",
            "nullable": true,
            "description": "Cart id of the user cart."
          },
          "payment_auto_confirm": {
            "type": "boolean",
            "description": "Payment auto confirm flag if payment need not to be collected from user."
          },
          "payment_methods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentMethod"
            },
            "description": "Payment methods list used to make the payment."
          },
          "payment_mode": {
            "type": "string",
            "description": "Payment mode of the payment selected to do the payment."
          },
          "aggregator": {
            "type": "string",
            "description": "Aggregator of payment mode to do the payment."
          },
          "address_id": {
            "type": "string",
            "description": "Address id of the user where the order to be delivered."
          },
          "callback_url": {
            "type": "string",
            "default": null,
            "nullable": true,
            "description": "Callback url after payment received/failed."
          },
          "delivery_address": {
            "type": "object",
            "additionalProperties": true,
            "description": "Delivery address data which includes customer address, customer phone, customer email, customer pincode, customer landmark and customer name."
          },
          "staff": {
            "$ref": "#/components/schemas/StaffCheckout"
          },
          "order_type": {
            "type": "string",
            "enum": [
              "HomeDelivery",
              "PickAtStore"
            ],
            "description": "Order type of the order being placed like pickAtStore or HomeDelivery."
          },
          "ordering_store": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "description": "Ordering store id of the store from which the order is getting placed."
          },
          "extra_meta": {
            "type": "object",
            "description": "Extra meta to be added while checkout in order.",
            "additionalProperties": true
          },
          "payment_identifier": {
            "type": "string",
            "nullable": true,
            "description": "Payment identifier of the payment mode selected to do the payment."
          },
          "billing_address": {
            "type": "object",
            "additionalProperties": true,
            "description": "Billing address json which includes customer address, customer phone, customer email, customer pincode, customer landmark and customer name."
          },
          "payment_params": {
            "type": "object",
            "nullable": true,
            "description": "Payment params which includes payment identifier and merchant code.",
            "additionalProperties": true
          },
          "billing_address_id": {
            "type": "string",
            "description": "Billing address id selected by user on which shipment bill to be generated."
          },
          "meta": {
            "type": "object",
            "description": "Meta data sent while checkout v2.",
            "additionalProperties": true
          },
          "iin": {
            "type": "string",
            "description": "Issuer Identification Number' number of card if payment mode is card to do the payment."
          },
          "network": {
            "type": "string",
            "description": "Network of card if payment mode is card to do the payment."
          },
          "type": {
            "type": "string",
            "description": "Type of cart if payment mode is card to do the payment."
          },
          "card_id": {
            "type": "string",
            "description": "Saved card id if payment mode is card to do the payment."
          }
        },
        "required": [
          "payment_methods",
          "payment_mode"
        ],
        "description": "Checkout v2 request schema which includes custom meta, merchant code, cart id, payment methods, address id, callback url, order type, billing address and card details."
      },
      "CartMetaConfigListResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartMetaConfigListObject"
            }
          }
        }
      },
      "CartMetaConfigListObject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "created_on": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "article_tags": {
            "nullable": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OrderPlacing": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PanCard": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "cod_threshold_amount": {
            "type": "integer",
            "format": "int32"
          },
          "online_threshold_amount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CartConfigDetailObj": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "app_id": {
            "type": "string"
          },
          "company_id": {
            "type": "integer",
            "format": "int32"
          },
          "created_on": {
            "type": "string",
            "format": "date-time"
          },
          "updated_on": {
            "type": "string",
            "format": "date-time"
          },
          "last_modified_by": {
            "type": "string"
          },
          "min_cart_value": {
            "type": "integer",
            "format": "int32"
          },
          "max_cart_value": {
            "type": "integer",
            "format": "int32"
          },
          "bulk_coupons": {
            "type": "boolean"
          },
          "max_cart_items": {
            "type": "integer",
            "format": "int32"
          },
          "gift_display_text": {
            "type": "string"
          },
          "delivery_charges": {
            "$ref": "#/components/schemas/DeliveryChargesConfig"
          },
          "revenue_engine_coupon": {
            "type": "boolean"
          },
          "gift_pricing": {
            "type": "number",
            "format": "float"
          },
          "enabled": {
            "type": "boolean"
          },
          "is_active": {
            "type": "boolean"
          },
          "order_placing": {
            "$ref": "#/components/schemas/OrderPlacing"
          },
          "name": {
            "type": "string"
          },
          "article_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "allow_coupon_with_rewards": {
            "type": "boolean"
          },
          "gst_input": {
            "type": "boolean"
          },
          "staff_selection": {
            "type": "boolean"
          },
          "placing_for_customer": {
            "type": "boolean"
          },
          "hide_on_storefront": {
            "type": "boolean"
          },
          "pan_card": {
            "$ref": "#/components/schemas/PanCard"
          },
          "slug": {
            "type": "string"
          },
          "is_universal": {
            "type": "boolean"
          },
          "international_delivery_charges": {
            "$ref": "#/components/schemas/DeliveryChargesConfig"
          }
        }
      },
      "CartConfigDetailResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/CartConfigDetailObj"
          }
        }
      },
      "SelectAddressResponseError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "cart_id": {
            "type": "number"
          },
          "id": {
            "type": "string"
          },
          "is_valid": {
            "type": "boolean"
          },
          "address": {
            "$ref": "#/components/schemas/AllAddressForSelectAddress"
          }
        }
      },
      "AllAddressForSelectAddress": {
        "type": "object",
        "properties": {
          "address": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "pii_masking": {
            "type": "boolean"
          },
          "validation_config": {
            "$ref": "#/components/schemas/ValidationConfig"
          }
        }
      },
      "DeleteCartPayload": {
        "type": "object",
        "properties": {
          "cart_id_list": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Media": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Absolute url for Media."
          },
          "type": {
            "type": "string",
            "description": "The type of media, such as image, video."
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "alt": {
            "type": "string",
            "description": "Alternative text for the media, used for accessibility and SEO purposes."
          }
        },
        "description": "Represents a media file with its associated properties, such as URL, type, and metadata."
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "A brief description of the error encountered."
          },
          "field": {
            "type": "string",
            "description": "The field in the request that caused the error."
          }
        },
        "required": [
          "message",
          "field"
        ]
      },
      "ProductDetailCustomOrder": {
        "type": "object",
        "properties": {
          "manufacturing_time": {
            "type": "integer",
            "description": "The unit of time taken for manufacturing."
          },
          "manufacturing_time_unit": {
            "type": "string",
            "description": "The unit of time required for manufacturing is defined in hours or days."
          },
          "is_custom_order": {
            "type": "boolean",
            "description": "A boolean flag indicating whether MTO (Make to Order) is enabled or not."
          }
        },
        "description": "Schema to define manufacturing time(MTO) for a product that needs to be sold before manufacturing."
      },
      "Meta": {
        "type": "object",
        "properties": {
          "shipment_cost": {
            "type": "number"
          }
        }
      },
      "QueryParams": {
        "type": "object",
        "properties": {
          "category": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "brand": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "department": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Params": {
        "type": "object",
        "description": "Schema defines the additional context and instructions for processing the file.",
        "properties": {
          "subpath": {
            "type": "string",
            "description": "Specifies a particular directory or location within the storage structure where the file should be placed or is located."
          }
        }
      },
      "ProductListingActionPage": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of action such as product, products, category, brand."
          },
          "query": {
            "$ref": "#/components/schemas/QueryParams"
          },
          "params": {
            "$ref": "#/components/schemas/Params"
          }
        },
        "description": "Represents the page details used to rendering."
      },
      "ProductListingAction": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of action to be taken e.g, page."
          },
          "page": {
            "$ref": "#/components/schemas/ProductListingActionPage"
          }
        },
        "description": "Schema to define the Action Object."
      },
      "ProductBrand": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "integer",
            "description": "Unique identifier for the product brand."
          },
          "logo": {
            "$ref": "#/components/schemas/Media"
          },
          "description": {
            "type": "string",
            "default": "",
            "description": "Description of the product brand."
          },
          "name": {
            "type": "string",
            "description": "Name of the product brand."
          },
          "type": {
            "type": "string"
          },
          "action": {
            "$ref": "#/components/schemas/ProductListingAction"
          },
          "_custom_json": {
            "type": "object",
            "additionalProperties": true
          }
        },
        "description": "Represents the details of a product brand."
      },
      "ProductDepartment": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "integer",
            "description": "Unique identifier for the product department."
          },
          "logo": {
            "$ref": "#/components/schemas/Media"
          },
          "slug": {
            "type": "string",
            "description": "URL-friendly identifier for the product department."
          },
          "name": {
            "type": "string",
            "description": "Name of the product department."
          }
        },
        "description": "Represents the details of a product department."
      },
      "ProductCategoryMap": {
        "type": "object",
        "properties": {
          "l1": {
            "$ref": "#/components/schemas/ProductBrand"
          },
          "l2": {
            "$ref": "#/components/schemas/ProductBrand"
          },
          "l3": {
            "$ref": "#/components/schemas/ProductBrand"
          }
        },
        "description": "Represents a mapping of product categories at different levels."
      },
      "NetQuantity": {
        "type": "object",
        "properties": {
          "unit": {
            "enum": [
              "kg",
              "g",
              "L",
              "ml",
              "m",
              "cm",
              "nos",
              "pack"
            ],
            "type": "string",
            "description": "The unit of measurement used for the net quantity of the product."
          },
          "value": {
            "type": "number",
            "minimum": 0.001,
            "description": "The value of the net quantity of the product."
          }
        },
        "description": "Represents the net quantity of a product, including its unit of measurement and value."
      },
      "CustomMetaFields": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "description": "A value to store in the custom field."
          },
          "key": {
            "type": "string",
            "minLength": 1,
            "maxLength": 30,
            "description": "A key to store a custom field."
          }
        },
        "required": [
          "key",
          "value"
        ],
        "description": "Represents custom metadata fields with a key and its corresponding value."
      },
      "ApplicationItemSeoAction": {
        "type": "object",
        "description": "Defines the action to be taken when a breadcrumb or SEO element is clicked or selected.",
        "properties": {
          "page": {
            "type": "object",
            "additionalProperties": true,
            "description": "Details of the page associated with this SEO action."
          },
          "type": {
            "type": "string",
            "description": "Type of action, such as navigation or redirection."
          }
        },
        "required": [
          "type"
        ]
      },
      "ApplicationItemSeoBreadcrumbs": {
        "type": "object",
        "description": "Represents a breadcrumb in SEO terms, providing navigation paths for users and search engines.",
        "properties": {
          "url": {
            "type": "string",
            "description": "The URL that this breadcrumb points to."
          },
          "action": {
            "$ref": "#/components/schemas/ApplicationItemSeoAction"
          }
        }
      },
      "ApplicationItemSeoMetaTagItem": {
        "type": "object",
        "description": "Represents a key-value pair used for meta tags in SEO settings.",
        "properties": {
          "key": {
            "type": "string",
            "description": "The name of the meta tag."
          },
          "value": {
            "type": "string",
            "description": "The value associated with the meta tag."
          }
        },
        "required": [
          "key",
          "value"
        ]
      },
      "ApplicationItemSEO": {
        "type": "object",
        "description": "Represents the SEO metadata for an item.",
        "properties": {
          "description": {
            "description": "The SEO description of the item.",
            "type": "string"
          },
          "sitemap": {
            "$ref": "#/components/schemas/ApplicationItemSeoSitemap"
          },
          "breadcrumbs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationItemSeoBreadcrumbs"
            }
          },
          "meta_tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationItemSeoMetaTags"
            }
          },
          "canonical_url": {
            "description": "The SEO canonical URL of the item.",
            "type": "string"
          }
        }
      },
      "ApplicationItemSeoSitemap": {
        "type": "object",
        "description": "The SEO sitemap information of the item.",
        "properties": {
          "priority": {
            "description": "The SEO priority of the item.",
            "type": "number",
            "format": "float",
            "enum": [
              0,
              0.1,
              0.2,
              0.3,
              0.4,
              0.5,
              0.6,
              0.7,
              0.8,
              0.9,
              1
            ]
          },
          "frequency": {
            "description": "The SEO frequency of the item.",
            "type": "string",
            "enum": [
              "always",
              "hourly",
              "daily",
              "weekly",
              "monthly",
              "yearly",
              "never"
            ]
          }
        }
      },
      "ApplicationItemSeoMetaTags": {
        "type": "object",
        "description": "The SEO meta tags information of the item.",
        "properties": {
          "title": {
            "description": "The SEO title of the product.",
            "type": "string"
          },
          "items": {
            "description": "The SEO items for the product.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationItemSeoMetaTagItem"
            }
          }
        }
      },
      "ProductDetailAttribute": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "The value of the product attribute."
          },
          "type": {
            "type": "string",
            "description": "The type or category of the product attribute."
          },
          "key": {
            "type": "string",
            "description": "The key or name of the product attribute."
          }
        },
        "description": "Represents an individual attribute of a product."
      },
      "ProductDetailGroupedAttribute": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title or name of the attribute group."
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDetailAttribute"
            },
            "description": "A list of product attributes within this group."
          }
        },
        "description": "Represents a group of product attributes."
      },
      "ApplicationItemMOQ": {
        "type": "object",
        "properties": {
          "minimum": {
            "type": "integer",
            "default": 1,
            "minimum": 1,
            "description": "The minimum quantity required for purchase."
          },
          "maximum": {
            "type": "integer",
            "description": "The maximum quantity allowed for purchase."
          },
          "increment_unit": {
            "type": "integer",
            "default": 1,
            "minimum": 1,
            "description": "The minimum quantity increment in which the item can be purchased."
          }
        },
        "description": "Represents the minimum order quantity (MOQ) requirements for an application item."
      },
      "Price": {
        "description": "The effective price object for the product.",
        "type": "object",
        "properties": {
          "min": {
            "type": "number",
            "description": "The minimum price for the product across stores.",
            "example": 20
          },
          "currency_symbol": {
            "type": "string",
            "description": "The currency symbol for the currency in which the product is available.",
            "example": "₹"
          },
          "currency_code": {
            "type": "string",
            "description": "The currency code for the currency in which the product is available.",
            "example": "INR",
            "x-not-enum": true
          },
          "max": {
            "type": "number",
            "description": "The maximum price for the product across stores.",
            "example": 200
          }
        },
        "example": {
          "currency_code": "INR",
          "currency_symbol": "₹",
          "max": 90,
          "min": 70
        }
      },
      "ProductListingPrice": {
        "type": "object",
        "properties": {
          "effective": {
            "$ref": "#/components/schemas/Price"
          },
          "marked": {
            "$ref": "#/components/schemas/Price"
          },
          "selling": {
            "$ref": "#/components/schemas/Price"
          }
        },
        "description": "Represents details of price for a product."
      },
      "ProductSizesPrice": {
        "type": "object",
        "description": "Contains price information for product sizes.",
        "properties": {
          "effective": {
            "$ref": "#/components/schemas/Price"
          },
          "marked": {
            "$ref": "#/components/schemas/Price"
          },
          "selling": {
            "$ref": "#/components/schemas/Price"
          }
        }
      },
      "ProductCompareDetail": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "integer",
            "description": "Unique identifier for the product."
          },
          "custom_order": {
            "$ref": "#/components/schemas/ProductDetailCustomOrder"
          },
          "net_quantity": {
            "$ref": "#/components/schemas/NetQuantity"
          },
          "rating_count": {
            "type": "integer",
            "description": "Count of ratings the product has received."
          },
          "template_tag": {
            "type": "string",
            "description": "Tag for identifying the product template."
          },
          "sellable": {
            "type": "boolean",
            "description": "Indicates whether the product is available for sale."
          },
          "_custom_meta": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomMetaFields"
            },
            "description": "Custom metadata fields associated with the product."
          },
          "similars": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of products marked similar to given product."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags associated with the product for better categorization."
          },
          "seo": {
            "$ref": "#/components/schemas/ApplicationItemSEO"
          },
          "image_nature": {
            "type": "string",
            "description": "Type of the images associated with the product such as standard."
          },
          "has_variant": {
            "type": "boolean",
            "description": "Indicates whether the product has variants."
          },
          "item_type": {
            "type": "string",
            "description": "This field describes the type of item, indicating the category or nature of the product. Possible values are Standard, Composite, Set, Digital.",
            "enum": [
              "standard",
              "composite",
              "set",
              "digital"
            ]
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the product."
          },
          "grouped_attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDetailGroupedAttribute"
            },
            "description": "Grouped attributes detailing various characteristics of the product."
          },
          "medias": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Media"
            },
            "description": "Media files associated with the product."
          },
          "type": {
            "type": "string",
            "description": "Product type or classification."
          },
          "_custom_json": {
            "type": "object",
            "additionalProperties": true,
            "description": "Custom JSON object for additional product data."
          },
          "item_code": {
            "type": "string",
            "description": "Item Code defined for the product.",
            "x-not-enum": true
          },
          "name": {
            "type": "string",
            "description": "Name of the product."
          },
          "moq": {
            "$ref": "#/components/schemas/ApplicationItemMOQ"
          },
          "short_description": {
            "type": "string",
            "description": "Brief description of the product."
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductBrand"
            },
            "description": "List of product categories associated with the product."
          },
          "attributes": {
            "type": "object",
            "description": "Additional attributes or characteristics of the product.",
            "additionalProperties": true
          },
          "discount": {
            "type": "string",
            "description": "Discount applied to the product, if any."
          },
          "tryouts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Identifiers or names of tryout versions of the product."
          },
          "slug": {
            "type": "string",
            "description": "URL-friendly identifier for the product."
          },
          "action": {
            "$ref": "#/components/schemas/ProductListingAction"
          },
          "rating": {
            "type": "number",
            "description": "The rating of the product."
          },
          "is_dependent": {
            "type": "boolean",
            "description": "Indicates whether the product can be sold as an individual product."
          },
          "product_group_tag": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of bundle/product grouping slugs mapped to the product."
          },
          "highlights": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Key highlights or features of the product."
          },
          "price": {
            "$ref": "#/components/schemas/ProductListingPrice"
          },
          "brand": {
            "$ref": "#/components/schemas/ProductBrand"
          },
          "department": {
            "$ref": "#/components/schemas/ProductDepartment"
          },
          "teaser_tag": {
            "type": "string",
            "description": "Teaser tag or short promotional phrase for the product."
          },
          "country_of_origin": {
            "type": "string",
            "description": "Country where the product is manufactured."
          }
        },
        "required": [
          "slug"
        ],
        "description": "Represents detailed information about a product."
      },
      "ProductDetail": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "integer",
            "description": "Unique identifier for the product."
          },
          "sizes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "identifiers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "is_tryout": {
            "type": "boolean"
          },
          "channel": {
            "type": "string"
          },
          "discount_meta": {
            "$ref": "#/components/schemas/DiscountMeta"
          },
          "variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductVariantResponseSchema"
            }
          },
          "custom_order": {
            "$ref": "#/components/schemas/ProductDetailCustomOrder"
          },
          "category_map": {
            "$ref": "#/components/schemas/ProductCategoryMap"
          },
          "net_quantity": {
            "$ref": "#/components/schemas/NetQuantity"
          },
          "rating_count": {
            "type": "integer",
            "description": "Count of ratings the product has received."
          },
          "_custom_meta": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomMetaFields"
            },
            "description": "Custom metadata fields associated with the product."
          },
          "similars": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of products marked similar to given product."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags associated with the product for better categorization."
          },
          "seo": {
            "$ref": "#/components/schemas/ApplicationItemSEO"
          },
          "image_nature": {
            "type": "string",
            "description": "Type of the images associated with the product such as standard."
          },
          "has_variant": {
            "type": "boolean",
            "description": "Indicates whether the product has variants."
          },
          "item_type": {
            "type": "string",
            "description": "This field describes the type of item, indicating the category or nature of the product. Possible values are Standard, Composite, Set Digital.",
            "enum": [
              "set",
              "standard",
              "composite",
              "digital"
            ]
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the product."
          },
          "grouped_attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDetailGroupedAttribute"
            },
            "description": "Grouped attributes detailing various characteristics of the product."
          },
          "medias": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Media"
            },
            "description": "Media files associated with the product."
          },
          "color": {
            "type": "string",
            "description": "Color of the product, if applicable."
          },
          "type": {
            "type": "string",
            "description": "Product type or classification."
          },
          "product_online_date": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the product was made available online."
          },
          "_custom_json": {
            "type": "object",
            "additionalProperties": true,
            "description": "Custom JSON object for additional product data."
          },
          "item_code": {
            "type": "string",
            "description": "Item Code defined for the product.",
            "x-not-enum": true
          },
          "name": {
            "type": "string",
            "description": "Name of the product."
          },
          "moq": {
            "$ref": "#/components/schemas/ApplicationItemMOQ"
          },
          "short_description": {
            "type": "string",
            "description": "Brief description of the product."
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductBrand"
            },
            "description": "List of product categories associated with the product."
          },
          "attributes": {
            "type": "object",
            "additionalProperties": true,
            "description": "Additional attributes or characteristics of the product."
          },
          "discount": {
            "type": "string",
            "description": "Discount applied to the product, if any."
          },
          "tryouts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Identifiers or names of tryout versions of the product."
          },
          "slug": {
            "type": "string",
            "description": "URL-friendly identifier for the product."
          },
          "action": {
            "$ref": "#/components/schemas/ProductListingAction"
          },
          "rating": {
            "type": "number",
            "description": "The rating of the product."
          },
          "is_dependent": {
            "type": "boolean",
            "description": "Indicates whether the product can be sold as an individual product."
          },
          "product_group_tag": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of bundle/product grouping slugs mapped to the product."
          },
          "highlights": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Key highlights or features of the product."
          },
          "price": {
            "$ref": "#/components/schemas/ProductListingPrice"
          },
          "brand": {
            "$ref": "#/components/schemas/ProductBrand"
          },
          "department": {
            "$ref": "#/components/schemas/ProductDepartment"
          },
          "teaser_tag": {
            "type": "string",
            "description": "Teaser tag or short promotional phrase for the product."
          },
          "promo_meta": {
            "type": "object",
            "additionalProperties": true
          },
          "no_of_boxes": {
            "type": "integer"
          },
          "template_tag": {
            "type": "string"
          },
          "sellable": {
            "type": "boolean"
          },
          "country_of_origin": {
            "type": "string",
            "description": "The country of origin for the product."
          },
          "modified_on": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the filter was modified."
          }
        },
        "required": [
          "slug"
        ],
        "description": "Represents detailed information about a product."
      },
      "NotServiceableError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "is_serviceable": {
            "type": "boolean"
          }
        }
      },
      "ErrorResponseSchema": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true,
            "description": "The HTTP status code of the response."
          },
          "message": {
            "type": "string",
            "nullable": true,
            "description": "A message providing details about the response."
          },
          "status": {
            "type": "integer",
            "description": "An additional code providing more context about the response."
          },
          "exception": {
            "type": "string",
            "nullable": true,
            "description": "Details of any exception that occurred."
          },
          "stack_trace": {
            "type": "string",
            "nullable": true,
            "description": "The stack trace of any exception that occurred."
          }
        },
        "description": "Schema for Error Response."
      },
      "Dimension": {
        "type": "object",
        "properties": {
          "unit": {
            "type": "string",
            "nullable": true
          },
          "width": {
            "type": "integer",
            "nullable": true
          },
          "height": {
            "type": "integer",
            "nullable": true
          },
          "length": {
            "type": "integer",
            "nullable": true
          },
          "is_default": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "Weight": {
        "type": "object",
        "properties": {
          "unit": {
            "type": "string",
            "nullable": true
          },
          "shipping": {
            "type": "integer",
            "nullable": true
          },
          "is_default": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "ProductSize": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "integer",
            "description": "The quantity of the product size available."
          },
          "dimension": {
            "$ref": "#/components/schemas/Dimension"
          },
          "weight": {
            "$ref": "#/components/schemas/Weight"
          },
          "is_available": {
            "type": "boolean",
            "description": "Indicates whether the product size is available for purchase."
          },
          "seller_identifiers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of identifiers used by sellers for the product size."
          },
          "value": {
            "type": "string",
            "description": "The value or label representing the product size."
          },
          "display": {
            "type": "string",
            "description": "Display name of the product size."
          },
          "set": {
            "$ref": "#/components/schemas/ProductSetV3"
          }
        },
        "description": "Represents the size details of a product, including dimensions, weight, and availability."
      },
      "SizeChartValues": {
        "type": "object",
        "properties": {
          "col_3": {
            "type": "string",
            "description": "Value for column 3."
          },
          "col_6": {
            "type": "string",
            "description": "Value for column 6."
          },
          "col_2": {
            "type": "string",
            "description": "Value for column 2."
          },
          "col_4": {
            "type": "string",
            "description": "Value for column 4."
          },
          "col_1": {
            "type": "string",
            "description": "Value for column 1."
          },
          "col_5": {
            "type": "string",
            "description": "Value for column 5."
          }
        },
        "description": "Values corresponding to different size chart columns."
      },
      "ColumnHeader": {
        "type": "object",
        "properties": {
          "convertable": {
            "type": "boolean",
            "description": "Indicates if the column value can be converted or transformed."
          },
          "value": {
            "type": "string",
            "description": "The value or title of the column header."
          }
        },
        "description": "Header for a column in the size chart."
      },
      "ColumnHeaders": {
        "type": "object",
        "properties": {
          "col_3": {
            "$ref": "#/components/schemas/ColumnHeader"
          },
          "col_6": {
            "$ref": "#/components/schemas/ColumnHeader"
          },
          "col_2": {
            "$ref": "#/components/schemas/ColumnHeader"
          },
          "col_4": {
            "$ref": "#/components/schemas/ColumnHeader"
          },
          "col_1": {
            "$ref": "#/components/schemas/ColumnHeader"
          },
          "col_5": {
            "$ref": "#/components/schemas/ColumnHeader"
          }
        },
        "description": "Column headers for the size chart."
      },
      "SizeChart": {
        "type": "object",
        "properties": {
          "unit": {
            "type": "string",
            "description": "Unit of measurement used in the size chart (e.g., in, cm)."
          },
          "image": {
            "type": "string",
            "format": "url",
            "description": "URL of the image representing the size chart."
          },
          "size_tip": {
            "type": "string",
            "description": "Additional tip or guideline related to sizing."
          },
          "sizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SizeChartValues"
            },
            "description": "Array of size chart values for different sizes."
          },
          "description": {
            "type": "string",
            "description": "Description related to the size chart."
          },
          "title": {
            "type": "string",
            "description": "Title or name of the size chart."
          },
          "headers": {
            "$ref": "#/components/schemas/ColumnHeaders"
          }
        },
        "description": "Size chart providing detailed sizing information for products."
      },
      "ProductSizeStores": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Number of stores where the product size is available."
          }
        },
        "description": "Information about the availability of product sizes in different stores."
      },
      "ProductSizes": {
        "type": "object",
        "properties": {
          "sizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductSize"
            },
            "description": "List of available sizes for the product."
          },
          "price": {
            "$ref": "#/components/schemas/ProductSizesPrice"
          },
          "price_per_piece": {
            "$ref": "#/components/schemas/ProductSizesPrice"
          },
          "size_chart": {
            "$ref": "#/components/schemas/SizeChart"
          },
          "sellable": {
            "type": "boolean",
            "description": "Whether the product sizes are available for sale."
          },
          "multi_size": {
            "type": "boolean",
            "description": "Whether the product supports multiple sizes."
          },
          "discount": {
            "type": "string",
            "description": "Discount information applicable to the product sizes."
          },
          "stores": {
            "$ref": "#/components/schemas/ProductSizeStores"
          },
          "discount_meta": {
            "$ref": "#/components/schemas/DiscountMeta"
          },
          "moq": {
            "$ref": "#/components/schemas/MOQ"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags associated with the product sizes."
          },
          "custom_order": {
            "type": "object",
            "additionalProperties": true,
            "description": "Custom order-related data for the product sizes."
          },
          "no_of_boxes": {
            "type": "integer",
            "description": "Number of boxes required for packaging the product."
          },
          "teaser_tag": {
            "type": "object",
            "additionalProperties": true,
            "description": "A flexible object that holds additional teaser tag information, where keys and values can vary based on the product's needs or marketing strategies."
          }
        }
      },
      "MOQ": {
        "type": "object",
        "description": "The minimum order quantity details.",
        "properties": {
          "maximum": {
            "type": "integer",
            "description": "The maximum quantity that can be ordered."
          },
          "minimum": {
            "type": "integer",
            "description": "The minimum quantity required to place an order."
          },
          "increment_unit": {
            "type": "integer",
            "description": "The unit increment for ordering beyond the minimum quantity."
          }
        }
      },
      "AttributeDetail": {
        "type": "object",
        "properties": {
          "logo": {
            "type": "string",
            "description": "URL or path to the logo associated with the attribute."
          },
          "description": {
            "type": "string",
            "description": "A description of the attribute."
          },
          "display": {
            "type": "string",
            "description": "Display name or label for the attribute."
          },
          "key": {
            "type": "string",
            "description": "Unique key or identifier for the attribute."
          }
        },
        "description": "Represents the details of an attribute used for comparison or metadata."
      },
      "AttributeMetadata": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title or name of the attribute metadata."
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeDetail"
            },
            "description": "List of detailed information about attributes."
          }
        },
        "description": "Contains metadata about attributes used in product comparisons."
      },
      "ProductsComparisonResponseSchema": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductCompareDetail"
            },
            "description": "List of product details for comparison."
          },
          "attributes_metadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeMetadata"
            },
            "description": "Metadata about attributes used for comparing products."
          }
        },
        "description": "Response schema for comparing multiple products."
      },
      "ProductCompareResponseSchema": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title or name of the comparison."
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDetail"
            },
            "description": "List of product details for comparison."
          },
          "attributes_metadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeMetadata"
            },
            "description": "Metadata about attributes used for comparing products."
          },
          "subtitle": {
            "type": "string",
            "description": "Subtitle or additional description for the comparison."
          }
        },
        "description": "Response schema for comparing products with additional metadata."
      },
      "ProductFrequentlyComparedSimilarResponseSchema": {
        "type": "object",
        "properties": {
          "similars": {
            "$ref": "#/components/schemas/ProductCompareResponseSchema"
          }
        },
        "description": "Response schema for products frequently compared with similar items."
      },
      "ProductVariantItemResponseSchema": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "integer",
            "description": "Unique identifier for the product variant."
          },
          "color_name": {
            "type": "string",
            "description": "Name of the color for the variant."
          },
          "color": {
            "type": "string",
            "description": "Color code or representation for the variant."
          },
          "medias": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Media"
            },
            "description": "Media files associated with the product variant."
          },
          "is_available": {
            "type": "boolean",
            "description": "Indicates whether the product variant is available for purchase."
          },
          "_custom_meta": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomMetaFields"
            },
            "description": "Custom metadata fields associated with the product."
          },
          "name": {
            "type": "string",
            "description": "Name of the product variant."
          },
          "value": {
            "type": "string",
            "description": "Value or label representing the product variant."
          },
          "slug": {
            "type": "string",
            "description": "URL-friendly identifier for the product."
          },
          "_custom_json": {
            "type": "object",
            "additionalProperties": true,
            "description": "Custom JSON object for additional data related to the product."
          },
          "action": {
            "$ref": "#/components/schemas/ProductListingAction"
          }
        },
        "description": "Details of a specific product variant."
      },
      "ProductVariantResponseSchema": {
        "type": "object",
        "properties": {
          "display_type": {
            "type": "string",
            "description": "The type of display for the product variant (e.g., image, text, image, color).",
            "x-not-enum": true
          },
          "header": {
            "type": "string",
            "description": "Header or title for the product variant section."
          },
          "logo": {
            "type": "string",
            "description": "URL or path to the logo associated with the product variant."
          },
          "group_id": {
            "type": "string",
            "description": "Group ID used to group variants."
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductVariantItemResponseSchema"
            },
            "description": "List of product variant items."
          },
          "key": {
            "type": "string",
            "description": "Attribute identifier of the variant."
          }
        },
        "description": "Represents the details of a product variant, including display type, header, logo, and associated items."
      },
      "ProductVariantsResponseSchema": {
        "type": "object",
        "properties": {
          "variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductVariantResponseSchema"
            },
            "description": "A list of product variant responses, each detailing a specific variant."
          }
        },
        "description": "Represents a response containing multiple product variants."
      },
      "StoreDetail": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the store."
          },
          "city": {
            "type": "string",
            "description": "City where the store is located."
          },
          "id": {
            "type": "integer",
            "description": "Unique identifier for the store."
          },
          "code": {
            "type": "string",
            "description": "Code assigned to the store."
          }
        },
        "description": "Details of the store."
      },
      "ProductStockPrice": {
        "type": "object",
        "properties": {
          "effective": {
            "type": "number",
            "description": "Effective price of the product."
          },
          "currency": {
            "type": "string",
            "description": "Currency of the product price."
          },
          "marked": {
            "type": "number",
            "description": "Marked price of the product."
          }
        },
        "description": "Price details of the product."
      },
      "CompanyDetail": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the company."
          },
          "id": {
            "type": "integer",
            "description": "Unique identifier for the company."
          }
        },
        "description": "Company information."
      },
      "Seller": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "integer",
            "description": "Unique identifier of the seller."
          },
          "name": {
            "type": "string",
            "description": "Name of the seller."
          },
          "count": {
            "type": "integer",
            "description": "Count of items available from the seller."
          }
        },
        "description": "Seller details."
      },
      "ArticleIdentifier": {
        "type": "object",
        "properties": {
          "ean": {
            "type": "string",
            "description": "European Article Number (EAN) for the product."
          },
          "alu": {
            "type": "string",
            "description": "Stock-keeping unit (SKU) used by retailers, also known as ALU."
          },
          "upc": {
            "type": "string",
            "description": "Universal Product Code (UPC) for the product."
          },
          "sku_code": {
            "type": "string",
            "description": "SKU code specific to the product.",
            "x-not-enum": true
          }
        },
        "description": "Identifiers for the product."
      },
      "ProductStockStatusItem": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "description": "NA."
          },
          "quantity": {
            "type": "integer",
            "description": "NA."
          },
          "brand": {
            "$ref": "#/components/schemas/BrandItem"
          },
          "seller_identifier": {
            "type": "string"
          },
          "price_effective": {
            "type": "number"
          },
          "price_selling": {
            "type": "number"
          },
          "price_marked": {
            "type": "number"
          },
          "discount_meta": {
            "$ref": "#/components/schemas/DiscountMeta"
          },
          "discount_applied": {
            "type": "object",
            "additionalProperties": true
          },
          "store": {
            "$ref": "#/components/schemas/StoreDetail"
          },
          "size": {
            "type": "string",
            "description": "Identifier assigned by the seller."
          },
          "identifier": {
            "$ref": "#/components/schemas/ArticleIdentifier"
          },
          "price": {
            "$ref": "#/components/schemas/ProductStockPrice"
          },
          "item_id": {
            "type": "integer",
            "description": "Unique identifier of the item."
          },
          "company": {
            "$ref": "#/components/schemas/CompanyDetail"
          },
          "company_id": {
            "type": "integer",
            "description": "Unique identifier for the company."
          },
          "brand_id": {
            "type": "integer",
            "description": "Unique identifier for the brand."
          },
          "store_id": {
            "type": "integer",
            "description": "Unique identifier for the store."
          },
          "seller": {
            "$ref": "#/components/schemas/Seller"
          },
          "currency": {
            "type": "string",
            "description": "Currency in which the prices are listed."
          }
        },
        "description": "Details of the product stock status."
      },
      "ProductStockStatusResponseSchema": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductStockStatusItem"
            },
            "description": "List of stock status items."
          }
        },
        "description": "Response containing product stock status information."
      },
      "Page": {
        "type": "object",
        "description": "An object representing a page with pagination details.",
        "properties": {
          "item_total": {
            "type": "integer",
            "format": "int32",
            "description": "The total number of items on the page.",
            "example": 10
          },
          "next_id": {
            "type": "string",
            "description": "The identifier for the next page.",
            "example": "abc123"
          },
          "has_previous": {
            "type": "boolean",
            "description": "Indicates whether there is a previous page.",
            "example": true
          },
          "has_next": {
            "type": "boolean",
            "description": "Indicates whether there is a next page.",
            "example": false
          },
          "current": {
            "type": "integer",
            "format": "int32",
            "description": "The current page number.",
            "example": 1
          },
          "type": {
            "type": "string",
            "description": "The type of the page, such as 'PageType'.",
            "example": "PageType"
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "description": "The number of items per page.",
            "example": 20
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of items.",
            "example": 1
          }
        },
        "required": [
          "type"
        ]
      },
      "ProductStockPolling": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductStockStatusItem"
            },
            "description": "List of product stock status items."
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          }
        },
        "required": [
          "page"
        ],
        "description": "Polling response for product stock details, including stock status and pagination information."
      },
      "ProductVariantListingResponseSchema": {
        "type": "object",
        "properties": {
          "header": {
            "type": "string",
            "description": "Header or title for the product variant section."
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductVariantItemResponseSchema"
            },
            "description": "List of Upto 5 product variant items."
          },
          "total": {
            "type": "integer",
            "description": "The total number of product variants available."
          },
          "key": {
            "type": "string",
            "description": "Attribute identifier of the variant."
          },
          "display_type": {
            "type": "string",
            "description": "The type of display for the product variant (e.g., image, text, image, color).",
            "x-not-enum": true
          }
        },
        "description": "Response for listing multiple product variants with additional metadata."
      },
      "ProductListingDetail": {
        "type": "object",
        "properties": {
          "discount_meta": {
            "$ref": "#/components/schemas/DiscountMeta"
          },
          "uid": {
            "type": "integer",
            "description": "Unique identifier for the product."
          },
          "custom_order": {
            "$ref": "#/components/schemas/ProductDetailCustomOrder"
          },
          "sizes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Available sizes for the product."
          },
          "category_map": {
            "$ref": "#/components/schemas/ProductCategoryMap"
          },
          "net_quantity": {
            "$ref": "#/components/schemas/NetQuantity"
          },
          "rating_count": {
            "type": "integer",
            "description": "The number of ratings the product has received."
          },
          "_custom_meta": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomMetaFields"
            },
            "description": "Custom metadata fields associated with the product."
          },
          "similars": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of products marked similar to given product."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags associated with the product for better categorization."
          },
          "seo": {
            "$ref": "#/components/schemas/ApplicationItemSEO"
          },
          "image_nature": {
            "type": "string",
            "description": "Type of the images associated with the product such as standard."
          },
          "has_variant": {
            "type": "boolean",
            "description": "Indicates whether the product has variants."
          },
          "item_type": {
            "type": "string",
            "description": " This field describes the type of item, indicating the category or nature of the product. Possible values are Standard, Composite, Set Digital.",
            "enum": [
              "set",
              "standard",
              "composite",
              "digital"
            ]
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the product."
          },
          "grouped_attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDetailGroupedAttribute"
            },
            "description": "Grouped attributes detailing various characteristics of the product."
          },
          "medias": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Media"
            },
            "description": "Media files associated with the product."
          },
          "color": {
            "type": "string",
            "description": "Color of the product, if applicable."
          },
          "type": {
            "type": "string",
            "description": "Product type or classification."
          },
          "product_online_date": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the product was made available online."
          },
          "_custom_json": {
            "type": "object",
            "description": "Custom JSON object for additional product data.",
            "additionalProperties": true
          },
          "item_code": {
            "type": "string",
            "description": "Item Code defined for the product.",
            "x-not-enum": true
          },
          "name": {
            "type": "string",
            "description": "Name of the product."
          },
          "moq": {
            "$ref": "#/components/schemas/ApplicationItemMOQ"
          },
          "short_description": {
            "type": "string",
            "description": "Brief description of the product."
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductBrand"
            },
            "description": "List of product categories associated with the product."
          },
          "sellable": {
            "type": "boolean",
            "description": "Indicates whether the product is available for sale."
          },
          "attributes": {
            "type": "object",
            "additionalProperties": true,
            "description": "Additional attributes or characteristics of the product."
          },
          "variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductVariantListingResponseSchema"
            },
            "description": "List of product variants available for the product."
          },
          "discount": {
            "type": "string",
            "description": "Discount details or percentage applied to the product."
          },
          "tryouts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of tryout options available for the product."
          },
          "identifiers": {
            "type": "array",
            "default": [],
            "items": {
              "type": "string"
            },
            "description": "List of seller identifiers for the product."
          },
          "slug": {
            "type": "string",
            "description": "URL-friendly identifier for the product."
          },
          "action": {
            "$ref": "#/components/schemas/ProductListingAction"
          },
          "rating": {
            "type": "number",
            "description": "Rating of the product."
          },
          "is_dependent": {
            "type": "boolean",
            "description": "Indicates whether the product can be sold as an individual product."
          },
          "product_group_tag": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of bundle/product grouping slugs mapped to the product."
          },
          "highlights": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Key highlights or features of the product."
          },
          "price": {
            "$ref": "#/components/schemas/ProductListingPrice"
          },
          "brand": {
            "$ref": "#/components/schemas/ProductBrand"
          },
          "teaser_tag": {
            "type": "string",
            "description": "Teaser tag or short promotional phrase for the product."
          },
          "country_of_origin": {
            "type": "string",
            "description": "The country of origin for the product."
          },
          "is_tryout": {
            "type": "boolean",
            "description": "Indicates if the product is available for tryout."
          },
          "channel": {
            "type": "string",
            "description": "Identifier for the product channel."
          },
          "modified_on": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the filter was modified."
          }
        },
        "required": [
          "slug"
        ],
        "description": "Detailed information about a product listing, including various attributes, variants, and metadata."
      },
      "ProductFiltersValue": {
        "type": "object",
        "properties": {
          "min": {
            "type": "integer",
            "description": "Minimum value for the range filter."
          },
          "display_format": {
            "type": "string",
            "description": "Format in which the filter value is displayed."
          },
          "selected_max": {
            "type": "integer",
            "description": "The maximum value selected by the user for range filter."
          },
          "value": {
            "type": "string",
            "description": "Value associated with the filter option."
          },
          "query_format": {
            "type": "string",
            "description": "Format used for the filter value in queries."
          },
          "currency_symbol": {
            "type": "string",
            "description": "Currency symbol for the price type filters."
          },
          "selected_min": {
            "type": "integer",
            "description": "The minimum value selected by the user for range filter."
          },
          "currency_code": {
            "type": "string",
            "description": "Currency code for the currency used for price type filters.",
            "x-not-enum": true
          },
          "is_selected": {
            "type": "boolean",
            "description": "Whether this filter value is currently selected."
          },
          "display": {
            "type": "string",
            "description": "Display name or label for the filter value."
          },
          "count": {
            "type": "integer",
            "description": "Number of products that match this filter value."
          },
          "max": {
            "type": "integer",
            "description": "Maximum value of the filter range."
          },
          "logo": {
            "$ref": "#/components/schemas/Media"
          }
        },
        "required": [
          "display",
          "is_selected"
        ],
        "description": "Represents the value of a filter used in product listings."
      },
      "ProductFiltersKey": {
        "type": "object",
        "properties": {
          "logo": {
            "type": "string",
            "format": "url",
            "description": "URL or path to the logo associated with the filter key."
          },
          "name": {
            "type": "string",
            "description": "Name or identifier of the filter key."
          },
          "kind": {
            "type": "string",
            "description": "Type or category of the filter key (e.g., range, multivalued)."
          },
          "display": {
            "type": "string",
            "description": "Display name or label for the filter key."
          }
        },
        "required": [
          "display",
          "name"
        ],
        "description": "Represents a filter key used to categorize or define filter options in product listings."
      },
      "ProductFilters": {
        "type": "object",
        "properties": {
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductFiltersValue"
            },
            "description": "List of filter values associated with the filter key."
          },
          "key": {
            "$ref": "#/components/schemas/ProductFiltersKey"
          }
        },
        "required": [
          "key",
          "values"
        ],
        "description": "Represents a set of filters used for refining product listings based on filter keys and values."
      },
      "ProductSortOn": {
        "type": "object",
        "properties": {
          "logo": {
            "type": "string",
            "format": "url",
            "description": "URL or path to the logo associated with the sorting option."
          },
          "is_selected": {
            "type": "boolean",
            "description": "Indicates whether this sorting option is currently selected."
          },
          "name": {
            "type": "string",
            "description": "Name or identifier of the sorting option."
          },
          "value": {
            "type": "string",
            "description": "Value used to specify the sorting order (e.g., price_asc, discount_dsc)."
          },
          "display": {
            "type": "string",
            "description": "Display name or label for the sorting option."
          }
        },
        "description": "Represents sorting options available for products, including metadata and selection status."
      },
      "ProductListingResponseSchema": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductListingDetail"
            },
            "description": "List of product details included in the response."
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductFilters"
            },
            "description": "List of filters available for refining the product listings."
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          },
          "sort_on": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductSortOn"
            },
            "description": "List of sorting options available for the product listings."
          }
        },
        "required": [
          "page"
        ],
        "description": "Represents the response for a product listing query, including product details, filters, pagination, and sorting options."
      },
      "ImageUrls": {
        "type": "object",
        "properties": {
          "portrait": {
            "$ref": "#/components/schemas/Media"
          },
          "landscape": {
            "$ref": "#/components/schemas/Media"
          }
        },
        "description": "Represents different image formats for a brand or product, typically used for varying display orientations."
      },
      "BrandItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "uid": {
            "type": "integer",
            "description": "The unique identifier for the brand."
          },
          "logo": {
            "$ref": "#/components/schemas/Media"
          },
          "seo": {
            "$ref": "#/components/schemas/ApplicationItemSEO"
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the brand, including its history, values, product offerings, and other relevant information."
          },
          "banners": {
            "$ref": "#/components/schemas/ImageUrls"
          },
          "departments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Lists the departments or categories under which the brand's products are listed."
          },
          "discount": {
            "type": "string",
            "description": "Details about any discounts currently available on the brand's products."
          },
          "name": {
            "type": "string",
            "description": "Name of the brand."
          },
          "slug": {
            "type": "string",
            "description": "URL-friendly version of the brand's name, used in the web address to access the brand's page on the platform."
          },
          "action": {
            "$ref": "#/components/schemas/ProductListingAction"
          }
        },
        "description": "Represents details of a brand item, including logos, banners, and other brand-specific information."
      },
      "BrandListingResponseSchema": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BrandItem"
            },
            "description": "List of brand items included in the response."
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          }
        },
        "required": [
          "page"
        ],
        "description": "Response containing a list of brand items along with pagination information."
      },
      "BrandDetailResponseSchema": {
        "type": "object",
        "properties": {
          "logo": {
            "$ref": "#/components/schemas/Media"
          },
          "uid": {
            "type": "integer",
            "description": "The unique identifier for the brand."
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the brand, including its history, values, product offerings, and other relevant information."
          },
          "banners": {
            "$ref": "#/components/schemas/ImageUrls"
          },
          "_custom_json": {
            "type": "object",
            "additionalProperties": true,
            "description": "Custom JSON data related to the brand, allowing for additional metadata."
          },
          "slug": {
            "type": "string"
          },
          "_app": {
            "type": "object",
            "additionalProperties": true
          },
          "name": {
            "type": "string",
            "description": "Name of the brand."
          },
          "seo": {
            "$ref": "#/components/schemas/ApplicationItemSEO"
          }
        },
        "description": "Detailed response for a specific brand, including its logo, description, and custom data."
      },
      "CategoryBanner": {
        "type": "object",
        "properties": {
          "portrait": {
            "$ref": "#/components/schemas/Media"
          },
          "landscape": {
            "$ref": "#/components/schemas/Media"
          }
        },
        "required": [
          "landscape",
          "portrait"
        ],
        "description": "Represents banner images for a category, including different orientations for optimal display."
      },
      "ThirdLevelChild": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "integer",
            "description": "Unique identifier for the L3  category."
          },
          "banners": {
            "$ref": "#/components/schemas/ImageUrls"
          },
          "childs": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": true
            },
            "description": "List of categories under the L3  category."
          },
          "_custom_json": {
            "type": "object",
            "description": "Custom JSON data related to the L3 category, allowing for additional metadata.",
            "additionalProperties": true
          },
          "name": {
            "type": "string",
            "description": "Name of the L3 category."
          },
          "slug": {
            "type": "string",
            "description": "Slug or URL-friendly identifier for the L3 category."
          },
          "action": {
            "$ref": "#/components/schemas/ProductListingAction"
          },
          "priority": {
            "type": "integer",
            "description": "Priority of the category in the listing order."
          }
        },
        "description": "Represents a L3 category with associated details and banners."
      },
      "SecondLevelChild": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "integer",
            "description": "Unique identifier for the L2  category."
          },
          "banners": {
            "$ref": "#/components/schemas/ImageUrls"
          },
          "childs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ThirdLevelChild"
            },
            "description": "List of categories under the L2  category."
          },
          "_custom_json": {
            "type": "object",
            "description": "Custom JSON data related to the L2 category, allowing for additional metadata.",
            "additionalProperties": true
          },
          "name": {
            "type": "string",
            "description": "Name of the L2 category."
          },
          "slug": {
            "type": "string",
            "description": "Slug or URL-friendly identifier for the L2 category."
          },
          "action": {
            "$ref": "#/components/schemas/ProductListingAction"
          },
          "priority": {
            "type": "integer",
            "description": "Priority of the category in the listing order."
          }
        },
        "description": "Represents a L2 category with associated details and banners."
      },
      "Child": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "integer",
            "description": "Unique identifier for the L1 category."
          },
          "banners": {
            "$ref": "#/components/schemas/ImageUrls"
          },
          "childs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SecondLevelChild"
            },
            "description": "List of categories under the L1  category."
          },
          "_custom_json": {
            "type": "object",
            "description": "Custom JSON data related to the L1 category, allowing for additional metadata.",
            "additionalProperties": true
          },
          "name": {
            "type": "string",
            "description": "Name of the L1 category."
          },
          "slug": {
            "type": "string",
            "description": "Slug or URL-friendly identifier for the L1 category."
          },
          "action": {
            "$ref": "#/components/schemas/ProductListingAction"
          },
          "priority": {
            "type": "integer",
            "description": "Priority of the category in the listing order."
          }
        },
        "description": "Represents a L1 category."
      },
      "CategoryItems": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "integer",
            "description": "Unique identifier for the category."
          },
          "banners": {
            "$ref": "#/components/schemas/CategoryBanner"
          },
          "childs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Child"
            },
            "description": "List of L1 categories under the main category."
          },
          "name": {
            "type": "string",
            "description": "Name of the category."
          },
          "slug": {
            "type": "string",
            "description": "Slug or URL-friendly identifier for the category."
          },
          "action": {
            "$ref": "#/components/schemas/ProductListingAction"
          },
          "priority": {
            "type": "integer",
            "description": "Priority of the category in the listing order."
          },
          "_custom_json": {
            "type": "object",
            "additionalProperties": true,
            "description": "Custom JSON data associated with the category."
          }
        },
        "required": [
          "action",
          "banners",
          "name",
          "slug",
          "uid"
        ],
        "description": "Represents a category with its associated details, banners, and linked categories."
      },
      "DepartmentCategoryTree": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryItems"
            },
            "description": "List of categories within the department."
          },
          "department": {
            "type": "string",
            "description": "Name of the department."
          }
        },
        "required": [
          "department"
        ],
        "description": "Represents a department with its associated category hierarchy."
      },
      "DepartmentIdentifier": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "integer",
            "description": "Unique identifier for the department."
          },
          "slug": {
            "type": "string",
            "description": "Slug or URL-friendly identifier for the department."
          }
        },
        "description": "Represents a unique identifier for a department."
      },
      "CategoryListingResponseSchema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DepartmentCategoryTree"
            },
            "description": "List of department category trees."
          },
          "departments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DepartmentIdentifier"
            },
            "description": "List of departments."
          }
        },
        "description": "Response containing a list of department category trees and department identifiers."
      },
      "CategoryMetaResponseSchema": {
        "type": "object",
        "properties": {
          "logo": {
            "$ref": "#/components/schemas/Media"
          },
          "uid": {
            "type": "integer",
            "description": "Unique identifier for the category."
          },
          "banners": {
            "$ref": "#/components/schemas/ImageUrls"
          },
          "_custom_json": {
            "type": "object",
            "additionalProperties": true,
            "description": "Custom JSON data related to the category, allowing for additional metadata."
          },
          "name": {
            "type": "string",
            "description": "Name of the category."
          },
          "_app": {
            "type": "object",
            "additionalProperties": true,
            "description": "Application-specific data associated with the category."
          }
        },
        "description": "Response containing metadata for a category."
      },
      "HomeListingResponseSchema": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductListingDetail"
            },
            "description": "List of product details displayed on the home page."
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          },
          "message": {
            "type": "string",
            "description": "Message related to the home listing response."
          },
          "sort_on": {
            "type": "string",
            "description": "The attribute by which the products are sorted."
          }
        },
        "required": [
          "page"
        ],
        "description": "Response containing product listings for the home page."
      },
      "Department": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "integer",
            "description": "Unique identifier for the department."
          },
          "logo": {
            "$ref": "#/components/schemas/Media"
          },
          "priority_order": {
            "type": "integer",
            "description": "Specifies the display order of the department, determining its position in lists and navigation menus based on priority."
          },
          "name": {
            "type": "string",
            "description": "Name of the department."
          },
          "slug": {
            "type": "string",
            "description": "URL-friendly version of the department's name, used in the web address to access the department's page on the platform."
          }
        },
        "description": "Represents a department with its associated details."
      },
      "DepartmentResponseSchema": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Department"
            },
            "description": "List of department detail objects."
          }
        },
        "description": "Department details."
      },
      "AutocompleteItem": {
        "type": "object",
        "properties": {
          "logo": {
            "$ref": "#/components/schemas/Media"
          },
          "display": {
            "type": "string",
            "description": "Text or value displayed for the autocomplete item."
          },
          "type": {
            "type": "string",
            "description": "The type of action such as product, products, category, brand."
          },
          "_custom_json": {
            "type": "object",
            "additionalProperties": true,
            "description": "Custom JSON data related to the autocomplete item, allowing for additional metadata."
          },
          "action": {
            "$ref": "#/components/schemas/ProductListingAction"
          }
        },
        "description": "Represents an item in the autocomplete suggestion list."
      },
      "AutoCompleteResponseSchema": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AutocompleteItem"
            },
            "description": "List of autocomplete items suggested based on user input."
          }
        },
        "description": "Response containing a list of autocomplete items."
      },
      "CollectionQuery": {
        "type": "object",
        "properties": {
          "op": {
            "type": "string",
            "enum": [
              "in",
              "nin",
              "gt",
              "gte",
              "lt",
              "lte",
              "btw"
            ],
            "description": "The operator used for filtering the collection."
          },
          "value": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The values used for filtering based on the attribute."
          },
          "attribute": {
            "type": "string",
            "description": "The attribute on which the filter is applied."
          }
        },
        "required": [
          "attribute",
          "op",
          "value"
        ],
        "description": "Query parameters for filtering collections based on attributes."
      },
      "NextSchedule": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string"
          },
          "end": {
            "type": "string"
          }
        }
      },
      "Schedule": {
        "type": "object",
        "properties": {
          "duration": {
            "type": "integer"
          },
          "end": {
            "type": "string"
          },
          "start": {
            "type": "string"
          },
          "cron": {
            "type": "string"
          }
        }
      },
      "GetCollectionDetailNest": {
        "type": "object",
        "properties": {
          "is_active": {
            "type": "boolean",
            "description": "Indicates whether the collection is currently active."
          },
          "uid": {
            "type": "string",
            "description": "The unique identifier for the collection."
          },
          "_id": {
            "type": "string"
          },
          "sort_on": {
            "type": "string",
            "description": "The attribute by which the collection items are sorted."
          },
          "meta": {
            "type": "object",
            "description": "Additional metadata related to the collection.",
            "additionalProperties": true
          },
          "banners": {
            "$ref": "#/components/schemas/ImageUrls"
          },
          "cron": {
            "type": "object",
            "additionalProperties": true,
            "description": "Cron details for scheduling related to the collection."
          },
          "_schedule": {
            "$ref": "#/components/schemas/Schedule"
          },
          "query": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CollectionQuery"
            },
            "description": "A list of queries used to filter the collection."
          },
          "description": {
            "type": "string",
            "description": "A detailed description of the collection."
          },
          "type": {
            "type": "string",
            "description": "Type of collections e.g query, items."
          },
          "_custom_json": {
            "type": "object",
            "description": "Custom JSON data associated with the collection.",
            "additionalProperties": true
          },
          "name": {
            "type": "string",
            "description": "The name of the collection."
          },
          "allow_sort": {
            "type": "boolean",
            "description": "Indicates if sorting is allowed for this collection."
          },
          "visible_facets_keys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Keys of the facets visible for filtering within the collection."
          },
          "badge": {
            "type": "object",
            "additionalProperties": true,
            "description": "Badge information associated with the collection."
          },
          "slug": {
            "type": "string",
            "description": "The URL-friendly identifier for the collection."
          },
          "action": {
            "$ref": "#/components/schemas/ProductListingAction"
          },
          "allow_facets": {
            "type": "boolean",
            "description": "Indicates if facets are allowed for filtering within the collection."
          },
          "logo": {
            "$ref": "#/components/schemas/Media"
          },
          "priority": {
            "type": "integer",
            "description": "Priority level of the collection for sorting or display purposes."
          },
          "tag": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "app_id": {
            "type": "string",
            "description": "Application ID associated with the collection."
          },
          "published": {
            "type": "boolean",
            "description": "Indicates if the item is published."
          },
          "_locale_language": {
            "type": "object",
            "additionalProperties": true,
            "description": "Locale or language settings for the item."
          },
          "seo": {
            "type": "object",
            "additionalProperties": true,
            "description": "SEO details for the item, with dynamic fields."
          },
          "is_visible": {
            "type": "boolean",
            "description": "Indicates if the item is visible."
          },
          "modified_on": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the filter was modified."
          }
        },
        "description": "Provides detailed information about a collection."
      },
      "CollectionListingFilterTag": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the tag. This is typically used as a label for filtering purposes."
          },
          "is_selected": {
            "type": "boolean",
            "description": "A flag indicating whether the tag is currently selected as a filter option."
          },
          "display": {
            "type": "string",
            "description": "The display name of the tag. This may be a user-friendly version of the tag name shown in the UI."
          }
        },
        "description": "Represents a tag filter used for filtering collection listings. Tags can be used to categorize or narrow down search results based on specific attributes."
      },
      "CollectionListingFilterType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the filter type. This indicates the type of filtering being applied, such as items, query."
          },
          "is_selected": {
            "type": "boolean",
            "description": "A flag indicating whether this filter type is currently selected as a filter option."
          },
          "display": {
            "type": "string",
            "description": "The display name of the filter type. This is the user-friendly name shown in the UI for the filter type."
          }
        },
        "description": "Represents a filter type for collection listings. Filter types define different categories or attributes that can be used to filter collections."
      },
      "CollectionListingFilter": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CollectionListingFilterTag"
            },
            "description": "An array of tag filters available for the collection listings. Each tag allows for filtering based on specific attributes."
          },
          "type": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CollectionListingFilterType"
            },
            "description": "An array of filter types available for the collection listings. Each type represents a different category or attribute for filtering."
          }
        },
        "description": "Represents the filters applied to collection listings. This includes both tags and filter types, allowing for comprehensive filtering of collections based on various criteria."
      },
      "GetCollectionListingResponseSchema": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetCollectionDetailNest"
            },
            "description": "An array of collection details. Each item in the array represents a collection with various attributes and configurations."
          },
          "filters": {
            "$ref": "#/components/schemas/CollectionListingFilter"
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          }
        },
        "required": [
          "page"
        ],
        "description": "Response object containing a list of collection details, applicable filters, and pagination information for collection listings."
      },
      "CollectionDetailResponseSchema": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "published": {
            "type": "boolean"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "_locale_language": {
            "type": "object",
            "additionalProperties": true
          },
          "seo": {
            "type": "object",
            "additionalProperties": true
          },
          "action": {
            "$ref": "#/components/schemas/ProductListingAction"
          },
          "is_active": {
            "type": "boolean",
            "description": "Indicates whether the collection is active."
          },
          "sort_on": {
            "type": "string",
            "description": "Criteria used to sort the items within the collection, such as price, popularity, or newest first."
          },
          "meta": {
            "type": "object",
            "description": "Metadata associated with the collection.",
            "additionalProperties": true
          },
          "banners": {
            "$ref": "#/components/schemas/ImageUrls"
          },
          "cron": {
            "type": "object",
            "description": "Cron schedule details related to the collection, if applicable.",
            "additionalProperties": true
          },
          "_schedule": {
            "$ref": "#/components/schemas/Schedule"
          },
          "modified_on": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the filter was modified."
          },
          "query": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CollectionQuery"
            },
            "description": "Search or filter query used to dynamically generate the collection based on specific criteria or conditions."
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the collection,."
          },
          "type": {
            "type": "string",
            "description": "Type of collection, specifying the nature or category of the collection."
          },
          "_custom_json": {
            "type": "object",
            "description": "Custom JSON object containing additional properties specific to the collection.",
            "additionalProperties": true
          },
          "name": {
            "type": "string",
            "description": "The name of the collection."
          },
          "allow_sort": {
            "type": "boolean",
            "description": "Indicates if sorting is allowed for this collection."
          },
          "visible_facets_keys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Keys of the facets visible for filtering within the collection."
          },
          "badge": {
            "type": "object",
            "description": "Badge information associated with the collection.",
            "additionalProperties": true
          },
          "slug": {
            "type": "string",
            "description": "The URL-friendly identifier for the collection."
          },
          "allow_facets": {
            "type": "boolean",
            "description": "Indicates if facets are allowed for filtering within the collection."
          },
          "logo": {
            "$ref": "#/components/schemas/Media"
          },
          "priority": {
            "type": "integer",
            "description": "Priority level of the collection for sorting or display purposes."
          },
          "tag": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags associated with the collection."
          },
          "app_id": {
            "type": "string",
            "description": "Application ID associated with the collection."
          },
          "_id": {
            "type": "string",
            "description": "MongoDB ObjectID of the item."
          },
          "is_visible": {
            "type": "boolean",
            "description": "Indicates if the query or collection is visible."
          }
        },
        "description": "Detailed information about a specific collection, including attributes such as its name, description, schedule, and other relevant data."
      },
      "GetFollowListingResponseSchema": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductListingDetail"
            },
            "description": "An array of product details that the user is following. Each item includes information such as the product name, price, and other attributes."
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          }
        },
        "required": [
          "items",
          "page"
        ],
        "description": "Response object containing a list of products that the user is following and pagination information for the follow listing."
      },
      "FollowPostResponseSchema": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "A message indicating the result of the follow or unfollow operation. This could be a confirmation message or an error message."
          },
          "id": {
            "type": "string",
            "description": "A unique identifier for the follow operation, which can be used to reference or track the follow status."
          }
        },
        "required": [
          "id",
          "message"
        ],
        "description": "Response object returned after a user follows or unfollows an item, indicating the success of the operation."
      },
      "FollowerCountResponseSchema": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "The number of followers for the item. This count indicates how many users are following the specified item."
          }
        },
        "description": "Response object containing the count of followers for a specific item, such as a product, collection, or brand."
      },
      "FollowIdsData": {
        "type": "object",
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "An array of IDs representing the products that the user is following."
          },
          "collections": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "An array of IDs representing the collections that the user is following."
          },
          "brands": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "An array of IDs representing the brands that the user is following."
          }
        },
        "description": "Data object containing lists of IDs for followed items, including products, collections, and brands."
      },
      "FollowIdsResponseSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/FollowIdsData"
          }
        },
        "description": "Response object containing the follow IDs data for products, collections, and brands."
      },
      "LatLong": {
        "type": "object",
        "properties": {
          "coordinates": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "description": "An array containing the latitude and longitude values of the location."
          },
          "type": {
            "type": "string",
            "description": "The type of geographic coordinate system used. For example, \"Point\" indicates a single point in a geographic coordinate system."
          }
        },
        "description": "Represents the geographic coordinates of a location, typically used to specify the latitude and longitude of a store or point of interest."
      },
      "Store": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "integer",
            "description": "A unique identifier for the store."
          },
          "store_email": {
            "type": "string",
            "format": "email",
            "description": "The manager's email address for the store."
          },
          "state": {
            "type": "string",
            "description": "The state or province where the store is located."
          },
          "country": {
            "type": "string",
            "description": "The country where the store is located."
          },
          "pincode": {
            "type": "string",
            "description": "The postal code or zip code for the store's location."
          },
          "city": {
            "type": "string",
            "description": "The city where the store is located."
          },
          "address": {
            "type": "string",
            "description": "The street address of the store."
          },
          "store_code": {
            "type": "string",
            "description": "A unique code or identifier for the store, often used for internal reference.",
            "x-not-enum": true
          },
          "lat_long": {
            "$ref": "#/components/schemas/LatLong"
          },
          "name": {
            "type": "string",
            "description": "The name of the store."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of tags mapped to the store."
          },
          "manager_contact": {
            "type": "string",
            "description": "Contact number for the store manager."
          },
          "contacts": {
            "type": "array",
            "description": "List of contact numbers for the store.",
            "items": {
              "$ref": "#/components/schemas/ContactDetails"
            }
          }
        },
        "description": "Details of a store, including its contact information, address, and geographic coordinates."
      },
      "ContactDetails": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "Contact number for the store."
          },
          "country_code": {
            "type": "integer",
            "description": "Country code for the contact number.",
            "x-not-enum": true
          }
        }
      },
      "StoreListingResponseSchema": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Store"
            },
            "description": "An array of store details. Each store includes information such as name, address, and geographic coordinates."
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          }
        },
        "required": [
          "items",
          "page"
        ],
        "description": "Response object containing a list of stores and pagination information for store listings."
      },
      "StoreDepartments": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "integer",
            "description": "The unique identifier assigned to the store department."
          },
          "logo": {
            "type": "object",
            "description": "An object containing information about the store department's logo, such as the URL or other related media details.",
            "additionalProperties": true
          },
          "priority_order": {
            "type": "integer",
            "description": "The priority or ranking of the department within the store. This field is used to determine the order in which departments are displayed or processed."
          },
          "name": {
            "type": "string",
            "description": "The name of the store department, which is typically used for display and identification purposes."
          },
          "slug": {
            "type": "string",
            "description": "A URL-friendly identifier for the store department, often used in web addresses and routing to uniquely identify the department."
          }
        },
        "description": "A list of departments within the store."
      },
      "AppStoreDepartment": {
        "type": "object",
        "properties": {
          "priority_order": {
            "type": "integer",
            "description": "Priority order of the department."
          },
          "name": {
            "type": "string",
            "description": "Name of the department."
          },
          "is_active": {
            "type": "boolean",
            "description": "Whether the department is active."
          },
          "logo": {
            "$ref": "#/components/schemas/Media"
          },
          "uid": {
            "type": "integer",
            "description": "Unique identifier for the department."
          },
          "slug": {
            "type": "string",
            "description": "Slug or URL-friendly name for the department."
          }
        }
      },
      "CompanyStore": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "integer",
            "description": "The unique identifier for the company store."
          },
          "name": {
            "type": "string",
            "description": "The name of the company store."
          },
          "company_type": {
            "type": "string",
            "description": "The type of company, which can be one of the following:\n        - `distributor`: Distributor\n        - `franchise`: Franchise\n        - `mbo`: MBO (Managed Business Operations)\n        - `manufacturer-owner`: Owner/Manufacturer.",
            "x-not-enum": true
          },
          "business_type": {
            "type": "string",
            "description": "The type of business structure, which can be one of the following:\n        - `Private`: Private Limited Company\n        - `LLP/Partnership`: Limited Liability Partnership or Partnership\n        - `HUF/Proprietorship`: Hindu Undivided Family or Proprietorship.",
            "x-not-enum": true
          }
        },
        "description": "Information about the company that owns the store."
      },
      "SellerPhoneNumber": {
        "type": "object",
        "properties": {
          "country_code": {
            "type": "integer",
            "description": "The country code of the seller's phone number.",
            "x-not-enum": true
          },
          "number": {
            "type": "string",
            "maxLength": 12,
            "description": "The seller's contact number."
          }
        },
        "required": [
          "country_code",
          "number"
        ],
        "description": "Contact details for the seller."
      },
      "StoreManagerSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the store manager."
          },
          "email": {
            "type": "string",
            "description": "The email address of the store manager."
          },
          "mobile_no": {
            "$ref": "#/components/schemas/SellerPhoneNumber"
          }
        },
        "description": "Details of the store manager."
      },
      "StoreAddressSchema": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "description": "The latitude of the store's location."
          },
          "state": {
            "type": "string",
            "description": "The state where the store is located."
          },
          "country": {
            "type": "string",
            "description": "The country where the store is located."
          },
          "landmark": {
            "type": "string",
            "description": "A landmark near the store."
          },
          "address1": {
            "type": "string",
            "description": "The address line 1 of the store."
          },
          "pincode": {
            "type": "string",
            "description": "The postal code for the store's location."
          },
          "city": {
            "type": "string",
            "description": "The city where the store is located."
          },
          "longitude": {
            "type": "number",
            "description": "The longitude of the store's location."
          },
          "address2": {
            "type": "string",
            "description": "The address line2 of the store."
          },
          "lat_long": {
            "$ref": "#/components/schemas/LatLong"
          },
          "country_code": {
            "type": "string",
            "description": "Country code for the store address.",
            "x-not-enum": true
          },
          "address_meta": {
            "type": "object",
            "additionalProperties": true,
            "description": "Meta information related to the store's address."
          }
        },
        "description": "The address details for the store."
      },
      "AppStore": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "integer",
            "description": "The unique identifier for the application store."
          },
          "departments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppStoreDepartment"
            },
            "description": "A list of departments within the store."
          },
          "company": {
            "$ref": "#/components/schemas/CompanyStore"
          },
          "manager": {
            "$ref": "#/components/schemas/StoreManagerSchema"
          },
          "store_code": {
            "type": "string",
            "description": "A unique code for identifying the store.",
            "x-not-enum": true
          },
          "address": {
            "$ref": "#/components/schemas/StoreAddressSchema"
          },
          "name": {
            "type": "string",
            "description": "The name of the store."
          },
          "contact_numbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SellerPhoneNumber"
            },
            "description": "A list of contact numbers for the store."
          },
          "_custom_json": {
            "type": "object",
            "additionalProperties": true,
            "description": "Custom JSON data for the store."
          },
          "additional_contacts": {
            "type": "array",
            "description": "List of additional contacts for the store.",
            "items": {
              "$ref": "#/components/schemas/ContactDetails"
            }
          },
          "company_id": {
            "type": "integer",
            "description": "Identifier of the company to which the store belongs."
          },
          "display_name": {
            "type": "string",
            "description": "Display name of the store."
          },
          "store_type": {
            "type": "string",
            "description": "Type of the store.",
            "enum": [
              "high_street",
              "mall",
              "warehouse"
            ]
          },
          "auto_invoice": {
            "type": "boolean",
            "description": "Whether auto-invoice is enabled for the store."
          },
          "credit_note": {
            "type": "boolean",
            "description": "Whether credit note issuance is enabled."
          },
          "stage": {
            "type": "string",
            "description": "Stage or status of the store (e.g., verified)."
          },
          "gst_credentials": {
            "$ref": "#/components/schemas/GSTCredentials"
          },
          "product_return_config": {
            "$ref": "#/components/schemas/ProductReturnConfig"
          },
          "avg_order_processing_time": {
            "$ref": "#/components/schemas/OrderProcessingTime"
          },
          "bulk_shipment": {
            "type": "boolean",
            "description": "Whether bulk shipment is enabled for the store."
          },
          "default_order_acceptance_timing": {
            "type": "boolean",
            "description": "Whether the store has default order acceptance timings."
          },
          "order_acceptance_timing": {
            "type": "array",
            "description": "List of order acceptance timings for each weekday.",
            "items": {
              "$ref": "#/components/schemas/OrderTiming"
            }
          },
          "auto_assign_courier_partner": {
            "type": "boolean",
            "description": "Whether courier partner assignment is automatic."
          }
        }
      },
      "ProductReturnConfig": {
        "type": "object",
        "properties": {
          "on_same_store": {
            "type": "boolean",
            "description": "Whether product return is allowed at the same store."
          }
        }
      },
      "OrderProcessingTime": {
        "type": "object",
        "properties": {
          "duration": {
            "type": "integer",
            "description": "Average order processing time."
          },
          "duration_type": {
            "type": "string",
            "description": "Unit of time for order processing (e.g., days).",
            "enum": [
              "days"
            ]
          }
        }
      },
      "OrderTiming": {
        "type": "object",
        "properties": {
          "weekday": {
            "type": "string",
            "description": "Day of the week (e.g., Monday)."
          },
          "opening": {
            "$ref": "#/components/schemas/Time"
          },
          "closing": {
            "$ref": "#/components/schemas/Time"
          },
          "open": {
            "type": "boolean",
            "description": "Whether the store is open on this day."
          }
        }
      },
      "GSTCredentials": {
        "type": "object",
        "properties": {
          "e_invoice": {
            "$ref": "#/components/schemas/EnabledStatus"
          },
          "e_waybill": {
            "$ref": "#/components/schemas/EnabledStatus"
          }
        }
      },
      "EnabledStatus": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Whether the feature is enabled."
          }
        }
      },
      "ApplicationStoreFilterListing": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "description": "Slug for the filter."
          },
          "uid": {
            "type": "integer",
            "description": "Unique identifier for the filter."
          },
          "is_active": {
            "type": "boolean",
            "description": "Whether the filter is active."
          },
          "priority_order": {
            "type": "integer",
            "description": "Priority order of the filter."
          },
          "name": {
            "type": "string",
            "description": "Name of the filter."
          },
          "logo": {
            "type": "string",
            "description": "URL for the filter's logo."
          },
          "modified_by": {
            "$ref": "#/components/schemas/ModifiedBy"
          },
          "modified_on": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the filter was modified."
          }
        }
      },
      "ModifiedBy": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "description": "The unique identifier of the user who verified the product."
          },
          "username": {
            "type": "string",
            "description": "The username of the user who verified the product."
          }
        }
      },
      "ApplicationStoreListing": {
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationStoreFilterListing"
            },
            "description": "A list of filters applied to the store listing."
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppStore"
            },
            "description": "A list of application stores."
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          }
        },
        "description": "A list of application stores with associated filters and pagination details.",
        "required": []
      },
      "Time": {
        "type": "object",
        "properties": {
          "hour": {
            "type": "integer",
            "description": "The hour part of the time."
          },
          "minute": {
            "type": "integer",
            "description": "The minute part of the time."
          }
        },
        "description": "Represents a specific time with hour and minute."
      },
      "StoreTiming": {
        "type": "object",
        "properties": {
          "open": {
            "type": "boolean",
            "description": "Indicates if the store is open on this day."
          },
          "closing": {
            "$ref": "#/components/schemas/Time"
          },
          "weekday": {
            "type": "string",
            "description": "The day of the week."
          },
          "opening": {
            "$ref": "#/components/schemas/Time"
          }
        },
        "description": "Represents the opening and closing times for a store on a specific weekday."
      },
      "StoreDetails": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "integer",
            "description": "The unique identifier for the store."
          },
          "departments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoreDepartments"
            },
            "description": "A list of departments within the store."
          },
          "company": {
            "$ref": "#/components/schemas/CompanyStore"
          },
          "manager": {
            "$ref": "#/components/schemas/StoreManagerSchema"
          },
          "store_code": {
            "type": "string",
            "description": "A unique code for identifying the store.",
            "x-not-enum": true
          },
          "timing": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoreTiming"
            },
            "description": "The opening and closing times for the store throughout the week."
          },
          "address": {
            "$ref": "#/components/schemas/StoreAddressSchema"
          },
          "_custom_json": {
            "type": "object",
            "description": "Custom JSON data for the store.",
            "additionalProperties": true
          },
          "name": {
            "type": "string",
            "description": "The name of the store."
          },
          "contact_numbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SellerPhoneNumber"
            },
            "description": "A list of contact numbers for the store."
          },
          "additional_contacts": {
            "type": "array",
            "description": "List of additional contacts for the store.",
            "items": {
              "$ref": "#/components/schemas/ContactDetails"
            }
          },
          "company_id": {
            "type": "integer",
            "description": "Identifier of the company to which the store belongs."
          },
          "display_name": {
            "type": "string",
            "description": "Display name of the store."
          },
          "store_type": {
            "type": "string",
            "description": "Type of store (e.g., high_street).",
            "enum": [
              "high_street",
              "mall",
              "warehouse"
            ]
          },
          "auto_invoice": {
            "type": "boolean",
            "description": "Whether auto-invoice is enabled for the store."
          },
          "credit_note": {
            "type": "boolean",
            "description": "Whether credit note issuance is enabled for the store."
          },
          "stage": {
            "type": "string",
            "description": "Current stage or status of the store (e.g., verified)."
          },
          "gst_credentials": {
            "$ref": "#/components/schemas/GSTCredentials"
          },
          "product_return_config": {
            "$ref": "#/components/schemas/ProductReturnConfig"
          },
          "avg_order_processing_time": {
            "$ref": "#/components/schemas/OrderProcessingTime"
          },
          "bulk_shipment": {
            "type": "boolean",
            "description": "Whether bulk shipment is enabled for the store."
          },
          "default_order_acceptance_timing": {
            "type": "boolean",
            "description": "Whether default order acceptance timings are enabled."
          },
          "order_acceptance_timing": {
            "type": "array",
            "description": "List of order acceptance timings for each weekday.",
            "items": {
              "$ref": "#/components/schemas/OrderTiming"
            }
          },
          "auto_assign_courier_partner": {
            "type": "boolean",
            "description": "Whether courier partner assignment is automatic."
          }
        },
        "description": "Detailed information about a store."
      },
      "UserDetail": {
        "type": "object",
        "properties": {
          "super_user": {
            "type": "boolean",
            "description": "A flag indicating whether the user is a super user."
          },
          "contact": {
            "type": "string",
            "description": "The contact details of the user."
          },
          "username": {
            "type": "string",
            "description": "The username of the user."
          },
          "user_id": {
            "type": "string",
            "description": "The user ID of the user."
          }
        },
        "required": [
          "user_id",
          "username"
        ],
        "description": "Detailed information about a user."
      },
      "Size": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "integer",
            "description": "The quantity of this size available."
          },
          "value": {
            "type": "string",
            "description": "The value of the size."
          },
          "display": {
            "type": "string",
            "description": "The display string for the size."
          },
          "is_available": {
            "type": "boolean",
            "description": "Whether or not this size is available."
          }
        },
        "description": "Detailed information about a specific size."
      },
      "ProductGroupPrice": {
        "type": "object",
        "properties": {
          "effective": {
            "type": "number",
            "description": "The effective price of the product."
          },
          "marked": {
            "type": "number",
            "description": "The marked price of the product."
          },
          "selling": {
            "type": "number",
            "description": "The selling price of the product."
          },
          "currency": {
            "type": "string",
            "description": "The currency code for the prices."
          }
        },
        "description": "Detailed pricing information for a product group."
      },
      "ProductDetails": {
        "type": "object",
        "properties": {
          "template_tag": {
            "type": "string",
            "description": "The template tag of the product."
          },
          "rating_count": {
            "type": "integer",
            "description": "The number of ratings the product has received."
          },
          "image_nature": {
            "type": "string",
            "description": "The nature of the product's images."
          },
          "has_variant": {
            "type": "boolean",
            "description": "Whether or not the product has a variant."
          },
          "description": {
            "type": "string",
            "description": "The long description of the product."
          },
          "out_of_stock": {
            "type": "boolean",
            "description": "Whether or not the product is out of stock."
          },
          "hsn_code": {
            "type": "integer",
            "description": "The HSN code of the product.",
            "x-not-enum": true
          },
          "grouped_attributes": {
            "type": "object",
            "description": "A dictionary of grouped product attributes.",
            "additionalProperties": true
          },
          "item_code": {
            "type": "string",
            "description": "The item code of the product.",
            "x-not-enum": true
          },
          "name": {
            "type": "string",
            "description": "The name of the product."
          },
          "country_of_origin": {
            "type": "string",
            "description": "The country of origin for the product."
          },
          "short_description": {
            "type": "string",
            "description": "The short description of the product."
          },
          "media": {
            "type": "array",
            "description": "A list of media objects for the product.",
            "items": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "attributes": {
            "type": "object",
            "description": "A dictionary of product attributes.",
            "additionalProperties": true
          },
          "is_set": {
            "type": "boolean",
            "description": "Whether or not the product is a set of items."
          },
          "images": {
            "type": "array",
            "description": "A list of image URLs for the product.",
            "items": {
              "type": "string"
            }
          },
          "slug": {
            "type": "string",
            "description": "The slug of the product."
          },
          "rating": {
            "type": "number",
            "description": "The rating of the product."
          },
          "identifier": {
            "$ref": "#/components/schemas/Identifier"
          },
          "highlights": {
            "type": "array",
            "description": "A list of highlights for the product.",
            "items": {
              "type": "string"
            }
          },
          "brand_uid": {
            "type": "integer",
            "description": "The unique ID of the product's brand."
          }
        },
        "description": "Detailed information about a product."
      },
      "ProductInGroup": {
        "type": "object",
        "properties": {
          "max_quantity": {
            "type": "integer",
            "description": "The maximum quantity of the product that can be added to the cart."
          },
          "sizes": {
            "type": "array",
            "description": "The available sizes for the product.",
            "items": {
              "$ref": "#/components/schemas/Size"
            }
          },
          "price": {
            "$ref": "#/components/schemas/ProductGroupPrice"
          },
          "product_details": {
            "type": "object",
            "additionalProperties": true,
            "description": "The details of the product.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ProductDetails"
              }
            ]
          },
          "min_quantity": {
            "type": "integer",
            "default": 1,
            "description": "The minimum quantity of the product that can be added to the cart."
          },
          "allow_remove": {
            "type": "boolean",
            "description": "Whether the product can be removed from the cart."
          },
          "product_uid": {
            "type": "integer",
            "description": "The unique ID of the product in the group."
          }
        },
        "required": [
          "max_quantity",
          "product_uid"
        ],
        "description": "Configuration of a product within a group/bundle."
      },
      "ProductGroupingModel": {
        "type": "object",
        "properties": {
          "logo": {
            "nullable": true,
            "type": "string",
            "description": "The URL for the logo of the product group."
          },
          "is_active": {
            "type": "boolean",
            "description": "Whether the product grouping is active."
          },
          "meta": {
            "type": "object",
            "description": "A dictionary containing metadata information.",
            "additionalProperties": true
          },
          "verified_by": {
            "type": "object",
            "additionalProperties": true,
            "description": "User details of the verifier of the document, if applicable.",
            "example": {
              "user_id": "Good User",
              "username": "gd_user21",
              "name": "John Doe",
              "email": "johndoe@example.com"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/UserDetail"
              }
            ]
          },
          "created_on": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of the creation of the document.",
            "example": "2022-05-03T10:00:00"
          },
          "company_id": {
            "type": "integer",
            "description": "The ID of the company that owns the product grouping."
          },
          "page_visibility": {
            "type": "array",
            "description": "A list of page visibilities of the product grouping.",
            "items": {
              "type": "string",
              "enum": [
                "pdp"
              ],
              "description": "The page visibility of the product grouping."
            }
          },
          "modified_on": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of the last modification of the document.",
            "example": "2022-05-05T16:30:00"
          },
          "created_by": {
            "type": "object",
            "additionalProperties": true,
            "description": "User details of the creator of the document.",
            "example": {
              "user_id": "Good User",
              "username": "gd_user21",
              "name": "John Doe",
              "email": "johndoe@example.com"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/UserDetail"
              }
            ]
          },
          "modified_by": {
            "type": "object",
            "additionalProperties": true,
            "description": "User details of the last modifier of the document.",
            "example": {
              "user_id": "Good User",
              "username": "gd_user21",
              "name": "Jane Doe",
              "email": "janedoe@example.com"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/UserDetail"
              }
            ]
          },
          "products": {
            "type": "array",
            "maxItems": 10,
            "description": "A list of products in the grouping.",
            "items": {
              "$ref": "#/components/schemas/ProductInGroup"
            }
          },
          "allow_remove": {
            "type": "boolean",
            "description": "A flag indicating whether the product can be removed from the cart."
          },
          "auto_add_to_cart": {
            "type": "boolean",
            "description": "A flag indicating whether the product should be automatically added to the cart."
          },
          "auto_select": {
            "type": "boolean",
            "description": "A flag indicating whether the product should be automatically selected."
          },
          "allow_individual_cancel": {
            "type": "boolean",
            "description": "A flag indicating whether the product can be individually canceled."
          },
          "allow_individual_return": {
            "type": "boolean",
            "description": "A flag indicating whether the product can be individually returned."
          },
          "prefer_single_shipment": {
            "type": "boolean",
            "description": "A flag indicating whether the product should be shipped in a single shipment."
          },
          "same_store_assignment": {
            "type": "boolean",
            "default": true,
            "description": "Whether the products are assigned to the same store."
          },
          "_id": {
            "type": "string",
            "description": "Unique identifier of the product grouping."
          },
          "name": {
            "type": "string",
            "description": "The name of the product grouping."
          },
          "choice": {
            "type": "string",
            "description": "The choice of the product grouping."
          },
          "slug": {
            "type": "string",
            "description": "The unique identifier for the product grouping."
          },
          "verified_on": {
            "type": "string",
            "description": "Timestamp of when the document was verified, if applicable.",
            "example": "2022-05-06T09:45:00"
          }
        },
        "required": [
          "created_on",
          "modified_on",
          "name",
          "products"
        ],
        "description": "Represents group of product mapped in a bundle."
      },
      "ProductBundle": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductGroupingModel"
            },
            "description": "Represents list of bundles/product groupings."
          }
        },
        "description": "Represents list of bundles/product groupings."
      },
      "StoreV3": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "integer",
            "description": "The unique identifier for the store."
          },
          "name": {
            "type": "string",
            "description": "The name of the store."
          },
          "count": {
            "type": "integer",
            "description": "The count associated with the store."
          }
        },
        "description": "Information about a store."
      },
      "ArticleAssignmentV3": {
        "type": "object",
        "properties": {
          "strategy": {
            "type": "string",
            "description": "Method used for article assignment, such as optimal, fast-delivery, low-price, or manual."
          },
          "level": {
            "type": "string",
            "description": "Scope of assignment, which can be multi-companies, single-company, or single-store."
          }
        },
        "description": "Defines how articles are assigned based on strategic and operational criteria."
      },
      "StrategyWiseListingSchemaV3": {
        "type": "object",
        "properties": {
          "distance": {
            "type": "integer",
            "description": "Distance between bullfight location and customer location in kilometers. ."
          },
          "pincode": {
            "type": "string",
            "description": "Pincode mapped based on strategy."
          },
          "tat": {
            "type": "integer",
            "description": "Turn around Time to deliver the product with this strategy."
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity available for assigned store."
          }
        },
        "description": "Strategy details for the assigned store."
      },
      "DetailsSchemaV3": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "The value of the attribute."
          },
          "type": {
            "type": "string",
            "description": "The type of detail e.g, text."
          },
          "key": {
            "type": "string",
            "description": "The attribute key associated with the size."
          }
        },
        "description": "Detailed information schema of size level attributes."
      },
      "SellerGroupAttributes": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the attribute group."
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DetailsSchemaV3"
            },
            "description": "Detail of the attribute."
          }
        },
        "description": "List of grouped attributes."
      },
      "ReturnConfigSchemaV3": {
        "type": "object",
        "properties": {
          "unit": {
            "type": "string",
            "description": "The unit for the return configuration."
          },
          "returnable": {
            "type": "boolean",
            "description": "Indicates if the item is returnable."
          },
          "time": {
            "type": "integer",
            "description": "The time duration for the return policy."
          }
        },
        "description": "Return configuration details."
      },
      "ProductSetDistributionSizeV3": {
        "type": "object",
        "properties": {
          "pieces": {
            "type": "integer",
            "description": "The number of pieces available in this size."
          },
          "size": {
            "type": "string",
            "description": "The size of the product."
          }
        },
        "description": "Distribution details of product sizes for Set type of Products."
      },
      "ProductSetDistributionV3": {
        "type": "object",
        "properties": {
          "sizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductSetDistributionSizeV3"
            },
            "description": "A list of size distributions in the product set."
          }
        },
        "description": "Distribution details of a product set."
      },
      "ProductSetV3": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "integer",
            "description": "The quantity of products in the set."
          },
          "size_distribution": {
            "$ref": "#/components/schemas/ProductSetDistributionV3"
          }
        },
        "description": "Details of a product set."
      },
      "ProductStockPriceV3": {
        "type": "object",
        "properties": {
          "effective": {
            "type": "number",
            "description": "The effective or final price for the product at the given pincode.",
            "example": 117
          },
          "currency_code": {
            "type": "string",
            "description": "The currency code for which the product is available.",
            "example": "INR",
            "x-not-enum": true
          },
          "currency_symbol": {
            "type": "string",
            "description": "The currency symbol for the currency in which the product is available.",
            "example": "₹"
          },
          "marked": {
            "type": "number",
            "description": "The marked price of the product.",
            "example": 234
          },
          "selling": {
            "type": "number",
            "description": "The selling price of the product.",
            "example": 190
          }
        },
        "description": "Pricing details for product."
      },
      "ProductStockUnitPriceV3": {
        "type": "object",
        "properties": {
          "unit": {
            "type": "string",
            "description": "The unit of measure for the product."
          },
          "currency_symbol": {
            "type": "string",
            "description": "The currency symbol for the unit price."
          },
          "currency_code": {
            "type": "string",
            "description": "The currency code for the unit price.",
            "x-not-enum": true
          },
          "price": {
            "type": "number",
            "description": "The unit price of the product."
          }
        },
        "description": "Unit price details for product."
      },
      "MarketPlaceSttributesSchemaV3": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the attribute."
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DetailsSchemaV3"
            },
            "description": "Detail of the attribute."
          }
        },
        "description": "Attributes schema for size level attributes."
      },
      "SellerV3": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "integer",
            "description": "The unique identifier for the seller."
          },
          "name": {
            "type": "string",
            "description": "The name of the seller."
          },
          "count": {
            "type": "integer",
            "description": "The store count serviceable by this seller."
          }
        },
        "description": "Information about a seller."
      },
      "PromiseSchema": {
        "type": "object",
        "properties": {
          "min": {
            "type": "string",
            "description": "The minimum promise time."
          },
          "max": {
            "type": "string",
            "description": "The maximum promise time."
          }
        },
        "description": "Schema for delivery promises."
      },
      "ProductSizePriceResponseV4": {
        "type": "object",
        "properties": {
          "store": {
            "$ref": "#/components/schemas/StoreV3"
          },
          "article_assignment": {
            "$ref": "#/components/schemas/ArticleAssignmentV3"
          },
          "is_cod": {
            "type": "boolean",
            "description": "Indicates whether the product is eligible for cash on delivery (COD)."
          },
          "strategy_wise_listing": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StrategyWiseListingSchemaV3"
            }
          },
          "quantity": {
            "type": "integer",
            "description": "Available quantity of the product."
          },
          "item_type": {
            "type": "string",
            "enum": [
              "composite",
              "digital",
              "packaging",
              "set",
              "standard"
            ],
            "description": "The type of the product, defining its nature."
          },
          "grouped_attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SellerGroupAttributes"
            }
          },
          "return_config": {
            "$ref": "#/components/schemas/ReturnConfigSchemaV3"
          },
          "article_id": {
            "type": "string",
            "description": "Unique identifier of the product article."
          },
          "is_gift": {
            "type": "boolean",
            "description": "Indicates whether the product can be considered as a gift."
          },
          "set": {
            "$ref": "#/components/schemas/ProductSetV3"
          },
          "price_per_piece": {
            "$ref": "#/components/schemas/ProductStockPriceV3"
          },
          "discount_meta": {
            "$ref": "#/components/schemas/DiscountMeta"
          },
          "discount": {
            "type": "string",
            "description": "The discount applied to the product in percentage."
          },
          "long_lat": {
            "type": "array",
            "description": "Geographical coordinates [longitude, latitude] for the product's store location.",
            "items": {
              "type": "number"
            }
          },
          "price": {
            "$ref": "#/components/schemas/ProductStockPriceV3"
          },
          "price_per_unit": {
            "$ref": "#/components/schemas/ProductStockUnitPriceV3"
          },
          "pincode": {
            "type": "string",
            "description": "Delivery pincode for the product."
          },
          "trader": {
            "type": "array",
            "description": "Details of Traders associated with the product.",
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "type": "array",
            "description": "Tags or labels assigned to the product for categorization or search purposes.",
            "items": {
              "type": "string"
            }
          },
          "is_serviceable": {
            "type": "boolean",
            "description": "Indicates if the product is serviceable in the given pincode."
          },
          "marketplace_attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarketPlaceSttributesSchemaV3"
            }
          },
          "seller": {
            "$ref": "#/components/schemas/SellerV3"
          },
          "delivery_promise": {
            "$ref": "#/components/schemas/PromiseSchema"
          },
          "product_name": {
            "type": "string",
            "description": "The name of the product."
          },
          "_custom_json": {
            "type": "object",
            "description": "Custom JSON data associated with the product.",
            "additionalProperties": true
          },
          "error": {
            "type": "string",
            "description": "Error message if the item is unavailable."
          },
          "slug": {
            "type": "string",
            "description": "A URL-friendly string representing the product."
          },
          "size": {
            "type": "string",
            "description": "Size of the product."
          }
        }
      },
      "ProductSizeSellerFilterSchemaV4": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "is_selected": {
            "type": "boolean"
          },
          "value": {
            "type": "string"
          }
        },
        "additionalProperties": true
      },
      "ProductSizeSellersResponseV4": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductSizePriceResponseV4"
            }
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          },
          "sort_on": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductSizeSellerFilterSchemaV4"
            }
          }
        },
        "required": [
          "page"
        ]
      },
      "ProductSizePriceV1RequestSchema": {
        "type": "object",
        "properties": {
          "seller_id": {
            "type": "integer"
          },
          "store_id": {
            "type": "integer"
          },
          "moq": {
            "type": "integer"
          },
          "pincode": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductSizePriceV1RequestBody"
            }
          }
        }
      },
      "ProductSizePriceV1RequestBody": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string"
          },
          "size": {
            "type": "string"
          },
          "parent_slug": {
            "type": "string"
          },
          "product_grouping_id": {
            "type": "string"
          }
        }
      },
      "ProductSizePriceResponseV1": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductSizePriceResponseV4"
            }
          }
        }
      },
      "Identifier": {
        "properties": {
          "ean": {
            "type": "string",
            "description": "The European Article Number (EAN) of the item."
          },
          "sku_code": {
            "x-not-enum": true,
            "type": "string",
            "description": "The Stock Keeping Unit (SKU) code of the item."
          },
          "alu": {
            "type": "string",
            "description": "The Alternative Lookup Product of the item."
          },
          "upc": {
            "type": "string",
            "description": "Universal Product Code of the item."
          },
          "isbn": {
            "type": "string",
            "description": "ISBN (International Standard Book Number) is a unique identifier used globally to identify books and other non-periodical publications"
          }
        }
      },
      "ApplicationResponseSchema": {
        "type": "object",
        "properties": {
          "application": {
            "$ref": "#/components/schemas/Application"
          }
        },
        "description": "Response schema containing details of an application."
      },
      "Domain": {
        "type": "object",
        "properties": {
          "verified": {
            "type": "boolean",
            "description": "Domain is verified or not. TXT and A records should propagate correctly."
          },
          "is_primary": {
            "type": "boolean",
            "description": "Domain is primary or not. Primary domain is the default/main domain."
          },
          "is_shortlink": {
            "type": "boolean",
            "description": "Shortlink is present or not for the domain."
          },
          "_id": {
            "type": "string",
            "description": "The unique identifier (24-digit Mongo Object ID) of the sales channel domain."
          },
          "name": {
            "type": "string",
            "description": "Domain name."
          },
          "is_predefined": {
            "type": "boolean",
            "description": "Domain is hosting domain or not."
          }
        },
        "description": "Details about the sales channel domain, including verification status, whether it's primary or shortlink, and its unique identifier."
      },
      "ApplicationWebsite": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Shows whether sales channel website URL is enabled or not."
          },
          "basepath": {
            "type": "string",
            "description": "Base path for the current sales channel website."
          }
        },
        "description": "Configuration for the sales channel's website, including whether it's enabled and its base path."
      },
      "ApplicationCors": {
        "type": "object",
        "properties": {
          "domains": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "List of all the domains added to the sales channel"
            },
            "description": "List of domains added to the sales channel."
          }
        },
        "description": "Configuration for Cross-Origin Resource Sharing, listing domains allowed to access the sales channel."
      },
      "ApplicationAuth": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Shows sales channel auth is enabled or not enabled."
          }
        },
        "description": "Configuration indicating whether authentication is enabled for the sales channel."
      },
      "ApplicationRedirections": {
        "type": "object",
        "properties": {
          "redirect_from": {
            "type": "string",
            "description": "Old domain url of the sales channel."
          },
          "redirect_to": {
            "type": "string",
            "description": "New domain URL of the sales channel. Users will be automatically redirected from old domain to new domain."
          },
          "type": {
            "type": "string",
            "description": "It shows domain redirection type. Permanent redirection is for long time period redirection, and temporary redirection for a short time period.",
            "enum": [
              "permanent",
              "temporary"
            ]
          }
        },
        "description": "Details about domain redirections, including the old and new URLs and the type of redirection (permanent or temporary)."
      },
      "ApplicationMeta": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Indicates to name of application meta."
          },
          "value": {
            "type": "string",
            "description": "Value related to application meta name."
          }
        },
        "description": "Metadata related to the application, including name-value pairs for additional information about the sales channel."
      },
      "SecureUrl": {
        "type": "object",
        "properties": {
          "secure_url": {
            "type": "string",
            "description": "Hosted URL of the image."
          }
        },
        "description": "A secure URL for hosted images or assets."
      },
      "Application": {
        "properties": {
          "website": {
            "$ref": "#/components/schemas/ApplicationWebsite"
          },
          "cors": {
            "$ref": "#/components/schemas/ApplicationCors"
          },
          "auth": {
            "$ref": "#/components/schemas/ApplicationAuth"
          },
          "description": {
            "type": "string",
            "description": "It contains detailed information about the sales channel."
          },
          "channel_type": {
            "type": "string",
            "description": "It indicates different channel types like store, website-and-mobile-apps. Default value is store.",
            "x-not-enum": true
          },
          "cache_ttl": {
            "type": "integer",
            "format": "int32",
            "description": "An integer value that specifies the number of seconds until the key expires."
          },
          "is_internal": {
            "type": "boolean",
            "description": "Indicates whether a sales channel is internal or not."
          },
          "is_active": {
            "type": "boolean",
            "description": "Indicates sales channel is active or not active."
          },
          "_id": {
            "type": "string",
            "description": "The unique identifier (24-digit Mongo Object ID) of the sales channel."
          },
          "name": {
            "type": "string",
            "description": "Name of the sales channel, e.g. Zenz Fashion."
          },
          "owner": {
            "type": "string",
            "description": "The unique identifier (24-digit Mongo Object ID) of owner who owns the application."
          },
          "company_id": {
            "type": "integer",
            "format": "int32",
            "description": "Numeric ID allotted to a business account where the sales channel exists."
          },
          "token": {
            "type": "string",
            "description": "Random generated fix length string for sales channel. It is required and auto-generated."
          },
          "redirections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationRedirections"
            },
            "description": "List of redirections for the sales channel."
          },
          "meta": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationMeta"
            },
            "description": "List of meta information for the sales channel."
          },
          "created_at": {
            "type": "string",
            "description": "ISO 8601 timestamp of sales channel creation.",
            "format": "date-time"
          },
          "modified_at": {
            "type": "string",
            "description": "ISO 8601 timestamp of sales channel updation.",
            "format": "date-time"
          },
          "__v": {
            "type": "integer",
            "format": "int32",
            "description": "Version key for tracking revisions. Default value is zero."
          },
          "banner": {
            "$ref": "#/components/schemas/SecureUrl"
          },
          "logo": {
            "$ref": "#/components/schemas/SecureUrl"
          },
          "favicon": {
            "$ref": "#/components/schemas/SecureUrl"
          },
          "domains": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain"
            },
            "description": "List of domains associated with the sales channel."
          },
          "app_type": {
            "type": "string",
            "description": "It shows application is live or in development mode.",
            "enum": [
              "live",
              "development"
            ]
          },
          "mobile_logo": {
            "$ref": "#/components/schemas/SecureUrl"
          },
          "domain": {
            "$ref": "#/components/schemas/Domain"
          },
          "slug": {
            "type": "string",
            "description": "Slug identifier."
          },
          "mode": {
            "type": "string",
            "description": "Application mode."
          },
          "status": {
            "type": "string",
            "description": "Current status of the application."
          },
          "tokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenSchema"
            },
            "description": "List of tokens associated with the sales channel."
          }
        },
        "description": "Details about the sales channel, including its settings, metadata, and associated resources."
      },
      "NotFound": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message for not found."
          }
        },
        "description": "Response object indicating that the requested resource was not found."
      },
      "BadRequestSchema": {
        "type": "object",
        "properties": {
          "message": {
            "description": "Failure message (in a string format).",
            "type": "string"
          }
        },
        "description": "Response indicating a bad request."
      },
      "LocationDefaultLanguage": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "English",
            "description": "Name of the language."
          },
          "code": {
            "type": "string",
            "example": "en-IN",
            "description": "Code of the language."
          }
        },
        "description": "Default language details for a location."
      },
      "LocationDefaultCurrency": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Indian Rupee",
            "description": "The name of the currency."
          },
          "symbol": {
            "type": "string",
            "example": "₹",
            "description": "The symbol representing the currency."
          },
          "code": {
            "type": "string",
            "example": "INR",
            "description": "The ISO 4217 code for the currency."
          }
        },
        "description": "Default currency details for a location."
      },
      "LocationCountry": {
        "type": "object",
        "properties": {
          "capital": {
            "type": "string",
            "example": "Kabul",
            "description": "The capital of the country."
          },
          "currency": {
            "type": "string",
            "example": "AFN",
            "description": "The currency code used in the country."
          },
          "iso2": {
            "type": "string",
            "example": "AF",
            "description": "The ISO 3166-1 alpha-2 code for the country."
          },
          "iso3": {
            "type": "string",
            "example": "AFG",
            "description": "The ISO 3166-1 alpha-3 code for the country."
          },
          "name": {
            "type": "string",
            "example": "Afghanistan",
            "description": "The name of the country."
          },
          "parent": {
            "type": "string",
            "format": "nullable",
            "description": "The parent country if this is a subnational entity (e.g., a territory or region)."
          },
          "phone_code": {
            "type": "string",
            "example": "92345678765",
            "description": "The international dialing code for the country.",
            "x-not-enum": true
          },
          "type": {
            "type": "string",
            "example": "country",
            "description": "The type of location, which is a country in this context."
          },
          "uid": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "description": "A unique identifier for the country."
          },
          "__v": {
            "type": "integer",
            "format": "int32",
            "example": 0,
            "description": "Version key for tracking revisions."
          },
          "_id": {
            "type": "string",
            "example": "5ec50c613c403900600fcdec,",
            "description": "The unique identifier (24-digit Mongo Object ID) for the country."
          },
          "default_currency": {
            "$ref": "#/components/schemas/LocationDefaultCurrency"
          },
          "default_language": {
            "$ref": "#/components/schemas/LocationDefaultLanguage"
          },
          "state_code": {
            "type": "string",
            "description": "The code representing the state or region within the country, if applicable.",
            "x-not-enum": true
          },
          "country_code": {
            "type": "string",
            "description": "The country code used for the country.",
            "x-not-enum": true
          },
          "latitude": {
            "type": "string",
            "description": "The latitude of the store's location."
          },
          "longitude": {
            "type": "string",
            "description": "The longitude of the store's location."
          }
        },
        "description": "Details about a country location."
      },
      "Locations": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationCountry"
            },
            "description": "A list of country location details."
          }
        },
        "description": "List of countries and their location details."
      },
      "CommunicationConsentReq": {
        "type": "object",
        "properties": {
          "response": {
            "type": "string",
            "example": "yes",
            "enum": [
              "yes",
              "no"
            ],
            "description": "Whether the user has responded to the inquiry regarding their preference for opting in or out of receiving communications."
          },
          "action": {
            "type": "string",
            "example": "optin",
            "enum": [
              "optin",
              "optout"
            ],
            "description": "The user's choice to opt in or opt out of receiving communications."
          },
          "channel": {
            "example": "sms",
            "enum": [
              "email",
              "sms",
              "whatsapp"
            ],
            "type": "string",
            "description": "The channel of communication the user has agreed to receive messages through."
          }
        },
        "description": "The request schema for the communication consent API includes the user's response status, the user's choice to opt in or opt out of receiving communications, and the channel through which the user wishes to receive communications."
      },
      "CommunicationConsentRes": {
        "type": "object",
        "properties": {
          "app_id": {
            "type": "string",
            "example": "4",
            "description": "The ID of the sales channel where the user has given their consent."
          },
          "user_id": {
            "type": "string",
            "example": "5e56021c4bda3ccab6d9f884",
            "description": "Identifier which can uniquely identify the user."
          },
          "channels": {
            "$ref": "#/components/schemas/CommunicationConsentChannels"
          }
        },
        "description": "The response schema for the communication consent API includes the application ID associated with the transaction, the user’s identity, and the channels of communication."
      },
      "CommunicationConsentChannelsEmail": {
        "type": "object",
        "properties": {
          "response": {
            "type": "string",
            "example": "yes",
            "description": "The user's choice to opt in or opt out of receiving communications."
          },
          "display_name": {
            "type": "string",
            "example": "Email",
            "description": "Name of the channel of communication the user has agreed to receive messages through."
          }
        },
        "description": "The schema for the communication channel for email channel which includes the response indicating the user's preference and the display name of the communication channel."
      },
      "CommunicationConsentChannelsSms": {
        "type": "object",
        "properties": {
          "response": {
            "type": "string",
            "example": "yes",
            "description": "The user's choice to opt in or opt out of receiving communications."
          },
          "display_name": {
            "type": "string",
            "example": "SMS",
            "description": "Name of the channel of communication the user has agreed to receive messages through."
          }
        },
        "description": "The schema for the communication channel for SMS channel which includes the response indicating the user's preference and the display name of the communication channel."
      },
      "CommunicationConsentChannelsWhatsapp": {
        "type": "object",
        "properties": {
          "response": {
            "type": "string",
            "example": "yes",
            "description": "The user's choice to opt in or opt out of receiving communications."
          },
          "display_name": {
            "type": "string",
            "example": "WhatsApp",
            "description": "Name of the channel of communication the user has agreed to receive messages through."
          },
          "country_code": {
            "type": "string",
            "example": "91",
            "x-not-enum": true,
            "description": "Alphanumeric identification code for the users country."
          },
          "phone_number": {
            "type": "string",
            "example": "9869821300",
            "description": "Phone number of the user that the user has accepted to receive communication through WhatsApp."
          }
        },
        "description": "The schema for the communication channel for whatsapp channel which includes the response indicating the user's preference and the display name of the communication channel."
      },
      "CommunicationConsentChannels": {
        "type": "object",
        "properties": {
          "email": {
            "$ref": "#/components/schemas/CommunicationConsentChannelsEmail"
          },
          "sms": {
            "$ref": "#/components/schemas/CommunicationConsentChannelsSms"
          },
          "whatsapp": {
            "$ref": "#/components/schemas/CommunicationConsentChannelsWhatsapp"
          }
        },
        "description": "The schema for the all the communication channels that the user has accept to receive communication through."
      },
      "CommunicationConsent": {
        "type": "object",
        "properties": {
          "app_id": {
            "type": "string",
            "example": "4",
            "description": "The ID of the sales channel where the user has given their consent."
          },
          "user_id": {
            "type": "string",
            "example": "5e56021c4bda3ccab6d9f884",
            "description": "Identifier which can uniquely identify the user."
          },
          "channels": {
            "$ref": "#/components/schemas/CommunicationConsentChannels"
          }
        },
        "description": "The request schema for the communication consent API includes the user's response status, the user's choice to opt in or opt out of receiving communications, and the channel through which the user wishes to receive communications."
      },
      "PushtokenReq": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "create",
              "update",
              "reset"
            ],
            "example": "create",
            "description": "The type of operation to perform with the push token, such as create, update, or reset."
          },
          "bundle_identifier": {
            "type": "string",
            "example": "000002",
            "description": "Unique identifier used to identify a bundle."
          },
          "push_token": {
            "type": "string",
            "example": "45",
            "description": "A string of codes containing comprehensive data that identifies a identity of requester."
          },
          "unique_device_id": {
            "type": "string",
            "example": "3",
            "description": "Unique identifier used to identify a device."
          },
          "type": {
            "type": "string",
            "example": "fynd-platform",
            "description": "Source address of the requestee."
          }
        },
        "description": "The request schema for creating or editing a push token includes the nature of the operation specifications of the push token and the type of push token owner."
      },
      "PushtokenRes": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "601b6924d8ea9a061570a09f",
            "description": "Key used to uniquely identify document that contains push token credentials."
          },
          "bundle_identifier": {
            "type": "string",
            "example": "000002",
            "description": "Unique identifier used to identify a bundle."
          },
          "push_token": {
            "type": "string",
            "example": "45",
            "description": "A string of codes containing comprehensive data that identifies a identity of requester."
          },
          "unique_device_id": {
            "type": "string",
            "example": "3",
            "description": "Unique identifier used to identify a device."
          },
          "type": {
            "type": "string",
            "example": "fynd-platform",
            "description": "Source address of the requester."
          },
          "platform": {
            "type": "string",
            "example": "web",
            "description": "Source address of the requester."
          },
          "application_id": {
            "type": "string",
            "example": "000000000000000000000004",
            "description": "The ID of the sales channel associated with the push token."
          },
          "user_id": {
            "type": "string",
            "example": "5e56021c4bda3ccab6d9f884",
            "description": "Identifier which can uniquely identify the user."
          },
          "created_at": {
            "format": "date-time",
            "type": "string",
            "example": "2021-02-04T03:25:24.765Z",
            "description": "The timestamp indicating when a record was initially created."
          },
          "updated_at": {
            "format": "date-time",
            "type": "string",
            "example": "2021-02-04T03:25:24.765Z",
            "description": "The timestamp indicating when a record was last modified or updated."
          },
          "expired_at": {
            "format": "date-time",
            "type": "string",
            "description": "The timestamp indicating when a record is set to expire or become invalid."
          }
        },
        "description": "The schema for the successful creation of a push token includes the push token specification the document ID, the associated application, and metadata related to document creation and updates."
      },
      "OtpConfigurationExpiryDuration": {
        "type": "object",
        "required": [
          "time",
          "denomination"
        ],
        "properties": {
          "time": {
            "type": "number",
            "example": 5
          },
          "denomination": {
            "type": "string",
            "example": "min",
            "enum": [
              "min",
              "sec"
            ]
          }
        }
      },
      "OtpConfigurationExpiry": {
        "type": "object",
        "required": [
          "duration",
          "type"
        ],
        "properties": {
          "duration": {
            "$ref": "#/components/schemas/OtpConfigurationExpiryDuration"
          },
          "type": {
            "type": "string",
            "example": "new",
            "enum": [
              "new",
              "same"
            ]
          }
        }
      },
      "OtpConfigurationRateLimit": {
        "type": "object",
        "properties": {
          "duration": {
            "type": "number",
            "example": 60
          },
          "limit": {
            "type": "integer",
            "example": 5
          }
        }
      },
      "OtpConfiguration": {
        "type": "object",
        "required": [
          "otp_length",
          "type",
          "expiry"
        ],
        "properties": {
          "otp_length": {
            "type": "integer",
            "example": 4,
            "enum": [
              4,
              6,
              8
            ]
          },
          "type": {
            "type": "string",
            "example": "numeric",
            "enum": [
              "numeric",
              "alphanumeric"
            ]
          },
          "expiry": {
            "$ref": "#/components/schemas/OtpConfigurationExpiry"
          },
          "rate_limit": {
            "$ref": "#/components/schemas/OtpConfigurationRateLimit"
          }
        }
      },
      "ApplicationAboutResponseSchema": {
        "type": "object",
        "properties": {
          "application_info": {
            "$ref": "#/components/schemas/ApplicationInfo"
          }
        },
        "description": "Details about the application, including its company, owner, domain, and other relevant properties."
      },
      "ApplicationInfo": {
        "type": "object",
        "properties": {
          "company_info": {
            "$ref": "#/components/schemas/CompanyInfo"
          },
          "owner_info": {
            "$ref": "#/components/schemas/OwnerInfo"
          },
          "_id": {
            "type": "string",
            "description": "The unique identifier (24-digit Mongo Object ID) of application information."
          },
          "domain": {
            "$ref": "#/components/schemas/Domain"
          },
          "website": {
            "$ref": "#/components/schemas/ApplicationWebsite"
          },
          "cors": {
            "$ref": "#/components/schemas/ApplicationCors"
          },
          "description": {
            "type": "string",
            "description": "It contains details information about the sales channel."
          },
          "name": {
            "type": "string",
            "description": "Name of the sales channel, e.g. Zenz Fashion."
          },
          "meta": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationMeta"
            },
            "description": "Metadata related to the application."
          },
          "token": {
            "type": "string",
            "description": "Random generated fix length string for sales channel. It is required and auto-generated."
          },
          "secret": {
            "type": "string",
            "description": "Random generated fix length string for sales channel. It is required and auto-generated."
          },
          "created_at": {
            "type": "string",
            "description": "ISO 8601 timestamp of sales channel information creation.",
            "format": "date-time"
          },
          "banner": {
            "$ref": "#/components/schemas/SecureUrl"
          },
          "logo": {
            "$ref": "#/components/schemas/SecureUrl"
          },
          "is_active": {
            "type": "boolean",
            "description": "Indicates whether sales channel is active or not active."
          },
          "mode": {
            "type": "string",
            "description": "Mode of the application."
          },
          "tokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenSchema"
            },
            "description": "List of tokens associated with the application."
          },
          "domains": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain"
            },
            "description": "List of domains associated with the application."
          },
          "favicon": {
            "$ref": "#/components/schemas/SecureUrl"
          },
          "mobile_logo": {
            "$ref": "#/components/schemas/SecureUrl"
          },
          "slug": {
            "type": "string",
            "description": "Slug identifier for the application."
          }
        },
        "description": "Application Information."
      },
      "CompanyInfo": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "The unique identifier (24-digit Mongo Object ID) of company information."
          },
          "uid": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the company."
          },
          "created_on": {
            "type": "string",
            "description": "ISO 8601 timestamp of company information creation.",
            "format": "date-time"
          },
          "is_active": {
            "type": "boolean",
            "description": "Indicates company is active or not active."
          },
          "name": {
            "type": "string",
            "description": "Name of the company, Reliance Retail Limited."
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyAboutAddress"
            },
            "description": "List of addresses associated with the company."
          },
          "notification_emails": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "List of the emails to notify the company"
            },
            "description": "List of emails to notify."
          }
        },
        "description": "Details about the application, covering company and owner information, domain, website, CORS settings, and other attributes."
      },
      "OwnerInfo": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "The unique identifier (24-digit Mongo Object ID) of owner info."
          },
          "emails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserEmail"
            },
            "description": "List of email addresses of the owner."
          },
          "phone_numbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserPhoneNumber"
            },
            "description": "List of phone numbers of the owner."
          },
          "first_name": {
            "type": "string",
            "description": "First name of the owner."
          },
          "last_name": {
            "type": "string",
            "description": "Last name of the owner."
          },
          "profile_pic": {
            "type": "string",
            "description": "Hosted URL of profile pic."
          }
        },
        "description": "Details of the individual who owns or manages the application, including their contact details."
      },
      "SupportedLanguage": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the supported language, e.g. ??????."
          },
          "code": {
            "type": "string",
            "description": "Unique code of supported language, e.g. hi-IN."
          }
        },
        "description": "Represents a language supported by the application."
      },
      "LanguageResponseSchema": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SupportedLanguage"
            },
            "description": "List of supported languages."
          }
        },
        "description": "Object containing a list of supported languages."
      },
      "AppStaffResponseSchema": {
        "type": "object",
        "properties": {
          "staff_users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppStaff"
            },
            "description": "List of staff users."
          }
        },
        "description": "Response object containing a list of staff users associated with the application."
      },
      "AppStaffListResponseSchema": {
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/Page"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppStaff"
            },
            "description": "List of staff users."
          }
        },
        "description": "Object containing paginated staff user information.",
        "required": []
      },
      "OrderingStoreSelectRequestSchema": {
        "type": "object",
        "required": [
          "ordering_store"
        ],
        "properties": {
          "ordering_store": {
            "$ref": "#/components/schemas/OrderingStoreSelect"
          }
        },
        "description": "Request object to select an ordering store."
      },
      "OrderingStoreSelect": {
        "type": "object",
        "required": [
          "uid"
        ],
        "properties": {
          "uid": {
            "type": "integer",
            "format": "int32",
            "description": "Ordering store unique uid. It is required."
          }
        },
        "description": "Represents the selection details of an ordering store."
      },
      "AppStaff": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "The unique identifier for the sales channel staff member."
          },
          "order_incent": {
            "type": "boolean",
            "description": "This is a boolean value. `true` to retrieve the staff members eligible for getting incentives on orders."
          },
          "stores": {
            "type": "array",
            "items": {
              "type": "integer",
              "description": "List of ids of the ordering store. staff members working at these particular ordering stores."
            },
            "description": "List of IDs of the ordering stores where the staff member works."
          },
          "application": {
            "type": "string",
            "description": "The unique identifier (24-digit Mongo Object ID) of the current sales channel."
          },
          "title": {
            "type": "string",
            "description": "Title for the staff member like owner, staff."
          },
          "user": {
            "type": "string",
            "description": "Mongo ID of the staff. Helps in retrieving the details of a particular staff member."
          },
          "employee_code": {
            "type": "string",
            "description": "Employee code of sales channel staff member. It has unique value.",
            "x-not-enum": true
          },
          "first_name": {
            "type": "string",
            "description": "First name the staff member."
          },
          "last_name": {
            "type": "string",
            "description": "Last name the staff member."
          },
          "profile_pic_url": {
            "type": "string",
            "description": "Profile image hosted url of the staff member."
          }
        },
        "description": "Details about a staff member of the sales channel."
      },
      "AppTokenResponseSchema": {
        "type": "object",
        "properties": {
          "tokens": {
            "$ref": "#/components/schemas/Tokens"
          },
          "_id": {
            "type": "string",
            "description": "The unique identifier (24-digit Mongo Object ID) of the token."
          },
          "application": {
            "type": "string",
            "description": "Alphanumeric ID allotted to the current application created within the current business account."
          },
          "created_at": {
            "type": "string",
            "description": "ISO 8601 timestamp of token creation.",
            "format": "date-time"
          },
          "modified_at": {
            "type": "string",
            "description": "ISO 8601 timestamp of token updation.",
            "format": "date-time"
          },
          "__v": {
            "type": "integer",
            "format": "int32",
            "description": "Version key for tracking revisions. Default value is zero."
          }
        },
        "description": "Response object containing token information for the application."
      },
      "Tokens": {
        "type": "object",
        "properties": {
          "firebase": {
            "$ref": "#/components/schemas/Firebase"
          },
          "moengage": {
            "$ref": "#/components/schemas/Moengage"
          },
          "segment": {
            "$ref": "#/components/schemas/Segment"
          },
          "gtm": {
            "$ref": "#/components/schemas/Gtm"
          },
          "freshchat": {
            "$ref": "#/components/schemas/Freshchat"
          },
          "safetynet": {
            "$ref": "#/components/schemas/Safetynet"
          },
          "fynd_rewards": {
            "$ref": "#/components/schemas/FyndRewards"
          },
          "google_map": {
            "$ref": "#/components/schemas/GoogleMap"
          }
        },
        "description": "Represents various tokens used for integrating different services within the application."
      },
      "Firebase": {
        "type": "object",
        "properties": {
          "credentials": {
            "$ref": "#/components/schemas/Credentials"
          },
          "enabled": {
            "type": "boolean",
            "description": "Shows whether Firebase integration is enabled or disabled for the sales channel."
          }
        },
        "description": "Firebase integration settings for the application."
      },
      "Credentials": {
        "type": "object",
        "properties": {
          "ios": {
            "$ref": "#/components/schemas/Ios"
          },
          "android": {
            "$ref": "#/components/schemas/Android"
          },
          "project_id": {
            "type": "string",
            "format": "base64",
            "description": "Project ID for Firebase integration. Project ID is a unique identifier for a project and is used only within the console."
          },
          "gcm_sender_id": {
            "type": "string",
            "format": "base64",
            "description": "Google Cloud Manager's Sender ID for Firebase. It is a unique numerical value which is created when you configure your project in the Google Developers Console/Google Cloud Console."
          },
          "application_id": {
            "type": "string",
            "format": "base64",
            "description": "Alphanumeric ID allotted to the current application created within the current business account."
          },
          "api_key": {
            "type": "string",
            "format": "base64",
            "description": "An API key is a unique string that's used to route requests to your Firebase project when interacting with Firebase."
          }
        },
        "description": "Credentials required for Firebase integration."
      },
      "Ios": {
        "type": "object",
        "properties": {
          "application_id": {
            "type": "string",
            "format": "base64",
            "description": "Alphanumeric ID allotted to a sales channel application created within a business account."
          },
          "api_key": {
            "type": "string",
            "format": "base64",
            "description": "Firebase secret credential API key for IOS."
          }
        },
        "description": "IOS-specific credentials for Firebase integration."
      },
      "Android": {
        "type": "object",
        "properties": {
          "application_id": {
            "type": "string",
            "format": "base64",
            "description": "Alphanumeric ID allotted to a sales channel application created within a business account."
          },
          "api_key": {
            "type": "string",
            "format": "base64",
            "description": "Firebase secret credential API key for Android."
          }
        },
        "description": "Represents Firebase integration settings for the Android platform."
      },
      "Moengage": {
        "type": "object",
        "properties": {
          "credentials": {
            "$ref": "#/components/schemas/MoengageCredentials"
          },
          "enabled": {
            "type": "boolean",
            "description": "Shows whether MoEngage integration is enabled or disabled for the sales channel."
          }
        },
        "description": "Represents MoEngage integration settings for the application."
      },
      "MoengageCredentials": {
        "type": "object",
        "properties": {
          "app_id": {
            "type": "string",
            "format": "base64",
            "description": "APP ID provided by MoEngage to identify a specific app. The app_id for your MoEngage account is available on the MoEngage Dashboard."
          }
        },
        "description": "Credentials required for MoEngage integration."
      },
      "Segment": {
        "type": "object",
        "properties": {
          "credentials": {
            "$ref": "#/components/schemas/SegmentCredentials"
          },
          "enabled": {
            "type": "boolean",
            "description": "Shows whether Segment integration is enabled or disabled for the sales channel."
          }
        },
        "description": "Represents Segment integration settings for the application."
      },
      "SegmentCredentials": {
        "type": "object",
        "properties": {
          "write_key": {
            "type": "string",
            "format": "base64",
            "description": "The unique identifier for a source that tells Segment from which source data is coming from, to which workspace the data belongs, and which destinations should receive the data."
          }
        },
        "description": "Credentials required for Segment integration."
      },
      "Gtm": {
        "type": "object",
        "properties": {
          "credentials": {
            "$ref": "#/components/schemas/GtmCredentials"
          },
          "enabled": {
            "type": "boolean",
            "description": "Shows whether GTM integration is enabled or disabled for the sales channel."
          }
        },
        "description": "Represents Google Tag Manager (GTM) integration settings for the application."
      },
      "GtmCredentials": {
        "type": "object",
        "properties": {
          "api_key": {
            "type": "string",
            "format": "base64",
            "description": "Secret credential API key for GTM."
          }
        },
        "description": "Credentials required for GTM integration."
      },
      "Freshchat": {
        "type": "object",
        "properties": {
          "credentials": {
            "$ref": "#/components/schemas/FreshchatCredentials"
          },
          "enabled": {
            "type": "boolean",
            "description": "Shows whether Freshchat integration is enabled or disabled for the sales channel."
          }
        },
        "description": "Represents Freshchat integration settings for the application."
      },
      "FreshchatCredentials": {
        "type": "object",
        "properties": {
          "app_id": {
            "type": "string",
            "format": "base64",
            "description": "The unique app_id of your Freshchat account for integrating Freshchat with your sales channel."
          },
          "app_key": {
            "type": "string",
            "format": "base64",
            "description": "The unique app_key of your Freshchat account for integrating Freshchat with your sales channel."
          },
          "web_token": {
            "type": "string",
            "format": "base64",
            "description": "Web token used for accessing the Freshchat APIs."
          }
        },
        "description": "Credentials required for Freshchat integration."
      },
      "Safetynet": {
        "type": "object",
        "properties": {
          "credentials": {
            "$ref": "#/components/schemas/SafetynetCredentials"
          },
          "enabled": {
            "type": "boolean",
            "description": "Shows whether Safetynet integration is enabled or disabled for the sales channel."
          }
        },
        "description": "Represents SafetyNet integration settings for the application."
      },
      "SafetynetCredentials": {
        "type": "object",
        "properties": {
          "api_key": {
            "type": "string",
            "format": "base64",
            "description": "Secret credential API key for Safetynet. This API key is used for calling the methods of Safetynet APIs."
          }
        },
        "description": "Credentials required for SafetyNet integration."
      },
      "FyndRewards": {
        "type": "object",
        "properties": {
          "credentials": {
            "$ref": "#/components/schemas/FyndRewardsCredentials"
          }
        },
        "description": "Represents Fynd Rewards integration settings for the application."
      },
      "FyndRewardsCredentials": {
        "type": "object",
        "properties": {
          "public_key": {
            "type": "string",
            "format": "base64",
            "description": "Public key for integrating with Fynd rewards."
          }
        },
        "description": "Credentials required for Fynd Rewards integration."
      },
      "GoogleMap": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Shows whether Google map integration is enabled or not."
          },
          "credentials": {
            "$ref": "#/components/schemas/GoogleMapCredentials"
          }
        },
        "description": "Represents Google Maps integration settings for the application."
      },
      "GoogleMapCredentials": {
        "type": "object",
        "properties": {
          "api_key": {
            "type": "string",
            "format": "base64",
            "description": "Secret API key for Google Maps. A unique identifier that authenticates requests made to Google Maps API."
          }
        },
        "description": "Credentials required for Google Maps integration."
      },
      "RewardPointsConfig": {
        "type": "object",
        "properties": {
          "credit": {
            "$ref": "#/components/schemas/Credit"
          },
          "debit": {
            "$ref": "#/components/schemas/Debit"
          }
        },
        "description": "Configuration for reward points within the application."
      },
      "Credit": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Shows whether reward points should be credited."
          }
        },
        "description": "Details for crediting reward points."
      },
      "Debit": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Shows whether reward points are available for debit."
          },
          "auto_apply": {
            "type": "boolean",
            "description": "Allow automatic debit of reward points."
          },
          "strategy_channel": {
            "type": "string",
            "description": "Strategy channel for debiting reward points."
          }
        },
        "description": "Details for debiting reward points."
      },
      "ProductDetailFeature": {
        "type": "object",
        "properties": {
          "similar": {
            "type": "array",
            "description": "Configuration to show similar products, other products from same seller, other products in same category, other products in same price range, etc.",
            "items": {
              "type": "string",
              "default": "basic",
              "description": "Similar products detail. Default value is basic.",
              "enum": [
                "visual",
                "basic",
                "brand",
                "category",
                "seller",
                "price",
                "specs"
              ]
            }
          },
          "seller_selection": {
            "type": "boolean",
            "description": "Shows whether the customers can choose the seller on PDP.",
            "default": true
          },
          "update_product_meta": {
            "type": "boolean",
            "description": "Allow user to update product meta. Default value is true.",
            "default": true
          },
          "request_product": {
            "type": "boolean",
            "description": "Indicates whether customers can request for a product. Default value is false.",
            "default": false
          }
        },
        "description": "Configuration for product detail features in the application."
      },
      "LaunchPage": {
        "type": "object",
        "description": "Details of the page shown after successful login.",
        "properties": {
          "page_type": {
            "type": "string",
            "description": "Type of the launch page.",
            "x-not-enum": true
          },
          "params": {
            "type": "object",
            "format": "nullable",
            "description": "Launch page params. It can be nullable.",
            "additionalProperties": true
          },
          "query": {
            "type": "object",
            "format": "nullable",
            "description": "Query related to launch page. It can be nullable.",
            "additionalProperties": true
          }
        }
      },
      "LandingPageFeature": {
        "type": "object",
        "properties": {
          "launch_page": {
            "$ref": "#/components/schemas/LaunchPage"
          },
          "continue_as_guest": {
            "type": "boolean",
            "description": "Shows whether a guest can checkout from cart without logging in."
          },
          "login_btn_text": {
            "type": "string",
            "description": "Shows the text displayed over the login button."
          },
          "show_domain_textbox": {
            "type": "boolean",
            "description": "Shows whether a textbox for entering domain is available."
          },
          "show_register_btn": {
            "type": "boolean",
            "description": "Shows whether register button is available in the login/landing page."
          }
        },
        "description": "Configuration for the landing page of the application."
      },
      "RegistrationPageFeature": {
        "type": "object",
        "properties": {
          "ask_store_address": {
            "type": "boolean",
            "description": "Shows whether a form to collect the address of the store, should be displayed upon visiting the website."
          }
        },
        "description": "Configuration for the registration page of the application."
      },
      "AppFeature": {
        "type": "object",
        "properties": {
          "product_detail": {
            "$ref": "#/components/schemas/ProductDetailFeature"
          },
          "landing_page": {
            "$ref": "#/components/schemas/LandingPageFeature"
          },
          "registration_page": {
            "$ref": "#/components/schemas/RegistrationPageFeature"
          },
          "home_page": {
            "$ref": "#/components/schemas/HomePageFeature"
          },
          "common": {
            "$ref": "#/components/schemas/CommonFeature"
          },
          "cart": {
            "$ref": "#/components/schemas/CartFeature"
          },
          "qr": {
            "$ref": "#/components/schemas/QrFeature"
          },
          "pcr": {
            "$ref": "#/components/schemas/PcrFeature"
          },
          "order": {
            "$ref": "#/components/schemas/OrderFeature"
          },
          "buybox": {
            "$ref": "#/components/schemas/BuyboxFeature"
          },
          "_id": {
            "type": "string",
            "description": "The unique identifier (24-digit Mongo Object ID) for the sales channel features."
          },
          "app": {
            "type": "string",
            "description": "Application ID of the sales channel."
          },
          "created_at": {
            "type": "string",
            "description": "ISO 8601 timestamp showing the date when the features were configured.",
            "format": "date-time"
          },
          "modified_at": {
            "type": "string",
            "description": "ISO 8601 timestamp of last known modifications to the sales channel feature configuration.",
            "format": "date-time"
          },
          "__v": {
            "type": "integer",
            "format": "int32",
            "description": "Version key for tracking revisions. Default value is zero."
          },
          "pricing_strategy": {
            "$ref": "#/components/schemas/PricingStrategy"
          }
        },
        "description": "Configuration for various features of the application."
      },
      "HomePageFeature": {
        "type": "object",
        "properties": {
          "order_processing": {
            "type": "boolean",
            "description": "Shows whether order processing is enabled or not enabled."
          }
        },
        "description": "Configuration for the home page of the application."
      },
      "CommonFeature": {
        "type": "object",
        "properties": {
          "communication_optin_dialog": {
            "$ref": "#/components/schemas/CommunicationOptinDialogFeature"
          },
          "deployment_store_selection": {
            "$ref": "#/components/schemas/DeploymentStoreSelectionFeature"
          },
          "listing_price": {
            "$ref": "#/components/schemas/ListingPriceFeature"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyFeature"
          },
          "revenue_engine": {
            "$ref": "#/components/schemas/RevenueEngineFeature"
          },
          "feedback": {
            "$ref": "#/components/schemas/FeedbackFeature"
          },
          "compare_products": {
            "$ref": "#/components/schemas/CompareProductsFeature"
          },
          "reward_points": {
            "$ref": "#/components/schemas/RewardPointsConfig"
          },
          "listing_page": {
            "$ref": "#/components/schemas/ListingPageFeature"
          },
          "international_shipping": {
            "$ref": "#/components/schemas/InternationalShipping"
          }
        },
        "description": "Configuration for common features across the application."
      },
      "InternationalShipping": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "International shipping is enabled or not."
          }
        },
        "description": "Configuration for international shipping settings."
      },
      "CommunicationOptinDialogFeature": {
        "type": "object",
        "properties": {
          "visibility": {
            "type": "boolean",
            "description": "Shows whether WhatsApp communication is enabled."
          }
        },
        "description": "Configuration for the WhatsApp communication opt-in dialog."
      },
      "DeploymentStoreSelectionFeature": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Shows whether selection of store (for deploying the application) is permitted."
          },
          "type": {
            "type": "string",
            "description": "Permitted values are 'hard' and 'soft'. For hard type delivery, store selection is compulsory. For soft type, delivery store selection is optional."
          }
        },
        "description": "Configuration for store selection during application deployment."
      },
      "ListingPriceFeature": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Shows which price to display on PLP if one product has multiple prices (for each size), valid values are 'min', 'max', 'range'. Default value is range."
          },
          "sort": {
            "type": "string",
            "description": "Sorting of listing price with min or max value. Default value is min."
          }
        },
        "description": "Configuration for displaying prices on product listing pages."
      },
      "ListingPageFeature": {
        "type": "object",
        "properties": {
          "sort_on": {
            "type": "string",
            "default": "popular",
            "enum": [
              "latest",
              "popular",
              "relevance",
              "discount_asc",
              "discount_dsc",
              "price_asc",
              "price_dsc"
            ],
            "description": "Determines the sorting criteria for product listings on the page."
          }
        },
        "description": "Configuration for sorting product listings on the listing page."
      },
      "CurrencyFeature": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "description": "3-letter currency code.",
            "items": {
              "type": "string",
              "description": "list of different currency codes like 'INR', 'USD'."
            }
          },
          "type": {
            "type": "string",
            "description": "If 'explicit', currency formatting shows currency code with price. For explicit or all currency selection."
          },
          "default_currency": {
            "type": "string",
            "description": "3-letter code of the default currency used in the application. Default value is 'INR'."
          }
        },
        "description": "Configuration for currency settings in the application."
      },
      "RevenueEngineFeature": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Enable revenue engine. Default value is false."
          }
        },
        "description": "Configuration for the revenue engine."
      },
      "FeedbackFeature": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Whether customer feedback is enabled on PDP. Default value is false."
          }
        },
        "description": "Whether customer feedback is enabled on PDP."
      },
      "CompareProductsFeature": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Whether product comparison feature is enabled on PDP."
          }
        },
        "description": "Whether product comparison feature is enabled on PDP."
      },
      "CartFeature": {
        "type": "object",
        "properties": {
          "gst_input": {
            "type": "boolean",
            "description": "Whether customer is allowed to enter GST on the cart page for claiming input credits."
          },
          "staff_selection": {
            "type": "boolean",
            "description": "Whether staff selection is enabled on cart page."
          },
          "placing_for_customer": {
            "type": "boolean",
            "description": "Whether the staff is placing order on behalf of customer. Default value is true."
          },
          "google_map": {
            "type": "boolean",
            "description": "Allow adding of Google Maps. Default value is true."
          },
          "revenue_engine_coupon": {
            "type": "boolean",
            "description": "Allow coupon apply and credits, together. Default value is false."
          }
        },
        "description": "Configuration options for features related to the shopping cart, including GST input, staff selection, and coupon usage."
      },
      "QrFeature": {
        "type": "object",
        "properties": {
          "application": {
            "type": "boolean",
            "description": "Whether sharing of mobile app via QR code is allowed. Default value is false."
          },
          "products": {
            "type": "boolean",
            "description": "Whether sharing product via QR code is allowed. Default value is false."
          },
          "collections": {
            "type": "boolean",
            "description": "Whether sharing collection via QR code is allowed. Default value is false."
          }
        },
        "description": "Configuration for the QR feature."
      },
      "PcrFeature": {
        "type": "object",
        "properties": {
          "staff_selection": {
            "type": "boolean",
            "description": "Allow staff selection. Default value is false."
          }
        },
        "description": "Configuration for the PCR feature."
      },
      "OrderFeature": {
        "type": "object",
        "properties": {
          "buy_again": {
            "type": "boolean",
            "description": "Allow buy again option for order. Default value is false."
          }
        },
        "description": "Configuration options for order-related features, such as enabling the 'buy again' option."
      },
      "BuyboxFeature": {
        "type": "object",
        "properties": {
          "show_name": {
            "type": "boolean",
            "description": "Allow users to see seller/stores name on PDP (product detail page)."
          },
          "enable_selection": {
            "type": "boolean",
            "description": "Allow selection of sellers/stores on PDP (product detail page)."
          },
          "is_seller_buybox_enabled": {
            "type": "boolean",
            "description": "Toggle buybox listing between sellers and stores. True indicates seller listing, while False indicates store listing."
          }
        }
      },
      "AppFeatureResponseSchema": {
        "type": "object",
        "properties": {
          "feature": {
            "$ref": "#/components/schemas/AppFeature"
          }
        },
        "description": "Response schema containing the application feature details."
      },
      "Currency": {
        "properties": {
          "_id": {
            "type": "string",
            "description": "The unique identifier (24-digit Mongo Object ID) of the current sales channel supported currency."
          },
          "is_active": {
            "type": "boolean",
            "description": "Shows currency is enabled or not in current sales channel."
          },
          "name": {
            "type": "string",
            "description": "Name of the currency, e.g Indian Rupee."
          },
          "code": {
            "type": "string",
            "description": "3-character currency code, e.g. INR, USD, EUR."
          },
          "created_at": {
            "type": "string",
            "description": "ISO 8601 timestamp of sales channel support currency creation.",
            "format": "date-time"
          },
          "modified_at": {
            "type": "string",
            "description": "ISO 8601 timestamp of sales channel support currency updation.",
            "format": "date-time"
          },
          "decimal_digits": {
            "type": "integer",
            "format": "int32",
            "description": "Acceptable decimal limits for a given currency, e.g. 1.05$ means upto 2 decimal digits can be accepted as a valid value of a currency."
          },
          "symbol": {
            "type": "string",
            "description": "Unique symbol for identifying the currency, e.g. ₹."
          },
          "subunit": {
            "type": "string",
            "description": "Denotes the subunit for a currency, e.g. Cent for USD, Paisa for INR"
          },
          "country_name": {
            "type": "string",
            "description": "Country name."
          },
          "country_code": {
            "type": "string",
            "description": "Country code.",
            "x-not-enum": true
          }
        },
        "description": "Details about the currency supported by the sales channel, including its ID, name, code, and other attributes."
      },
      "TokenSchema": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Token string."
          },
          "created_by": {
            "type": "object",
            "additionalProperties": true,
            "description": "User details."
          },
          "created_at": {
            "type": "string",
            "description": "ISO 8601 timestamp of when token created.",
            "format": "date-time"
          }
        },
        "description": "Details about a token, including its creation timestamp and associated metadata."
      },
      "InvalidPayloadRequestSchema": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message when request body payload is improper."
          }
        },
        "description": "Response object indicating that the request body payload is improper or malformed."
      },
      "SuccessMessageResponseSchema": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Success message shown to the user (in a string format)."
          }
        },
        "description": "Response object containing a success message to confirm the successful completion of an operation."
      },
      "CompanyAboutAddress": {
        "type": "object",
        "properties": {
          "pincode": {
            "type": "string",
            "description": "6-digit PIN code of the city, e.g. 400001."
          },
          "address1": {
            "type": "string",
            "description": "Primary address line of the company."
          },
          "address2": {
            "type": "string",
            "description": "Secondary address line of the company."
          },
          "city": {
            "type": "string",
            "description": "City name, e.g. Mumbai."
          },
          "state": {
            "type": "string",
            "description": "State name, e.g. Maharashtra."
          },
          "country": {
            "type": "string",
            "description": "Country name, e.g. India."
          },
          "address_type": {
            "type": "string",
            "description": "Indicates different office types like office, registered, and home.",
            "enum": [
              "home",
              "registered",
              "office"
            ]
          }
        },
        "description": "Object representing the company's address details, including pincode, address lines, city, state, country, and address type."
      },
      "UserEmail": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Current email is active or not active."
          },
          "primary": {
            "type": "boolean",
            "description": "Indicates current email id primary email or not primary email of user."
          },
          "verified": {
            "type": "boolean",
            "description": "Indicates current email is verified email or not verified email."
          },
          "email": {
            "type": "string",
            "description": "Email address of the user."
          }
        },
        "description": "Object representing a user's email information, including its active status, whether it's the primary email, verification status, and the email address itself."
      },
      "UserPhoneNumber": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Current phone number is active or not active."
          },
          "primary": {
            "type": "boolean",
            "description": "Indicates current phone number is primary or not for a user."
          },
          "verified": {
            "type": "boolean",
            "description": "Indicates current phone number is verified or not verified."
          },
          "country_code": {
            "type": "integer",
            "format": "int32",
            "description": "Country code, e.g. +91.",
            "x-not-enum": true
          },
          "phone": {
            "type": "string",
            "description": "Phone number of the user."
          }
        },
        "description": "Object representing a user's phone number, including its active status, whether it's the primary number, verification status, and the phone number itself."
      },
      "ApplicationInformation": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/InformationAddress"
          },
          "support": {
            "$ref": "#/components/schemas/InformationSupport"
          },
          "social_links": {
            "$ref": "#/components/schemas/SocialLinks"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Links"
            },
            "description": "Array of additional relevant web links related to the application."
          },
          "copyright_text": {
            "type": "string",
            "description": "Copyright statement usually seen at the site's footer."
          },
          "_id": {
            "type": "string",
            "description": "Unique identifier (24-digit Mongo Object ID) of the application information."
          },
          "business_highlights": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BusinessHighlights"
            },
            "description": "Array of notable business highlights with icons and descriptions."
          },
          "application": {
            "type": "string",
            "description": "Alphanumeric ID allotted to a sales channel application created within a business account."
          },
          "created_at": {
            "type": "string",
            "description": "ISO 8601 timestamp of creation of the application information.",
            "format": "date-time"
          },
          "modified_at": {
            "type": "string",
            "description": "ISO 8601 timestamp of updation of the application information.",
            "format": "date-time"
          },
          "__v": {
            "type": "integer",
            "format": "int32",
            "description": "Version key for tracking revisions. Default value is zero."
          }
        },
        "description": "Contains details about an application, including its name, description, logos, banner, and domain information."
      },
      "InformationAddress": {
        "type": "object",
        "properties": {
          "loc": {
            "$ref": "#/components/schemas/InformationLoc"
          },
          "address_line": {
            "type": "array",
            "description": "Contact address of the sales channel.",
            "items": {
              "type": "string",
              "description": "Detailed address info of the company"
            }
          },
          "phone": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InformationPhone"
            },
            "description": "Phone numbers with country codes."
          },
          "city": {
            "type": "string",
            "description": "Name of the city, e.g. Mumbai."
          },
          "country": {
            "type": "string",
            "description": "Name of the country, e.g. India."
          },
          "pincode": {
            "type": "integer",
            "format": "int32",
            "description": "6-digit PIN Code of the city, e.g. 400001."
          }
        },
        "description": "Contains the detailed address including PIN code, city, state, country, and type of address."
      },
      "InformationPhone": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Country code for contact number, e.g. +91 (for India)."
          },
          "number": {
            "type": "string",
            "description": "10-digit mobile number."
          }
        },
        "description": "Country code and 10-digit mobile number for contact."
      },
      "InformationSupportPhone": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Country code for contact number, e.g. +91 (for India)."
          },
          "number": {
            "type": "string",
            "description": "10-digit mobile number."
          },
          "key": {
            "type": "string",
            "description": "Additional identifier or key for the contact number."
          }
        },
        "description": "Contact number with country code and phone number."
      },
      "InformationSupportEmail": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Value of email."
          },
          "key": {
            "type": "string",
            "description": "Additional identifier or key for the email address."
          }
        },
        "description": "Email address for support contact."
      },
      "InformationLoc": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Country code for contact number, e.g. +91 (for India)."
          },
          "coordinates": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "10-digit mobile number."
          }
        },
        "description": "Contains location type and coordinates."
      },
      "InformationSupport": {
        "type": "object",
        "properties": {
          "phone": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InformationSupportPhone"
            },
            "description": "An array of phone contact details, including country code and number."
          },
          "email": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InformationSupportEmail"
            },
            "description": "An array of email contact details."
          },
          "timing": {
            "type": "string",
            "description": "Working hours of support team, e.g. 9 AM to 9 PM."
          }
        },
        "description": "Details on support contacts, including phone numbers, email addresses, and support hours."
      },
      "SocialLinks": {
        "type": "object",
        "properties": {
          "facebook": {
            "$ref": "#/components/schemas/FacebookLink"
          },
          "instagram": {
            "$ref": "#/components/schemas/InstagramLink"
          },
          "twitter": {
            "$ref": "#/components/schemas/TwitterLink"
          },
          "pinterest": {
            "$ref": "#/components/schemas/PinterestLink"
          },
          "google_plus": {
            "$ref": "#/components/schemas/GooglePlusLink"
          },
          "youtube": {
            "$ref": "#/components/schemas/YoutubeLink"
          },
          "linked_in": {
            "$ref": "#/components/schemas/LinkedInLink"
          },
          "vimeo": {
            "$ref": "#/components/schemas/VimeoLink"
          },
          "blog_link": {
            "$ref": "#/components/schemas/BlogLink"
          }
        },
        "description": "Contains social media and blog links related to the brand or business, including icons and URLs for various platforms."
      },
      "FacebookLink": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Name of the social media platform, e.g. Facebook."
          },
          "icon": {
            "type": "string",
            "description": "Hosted URL of social icon image shown on the website."
          },
          "link": {
            "type": "string",
            "description": "Web URL of brand's Facebook page."
          }
        },
        "description": "Contains information about the brand's Facebook page."
      },
      "InstagramLink": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Name of the social media platform, e.g. Instagram."
          },
          "icon": {
            "type": "string",
            "description": "Hosted URL of social icon image shown on the website."
          },
          "link": {
            "type": "string",
            "description": "Web URL of brand's Instagram page."
          }
        },
        "description": "Contains information about the brand's Instagram page."
      },
      "TwitterLink": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Name of the social media platform, e.g. Twitter."
          },
          "icon": {
            "type": "string",
            "description": "Hosted URL of social icon image shown on the website."
          },
          "link": {
            "type": "string",
            "description": "Web URL of brand's Twitter account."
          }
        },
        "description": "Contains information about the brand's Twitter account."
      },
      "PinterestLink": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Name of the social media platform, e.g. Pinterest."
          },
          "icon": {
            "type": "string",
            "description": "Hosted URL of social icon image shown on the website."
          },
          "link": {
            "type": "string",
            "description": "Web URL of brand's Pinterest page."
          }
        },
        "description": "Contains information about the brand's Pinterest page."
      },
      "GooglePlusLink": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Name of the social media platform, e.g. Google+."
          },
          "icon": {
            "type": "string",
            "description": "Hosted URL of social icon image shown on the website."
          },
          "link": {
            "type": "string",
            "description": "Web URL of brand's Google+ account."
          }
        },
        "description": "Contains information about the brand's Google+ account."
      },
      "YoutubeLink": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Name of the social media platform, e.g. YouTube."
          },
          "icon": {
            "type": "string",
            "description": "Hosted URL of social icon image shown on the website."
          },
          "link": {
            "type": "string",
            "description": "Web URL of brand's YouTube channel."
          }
        },
        "description": "Contains information about the brand's YouTube channel."
      },
      "LinkedInLink": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Name of the social media platform, e.g. LinkedIn."
          },
          "icon": {
            "type": "string",
            "description": "Hosted URL of social icon image shown on the website."
          },
          "link": {
            "type": "string",
            "description": "Web URL of brand's LinkedIn channel."
          }
        },
        "description": "Contains information about the brand's LinkedIn channel."
      },
      "VimeoLink": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Name of the video hosting platform, e.g. Vimeo."
          },
          "icon": {
            "type": "string",
            "description": "Hosted URL of social icon image shown on the website."
          },
          "link": {
            "type": "string",
            "description": "Web URL of brand's Vimeo channel."
          }
        },
        "description": "Contains information about the brand's Vimeo channel."
      },
      "BlogLink": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Name of the brand's blog page."
          },
          "icon": {
            "type": "string",
            "description": "Hosted URL of icon image shown on the website."
          },
          "link": {
            "type": "string",
            "description": "Web URL of brand's blog page."
          }
        },
        "description": "Contains information about the brand's blog page\n."
      },
      "Links": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Name of the related page or link."
          },
          "link": {
            "type": "string",
            "description": "Web URL for redirecting to a related page."
          }
        },
        "description": "Contains information about related pages or links."
      },
      "BusinessHighlights": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Unique identifier (24-digit Mongo Object ID) of the related business."
          },
          "title": {
            "type": "string",
            "description": "Title of the business highlight, e.g. Superfast Delivery."
          },
          "icon": {
            "type": "string",
            "description": "Hosted URL of icon image representing the business highlight."
          },
          "sub_title": {
            "type": "string",
            "description": "Detailed information about the highlight."
          }
        },
        "description": "Contains information about key features or highlights of a business."
      },
      "ApplicationDetail": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the sales channel. It is required."
          },
          "description": {
            "type": "string",
            "description": "It gives a detailed information about the sales channel. It is required."
          },
          "logo": {
            "$ref": "#/components/schemas/SecureUrl"
          },
          "mobile_logo": {
            "$ref": "#/components/schemas/SecureUrl"
          },
          "favicon": {
            "$ref": "#/components/schemas/SecureUrl"
          },
          "banner": {
            "$ref": "#/components/schemas/SecureUrl"
          },
          "domain": {
            "$ref": "#/components/schemas/Domain"
          },
          "domains": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain"
            },
            "description": "List of domains associated with the sales channel."
          },
          "_id": {
            "type": "string",
            "description": "The unique identifier (24-digit Mongo Object ID) for the sales channel details."
          },
          "slug": {
            "type": "string",
            "description": "URL-friendly version of the sales channel name."
          },
          "company_id": {
            "type": "integer",
            "description": "Numeric ID allotted to the business account where the sales channel is mapped."
          }
        },
        "required": [
          "name"
        ],
        "description": "Details of a specific sales channel including its branding, domain, and associated information."
      },
      "CurrenciesResponseSchema": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Currency"
            },
            "description": "A list of currency objects. Each object represents a different currency."
          }
        },
        "description": "A response object containing a list of currencies."
      },
      "DefaultCurrency": {
        "type": "object",
        "properties": {
          "ref": {
            "type": "string",
            "description": "The unique identifier (24-digit Mongo Object ID) of the default currency."
          },
          "code": {
            "type": "string",
            "description": "3-character code of the default currency, e.g. INR, EUR, USD."
          }
        },
        "description": "Represents the default currency."
      },
      "AppCurrencyResponseSchema": {
        "type": "object",
        "properties": {
          "application": {
            "type": "string",
            "description": "Alphanumeric ID allotted to an application (sales channel website) created within a business account."
          },
          "default_currency": {
            "$ref": "#/components/schemas/DefaultCurrency"
          },
          "supported_currency": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Currency"
            },
            "description": "A list of currencies supported by the application."
          },
          "_id": {
            "type": "string",
            "description": "The unique identifier of the application."
          },
          "created_at": {
            "type": "string",
            "description": "ISO 8601 timestamp of when the application was created.",
            "format": "date-time"
          },
          "modified_at": {
            "type": "string",
            "description": "ISO 8601 timestamp of when the application was last modified.",
            "format": "date-time"
          }
        },
        "description": "Response object containing details about currencies related to an application.\n."
      },
      "StoreLatLong": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Coordinates type of the opted store."
          },
          "coordinates": {
            "type": "array",
            "items": {
              "type": "number",
              "description": "Latitude and Longitude coordinates of the opted store"
            },
            "description": "Latitude and Longitude coordinates of the store."
          }
        },
        "description": "Contains latitude and longitude coordinates for a store."
      },
      "OptedStoreAddress": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "description": "State of the opted store, e.g. Maharashtra."
          },
          "address1": {
            "type": "string",
            "description": "Address of the opted store."
          },
          "lat_long": {
            "$ref": "#/components/schemas/StoreLatLong"
          },
          "address2": {
            "type": "string",
            "description": "Address of the opted store."
          },
          "pincode": {
            "type": "string",
            "description": "6-digit PIN code of the opted store location."
          },
          "country": {
            "type": "string",
            "description": "Country of the opted store, e.g. India."
          },
          "city": {
            "type": "string",
            "description": "City of the opted store, e.g. Mumbai."
          }
        },
        "description": "Address details of an opted store."
      },
      "OrderingStore": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/OptedStoreAddress"
          },
          "_id": {
            "type": "string",
            "description": "The unique identifier (24-digit Mongo Object ID) of the ordering store."
          },
          "uid": {
            "type": "integer",
            "format": "int32",
            "description": "Ordering store UID."
          },
          "name": {
            "type": "string",
            "description": "Store name of the ordering store."
          },
          "display_name": {
            "type": "string",
            "description": "Display name of the ordering store."
          },
          "store_type": {
            "type": "string",
            "description": "Store type of the ordering store, e.g. high_street, mall, warehouse.",
            "x-not-enum": true
          },
          "store_code": {
            "type": "string",
            "description": "Store code of the ordering store, e.g. MUM-102.",
            "x-not-enum": true
          },
          "pincode": {
            "type": "string",
            "description": "6-digit PIN Code  of the ordering store, e.g. 400001."
          },
          "code": {
            "type": "string",
            "description": "Code of the ordering store (usually same as Store Code)."
          }
        },
        "description": "Represents details of ordering stores, including pagination, list of stores, deployment status, and selection type."
      },
      "OrderingStores": {
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/Page"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderingStore"
            },
            "description": "List of ordering stores."
          },
          "deployed_stores": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32",
              "description": "List of all deployed stores"
            },
            "description": "List of all deployed stores."
          },
          "all_stores": {
            "type": "boolean",
            "description": "Allow all stores of the ordering stores."
          },
          "enabled": {
            "type": "boolean",
            "description": "Allow ordering stores for current sales channel."
          },
          "type": {
            "type": "string",
            "description": "For hard type delivery, store selection is compulsory. For soft type, delivery store selection is optional.",
            "enum": [
              "soft",
              "hard"
            ]
          },
          "_id": {
            "type": "string",
            "description": "The unique identifier (24-digit Mongo Object ID) of the ordering store."
          },
          "app": {
            "type": "string",
            "description": "Alphanumeric ID allotted to an application (sales channel website) created within a business account."
          },
          "__v": {
            "type": "integer",
            "format": "int32",
            "description": "Version key for tracking ordering stores. Default value is zero."
          }
        },
        "description": "A collection of ordering stores and their configurations.",
        "required": []
      },
      "PricingStrategy": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Indicates the pricing strategy value.",
            "enum": [
              "all",
              "price_zone",
              "user_group",
              "price_zone_user_group"
            ]
          }
        }
      },
      "ApplicationLegal": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "application": {
            "type": "string"
          },
          "tnc": {
            "type": "string"
          },
          "policy": {
            "type": "string"
          },
          "shipping": {
            "type": "string"
          },
          "returns": {
            "type": "string"
          },
          "faq": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationLegalFAQ"
            }
          },
          "_id": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "__v": {
            "type": "number"
          }
        }
      },
      "ApplicationLegalFAQ": {
        "additionalProperties": true,
        "type": "object",
        "properties": {
          "question": {
            "type": "string"
          },
          "answer": {
            "type": "string"
          }
        }
      },
      "SeoComponent": {
        "type": "object",
        "properties": {
          "seo": {
            "$ref": "#/components/schemas/SeoSchema"
          }
        }
      },
      "SeoSchema": {
        "additionalProperties": true,
        "type": "object",
        "properties": {
          "app": {
            "type": "string"
          },
          "_id": {
            "type": "string"
          },
          "robots_txt": {
            "type": "string"
          },
          "sitemap_enabled": {
            "type": "boolean"
          },
          "additional_sitemap": {
            "type": "string"
          },
          "sitemap": {
            "$ref": "#/components/schemas/SEOSitemap"
          },
          "cannonical_enabled": {
            "type": "boolean",
            "default": false
          },
          "custom_meta_tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomMetaTag"
            }
          },
          "details": {
            "$ref": "#/components/schemas/Detail"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "__v": {
            "type": "number"
          }
        }
      },
      "CustomMetaTag": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "_id": {
            "type": "string"
          }
        }
      },
      "Detail": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "image_url": {
            "type": "string"
          }
        }
      },
      "SeoSchemaComponent": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SEOSchemaMarkupTemplate"
            }
          }
        }
      },
      "SEOSchemaMarkupTemplate": {
        "additionalProperties": true,
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "page_type": {
            "type": "string",
            "description": "Type of page under seo schema is to be created",
            "enum": [
              "about-us",
              "addresses",
              "blog",
              "brands",
              "cards",
              "cart",
              "categories",
              "brand",
              "category",
              "collection",
              "collections",
              "contact-us",
              "external",
              "faq",
              "freshchat",
              "home",
              "notification-settings",
              "orders",
              "page",
              "policy",
              "product",
              "product-request",
              "products",
              "profile",
              "profile-order-shipment",
              "profile-basic",
              "profile-company",
              "profile-emails",
              "profile-phones",
              "rate-us",
              "refer-earn",
              "settings",
              "shared-cart",
              "tnc",
              "track-order",
              "wishlist",
              "sections",
              "form",
              "cart-delivery",
              "cart-payment",
              "cart-review",
              "login",
              "register",
              "shipping-policy",
              "return-policy",
              "order-status"
            ]
          },
          "description": {
            "type": "string"
          },
          "schema": {
            "type": "string"
          },
          "target_json": {
            "type": "object",
            "additionalProperties": true
          },
          "active": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "application": {
            "type": "string"
          },
          "__v": {
            "type": "number"
          }
        }
      },
      "ScheduleSchema": {
        "type": "object",
        "properties": {
          "cron": {
            "type": "string"
          },
          "start": {
            "type": "string"
          },
          "end": {
            "type": "string"
          },
          "duration": {
            "type": "number"
          },
          "next_schedule": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NextSchedule"
            }
          }
        }
      },
      "AnnouncementSchema": {
        "type": "object",
        "properties": {
          "announcement": {
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/ScheduleStartSchema"
          }
        }
      },
      "ScheduleStartSchema": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string"
          },
          "end": {
            "type": "string"
          }
        }
      },
      "BlogGetResponseSchema": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BlogSchema"
            }
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          },
          "filters": {
            "$ref": "#/components/schemas/BlogFilters"
          }
        }
      },
      "BlogFilters": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ResourceContent": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "Asset": {
        "type": "object",
        "properties": {
          "aspect_ratio": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "secure_url": {
            "type": "string"
          }
        }
      },
      "Author": {
        "type": "object",
        "properties": {
          "designation": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "BlogSchema": {
        "additionalProperties": true,
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "_custom_json": {
            "type": "object",
            "additionalProperties": true
          },
          "application": {
            "type": "string"
          },
          "archived": {
            "type": "boolean"
          },
          "author": {
            "$ref": "#/components/schemas/Author"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceContent"
            }
          },
          "feature_image": {
            "$ref": "#/components/schemas/Asset"
          },
          "published": {
            "type": "boolean"
          },
          "reading_time": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "publish_date": {
            "type": "string",
            "format": "date-time"
          },
          "seo": {
            "$ref": "#/components/schemas/SEO"
          },
          "title": {
            "type": "string"
          },
          "date_meta": {
            "$ref": "#/components/schemas/DateMeta"
          },
          "summary": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "published",
              "draft",
              "scheduled"
            ]
          }
        }
      },
      "SEO": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "image": {
            "$ref": "#/components/schemas/SEOImage"
          },
          "title": {
            "type": "string"
          },
          "meta_tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SEOMetaItem"
            }
          },
          "sitemap": {
            "$ref": "#/components/schemas/SEOSitemap"
          },
          "breadcrumbs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SEObreadcrumb"
            }
          },
          "canonical_url": {
            "type": "string"
          }
        }
      },
      "SEOImage": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          }
        }
      },
      "SEOMetaItem": {
        "type": "object",
        "description": "An object representing a meta tag item for seo purposes.",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the meta tag item."
          },
          "items": {
            "type": "array",
            "description": "An array of items within the meta tag, each represented by an object.",
            "items": {
              "$ref": "#/components/schemas/SEOMetaItems"
            }
          }
        }
      },
      "SEOMetaItems": {
        "type": "object",
        "description": "An object representing a key-value pair within a meta tag item for seo purposes.",
        "properties": {
          "key": {
            "type": "string",
            "description": "The key of the meta tag item."
          },
          "value": {
            "type": "string",
            "description": "The value of the meta tag item."
          }
        }
      },
      "SEOSitemap": {
        "type": "object",
        "description": "An object representing sitemap information for seo purposes.",
        "properties": {
          "modified_on": {
            "type": "string",
            "format": "date-time",
            "description": "UTC date time stamp at which the page was last modified"
          },
          "priority": {
            "type": "number",
            "description": "The priority of the page in the sitemap, typically a value between 0.0 And 1.0."
          },
          "frequency": {
            "type": "string",
            "description": "The frequency with which the content of the page is likely to change, such as 'always', 'hourly', 'daily', 'weekly', 'monthly', 'yearly', or 'never'."
          }
        }
      },
      "SEObreadcrumb": {
        "type": "object",
        "description": "An object representing a single breadcrumb in the breadcrumb navigation path.",
        "properties": {
          "url": {
            "type": "string",
            "description": "The url associated with the breadcrumb."
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          }
        }
      },
      "DefaultSitemapIndividualConfig": {
        "type": "object",
        "description": "Configuration for an individual sitemap type in the default sitemap settings",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Whether sitemap configuration is enabled or not for this sitemap configuration",
            "default": true
          }
        }
      },
      "DefaultSitemapConfig": {
        "type": "object",
        "properties": {
          "root": {
            "$ref": "#/components/schemas/DefaultSitemapIndividualConfig"
          },
          "brand": {
            "$ref": "#/components/schemas/DefaultSitemapIndividualConfig"
          },
          "collections": {
            "$ref": "#/components/schemas/DefaultSitemapIndividualConfig"
          },
          "category_l1": {
            "$ref": "#/components/schemas/DefaultSitemapIndividualConfig"
          },
          "category_l2": {
            "$ref": "#/components/schemas/DefaultSitemapIndividualConfig"
          },
          "category_l3": {
            "$ref": "#/components/schemas/DefaultSitemapIndividualConfig"
          },
          "pages": {
            "$ref": "#/components/schemas/DefaultSitemapIndividualConfig"
          },
          "blog": {
            "$ref": "#/components/schemas/DefaultSitemapIndividualConfig"
          },
          "section": {
            "$ref": "#/components/schemas/DefaultSitemapIndividualConfig"
          },
          "faq": {
            "$ref": "#/components/schemas/DefaultSitemapIndividualConfig"
          },
          "sitemap": {
            "$ref": "#/components/schemas/DefaultSitemapIndividualConfig"
          }
        }
      },
      "SitemapConfig": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Unique identifier for the sitemap configuration",
            "example": "main-sitemap"
          },
          "is_active": {
            "type": "boolean",
            "description": "Indicates if the sitemap configuration is active or not in storefront",
            "example": true
          },
          "sitemap": {
            "type": "string",
            "description": "XML string containing sitemap data in base64 encoding",
            "example": "<?xml version='1.0'?><urlset xmlns='http://www.sitemaps.org/schemas/sitemap/0.9'><url><loc>http://example.com</loc></url></urlset>"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the configuration was created"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the configuration was last updated"
          }
        }
      },
      "SitemapConfigurationList": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "List of all Sitemap configurations",
            "items": {
              "$ref": "#/components/schemas/SitemapConfig"
            }
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          }
        }
      },
      "DateMeta": {
        "type": "object",
        "properties": {
          "created_on": {
            "type": "string",
            "format": "date-time"
          },
          "modified_on": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "LocaleLanguage": {
        "type": "object",
        "properties": {
          "hi": {
            "$ref": "#/components/schemas/Language"
          },
          "ar": {
            "$ref": "#/components/schemas/Language"
          },
          "en_us": {
            "$ref": "#/components/schemas/Language"
          }
        }
      },
      "Language": {
        "type": "object",
        "properties": {
          "display": {
            "type": "string"
          }
        }
      },
      "Action": {
        "type": "object",
        "description": "Schema to define the Action Object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of action to be taken e.g, page.",
            "example": "test"
          },
          "page": {
            "$ref": "#/components/schemas/ActionPage"
          },
          "popup": {
            "$ref": "#/components/schemas/ActionPage"
          }
        }
      },
      "NavigationReference": {
        "type": "object",
        "properties": {
          "acl": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "_locale_language": {
            "$ref": "#/components/schemas/LocaleLanguage"
          },
          "image": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          },
          "active": {
            "type": "boolean"
          },
          "display": {
            "type": "string"
          },
          "sort_order": {
            "type": "integer"
          },
          "sub_navigation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NavigationReference"
            }
          }
        }
      },
      "AnnouncementsResponseSchema": {
        "type": "object",
        "properties": {
          "announcements": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AnnouncementSchema"
              }
            }
          },
          "refresh_rate": {
            "type": "integer",
            "format": "int32",
            "description": "number of seconds after which api should hit again to fetch new announcements"
          },
          "refresh_pages": {
            "description": "list of page slugs on which announcement should be fetched as soon as they are loaded",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "FaqResponseSchema": {
        "type": "object",
        "properties": {
          "faqs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FaqSchema"
            }
          }
        }
      },
      "DataLoaderSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "service": {
            "type": "string"
          },
          "operation_id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "url",
              "function"
            ]
          },
          "is_selected": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time"
          },
          "company": {
            "type": "string"
          },
          "application": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "__source": {
            "$ref": "#/components/schemas/DataLoaderSourceSchema"
          },
          "_id": {
            "type": "string"
          }
        }
      },
      "DataLoaderSourceSchema": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "DataLoadersSchema": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataLoaderSchema"
            }
          }
        }
      },
      "ContentAPIError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "status": {
            "type": "number"
          },
          "code": {
            "type": "string"
          },
          "exception": {
            "type": "string"
          },
          "info": {
            "type": "string"
          },
          "request_id": {
            "type": "string"
          },
          "stack_trace": {
            "type": "string"
          },
          "meta": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "CategorySchema": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "index": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "children": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "_id": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "application": {
            "type": "string"
          },
          "icon_url": {
            "type": "string"
          },
          "_custom_json": {
            "type": "object",
            "additionalProperties": true
          },
          "__v": {
            "type": "number"
          }
        }
      },
      "ChildrenSchema": {
        "additionalProperties": true,
        "type": "object",
        "properties": {
          "question": {
            "type": "string"
          },
          "answer": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "application": {
            "type": "string"
          },
          "_id": {
            "type": "string"
          }
        }
      },
      "FAQCategorySchema": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "index": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildrenSchema"
            }
          },
          "_id": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "application": {
            "type": "string"
          },
          "icon_url": {
            "type": "string"
          },
          "_custom_json": {
            "type": "object",
            "additionalProperties": true
          },
          "__v": {
            "type": "number"
          }
        }
      },
      "FaqSchema": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string"
          },
          "application": {
            "type": "string"
          },
          "_id": {
            "type": "string"
          },
          "question": {
            "type": "string"
          },
          "answer": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "__v": {
            "type": "number"
          }
        }
      },
      "GetFaqSchema": {
        "type": "object",
        "properties": {
          "faqs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FaqSchema"
            }
          }
        }
      },
      "GetFaqCategoriesSchema": {
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategorySchema"
            }
          }
        }
      },
      "GetFaqCategoryBySlugSchema": {
        "type": "object",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/FAQCategorySchema"
          }
        }
      },
      "LandingPageSchema": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          },
          "platform": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "created_by": {
            "$ref": "#/components/schemas/CreatedBySchema"
          },
          "date_meta": {
            "$ref": "#/components/schemas/DateMeta"
          },
          "_id": {
            "type": "string"
          },
          "application": {
            "type": "string"
          },
          "archived": {
            "type": "boolean"
          },
          "_custom_json": {
            "type": "object",
            "additionalProperties": true
          },
          "__v": {
            "type": "number"
          }
        }
      },
      "NavigationGetResponseSchema": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NavigationSchema"
            }
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          }
        }
      },
      "Orientation": {
        "type": "object",
        "properties": {
          "portrait": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "landscape": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "NavigationSchema": {
        "additionalProperties": true,
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "application": {
            "type": "string"
          },
          "archived": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "platform": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "created_by": {
            "$ref": "#/components/schemas/CreatedBySchema"
          },
          "date_meta": {
            "$ref": "#/components/schemas/DateMeta"
          },
          "orientation": {
            "$ref": "#/components/schemas/Orientation"
          },
          "version": {
            "type": "number"
          },
          "navigation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NavigationReference"
            }
          },
          "__v": {
            "type": "number"
          }
        }
      },
      "PageGetResponseSchema": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PageSchema"
            }
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          }
        }
      },
      "PageSchema": {
        "additionalProperties": true,
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "application": {
            "type": "string"
          },
          "component_ids": {
            "description": "Components can be used to store multiple components",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "content": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "content_path": {
            "type": "string"
          },
          "created_by": {
            "$ref": "#/components/schemas/CreatedBySchema"
          },
          "date_meta": {
            "$ref": "#/components/schemas/DateMeta"
          },
          "description": {
            "type": "string"
          },
          "feature_image": {
            "$ref": "#/components/schemas/Asset"
          },
          "page_meta": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "_schedule": {
            "$ref": "#/components/schemas/ScheduleSchema"
          },
          "_custom_json": {
            "type": "object",
            "additionalProperties": true
          },
          "orientation": {
            "type": "string"
          },
          "platform": {
            "type": "string"
          },
          "published": {
            "type": "boolean"
          },
          "slug": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "seo": {
            "$ref": "#/components/schemas/SEO"
          },
          "visibility": {
            "type": "object",
            "additionalProperties": true
          },
          "archived": {
            "type": "boolean"
          },
          "__v": {
            "type": "number"
          },
          "sanitized_content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SanitizedContent"
            }
          }
        }
      },
      "SanitizedContent": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "CreatedBySchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "Support": {
        "type": "object",
        "properties": {
          "created": {
            "type": "boolean"
          },
          "_id": {
            "type": "string"
          },
          "application": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "contact": {
            "$ref": "#/components/schemas/ContactSchema"
          }
        }
      },
      "PhoneProperties": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "phone_type": {
            "type": "string",
            "enum": [
              "phone_number",
              "tollfree"
            ]
          }
        }
      },
      "PhoneSchema": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "phone": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneProperties"
            }
          }
        }
      },
      "EmailProperties": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "EmailSchema": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "email": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmailProperties"
            }
          }
        }
      },
      "ContactSchema": {
        "type": "object",
        "properties": {
          "phone": {
            "$ref": "#/components/schemas/PhoneSchema"
          },
          "email": {
            "$ref": "#/components/schemas/EmailSchema"
          }
        }
      },
      "TagsSchema": {
        "type": "object",
        "properties": {
          "application": {
            "type": "string"
          },
          "_id": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagSchema"
            }
          },
          "__v": {
            "type": "number"
          }
        }
      },
      "TagSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "js",
              "css"
            ]
          },
          "sub_type": {
            "type": "string",
            "enum": [
              "external",
              "inline"
            ]
          },
          "_id": {
            "type": "string"
          },
          "position": {
            "type": "string",
            "enum": [
              "head",
              "body-top",
              "body-bottom"
            ]
          },
          "attributes": {
            "type": "object",
            "description": "Attributes related to tag",
            "additionalProperties": true
          },
          "content": {
            "type": "string"
          },
          "compatible_engines": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "pages": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "__source": {
            "$ref": "#/components/schemas/TagSourceSchema"
          }
        }
      },
      "TagSourceSchema": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "WellKnownResponseSchema": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Unique identifier for the well-known URL configuration"
          },
          "slug": {
            "type": "string",
            "description": "The path/identifier of the well-known URL"
          },
          "application_id": {
            "type": "string",
            "description": "The ID of the application this well-known URL belongs to"
          },
          "content": {
            "type": "string",
            "description": "The content being served at the well-known URL"
          },
          "content_type": {
            "type": "string",
            "description": "The MIME type of the content",
            "x-not-enum": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the well-known URL was created"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the well-known URL was last updated"
          }
        }
      },
      "CustomObjectListItemDefinationSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of an entry."
          },
          "name": {
            "type": "string",
            "description": "Name of definition of custom field."
          },
          "type": {
            "type": "string",
            "description": "Data type of the custom field."
          }
        },
        "description": "Data containing details of custom field definition."
      },
      "CustomObjectFieldSchema": {
        "additionalProperties": true,
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Unique identifier of an entry."
          },
          "slug": {
            "type": "string",
            "description": "Slug of custom field inside custom object."
          },
          "type": {
            "type": "string",
            "description": "Data type of custom field inside custom object."
          },
          "definition_id": {
            "type": "string",
            "description": "Definition id of custom field inside custom object."
          }
        },
        "description": "Data containing details of custom fields inside custom object."
      },
      "CustomObjectByIdSchema": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of an entry."
          },
          "status": {
            "type": "string",
            "description": "String denoting whether custom object is active or inactive."
          },
          "display_name": {
            "type": "string",
            "description": "Unique Display name of a custom object which is system generated: Concatenation of string definition name and _id."
          },
          "definition": {
            "$ref": "#/components/schemas/CustomObjectListItemDefinationSchema"
          },
          "references": {
            "type": "array",
            "items": {},
            "description": "List of custom fields ids where the custom object is added as a field."
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomObjectFieldSchema"
            },
            "description": "List of custom fields against a Custom Object."
          }
        },
        "description": "Object containing custom object along with it's custom fields."
      },
      "CustomFieldSchema": {
        "additionalProperties": true,
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Unique identifier of an entry."
          },
          "namespace": {
            "type": "string",
            "description": "Namespace under which custom field is present."
          },
          "slug": {
            "type": "string",
            "description": "Unique identifier for a custom field in a given namespace."
          },
          "resource": {
            "type": "string",
            "description": "Type of an entity under which custom field is defined."
          },
          "resource_id": {
            "type": "string",
            "description": "Unique identifier for the entity under which custom field is defined."
          },
          "type": {
            "type": "string",
            "description": "The type type of custom field."
          },
          "multi_value": {
            "type": "boolean",
            "description": "Whether custom field can have multiple values or not."
          },
          "company_id": {
            "type": "string",
            "format": "integer",
            "description": "Unique Identifier for a company."
          },
          "application_id": {
            "type": "string",
            "description": "Application ID - Identifier for a Sales channel."
          },
          "definition_id": {
            "type": "string",
            "description": "Unique identifier for a custom field definition."
          },
          "has_invalid_values": {
            "type": "boolean",
            "description": "Whether the custom field has invalid values."
          },
          "invalid_value_errors": {
            "type": "array",
            "items": {},
            "description": "Array denoting if there's a validation failure on a custom field inside a custom object."
          },
          "is_deleted": {
            "type": "boolean",
            "description": "Whether the custom field definition is deleted."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp which represent the time when data was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp which represent when was the last time when data was updated."
          }
        },
        "description": "Object containing details of custom field."
      },
      "CustomFieldsResponseByResourceIdSchema": {
        "type": "object",
        "description": "Object containing a list of custom fields against a resource.",
        "properties": {
          "items": {
            "type": "array",
            "description": "List of custom fields against a resource.",
            "items": {
              "$ref": "#/components/schemas/CustomFieldSchema"
            }
          }
        }
      },
      "ActionPage": {
        "type": "object",
        "description": "Represents the page details used for rendering.",
        "required": [
          "type"
        ],
        "properties": {
          "params": {
            "type": "object",
            "description": "Parameters that should be considered in path.",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "A string parameter for the action."
              }
            }
          },
          "query": {
            "type": "object",
            "description": "Query parameter if any to be added to the action.",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "A string query parameter for the action."
              }
            }
          },
          "url": {
            "type": "string",
            "description": "The URL for the action."
          },
          "type": {
            "$ref": "#/components/schemas/PageType"
          }
        }
      },
      "PageType": {
        "type": "string",
        "description": "The type of action such as product, products, category, brand.",
        "enum": [
          "about-us",
          "addresses",
          "blog",
          "brands",
          "cards",
          "cart",
          "categories",
          "brand",
          "category",
          "collection",
          "collections",
          "custom",
          "contact-us",
          "external",
          "faq",
          "freshchat",
          "home",
          "notification-settings",
          "orders",
          "page",
          "policy",
          "product",
          "product-request",
          "products",
          "profile",
          "profile-order-shipment",
          "profile-basic",
          "profile-company",
          "profile-emails",
          "profile-phones",
          "rate-us",
          "refer-earn",
          "settings",
          "shared-cart",
          "tnc",
          "track-order",
          "wishlist",
          "sections",
          "form",
          "cart-delivery",
          "cart-payment",
          "cart-review",
          "login",
          "register",
          "shipping-policy",
          "return-policy",
          "order-status",
          "locate-us"
        ]
      },
      "CDN": {
        "type": "object",
        "description": "Schema representing a Content Delivery Network (CDN) URL for accessing a file.",
        "required": [
          "url",
          "absolute_url",
          "relative_url"
        ],
        "properties": {
          "url": {
            "type": "string",
            "description": "The CDN URL for accessing the file."
          },
          "absolute_url": {
            "type": "string",
            "description": "The absolute URL of the file."
          },
          "relative_url": {
            "type": "string",
            "description": "The relative URL of the file."
          }
        },
        "example": {
          "url": "https://xxx.xxx.xxx/products/pictures/free/original/qwertyuiop-shirt.png",
          "absolute_url": "https://xxx.xxx.xxx/products/pictures/free/original/qwertyuiop-shirt.png",
          "relative_url": "x5/products/pictures/free/original/qwertyuiop-shirt.png"
        }
      },
      "Upload": {
        "type": "object",
        "description": "Schema representing an file upload signed URL.",
        "required": [
          "expiry",
          "url"
        ],
        "properties": {
          "expiry": {
            "type": "integer",
            "description": "The expiration time for the signed URL."
          },
          "url": {
            "type": "string",
            "description": "The signed URL for uploading the file."
          }
        },
        "example": {
          "expiry": 5000,
          "url": "https://xxx.xxx.xxx/products/pictures/free/original/qwertyuiop-shirt.png?AWSAccessKeyId=xxx&Content-Type=image%2Fpng&Expires=5000&Signature=xxx&x-amz-acl=public-read"
        }
      },
      "FileUpload": {
        "type": "object",
        "description": "Schema provides detailed information about the file storage path, content type, associated metadata, and CDN details.",
        "required": [
          "file_name",
          "file_path",
          "content_type",
          "namespace",
          "operation",
          "size",
          "upload"
        ],
        "properties": {
          "file_name": {
            "type": "string",
            "description": "The name of the file that was uploaded."
          },
          "file_path": {
            "type": "string",
            "description": "The path to the file in the storage location."
          },
          "content_type": {
            "type": "string",
            "x-not-enum": true,
            "description": "The content type of the file."
          },
          "method": {
            "type": "string",
            "description": "The HTTP method to be used for uploading the file."
          },
          "namespace": {
            "type": "string",
            "description": "The namespace associated with the file."
          },
          "operation": {
            "type": "string",
            "description": "The operation to be performed on the storage service."
          },
          "size": {
            "type": "integer",
            "description": "The size of the file in bytes."
          },
          "upload": {
            "$ref": "#/components/schemas/Upload"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags associated with the file."
          }
        },
        "example": {
          "file_name": "shirt.png",
          "file_path": "/path/qwertyuiop-shirt.png",
          "content_type": "image/png",
          "method": "PUT",
          "namespace": "products-item-images",
          "operation": "putObject",
          "tags": [
            "clothing",
            "shirt"
          ],
          "size": 9999,
          "cdn": {
            "url": "https://xxx.xxx.xxx/products/pictures/free/original/qwertyuiop-shirt.png",
            "absolute_url": "https://xxx.xxx.xxx/products/pictures/free/original/qwertyuiop-shirt.png",
            "relative_url": "products/pictures/free/original/qwertyuiop-shirt.png"
          },
          "upload": {
            "expiry": 5000,
            "url": "https://xxx.xxx.xxx/products/pictures/free/original/qwertyuiop-shirt.png?AWSAccessKeyId=xxx&Content-Type=image%2Fpng&Expires=5000&Signature=xxx&x-amz-acl=public-read"
          }
        }
      },
      "FileUploadStart": {
        "type": "object",
        "description": "Schema represents the details of the user responsible for uploading the file.",
        "required": [
          "file_name",
          "content_type",
          "size"
        ],
        "properties": {
          "file_name": {
            "type": "string",
            "description": "The name of the file to be uploaded."
          },
          "content_type": {
            "type": "string",
            "x-not-enum": true,
            "description": "The name of the file to be uploaded."
          },
          "size": {
            "type": "integer",
            "description": "The size of the file in bytes."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags associated with the file."
          },
          "params": {
            "$ref": "#/components/schemas/Params"
          }
        }
      },
      "CreatedBy": {
        "type": "object",
        "description": "Schema represents the details of the user responsible for uploading the file.",
        "properties": {
          "user_id": {
            "type": "string",
            "description": "The unique id of the user who created the file."
          },
          "username": {
            "type": "string",
            "description": "The username of the user who created the file."
          }
        }
      },
      "FileUploadComplete": {
        "type": "object",
        "description": "A comprehensive schema detailing the outcome of a file upload operation, including file metadata, storage details, and the status of the upload.",
        "required": [
          "_id",
          "file_name",
          "file_path",
          "content_type",
          "namespace",
          "operation",
          "size",
          "upload",
          "cdn",
          "success",
          "created_on",
          "modified_on"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "The unique identifier of the uploaded file."
          },
          "file_name": {
            "type": "string",
            "description": "The name of the file that was uploaded."
          },
          "file_path": {
            "type": "string",
            "description": "The path to the file in the storage location."
          },
          "content_type": {
            "type": "string",
            "x-not-enum": true,
            "description": "The content type of the file."
          },
          "namespace": {
            "type": "string",
            "description": "The namespace associated with the file."
          },
          "operation": {
            "type": "string",
            "description": "The operation performed on the storage service."
          },
          "size": {
            "type": "integer",
            "description": "The size of the file in bytes."
          },
          "upload": {
            "$ref": "#/components/schemas/Upload"
          },
          "cdn": {
            "$ref": "#/components/schemas/CDN"
          },
          "success": {
            "type": "boolean",
            "description": "The success status of the upload operation."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags associated with the file."
          },
          "created_on": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp when the file was created."
          },
          "modified_on": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp when the file was last modified."
          },
          "created_by": {
            "$ref": "#/components/schemas/CreatedBy"
          }
        },
        "example": {
          "_id": "xxxxxxxxxxxxxxxxxxxxxx",
          "success": true,
          "file_name": "shirt.png",
          "file_path": "/path/qwertyuiop-shirt.png",
          "content_type": "image/png",
          "method": "PUT",
          "namespace": "products-item-images",
          "operation": "putObject",
          "size": 9999,
          "cdn": {
            "url": "https://xxx.xxx.xxx/products/pictures/free/original/qwertyuiop-shirt.png",
            "absolute_url": "https://xxx.xxx.xxx/products/pictures/free/original/qwertyuiop-shirt.png",
            "relative_url": "products/pictures/free/original/qwertyuiop-shirt.png"
          },
          "upload": {
            "expiry": 5000,
            "url": "https://xxx.xxx.xxx/products/pictures/free/original/qwertyuiop-shirt.png?AWSAccessKeyId=xxx&Content-Type=image%2Fpng&Expires=5000&Signature=xxx&x-amz-acl=public-read"
          },
          "created_on": "2020-02-03T09:50:04.240Z",
          "modified_on": "2020-02-03T09:50:04.240Z"
        }
      },
      "Urls": {
        "type": "object",
        "description": "A schema defining the structure for URLs related to file access, including both the original and signed URLs along with their expiry details.",
        "required": [
          "url",
          "signed_url",
          "expiry"
        ],
        "properties": {
          "url": {
            "type": "string",
            "description": "This is the original asset URL provided in the request. This is the URL for which a signed URL has been generated."
          },
          "signed_url": {
            "type": "string",
            "description": "Generated signed URL."
          },
          "expiry": {
            "type": "integer",
            "description": "The expiration time for the signed URL."
          }
        },
        "example": {
          "url": "https://some-domain.com/image.png",
          "signed_url": "https://some-domain.com/image.png?AWSAccessKeyId=xxx&Expires=16134069&Signature=xxxx",
          "expiry": 5000
        }
      },
      "SignUrlResult": {
        "type": "object",
        "description": "Schema encapsulates the signed URLs generated for secure file access.",
        "required": [
          "urls"
        ],
        "properties": {
          "urls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Urls"
            },
            "description": "Signed URL object."
          }
        }
      },
      "SignUrl": {
        "type": "object",
        "description": "A request schema for generating signed URLs.",
        "required": [
          "expiry",
          "urls"
        ],
        "properties": {
          "expiry": {
            "type": "integer",
            "description": "The expiration time for the signed URL."
          },
          "urls": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of asset URLs to be signed."
          }
        },
        "example": {
          "expiry": 5000,
          "urls": [
            "https://some-domain.com/image.png"
          ]
        }
      },
      "CustomerCreditBalanceRequestSchema": {
        "type": "object",
        "description": "Schema for get customer's credit balance API request.",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CustomerCreditBalanceReqData"
          }
        }
      },
      "CustomerCreditBalanceReqData": {
        "type": "object",
        "description": "Data dictionary of schema for get customer's credit balance API request. Any of phone_number or email is required.",
        "properties": {
          "seller_id": {
            "type": "integer",
            "description": "Unique identifier for the seller requesting the credit balance.",
            "example": 61
          },
          "affiliate_id": {
            "type": "string",
            "description": "The unique identifier of sale channels or application as affiliate_id associated with the seller.",
            "example": "5eafc9121cfbb666d7959353"
          },
          "customer_mobile_number": {
            "type": "string",
            "description": "Mobile number of the customer whose credit balance is being requested.",
            "example": "7066772322"
          },
          "customer_email": {
            "type": "string",
            "description": "Email of the customer whose credit balance is being requested.",
            "example": "test@example.com"
          }
        },
        "required": [
          "seller_id",
          "affiliate_id"
        ],
        "oneOf": [
          {
            "required": [
              "customer_mobile_number"
            ]
          },
          {
            "required": [
              "customer_email"
            ]
          }
        ]
      },
      "CustomerCreditBalanceResponseSchema": {
        "type": "object",
        "description": "Schema for get customer's credit balance API response",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the credit note balance request was successful.",
            "example": true
          },
          "data": {
            "$ref": "#/components/schemas/CustomerCreditBalanceResData"
          }
        }
      },
      "CustomerCreditBalanceResData": {
        "type": "object",
        "description": "Data dictionary of get customer's credit balance API response.",
        "properties": {
          "customer_mobile_number": {
            "type": "string",
            "description": "Mobile number of the customer whose credit balance information is being returned.",
            "example": "7066772322"
          },
          "customer_email": {
            "type": "string",
            "description": "Email of the customer whose credit balance information is being returned.",
            "example": "test@example.com"
          },
          "total_credited_balance": {
            "type": "number",
            "description": "Total amount of credit available to the customer.",
            "example": 100
          },
          "total_locked_amount": {
            "type": "number",
            "description": "Total amount of credit balance that is currently locked and unavailable for use.",
            "example": 50
          },
          "allowed_redemption_amount": {
            "type": "number",
            "description": "Total amount of credit balance that the customer is allowed to redeem.",
            "example": 50
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer"
          },
          "exception": {
            "type": "string"
          },
          "info": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ErrorMeta": {
        "type": "object",
        "properties": {
          "columns_errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorMetaItems"
            },
            "description": "A list of errors related to specific columns."
          }
        }
      },
      "ErrorMetaItems": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "nullable": true,
            "description": "The error code for the specific column error."
          },
          "message": {
            "type": "string",
            "nullable": true,
            "description": "The error message for the specific column error."
          }
        }
      },
      "LockUnlockRequestData": {
        "type": "object",
        "description": "Data schema for lock/unlock credit note API request",
        "required": [
          "seller_id",
          "affiliate_id",
          "ordering_channel",
          "credit_note_number",
          "amount",
          "request_type",
          "order_id"
        ],
        "properties": {
          "seller_id": {
            "type": "integer",
            "description": "The unique identifier for the seller.",
            "example": 61
          },
          "affiliate_id": {
            "type": "string",
            "description": "The unique identifier of sale channels or application as affiliate_id associated with the seller.",
            "example": "659e3f40d32203a746b28a68"
          },
          "ordering_channel": {
            "type": "string",
            "enum": [
              "platform-pos",
              "ecomm"
            ],
            "description": "The channel through which the order was placed.",
            "example": "platform-pos"
          },
          "credit_note_number": {
            "type": "string",
            "description": "A unique identifier for the credit note.",
            "example": "test_cn_1"
          },
          "amount": {
            "type": "number",
            "description": "The total amount of credit originally available in the note.",
            "example": 100
          },
          "request_type": {
            "type": "string",
            "enum": [
              "lock",
              "unlock",
              "utilised"
            ],
            "description": "Type of request for which api is called. Either to lock credit note or unlock.",
            "example": "lock"
          },
          "order_id": {
            "type": "string",
            "description": "A unique identifier of the order against which credit note is generated.",
            "example": "FY324FDSCV"
          }
        }
      },
      "LockUnlockRequestSchema": {
        "type": "object",
        "description": "Schema for lock/unlock credit note API request",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/LockUnlockRequestData"
          }
        }
      },
      "LockUnlockResponseData": {
        "type": "object",
        "description": "Data schema for lock/unlock credit note API response",
        "properties": {
          "credit_note_number": {
            "type": "string",
            "description": "A unique identifier for the credit note.",
            "example": "test_cn_1"
          },
          "amount": {
            "type": "number",
            "description": "The total amount of credit originally available in the note.",
            "example": 100
          }
        }
      },
      "LockUnlockResponseSchema": {
        "type": "object",
        "description": "Schema for lock/unlock credit note API response",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the credit note lock/unlock request was successful.",
            "example": true
          },
          "data": {
            "$ref": "#/components/schemas/LockUnlockResponseData"
          }
        }
      },
      "TicketHistoryPayload": {
        "required": [
          "value",
          "type"
        ],
        "properties": {
          "value": {
            "type": "object",
            "description": "Details of history event",
            "additionalProperties": true
          },
          "type": {
            "type": "string",
            "enum": [
              "rating",
              "log",
              "comment",
              "diff",
              "thread"
            ],
            "x-not-enum": true
          }
        }
      },
      "CustomFormSubmissionPayload": {
        "required": [
          "response"
        ],
        "properties": {
          "response": {
            "type": "array",
            "description": "Form response",
            "items": {
              "type": "object"
            }
          },
          "attachments": {
            "type": "array",
            "description": "List of all attachments related to the form",
            "items": {
              "$ref": "#/components/schemas/TicketAsset"
            }
          }
        }
      },
      "SubmitCustomFormResponseSchema": {
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "type": "string",
            "description": "Success message for form submission"
          },
          "ticket": {
            "$ref": "#/components/schemas/Ticket"
          },
          "notified_to": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "response": {
            "$ref": "#/components/schemas/FormResponseSchema"
          }
        }
      },
      "FormResponseSchema": {
        "additionalProperties": true,
        "type": "object",
        "properties": {
          "application_id": {
            "type": "string"
          },
          "form_slug": {
            "type": "string"
          },
          "response": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "created_by": {
            "type": "string"
          },
          "created_on": {
            "$ref": "#/components/schemas/CreatedOn"
          },
          "_id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "__v": {
            "type": "number"
          }
        }
      },
      "TicketContext": {
        "required": [
          "company_id"
        ],
        "description": "Details of company and application realated to the ticket",
        "properties": {
          "application_id": {
            "type": "string",
            "description": "Application ID related to the ticket"
          },
          "company_id": {
            "type": "string",
            "description": "Company ID related to the ticket"
          }
        }
      },
      "CreatedOn": {
        "required": [
          "user_agent"
        ],
        "additionalProperties": true,
        "description": "Time of creation of the history event",
        "properties": {
          "user_agent": {
            "type": "string",
            "description": "Useragent details"
          },
          "platform": {
            "type": "string"
          }
        }
      },
      "TicketAsset": {
        "required": [
          "value",
          "type"
        ],
        "properties": {
          "display": {
            "type": "string",
            "description": "Display text for asset"
          },
          "value": {
            "type": "string",
            "description": "To be used for details"
          },
          "type": {
            "$ref": "#/components/schemas/TicketAssetTypeEnum"
          }
        }
      },
      "TicketAssetTypeEnum": {
        "description": "Type of asset",
        "type": "string",
        "enum": [
          "image",
          "video",
          "file",
          "youtube",
          "product",
          "collection",
          "brand",
          "shipment",
          "order"
        ]
      },
      "TicketContent": {
        "description": "Content for the ticket",
        "required": [
          "title"
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "Title for ticket"
          },
          "description": {
            "type": "string",
            "format": "base64",
            "description": "Long description of issue"
          },
          "attachments": {
            "type": "array",
            "description": "List of all attachments related to the ticket",
            "items": {
              "$ref": "#/components/schemas/TicketAsset"
            }
          }
        }
      },
      "AddTicketPayload": {
        "required": [
          "category",
          "content"
        ],
        "properties": {
          "created_by": {
            "type": "object",
            "description": "Creator of the ticket",
            "additionalProperties": true
          },
          "status": {
            "type": "string",
            "description": "Status of the ticket"
          },
          "priority": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "description": "Category of the ticket",
            "x-not-enum": true
          },
          "content": {
            "$ref": "#/components/schemas/TicketContent"
          },
          "_custom_json": {
            "type": "object",
            "description": "optional custom data that needs to be sent",
            "additionalProperties": true
          },
          "subscribers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Priority": {
        "required": [
          "key",
          "display",
          "color"
        ],
        "description": "Denotes the priority of ticket",
        "properties": {
          "key": {
            "type": "string",
            "description": "Priority value of the ticket like urgent, low, medium, high.",
            "enum": [
              "urgent",
              "low",
              "medium",
              "high"
            ]
          },
          "display": {
            "type": "string",
            "description": "Display text for priority"
          },
          "color": {
            "type": "string",
            "description": "Color for priority"
          }
        }
      },
      "Status": {
        "required": [
          "key",
          "display",
          "color"
        ],
        "description": "Denotes in what state is the ticket",
        "properties": {
          "key": {
            "type": "string",
            "description": "Key for status"
          },
          "display": {
            "type": "string",
            "description": "Display text for status"
          },
          "color": {
            "type": "string",
            "description": "Color for status"
          }
        }
      },
      "SubmitButton": {
        "description": "Details for submit button",
        "required": [
          "title",
          "title_color",
          "background_color"
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "Title for submit button"
          },
          "title_color": {
            "type": "string",
            "description": "Title color submit button"
          },
          "background_color": {
            "type": "string",
            "description": "Color for submit button"
          }
        }
      },
      "PollForAssignment": {
        "description": "Describes how polling will be done for the created tickets",
        "required": [
          "duration",
          "message",
          "success_message",
          "failure_message"
        ],
        "properties": {
          "duration": {
            "type": "number",
            "description": "Duration for polling of staff"
          },
          "message": {
            "type": "string",
            "description": "Message for polling"
          },
          "success_message": {
            "type": "string",
            "description": "Message for successful polling"
          },
          "failure_message": {
            "type": "string",
            "description": "Message if polling failed"
          }
        }
      },
      "CustomForm": {
        "additionalProperties": true,
        "required": [
          "application_id",
          "slug",
          "title",
          "login_required",
          "should_notify",
          "_id",
          "inputs"
        ],
        "properties": {
          "application_id": {
            "type": "string",
            "description": "Application ID for form"
          },
          "slug": {
            "type": "string",
            "description": "Slug for the form, which is to be used for accessing the form"
          },
          "header_image": {
            "type": "string",
            "description": "Form header image that will be shown to the user"
          },
          "title": {
            "type": "string",
            "description": "Form title that will be shown to the user"
          },
          "description": {
            "type": "string",
            "description": "Form description that will be shown to the user"
          },
          "login_required": {
            "type": "boolean",
            "default": false,
            "description": "Denotes if login is required to make a form response submission"
          },
          "should_notify": {
            "type": "boolean",
            "default": false,
            "description": "Denotes if new response submission for the form should be notified to the assignees"
          },
          "success_message": {
            "type": "string",
            "description": "Message that is to be shown on succesfull form response submission"
          },
          "submit_button": {
            "$ref": "#/components/schemas/SubmitButton"
          },
          "inputs": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "List of all the form fields"
          },
          "created_on": {
            "$ref": "#/components/schemas/CreatedOn"
          },
          "poll_for_assignment": {
            "$ref": "#/components/schemas/PollForAssignment"
          },
          "available_assignees": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "_id": {
            "type": "string",
            "description": "Unique identifier for the form"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "__v": {
            "type": "number"
          },
          "created_by": {
            "type": "string"
          }
        }
      },
      "FeedbackForm": {
        "description": "Support category array list details",
        "properties": {
          "inputs": {
            "type": "object",
            "description": "Input details for the feed back form",
            "additionalProperties": true
          },
          "title": {
            "type": "string",
            "description": "Title for the feed back form"
          },
          "timestamps": {
            "type": "object",
            "description": "Gives details of category releted data",
            "additionalProperties": true
          }
        }
      },
      "TicketCategory": {
        "description": "Category assigned to the ticket",
        "required": [
          "key",
          "display"
        ],
        "properties": {
          "display": {
            "type": "string",
            "description": "Category display value identifier"
          },
          "key": {
            "type": "string",
            "description": "Category key value identifier"
          },
          "sub_categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TicketCategory"
            }
          },
          "group_id": {
            "type": "number",
            "description": "Group id of category releted data"
          },
          "feedback_form": {
            "$ref": "#/components/schemas/FeedbackForm"
          }
        }
      },
      "TicketHistory": {
        "additionalProperties": true,
        "required": [
          "type",
          "value",
          "ticket_id",
          "_id"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of the history event",
            "x-not-enum": true
          },
          "value": {
            "type": "object",
            "additionalProperties": true,
            "description": "Data of the history event"
          },
          "ticket_id": {
            "type": "string",
            "description": "Readable ticket number"
          },
          "created_on": {
            "$ref": "#/components/schemas/CreatedOn"
          },
          "created_by": {
            "type": "string",
            "description": "User who created the history event"
          },
          "_id": {
            "type": "string",
            "description": "Unique identifier of the history event"
          },
          "updated_at": {
            "type": "string",
            "description": "Time of last update of the history event",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "description": "Time of creation of the history event",
            "format": "date-time"
          },
          "__v": {
            "type": "number"
          }
        }
      },
      "Ticket": {
        "additionalProperties": true,
        "required": [
          "category",
          "source",
          "status",
          "priority",
          "_id"
        ],
        "description": "Ticket created on form submission",
        "properties": {
          "context": {
            "$ref": "#/components/schemas/TicketContext"
          },
          "created_on": {
            "$ref": "#/components/schemas/CreatedOn"
          },
          "response_id": {
            "type": "string",
            "description": "Details of company and application realated to the ticket"
          },
          "content": {
            "$ref": "#/components/schemas/TicketContent"
          },
          "category": {
            "$ref": "#/components/schemas/TicketCategory"
          },
          "sub_category": {
            "type": "string",
            "description": "Sub-category assigned to the ticket",
            "x-not-enum": true
          },
          "source": {
            "$ref": "#/components/schemas/TicketSourceEnum"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "priority": {
            "$ref": "#/components/schemas/Priority"
          },
          "created_by": {
            "type": "object",
            "description": "User details of ticket creator",
            "additionalProperties": true
          },
          "assigned_to": {
            "type": "object",
            "description": "Details of support staff to whom ticket is assigned",
            "additionalProperties": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags relevant to ticket"
          },
          "_custom_json": {
            "type": "object",
            "description": "custom json relevant to the ticket",
            "additionalProperties": true
          },
          "is_feedback_pending": {
            "type": "boolean",
            "description": "Denotes if feedback submission is pending for the ticket"
          },
          "integration": {
            "type": "object",
            "description": "Integration type and its details of the ticket",
            "additionalProperties": true
          },
          "_id": {
            "type": "string",
            "description": "Unique identifier for the ticket"
          },
          "updated_at": {
            "type": "string",
            "description": "Time when the ticket was last updated",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "description": "Time when the ticket was created",
            "format": "date-time"
          },
          "video_room_id": {
            "type": "string"
          },
          "subscribers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "additional_info": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "__v": {
            "type": "number"
          },
          "attachments": {
            "type": "array",
            "description": "List of all attachments related to the form",
            "items": {
              "$ref": "#/components/schemas/TicketAsset"
            }
          }
        }
      },
      "TicketSourceEnum": {
        "description": "Denotes if the ticket was created at company or application level",
        "type": "string",
        "enum": [
          "platform_panel",
          "sales_channel"
        ]
      },
      "NotFoundError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "Error4XX": {
        "type": "object",
        "properties": {
          "message": {
            "type": "object",
            "additionalProperties": true
          },
          "stack": {
            "type": "string"
          },
          "sentry": {
            "type": "string"
          }
        }
      },
      "PackagingDimension": {
        "type": "object",
        "properties": {
          "length": {
            "type": "number",
            "description": "The length dimension of packaging."
          },
          "width": {
            "type": "number",
            "description": "The width dimension of packaging."
          },
          "height": {
            "type": "number",
            "description": "The height dimension of packaging."
          }
        },
        "required": [
          "length",
          "width",
          "height"
        ]
      },
      "ShipmentArticleMeta": {
        "type": "object",
        "properties": {
          "is_set": {
            "type": "boolean",
            "description": "A boolean indicating whether the article is a set."
          },
          "set": {
            "type": "object",
            "description": "An ArticleSet object describing the attributes of the set, if the article is a set.",
            "additionalProperties": true
          },
          "is_set_article": {
            "type": "boolean",
            "description": "A boolean indicating whether the article is included in the set."
          },
          "set_quantity": {
            "type": "integer",
            "description": "It represents the number of set of this article."
          },
          "split_article_id": {
            "type": "string",
            "description": "This key is used to identify the bundle products."
          },
          "promo_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of promo ids applied on this article."
          }
        }
      },
      "DeliveryTatSchema": {
        "type": "object",
        "properties": {
          "min": {
            "type": "integer",
            "description": "The minimum tat in integer."
          },
          "max": {
            "type": "integer",
            "description": "The maximum tat in integer."
          }
        }
      },
      "DeliveryTat": {
        "type": "object",
        "properties": {
          "tat": {
            "$ref": "#/components/schemas/DeliveryTatSchema"
          }
        }
      },
      "CourierPartnerPromiseData": {
        "type": "object",
        "properties": {
          "min": {
            "type": "string",
            "description": "The minimum promised delivery time in ISO 8601 format."
          },
          "max": {
            "type": "string",
            "description": "The maximum promised delivery time in ISO 8601 format."
          },
          "attributes": {
            "$ref": "#/components/schemas/DeliveryTat"
          }
        }
      },
      "PromiseMeta": {
        "properties": {
          "seller_promise": {
            "$ref": "#/components/schemas/PromiseData"
          },
          "courier_partner_promise": {
            "$ref": "#/components/schemas/CourierPartnerPromiseData"
          },
          "customer_initial_promise": {
            "$ref": "#/components/schemas/PromiseData"
          }
        }
      },
      "PromiseData": {
        "type": "object",
        "properties": {
          "min": {
            "type": "string",
            "description": "The minimum promised delivery time in ISO 8601 format."
          },
          "max": {
            "type": "string",
            "description": "The maximum promised delivery time in ISO 8601 format."
          }
        }
      },
      "CourierPartnersTat": {
        "type": "object",
        "properties": {
          "min": {
            "type": "integer",
            "description": "The minimum transit time."
          },
          "max": {
            "type": "integer",
            "description": "The maximum transit time."
          }
        },
        "required": [
          "min",
          "max"
        ]
      },
      "AreaCode": {
        "type": "object",
        "properties": {
          "source": {
            "type": "string",
            "description": "The starting area code."
          },
          "destination": {
            "type": "string",
            "description": "The ending area code."
          }
        }
      },
      "SetSize": {
        "type": "object",
        "properties": {
          "pieces": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100,
            "description": "The number of pieces in the set."
          },
          "size": {
            "type": "string",
            "description": "The size description of the set."
          }
        },
        "required": [
          "pieces",
          "size"
        ]
      },
      "ArticleSizeDistribution": {
        "type": "object",
        "properties": {
          "sizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SetSize"
            },
            "description": "A collection of different size options and their corresponding pieces."
          }
        },
        "required": [
          "sizes"
        ]
      },
      "SetSizeItem": {
        "type": "object",
        "properties": {
          "pieces": {
            "type": "integer"
          },
          "size": {
            "type": "string"
          }
        }
      },
      "SetSizeDistribution": {
        "type": "object",
        "properties": {
          "sizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SetSizeItem"
            }
          }
        }
      },
      "PromiseObject": {
        "type": "object",
        "properties": {
          "min": {
            "type": "string",
            "description": "The minimum promised delivery time in ISO 8601 format."
          },
          "max": {
            "type": "string",
            "description": "The maximum promised delivery time in ISO 8601 format."
          },
          "customer_promise": {
            "$ref": "#/components/schemas/PromiseData"
          },
          "meta": {
            "$ref": "#/components/schemas/PromiseMeta"
          }
        },
        "required": [
          "customer_promise",
          "meta"
        ]
      },
      "ShipmentCourierPartners": {
        "type": "object",
        "properties": {
          "extension_id": {
            "type": "string",
            "description": "The ID of the courier partner."
          },
          "scheme_id": {
            "type": "string",
            "description": "The scheme ID of the courier partner."
          },
          "area_code": {
            "$ref": "#/components/schemas/AreaCode"
          },
          "tat": {
            "$ref": "#/components/schemas/CourierPartnersTat"
          },
          "display_name": {
            "type": "string",
            "description": "The display name of the courier partner."
          },
          "is_qc_enabled": {
            "type": "boolean",
            "description": "A boolean indicating quality control by the courier partner."
          },
          "is_self_ship": {
            "type": "boolean",
            "description": "A boolean indicating it is self delivery DP support."
          },
          "is_own_account": {
            "type": "boolean",
            "description": "A boolean indicating if courier partner is self managed."
          },
          "forward_pickup_cutoff": {
            "type": "string",
            "description": "Forward Pickup Cutoff time.",
            "nullable": true
          },
          "reverse_pickup_cutoff": {
            "type": "string",
            "description": "Reverse Pickup Cutoff time.",
            "nullable": true
          },
          "ndr_attempts": {
            "type": "integer",
            "description": "NDR Attempts.",
            "nullable": true
          },
          "weight": {
            "type": "integer",
            "nullable": true
          },
          "volumetric_weight": {
            "type": "integer",
            "nullable": true
          },
          "transport_type": {
            "type": "string",
            "nullable": true,
            "x-not-enum": true
          }
        },
        "required": [
          "extension_id",
          "scheme_id",
          "area_code",
          "tat",
          "display_name",
          "is_qc_enabled",
          "is_self_ship",
          "is_own_account"
        ]
      },
      "ShipmentsArticles": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the shipment article."
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity of the shipment article."
          },
          "item_id": {
            "type": "integer",
            "description": "The Item ID of the article."
          },
          "size": {
            "type": "string",
            "description": "The size of the article."
          },
          "is_set": {
            "type": "boolean",
            "description": "A boolean indicating whether the article is a set."
          },
          "set": {
            "$ref": "#/components/schemas/ArticleSet"
          },
          "sla": {
            "type": "string",
            "description": "SLA in UTC format of article."
          },
          "meta": {
            "$ref": "#/components/schemas/ShipmentArticleMeta"
          },
          "department_id": {
            "type": "integer",
            "description": "DepartmentId of the product."
          },
          "category_id": {
            "type": "integer",
            "description": "CategoryId of the product."
          },
          "brand_id": {
            "type": "integer",
            "description": "BrandId of the product."
          },
          "group_id": {
            "type": "string",
            "description": "GroupId of the shipment."
          },
          "group_info": {
            "type": "object",
            "description": "group information of the article",
            "default": {},
            "additionalProperties": true
          },
          "group_info_ids": {
            "type": "object",
            "description": "group information of the article",
            "default": {},
            "additionalProperties": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags of the product."
          }
        },
        "required": [
          "id",
          "quantity",
          "item_id",
          "size",
          "sla"
        ]
      },
      "ArticleReturnReason": {
        "type": "object",
        "properties": {
          "qc_type": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "doorstep_qc",
                "pre_qc"
              ]
            },
            "description": "List of string having return reason values."
          }
        }
      },
      "ArticleDeliverySlots": {
        "type": "object",
        "properties": {
          "delivery_date": {
            "type": "string",
            "format": "date-time",
            "description": "The delivery date for the article."
          },
          "min_slot": {
            "type": "string",
            "description": "The minimum delivery time slot."
          },
          "max_slot": {
            "type": "string",
            "description": "The maximum delivery time slot.",
            "x-not-enum": true
          }
        }
      },
      "ArticleSet": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the article set."
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity of the article set."
          },
          "size_distribution": {
            "$ref": "#/components/schemas/ArticleSizeDistribution"
          }
        }
      },
      "ArticleDimension": {
        "type": "object",
        "properties": {
          "height": {
            "type": "number",
            "description": "The height of the article."
          },
          "is_default": {
            "type": "boolean",
            "description": "A boolean indicating whether this dimension is the default dimension."
          },
          "length": {
            "type": "number",
            "description": "The length of the article."
          },
          "unit": {
            "type": "string",
            "description": "The unit of measurement used for the dimensions."
          },
          "width": {
            "type": "number",
            "description": "The width of the article."
          }
        },
        "required": [
          "height",
          "length",
          "is_default",
          "unit",
          "width"
        ]
      },
      "ArticleAttributes": {
        "type": "object",
        "properties": {
          "battery_operated": {
            "type": "string",
            "description": "Yes/no indicating whether the article is powered by batteries."
          },
          "is_flammable": {
            "type": "string",
            "description": "Yes/no indicating whether the article is considered flammable or poses a fire hazard."
          }
        },
        "required": [
          "battery_operated",
          "is_flammable"
        ]
      },
      "ArticleWeight": {
        "type": "object",
        "properties": {
          "shipping": {
            "type": "integer",
            "description": "The weight of the article for shipping purposes, typically measured in a specified unit."
          },
          "unit": {
            "type": "string",
            "description": "The unit of measurement used for the weight value (e.g., kilogram, pounds)."
          },
          "is_default": {
            "type": "boolean",
            "description": "A boolean indicating whether this weight is the default weight for the article."
          }
        },
        "required": [
          "shipping",
          "unit",
          "is_default"
        ]
      },
      "ServiceabilityLocation": {
        "type": "object",
        "properties": {
          "longitude": {
            "type": "string",
            "description": "The longitude of the serviceability location."
          },
          "latitude": {
            "type": "string",
            "description": "The latitude of the serviceability location."
          }
        },
        "required": [
          "longitude",
          "latitude"
        ]
      },
      "Shipments": {
        "type": "object",
        "description": "Shipment details Schema.",
        "properties": {
          "advance_payment_config": {
            "type": "object",
            "nullable": true,
            "additionalProperties": true
          },
          "multi_mop_payments": {
            "type": "object",
            "nullable": true,
            "additionalProperties": true
          },
          "multi_mop_payments_list": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "nullable": true
          },
          "is_validated": {
            "type": "boolean"
          },
          "refund_information": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencySchema"
          },
          "currency_info": {
            "$ref": "#/components/schemas/CurrencyInfo"
          },
          "coupon_details": {
            "type": "array",
            "description": "An array of coupon details applied to the shipment.",
            "items": {
              "$ref": "#/components/schemas/CouponDetails"
            }
          },
          "meta": {
            "type": "object",
            "nullable": true,
            "description": "Meta data of the shipment contains additional, potentially dynamic information about the shipment.",
            "additionalProperties": true
          },
          "payment": {
            "$ref": "#/components/schemas/ShipmentPayment"
          },
          "payment_info": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentInfo"
            },
            "description": "Array of objects containing payment methods used for placing an order.  Each object will provide information about corresponding payment method with relevant details."
          },
          "order_type": {
            "type": "string",
            "nullable": true,
            "description": "Defines the specific journey a shipment will follow based on the application's operational needs and customer preferences. This field categorizes orders into distinct types, each associated with a unique processing flow. For example:\n- \"HomeDelivery\": The order goes through all the steps needed for delivery, from being packed to arriving at the customer’s address.\n- \"PickAtStore\": The order is prepared for pickup at the store, skipping shipping steps to make it ready faster for the customer to collect in person.\n- \"Digital\": This order type likely refers to orders that involve digital goods or services, such as software, digital subscriptions, e-books, online courses, or any other item that can be delivered electronically.\n",
            "enum": [
              "HomeDelivery",
              "PickAtStore",
              "Digital",
              null
            ]
          },
          "gstin_code": {
            "type": "string",
            "description": "A GST Number (Goods and Services Tax Identification Number, often abbreviated as GSTIN) is a unique identifier assigned to a business or individual registered under the Goods and Services Tax (GST) system in countries like India. The GST number is essential for businesses to comply with tax regulations and for the government to track tax payments and returns.",
            "x-not-enum": true
          },
          "show_download_invoice": {
            "type": "boolean",
            "description": "Indicates if the download invoice option should be shown."
          },
          "can_cancel": {
            "type": "boolean",
            "description": "Indicates if the shipment can be canceled."
          },
          "user_info": {
            "$ref": "#/components/schemas/ShipmentUserInfo"
          },
          "shipment_id": {
            "type": "string",
            "description": "The unique identifier for the shipment."
          },
          "fulfilling_store": {
            "$ref": "#/components/schemas/FulfillingStore"
          },
          "custom_meta": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "An object containing custom metadata for the shipment."
          },
          "shipment_status": {
            "$ref": "#/components/schemas/ShipmentStatus"
          },
          "comment": {
            "type": "string",
            "description": "Any comments related to the shipment."
          },
          "invoice": {
            "$ref": "#/components/schemas/Invoice"
          },
          "show_track_link": {
            "type": "boolean",
            "description": "Indicates if the track link should be shown."
          },
          "refund_details": {
            "type": "object",
            "description": "An object containing details of any refunds.",
            "additionalProperties": true
          },
          "breakup_values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BreakupValues"
            },
            "description": "An array containing the breakup of various charges and discounts."
          },
          "can_break": {
            "type": "object",
            "description": "Indicates whether a shipment can be split or broken down at specific stages of the shipment lifecycle. Specifies whether breaking the shipment is allowed.",
            "additionalProperties": true
          },
          "traking_no": {
            "type": "string",
            "description": "The tracking number for the shipment."
          },
          "tracking_details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrackingDetails"
            },
            "additionalProperties": true,
            "description": "An array containing details of the tracking history of the shipment."
          },
          "promise": {
            "$ref": "#/components/schemas/Promise"
          },
          "total_bags": {
            "type": "integer",
            "description": "The total number of bags in the shipment."
          },
          "total_details": {
            "$ref": "#/components/schemas/ShipmentTotalDetails"
          },
          "prices": {
            "$ref": "#/components/schemas/Prices"
          },
          "returnable_date": {
            "type": "string",
            "nullable": true,
            "description": "The last date by which the item can be returned.",
            "format": "date-time"
          },
          "shipment_created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the shipment was created."
          },
          "shipment_created_ts": {
            "type": "string",
            "description": "The timestamp when the shipment was created."
          },
          "size_info": {
            "type": "object",
            "description": "An object containing size information for the items in the shipment.",
            "additionalProperties": true
          },
          "bags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bags"
            },
            "description": "An array containing details about the individual bags in the shipment."
          },
          "dp_name": {
            "type": "string",
            "description": "The name of the delivery partner."
          },
          "awb_no": {
            "type": "string",
            "description": "The airway bill number for the shipment."
          },
          "beneficiary_details": {
            "type": "boolean",
            "description": "Indicates if there are any beneficiary details."
          },
          "fulfilling_company": {
            "$ref": "#/components/schemas/FulfillingCompany"
          },
          "can_return": {
            "type": "boolean",
            "description": "Indicates if the shipment can be returned."
          },
          "delivery_address": {
            "$ref": "#/components/schemas/Address"
          },
          "billing_address": {
            "$ref": "#/components/schemas/Address"
          },
          "track_url": {
            "type": "string",
            "description": "The URL for tracking the shipment."
          },
          "order_id": {
            "type": "string",
            "description": "The unique identifier for the order."
          },
          "need_help_url": {
            "type": "string",
            "description": "The URL for customer support or help."
          },
          "return_meta": {
            "type": "object",
            "description": "An object containing metadata about the return process.",
            "additionalProperties": true
          },
          "delivery_date": {
            "type": "string",
            "nullable": true,
            "description": "The expected delivery date.",
            "format": "date-time"
          },
          "order": {
            "$ref": "#/components/schemas/OrderRequestSchema"
          },
          "can_pay_remaining_amount": {
            "type": "boolean"
          },
          "charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceAdjustmentCharge"
            }
          },
          "external_shipment_id": {
            "type": "string",
            "description": "Identifier of the shipment assigned by the application",
            "nullable": true
          },
          "previous_shipment_id": {
            "type": "string",
            "description": "ID of the shipment from which current shipment was created, this is populated whenever the shipment goes into negative state transition",
            "nullable": true
          },
          "is_refund_initiated": {
            "type": "boolean",
            "description": "Indicates whether refund is initiated for the shipment."
          }
        }
      },
      "LocationDetailsArticle": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the article."
          },
          "item_id": {
            "type": "integer",
            "description": "The Item ID of the article."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags assigned to Item."
          },
          "size": {
            "type": "string",
            "description": "The size of the article."
          },
          "group_id": {
            "type": "string",
            "description": "The group ID of the article."
          },
          "group_info": {
            "type": "object",
            "description": "group information of the article",
            "default": {},
            "additionalProperties": true
          },
          "group_info_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "group information of the ids of the article"
          },
          "weight": {
            "$ref": "#/components/schemas/ArticleWeight"
          },
          "attributes": {
            "$ref": "#/components/schemas/ArticleAttributes"
          },
          "category_id": {
            "type": "integer",
            "description": "The category ID of the article."
          },
          "department_id": {
            "type": "integer"
          },
          "dimension": {
            "$ref": "#/components/schemas/ArticleDimension"
          },
          "price": {
            "type": "number",
            "description": "Final Price of the article after discounts."
          },
          "brand_id": {
            "type": "integer",
            "description": "The brand ID of the article."
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity of the article."
          },
          "manufacturing_time": {
            "type": "integer",
            "description": "The manufacturing time of the article."
          },
          "manufacturing_time_unit": {
            "type": "string",
            "description": "The unit of measurement for manufacturing time."
          },
          "mto_quantity": {
            "type": "integer",
            "description": "The \"Made to Order\" quantity of the article."
          },
          "is_gift": {
            "type": "boolean",
            "description": "A boolean indicating whether the article is a gift."
          },
          "is_set": {
            "type": "boolean",
            "description": "A boolean indicating whether the article is a set."
          },
          "set": {
            "$ref": "#/components/schemas/ArticleSet"
          },
          "set_quantity": {
            "type": "integer",
            "description": "The quantity of the article set."
          },
          "delivery_slots": {
            "$ref": "#/components/schemas/ArticleDeliverySlots"
          },
          "return_reason": {
            "$ref": "#/components/schemas/ArticleReturnReason"
          }
        },
        "required": [
          "id",
          "quantity",
          "weight",
          "category_id",
          "dimension",
          "brand_id",
          "item_id",
          "size",
          "is_set",
          "is_gift",
          "department_id",
          "price",
          "tags",
          "delivery_slots"
        ]
      },
      "LocationDetailsServiceability": {
        "type": "object",
        "properties": {
          "pincode": {
            "type": "string",
            "description": "The pincode of the serviceability location."
          },
          "sector": {
            "type": "string",
            "description": "The sector of the serviceability location."
          },
          "state": {
            "type": "string",
            "description": "The state of the serviceability location."
          },
          "country": {
            "type": "string",
            "description": "The country of the serviceability location."
          },
          "city": {
            "type": "string",
            "description": "The city of the serviceability location."
          },
          "country_iso_code": {
            "type": "string",
            "x-not-enum": true,
            "description": "The ISO code of the country."
          },
          "location": {
            "$ref": "#/components/schemas/ServiceabilityLocation"
          }
        },
        "required": [
          "country",
          "country_iso_code"
        ]
      },
      "GenerateShipmentsLocationArticles": {
        "type": "object",
        "properties": {
          "fulfillment_id": {
            "type": "integer",
            "description": "The fulfillment ID."
          },
          "from_serviceability": {
            "$ref": "#/components/schemas/LocationDetailsServiceability"
          },
          "fulfillment_type": {
            "type": "string",
            "description": "The type of fulfillment.",
            "x-not-enum": true
          },
          "fulfillment_tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Fulfillment level tags."
          },
          "articles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationDetailsArticle"
            },
            "description": "A list of articles and their details."
          },
          "ewaybill_enabled": {
            "type": "boolean"
          },
          "is_home_delivery": {
            "type": "boolean"
          }
        },
        "required": [
          "fulfillment_id",
          "from_serviceability",
          "fulfillment_type",
          "fulfillment_tags",
          "articles"
        ]
      },
      "GenerateShipmentsRequestSchema": {
        "type": "object",
        "properties": {
          "to_serviceability": {
            "$ref": "#/components/schemas/LocationDetailsServiceability"
          },
          "location_articles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GenerateShipmentsLocationArticles"
            },
            "description": "A list of location-based article details."
          },
          "journey": {
            "type": "string",
            "description": "The journey details for the shipment."
          },
          "payment_mode": {
            "type": "string",
            "description": "The payment mode for the shipment."
          }
        },
        "required": [
          "to_serviceability",
          "location_articles",
          "journey"
        ]
      },
      "GenerateShipmentsAndCourierPartnerResponseSchema": {
        "type": "object",
        "properties": {
          "shipments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Shipments"
            },
            "description": "A list of generated shipments."
          },
          "is_cod_available": {
            "type": "boolean",
            "description": "A boolean indicating if COD (COD) is available."
          }
        },
        "required": [
          "shipments",
          "is_cod_available"
        ]
      },
      "ListViewResponseSchemaV2": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListViewItemsV2"
            }
          },
          "page": {
            "$ref": "#/components/schemas/ZoneDataItem"
          }
        },
        "required": [
          "items",
          "page"
        ]
      },
      "ListViewItemsV2": {
        "type": "object",
        "properties": {
          "zone_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "access_level": {
            "type": "string",
            "description": "Access level of the zone (public or private).",
            "enum": [
              "public",
              "private"
            ]
          },
          "geo_areas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GeoArea"
            }
          },
          "slug": {
            "type": "string"
          },
          "stores": {
            "$ref": "#/components/schemas/ListViewProductV2"
          },
          "is_active": {
            "type": "boolean"
          },
          "is_opted": {
            "type": "boolean",
            "description": "Indicates whether the zone is opted or not."
          },
          "is_public_opted": {
            "type": "boolean",
            "description": "Indicates whether the public zone is opted by any seller or not"
          },
          "product": {
            "$ref": "#/components/schemas/ListViewProductV2"
          },
          "company_id": {
            "type": "integer"
          },
          "application_id": {
            "type": "string"
          },
          "created_by": {
            "type": "string"
          },
          "created_on": {
            "type": "string",
            "format": "date-time"
          },
          "modified_by": {
            "type": "string"
          },
          "modified_on": {
            "type": "string",
            "format": "date-time"
          },
          "stage": {
            "type": "string"
          },
          "summary": {
            "$ref": "#/components/schemas/Summary"
          }
        },
        "required": [
          "company_id",
          "application_id",
          "type",
          "geo_areas",
          "is_active",
          "is_opted",
          "access_level",
          "name",
          "slug",
          "zone_id",
          "modified_by",
          "modified_on",
          "created_by",
          "created_on"
        ]
      },
      "GeoArea": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "ListViewProductV2": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "type": {
            "type": "string"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "type",
          "values"
        ]
      },
      "Summary": {
        "type": "object",
        "properties": {
          "stores_count": {
            "type": "integer"
          },
          "products_count": {
            "type": "integer"
          },
          "regions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegionSchema"
            }
          }
        }
      },
      "RegionSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "count": {
            "type": "integer"
          }
        }
      },
      "ZoneDataItem": {
        "type": "object",
        "properties": {
          "has_next": {
            "type": "boolean"
          },
          "item_total": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          },
          "current": {
            "type": "integer"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "current",
          "has_next",
          "item_total",
          "size",
          "type"
        ]
      },
      "Region": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "sub_type": {
            "type": "string",
            "x-not-enum": true
          },
          "parent_id": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "parent_uid": {
            "type": "string"
          }
        },
        "required": [
          "uid",
          "display_name",
          "sub_type",
          "parent_id",
          "parent_uid"
        ]
      },
      "GeoAreaGetResponseBody": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GeoAreaItemResponseSchema"
            }
          },
          "page": {
            "$ref": "#/components/schemas/Page2"
          }
        }
      },
      "GeoAreaItemResponseSchema": {
        "type": "object",
        "properties": {
          "geoarea_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "region_type": {
            "type": "string",
            "enum": [
              "non-pincode",
              "pincode"
            ]
          },
          "type": {
            "type": "string"
          },
          "areas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AreaExpandedV2"
            }
          },
          "created_on": {
            "type": "string",
            "format": "date-time"
          },
          "modified_on": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "modified_by": {
            "type": "string"
          },
          "company_id": {
            "type": "integer"
          },
          "application_id": {
            "type": "string"
          }
        },
        "required": [
          "is_active",
          "geoarea_id",
          "slug",
          "name",
          "company_id",
          "region_type",
          "created_on",
          "modified_on",
          "created_by",
          "modified_by",
          "application_id"
        ]
      },
      "Page2": {
        "type": "object",
        "properties": {
          "size": {
            "type": "integer"
          },
          "item_total": {
            "type": "integer"
          },
          "type": {
            "type": "string"
          },
          "current": {
            "type": "integer"
          },
          "has_next": {
            "type": "boolean"
          }
        },
        "required": [
          "current",
          "has_next",
          "item_total",
          "size",
          "type"
        ]
      },
      "AreaExpandedV2": {
        "type": "object",
        "properties": {
          "country": {
            "$ref": "#/components/schemas/Country"
          },
          "regions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegionV2"
            }
          }
        },
        "required": [
          "country",
          "regions"
        ]
      },
      "RegionV2": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "sub_type": {
            "type": "string",
            "x-not-enum": true
          },
          "parent_id": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Country": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          }
        },
        "required": [
          "uid",
          "display_name"
        ]
      },
      "ServiceabilityZoneErrorResponseSchema": {
        "type": "object",
        "properties": {
          "error": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceabilityErrorResponseSchema"
            }
          },
          "success": {
            "type": "boolean"
          }
        },
        "required": [
          "success",
          "error"
        ]
      },
      "ServiceabilityErrorResponseSchema": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "message",
          "type",
          "value"
        ]
      },
      "GetStoreResponseSchema": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoreItemResponseSchema"
            },
            "description": "List of locations, each containing detailed information about individual location."
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          }
        },
        "description": "Provides information about a specific store."
      },
      "StoreItemResponseSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "A unique identifier for the location."
          },
          "store_type": {
            "type": "string",
            "description": "The type of store, indicating the nature of the store, such as retail or warehouse.",
            "x-not-enum": true
          },
          "fulfillment_type": {
            "type": "string",
            "description": "The method of fulfillment used by the store, such as shipping, pickup, or delivery.",
            "x-not-enum": true
          },
          "processing_time": {
            "type": "integer",
            "description": "The average time taken by the store to process orders, measured in minutes."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of tags associated with the store for categorization and search purposes."
          },
          "company_id": {
            "type": "integer",
            "description": "The unique identifier of the company that owns the store."
          },
          "latitude": {
            "type": "number",
            "format": "float",
            "description": "The geographical latitude coordinate of the store location."
          },
          "longitude": {
            "type": "number",
            "format": "float",
            "description": "The geographical longitude coordinate of the store location."
          }
        },
        "description": "This component details a store's attributes including its operational characteristics, fulfillment methods, and geographic location."
      },
      "ValidateAddressRequestSchema": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "Complete address, combining address line 1, address line 2, area, landmark, sector, city, state, and pincode."
          },
          "address1": {
            "type": "string",
            "description": "First line of the address, typically containing street or building information."
          },
          "address2": {
            "type": "string",
            "description": "Second line of the address, which can be used for additional address details if needed."
          },
          "area": {
            "type": "string",
            "description": "Locality or area associated with the address."
          },
          "landmark": {
            "type": "string",
            "description": "Prominent nearby landmark that aids in locating the address."
          },
          "pincode": {
            "type": "string",
            "description": "Postal code or PIN code of the address area."
          },
          "sector": {
            "type": "string",
            "description": "Specifies the sector or district of the address if applicable."
          },
          "city": {
            "type": "string",
            "description": "Denote the city or municipality of the address."
          },
          "state": {
            "type": "string",
            "description": "Indicates the state or province of the address."
          },
          "name": {
            "type": "string",
            "description": "Recipient's name associated with the address.",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "Recipient's contact phone number.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Recipient's email address.",
            "nullable": true
          },
          "country_iso_code": {
            "type": "string",
            "x-not-enum": true,
            "description": "A string containing the recipient's email address."
          }
        },
        "description": "Validate the detail of a given address."
      },
      "PincodeParentsResponseSchema": {
        "type": "object",
        "properties": {
          "sub_type": {
            "type": "string",
            "x-not-enum": true,
            "description": "Specific type of locality hierarchy the pincode belongs to (e.g., city, state, country)."
          },
          "display_name": {
            "type": "string",
            "description": "User-friendly version of the geographical data, which may be more descriptive or formatted differently."
          },
          "name": {
            "type": "string",
            "description": "The actual geographical data, such as country names (India), state names (Maharashtra), pin codes (400603), city names (Dubai), or local sectors (Deira)."
          },
          "uid": {
            "type": "string",
            "description": "Unique identifier for the locality."
          }
        },
        "description": "Represents a collection of geographical locations, each associated with specific hierarchical data such as cities, states, or countries."
      },
      "PincodeMetaResponseSchema": {
        "type": "object",
        "properties": {
          "zone": {
            "type": "string",
            "description": "Geographical region to which the pincode belongs,\noften used to categorize or group pincodes for regional management or postal purposes."
          },
          "internal_zone_id": {
            "type": "integer",
            "description": "A unique identifier used within the system to track or reference the specific zone associated with the pincode."
          }
        },
        "description": "Provides metadata about a specific pincode."
      },
      "PincodeErrorResponseSchema": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true,
            "description": "A user-readable description of the error, explaining what went wrong."
          },
          "value": {
            "type": "string",
            "nullable": true,
            "description": "A specific code or identifier related to the error, used for referencing or categorizing the error."
          },
          "type": {
            "type": "string",
            "nullable": true,
            "description": "The classification of the error, indicating the kind of issue."
          }
        },
        "description": "Describes the error encountered during a operation."
      },
      "PincodeLatLongData": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Specifies the type of geographical feature or data, typically \"Point\" for coordinates in geographic data systems."
          },
          "coordinates": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "description": "Contains the latitude and longitude values representing the precise location. The format is usually an array with two values: [longitude, latitude]."
          }
        },
        "description": "Provides geographical information for a pincode."
      },
      "PincodeDataResponseSchema": {
        "type": "object",
        "properties": {
          "parents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PincodeParentsResponseSchema"
            },
            "description": "List of object representing a collection of geographical locations, each associated with specific hierarchical data such as cities, states, or countries."
          },
          "meta": {
            "$ref": "#/components/schemas/PincodeMetaResponseSchema"
          },
          "display_name": {
            "type": "string",
            "description": "User-friendly version of the geographical data, which may be more descriptive or formatted differently."
          },
          "error": {
            "$ref": "#/components/schemas/PincodeErrorResponseSchema"
          },
          "meta_code": {
            "$ref": "#/components/schemas/CountryMetaResponseSchema"
          },
          "lat_long": {
            "$ref": "#/components/schemas/PincodeLatLongData"
          },
          "sub_type": {
            "type": "string",
            "x-not-enum": true,
            "description": "Indicates the specific type of locality hierarchy the pincode belongs to (e.g., city, state, country)."
          },
          "name": {
            "type": "string",
            "description": "The actual geographical data, such as country names (India), state names (Maharashtra), pin codes (400603), city names (Dubai), or local sectors (Deira)."
          },
          "uid": {
            "type": "string",
            "description": "This field stands for \"Unique Identifier,\" a unique value assigned to each instance to ensure differentiation and reference."
          }
        },
        "required": [
          "error"
        ],
        "description": "Provides information about a hierarchy."
      },
      "PincodeApiResponseSchema": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the API request was successful (true) or failed (false)."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PincodeDataResponseSchema"
            },
            "description": "Contains the actual response data when the request is successful, providing details like pincode information or related data."
          },
          "error": {
            "$ref": "#/components/schemas/PincodeErrorResponseSchema"
          },
          "request_uuid": {
            "type": "string",
            "nullable": true
          },
          "stormbreaker_uuid": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "error",
          "success"
        ],
        "description": "Provides the result of a pincode-related API request."
      },
      "TATCategoryRequestSchema": {
        "type": "object",
        "properties": {
          "level": {
            "type": "string",
            "description": "Specifies the hierarchical level of the category (e.g., country, state, city)."
          },
          "id": {
            "type": "integer",
            "description": "Represents the unique identifier for the category at the specified level."
          }
        },
        "description": "Request information about a specific category in the TAT (Turnaround Time) system."
      },
      "TATArticlesRequestSchema": {
        "type": "object",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/TATCategoryRequestSchema"
          },
          "manufacturing_time_unit": {
            "type": "string",
            "description": "The unit of measurement for the manufacturing time, such as hours or days."
          },
          "manufacturing_time": {
            "type": "integer",
            "description": "The amount of time required to manufacture the article, specified in the unit given by `manufacturing_time_unit`."
          }
        },
        "description": "Request details about specific articles in the TAT (Turnaround Time) system."
      },
      "TATLocationDetailsRequestSchema": {
        "type": "object",
        "properties": {
          "fulfillment_id": {
            "type": "integer",
            "description": "A unique identifier of the fulfilling location."
          },
          "from_pincode": {
            "type": "string",
            "description": "The postal code of the location from which the fulfillment originates."
          },
          "articles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TATArticlesRequestSchema"
            },
            "description": "List of articles included in the fulfillment request, which provides details about the items to be processed or shipped."
          }
        },
        "description": "Information about a specific category in the TAT (Turnaround Time) system."
      },
      "TATViewRequestSchema": {
        "type": "object",
        "properties": {
          "to_pincode": {
            "type": "string",
            "description": "The postal code of the destination location where the fulfillment or shipment is headed."
          },
          "source": {
            "type": "string",
            "description": "The origin or source of the request, indicating where the data or action is coming from."
          },
          "action": {
            "type": "string",
            "description": "The specific operation or request being made, such as viewing, updating, or managing data."
          },
          "identifier": {
            "type": "string",
            "description": "A unique ID used to reference or track the specific request or item within the system."
          },
          "location_details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TATLocationDetailsRequestSchema"
            },
            "description": "Locations involved in the request, including details about both the source and destination."
          },
          "journey": {
            "type": "string",
            "description": "Indicates the direction of the request or shipment.\nIt can either be \"forward\" (from the source to the destination) or \"return\" (from the destination back to the source)."
          }
        },
        "description": "TATViewRequest is used to request a view of TAT (Turnaround Time) information."
      },
      "TATErrorResponseSchema": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true,
            "description": "A user-readable description of the error, explaining what went wrong."
          },
          "value": {
            "type": "string",
            "nullable": true,
            "description": "A specific code or identifier related to the error, used for referencing or categorizing the error."
          },
          "type": {
            "type": "string",
            "nullable": true,
            "description": "The classification of the error, indicating the kind of issue."
          }
        },
        "description": "Request information about a specific category in the TAT (Turnaround Time) system."
      },
      "TATTimestampResponseSchema": {
        "type": "object",
        "properties": {
          "min": {
            "type": "integer",
            "description": "The earliest possible timestamp."
          },
          "max": {
            "type": "integer",
            "description": "The latest possible timestamp."
          }
        },
        "description": "Provides a range of timestamps relevant to the delivery promise."
      },
      "TATFormattedResponseSchema": {
        "type": "object",
        "properties": {
          "min": {
            "type": "string",
            "description": "The earliest possible timestamp."
          },
          "max": {
            "type": "string",
            "description": "The latest possible timestamp."
          }
        },
        "description": "Provides a range of timestamps relevant to the delivery promise."
      },
      "TATPromiseResponseSchema": {
        "type": "object",
        "properties": {
          "timestamp": {
            "$ref": "#/components/schemas/TATTimestampResponseSchema"
          },
          "formatted": {
            "$ref": "#/components/schemas/TATFormattedResponseSchema"
          }
        },
        "description": "Provides a range of timestamps relevant to the delivery promise."
      },
      "TATArticlesResponseSchema": {
        "type": "object",
        "properties": {
          "manufacturing_time_unit": {
            "type": "string",
            "description": "The unit of measurement for the manufacturing time such as hours or days."
          },
          "error": {
            "$ref": "#/components/schemas/TATErrorResponseSchema"
          },
          "is_cod_available": {
            "type": "boolean",
            "description": "Indicates whether Cash on Delivery (COD) is available for the articles."
          },
          "promise": {
            "$ref": "#/components/schemas/TATPromiseResponseSchema"
          },
          "manufacturing_time": {
            "type": "integer",
            "description": "The time required to manufacture the articles, measured in the unit specified by manufacturing_time_unit."
          },
          "category": {
            "$ref": "#/components/schemas/TATCategoryRequestSchema"
          },
          "_manufacturing_time_seconds": {
            "type": "integer",
            "description": "The manufacturing time converted into seconds."
          }
        },
        "description": "Provide details about articles related to Turn around time."
      },
      "TATLocationDetailsResponseSchema": {
        "type": "object",
        "properties": {
          "fulfillment_id": {
            "type": "integer",
            "description": "A unique identifier of the fulfilling location."
          },
          "from_pincode": {
            "type": "string",
            "description": "The postal code of the location from which the fulfillment originates."
          },
          "articles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TATArticlesResponseSchema"
            },
            "description": "List of articles included in the fulfillment request, which provides details about the items to be processed or shipped."
          }
        },
        "description": "Provides detailed information about location specific data."
      },
      "TATViewResponseSchema": {
        "type": "object",
        "properties": {
          "to_pincode": {
            "type": "string",
            "description": "The postal code of the destination location where the fulfillment or shipment is headed."
          },
          "request_uuid": {
            "type": "string",
            "description": "A unique identifier for the request."
          },
          "payment_mode": {
            "type": "string",
            "description": "The mode of payment used for the transaction."
          },
          "success": {
            "type": "boolean",
            "description": "Whether the request was successful (true/false)."
          },
          "error": {
            "$ref": "#/components/schemas/TATErrorResponseSchema"
          },
          "is_cod_available": {
            "type": "boolean",
            "description": "Whether Cash on Delivery (COD) is available for the request."
          },
          "source": {
            "type": "string",
            "description": "The origin or source of the request."
          },
          "action": {
            "type": "string",
            "description": "The action performed or requested (e.g., forward, return)."
          },
          "stormbreaker_uuid": {
            "type": "string",
            "description": "A unique identifier related to the stormbreaker process."
          },
          "to_city": {
            "type": "string",
            "description": "The city corresponding to the destination pincode."
          },
          "identifier": {
            "type": "string",
            "description": "A unique identifier for the request or transaction."
          },
          "location_details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TATLocationDetailsResponseSchema"
            },
            "description": "Location involved in the request."
          },
          "journey": {
            "type": "string",
            "description": "Type of journey, either forward or return."
          },
          "country_iso_code": {
            "type": "string",
            "x-not-enum": true,
            "description": "ISO2 code of the country"
          }
        },
        "description": "Contains information about a specific request view."
      },
      "DP": {
        "type": "object",
        "properties": {
          "fm_priority": {
            "type": "integer",
            "description": "First Mile Priority; focuses on the initial segment of the logistics process, from the point of origin to the first distribution center."
          },
          "lm_priority": {
            "type": "integer",
            "description": "Last Mile Priority; deals with the final stage of the delivery process, where goods are delivered from the distribution center to the final destination."
          },
          "rvp_priority": {
            "type": "integer",
            "description": "Reverse Pickup Priority; pertains to the process of collecting goods from the customer for return or exchange."
          },
          "payment_mode": {
            "type": "string",
            "description": "The method of payment used for transactions, such as credit card, debit card, cash on delivery, etc."
          },
          "operations": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "string"
            },
            "description": "Refers to the various activities and processes involved in managing and executing the delivery and logistics operations."
          },
          "area_code": {
            "type": "string",
            "x-not-enum": true,
            "nullable": true,
            "description": "A code that identifies a specific geographic area, often used for sorting and routing deliveries."
          },
          "assign_dp_from_sb": {
            "type": "boolean",
            "description": "Indicates whether the delivery partner (DP) is assigned from stormbreaker service."
          },
          "internal_account_id": {
            "type": "string",
            "description": "An identifier used internally to track accounts or entities within the organization's system."
          },
          "external_account_id": {
            "type": "string",
            "nullable": true,
            "description": "An identifier used to reference accounts or entities outside the organization's system, such as partner accounts."
          },
          "transport_mode": {
            "type": "string",
            "description": "The method of transportation used for delivering goods, such as road, rail, air, or sea."
          }
        },
        "required": [
          "fm_priority",
          "lm_priority",
          "operations",
          "payment_mode",
          "rvp_priority"
        ],
        "description": "Delivery Partner; typically refers to the entity responsible for handling the delivery of goods."
      },
      "LogisticsResponseSchema": {
        "type": "object",
        "properties": {
          "dp": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DP"
            },
            "description": "Provide entity responsible for handling the delivery of goods."
          }
        },
        "description": "Provides comprehensive details about a delivery operation."
      },
      "CountryMetaResponseSchema": {
        "type": "object",
        "properties": {
          "iso2": {
            "type": "string"
          },
          "iso3": {
            "type": "string"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyObject"
          },
          "phone_code": {
            "type": "string",
            "x-not-enum": true
          },
          "parent_id": {
            "type": "string",
            "nullable": true
          },
          "zone": {
            "type": "string"
          },
          "deliverables": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 0
          },
          "hierarchy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CountryHierarchy"
            }
          },
          "logistics": {
            "$ref": "#/components/schemas/LogisticsResponseSchema"
          }
        },
        "description": "Provides metadata about a country."
      },
      "CountryEntityResponseSchema": {
        "type": "object",
        "properties": {
          "display_name": {
            "type": "string",
            "description": "User-friendly version of the geographical data, which may be more descriptive or formatted differently."
          },
          "is_active": {
            "type": "boolean",
            "description": "Whether the country entity is currently active or not."
          },
          "parent_id": {
            "type": "string",
            "description": "Identifier for the parent of the current locality."
          },
          "sub_type": {
            "type": "string",
            "x-not-enum": true,
            "description": "Specific type of locality hierarchy the pincode belongs to (e.g., city, state, country)."
          },
          "name": {
            "type": "string",
            "description": "Country name."
          },
          "uid": {
            "type": "string",
            "description": "Unique identifier for the country."
          },
          "lat_long": {
            "type": "object",
            "additionalProperties": true,
            "items": {
              "type": "string"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/CountryMetaResponseSchema"
          },
          "logistics": {
            "$ref": "#/components/schemas/LogisticsResponseSchema"
          }
        },
        "description": "Provide details about a specific country."
      },
      "CountryListResponseSchema": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CountryEntityResponseSchema"
            },
            "description": "A list of country entities, each containing details about individual countries."
          }
        },
        "description": "A response containing a list of countries, with each entry providing details about individual countries."
      },
      "GetZoneFromPincodeViewRequestSchema": {
        "type": "object",
        "properties": {
          "pincode": {
            "type": "string",
            "description": "The postal code or ZIP code used to pinpoint a specific geographic area or location."
          },
          "country": {
            "type": "string",
            "description": "The country where the pincode is located."
          }
        },
        "required": [
          "country",
          "pincode"
        ],
        "description": "Get zone information associated with a specific pincode and country."
      },
      "GetZoneFromPincodeViewResponseSchema": {
        "type": "object",
        "properties": {
          "serviceability_type": {
            "type": "string",
            "x-not-enum": true,
            "description": "Specifies the type of serviceability for the given pincode, indicating whether it's deliverable or serviceable under certain conditions."
          },
          "zones": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Lists the zones associated with the pincode, detailing the geographical or logistical zones for service."
          }
        },
        "required": [
          "serviceability_type",
          "zones"
        ],
        "description": "Provides information on the zone related to a given pincode."
      },
      "ReAssignStoreRequestSchema": {
        "type": "object",
        "properties": {
          "configuration": {
            "type": "object",
            "additionalProperties": true,
            "description": "Specifies the configuration settings or parameters for the store reassignment."
          },
          "to_pincode": {
            "type": "string",
            "description": "The postal code of the destination location where the fulfillment or shipment is headed."
          },
          "ignored_locations": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "Locations that should be excluded from the reassignment process."
          },
          "identifier": {
            "type": "string",
            "description": "A unique identifier for the reassignment request."
          },
          "articles": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "List of articles or items involved in the store reassignment."
          }
        },
        "required": [
          "articles",
          "configuration",
          "identifier",
          "ignored_locations",
          "to_pincode"
        ],
        "description": "Provide details for reassigning a store."
      },
      "ReAssignStoreResponseSchema": {
        "type": "object",
        "properties": {
          "to_pincode": {
            "type": "string",
            "description": "The postal code of the destination location where the fulfillment or shipment is headed."
          },
          "pystormbreaker_uuid": {
            "type": "string",
            "description": "A unique identifier for tracking the reassignment operation."
          },
          "success": {
            "type": "boolean",
            "description": "Whether the reassignment was successful or not."
          },
          "error": {
            "type": "object",
            "additionalProperties": true,
            "description": "Details about any errors encountered during the reassignment."
          },
          "assigned_stores": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "List of stores that have been successfully reassigned."
          }
        },
        "required": [
          "error",
          "pystormbreaker_uuid",
          "success",
          "to_pincode"
        ],
        "description": "Provides the outcome of a store reassignment."
      },
      "CountryHierarchy": {
        "type": "object",
        "properties": {
          "display_name": {
            "type": "string"
          },
          "slug": {
            "type": "string",
            "description": "A URL-friendly version of the name, often used for referencing or querying purposes."
          }
        },
        "description": "Describes the hierarchical structure of a country."
      },
      "CurrencyObject": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The currency code, typically a three-letter ISO code (e.g., \"USD\" for US Dollar)."
          },
          "name": {
            "type": "string",
            "description": "It represent a country name."
          },
          "symbol": {
            "type": "string",
            "description": "The symbol used to represent the currency (e.g., \"$\" for US Dollar)."
          }
        },
        "description": "Provides details about a currency."
      },
      "CountryObject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the country."
          },
          "name": {
            "type": "string",
            "description": "It represent a country name."
          },
          "display_name": {
            "type": "string",
            "description": "User-friendly version of the geographical data, which may be more descriptive or formatted differently."
          },
          "iso2": {
            "type": "string",
            "description": "Two-letter ISO code representing the country."
          },
          "iso3": {
            "type": "string",
            "description": "Three-letter ISO code representing the country."
          },
          "timezones": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            },
            "description": "List of time zones used in the country (e.g., [\"America/New_York\", \"America/Los_Angeles\"])."
          },
          "hierarchy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CountryHierarchy"
            },
            "description": "Levels within the country (e.g., states, cities) and their slugs (e.g., [{\"name\": \"State\", \"slug\": \"state\"}, {\"name\": \"City\", \"slug\": \"city\"}])."
          },
          "phone_code": {
            "type": "string",
            "x-not-enum": true,
            "description": "International dialing code for the country (e.g., \"+1\")."
          },
          "latitude": {
            "type": "string",
            "description": "Geographical latitude of the country (e.g., \"37.0902\")."
          },
          "longitude": {
            "type": "string",
            "description": "Geographical longitude of the country (e.g., \"-95.7129\")."
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyObject"
          },
          "type": {
            "type": "string",
            "description": "Indicates the type of object (e.g., \"country\")."
          }
        },
        "description": "Provides the outcome of a store reassignment."
      },
      "GetCountries": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CountryObject"
            },
            "description": "List of countries, each containing detailed information about individual country."
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          }
        },
        "description": "List of countries with their details.",
        "required": []
      },
      "GetOneOrAllPath": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "description": "Define the path parameters for retrieving geographical data."
      },
      "GetOneOrAllQuery": {
        "type": "object",
        "properties": {
          "country": {
            "nullable": true,
            "type": "string",
            "description": "The name of the country to filter the results."
          },
          "state": {
            "nullable": true,
            "type": "string",
            "description": "The name of the state within the specified country."
          },
          "city": {
            "nullable": true,
            "type": "string",
            "description": "The name of the city within the specified state."
          },
          "sector": {
            "nullable": true,
            "type": "string",
            "description": "The name of the sector or area within the specified city."
          }
        },
        "description": "Allows to filter results based on one or more geographic levels."
      },
      "GetOneOrAllParams": {
        "type": "object",
        "properties": {
          "path": {
            "$ref": "#/components/schemas/GetOneOrAllPath"
          },
          "query": {
            "$ref": "#/components/schemas/GetOneOrAllQuery"
          }
        },
        "description": "Defines parameters for retrieving geographic data."
      },
      "GetOneOrAll": {
        "type": "object",
        "nullable": true,
        "properties": {
          "operation_id": {
            "type": "string",
            "description": "Identifier for the specific operation or query being performed."
          },
          "params": {
            "$ref": "#/components/schemas/GetOneOrAllParams"
          }
        },
        "description": "Represents a request for retrieving data based on specified criteria."
      },
      "LengthValidation": {
        "type": "object",
        "properties": {
          "min": {
            "type": "integer",
            "nullable": true,
            "description": "The minimum number of characters or digits allowed."
          },
          "max": {
            "type": "integer",
            "nullable": true,
            "description": "The maximum number of characters or digits allowed."
          }
        },
        "description": "Defines constraints for the length of a data field."
      },
      "FieldValidationRegex": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Regular expression pattern used to validate the field."
          },
          "length": {
            "$ref": "#/components/schemas/LengthValidation"
          }
        },
        "description": "Specifies rules for validating a data field using regular expressions."
      },
      "FieldValidation": {
        "type": "object",
        "nullable": true,
        "properties": {
          "type": {
            "type": "string",
            "description": "Specifies the validation method, such as regex for regular expression validation."
          },
          "regex": {
            "$ref": "#/components/schemas/FieldValidationRegex"
          }
        },
        "description": "Criteria for validating a field."
      },
      "GetCountryFieldsAddressValues": {
        "type": "object",
        "nullable": true,
        "properties": {
          "get_one": {
            "$ref": "#/components/schemas/GetOneOrAll"
          },
          "get_all": {
            "$ref": "#/components/schemas/GetOneOrAll"
          }
        },
        "description": "Specifies how to retrieve address field values for a country."
      },
      "GetCountryFieldsAddress": {
        "type": "object",
        "properties": {
          "display_name": {
            "type": "string",
            "description": "User-friendly version of the geographical data, which may be more descriptive or formatted differently."
          },
          "slug": {
            "type": "string",
            "description": "URL-friendly version of the name, often used for referencing or querying purposes."
          },
          "required": {
            "type": "boolean",
            "description": "Indicates whether the field is mandatory for the user to fill out."
          },
          "edit": {
            "type": "boolean",
            "description": "Specifies if the field can be edited by the user."
          },
          "input": {
            "type": "string",
            "description": "Defines the type of input control used for the field (e.g., textbox)."
          },
          "pre_fill": {
            "type": "string"
          },
          "validation": {
            "$ref": "#/components/schemas/FieldValidation"
          },
          "values": {
            "$ref": "#/components/schemas/GetCountryFieldsAddressValues"
          },
          "error_text": {
            "type": "string",
            "nullable": true,
            "description": "The message shown to the user if the input does not meet the validation criteria."
          }
        },
        "required": [
          "required",
          "input",
          "display_name",
          "slug"
        ],
        "additionalProperties": false,
        "description": "Describes the configuration of address fields for a country."
      },
      "GetCountryFieldsAddressTemplate": {
        "type": "object",
        "properties": {
          "checkout_form": {
            "type": "string",
            "description": "The format used to display or collect address information during checkout."
          },
          "store_os_form": {
            "type": "string",
            "description": "The format used for address entry or display in the store's operating system."
          },
          "default_display": {
            "type": "string",
            "description": "The general format for displaying address information."
          }
        },
        "required": [
          "checkout_form",
          "store_os_form",
          "default_display"
        ],
        "additionalProperties": false,
        "description": "Defines the templates for formatting addresses."
      },
      "GetCountryFields": {
        "type": "object",
        "properties": {
          "address": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetCountryFieldsAddress"
            },
            "description": "Specifies the fields and attributes related to address information, including display names, input types, and validation rules. This section defines the details needed for address collection and formatting."
          },
          "serviceability_fields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Lists the specific address fields used to determine whether a location is serviceable. These fields are crucial for validating service coverage and availability."
          },
          "address_template": {
            "$ref": "#/components/schemas/GetCountryFieldsAddressTemplate"
          }
        },
        "required": [
          "address",
          "serviceability_fields",
          "address_template"
        ],
        "additionalProperties": false,
        "description": "Address-related information in a country."
      },
      "GetCountry": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the country."
          },
          "name": {
            "type": "string",
            "description": "It represent a country name."
          },
          "display_name": {
            "type": "string",
            "description": "User-friendly version of the geographical data, which may be more descriptive or formatted differently."
          },
          "iso2": {
            "type": "string",
            "description": "Two-letter ISO code representing the country."
          },
          "iso3": {
            "type": "string",
            "description": "Three-letter ISO code representing the country."
          },
          "timezones": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            },
            "description": "List of time zones used in the country (e.g., [\"America/New_York\", \"America/Los_Angeles\"])."
          },
          "hierarchy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CountryHierarchy"
            },
            "description": "Levels within the country (e.g., states, cities) and their slugs (e.g., [{\"name\": \"State\", \"slug\": \"state\"}, {\"name\": \"City\", \"slug\": \"city\"}])."
          },
          "phone_code": {
            "type": "string",
            "x-not-enum": true,
            "description": "International dialing code for the country (e.g., \"+1\")."
          },
          "latitude": {
            "type": "string",
            "description": "Geographical latitude of the country (e.g., \"37.0902\")."
          },
          "longitude": {
            "type": "string",
            "description": "Geographical longitude of the country (e.g., \"-95.7129\")."
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyObject"
          },
          "type": {
            "type": "string",
            "description": "Indicates the type of object (e.g., \"country\")."
          },
          "fields": {
            "$ref": "#/components/schemas/GetCountryFields"
          }
        },
        "description": "Provides details about a specific country."
      },
      "Localities": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for the locality."
          },
          "name": {
            "type": "string",
            "description": "The actual geographical data, such as country names (India), state names (Maharashtra), pin codes (400603), city names (Dubai), or local sectors (Deira)."
          },
          "display_name": {
            "type": "string",
            "description": "User-friendly version of the geographical data, which may be more descriptive or formatted differently."
          },
          "parent_ids": {
            "default": [],
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Identifiers for the parent of the current locality."
          },
          "meta": {
            "type": "object",
            "additionalProperties": true,
            "default": {}
          },
          "type": {
            "type": "string",
            "description": "Specifies the category of the address component, such as pincode, state, city, country, or sector."
          },
          "lat_long": {
            "$ref": "#/components/schemas/PincodeLatLongData"
          },
          "parent_uid": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string"
          },
          "localities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalityParent"
            }
          },
          "iso2": {
            "type": "string",
            "example": "",
            "description": "ISO 3166-1 alpha-2 code for the country."
          },
          "iso3": {
            "type": "string",
            "example": "",
            "description": "ISO 3166-1 alpha-3 code for the country."
          },
          "currency": {
            "type": "object",
            "additionalProperties": true,
            "description": "Currency information for the country."
          },
          "phone_code": {
            "type": "string",
            "x-not-enum": true,
            "example": "",
            "description": "Country's international phone dialing code."
          },
          "hierarchy": {
            "type": "object",
            "additionalProperties": true,
            "description": "Hierarchical data of the country's location."
          },
          "latitude": {
            "type": "string",
            "example": "",
            "description": "Latitude of the country's geographic center."
          },
          "longitude": {
            "type": "string",
            "example": "",
            "description": "Longitude of the country's geographic center."
          }
        },
        "description": "Localities provides details about various geographical areas, such as states, cities, or areas."
      },
      "LocalityParent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for the locality."
          },
          "name": {
            "type": "string",
            "description": "The actual geographical data, such as country names (India), state names (Maharashtra), pin codes (400603), city names (Dubai), or local sectors (Deira)."
          },
          "display_name": {
            "type": "string",
            "description": "User-friendly version of the geographical data, which may be more descriptive or formatted differently."
          },
          "meta": {
            "default": {},
            "type": "object",
            "additionalProperties": true
          },
          "parent_ids": {
            "default": [],
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            },
            "description": "Identifiers for the parent of the current locality."
          },
          "type": {
            "type": "string",
            "description": "Specifies the category of the address component, such as pincode, state, city, country, or sector."
          },
          "serviceability": {
            "default": {},
            "type": "object",
            "additionalProperties": true
          },
          "parent_uid": {
            "default": "",
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "Unique of the Geolocality"
          },
          "iso2": {
            "type": "string",
            "example": "",
            "description": "ISO 3166-1 alpha-2 code for the country."
          },
          "iso3": {
            "type": "string",
            "example": "",
            "description": "ISO 3166-1 alpha-3 code for the country."
          },
          "currency": {
            "type": "object",
            "additionalProperties": true,
            "description": "Currency information for the country."
          },
          "phone_code": {
            "type": "string",
            "x-not-enum": true,
            "example": "",
            "description": "Country's international phone dialing code."
          },
          "hierarchy": {
            "type": "object",
            "additionalProperties": true,
            "description": "Hierarchical data of the country's location."
          },
          "latitude": {
            "type": "string",
            "example": "",
            "description": "Latitude of the country's geographic center."
          },
          "longitude": {
            "type": "string",
            "example": "",
            "description": "Longitude of the country's geographic center."
          }
        },
        "description": "Describes a parent locality within the geographical hierarchy."
      },
      "ErrorObject": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "GetLocalities": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Localities"
            },
            "description": "List of localities, each containing detailed information about individual locality."
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          }
        },
        "description": "Provides information about localities based on specified criteria.",
        "required": []
      },
      "GetLocality": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for the locality."
          },
          "name": {
            "type": "string",
            "description": "The actual geographical data, such as country names (India), state names (Maharashtra), pin codes (400603), city names (Dubai), or local sectors (Deira)."
          },
          "display_name": {
            "type": "string",
            "description": "User-friendly version of the geographical data, which may be more descriptive or formatted differently."
          },
          "meta": {
            "default": {},
            "type": "object",
            "additionalProperties": true
          },
          "parent_ids": {
            "default": [],
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            },
            "description": "Identifiers for the parent of the current locality."
          },
          "parent_uid": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Specifies the category of the address component, such as pincode, state, city, country, or sector."
          },
          "code": {
            "type": "string",
            "description": "Unique code of the Geolocality"
          },
          "localities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalityParent"
            },
            "description": "Representing the localities that are associated with or contained within the current locality.\nIt provides detailed information about the parent localities, including their names, identifiers, and hierarchical relationships."
          }
        },
        "description": "Represents a collection of geographical locations, each associated with specific hierarchical data such as cities, states, or countries."
      },
      "ErrorResponseV2": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "ErrorResponseV3": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorObject"
          }
        }
      },
      "ShipmentRequestSchema": {
        "type": "object",
        "properties": {
          "to_serviceability": {
            "$ref": "#/components/schemas/ServiceabilityNew"
          },
          "location_articles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationArticle"
            }
          },
          "journey": {
            "type": "string"
          },
          "payment_mode": {
            "type": "string"
          }
        }
      },
      "LocationArticle": {
        "type": "object",
        "properties": {
          "fulfillment_id": {
            "type": "integer"
          },
          "from_serviceability": {
            "$ref": "#/components/schemas/ServiceabilityNew"
          },
          "fulfillment_type": {
            "type": "string",
            "x-not-enum": true
          },
          "fulfillment_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "articles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Article"
            }
          }
        }
      },
      "Article": {
        "type": "object",
        "properties": {
          "set": {
            "type": "object",
            "nullable": true,
            "additionalProperties": true
          },
          "uid": {
            "type": "string",
            "nullable": true
          },
          "c_name": {
            "type": "string",
            "nullable": true
          },
          "is_set": {
            "type": "boolean",
            "nullable": true
          },
          "s_city": {
            "type": "string",
            "nullable": true
          },
          "weight": {
            "$ref": "#/components/schemas/Weight"
          },
          "avl_qty": {
            "type": "integer",
            "nullable": true
          },
          "fragile": {
            "type": "boolean",
            "nullable": true
          },
          "item_id": {
            "type": "integer",
            "nullable": true
          },
          "brand_id": {
            "type": "integer",
            "nullable": true
          },
          "cashback": {
            "type": "integer",
            "nullable": true
          },
          "discount": {
            "type": "integer",
            "nullable": true
          },
          "hsn_code": {
            "type": "string",
            "nullable": true,
            "x-not-enum": true
          },
          "is_valid": {
            "type": "boolean",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "nullable": true
          },
          "raw_meta": {
            "type": "object",
            "nullable": true,
            "additionalProperties": true
          },
          "store_id": {
            "type": "integer",
            "nullable": true
          },
          "dimension": {
            "$ref": "#/components/schemas/Dimension"
          },
          "item_size": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "nullable": true
          },
          "old_price": {
            "type": "integer",
            "nullable": true
          },
          "article_id": {
            "type": "string",
            "nullable": true
          },
          "company_id": {
            "type": "integer",
            "nullable": true
          },
          "gst_amount": {
            "type": "integer",
            "nullable": true
          },
          "identifier": {
            "type": "object",
            "nullable": true,
            "additionalProperties": true
          },
          "store_name": {
            "type": "string",
            "nullable": true
          },
          "unit_price": {
            "type": "integer",
            "nullable": true
          },
          "amount_paid": {
            "type": "integer",
            "nullable": true
          },
          "bulk_margin": {
            "type": "integer",
            "nullable": true
          },
          "cod_charges": {
            "type": "integer",
            "nullable": true
          },
          "custom_meta": {
            "type": "object",
            "nullable": true,
            "additionalProperties": true
          },
          "article_code": {
            "type": "string",
            "nullable": true,
            "x-not-enum": true
          },
          "manufacturer": {
            "$ref": "#/components/schemas/Manufacturer"
          },
          "price_marked": {
            "type": "integer",
            "nullable": true
          },
          "bulk_discount": {
            "type": "integer",
            "nullable": true
          },
          "store_pincode": {
            "type": "integer",
            "nullable": true
          },
          "value_of_good": {
            "type": "integer",
            "nullable": true
          },
          "last_update_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "return_allowed": {
            "type": "boolean",
            "nullable": true
          },
          "transfer_price": {
            "type": "integer",
            "nullable": true
          },
          "price_effective": {
            "type": "integer",
            "nullable": true
          },
          "valid_inventory": {
            "type": "boolean",
            "nullable": true
          },
          "bulk_coupon_code": {
            "type": "string",
            "nullable": true,
            "x-not-enum": true
          },
          "cashback_applied": {
            "type": "integer",
            "nullable": true
          },
          "delivery_charges": {
            "type": "integer",
            "nullable": true
          },
          "mongo_article_id": {
            "type": "string",
            "nullable": true
          },
          "referral_credits": {
            "type": "integer",
            "nullable": true
          },
          "country_of_origin": {
            "type": "string",
            "nullable": true
          },
          "article_assignment": {
            "$ref": "#/components/schemas/ArticleAssignment"
          },
          "gst_tax_percentage": {
            "type": "integer",
            "nullable": true
          },
          "cancellation_allowed": {
            "type": "boolean",
            "nullable": true
          },
          "coupon_article_count": {
            "type": "integer",
            "nullable": true
          },
          "size_level_total_qty": {
            "type": "integer",
            "nullable": true
          },
          "article_assign_status": {
            "type": "boolean",
            "nullable": true
          },
          "quantity_assign_status": {
            "type": "boolean",
            "nullable": true
          },
          "coupon_effective_discount": {
            "type": "integer",
            "nullable": true
          }
        }
      },
      "Attributes": {
        "type": "object",
        "properties": {
          "battery_operated": {
            "type": "string"
          },
          "is_flammable": {
            "type": "string"
          }
        }
      },
      "Set": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "quantity": {
            "type": "integer"
          },
          "size_distribution": {
            "$ref": "#/components/schemas/SetSizeDistribution"
          }
        }
      },
      "DeliverySlots": {
        "type": "object",
        "properties": {
          "delivery_date": {
            "type": "string",
            "format": "date"
          },
          "min_slot": {
            "type": "string",
            "format": "time"
          },
          "max_slot": {
            "type": "string",
            "format": "time"
          }
        }
      },
      "ServiceabilityNew": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "sector": {
            "type": "string"
          },
          "country_iso_code": {
            "type": "string",
            "x-not-enum": true
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "pincode": {
            "type": "string"
          }
        }
      },
      "Location": {
        "type": "object",
        "properties": {
          "longitude": {
            "type": "string"
          },
          "latitude": {
            "type": "string"
          }
        }
      },
      "ShipmentResponseSchema": {
        "type": "object",
        "properties": {
          "shipments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShipmentItem"
            }
          },
          "is_cod_available": {
            "type": "boolean"
          }
        }
      },
      "ShipmentItem": {
        "type": "object",
        "properties": {
          "fulfillment_id": {
            "type": "integer"
          },
          "fulfillment_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fulfillment_type": {
            "type": "string",
            "x-not-enum": true
          },
          "from_serviceability": {
            "$ref": "#/components/schemas/ServiceabilityNew"
          },
          "articles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Article"
            }
          },
          "courier_partners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CourierPartner"
            }
          },
          "promise": {
            "$ref": "#/components/schemas/Promise"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "is_mto": {
            "type": "boolean"
          },
          "is_gift": {
            "type": "boolean"
          },
          "is_locked": {
            "type": "boolean"
          },
          "packaging": {
            "$ref": "#/components/schemas/Packaging"
          },
          "delivery_slots": {
            "$ref": "#/components/schemas/DeliverySlots"
          },
          "count": {
            "type": "integer"
          },
          "volumetric_weight": {
            "type": "number"
          },
          "ewaybill_enabled": {
            "type": "string",
            "enum": [
              "array",
              "boolean",
              "integer",
              "number",
              "object",
              "string"
            ]
          },
          "mps": {
            "type": "boolean"
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "weight": {
            "type": "integer"
          },
          "shipment_type": {
            "type": "string",
            "x-not-enum": true
          },
          "is_auto_assign": {
            "type": "boolean"
          },
          "is_cod_available": {
            "type": "boolean"
          }
        }
      },
      "TAT": {
        "type": "object",
        "properties": {
          "min": {
            "type": "integer"
          },
          "max": {
            "type": "integer"
          }
        }
      },
      "CourierPartner": {
        "type": "object",
        "properties": {
          "extension_id": {
            "type": "string"
          },
          "scheme_id": {
            "type": "string"
          },
          "area_code": {
            "$ref": "#/components/schemas/AreaCode"
          },
          "tat": {
            "$ref": "#/components/schemas/TAT"
          },
          "display_name": {
            "type": "string"
          },
          "is_qc_enabled": {
            "type": "boolean"
          },
          "is_self_ship": {
            "type": "boolean"
          },
          "is_own_account": {
            "type": "boolean"
          },
          "ndr_attempts": {
            "type": "integer"
          },
          "forward_pickup_cutoff": {
            "type": "string"
          },
          "reverse_pickup_cutoff": {
            "type": "string"
          }
        }
      },
      "Promise": {
        "type": "object",
        "properties": {
          "show_promise": {
            "type": "boolean",
            "description": "Indicates whether the promise details should be shown."
          },
          "timestamp": {
            "$ref": "#/components/schemas/TimeStampData"
          }
        },
        "description": "Schema for promise."
      },
      "PromiseDetails": {
        "type": "object",
        "properties": {
          "min": {
            "type": "string",
            "format": "date-time",
            "description": "Earliest delivery time."
          },
          "max": {
            "type": "string",
            "format": "date-time",
            "description": "Latest delivery time."
          }
        }
      },
      "Packaging": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the packaging."
          },
          "id": {
            "type": "string",
            "description": "The ID of the packaging."
          },
          "dimension": {
            "$ref": "#/components/schemas/PackagingDimension"
          }
        },
        "required": [
          "name",
          "id",
          "dimension"
        ]
      },
      "StorePromise": {
        "type": "object",
        "description": "Delivery promise details for a specific store.",
        "properties": {
          "uid": {
            "type": "integer",
            "description": "Unique identifier of a store."
          },
          "code": {
            "type": "string",
            "description": "Code assigned to a store."
          },
          "name": {
            "type": "string",
            "description": "Name of a store."
          },
          "promise": {
            "$ref": "#/components/schemas/PromiseDetails"
          }
        }
      },
      "GetPromiseDetails": {
        "type": "object",
        "description": "Delivery promise data including store-specific details and pagination info.",
        "properties": {
          "items": {
            "type": "array",
            "description": "List of delivery promises for each store.",
            "items": {
              "$ref": "#/components/schemas/StorePromise"
            }
          },
          "promise": {
            "$ref": "#/components/schemas/PromiseDetails"
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          }
        }
      },
      "ApefaceApiError": {
        "type": "object",
        "description": "Schema for generic api response.",
        "properties": {
          "message": {
            "type": "string",
            "description": "Contains any message related to the operation."
          },
          "success": {
            "type": "boolean",
            "description": "Indicates if the operation was successful."
          }
        }
      },
      "OrderingCurrency": {
        "type": "object",
        "description": "\"The object encapsulates all the essential information of ordering currency.\"",
        "properties": {
          "currency_code": {
            "x-not-enum": true,
            "type": "string",
            "description": "The international 3-letter code representing the currency."
          },
          "currency_name": {
            "type": "string",
            "description": "The full name of the currency."
          },
          "currency_symbol": {
            "type": "string",
            "description": "The graphical symbol used to denote the currency."
          },
          "currency_sub_unit": {
            "type": "string",
            "description": "The smaller unit of the currency for precise transactions."
          }
        }
      },
      "ShipmentRefundSummaryMeta": {
        "type": "object",
        "properties": {
          "utr": {
            "type": "string",
            "nullable": true,
            "description": "Indicates UTR number of the refund transaction"
          }
        }
      },
      "ShipmentRefundSummary": {
        "type": "object",
        "description": "\"Object that contains shipment refund summary information. Holds detailed payment details and  current refund status for each mode of payment.\"",
        "properties": {
          "amount": {
            "type": "number",
            "description": "Refund amount using this particular payment method."
          },
          "mode": {
            "type": "string",
            "description": "Stands for \"Mode of Payment\". This is a short code (like \"COD\" for Cash On Delivery) that represents the payment method used."
          },
          "mode_display_name": {
            "type": "string",
            "description": "The name of the payment method as it should be displayed to the user"
          },
          "refund_status": {
            "type": "string",
            "description": "Indicates the current status of the refund"
          },
          "refund_initiated_at": {
            "format": "date-time",
            "type": "string",
            "description": "Indicates UTC time at which the refund was initiated"
          },
          "refund_updated_at": {
            "format": "date-time",
            "type": "string",
            "description": "Indicates UTC time at which the refund was last updated"
          },
          "meta": {
            "$ref": "#/components/schemas/ShipmentRefundSummaryMeta"
          }
        }
      },
      "ShipmentRefundSummaryResponseSchema": {
        "type": "object",
        "description": "Array of objects containing shipment refund summary info",
        "properties": {
          "refund_summary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShipmentRefundSummary"
            }
          },
          "currency": {
            "$ref": "#/components/schemas/OrderingCurrency"
          }
        }
      },
      "RefundSubOption": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the refund sub-option"
          },
          "name": {
            "type": "string",
            "description": "Name of the refund sub-option"
          },
          "display_name": {
            "type": "string",
            "description": "Display name of the refund sub-option"
          },
          "is_active": {
            "type": "boolean",
            "description": "Whether the refund sub-option is active"
          }
        }
      },
      "RefundBreakup": {
        "type": "object",
        "properties": {
          "mode": {
            "type": "string",
            "description": "Specifies the method or channel through which the refund is divided or processed,  such as Online or Offline. This indicates how the refund amount is split across different refund methods."
          },
          "amount": {
            "type": "number",
            "format": "float",
            "description": "Amount for the refund breakup"
          },
          "display_name": {
            "type": "string",
            "description": "Display name for the refund breakup mode"
          },
          "offline": {
            "type": "boolean",
            "description": "Whether the breakup is offline"
          }
        }
      },
      "RefundOptionShipmentResponseSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the refund option"
          },
          "name": {
            "type": "string",
            "description": "Name of the refund option"
          },
          "display_name": {
            "type": "string",
            "description": "Display name of the refund option"
          },
          "is_active": {
            "type": "boolean",
            "description": "Whether the refund option is active"
          },
          "breakups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefundBreakup"
            },
            "description": "List of refund breakups (optional)"
          },
          "option": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefundSubOption"
            },
            "description": "List of sub-options for the refund option"
          },
          "offline": {
            "type": "boolean",
            "description": "Whether the refund option is offline"
          },
          "amount": {
            "type": "number",
            "format": "float",
            "description": "Amount for the refund option (optional)"
          }
        }
      },
      "CurrencySchema": {
        "description": "Schema for Order Details.",
        "type": "object",
        "properties": {
          "currency_code": {
            "x-not-enum": true,
            "type": "string",
            "description": "The ISO 4217 currency code, such as 'INR' for Indian Rupee. This field represents the standardized three-letter code of a currency."
          },
          "currency_symbol": {
            "type": "string",
            "description": "The symbol representing the currency, such as '₹' for Indian Rupee. This is used for display purposes alongside currency amounts."
          }
        }
      },
      "RefundOptionsSchemaResponseSchema": {
        "description": "This is response for RefundOptions API.",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencySchema"
          },
          "refund_options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefundOptionShipmentResponseSchema"
            }
          }
        }
      },
      "OrderPage": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Specifies type of pagination. If it is 'cursor' based or 'number' based."
          },
          "item_total": {
            "type": "integer",
            "description": "Total number of items available across all pages. It provides a count of all the items that match the query criteria, regardless of pagination."
          },
          "current": {
            "type": "integer",
            "description": "Specifies the current page number. It helps in identifying the position within the paginated results."
          },
          "size": {
            "type": "integer",
            "description": "Represents the number of items on the current page. It indicates how many items are included in each page of the paginated response."
          },
          "has_next": {
            "type": "boolean",
            "description": "Indicates whether there is a next page available. It is true if a next page exists and false if the current page is the last one."
          }
        },
        "description": "Schema for order's pagination."
      },
      "UserInfo": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "description": "First name of the user."
          },
          "gender": {
            "type": "string",
            "description": "Gender of the user."
          },
          "name": {
            "type": "string",
            "description": "Full name of the user (including first and last names)."
          },
          "last_name": {
            "type": "string",
            "description": "Last name of the user."
          },
          "mobile": {
            "type": "string",
            "description": "Mobile number of the user."
          },
          "email": {
            "type": "string",
            "description": "Email address of the user."
          },
          "user_id": {
            "type": "string",
            "description": "Unique identifier of the user."
          }
        },
        "description": "User Info."
      },
      "BreakupValues": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "description": "The numerical value associated with the entity."
          },
          "currency_symbol": {
            "type": "string",
            "description": "Symbol representing the currency used for the value."
          },
          "name": {
            "type": "string",
            "description": "The official name of the entity."
          },
          "display": {
            "type": "string",
            "description": "The name of the entity as it should be displayed."
          },
          "currency_code": {
            "type": "string",
            "description": "The international currency code representing the currency used for the value. This specifies the currency  code for all amounts. The currency_code field will hold a string value representing the code for the currency  in which all monetary amounts are denominated. This code typically follows the ISO 4217 standard, which uses  three-letter alphabetic codes to define different currencies around the world. For example, 'USD' for United  States Dollar, 'INR' for Indian Rupees.",
            "x-not-enum": true
          }
        },
        "description": "Breakup details of various charges and discounts."
      },
      "ShipmentPayment": {
        "type": "object",
        "properties": {
          "mop": {
            "type": "string",
            "description": "Abbreviation or code for the payment mode."
          },
          "payment_mode": {
            "type": "string",
            "description": "The specific payment mode used."
          },
          "status": {
            "type": "string",
            "description": "The current status of the payment."
          },
          "mode": {
            "type": "string",
            "description": "The payment mode."
          },
          "logo": {
            "type": "string",
            "description": "URL of the logo representing the payment mode."
          },
          "display_name": {
            "type": "string",
            "description": "The name to be displayed for the payment mode."
          }
        },
        "description": "An object containing payment details."
      },
      "PaymentInfo": {
        "type": "object",
        "description": "\"Array of objects containing payment methods used for placing an order.  Each object will provide information about corresponding payment method with relevant details.\"",
        "properties": {
          "mop": {
            "type": "string",
            "description": "Stands for \"Mode of Payment\". This is a short code (like \"COD\" for Cash On Delivery) that represents the payment method used."
          },
          "payment_mode": {
            "type": "string",
            "description": "Information about the payment mode, indicates whether COD or PREPAID"
          },
          "status": {
            "type": "string",
            "description": "Indicates the current status of the payment, Paid or Unpaid"
          },
          "mode": {
            "type": "string",
            "description": "Information about the payment source. For eg, NB_ICICI"
          },
          "logo": {
            "type": "string",
            "description": "A URL to an image representing the payment method"
          },
          "display_name": {
            "type": "string",
            "description": "The name of the payment method as it should be displayed to the user"
          },
          "amount": {
            "type": "number",
            "description": "Amount paid using this payment method"
          }
        }
      },
      "ShipmentUserInfo": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "description": "The unique identifier of the store."
          },
          "gender": {
            "type": "string",
            "description": "A code associated with the store."
          },
          "name": {
            "type": "string",
            "description": "The name of the store."
          },
          "last_name": {
            "type": "string",
            "description": "The name of the company associated with the store."
          },
          "mobile": {
            "type": "string",
            "description": "The identifier of the company associated with the store."
          },
          "email": {
            "type": "string",
            "description": "Email address of the user."
          },
          "user_id": {
            "type": "string",
            "description": "Unique identifier of the user."
          }
        },
        "description": "Schema for shipments user info."
      },
      "FulfillingStore": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The unique identifier of the store."
          },
          "code": {
            "type": "string",
            "description": "A code associated with the store."
          },
          "name": {
            "type": "string",
            "description": "The name of the store."
          },
          "company_name": {
            "type": "string",
            "description": "The name of the company associated with the store."
          },
          "company_id": {
            "type": "integer",
            "description": "The identifier of the company associated with the store."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Schema for fulfilling store."
      },
      "ChargeDistributionSchema": {
        "type": "object",
        "description": "Charge distribution structure, used to refer the distribution logic for the entity such as Order, shipment, article",
        "properties": {
          "type": {
            "type": "string",
            "description": "This field defines the distribution type, e.g values('multi', 'single')\n  multi: distribute the charges across all entity\n  single: distribute the charges across to any one single entity",
            "enum": [
              "multi",
              "single"
            ]
          },
          "logic": {
            "type": "string",
            "description": "This field defines the distribution logic e.g values('apportion', 'equally') apportion: distribute charge amount based of weighted average amount of all the entity (like article with\n           [10, 20] will get charge of 9 as [3, 6])\nequally: distribute charge amount 'equally' to all the entity"
          }
        },
        "required": [
          "type",
          "logic"
        ]
      },
      "ChargeDistributionLogic": {
        "type": "object",
        "description": "Charge amount distribution logic, config by which charge will assign to the entity or distribution_level",
        "properties": {
          "distribution": {
            "$ref": "#/components/schemas/ChargeDistributionSchema"
          },
          "distribution_level": {
            "type": "string",
            "description": "This field specifies the level of distribution, such as order, shipment, or article"
          }
        },
        "required": [
          "distribution",
          "distribution_level"
        ]
      },
      "ChargeAmountCurrency": {
        "type": "object",
        "description": "Charge amount currency currency schema",
        "properties": {
          "value": {
            "description": "Charge currency value or amount",
            "type": "number"
          },
          "currency": {
            "description": "Charge currency code",
            "type": "string"
          }
        },
        "required": [
          "value",
          "currency"
        ]
      },
      "ChargeAmount": {
        "type": "object",
        "description": "Charge amount schema, amount defined for the charges",
        "properties": {
          "base_currency": {
            "$ref": "#/components/schemas/ChargeAmountCurrency"
          },
          "ordering_currency": {
            "$ref": "#/components/schemas/ChargeAmountCurrency"
          }
        },
        "required": [
          "base_currency",
          "ordering_currency"
        ]
      },
      "PriceAdjustmentCharge": {
        "type": "object",
        "description": "Price adjustment charge injected, used to refer the charge injected for the entity such as Order, shipment, article",
        "properties": {
          "code": {
            "description": "Code defined for charge",
            "type": "string",
            "nullable": true
          },
          "name": {
            "description": "Display name for charge (charge is unique by the name)",
            "type": "string",
            "nullable": true
          },
          "type": {
            "description": "Type defined for charge",
            "type": "string",
            "nullable": true
          },
          "amount": {
            "$ref": "#/components/schemas/ChargeAmount"
          },
          "distribution_logic": {
            "$ref": "#/components/schemas/ChargeDistributionLogic"
          }
        },
        "required": [
          "amount",
          "distribution_logic"
        ]
      },
      "ShipmentStatus": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true,
            "description": "The internal or code value representing the shipment status."
          },
          "title": {
            "type": "string",
            "description": "The title or display name representing the shipment status."
          },
          "hex_code": {
            "type": "string",
            "description": "The hexadecimal color code associated with the shipment status. Each state of a shipment (like \"processing\", \"cancelled\", \"delivered\", etc.) is associated with a unique color, represented by a hex code. This color coding makes it visually intuitive for users to understand the status of their shipment at a glance.",
            "x-not-enum": true
          }
        },
        "description": "Schema for shipment status."
      },
      "Invoice": {
        "type": "object",
        "properties": {
          "invoice_url": {
            "type": "string",
            "description": "URL providing access to the invoice."
          },
          "store_invoice_id": {
            "type": "string",
            "nullable": true
          },
          "updated_date": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the invoice was last updated."
          },
          "label_url": {
            "type": "string",
            "description": "URL providing access to the invoice label."
          }
        },
        "description": "Schema for invoice."
      },
      "NestedTrackingDetails": {
        "type": "object",
        "properties": {
          "is_passed": {
            "type": "boolean",
            "description": "Indicates whether the tracking event has passed or occurred."
          },
          "time": {
            "type": "string",
            "description": "The time associated with the tracking event."
          },
          "is_current": {
            "type": "boolean",
            "description": "Indicates whether the tracking event is the current or active status."
          },
          "status": {
            "type": "string",
            "description": "The status of the tracking event."
          }
        },
        "description": "Schema for nested tracking details."
      },
      "TrackingDetails": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "value": {
            "type": "string",
            "nullable": true,
            "description": "Current value or state of the process."
          },
          "is_current": {
            "type": "boolean",
            "description": "Indicates whether the tracking event is the current or active status."
          },
          "is_passed": {
            "type": "boolean",
            "description": "Indicates whether the tracking event has passed or occurred."
          },
          "status": {
            "type": "string",
            "description": "The status of the tracking event."
          },
          "time": {
            "type": "string",
            "description": "The time associated with the tracking event."
          },
          "created_ts": {
            "type": "string",
            "description": "Timestamp when this status was created."
          },
          "tracking_details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NestedTrackingDetails"
            },
            "description": "Nested tracking details."
          }
        },
        "description": "Schema for tracking details."
      },
      "TimeStampData": {
        "type": "object",
        "properties": {
          "min": {
            "type": "string",
            "description": "The minimum timestamp value."
          },
          "max": {
            "type": "string",
            "description": "The maximum timestamp value."
          },
          "dp_promise": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Schema for time stamp data."
      },
      "ShipmentTotalDetails": {
        "type": "object",
        "properties": {
          "pieces": {
            "type": "integer",
            "description": "The total number of pieces included."
          },
          "total_price": {
            "type": "number",
            "description": "The total price of the order or item."
          },
          "sizes": {
            "type": "integer",
            "description": "The number of different sizes included."
          }
        },
        "description": "Schema for shipment total details."
      },
      "Prices": {
        "type": "object",
        "properties": {
          "applied_emi_discount": {
            "type": "integer"
          },
          "applied_instant_discount": {
            "type": "integer"
          },
          "gift_price": {
            "type": "integer"
          },
          "delivery_charge": {
            "type": "number",
            "description": "The delivery charge for the order."
          },
          "coupon_value": {
            "type": "number",
            "description": "The value of the coupon applied."
          },
          "brand_calculated_amount": {
            "type": "number",
            "description": "The amount calculated by the brand."
          },
          "value_of_good": {
            "type": "number",
            "description": "The value of the goods before tax and other charges."
          },
          "price_marked": {
            "type": "number",
            "description": "The original marked price of the item."
          },
          "coupon_effective_discount": {
            "type": "number",
            "description": "The effective discount from coupons."
          },
          "currency_symbol": {
            "type": "string",
            "description": "The symbol of the currency used."
          },
          "discount": {
            "type": "number",
            "description": "The discount applied to the item."
          },
          "gst_tax_percentage": {
            "type": "number",
            "description": "The GST tax percentage applied."
          },
          "cod_charges": {
            "type": "number",
            "description": "The cash on delivery charges, if applicable."
          },
          "amount_paid": {
            "type": "number",
            "description": "The total amount paid by the customer."
          },
          "added_to_fynd_cash": {
            "type": "boolean",
            "description": "Indicates if the refund amount was added to Fynd Cash."
          },
          "transfer_price": {
            "type": "number",
            "description": "The transfer price of the item."
          },
          "cashback_applied": {
            "type": "number",
            "description": "The amount of cashback applied."
          },
          "price_effective": {
            "type": "number",
            "description": "The effective price after all adjustments."
          },
          "cashback": {
            "type": "number",
            "description": "The cashback amount earned."
          },
          "refund_credit": {
            "type": "number",
            "description": "The amount credited for refund ."
          },
          "amount_paid_roundoff": {
            "type": "number",
            "description": "The rounded-off amount paid by the customer."
          },
          "promotion_effective_discount": {
            "type": "number",
            "description": "The effective discount from promotions."
          },
          "refund_amount": {
            "type": "number",
            "description": "The amount refunded to the customer."
          },
          "currency_code": {
            "type": "string",
            "description": "This specifies the currency code for all amounts. The currency_code field will hold a string value representing the code for the currency in which all monetary amounts are denominated. This code typically follows the ISO 4217 standard, which uses three-letter alphabetic codes to define different currencies around the world. For example, 'USD' for United States Dollar, 'INR' for Indian Rupees.",
            "x-not-enum": true
          },
          "fynd_credits": {
            "type": "number",
            "description": "The amount of Fynd credits used."
          },
          "amount_to_be_collected": {
            "type": "number",
            "description": "The total amount that needs to be collected from the customer."
          }
        },
        "description": "Schema for prices."
      },
      "ItemBrand": {
        "type": "object",
        "properties": {
          "logo": {
            "type": "string",
            "description": "The URL of the brand's logo."
          },
          "name": {
            "type": "string",
            "description": "The name of the brand."
          }
        },
        "description": "Schema for brand within item."
      },
      "Item": {
        "type": "object",
        "properties": {
          "image": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of URLs pointing to images of the item."
          },
          "l1_categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of level 1 categories to which the item belongs."
          },
          "l2_category": {
            "type": "array",
            "description": "An array of level 2 categories to which the item belongs.",
            "items": {
              "type": "string",
              "x-not-enum": true
            }
          },
          "l2_category_id": {
            "type": "number",
            "description": "ID representing the level 2 category classification of the item"
          },
          "brand": {
            "$ref": "#/components/schemas/ItemBrand"
          },
          "seller_identifier": {
            "type": "string",
            "description": "The identifier for the seller ."
          },
          "code": {
            "type": "string",
            "description": "The code or SKU of the item."
          },
          "id": {
            "type": "number",
            "description": "The unique identifier of the item."
          },
          "name": {
            "type": "string",
            "description": "The name of the item."
          },
          "l3_category_name": {
            "type": "string",
            "description": "This key specifies the name of the third-level category under which the product is listed, offering a more detailed classification within the e-commerce platform's hierarchy."
          },
          "slug_key": {
            "type": "string",
            "description": "A unique key or identifier for the item slug."
          },
          "l2_categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of level 2 categories the item belongs to."
          },
          "size": {
            "type": "string",
            "description": "The size of the item."
          },
          "attributes": {
            "type": "object",
            "additionalProperties": true,
            "description": "An object containing various attributes of the item."
          },
          "variants": {
            "type": "object",
            "nullable": true,
            "additionalProperties": true,
            "description": "This represents different variants of items such as color, shade, material, storage variants, size and more."
          }
        },
        "description": "Schema for item."
      },
      "AppliedPromos": {
        "type": "object",
        "properties": {
          "mrp_promotion": {
            "type": "boolean",
            "description": "Indicates if the promotion is applied to the MRP."
          },
          "promotion_name": {
            "type": "string",
            "description": "The name of the promotion ."
          },
          "article_quantity": {
            "type": "number",
            "description": "The quantity of articles required to qualify for the promotion."
          },
          "promo_id": {
            "type": "string",
            "description": "The unique identifier for the promotion."
          },
          "amount": {
            "type": "number",
            "description": "The discount amount provided by the promotion."
          },
          "promotion_type": {
            "type": "string",
            "description": "Specifies the type of discount or deal applied to the current promotion, defining how the promotion modifies the price or adds value to the purchase. Each type represents a different promotional strategy - percentage- Discount by a percentage of the original price. - amount- Discount by a specific amount off the original price. - fixed_price- Sets the price to a specific fixed amount. - bogo- Buy One Get One or at a discount. - contract_price- Special pricing based on a contract or agreement. - shipping_price- Discount or deal related to the shipping cost. - ladder_price- Price changes based on quantity purchased. - bundle_price_percentage- Discount on a bundle purchase by a percentage. - bundle_price_amount- Discount on a bundle purchase by a specific amount. - bundle_amount_percentage- A percentage of the purchase amount is applied as a discount when buying in a bundle. - custom- A custom promotion not covered by other types. - free_gift_items- Free gift items are included with the purchase. - free_non_sellable_items- Free items that are not for sale are included with the purchase.",
            "enum": [
              "percentage",
              "amount",
              "fixed_price",
              "bogo",
              "contract_price",
              "shipping_price",
              "ladder_price",
              "bundle_price_percentage",
              "bundle_price_amount",
              "bundle_amount_percentage",
              "custom",
              "free_gift_items",
              "free_non_sellable_items"
            ]
          },
          "applied_free_articles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppliedFreeArticles"
            },
            "description": "An array containing details of free articles applied under the promotion."
          }
        },
        "description": "Schema for applied promos."
      },
      "Identifiers": {
        "type": "object",
        "properties": {
          "ean": {
            "type": "string",
            "description": "The European Article Number (EAN) of the item."
          },
          "sku_code": {
            "type": "string",
            "description": "The Stock Keeping Unit (SKU) code of the item - uniquely identifies each distinct product. SKUs are used to track inventory levels, facilitate accurate stocktaking, and streamline order fulfillment processes. This code is essential for inventory management, allowing for the differentiation between products based on attributes such as price, color, and size.",
            "x-not-enum": true
          }
        },
        "description": "An object containing identification details for the item."
      },
      "FinancialBreakup": {
        "type": "object",
        "properties": {
          "coupon_value": {
            "type": "number",
            "description": "The value of the coupon applied."
          },
          "delivery_charge": {
            "type": "number",
            "description": "The delivery charge for the order."
          },
          "brand_calculated_amount": {
            "type": "number",
            "description": "The amount calculated by the brand."
          },
          "value_of_good": {
            "type": "number",
            "description": "The value of the goods before tax and other charges."
          },
          "price_marked": {
            "type": "number",
            "description": "The original marked price of the item."
          },
          "coupon_effective_discount": {
            "type": "number",
            "description": "The effective discount from coupons."
          },
          "hsn_code": {
            "type": "string",
            "description": "The HSN Code (Harmonized System of Nomenclature Code) is an internationally standardized system for classifying goods. It is used in trade and commerce to identify products and services uniformly across different countries and industries. The system was developed by the World Customs Organization (WCO) and is widely used in customs processes and tax systems.",
            "x-not-enum": true
          },
          "discount": {
            "type": "number",
            "description": "The discount applied to the item."
          },
          "gst_tax_percentage": {
            "type": "number",
            "description": "The GST tax percentage applied ."
          },
          "cod_charges": {
            "type": "number",
            "description": "The cash on delivery charges, if applicable."
          },
          "amount_paid": {
            "type": "number",
            "description": "The total amount paid by the customer."
          },
          "added_to_fynd_cash": {
            "type": "boolean",
            "description": "Indicates if the refund amount was added to Fynd Cash."
          },
          "size": {
            "type": "string",
            "description": "The size of the item ."
          },
          "transfer_price": {
            "type": "number",
            "description": "The transfer price of the item."
          },
          "cashback_applied": {
            "type": "number",
            "description": "The amount of cashback applied."
          },
          "price_effective": {
            "type": "number",
            "description": "The effective price after all adjustments."
          },
          "cashback": {
            "type": "number",
            "description": "The cashback amount earned."
          },
          "refund_credit": {
            "type": "number",
            "description": "The amount credited for refund ."
          },
          "amount_paid_roundoff": {
            "type": "number",
            "description": "The rounded-off amount paid by the customer."
          },
          "total_units": {
            "type": "integer",
            "description": "The total number of units purchased."
          },
          "identifiers": {
            "$ref": "#/components/schemas/Identifiers"
          },
          "gst_tag": {
            "type": "string",
            "description": "The GST tag indicating the type of GST applied."
          },
          "item_name": {
            "type": "string",
            "description": "The name of the item."
          },
          "promotion_effective_discount": {
            "type": "number",
            "description": "The effective discount from promotions."
          },
          "gst_fee": {
            "type": "number",
            "description": "The GST fee applied to the item."
          },
          "refund_amount": {
            "type": "number",
            "description": "The amount refunded to the customer."
          },
          "fynd_credits": {
            "type": "number",
            "description": "The amount of Fynd credits used."
          },
          "amount_to_be_collected": {
            "type": "number",
            "description": "The total amount that needs to be collected from the customer."
          }
        },
        "description": "Financial breakup object."
      },
      "CurrentStatus": {
        "type": "object",
        "properties": {
          "updated_at": {
            "type": "string",
            "description": "The date and time when the status was last updated.",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "description": "The name or label indicating the current state or status."
          },
          "status": {
            "type": "string",
            "description": "The current status of the bag."
          },
          "journey_type": {
            "type": "string",
            "nullable": true,
            "description": "It is a type being used to represent the journey of shipment through the performed status transition. Forward Journey: The forward journey encompasses all the stages of shipping, including order  placement, packing, dispatch, in-transit updates, and delivery. Return Journey: Contrary to the forward journey, the return journey involves the process of  sending items back from the customer to the original sender or a designated return facility.",
            "enum": [
              "return",
              "forward",
              null
            ]
          }
        },
        "description": "Current status details."
      },
      "Bags": {
        "type": "object",
        "description": "Bag details.",
        "properties": {
          "delivery_date": {
            "type": "string",
            "nullable": true,
            "description": "The date and time when the item is expected to be delivered .",
            "format": "date-time"
          },
          "line_number": {
            "type": "integer",
            "description": "The line number of the item in the order."
          },
          "currency_symbol": {
            "type": "string",
            "description": "The symbol of the currency used."
          },
          "item": {
            "$ref": "#/components/schemas/Item"
          },
          "applied_promos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppliedPromos"
            },
            "description": "An array containing information about applied promotions."
          },
          "quantity": {
            "type": "number",
            "description": "The quantity of the item."
          },
          "prices": {
            "$ref": "#/components/schemas/Prices"
          },
          "can_cancel": {
            "type": "boolean",
            "description": "Indicates if the item can be canceled."
          },
          "can_return": {
            "type": "boolean",
            "description": "Indicates if the item can be returned."
          },
          "id": {
            "type": "integer",
            "description": "The unique identifier for the order item."
          },
          "returnable_date": {
            "type": "string",
            "nullable": true,
            "description": "The last date and time by which the item can be returned.",
            "format": "date-time"
          },
          "financial_breakup": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FinancialBreakup"
            },
            "description": "An array containing financial details of the item."
          },
          "parent_promo_bags": {
            "type": "object",
            "description": "An object containing details of parent promotional bags.",
            "additionalProperties": true
          },
          "meta": {
            "type": "object",
            "description": "It contains the additional properties related to shipment status transition like Kafka_emission_status, user_name, etc. Additionally it is dynamic.",
            "additionalProperties": true
          },
          "currency_code": {
            "type": "string",
            "description": "This specifies the currency code for all amounts. The currency_code field will hold a string value representing the code for the currency in which all monetary amounts are denominated. This code typically follows the ISO 4217 standard, which uses three-letter alphabetic codes to define different currencies around the world. For example, 'USD' for United States Dollar, 'INR' for Indian Rupees.",
            "x-not-enum": true
          },
          "seller_identifier": {
            "type": "string",
            "description": "The identifier for the seller."
          },
          "current_status": {
            "$ref": "#/components/schemas/CurrentStatus"
          },
          "article": {
            "$ref": "#/components/schemas/Article"
          },
          "charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceAdjustmentCharge"
            }
          }
        },
        "additionalProperties": true
      },
      "FulfillingCompany": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The unique identifier for the fulfilling company."
          },
          "name": {
            "type": "string",
            "description": "The name of the fulfilling company."
          }
        },
        "description": "Fulfilling company details."
      },
      "BagsForReorderArticleAssignment": {
        "type": "object",
        "properties": {
          "strategy": {
            "type": "string",
            "description": "The strategy used for article assignment."
          },
          "level": {
            "type": "string",
            "description": "The level at which the article assignment is made."
          }
        },
        "description": "An object containing details about the assignment of articles."
      },
      "BagsForReorder": {
        "type": "object",
        "properties": {
          "item_size": {
            "type": "string",
            "description": "The size of the item."
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity of the item."
          },
          "store_id": {
            "type": "integer",
            "description": "The identifier for the store."
          },
          "article_assignment": {
            "$ref": "#/components/schemas/BagsForReorderArticleAssignment"
          },
          "seller_id": {
            "type": "integer",
            "description": "The identifier for the seller."
          },
          "item_id": {
            "type": "integer",
            "description": "The unique identifier for the item."
          }
        },
        "description": "An array containing details of bags available for reorder."
      },
      "ConversionRate": {
        "type": "object",
        "properties": {
          "base": {
            "type": "string"
          },
          "rates": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "OrderSchema": {
        "type": "object",
        "properties": {
          "coupon_details": {
            "type": "array",
            "description": "An array of coupon details applied to the shipment.",
            "items": {
              "$ref": "#/components/schemas/CouponDetails"
            }
          },
          "total_shipments_in_order": {
            "type": "integer",
            "description": "The total number of shipments in the order."
          },
          "custom_cart_meta": {
            "type": "object",
            "additionalProperties": true
          },
          "gstin_code": {
            "type": "string",
            "description": "A GST Number (Goods and Services Tax Identification Number, often abbreviated as GSTIN) is a unique identifier assigned to a business or individual registered under the Goods and Services Tax (GST) system in countries like India. The GST number is essential for businesses to comply with tax regulations and for the government to track tax payments and returns.",
            "x-not-enum": true
          },
          "user_info": {
            "$ref": "#/components/schemas/UserInfo"
          },
          "breakup_values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BreakupValues"
            },
            "description": "An array containing the breakup of various charges and discounts."
          },
          "order_created_time": {
            "type": "string",
            "description": "The date and time when the order was created."
          },
          "order_created_ts": {
            "type": "string",
            "description": "The timestamp when the order was created."
          },
          "order_id": {
            "type": "string",
            "description": "The unique identifier for the order."
          },
          "shipments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Shipments"
            },
            "description": "An array containing details of individual shipments within the order."
          },
          "bags_for_reorder": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BagsForReorder"
            },
            "description": "Items to be added to the cart when reordering a previous purchase."
          },
          "charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceAdjustmentCharge"
            },
            "description": "An array containing details of bags available for reorder."
          },
          "custom_meta": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "nullable": true
          },
          "currency_info": {
            "$ref": "#/components/schemas/CurrencyInfo"
          },
          "is_validated": {
            "type": "boolean"
          },
          "meta": {
            "type": "object",
            "additionalProperties": true,
            "description": "An object containing additional metadata for the order."
          },
          "external_order_id": {
            "type": "string",
            "description": "Identifier of the order assigned by the application",
            "nullable": true
          },
          "payment_info": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentInfo"
            },
            "description": "Array of objects containing payment methods used for placing an order.  Each object will provide information about corresponding payment method with relevant details."
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencySchema"
          },
          "custom_json": {
            "type": "object",
            "nullable": true,
            "additionalProperties": true,
            "description": "An object containing additional metadata for the order, ensuring only the required fields are included as needed."
          }
        },
        "description": "Order details."
      },
      "OrderStatuses": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "description": "The value representing the selection."
          },
          "is_selected": {
            "type": "boolean",
            "description": "Indicates whether this option is currently selected."
          },
          "display": {
            "type": "string",
            "description": "The text to display ."
          }
        },
        "description": "An array containing the order statuses."
      },
      "OrderGlobalFilterOption": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "display_text": {
            "type": "string",
            "description": "Display text for the options"
          },
          "value": {
            "type": "string",
            "description": "value to be pass to the listing for the selected option"
          },
          "is_selected": {
            "type": "boolean",
            "description": "Flag indicating if the options is selected or not"
          }
        },
        "description": "Global Filter Option to be selected for the order listing"
      },
      "OrderGlobalFilter": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "display_test": {
            "type": "string",
            "description": "Display text for the Global filter"
          },
          "value": {
            "type": "string",
            "description": "Global filter value to be pass to api when selected"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderGlobalFilterOption"
            },
            "description": "Global Filter Options"
          }
        },
        "description": "Order listing global filters"
      },
      "OrderFilters": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderStatuses"
            },
            "description": "An array containing the order statuses."
          }
        },
        "description": "Order filters."
      },
      "OrderList": {
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/OrderPage"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderSchema"
            },
            "description": "List of orders, each containing detailed information about individual orders and their respective shipments."
          },
          "filters": {
            "$ref": "#/components/schemas/OrderFilters"
          }
        },
        "description": "Schema for order listing."
      },
      "OrderById": {
        "type": "object",
        "properties": {
          "order": {
            "$ref": "#/components/schemas/OrderSchema"
          }
        },
        "description": "Schema for Order Details."
      },
      "ShipmentById": {
        "type": "object",
        "description": "Data of shipment.",
        "properties": {
          "shipment": {
            "$ref": "#/components/schemas/Shipments"
          }
        }
      },
      "ResponseGetInvoiceShipment": {
        "type": "object",
        "properties": {
          "presigned_type": {
            "type": "string",
            "description": "Type of presigned URL.",
            "enum": [
              "GET",
              "PUT"
            ]
          },
          "success": {
            "type": "boolean",
            "description": "Indicates if the operation was successful ."
          },
          "shipment_id": {
            "type": "string",
            "description": "Unique identifier for the shipment."
          },
          "presigned_url": {
            "type": "string",
            "description": "The presigned URL for accessing the shipment data, obtained from the response data."
          },
          "entity_id": {
            "type": "string"
          },
          "expires_in": {
            "type": "integer"
          },
          "url": {
            "type": "string"
          }
        },
        "required": [
          "presigned_type",
          "presigned_url",
          "shipment_id",
          "success"
        ],
        "description": "Get invoice shipment response."
      },
      "Track": {
        "type": "object",
        "properties": {
          "account_name": {
            "type": "string",
            "description": "The name of the account handling the shipment."
          },
          "shipment_type": {
            "type": "string",
            "description": "Journey Type of the Shipment.",
            "enum": [
              "forward",
              "reverse",
              "rto"
            ]
          },
          "status": {
            "type": "string",
            "description": "The current status of the shipment."
          },
          "last_location_recieved_at": {
            "type": "string",
            "description": "The last known location of the shipment.",
            "x-not-date": true
          },
          "updated_time": {
            "type": "string",
            "description": "The timestamp of the last update."
          },
          "updated_at": {
            "type": "string",
            "description": "The date and time when the shipment was last updated.",
            "format": "date-time"
          },
          "reason": {
            "type": "string",
            "description": "The reason or additional information about the shipment."
          },
          "awb": {
            "type": "string",
            "description": "The Air Waybill (AWB) number for the shipment."
          },
          "raw_status": {
            "type": "string"
          },
          "meta": {
            "type": "object",
            "additionalProperties": true,
            "description": "A field to store additional metadata related to the courier partner's operations or the shipment."
          }
        },
        "description": "Individual shipment track details."
      },
      "ShipmentTrack": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "meta": {
            "type": "object",
            "nullable": true,
            "additionalProperties": true
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Track"
            },
            "description": "A array containing tracking details."
          }
        },
        "description": "Shipment tracking details."
      },
      "CustomerDetailsResponseSchema": {
        "type": "object",
        "properties": {
          "phone": {
            "type": "string",
            "description": "Customer's phone number."
          },
          "shipment_id": {
            "type": "string",
            "description": "Unique identifier of the shipment."
          },
          "name": {
            "type": "string",
            "description": "Customer's name."
          },
          "order_id": {
            "type": "string",
            "description": "Unique identifier of the order."
          },
          "country": {
            "type": "string",
            "description": "Country of the customer."
          }
        },
        "description": "Schema for customer details response."
      },
      "SendOtpToCustomerResponseSchema": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "Unique identifier for the request."
          },
          "message": {
            "type": "string",
            "description": "Message indicating the result of the request."
          },
          "success": {
            "type": "boolean",
            "description": "Indicates whether the request was successful."
          },
          "resend_timer": {
            "type": "integer",
            "description": "Time in seconds before the OTP can be resent."
          }
        },
        "description": "Schema for send otp."
      },
      "VerifyOtp": {
        "type": "object",
        "properties": {
          "otp_code": {
            "type": "string",
            "description": "The OTP code provided by the user for verification.",
            "x-not-enum": true
          },
          "request_id": {
            "type": "string",
            "description": "Unique identifier for the request."
          }
        },
        "description": "Schema for OTP verification."
      },
      "VerifyOtpResponseSchema": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the request was successful."
          },
          "message": {
            "type": "string",
            "description": "Error message indicating if the verification data is expired or if the request is malformed, helping to diagnose and address issues with the verification process."
          }
        },
        "description": "Schema for verifying otp response."
      },
      "BagReasonMeta": {
        "type": "object",
        "description": "Additional metadata related to the reason, which may include specific conditions or configurations.",
        "additionalProperties": true,
        "properties": {
          "show_text_area": {
            "type": "boolean",
            "description": "Indicates whether to display a text box on the front end."
          }
        }
      },
      "QuestionSet": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The unique identifier for the question."
          },
          "display_name": {
            "type": "string",
            "description": "The text displayed for the question.",
            "nullable": false
          }
        }
      },
      "BagReasons": {
        "type": "object",
        "properties": {
          "qc_type": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "doorstep_qc",
                "pre_qc"
              ]
            },
            "description": "List of QC (Quality Control) types -- having return reason types indicating the stage at which QC is performed. - \"Doorstep QC\" refers involves inspecting products for damages at the customer's location before delivery. - \"Pre QC\" requires customers to upload product photos for a preliminary quality check by the operations team before a return or exchange pickup is arranged, ensuring criteria are met and optimizing logistics."
          },
          "id": {
            "type": "integer",
            "description": "A unique identifier for the bag reason."
          },
          "display_name": {
            "type": "string",
            "description": "The display name for the bag reason, used for user-facing purposes."
          },
          "meta": {
            "$ref": "#/components/schemas/BagReasonMeta"
          },
          "question_set": {
            "type": "array",
            "description": "An array of question sets linked to the bag reason, defining the questions to be answered.",
            "items": {
              "$ref": "#/components/schemas/QuestionSet"
            }
          },
          "reasons": {
            "type": "array",
            "description": "An array of nested bag reasons that can further explain the primary reason.",
            "items": {
              "$ref": "#/components/schemas/BagReasons"
            }
          }
        }
      },
      "ShipmentBagReasons": {
        "type": "object",
        "properties": {
          "reasons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BagReasons"
            },
            "nullable": false,
            "description": "A list of reasons associated with the action, detailing the circumstances under which  the rule is applied."
          },
          "success": {
            "type": "boolean",
            "description": "Indicates whether the API call was successful (true) or not (false).",
            "nullable": false
          },
          "rule_id": {
            "type": "integer",
            "nullable": true,
            "description": "The unique identifier for the rule that is associated with the given reasons. This ID serves as a reference  to the specific rule within the RMA system that governs or influences the reasons listed.",
            "example": 12
          }
        }
      },
      "ShipmentReason": {
        "type": "object",
        "properties": {
          "priority": {
            "type": "integer",
            "description": "The priority level of the reason."
          },
          "show_text_area": {
            "type": "boolean",
            "description": "A flag indicating whether to show a textbox on the frontend."
          },
          "reason_id": {
            "type": "integer",
            "description": "The unique identifier for the reason."
          },
          "feedback_type": {
            "type": "string",
            "description": "The type of feedback.",
            "enum": [
              "bag",
              "order"
            ]
          },
          "reason_text": {
            "type": "string",
            "description": "The text describing the reason."
          },
          "flow": {
            "type": "string",
            "description": "The process flow related to the reason."
          }
        },
        "description": "Individual shipment reason details."
      },
      "ShipmentReasons": {
        "type": "object",
        "properties": {
          "reasons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShipmentReason"
            },
            "description": "A list of shipment reasons."
          }
        },
        "description": "Schema for shipment reasons."
      },
      "ProductsReasonsData": {
        "type": "object",
        "properties": {
          "reason_id": {
            "type": "integer",
            "description": "The unique identifier for the reason."
          },
          "reason_text": {
            "type": "string",
            "description": "The text describing the reason."
          }
        },
        "description": "Product reasons details."
      },
      "ProductsReasonsFilters": {
        "type": "object",
        "properties": {
          "line_number": {
            "type": "integer",
            "description": "The specific line item of bag."
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity of the product."
          },
          "identifier": {
            "type": "string",
            "description": "The unique identifier for the product."
          }
        },
        "description": "Reasons data for bags filters."
      },
      "ProductsReasons": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ProductsReasonsData"
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductsReasonsFilters"
            },
            "description": "Criteria applied to filter the products."
          }
        },
        "description": "Reasons data for bags."
      },
      "EntityReasonData": {
        "type": "object",
        "properties": {
          "reason_id": {
            "type": "integer",
            "description": "The unique identifier for the reason."
          },
          "reason_text": {
            "type": "string",
            "description": "The text describing the reason."
          }
        },
        "description": "Information about the reason."
      },
      "EntitiesReasons": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EntityReasonData"
          },
          "filters": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Criteria applied to filter the shipment."
          }
        },
        "description": "Schema for entity reasons."
      },
      "ReasonsData": {
        "type": "object",
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductsReasons"
            },
            "description": "Reasons data for bags."
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntitiesReasons"
            },
            "description": "Reasons data for shipments."
          }
        },
        "description": "Schema for reasons data."
      },
      "Products": {
        "type": "object",
        "properties": {
          "line_number": {
            "type": "integer",
            "description": "The specific line item of bag."
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity of the product."
          },
          "identifier": {
            "type": "string",
            "description": "The unique identifier for the product."
          }
        },
        "description": "Schema for products."
      },
      "ProductsDataUpdatesFilters": {
        "type": "object",
        "properties": {
          "line_number": {
            "type": "integer",
            "format": "int32",
            "description": "Represents the specific line item within a bag, used to identify and reference a particular product in a list. This helps in pinpointing the exact item being updated or processed."
          },
          "identifier": {
            "type": "string",
            "description": "A unique string that serves as the product’s identifier, such as a SKU, barcode, or another distinct code.  This ensures the product is correctly identified and distinguished from other items in the system."
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "description": "The quantity of the product or item, specified as an integer. This indicates how many units  of the product are being referenced or processed, such as the number of items in a bag or shipment."
          }
        },
        "description": "Schema for products filters."
      },
      "ProductsDataUpdates": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "Information about the data to be updated.",
            "additionalProperties": true
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductsDataUpdatesFilters"
            },
            "description": "Criteria applied to filter the products."
          }
        },
        "description": "Schema for product data updates."
      },
      "EntitiesDataUpdates": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "Information about the data to be updated.",
            "additionalProperties": true
          },
          "filters": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Criteria applied to filter the shipments."
          }
        },
        "description": "Schema for entity data updates."
      },
      "DataUpdates": {
        "type": "object",
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductsDataUpdates"
            },
            "description": "Data updates for bags."
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntitiesDataUpdates"
            },
            "description": "Data updates for shipments."
          }
        },
        "description": "Data to be updated."
      },
      "ShipmentsRequestSchema": {
        "type": "object",
        "properties": {
          "reasons": {
            "$ref": "#/components/schemas/ReasonsData"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Products"
            },
            "description": "Specific bag to be updated."
          },
          "data_updates": {
            "$ref": "#/components/schemas/DataUpdates"
          },
          "identifier": {
            "type": "string",
            "description": "The unique identifier for request which is the shipment_id."
          }
        },
        "required": [
          "identifier"
        ],
        "description": "Shipment Info."
      },
      "StatuesRequestSchema": {
        "type": "object",
        "properties": {
          "shipments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShipmentsRequestSchema"
            },
            "description": "A list containing information about shipments."
          },
          "exclude_bags_next_state": {
            "type": "string",
            "description": "State to be change for Remaining Bag/Products."
          },
          "status": {
            "type": "string",
            "description": "The status to which the entity is to be transitioned."
          }
        },
        "description": "Schema for statuses."
      },
      "OrderRequestSchema": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "description": "Metadata for the order.",
            "additionalProperties": true
          },
          "external_order_id": {
            "type": "string",
            "description": "Identifier of the order assigned by the application",
            "nullable": true
          }
        },
        "description": "An object containing meta-information about the order."
      },
      "UpdateShipmentStatusRequestSchema": {
        "type": "object",
        "properties": {
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatuesRequestSchema"
            },
            "description": "An array detailing the various statuses that the requester wants to transition to, with each entry representing a distinct status. Each status object includes comprehensive details about the status, product specifics, reasons for the status (if applicable), and any updates to shipment or product data."
          },
          "task": {
            "type": "boolean",
            "description": "Indicates whether the task is active or required."
          },
          "lock_after_transition": {
            "type": "boolean",
            "description": "Indicates whether the status should be locked after the transition."
          },
          "force_transition": {
            "type": "boolean",
            "description": "Indicates whether the transition should be forced."
          },
          "unlock_before_transition": {
            "type": "boolean",
            "description": "Indicates whether the status should be unlocked before the transition."
          }
        },
        "description": "Schema for update shipment status request."
      },
      "StatusesBodyResponseSchema": {
        "type": "object",
        "properties": {
          "shipments": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "List of shipments."
          }
        },
        "description": "Schema for Statuses body response."
      },
      "ShipmentApplicationStatusResponseSchema": {
        "type": "object",
        "properties": {
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatusesBodyResponseSchema"
            },
            "description": "An array containing different status options of shipments."
          }
        },
        "description": "Schema for Shipment Application Status Response."
      },
      "AggregatorConfigDetail": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "sdk": {
            "type": "boolean",
            "nullable": true,
            "description": "Flag, whether to use sdk or not."
          },
          "secret": {
            "type": "string",
            "description": "Masked payment gateway api secret."
          },
          "api": {
            "type": "string",
            "format": "url",
            "nullable": true,
            "description": "Payment gateway api endpoint."
          },
          "pin": {
            "type": "string",
            "nullable": true,
            "description": "Masked pin."
          },
          "config_type": {
            "x-not-enum": true,
            "type": "string",
            "enum": [
              "self",
              "fynd"
            ],
            "description": "Fynd or self payment gateway."
          },
          "merchant_key": {
            "type": "string",
            "nullable": true,
            "description": "Unique merchant key."
          },
          "verify_api": {
            "type": "string",
            "format": "url",
            "nullable": true,
            "description": "Payment gateway verify payment api endpoint."
          },
          "key": {
            "type": "string",
            "description": "Payment gateway api key."
          },
          "user_id": {
            "type": "string",
            "nullable": true,
            "description": "Registered User id."
          },
          "merchant_id": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "description": "Unique merchant id."
          },
          "api_domain": {
            "type": "string",
            "format": "url",
            "nullable": true,
            "description": "Payment gateway api endpoint."
          },
          "webhook_username": {
            "type": "string"
          },
          "webhook_password": {
            "type": "string"
          },
          "signature_key": {
            "type": "string"
          },
          "merchant_salt": {
            "type": "string"
          },
          "checkout_formpost_url": {
            "type": "string"
          },
          "refund_api_domain": {
            "type": "string"
          },
          "non_trxn_url": {
            "type": "string"
          },
          "trxn_url": {
            "type": "string"
          },
          "webhook_secret": {
            "type": "string"
          },
          "is_sub_fynd_account": {
            "type": "string",
            "nullable": true
          },
          "vpa": {
            "type": "string"
          },
          "api_key": {
            "type": "string"
          },
          "secret_key": {
            "type": "string"
          },
          "product_id": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "is_active": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "type": "string"
              }
            ]
          }
        },
        "description": "Aggregator config detail schema."
      },
      "AggregatorsConfigDetail": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Api response was successful or not."
          },
          "razorpay": {
            "$ref": "#/components/schemas/AggregatorConfigDetail"
          },
          "juspay": {
            "$ref": "#/components/schemas/AggregatorConfigDetail"
          },
          "simpl": {
            "$ref": "#/components/schemas/AggregatorConfigDetail"
          },
          "payumoney": {
            "$ref": "#/components/schemas/AggregatorConfigDetail"
          },
          "rupifi": {
            "$ref": "#/components/schemas/AggregatorConfigDetail"
          },
          "mswipe": {
            "$ref": "#/components/schemas/AggregatorConfigDetail"
          },
          "stripe": {
            "$ref": "#/components/schemas/AggregatorConfigDetail"
          },
          "ccavenue": {
            "$ref": "#/components/schemas/AggregatorConfigDetail"
          },
          "ajiodhan": {
            "$ref": "#/components/schemas/AggregatorConfigDetail"
          },
          "potlee": {
            "$ref": "#/components/schemas/AggregatorConfigDetail"
          },
          "qr_refund_jiopay": {
            "$ref": "#/components/schemas/AggregatorConfigDetail"
          },
          "offerxone": {
            "$ref": "#/components/schemas/AggregatorConfigDetail"
          },
          "env": {
            "type": "string",
            "description": "Environment i.e Live or Test."
          }
        },
        "additionalProperties": true,
        "required": [
          "env",
          "success"
        ],
        "description": "Aggregators Config details Response."
      },
      "ErrorCodeAndDescription": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Error description code."
          },
          "description": {
            "type": "string",
            "description": "Error human understandable description."
          }
        },
        "required": [
          "description"
        ],
        "description": "A standard error message for HTTP codes."
      },
      "HttpErrorCodeDetails": {
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ErrorCodeAndDescription"
          },
          "success": {
            "type": "boolean",
            "description": "Response is successful or not."
          }
        },
        "required": [
          "success"
        ],
        "description": "A standard response format for HTTP codes."
      },
      "PaymentErrorCodeAndMessage": {
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/PaymentError"
          },
          "success": {
            "type": "boolean",
            "description": "Response is successful or not."
          },
          "error_msg": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PaymentOptionErrorDetails": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "error": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "success": {
            "type": "boolean",
            "description": "Response is successful or not."
          }
        },
        "required": [
          "success"
        ]
      },
      "PaymentPOSOptionErrorDetails": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "error": {
            "$ref": "#/components/schemas/PaymentError"
          },
          "success": {
            "type": "boolean",
            "description": "Response is successful or not."
          }
        },
        "required": [
          "success"
        ]
      },
      "OrderErrorDetails": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ErrorDetails"
          },
          "success": {
            "type": "boolean",
            "description": "Response is successful or not."
          }
        },
        "required": [
          "success"
        ]
      },
      "PaymentError": {
        "type": "object",
        "properties": {
          "order_id": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "order_type": {
            "type": "array",
            "items": {
              "x-not-enum": true,
              "type": "string"
            }
          },
          "transaction_amount_in_paise": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AttachCard": {
        "type": "object",
        "properties": {
          "nickname": {
            "type": "string",
            "default": "",
            "description": "Nickname of the card holder."
          },
          "refresh": {
            "type": "boolean",
            "nullable": true,
            "description": "Refresh cache flag."
          },
          "card_id": {
            "type": "string",
            "description": "Card token of payment gateway."
          },
          "name_on_card": {
            "type": "string",
            "default": "",
            "description": "Name of the card holder."
          }
        },
        "required": [
          "card_id"
        ],
        "description": "A card request to be attached to the customer."
      },
      "AttachCardsDetails": {
        "type": "object",
        "properties": {
          "data": {
            "additionalProperties": true,
            "type": "object",
            "description": "List of cards of customer."
          },
          "success": {
            "type": "boolean",
            "description": "Response is successful or not."
          },
          "message": {
            "type": "string",
            "description": "Human readable message."
          },
          "status": {
            "type": "integer",
            "description": "Numeric code representing the status."
          }
        },
        "required": [
          "success"
        ],
        "description": "A customer attached cards listing."
      },
      "CardPaymentGateway": {
        "type": "object",
        "properties": {
          "api": {
            "type": "string",
            "nullable": true,
            "description": "Payment gateway CARD api endpoint."
          },
          "aggregator": {
            "type": "string",
            "description": "Payment gateway name."
          },
          "customer_id": {
            "type": "string",
            "nullable": true,
            "description": "Aggregator customer id."
          }
        },
        "required": [
          "aggregator"
        ],
        "description": "A payment gateway card response."
      },
      "ActiveCardPaymentGatewayDetails": {
        "type": "object",
        "properties": {
          "cards": {
            "$ref": "#/components/schemas/CardPaymentGateway"
          },
          "success": {
            "type": "boolean",
            "description": "Response is successful or not."
          },
          "message": {
            "type": "string",
            "description": "Human readable message."
          }
        },
        "required": [
          "cards",
          "message",
          "success"
        ],
        "description": "Active payment gateway cards response."
      },
      "Card": {
        "type": "object",
        "properties": {
          "card_number": {
            "type": "string",
            "nullable": true,
            "description": "Card number mentioned on the card."
          },
          "card_name": {
            "type": "string",
            "nullable": true,
            "description": "Name mentioned on the card."
          },
          "card_type": {
            "x-not-enum": true,
            "type": "string",
            "nullable": true,
            "description": "Type of the card."
          },
          "card_brand_image": {
            "type": "string",
            "format": "url",
            "nullable": true,
            "description": "Brand image on the card."
          },
          "card_reference": {
            "type": "string",
            "nullable": true,
            "description": "Card reference."
          },
          "card_issuer": {
            "type": "string",
            "nullable": true,
            "description": "Issuer of the card."
          },
          "card_brand": {
            "type": "string",
            "nullable": true,
            "description": "Brand of the card."
          },
          "expired": {
            "type": "boolean",
            "nullable": true,
            "description": "Card expiry."
          },
          "compliant_with_tokenisation_guidelines": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether card is tokenized or not."
          },
          "card_isin": {
            "type": "string",
            "nullable": true,
            "description": "International Securities Identification Number for the card."
          },
          "exp_year": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "description": "Card's expiration year."
          },
          "nickname": {
            "type": "string",
            "nullable": true,
            "description": "User-defined name for the card."
          },
          "aggregator_name": {
            "type": "string",
            "description": "Name of the payment aggregator."
          },
          "card_fingerprint": {
            "type": "string",
            "nullable": true,
            "description": "Unique fingerprint of the card for identification."
          },
          "card_token": {
            "type": "string",
            "nullable": true,
            "description": "Encrypted token representing the card."
          },
          "exp_month": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "description": "Card's expiration month."
          },
          "card_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique identifier for the card saved at aggregators end."
          }
        },
        "required": [
          "aggregator_name"
        ],
        "description": "Card response."
      },
      "ListCardsDetails": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List of cards of customer.",
            "items": {
              "$ref": "#/components/schemas/Card"
            }
          },
          "success": {
            "type": "boolean",
            "description": "Response is successful or not."
          },
          "message": {
            "type": "string",
            "description": "Human readable message."
          }
        },
        "required": [
          "message",
          "success"
        ],
        "description": "List card response."
      },
      "DeleteCard": {
        "type": "object",
        "properties": {
          "card_id": {
            "type": "string",
            "description": "Card token of payment gateway."
          }
        },
        "required": [
          "card_id"
        ],
        "description": "Delete card request."
      },
      "DeleteCardsDetails": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "nullable": true,
            "description": "Response is successful or not."
          },
          "message": {
            "type": "string",
            "nullable": true,
            "description": "Human readable message."
          },
          "status": {
            "type": "integer",
            "description": "Numeric code representing the status."
          }
        },
        "description": "Delete Cards Response."
      },
      "ValidateCustomer": {
        "type": "object",
        "properties": {
          "aggregator": {
            "type": "string",
            "description": "Payment gateway name in camelcase i.e Simple, Rupifi."
          },
          "transaction_amount_in_paise": {
            "type": "integer",
            "format": "int32",
            "description": "Payable amount in paise."
          },
          "phone_number": {
            "type": "string",
            "description": "User mobile number without country code."
          },
          "billing_address": {
            "additionalProperties": true,
            "type": "object",
            "description": "billing address"
          },
          "order_items": {
            "type": "array",
            "description": "order items",
            "items": {
              "type": "object"
            }
          },
          "payload": {
            "type": "string",
            "nullable": true,
            "description": "Hashed payload string."
          },
          "merchant_params": {
            "additionalProperties": true,
            "type": "object",
            "description": "merchant parameters, these will be used for customer approaval i.e order-id, restaurant-address, delivery latitude and longitude"
          },
          "delivery_address": {
            "additionalProperties": true,
            "type": "object",
            "description": "delivery addresses"
          }
        },
        "required": [
          "aggregator",
          "phone_number",
          "transaction_amount_in_paise"
        ],
        "description": "Validate customer by request."
      },
      "ValidateCustomerDetails": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValidateCustomerInfo"
          },
          "success": {
            "type": "boolean",
            "description": "Response is successful or not."
          },
          "message": {
            "type": "string",
            "description": "Error or success message."
          },
          "error": {
            "$ref": "#/components/schemas/ValidateCustomerInfo"
          }
        },
        "required": [
          "message",
          "success"
        ],
        "description": "Validate Customer Response."
      },
      "ValidateCustomerInfo": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValidateCustomerData"
          },
          "aggregator": {
            "type": "string"
          },
          "api_version": {
            "type": "integer"
          }
        }
      },
      "ValidateCustomerData": {
        "type": "object",
        "properties": {
          "approved": {
            "type": "boolean"
          },
          "button_text": {
            "type": "string"
          },
          "first_transaction": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "amount": {
            "type": "integer"
          },
          "user_id": {
            "type": "string"
          },
          "customer_mobile_number": {
            "type": "string"
          },
          "total_credited_balance": {
            "type": "number"
          },
          "is_cn_locked": {
            "type": "boolean"
          },
          "total_locked_amount": {
            "type": "number"
          },
          "allowed_redemption_amount": {
            "type": "number"
          }
        }
      },
      "ChargeCustomer": {
        "type": "object",
        "properties": {
          "verified": {
            "type": "boolean",
            "nullable": true,
            "description": "Already Verified flag from payment gateway i.e Mswipe."
          },
          "aggregator": {
            "type": "string",
            "description": "Payment gateway name i.e Simpl, Mswipe."
          },
          "order_id": {
            "type": "string",
            "description": "Merchant order id i.e. FY670260630EA88A8FD5"
          },
          "transaction_token": {
            "type": "string",
            "nullable": true,
            "description": "Transaction token of payment gateway."
          },
          "amount": {
            "type": "integer",
            "format": "int32",
            "description": "Chargeable amount of order."
          }
        },
        "required": [
          "aggregator",
          "amount"
        ],
        "description": "Charge Customer Request."
      },
      "ChargeCustomerDetails": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of charged payment."
          },
          "cart_id": {
            "type": "array",
            "nullable": true,
            "description": "Cart id of customer.",
            "items": {
              "nullable": true,
              "type": "string"
            }
          },
          "success": {
            "type": "boolean",
            "description": "Response is successful or not."
          },
          "aggregator": {
            "type": "string",
            "description": "Payment gateway name i.e Simpl, Mswipe."
          },
          "message": {
            "type": "string",
            "description": "Human readable message."
          },
          "order_id": {
            "type": "string",
            "description": "Merchant order id i.e. FY670260630EA88A8FD5"
          },
          "delivery_address_id": {
            "type": "string",
            "nullable": true,
            "description": "Delivery address id of customer."
          }
        },
        "required": [
          "aggregator",
          "message",
          "order_id",
          "status",
          "success"
        ],
        "description": "Charge Customer Response."
      },
      "PaymentInitialization": {
        "type": "object",
        "properties": {
          "razorpay_payment_id": {
            "type": "string",
            "nullable": true,
            "description": "Payment gateway payment id."
          },
          "method": {
            "type": "string",
            "description": "Payment method."
          },
          "device_id": {
            "type": "string",
            "nullable": true,
            "description": "EDC machine Unique Identifier."
          },
          "aggregator": {
            "type": "string",
            "description": "Payment gateway name."
          },
          "customer_id": {
            "type": "string",
            "description": "Aggregator customer id."
          },
          "contact": {
            "type": "string",
            "description": "Customer valid mobile number."
          },
          "merchant_order_id": {
            "type": "string",
            "description": "Unique fynd order id."
          },
          "merchant_transaction_id": {
            "type": "string",
            "description": "Unique fynd transaction id."
          },
          "vpa": {
            "type": "string",
            "nullable": true,
            "description": "Customer vpa address."
          },
          "order_id": {
            "type": "string",
            "description": "Payment gateway order id."
          },
          "currency": {
            "type": "string",
            "description": "Currency code."
          },
          "timeout": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "description": "Payment polling timeout if not received response in seconds."
          },
          "amount": {
            "type": "integer",
            "format": "int32",
            "description": "Payable amount."
          },
          "email": {
            "type": "string",
            "description": "Customer valid email."
          },
          "unique_link_id": {
            "type": "string",
            "description": "Payment link id."
          }
        },
        "required": [
          "customer_id",
          "merchant_order_id",
          "method"
        ],
        "description": "Payment Initialization Request."
      },
      "PaymentInitializationDetails": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of payment."
          },
          "razorpay_payment_id": {
            "type": "string",
            "nullable": true,
            "description": "Payment  id."
          },
          "aggregator_order_id": {
            "type": "string",
            "description": "Payment order id."
          },
          "method": {
            "type": "string",
            "description": "Payment method."
          },
          "success": {
            "type": "boolean",
            "description": "Response is successful or not."
          },
          "upi_poll_url": {
            "type": "string",
            "nullable": true,
            "description": "UPI poll url."
          },
          "virtual_id": {
            "type": "string",
            "nullable": true,
            "description": "Payment virtual address."
          },
          "device_id": {
            "type": "string",
            "nullable": true,
            "description": "EDC machine Unique Identifier."
          },
          "polling_url": {
            "type": "string",
            "description": "Polling url."
          },
          "aggregator": {
            "type": "string",
            "description": "Payment gateway name."
          },
          "merchant_order_id": {
            "type": "string",
            "description": "Order id."
          },
          "merchant_transaction_id": {
            "type": "string",
            "description": "Unique fynd transaction id."
          },
          "customer_id": {
            "type": "string",
            "nullable": true,
            "description": "Aggregator customer id."
          },
          "vpa": {
            "type": "string",
            "nullable": true,
            "description": "Customer vpa address."
          },
          "currency": {
            "type": "string",
            "nullable": true,
            "description": "Currency code."
          },
          "timeout": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "description": "Timeout in seconds for payment."
          },
          "amount": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "description": "Payable amount."
          },
          "bqr_image": {
            "type": "string",
            "nullable": true,
            "description": "Bharat qr image url."
          },
          "unique_link_id": {
            "type": "string"
          },
          "status_code": {
            "type": "string",
            "nullable": true,
            "x-not-enum": true,
            "description": "status code of the payment."
          }
        },
        "required": [
          "aggregator",
          "merchant_order_id",
          "method",
          "polling_url",
          "success"
        ],
        "description": "Payment Initialization Response."
      },
      "PaymentStatusUpdate": {
        "type": "object",
        "properties": {
          "aggregator_order_id": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "description": "Status of payment."
          },
          "merchant_transaction_id": {
            "type": "string",
            "description": "Unique fynd transaction id."
          },
          "method": {
            "type": "string",
            "description": "Payment method."
          },
          "device_id": {
            "type": "string",
            "nullable": true,
            "description": "EDC machine Unique Identifier."
          },
          "aggregator": {
            "type": "string",
            "description": "Payment gateway name."
          },
          "customer_id": {
            "type": "string",
            "description": "Aggregator customer id."
          },
          "contact": {
            "type": "string",
            "description": "Customer valid mobile number."
          },
          "merchant_order_id": {
            "type": "string",
            "description": "Unique fynd order id."
          },
          "vpa": {
            "type": "string",
            "description": "Customer vpa address."
          },
          "order_id": {
            "type": "string",
            "description": "Payment gateway order id."
          },
          "currency": {
            "type": "string",
            "description": "Currency code."
          },
          "amount": {
            "type": "integer",
            "format": "int32",
            "description": "Payable amount."
          },
          "email": {
            "type": "string",
            "description": "Customer valid email."
          },
          "unique_link_id": {
            "type": "string"
          },
          "razorpay_payment_id": {
            "type": "string",
            "description": "Razorpay generated payment gateway transaction id, if aggregator is Razorpay"
          },
          "merchant_url": {
            "type": "string",
            "description": "Redirect to this, upon payment success/fail, if method is PAYMENTLINK"
          }
        },
        "required": [
          "aggregator",
          "amount",
          "merchant_order_id",
          "method",
          "order_id",
          "status"
        ],
        "description": "Payment Status Update Request."
      },
      "PaymentStatusUpdateDetails": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Payment status."
          },
          "success": {
            "type": "boolean",
            "nullable": true,
            "description": "Response is successful or not."
          },
          "retry": {
            "type": "boolean",
            "description": "Response is successful or not."
          },
          "redirect_url": {
            "type": "string",
            "nullable": true,
            "description": "Redirect url."
          },
          "aggregator_name": {
            "type": "string",
            "description": "Payment gateway name."
          }
        },
        "required": [
          "aggregator_name",
          "status"
        ],
        "description": "Payment status update response."
      },
      "IntentAppErrorList": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true,
            "description": "Code of the intent App."
          },
          "package_name": {
            "type": "string",
            "nullable": true,
            "description": "Package Name of the intent App."
          }
        },
        "description": "Intent App Error List."
      },
      "PaymentModeLogo": {
        "type": "object",
        "properties": {
          "large": {
            "type": "string",
            "format": "url",
            "description": "Large Logo."
          },
          "small": {
            "type": "string",
            "format": "url",
            "description": "Small Logo."
          }
        },
        "required": [
          "large",
          "small"
        ],
        "description": "Payment Mode Logo."
      },
      "IntentApp": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true,
            "description": "Code of the intent App."
          },
          "package_name": {
            "type": "string",
            "nullable": true,
            "description": "Package Name of the intent App."
          },
          "logos": {
            "$ref": "#/components/schemas/PaymentModeLogo"
          },
          "display_name": {
            "type": "string",
            "nullable": true,
            "description": "Display Name of the intent App."
          }
        },
        "description": "Intent App."
      },
      "ProductCODData": {
        "type": "object",
        "nullable": true,
        "properties": {
          "items": {
            "type": "object",
            "nullable": true,
            "description": "Item id with its cod availability.",
            "additionalProperties": true
          },
          "cod_charges": {
            "$ref": "#/components/schemas/CODChargesLimitsDetails"
          }
        }
      },
      "CODChargesLimitsDetails": {
        "type": "object",
        "properties": {
          "max_cart_value": {
            "type": "number",
            "nullable": true,
            "description": "Max allowed cart value for cod order."
          },
          "min_cart_value": {
            "type": "number",
            "nullable": true,
            "description": "Min allowed cart value for cod order."
          },
          "cod_charge": {
            "type": "number",
            "nullable": true,
            "description": "Cod charges to be applied on order."
          }
        }
      },
      "PaymentModeList": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": true,
            "nullable": true,
            "description": "Payment methods meta."
          },
          "collect_flow": {
            "type": "boolean"
          },
          "provider": {
            "type": "string",
            "nullable": true
          },
          "wallet_name": {
            "type": "string",
            "nullable": true
          },
          "wallet_code": {
            "type": "string",
            "x-not-enum": true,
            "nullable": true
          },
          "wallet_id": {
            "type": "integer",
            "nullable": true
          },
          "bank_name": {
            "type": "string",
            "nullable": true
          },
          "bank_code": {
            "type": "string",
            "nullable": true,
            "x-not-enum": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "remaining_limit": {
            "type": "number",
            "nullable": true,
            "description": "Remaining available limit on the card."
          },
          "card_brand": {
            "type": "string",
            "nullable": true,
            "description": "Brand of the card (e.g., Visa, MasterCard)."
          },
          "card_fingerprint": {
            "type": "string",
            "nullable": true,
            "description": "Unique fingerprint of the card for identification."
          },
          "merchant_code": {
            "x-not-enum": true,
            "type": "string",
            "nullable": true,
            "description": "Unique code identifying the merchant."
          },
          "intent_flow": {
            "type": "boolean",
            "nullable": true,
            "description": "Flow or process intended for the transaction."
          },
          "code": {
            "type": "string",
            "nullable": true,
            "description": "General code for identifying a transaction or status."
          },
          "card_issuer": {
            "type": "string",
            "nullable": true,
            "description": "Issuing bank or institution of the card."
          },
          "cod_limit_per_order": {
            "type": "number",
            "nullable": true,
            "description": "Maximum limit per order for COD transactions."
          },
          "card_reference": {
            "type": "string",
            "nullable": true,
            "description": "Reference identifier for the card."
          },
          "card_type": {
            "type": "string",
            "nullable": true,
            "description": "Type of the card (e.g., debit, credit).",
            "x-not-enum": true
          },
          "card_isin": {
            "type": "string",
            "nullable": true,
            "description": "International Securities Identification Number for the card."
          },
          "exp_month": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "description": "Card's expiration month."
          },
          "fynd_vpa": {
            "type": "string",
            "nullable": true,
            "description": "Virtual Payment Address (VPA) used by Fynd."
          },
          "card_number": {
            "type": "string",
            "nullable": true,
            "description": "Card number mentioned on the card."
          },
          "display_priority": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "description": "Priority of display in the user interface."
          },
          "display_name": {
            "type": "string",
            "nullable": true,
            "description": "Display name for the card in the user interface."
          },
          "card_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique identifier for the card within the system."
          },
          "retry_count": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "description": "Number of retry attempts."
          },
          "card_name": {
            "type": "string",
            "nullable": true,
            "description": "Name printed on the card."
          },
          "timeout": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "description": "Timeout duration for transactions."
          },
          "intent_app_error_dict_list": {
            "type": "array",
            "nullable": true,
            "description": "List of error dictionaries related to intent app.",
            "items": {
              "$ref": "#/components/schemas/IntentAppErrorList"
            }
          },
          "card_brand_image": {
            "type": "string",
            "format": "url",
            "nullable": true,
            "description": "Image representing the card brand."
          },
          "expired": {
            "type": "boolean",
            "nullable": true,
            "description": "Indicates whether the card is expired."
          },
          "logo_url": {
            "$ref": "#/components/schemas/PaymentModeLogo"
          },
          "card_token": {
            "type": "string",
            "nullable": true,
            "description": "Encrypted token representing the card."
          },
          "aggregator_name": {
            "type": "string",
            "description": "Name of the payment aggregator."
          },
          "cod_charges": {
            "type": "number",
            "nullable": true,
            "description": "Cod charges to be applied on order."
          },
          "product_cod_data": {
            "$ref": "#/components/schemas/ProductCODData"
          },
          "cod_limit": {
            "type": "number",
            "nullable": true,
            "description": "Limit for Cash on Delivery (COD) transactions."
          },
          "intent_app": {
            "type": "array",
            "nullable": true,
            "description": "Application intended for handling the transaction.",
            "items": {
              "$ref": "#/components/schemas/IntentApp"
            }
          },
          "nickname": {
            "type": "string",
            "nullable": true,
            "description": "User-defined name for the card."
          },
          "compliant_with_tokenisation_guidelines": {
            "type": "boolean",
            "nullable": true,
            "description": "Indicates compliance with tokenization guidelines."
          },
          "exp_year": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "description": "Card's expiration year."
          },
          "name": {
            "type": "string",
            "nullable": true,
            "description": "User's name."
          },
          "intent_app_error_list": {
            "type": "array",
            "nullable": true,
            "description": "List of errors associated with the intent app.",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": true,
        "required": [
          "aggregator_name"
        ],
        "description": "Payment Mode List Data."
      },
      "RootPaymentMode": {
        "type": "object",
        "properties": {
          "is_pay_by_card_pl": {
            "type": "boolean",
            "nullable": true,
            "description": "This flag will be true in case of Payment link payment through card."
          },
          "add_card_enabled": {
            "type": "boolean",
            "nullable": true,
            "description": "Save card option is allowed at backend or not, based on customer authentication and checkout mode."
          },
          "display_priority": {
            "type": "integer",
            "format": "int32",
            "description": "Display Priority."
          },
          "display_name": {
            "type": "string",
            "description": "Payment mode display name."
          },
          "list": {
            "type": "array",
            "description": "Payment mode.",
            "items": {
              "$ref": "#/components/schemas/PaymentModeList"
            }
          },
          "save_card": {
            "type": "boolean",
            "nullable": true,
            "description": "Card save or not."
          },
          "aggregator_name": {
            "type": "string",
            "nullable": true,
            "description": "Display Priority."
          },
          "name": {
            "type": "string",
            "description": "Payment mode name."
          },
          "anonymous_enable": {
            "type": "boolean",
            "nullable": true,
            "description": "Anonymous card flag."
          },
          "payment_mode_id": {
            "type": "integer",
            "nullable": true,
            "description": "Payment mode id."
          },
          "logo_url": {
            "$ref": "#/components/schemas/PaymentModeLogo"
          },
          "version": {
            "$ref": "#/components/schemas/Version"
          }
        },
        "required": [
          "display_name",
          "display_priority",
          "name"
        ],
        "description": "Root Payment Mode Schema."
      },
      "PaymentConfig": {
        "type": "object",
        "properties": {
          "redirect": {
            "type": "boolean",
            "nullable": true
          },
          "final_payment_action_url": {
            "type": "string",
            "nullable": true
          },
          "callback_url": {
            "type": "string",
            "nullable": true
          },
          "action_url": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "GatewayData": {
        "type": "object",
        "nullable": true,
        "properties": {
          "route": {
            "type": "string",
            "nullable": true
          },
          "entity": {
            "type": "string",
            "nullable": true
          },
          "is_customer_validation_required": {
            "type": "boolean",
            "nullable": true
          },
          "cust_validation_url": {
            "type": "string",
            "nullable": true
          },
          "sdk": {
            "$ref": "#/components/schemas/SDKDetails"
          },
          "return_url": {
            "type": "string",
            "nullable": true
          },
          "user_email": {
            "type": "string",
            "nullable": true
          },
          "user_phone": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SDKDetails": {
        "type": "object",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/SDKConfig"
          },
          "data": {
            "$ref": "#/components/schemas/UserData"
          }
        }
      },
      "SDKConfig": {
        "type": "object",
        "properties": {
          "redirect": {
            "type": "boolean",
            "nullable": true
          },
          "callback_url": {
            "type": "string",
            "nullable": true
          },
          "action_url": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UserData": {
        "type": "object",
        "properties": {
          "user_phone": {
            "type": "string",
            "nullable": true
          },
          "user_email": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PaymentFlowData": {
        "type": "object",
        "properties": {
          "is_customer_validation_required": {
            "type": "boolean"
          },
          "cust_validation_url": {
            "type": "string",
            "nullable": true
          },
          "config": {
            "$ref": "#/components/schemas/PaymentConfig"
          },
          "data": {
            "$ref": "#/components/schemas/GatewayData"
          },
          "return_url": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AggregatorRouteData": {
        "type": "object",
        "nullable": true,
        "properties": {
          "gateway": {
            "$ref": "#/components/schemas/GatewayData"
          },
          "payment_flow_data": {
            "$ref": "#/components/schemas/PaymentFlowData"
          },
          "data": {
            "$ref": "#/components/schemas/GatewayData"
          },
          "payment_flow": {
            "type": "string",
            "nullable": true
          },
          "api_link": {
            "type": "string",
            "nullable": true
          },
          "route": {
            "type": "string",
            "nullable": true
          },
          "entity": {
            "type": "string",
            "nullable": true
          },
          "is_customer_validation_required": {
            "type": "boolean"
          },
          "cust_validation_url": {
            "type": "string",
            "nullable": true
          },
          "sdk": {
            "$ref": "#/components/schemas/SDKDetails"
          },
          "return_url": {
            "type": "string",
            "nullable": true
          },
          "user_email": {
            "type": "string",
            "nullable": true
          },
          "user_phone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "AggregatorRoute": {
        "type": "object",
        "nullable": true,
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AggregatorRouteData"
          },
          "payment_flow_data": {
            "additionalProperties": true,
            "type": "object",
            "nullable": true,
            "description": "Payment_flow_data."
          },
          "payment_flow": {
            "type": "string",
            "nullable": true,
            "description": "Payment_flow."
          },
          "api_link": {
            "type": "string",
            "format": "url",
            "nullable": true,
            "description": "API link of the aggregator."
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "Aggregator Route."
      },
      "PaymentFlow": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "bqr_razorpay": {
            "$ref": "#/components/schemas/AggregatorRoute"
          },
          "fynd": {
            "$ref": "#/components/schemas/AggregatorRoute"
          },
          "epaylater": {
            "$ref": "#/components/schemas/AggregatorRoute"
          },
          "razorpay": {
            "$ref": "#/components/schemas/AggregatorRoute"
          },
          "juspay": {
            "$ref": "#/components/schemas/AggregatorRoute"
          },
          "ajiodhan": {
            "$ref": "#/components/schemas/AggregatorRoute"
          },
          "simpl": {
            "$ref": "#/components/schemas/AggregatorRoute"
          },
          "rupifi": {
            "$ref": "#/components/schemas/AggregatorRoute"
          },
          "mswipe": {
            "$ref": "#/components/schemas/AggregatorRoute"
          },
          "stripe": {
            "$ref": "#/components/schemas/AggregatorRoute"
          },
          "ccavenue": {
            "$ref": "#/components/schemas/AggregatorRoute"
          },
          "payubiz": {
            "$ref": "#/components/schemas/AggregatorRoute"
          },
          "jiopay": {
            "$ref": "#/components/schemas/AggregatorRoute"
          },
          "jio": {
            "$ref": "#/components/schemas/AggregatorRoute"
          },
          "payumoney": {
            "$ref": "#/components/schemas/AggregatorRoute"
          },
          "openapi": {
            "$ref": "#/components/schemas/AggregatorRoute"
          },
          "potlee": {
            "$ref": "#/components/schemas/AggregatorRoute"
          },
          "upi_razorpay": {
            "$ref": "#/components/schemas/AggregatorRoute"
          },
          "creditnote": {
            "$ref": "#/components/schemas/AggregatorRoute"
          },
          "pinelabs": {
            "$ref": "#/components/schemas/AggregatorRoute"
          },
          "checkout": {
            "$ref": "#/components/schemas/AggregatorRoute"
          },
          "cashfree": {
            "$ref": "#/components/schemas/AggregatorRoute"
          },
          "jio_extension": {
            "$ref": "#/components/schemas/AggregatorRoute"
          },
          "offerxone": {
            "$ref": "#/components/schemas/AggregatorRoute"
          }
        },
        "description": "Payment flow object."
      },
      "PaymentOptionAndFlow": {
        "type": "object",
        "properties": {
          "payment_option": {
            "type": "array",
            "description": "Payment options.",
            "items": {
              "$ref": "#/components/schemas/RootPaymentMode"
            }
          },
          "payment_flows": {
            "$ref": "#/components/schemas/PaymentFlow"
          }
        },
        "required": [
          "payment_flows",
          "payment_option"
        ],
        "description": "Payment option and flow object."
      },
      "AdvanceObject": {
        "type": "object",
        "nullable": true,
        "description": "Advance Payment Config - object can change according to config.",
        "properties": {
          "is_active": {
            "type": "boolean",
            "nullable": true,
            "description": "Is Advance Payment active."
          },
          "amount": {
            "type": "number",
            "format": "float",
            "description": "Amount for Payment Breakdown."
          },
          "time_unit": {
            "type": "string",
            "nullable": true,
            "description": "Time unit for refunds."
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "The description for Advance Payment (user configured)."
          },
          "display_name": {
            "type": "string",
            "nullable": true,
            "description": "The display name for Advance payment."
          },
          "prepayment_type": {
            "x-not-enum": true,
            "type": "string",
            "nullable": true,
            "description": "Type of prepayment value."
          },
          "prepayment_value": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "Value for prepayment in advance payment."
          },
          "cancellation_type": {
            "x-not-enum": true,
            "type": "string",
            "nullable": true,
            "description": "Type of cancellation."
          },
          "refund_time_limit": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "Time limit for processing refund."
          },
          "all_prepayment_type": {
            "x-not-enum": true,
            "type": "array",
            "description": "All available types of prepayment.",
            "nullable": true,
            "items": {
              "x-not-enum": true,
              "type": "string",
              "nullable": true,
              "description": "Contains a valid prepayment type"
            }
          },
          "all_cancellation_type": {
            "type": "array",
            "description": "All available types of cancellation.",
            "nullable": true,
            "items": {
              "x-not-enum": true,
              "type": "string",
              "nullable": true,
              "description": "Contains a valid cancellation type"
            }
          },
          "allow_custom_advance_amount": {
            "type": "boolean",
            "nullable": true,
            "description": "Is custom advance amount allowed?."
          }
        }
      },
      "SplitObject": {
        "type": "object",
        "nullable": true,
        "description": "Split Payment config.",
        "properties": {
          "total_number_of_splits": {
            "type": "number",
            "format": "integer",
            "nullable": true,
            "description": "Maximum amount of splits allowed."
          },
          "splits_remaining": {
            "type": "number",
            "nullable": true,
            "format": "integer",
            "description": "Number of splits remaining."
          },
          "amount_remaining": {
            "type": "number",
            "nullable": true,
            "format": "float",
            "description": "Amount pending to be paid."
          }
        }
      },
      "AdvancePaymentObject": {
        "type": "object",
        "description": "Advance Payment Object - Contains payment option data and config for advance and split payment.",
        "properties": {
          "version": {
            "$ref": "#/components/schemas/Version"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "description": "Name of Advance Payment Mode."
          },
          "display_priority": {
            "type": "number",
            "format": "integer",
            "nullable": true,
            "description": "Display Priority for Payment Option."
          },
          "payment_mode_id": {
            "type": "number",
            "format": "integer",
            "nullable": true,
            "description": "Payment Mode ID for Advance Payment Option."
          },
          "display_name": {
            "type": "string",
            "nullable": true,
            "description": "Display name for Advance Payment Mode."
          },
          "list": {
            "type": "array",
            "nullable": true,
            "description": "Payment mode.",
            "items": {
              "$ref": "#/components/schemas/PaymentModeList"
            }
          },
          "split": {
            "$ref": "#/components/schemas/SplitObject"
          },
          "advance": {
            "$ref": "#/components/schemas/AdvanceObject"
          }
        }
      },
      "PaymentModeRouteDetails": {
        "type": "object",
        "properties": {
          "payment_options": {
            "$ref": "#/components/schemas/PaymentOptionAndFlow"
          },
          "success": {
            "type": "boolean",
            "description": "Response is successful or not."
          },
          "payment_breakup": {
            "additionalProperties": true,
            "type": "object",
            "description": "Payment Breakup for advance payment."
          },
          "advance_payment": {
            "type": "array",
            "description": "Advance Payment Array.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AdvancePaymentObject"
            }
          }
        },
        "required": [
          "payment_options",
          "success"
        ],
        "description": "Single payment option with flow and split values."
      },
      "WalletLinkRequestSchema": {
        "type": "object",
        "properties": {
          "aggregator": {
            "type": "string",
            "description": "Aggregator Name."
          },
          "mobile": {
            "type": "string",
            "description": "Mobile Number for Wallet."
          },
          "wallet_code": {
            "x-not-enum": true,
            "type": "string",
            "description": "Wallet Code."
          }
        },
        "required": [
          "mobile",
          "wallet_code"
        ],
        "description": "Wallet Link Request schema."
      },
      "WalletVerifyRequestSchema": {
        "type": "object",
        "properties": {
          "aggregator": {
            "type": "string",
            "description": "Aggregator Name."
          },
          "link_token": {
            "type": "string",
            "description": "Token for wallet linking."
          },
          "otp": {
            "type": "integer",
            "description": "OTP received for wallet linking."
          }
        },
        "required": [
          "link_token",
          "otp"
        ],
        "description": "Wallet Verification Request Schema."
      },
      "WalletDelinkRequestSchema": {
        "type": "object",
        "properties": {
          "aggregator": {
            "type": "string",
            "description": "Aggregator Name."
          },
          "wallet_code": {
            "x-not-enum": true,
            "type": "string",
            "description": "Wallet Code."
          },
          "wallet_id": {
            "type": "string",
            "description": "Identifier for the linked wallet"
          }
        },
        "required": [
          "wallet_code"
        ],
        "description": "Wallet Dellinking Request schema."
      },
      "WalletResponseSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/WalletResponseData"
          },
          "success": {
            "type": "boolean",
            "description": "Success/Failure of the API call."
          }
        },
        "required": [
          "data",
          "success"
        ],
        "description": "Wallet Response Schema."
      },
      "WalletResponseData": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "link_token": {
            "type": "string"
          }
        }
      },
      "RupifiBannerData": {
        "type": "object",
        "nullable": true,
        "properties": {
          "status": {
            "type": "string",
            "description": "Rupifi KYC status."
          },
          "kyc_url": {
            "type": "string",
            "description": "Rupifi KYC banner url."
          }
        },
        "description": "Rupifi Banner Data."
      },
      "RupifiBannerDetails": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RupifiBannerData"
          },
          "success": {
            "type": "boolean",
            "description": "Successful or not."
          }
        },
        "required": [
          "success"
        ],
        "description": "Rupifi Banner Response."
      },
      "EpaylaterBannerData": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Epaylater KYC status."
          },
          "message": {
            "type": "string",
            "description": "EPayLater message."
          },
          "display": {
            "type": "boolean",
            "description": "Need to display banner or not."
          }
        },
        "required": [
          "display"
        ],
        "description": "Epaylater Banner Data."
      },
      "EpaylaterBannerDetails": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EpaylaterBannerData"
          },
          "success": {
            "type": "boolean",
            "description": "Successful or not."
          }
        },
        "required": [
          "data",
          "success"
        ],
        "description": "Epaylater Banner Response."
      },
      "ResendOrCancelPayment": {
        "type": "object",
        "properties": {
          "order_id": {
            "type": "string",
            "description": "Merchant order id i.e. FY670260630EA88A8FD5"
          },
          "device_id": {
            "type": "string",
            "nullable": true,
            "description": "EDC machine Unique Identifier."
          },
          "request_type": {
            "x-not-enum": true,
            "type": "string",
            "enum": [
              "resend",
              "cancel"
            ],
            "description": "Either resend or cancel."
          }
        },
        "required": [
          "order_id",
          "request_type"
        ],
        "description": "Resend or cancel payment request."
      },
      "LinkStatus": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Link action status."
          },
          "message": {
            "type": "string",
            "description": "Message."
          }
        },
        "required": [
          "status"
        ],
        "description": "Link status."
      },
      "ResendOrCancelPaymentDetails": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/LinkStatus"
          },
          "success": {
            "type": "boolean",
            "description": "Response is successful or not."
          }
        },
        "required": [
          "data",
          "success"
        ],
        "description": "Resend Or Cancel Payment Response."
      },
      "RenderHTML": {
        "type": "object",
        "properties": {
          "returntype": {
            "type": "string",
            "nullable": true,
            "description": "Return Type of API."
          },
          "base64_html": {
            "type": "string",
            "description": "Base64 encoded html string."
          }
        },
        "required": [
          "base64_html"
        ],
        "description": "Render HTML Request."
      },
      "RenderHTMLDetails": {
        "type": "object",
        "properties": {
          "html": {
            "type": "string",
            "description": "HTML string."
          }
        },
        "required": [
          "html"
        ],
        "description": "Render HTML Response."
      },
      "ValidateVPA": {
        "type": "object",
        "properties": {
          "upi_vpa": {
            "type": "string",
            "description": "UPI ID."
          },
          "aggregator": {
            "type": "string",
            "description": "Aggregator slug to use for validate"
          }
        },
        "required": [
          "upi_vpa"
        ],
        "description": "Validate VPA Request."
      },
      "ValidateUPI": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "description": "true / false."
          },
          "customer_name": {
            "type": "string",
            "description": "Customer Bank.",
            "nullable": true
          },
          "is_valid": {
            "type": "boolean",
            "description": "Boolean is true or false."
          },
          "upi_vpa": {
            "type": "string",
            "description": "UPI ID."
          }
        },
        "required": [
          "is_valid",
          "status",
          "upi_vpa"
        ],
        "description": "Validate UPI."
      },
      "ValidateVPADetails": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValidateUPI"
          },
          "success": {
            "type": "boolean",
            "description": "Response is successful or not."
          }
        },
        "required": [
          "data",
          "success"
        ],
        "description": "Validate VPA Response."
      },
      "CardDetails": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "description": "Current status of the card."
          },
          "country": {
            "type": "string",
            "description": "Country where the card was issued."
          },
          "bank_code": {
            "x-not-enum": true,
            "type": "string",
            "description": "Code identifying the bank."
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the record."
          },
          "card_exp_year": {
            "type": "string",
            "description": "Card's expiration year."
          },
          "card_brand": {
            "type": "string",
            "description": "Brand of the card (e.g., Visa, MasterCard)."
          },
          "type": {
            "type": "string",
            "description": "General type of the card (e.g., debit, credit)."
          },
          "card_sub_type": {
            "x-not-enum": true,
            "type": "string",
            "description": "Sub-type of the card (e.g., Platinum, Gold)."
          },
          "is_domestic_card": {
            "type": "boolean",
            "description": "Indicates whether the card is domestic."
          },
          "name_on_card": {
            "type": "string",
            "description": "Name of the cardholder."
          },
          "card_exp_month": {
            "type": "string",
            "description": "Card's expiration month."
          },
          "extended_card_type": {
            "x-not-enum": true,
            "type": "string",
            "description": "Extended type of the card, providing more specific classification."
          },
          "card_object": {
            "type": "string",
            "description": "Object representation of the card."
          },
          "card_token": {
            "type": "string",
            "description": "Encrypted token representing the card."
          },
          "user": {
            "type": "string",
            "description": "User associated with the card."
          },
          "bank": {
            "type": "string",
            "description": "Bank associated with the card."
          }
        },
        "required": [
          "bank",
          "bank_code",
          "card_brand",
          "card_object",
          "card_sub_type",
          "country",
          "extended_card_type",
          "id",
          "is_domestic_card",
          "status",
          "type"
        ],
        "description": "Card details."
      },
      "CardDetailsFetchedDetails": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CardDetails"
          },
          "success": {
            "type": "boolean",
            "description": "Response is successful or not."
          }
        },
        "required": [
          "data",
          "success"
        ],
        "description": "Card Details Response."
      },
      "TransferItemsDetails": {
        "type": "object",
        "nullable": true,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Id of the transfer item."
          },
          "display_name": {
            "type": "string",
            "description": "Beneficiary Display Name."
          },
          "logo_large": {
            "type": "string",
            "description": "Beneficiary large Logo."
          },
          "logo_small": {
            "type": "string",
            "description": "Beneficiary small Logo."
          },
          "name": {
            "type": "string",
            "description": "Beneficiary Name."
          }
        },
        "required": [
          "id",
          "logo_large",
          "logo_small",
          "name"
        ],
        "description": "Transfer Items Details."
      },
      "TransferModeDetails": {
        "type": "object",
        "properties": {
          "items": {
            "description": "Beneficiary Mode Items.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransferItemsDetails"
            }
          },
          "display_name": {
            "type": "string",
            "description": "Beneficiary Mode Name."
          }
        },
        "required": [
          "display_name",
          "items"
        ],
        "description": "Transfer Mode Details."
      },
      "TransferModeFetchDetails": {
        "type": "object",
        "properties": {
          "data": {
            "description": "Response Object.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransferModeDetails"
            }
          }
        },
        "required": [
          "data"
        ],
        "description": "Transfer Mode Response."
      },
      "UpdateRefundTransferMode": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean",
            "description": "True for enabling the Transfer Mode."
          },
          "transfer_mode": {
            "type": "string",
            "description": "Transfer Mode of the Beneficiary to be added."
          }
        },
        "required": [
          "enable",
          "transfer_mode"
        ],
        "description": "Update Refund Transfer Request."
      },
      "RefundTransferModeUpdateDetails": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Response is successful or not."
          }
        },
        "description": "Update Refund Transfer Moder response."
      },
      "OrderBeneficiaryDetails": {
        "type": "object",
        "properties": {
          "modified_on": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}[ T]\\d{2}:\\d{2}:\\d{2}(?:Z|[+-]\\d{2}:\\d{2})?$",
            "x-not-date": true,
            "type": "string",
            "description": "Modification Date of Beneficiary."
          },
          "account_no": {
            "type": "string",
            "description": "Account Number."
          },
          "mobile": {
            "type": "string",
            "description": "Mobile no of User."
          },
          "bank_name": {
            "type": "string",
            "description": "Bank Name Of Account."
          },
          "ifsc_code": {
            "x-not-enum": true,
            "type": "string",
            "description": "Ifsc Code Of Account."
          },
          "is_active": {
            "type": "boolean",
            "description": "Boolean Flag whether Beneficiary is active or not."
          },
          "beneficiary_id": {
            "type": "string",
            "description": "Beneficiary Id."
          },
          "account_holder": {
            "type": "string",
            "description": "Account Holder Name."
          },
          "email": {
            "type": "string",
            "description": "EMail of User."
          },
          "delights_user_name": {
            "type": "string",
            "nullable": true,
            "description": "User Id Who filled the Beneficiary."
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Id of the Order Beneficiary."
          },
          "transfer_mode": {
            "type": "string",
            "description": "Transfer Mode Of Account."
          },
          "branch_name": {
            "type": "string",
            "description": "Branch Name Of Account."
          },
          "created_on": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}[ T]\\d{2}:\\d{2}:\\d{2}(?:Z|[+-]\\d{2}:\\d{2})?$",
            "x-not-date": true,
            "type": "string",
            "description": "Creation Date of Beneficiary."
          },
          "subtitle": {
            "type": "string",
            "description": "SHort Title Of Account."
          },
          "comment": {
            "type": "string",
            "description": "Remarks."
          },
          "address": {
            "type": "string",
            "description": "Address of User."
          },
          "title": {
            "type": "string",
            "description": "Title Of Account."
          },
          "display_name": {
            "type": "string",
            "description": "Display Name Of Account."
          },
          "aggregator_id": {
            "nullable": true,
            "type": "string"
          },
          "is_verified": {
            "nullable": true,
            "type": "boolean"
          },
          "status": {
            "nullable": true,
            "type": "string"
          },
          "txn_id": {
            "nullable": true,
            "type": "string"
          },
          "meta": {
            "nullable": true,
            "type": "object",
            "additionalProperties": true
          },
          "default_beneficiary": {
            "nullable": true,
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "beneficiary_id",
          "bank_name",
          "branch_name",
          "account_holder",
          "account_no",
          "ifsc_code",
          "mobile",
          "email",
          "address",
          "comment",
          "is_active",
          "created_on",
          "modified_on",
          "display_name",
          "transfer_mode",
          "title",
          "subtitle"
        ],
        "description": "Order Beneficiary Details."
      },
      "OrderBeneficiaryFetchDetails": {
        "type": "object",
        "properties": {
          "beneficiaries": {
            "nullable": true,
            "description": "All Beneficiaries Of An Order.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderBeneficiaryDetails"
            }
          },
          "show_beneficiary_details": {
            "type": "boolean",
            "description": "Show beneficiary details or not."
          },
          "bank": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderBeneficiaryDetails"
            }
          }
        },
        "description": "Order Beneficiary Response."
      },
      "NotFoundResourceError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Bad Request Data."
          },
          "description": {
            "type": "string",
            "description": "Not Found."
          },
          "success": {
            "type": "boolean",
            "description": "Response is successful or not."
          }
        },
        "required": [
          "code",
          "description",
          "success"
        ],
        "description": "Not found response resource error."
      },
      "IfscCodeDetails": {
        "type": "object",
        "properties": {
          "branch_name": {
            "type": "string",
            "description": "Branch Name Of Account."
          },
          "success": {
            "type": "boolean",
            "description": "Response is successful or not."
          },
          "bank_name": {
            "type": "string",
            "description": "Bank Name Of Account."
          }
        },
        "additionalProperties": true,
        "description": "IFSC Code response."
      },
      "ErrorCodeDescription": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Error description code."
          },
          "description": {
            "type": "string",
            "description": "Error human understandable description."
          },
          "success": {
            "type": "boolean",
            "description": "Response is successful or not."
          }
        },
        "required": [
          "code",
          "description",
          "success"
        ],
        "description": "Error code description."
      },
      "AddBeneficiaryViaOtpVerification": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "Request id."
          },
          "hash_key": {
            "type": "string",
            "description": "Hash key of the beneficiary Id."
          },
          "otp": {
            "type": "string",
            "description": "Otp sent to the given Mobile No."
          }
        },
        "required": [
          "hash_key",
          "otp",
          "request_id"
        ],
        "description": "Add Beneficiary Via Otp Verification Request."
      },
      "AddBeneficiaryViaOtpVerificationDetails": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Response is successful or not."
          },
          "message": {
            "type": "string",
            "description": "Aggregator Response of beneficiary."
          }
        },
        "description": "Add Beneficiary Via Otp Verification Response."
      },
      "WrongOtpError": {
        "type": "object",
        "properties": {
          "is_verified_flag": {
            "type": "boolean",
            "description": "Verified flag."
          },
          "description": {
            "type": "string",
            "description": "Wrong OTP Code."
          },
          "success": {
            "type": "boolean",
            "description": "Response is successful or not."
          },
          "message": {
            "type": "string",
            "description": "Response message."
          }
        },
        "required": [
          "success"
        ],
        "description": "Wrong OTP Error."
      },
      "BeneficiaryModeDetails": {
        "type": "object",
        "properties": {
          "account_no": {
            "type": "string",
            "description": "Account Number of the Account Holder."
          },
          "address": {
            "type": "string",
            "description": "Address of the User."
          },
          "mobile": {
            "type": "string",
            "description": "Mobile Number of the User."
          },
          "bank_name": {
            "type": "string",
            "description": "Bank Name of the Account."
          },
          "comment": {
            "type": "string",
            "description": "Remarks added by The user."
          },
          "ifsc_code": {
            "x-not-enum": true,
            "type": "string",
            "description": "Ifsc Code of the Account."
          },
          "email": {
            "type": "string",
            "nullable": true,
            "description": "Email of the Account Holder."
          },
          "vpa": {
            "type": "string",
            "description": "VPA of the Account."
          },
          "branch_name": {
            "type": "string",
            "description": "Branch Name of the Account."
          },
          "account_holder": {
            "type": "string",
            "description": "Name of the Account Holder."
          },
          "wallet": {
            "type": "string",
            "nullable": true,
            "description": "Wallet of the Account."
          },
          "beneficiary_id": {
            "type": "string"
          }
        },
        "description": "Beneficiary Mode Details."
      },
      "AddBeneficiaryDetails": {
        "type": "object",
        "properties": {
          "transfer_mode": {
            "type": "string",
            "description": "Transfer Mode of the Beneficiary to be added."
          },
          "shipment_id": {
            "type": "string",
            "description": "Shipment Id of the respective Merchant Order Id."
          },
          "delights": {
            "type": "boolean",
            "description": "True if  beneficiary to be added by delights or False if by User."
          },
          "order_id": {
            "type": "string",
            "description": "Merchant Order Id."
          },
          "details": {
            "$ref": "#/components/schemas/BeneficiaryModeDetails"
          }
        },
        "required": [
          "details",
          "order_id"
        ],
        "description": "Add beneficiary details request object."
      },
      "RefundAccountDetails": {
        "type": "object",
        "properties": {
          "is_verified_flag": {
            "type": "boolean",
            "description": "Flag for verification of refund."
          },
          "data": {
            "$ref": "#/components/schemas/RefundData"
          },
          "success": {
            "type": "boolean",
            "description": "Success or failure flag."
          },
          "message": {
            "type": "string",
            "description": "Response message."
          }
        },
        "required": [
          "message",
          "success"
        ],
        "description": "Refund account Response."
      },
      "RefundData": {
        "type": "object",
        "nullable": true,
        "properties": {
          "bene_name_mismatch": {
            "type": "boolean"
          },
          "status": {
            "type": "string"
          },
          "subcode": {
            "nullable": true,
            "type": "string"
          },
          "hash_key": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "request_id": {
            "nullable": true,
            "type": "integer"
          },
          "beneficiary_id": {
            "type": "string"
          },
          "account_no": {
            "type": "string"
          },
          "account_holder": {
            "type": "string"
          },
          "bank_name": {
            "type": "string"
          },
          "branch_name": {
            "type": "string"
          },
          "ifsc_code": {
            "type": "string",
            "x-not-enum": true
          }
        }
      },
      "AddBeneficiaryDetailsOTPDetails": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BankDetailsForOTP"
            }
          },
          "message": {
            "type": "string"
          },
          "is_verified_flag": {
            "type": "boolean"
          }
        }
      },
      "PostAddBeneficiaryDetailsOTPDetails": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/PostBankDetailsForOTP"
          },
          "message": {
            "type": "string"
          },
          "is_verified_flag": {
            "type": "boolean"
          }
        }
      },
      "PostBankDetailsForOTP": {
        "type": "object",
        "nullable": true,
        "properties": {
          "status": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "BankDetailsForOTP": {
        "type": "object",
        "properties": {
          "account_no": {
            "type": "string",
            "description": "Account number of the holder."
          },
          "bank_name": {
            "type": "string",
            "description": "Name of the bank."
          },
          "ifsc_code": {
            "x-not-enum": true,
            "type": "string",
            "description": "IFSC code of the bank."
          },
          "branch_name": {
            "type": "string",
            "description": "Branch name of the bank."
          },
          "account_holder": {
            "type": "string",
            "description": "Name of the account holder."
          },
          "email": {
            "type": "string"
          },
          "beneficiary_id": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          }
        },
        "required": [
          "account_holder",
          "account_no",
          "bank_name",
          "branch_name",
          "ifsc_code"
        ],
        "description": "Bank Details For OTP."
      },
      "AddBeneficiaryDetailsOTP": {
        "type": "object",
        "properties": {
          "order_id": {
            "type": "string",
            "description": "Unique identifier for an order."
          },
          "request_hash": {
            "type": "string"
          },
          "details": {
            "$ref": "#/components/schemas/BankDetailsForOTP"
          }
        },
        "required": [
          "details",
          "order_id"
        ],
        "description": "Add Beneficiary Details OTP request."
      },
      "WalletOtp": {
        "type": "object",
        "properties": {
          "country_code": {
            "x-not-enum": true,
            "type": "string",
            "description": "Country Code of the Mobile Number."
          },
          "mobile": {
            "type": "string",
            "description": "Wallet Mobile Number of the User."
          }
        },
        "required": [
          "country_code",
          "mobile"
        ],
        "description": "Wallet Otp Request."
      },
      "WalletOtpDetails": {
        "type": "object",
        "properties": {
          "request_id": {
            "nullable": true,
            "type": "string",
            "description": "Request Id for wallet otp request."
          },
          "is_verified_flag": {
            "type": "boolean",
            "description": "Boolean Flag whether OTP Validation is already done or not."
          },
          "success": {
            "type": "boolean",
            "description": "Response is successful or not."
          }
        },
        "required": [
          "is_verified_flag"
        ],
        "description": "Wallet otp response."
      },
      "SetDefaultBeneficiary": {
        "type": "object",
        "properties": {
          "order_id": {
            "type": "string",
            "description": "Merchant Order Id."
          },
          "beneficiary_id": {
            "type": "string",
            "description": "Beneficiary Hash Id of the beneficiary added."
          },
          "shipment_id": {
            "type": "string",
            "description": "Shipment Id from respective merchant order ID."
          },
          "merchant_shipment_id": {
            "type": "string",
            "description": "Shipment Id from respective merchant order ID."
          }
        },
        "required": [
          "beneficiary_id",
          "order_id"
        ],
        "description": "Set Default beneficiary request."
      },
      "SetDefaultBeneficiaryDetails": {
        "type": "object",
        "properties": {
          "is_beneficiary_set": {
            "type": "boolean",
            "description": "Boolean Flag whether Beneficiary set or not."
          },
          "success": {
            "type": "boolean",
            "description": "Response is successful or not."
          }
        },
        "required": [
          "is_beneficiary_set"
        ],
        "description": "Set default beneficiary Response."
      },
      "RefundOrderBen": {
        "type": "object",
        "properties": {
          "order_ids": {
            "type": "array",
            "description": "List of order ids.",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "order_ids"
        ]
      },
      "RefundOrderBenDetails": {
        "type": "object",
        "nullable": true,
        "properties": {
          "data": {
            "type": "object",
            "nullable": true,
            "additionalProperties": true
          }
        }
      },
      "GetPaymentLinkDetails": {
        "type": "object",
        "properties": {
          "status_code": {
            "x-not-enum": true,
            "type": "integer",
            "format": "int32",
            "description": "HTTP status code."
          },
          "payment_link_current_status": {
            "type": "string",
            "nullable": true,
            "description": "Status of payment link."
          },
          "success": {
            "type": "boolean",
            "description": "Successful or failure."
          },
          "polling_timeout": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "description": "Polling request timeout."
          },
          "payment_link_url": {
            "type": "string",
            "nullable": true,
            "description": "Url of payment link."
          },
          "external_order_id": {
            "type": "string",
            "nullable": true,
            "description": "Merchant order id."
          },
          "message": {
            "type": "string",
            "description": "Detailed message."
          },
          "merchant_name": {
            "type": "string",
            "nullable": true,
            "description": "Merchant name."
          },
          "amount": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "Total value of order."
          },
          "currency": {
            "type": "string",
            "description": "Currency."
          },
          "error": {
            "$ref": "#/components/schemas/ErrorDescription"
          }
        },
        "required": [
          "message",
          "status_code",
          "success"
        ],
        "description": "Get Payment Link Response."
      },
      "ErrorDescription": {
        "type": "object",
        "properties": {
          "payment_transaction_id": {
            "type": "string",
            "nullable": true,
            "description": "Payment transaction id."
          },
          "expired": {
            "type": "boolean",
            "nullable": true,
            "description": "Payment link expired or not."
          },
          "merchant_order_id": {
            "type": "string",
            "nullable": true,
            "description": "Merchant Order Id."
          },
          "merchant_name": {
            "type": "string",
            "nullable": true,
            "description": "Name of merchant that created payment link."
          },
          "msg": {
            "type": "string",
            "nullable": true,
            "description": "Detailed message."
          },
          "cancelled": {
            "type": "boolean",
            "nullable": true,
            "description": "Payment link is cancelled or not."
          },
          "amount": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "Amount paid."
          },
          "invalid_id": {
            "type": "boolean",
            "nullable": true,
            "description": "Payment link id is valid or not."
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Error Description."
      },
      "ErrorDetails": {
        "type": "object",
        "properties": {
          "status_code": {
            "x-not-enum": true,
            "type": "integer",
            "format": "int32",
            "description": "HTTP status code."
          },
          "error": {
            "$ref": "#/components/schemas/ErrorDescription"
          },
          "message": {
            "type": "string",
            "description": "Detailed message."
          },
          "success": {
            "type": "boolean",
            "description": "Successful or failure."
          }
        },
        "required": [
          "message",
          "success"
        ],
        "description": "Error Response."
      },
      "PollingPaymentLinkError": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "HTTP status code.",
            "x-not-enum": true
          },
          "error": {
            "type": "string"
          },
          "message": {
            "type": "string",
            "description": "Message."
          },
          "success": {
            "type": "boolean",
            "description": "Successful or failure."
          }
        },
        "required": [
          "message",
          "success"
        ]
      },
      "CreatePaymentLinkMeta": {
        "type": "object",
        "properties": {
          "cart_id": {
            "type": "string",
            "description": "Unique identifier for the shopping cart."
          },
          "checkout_mode": {
            "type": "string",
            "description": "Mode of checkout process (e.g., guest, registered user)."
          },
          "assign_card_id": {
            "type": "string",
            "nullable": true,
            "description": "Identifier for the card assigned to the transaction."
          },
          "amount": {
            "type": "string",
            "description": "Total amount for the transaction."
          },
          "pincode": {
            "type": "string"
          }
        },
        "required": [
          "amount",
          "cart_id",
          "checkout_mode"
        ],
        "description": "Create Payment Link Meta."
      },
      "CreatePaymentLink": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Merchant order id."
          },
          "external_order_id": {
            "type": "string",
            "description": "Merchant order id."
          },
          "mobile_number": {
            "type": "string",
            "description": "Mobile number to which the payment link is to be sent."
          },
          "amount": {
            "type": "number",
            "format": "float",
            "description": "Total value of order."
          },
          "meta": {
            "$ref": "#/components/schemas/CreatePaymentLinkMeta"
          },
          "email": {
            "type": "string",
            "description": "Email to which the payment link is to be sent."
          },
          "country_phone_code": {
            "type": "string",
            "x-not-enum": true
          },
          "success_redirection_url": {
            "type": "string",
            "description": "URL to which the user will be redirected after a successful payment."
          },
          "failure_redirection_url": {
            "type": "string",
            "description": "URL to which the user will be redirected if the payment fails."
          }
        },
        "required": [
          "amount",
          "email",
          "external_order_id",
          "meta",
          "mobile_number"
        ],
        "description": "Create Payment Link Request."
      },
      "CreatePaymentLinkDetails": {
        "type": "object",
        "properties": {
          "status_code": {
            "x-not-enum": true,
            "type": "integer",
            "format": "int32",
            "description": "HTTP status code."
          },
          "success": {
            "type": "boolean",
            "description": "Successful or failure."
          },
          "polling_timeout": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "description": "Polling request timeout."
          },
          "payment_link_url": {
            "type": "string",
            "nullable": true,
            "description": "Url of payment link."
          },
          "message": {
            "type": "string",
            "description": "Detailed message."
          },
          "payment_link_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique id of payment link."
          }
        },
        "required": [
          "message",
          "status_code",
          "success"
        ],
        "description": "Create Payment Link Response."
      },
      "CancelOrResendPaymentLink": {
        "type": "object",
        "properties": {
          "payment_link_id": {
            "type": "string",
            "description": "Unique id of payment link."
          }
        },
        "required": [
          "payment_link_id"
        ],
        "description": "Cancel Or Resend Payment Link Request."
      },
      "ResendPaymentLinkDetails": {
        "type": "object",
        "properties": {
          "status_code": {
            "x-not-enum": true,
            "type": "integer",
            "format": "int32",
            "description": "HTTP status code."
          },
          "polling_timeout": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "description": "Polling request timeout."
          },
          "success": {
            "type": "boolean",
            "description": "Successful or failure."
          },
          "message": {
            "type": "string",
            "description": "Detailed message."
          },
          "error": {
            "$ref": "#/components/schemas/PaymentLinkError"
          }
        },
        "required": [
          "message",
          "status_code",
          "success"
        ],
        "description": "Resend Payment Link Response."
      },
      "PaymentLinkError": {
        "type": "object",
        "properties": {
          "cancelled": {
            "type": "boolean"
          },
          "msg": {
            "type": "string",
            "description": "Message."
          }
        }
      },
      "CancelPaymentLinkDetails": {
        "type": "object",
        "properties": {
          "status_code": {
            "x-not-enum": true,
            "type": "integer",
            "format": "int32",
            "description": "HTTP status code."
          },
          "success": {
            "type": "boolean",
            "description": "Successful or failure."
          },
          "message": {
            "type": "string",
            "description": "Detailed message."
          }
        },
        "required": [
          "message",
          "status_code",
          "success"
        ],
        "description": "Cancel Payment Link Response."
      },
      "PollingPaymentLinkDetails": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "nullable": true,
            "description": "Status of payment link."
          },
          "status_code": {
            "x-not-enum": true,
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "description": "HTTP status code."
          },
          "success": {
            "type": "boolean",
            "nullable": true,
            "description": "Successful or failure."
          },
          "http_status": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "description": "HTTP status code."
          },
          "message": {
            "type": "string",
            "nullable": true,
            "description": "Detailed message."
          },
          "order_id": {
            "type": "string",
            "nullable": true,
            "description": "Fynd order id."
          },
          "redirect_url": {
            "type": "string",
            "nullable": true,
            "description": "Url to redirect to."
          },
          "payment_link_id": {
            "type": "string",
            "nullable": true,
            "description": "Payment link id."
          },
          "aggregator_name": {
            "type": "string",
            "nullable": true,
            "description": "Aggregator name."
          },
          "amount": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "Total amount for the transaction."
          }
        },
        "description": "Polling Payment Link Response."
      },
      "PaymentMethodsMeta": {
        "type": "object",
        "properties": {
          "merchant_code": {
            "x-not-enum": true,
            "type": "string",
            "description": "Merchant code."
          },
          "payment_gateway": {
            "type": "string",
            "description": "Payment gateway name."
          },
          "payment_identifier": {
            "type": "string",
            "description": "Payment identifier."
          }
        },
        "required": [
          "merchant_code",
          "payment_gateway",
          "payment_identifier"
        ],
        "description": "Payment Methods Meta schema."
      },
      "CreateOrderUserPaymentMethods": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Payment mode name."
          },
          "mode": {
            "type": "string",
            "description": "Payment mode."
          },
          "meta": {
            "$ref": "#/components/schemas/PaymentMethodsMeta"
          }
        },
        "required": [
          "meta",
          "mode",
          "name"
        ],
        "description": "Create Order User Payment Method schema."
      },
      "CreateOrderUser": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Currency of the transaction."
          },
          "payment_link_id": {
            "type": "string",
            "description": "Unique id of payment link."
          },
          "payment_methods": {
            "$ref": "#/components/schemas/CreateOrderUserPaymentMethods"
          },
          "failure_callback_url": {
            "type": "string",
            "description": "Failure page url."
          },
          "success_callback_url": {
            "type": "string",
            "description": "Success  page url."
          },
          "meta": {
            "additionalProperties": true,
            "type": "object",
            "nullable": true,
            "description": "Meta details."
          }
        },
        "required": [
          "currency",
          "payment_link_id",
          "payment_methods"
        ],
        "description": "Create order user request schema."
      },
      "CreateOrderUserData": {
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "nullable": true,
            "description": "Method details."
          },
          "aggregator": {
            "type": "string",
            "nullable": true,
            "description": "Aggregator name."
          },
          "customer_id": {
            "type": "string",
            "nullable": true,
            "description": "Aggregator customer id."
          },
          "contact": {
            "type": "string",
            "nullable": true,
            "description": "Mobile number."
          },
          "merchant_order_id": {
            "type": "string",
            "nullable": true,
            "description": "Merchant order id."
          },
          "order_id": {
            "type": "string",
            "nullable": true,
            "description": "Aggregator order id."
          },
          "currency": {
            "type": "string",
            "nullable": true,
            "description": "Currency of the transaction."
          },
          "callback_url": {
            "type": "string",
            "nullable": true,
            "description": "Callback url for aggregator."
          },
          "amount": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "Total amount for the transaction."
          },
          "email": {
            "type": "string",
            "nullable": true,
            "description": "Email."
          },
          "base64_html": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Create Order User Data."
      },
      "CreateOrderUserDetails": {
        "type": "object",
        "properties": {
          "status_code": {
            "x-not-enum": true,
            "type": "integer",
            "format": "int32",
            "description": "HTTP status code."
          },
          "success": {
            "type": "boolean",
            "description": "Successful or failure."
          },
          "data": {
            "$ref": "#/components/schemas/CreateOrderUserData"
          },
          "message": {
            "type": "string",
            "description": "Detailed message."
          },
          "order_id": {
            "type": "string",
            "nullable": true,
            "description": "Merchant order id."
          },
          "callback_url": {
            "type": "string",
            "nullable": true,
            "description": "Callback url for aggregator."
          },
          "payment_confirm_url": {
            "type": "string",
            "nullable": true,
            "description": "Payment confirm url for aggregator."
          }
        },
        "required": [
          "message",
          "success"
        ],
        "description": "Create Order User Response."
      },
      "BalanceDetails": {
        "type": "object",
        "properties": {
          "formatted_value": {
            "type": "string",
            "nullable": true,
            "description": "Formatted Amount with currency symbol."
          },
          "currency": {
            "type": "string",
            "nullable": true,
            "description": "Currency Code."
          },
          "value": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "Payment amount."
          }
        },
        "description": "Balance Details."
      },
      "CreditSummary": {
        "type": "object",
        "properties": {
          "total_due_amount": {
            "$ref": "#/components/schemas/BalanceDetails"
          },
          "status": {
            "type": "string",
            "nullable": true,
            "description": "Customer Credit status."
          },
          "limit": {
            "$ref": "#/components/schemas/BalanceDetails"
          },
          "credit_line_id": {
            "type": "string",
            "nullable": true,
            "description": "ID at Credit aggregator end."
          },
          "amount_available": {
            "$ref": "#/components/schemas/BalanceDetails"
          },
          "due_amount": {
            "$ref": "#/components/schemas/BalanceDetails"
          },
          "due_date": {
            "format": "date-time",
            "type": "string",
            "nullable": true,
            "description": "Due date for repayment."
          },
          "balance": {
            "$ref": "#/components/schemas/BalanceDetails"
          },
          "status_message": {
            "type": "string",
            "nullable": true,
            "description": "Message to customer."
          },
          "repayment_url": {
            "type": "string",
            "nullable": true,
            "description": "Url for repayment."
          },
          "soa_url": {
            "type": "string",
            "nullable": true,
            "description": "Statement of accounts. Show payment history."
          },
          "is_eligible_for_txn": {
            "type": "boolean",
            "nullable": true,
            "description": "Eligibility flag to complete transaction."
          },
          "merchant_customer_ref_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique aggregator customer id."
          },
          "buyer_status": {
            "type": "string",
            "nullable": true,
            "description": "Status from Credit aggregator end."
          },
          "activation_url": {
            "type": "string",
            "nullable": true,
            "description": "Url for activation."
          }
        },
        "description": "Credit summary response."
      },
      "CustomerCreditSummaryDetails": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CreditSummary"
          },
          "success": {
            "type": "boolean",
            "description": "Payment confirmation updated or not."
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "success"
        ],
        "description": "Customer Credit Summary Response."
      },
      "RedirectURL": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "description": "Aggregator Operation is successful or not."
          },
          "redirect_url": {
            "type": "string",
            "description": "URL to which the user may redirect."
          },
          "extra": {
            "type": "string",
            "description": "extra details, stringify json of the extra data."
          }
        },
        "required": [
          "redirect_url",
          "status"
        ],
        "description": "Redirect URL."
      },
      "RedirectToAggregatorDetails": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RedirectURL"
          },
          "success": {
            "type": "boolean",
            "description": "Status updated or not."
          }
        },
        "required": [
          "data",
          "success"
        ],
        "description": "Redirect to aggregator response."
      },
      "CreditDetail": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "description": "Operation is successful or not."
          },
          "is_registered": {
            "type": "boolean",
            "description": "User is registered with aggregator or not."
          },
          "signup_url": {
            "type": "string",
            "description": "URL to which the user may redirect."
          },
          "available_credit": {
            "type": "number",
            "format": "float",
            "description": "Available credit balance"
          }
        },
        "required": [
          "is_registered",
          "status"
        ],
        "description": "Credit Detail."
      },
      "CheckCreditDetails": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CreditDetail"
          },
          "success": {
            "type": "boolean",
            "description": "Operation is successful or not."
          }
        },
        "required": [
          "data",
          "success"
        ],
        "description": "Check Credit Response."
      },
      "KYCAddress": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "description": "City of the KYC address."
          },
          "addressline2": {
            "type": "string",
            "nullable": true,
            "description": "Second line of the address."
          },
          "state": {
            "type": "string",
            "description": "State of the KYC address."
          },
          "ownership_type": {
            "x-not-enum": true,
            "type": "string",
            "nullable": true,
            "description": "Type of ownership for the address (e.g., rented, owned)."
          },
          "pincode": {
            "type": "string",
            "description": "Postal code of the address."
          },
          "land_mark": {
            "type": "string",
            "nullable": true,
            "description": "Landmark near the address."
          },
          "addressline1": {
            "type": "string",
            "description": "First line of the address."
          }
        },
        "required": [
          "addressline1",
          "city",
          "pincode",
          "state"
        ],
        "description": "KYC Address Details."
      },
      "UserPersonalInfoInDetails": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "description": "First name of the individual."
          },
          "voter_id": {
            "type": "string",
            "nullable": true,
            "description": "Voter ID number."
          },
          "gender": {
            "type": "string",
            "nullable": true,
            "description": "Gender of the individual."
          },
          "dob": {
            "type": "string",
            "description": "Date of birth of the individual."
          },
          "passport": {
            "type": "string",
            "nullable": true,
            "description": "Passport number."
          },
          "fathers_name": {
            "type": "string",
            "nullable": true,
            "description": "Father's name."
          },
          "mothers_name": {
            "type": "string",
            "nullable": true,
            "description": "Mother's name."
          },
          "middle_name": {
            "type": "string",
            "nullable": true,
            "description": "Middle name of the individual."
          },
          "last_name": {
            "type": "string",
            "nullable": true,
            "description": "Last name of the individual."
          },
          "pan": {
            "type": "string",
            "nullable": true,
            "description": "Permanent Account Number (PAN)."
          },
          "driving_license": {
            "type": "string",
            "nullable": true,
            "description": "Driving license number."
          },
          "email_verified": {
            "type": "boolean",
            "description": "Indicates whether the email is verified."
          },
          "address_as_per_id": {
            "$ref": "#/components/schemas/KYCAddress"
          },
          "mobile_verified": {
            "type": "boolean",
            "description": "Indicates whether the mobile number is verified."
          },
          "phone": {
            "type": "string",
            "description": "Phone number."
          },
          "email": {
            "type": "string",
            "nullable": true,
            "description": "Email address."
          }
        },
        "required": [
          "address_as_per_id",
          "dob",
          "email_verified",
          "first_name",
          "mobile_verified",
          "phone"
        ],
        "description": "Component or field of the KYC form."
      },
      "MarketplaceInfo": {
        "type": "object",
        "properties": {
          "date_of_joining": {
            "type": "string",
            "nullable": true,
            "description": "Date of joining."
          },
          "name": {
            "type": "string",
            "description": "Name of store."
          },
          "membership_id": {
            "type": "string",
            "description": "Merchant id."
          }
        },
        "required": [
          "membership_id",
          "name"
        ],
        "description": "Marketplace Info Schema."
      },
      "BusinessDetails": {
        "type": "object",
        "properties": {
          "business_ownership_type": {
            "x-not-enum": true,
            "type": "string",
            "nullable": true,
            "description": "Type of business ownership (e.g., sole proprietorship, partnership)."
          },
          "vintage": {
            "type": "string",
            "nullable": true,
            "description": "Age or duration of the business."
          },
          "gstin": {
            "type": "string",
            "nullable": true,
            "description": "Goods and Services Tax Identification Number."
          },
          "pan": {
            "type": "string",
            "nullable": true,
            "description": "Permanent Account Number of the business."
          },
          "entity_type": {
            "x-not-enum": true,
            "type": "string",
            "nullable": true,
            "description": "Type of legal entity (e.g., corporation, LLC)."
          },
          "shop_and_establishment": {
            "additionalProperties": true,
            "type": "object",
            "description": "Shop and Establishment registration details."
          },
          "fssai": {
            "type": "string",
            "nullable": true,
            "description": "Food Safety and Standards Authority of India registration number."
          },
          "fda": {
            "type": "string",
            "nullable": true,
            "description": "Food and Drug Administration registration number."
          },
          "business_type": {
            "x-not-enum": true,
            "type": "string",
            "nullable": true,
            "description": "Type of business (e.g., retail, wholesale)."
          },
          "name": {
            "type": "string",
            "nullable": true,
            "description": "Name of the business."
          },
          "address": {
            "$ref": "#/components/schemas/KYCAddress"
          },
          "state": {
            "type": "string"
          }
        },
        "description": "Business Details Schema."
      },
      "DeviceDetails": {
        "type": "object",
        "properties": {
          "identification_number": {
            "type": "string",
            "nullable": true,
            "description": "IP."
          },
          "identifier_type": {
            "x-not-enum": true,
            "type": "string",
            "nullable": true,
            "description": "Static value = ip."
          },
          "device_model": {
            "type": "string",
            "nullable": true,
            "description": "Device Model."
          },
          "device_make": {
            "type": "string",
            "nullable": true,
            "description": "Device maker."
          },
          "device_type": {
            "x-not-enum": true,
            "type": "string",
            "nullable": true,
            "description": "Device Type(E.g. Mobile)."
          },
          "os": {
            "type": "string",
            "nullable": true,
            "description": "OS Name."
          },
          "os_version": {
            "type": "string",
            "nullable": true,
            "description": "OS Version."
          }
        },
        "description": "Device Details."
      },
      "CustomerOnboarding": {
        "type": "object",
        "properties": {
          "personal_info": {
            "$ref": "#/components/schemas/UserPersonalInfoInDetails"
          },
          "mcc": {
            "type": "string",
            "nullable": true,
            "description": "Merchant Category Code, indicating the type of business."
          },
          "aggregator": {
            "type": "string",
            "description": "Payment aggregator handling the transaction."
          },
          "marketplace_info": {
            "$ref": "#/components/schemas/MarketplaceInfo"
          },
          "source": {
            "type": "string",
            "format": "url",
            "description": "Callback url."
          },
          "business_info": {
            "$ref": "#/components/schemas/BusinessDetails"
          },
          "device": {
            "$ref": "#/components/schemas/DeviceDetails"
          }
        },
        "required": [
          "aggregator",
          "source"
        ],
        "description": "Customer Onboarding Request Schema."
      },
      "OnboardSummary": {
        "type": "object",
        "properties": {
          "redirect_url": {
            "type": "string",
            "description": "URL to which the user may redirect."
          },
          "session": {
            "additionalProperties": true,
            "type": "object",
            "description": "User Session."
          },
          "status": {
            "type": "boolean",
            "description": "Transaction status."
          },
          "status_remark": {
            "type": "string",
            "description": "Description of status."
          },
          "is_eligible_for_txn": {
            "type": "boolean",
            "description": "Whether is eligible for transaction."
          },
          "merchant_customer_ref_id": {
            "type": "string",
            "description": "Rupifi customer ID."
          },
          "activation_url": {
            "type": "string",
            "description": "Url for activation."
          },
          "type": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "status"
        ],
        "description": "Onboard Summary Schema."
      },
      "CustomerOnboardingDetails": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/OnboardSummary"
          },
          "success": {
            "type": "boolean",
            "description": "Status updated or not."
          }
        },
        "required": [
          "data",
          "success"
        ],
        "description": "Customer onboarding response."
      },
      "OutstandingOrderDetails": {
        "type": "object",
        "properties": {
          "status_code": {
            "x-not-enum": true,
            "type": "integer",
            "format": "int32",
            "description": "HTTP status code."
          },
          "data": {
            "type": "array",
            "nullable": true,
            "description": "Dict containing the outstanding order details.",
            "items": {
              "type": "object"
            }
          },
          "success": {
            "type": "boolean",
            "description": "Response is successful or not."
          },
          "message": {
            "type": "string",
            "nullable": true,
            "description": "Message."
          }
        },
        "required": [
          "status_code",
          "success"
        ],
        "description": "Outstanding Order details response."
      },
      "PaidOrderDetails": {
        "type": "object",
        "properties": {
          "status_code": {
            "x-not-enum": true,
            "type": "integer",
            "format": "int32",
            "description": "HTTP status code."
          },
          "data": {
            "type": "array",
            "nullable": true,
            "description": "Dict containing the paid order details.",
            "items": {
              "type": "object"
            }
          },
          "success": {
            "type": "boolean",
            "description": "Response is successful or not."
          },
          "message": {
            "type": "string",
            "nullable": true,
            "description": "Message."
          }
        },
        "required": [
          "status_code",
          "success"
        ],
        "description": "Paid Order details response."
      },
      "DeleteBeneficiary": {
        "type": "object",
        "properties": {
          "beneficiary_id": {
            "type": "string",
            "description": "Saved Beneficiary ID."
          }
        }
      },
      "DeleteRefundAccountDetails": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Success/Failure of the deleted beneficiary."
          },
          "message": {
            "type": "string",
            "description": "Message."
          }
        },
        "required": [
          "message",
          "success"
        ],
        "description": "Delete Refund Account Data Response."
      },
      "RefundOptionsDetails": {
        "type": "object",
        "properties": {
          "display_name": {
            "type": "string",
            "description": "Refund option display name."
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Refund ID. It will be unique identifier."
          },
          "is_active": {
            "type": "boolean",
            "nullable": true,
            "description": "Refund option is active or not."
          },
          "name": {
            "type": "string",
            "description": "Refund option name."
          }
        },
        "required": [
          "display_name",
          "id",
          "name"
        ],
        "description": "Refund option details."
      },
      "RefundOptions": {
        "type": "object",
        "properties": {
          "items": {
            "description": "List of all refund options.",
            "allOf": [
              {
                "$ref": "#/components/schemas/RefundOptionsDetails"
              }
            ]
          },
          "offline_refund_collect_type": {
            "description": "List of all the Offline refund collection options.",
            "type": "array",
            "items": {
              "x-not-enum": true,
              "type": "string"
            }
          }
        },
        "required": [
          "items"
        ],
        "description": "Refund option response."
      },
      "OfflineRefundOptions": {
        "type": "object",
        "properties": {
          "items": {
            "$ref": "#/components/schemas/RefundOptionsDetails"
          },
          "payment_modes": {
            "type": "array",
            "description": "List of all offline payment options. MOP Code value.",
            "items": {
              "type": "string"
            }
          },
          "offline_refund_collect_type": {
            "type": "array",
            "description": "List of all the Offline refund collection options.",
            "items": {
              "x-not-enum": true,
              "type": "string"
            }
          }
        },
        "required": [
          "items",
          "payment_modes"
        ],
        "description": "Offline Refund Options response."
      },
      "RefundOptionDetails": {
        "type": "object",
        "properties": {
          "offline_refund_options": {
            "$ref": "#/components/schemas/OfflineRefundOptions"
          },
          "success": {
            "type": "boolean",
            "description": "Success/Failure Of response."
          },
          "refund_options": {
            "$ref": "#/components/schemas/RefundOptions"
          }
        },
        "required": [
          "offline_refund_options",
          "refund_options",
          "success"
        ],
        "description": "Refund option response."
      },
      "SelectedRefundOptionDetails": {
        "type": "object",
        "properties": {
          "transfer_mode": {
            "additionalProperties": true,
            "type": "object",
            "description": "Selected transfer mode for given shipment."
          },
          "shipment_id": {
            "type": "string",
            "description": "ID of the shipment."
          },
          "message": {
            "type": "string",
            "description": "Detailed message."
          },
          "success": {
            "type": "boolean",
            "description": "Whether refund is successful or not."
          },
          "beneficiary_details": {
            "type": "object",
            "description": "Beneficiary Short description.",
            "additionalProperties": true
          }
        },
        "required": [
          "message",
          "shipment_id",
          "success",
          "transfer_mode"
        ],
        "description": "Selected refund option response."
      },
      "WalletBeneficiaryDetails": {
        "type": "object",
        "properties": {
          "beneficiary_id": {
            "type": "string",
            "description": "Beneficiary Id."
          },
          "modified_on": {
            "format": "date-time",
            "type": "string",
            "description": "MOdification Date of Beneficiary."
          },
          "display_name": {
            "type": "string",
            "description": "Display Name Of Account."
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Id of the wallet beneficiary."
          },
          "subtitle": {
            "type": "string",
            "description": "SHort Title Of Account."
          },
          "transfer_mode": {
            "type": "string",
            "description": "Transfer Mode Of Account."
          },
          "mobile": {
            "type": "string",
            "description": "MObile no of User."
          },
          "is_active": {
            "type": "boolean",
            "description": "Boolean Flag whether Beneficiary set or not."
          },
          "created_on": {
            "format": "date-time",
            "type": "string",
            "description": "Creation Date of Beneficiary."
          },
          "address": {
            "type": "string",
            "description": "Address of User."
          },
          "title": {
            "type": "string",
            "description": "Title Of Account."
          },
          "wallet_address": {
            "type": "string",
            "description": "Bank Name Of Account."
          },
          "comment": {
            "type": "string",
            "description": "Remarks."
          },
          "wallet": {
            "type": "string",
            "description": "Branch Name Of Account."
          },
          "email": {
            "type": "string",
            "description": "EMail of User."
          },
          "delights_user_name": {
            "type": "string",
            "nullable": true,
            "description": "User Id Who filled the Beneficiary."
          }
        },
        "required": [
          "address",
          "beneficiary_id",
          "created_on",
          "display_name",
          "email",
          "id",
          "is_active",
          "modified_on",
          "subtitle",
          "title",
          "transfer_mode",
          "wallet_address"
        ],
        "description": "Wallet Beneficiary Detail Schema."
      },
      "UpiBeneficiaryDetails": {
        "type": "object",
        "properties": {
          "beneficiary_id": {
            "type": "string",
            "description": "Beneficiary Id."
          },
          "modified_on": {
            "format": "date-time",
            "type": "string",
            "description": "MOdification Date of Beneficiary."
          },
          "display_name": {
            "type": "string",
            "description": "Display Name Of Account."
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Id of the upi beneficiary."
          },
          "subtitle": {
            "type": "string",
            "description": "SHort Title Of Account."
          },
          "transfer_mode": {
            "type": "string",
            "description": "Transfer Mode Of Account."
          },
          "vpa": {
            "type": "string",
            "description": "Branch Name Of Account."
          },
          "mobile": {
            "type": "string",
            "description": "Mobile no of User."
          },
          "vpa_address": {
            "type": "string",
            "description": "Bank Name Of Account."
          },
          "created_on": {
            "format": "date-time",
            "type": "string",
            "description": "Creation Date of Beneficiary."
          },
          "address": {
            "type": "string",
            "description": "Address of User."
          },
          "title": {
            "type": "string",
            "description": "Title Of Account."
          },
          "comment": {
            "type": "string",
            "description": "Remarks."
          },
          "is_active": {
            "type": "boolean",
            "description": "Boolean Flag whether Beneficiary set or not."
          },
          "email": {
            "type": "string",
            "description": "EMail of User."
          },
          "delights_user_name": {
            "type": "string",
            "nullable": true,
            "description": "User Id Who filled the Beneficiary."
          }
        },
        "required": [
          "address",
          "beneficiary_id",
          "created_on",
          "display_name",
          "email",
          "id",
          "is_active",
          "modified_on",
          "subtitle",
          "title",
          "transfer_mode",
          "vpa_address"
        ],
        "description": "UPI Beneficiary Details object."
      },
      "BeneficiaryRefundOptions": {
        "type": "object",
        "properties": {
          "bank": {
            "type": "array",
            "description": "List of all add bank beneficiary details.",
            "items": {
              "$ref": "#/components/schemas/OrderBeneficiaryDetails"
            }
          },
          "wallet": {
            "$ref": "#/components/schemas/WalletBeneficiaryDetails"
          },
          "upi": {
            "$ref": "#/components/schemas/UpiBeneficiaryDetails"
          }
        },
        "description": "Beneficiary Refund Options Schema."
      },
      "OrderBeneficiaryDetailsSchemaV2": {
        "type": "object",
        "properties": {
          "show_beneficiary_details": {
            "type": "boolean",
            "description": "Show Beneficiary details on UI or not."
          },
          "data": {
            "$ref": "#/components/schemas/BeneficiaryRefundOptions"
          },
          "limit": {
            "$ref": "#/components/schemas/RefundOptionsLimit"
          }
        },
        "required": [
          "data",
          "limit",
          "show_beneficiary_details"
        ],
        "description": "Order Beneficiaries Response Schema."
      },
      "RefundOptionsLimit": {
        "type": "object",
        "properties": {
          "bank": {
            "type": "integer"
          },
          "wallet": {
            "type": "integer"
          },
          "upi": {
            "type": "integer"
          }
        }
      },
      "ValidateValidateAddress": {
        "type": "object",
        "properties": {
          "ifsc_code": {
            "x-not-enum": true,
            "type": "string",
            "description": "IFSC Code."
          },
          "upi_vpa": {
            "type": "string",
            "nullable": true,
            "description": "VPA Address."
          },
          "aggregator": {
            "type": "string",
            "nullable": true,
            "description": "Aggregator Name."
          }
        },
        "description": "Validate VPA request schema."
      },
      "VPADetails": {
        "type": "object",
        "properties": {
          "is_valid": {
            "type": "boolean",
            "description": "Is VPA valid or not."
          },
          "upi_vpa": {
            "type": "string",
            "description": "VPA address."
          },
          "status": {
            "type": "string",
            "description": "VPA validation message."
          },
          "customer_name": {
            "type": "string",
            "description": "VPA Customer Name."
          }
        },
        "required": [
          "customer_name",
          "is_valid",
          "status",
          "upi_vpa"
        ],
        "description": "VPA Details Schema."
      },
      "ValidateValidateAddressDetails": {
        "type": "object",
        "properties": {
          "upi": {
            "$ref": "#/components/schemas/VPADetails"
          },
          "success": {
            "type": "boolean",
            "description": "Whether address validation is successful or not."
          },
          "ifsc": {
            "additionalProperties": true,
            "type": "object",
            "description": "IFSC details response data."
          },
          "vpa": {
            "description": "UPI validation details.",
            "allOf": [
              {
                "$ref": "#/components/schemas/VPADetails"
              }
            ]
          }
        },
        "required": [
          "success"
        ],
        "description": "Validate VPA response schema."
      },
      "PaymentMethodsMetaOrder": {
        "type": "object",
        "properties": {
          "merchant_code": {
            "x-not-enum": true,
            "type": "string",
            "description": "Merchant code."
          },
          "payment_gateway": {
            "type": "string",
            "description": "Payment gateway name."
          },
          "payment_identifier": {
            "type": "string",
            "description": "Payment identifier."
          },
          "payment_extra_identifiers": {
            "type": "object",
            "description": "Extra Payment identifiers.",
            "additionalProperties": true
          },
          "logo_url": {
            "$ref": "#/components/schemas/PaymentModeLogo"
          }
        },
        "required": [
          "payment_gateway"
        ],
        "description": "Payment Methods Meta Order Schema."
      },
      "PaymentOrderMethods": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "float",
            "description": "Amount to be collected."
          },
          "payment": {
            "type": "string",
            "description": "Payment type i.e. Required / Blocked."
          },
          "mode": {
            "type": "string",
            "description": "Payment mode."
          },
          "meta": {
            "$ref": "#/components/schemas/PaymentMethodsMetaOrder"
          },
          "name": {
            "type": "string",
            "description": "Payment mode name."
          }
        },
        "required": [
          "amount",
          "meta",
          "mode",
          "name"
        ],
        "description": "Payment Order Methods."
      },
      "PaymentOrder": {
        "type": "object",
        "properties": {
          "payment_methods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentOrderMethods"
            },
            "description": "All payment methods for order."
          },
          "order_id": {
            "type": "string",
            "description": "Order id."
          },
          "shipment_id": {
            "type": "string",
            "description": "Shipment_id."
          },
          "customer_details": {
            "$ref": "#/components/schemas/CustomerDetails"
          }
        },
        "required": [
          "order_id"
        ],
        "description": "Payment Order Request Schema."
      },
      "PaymentOrderData": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "Amount."
          },
          "aggregator": {
            "type": "string",
            "nullable": true,
            "description": "Aggregator name."
          },
          "callback_url": {
            "type": "string",
            "nullable": true,
            "description": "Callback url for aggregator."
          },
          "order_id": {
            "type": "string",
            "nullable": true,
            "description": "Aggregator order id."
          },
          "customer_id": {
            "type": "string",
            "nullable": true,
            "description": "Aggregator customer id."
          },
          "merchant_order_id": {
            "type": "string",
            "nullable": true,
            "description": "Merchant order id."
          },
          "currency": {
            "type": "string",
            "nullable": true,
            "description": "Currency used for the order."
          },
          "email": {
            "type": "string",
            "nullable": true,
            "description": "Email address of the customer."
          },
          "contact": {
            "type": "string",
            "nullable": true,
            "description": "Contact number of the customer."
          },
          "bank": {
            "type": "string",
            "nullable": true,
            "description": "Bank."
          },
          "method": {
            "type": "string",
            "nullable": true,
            "description": "Method of payment or delivery for the order."
          }
        },
        "description": "Payment Order Data Schema."
      },
      "PaymentOrderDetails": {
        "type": "object",
        "properties": {
          "payment_confirm_url": {
            "type": "string",
            "nullable": true,
            "description": "Payment confirm url for aggregator."
          },
          "callback_url": {
            "type": "string",
            "nullable": true,
            "description": "Callback url for aggregator."
          },
          "order_id": {
            "type": "string",
            "nullable": true,
            "description": "Merchant order id."
          },
          "success": {
            "type": "boolean",
            "description": "Successful or failure."
          },
          "status_code": {
            "x-not-enum": true,
            "type": "integer",
            "format": "int32",
            "description": "HTTP status code."
          },
          "data": {
            "$ref": "#/components/schemas/PaymentOrderData"
          },
          "message": {
            "type": "string",
            "description": "Detailed message."
          }
        },
        "required": [
          "message"
        ],
        "description": "Payment Order response model."
      },
      "ShipmentRefundRequestMeta": {
        "type": "object",
        "properties": {
          "shipment_id": {
            "type": "string",
            "description": "Shipment Id of the respective Merchant Order Id."
          },
          "name": {
            "type": "string",
            "description": "Name of the Transfer Mode."
          },
          "utr": {
            "type": "string",
            "description": "Unique Transaction Reference of the refund."
          },
          "notes": {
            "type": "string",
            "nullable": true,
            "description": "Any optional notes regarding the transaction."
          },
          "billing_employee_code": {
            "type": "string",
            "nullable": true,
            "description": "Billing Employee Code.",
            "x-not-enum": true
          }
        }
      },
      "ShipmentRefund": {
        "type": "object",
        "properties": {
          "order_id": {
            "type": "string",
            "description": "Merchant Order Id."
          },
          "transfer_mode": {
            "type": "string",
            "description": "Transfer Mode of the Beneficiary to be added."
          },
          "beneficiary_id": {
            "type": "string",
            "nullable": true,
            "description": "Beneficiary Hash Id of the beneficiary added."
          },
          "shipment_ids": {
            "type": "array",
            "description": "Detailed list of shipment IDs for single and multi-bag return cases",
            "items": {
              "type": "string"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/ShipmentRefundRequestMeta"
          }
        },
        "required": [
          "order_id",
          "transfer_mode",
          "shipment_ids"
        ],
        "description": "Shipment Refund Request."
      },
      "ShipmentRefundDetail": {
        "type": "object",
        "properties": {
          "order_id": {
            "type": "string",
            "description": "ID of an order."
          },
          "transfer_mode": {
            "type": "string",
            "description": "Mode of transfer for the shipment refund (e.g., bank transfer, digital wallet)."
          },
          "beneficiary_id": {
            "type": "string",
            "description": "Unique identifier for the beneficiary receiving the refund."
          },
          "shipment_ids": {
            "type": "array",
            "description": "Detailed list of shipment IDs for single and multi-bag return cases",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "beneficiary_id",
          "order_id",
          "transfer_mode",
          "shipment_ids"
        ],
        "description": "Shipment Refund Detail Response."
      },
      "ShipmentRefundDetails": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ShipmentRefundDetail"
          },
          "success": {
            "type": "boolean",
            "description": "Successful or not."
          },
          "message": {
            "type": "string",
            "description": "Detailed message."
          },
          "refund_options": {
            "type": "string"
          },
          "refund_options_priority": {
            "$ref": "#/components/schemas/RefundOptionsPriority"
          },
          "offline_refund_options_priority": {
            "$ref": "#/components/schemas/RefundOptionsPriority"
          }
        },
        "description": "Shipment Refund Response."
      },
      "RefundOptionsPriority": {
        "type": "object",
        "properties": {
          "payment_modes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefundItem"
            }
          },
          "payment_gateways": {
            "type": "array",
            "description": "List of all offline payment gateways.",
            "items": {
              "type": "string"
            }
          },
          "offline_refund_collect_type": {
            "description": "List of all offline Refund Collect Types.",
            "type": "array",
            "items": {
              "x-not-enum": true,
              "type": "string"
            }
          }
        }
      },
      "RefundItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          }
        }
      },
      "Version": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "razorpay": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VersionDetails"
            }
          },
          "rupifi": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VersionDetails"
            }
          },
          "jio": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VersionDetails"
            }
          },
          "stripe": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VersionDetails"
            }
          },
          "payumoney": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VersionDetails"
            }
          },
          "jiopay": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VersionDetails"
            }
          },
          "fynd": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VersionDetails"
            }
          },
          "potlee": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VersionDetails"
            }
          },
          "juspay": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VersionDetails"
            }
          },
          "simpl": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VersionDetails"
            }
          },
          "checkout": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VersionDetails"
            }
          }
        }
      },
      "VersionDetails": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string"
          }
        }
      },
      "RefundErrorCodeAndMessage": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Response is successful or not."
          },
          "message": {
            "type": "string",
            "description": "Response message."
          },
          "data": {
            "$ref": "#/components/schemas/IFSCErrorData"
          },
          "error": {
            "$ref": "#/components/schemas/EDCError"
          },
          "errors": {
            "$ref": "#/components/schemas/EDCError"
          }
        },
        "required": [
          "success"
        ]
      },
      "IFSCErrorData": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error human understandable description."
          },
          "subcode": {
            "type": "string",
            "description": "Error descrption code."
          },
          "status": {
            "type": "string",
            "description": "Error."
          }
        }
      },
      "EDCError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error human understandable description."
          },
          "description": {
            "type": "string",
            "description": "Error human understandable description."
          },
          "code": {
            "type": "string",
            "description": "Error descrption code."
          },
          "success": {
            "type": "boolean",
            "description": "Error descrption code."
          }
        }
      },
      "RefundOptionErrorCodeAndMessage": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Response is successful or not."
          },
          "message": {
            "$ref": "#/components/schemas/RefundOptionMessage"
          },
          "error": {
            "$ref": "#/components/schemas/RefundOptionError"
          }
        },
        "required": [
          "success"
        ]
      },
      "RefundOptionMessage": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer"
          },
          "description": {
            "$ref": "#/components/schemas/RefundOptionError"
          },
          "shipment_id": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "order_id": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "RefundOptionError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer"
          },
          "shipment_id": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "order_id": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "merchant_user_id": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "$ref": "#/components/schemas/RefundOptionError"
          }
        }
      },
      "CardData": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "expiration_date": {
            "x-not-date": true,
            "type": "string",
            "nullable": true
          }
        }
      },
      "Account": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "routing_number": {
            "type": "string",
            "nullable": true
          },
          "account_number": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CartData": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "nullable": true
          },
          "uid": {
            "type": "integer",
            "nullable": true
          },
          "gstin": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "user_id": {
            "type": "string",
            "nullable": true
          },
          "articles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Article"
            }
          },
          "cashback": {
            "type": "integer",
            "nullable": true
          },
          "discount": {
            "type": "integer",
            "nullable": true
          },
          "shipment": {
            "type": "object",
            "additionalProperties": true,
            "nullable": true
          },
          "expire_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "cart_value": {
            "type": "integer",
            "nullable": true
          },
          "created_on": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "is_archive": {
            "type": "boolean",
            "nullable": true
          },
          "is_default": {
            "type": "boolean",
            "nullable": true
          },
          "cod_charges": {
            "type": "integer",
            "nullable": true
          },
          "coupon_code": {
            "type": "string",
            "nullable": true,
            "x-not-enum": true
          },
          "coupon_value": {
            "type": "integer",
            "nullable": true
          },
          "fc_index_map": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "nullable": true
          },
          "fynd_credits": {
            "type": "integer",
            "nullable": true
          },
          "payment_mode": {
            "type": "string",
            "nullable": true
          },
          "checkout_mode": {
            "type": "string",
            "nullable": true
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "total_quantity": {
            "type": "integer",
            "nullable": true
          },
          "cashback_applied": {
            "type": "integer",
            "nullable": true
          },
          "delivery_charges": {
            "type": "integer",
            "nullable": true
          },
          "applied_coupon_id": {
            "type": "string",
            "nullable": true
          },
          "original_cart_value": {
            "type": "integer",
            "nullable": true
          },
          "bulk_coupon_discount": {
            "type": "integer",
            "nullable": true
          },
          "fynd_credits_auto_applied": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "Manufacturer": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "is_default": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "CartUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "nullable": true
          },
          "mobile": {
            "type": "string",
            "nullable": true
          },
          "user_id": {
            "type": "string",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "nullable": true
          },
          "user_type": {
            "type": "string",
            "nullable": true,
            "x-not-enum": true
          },
          "first_name": {
            "type": "string",
            "nullable": true
          },
          "is_authenticated": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "Affiliate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "config": {
            "type": "object",
            "nullable": true,
            "additionalProperties": true
          }
        }
      },
      "CardReq": {
        "type": "object",
        "properties": {
          "cart": {
            "$ref": "#/components/schemas/CartData"
          },
          "meta": {
            "type": "object",
            "nullable": true,
            "additionalProperties": true
          },
          "user": {
            "$ref": "#/components/schemas/CartUser"
          },
          "coupon": {
            "type": "object",
            "additionalProperties": true
          },
          "affiliate": {
            "$ref": "#/components/schemas/Affiliate"
          },
          "billing_address": {
            "$ref": "#/components/schemas/Address"
          },
          "delivery_address": {
            "$ref": "#/components/schemas/Address"
          },
          "redemption_rules": {
            "type": "object",
            "additionalProperties": true,
            "nullable": true
          },
          "payment_identifier": {
            "type": "string",
            "nullable": true
          },
          "pick_up_customer_details": {
            "type": "object",
            "nullable": true,
            "additionalProperties": true
          },
          "payment_auto_confirm": {
            "type": "boolean",
            "nullable": true
          },
          "payment_methods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentMethod"
            }
          },
          "coupon_id": {
            "type": "string",
            "nullable": true
          },
          "aggregator": {
            "type": "string",
            "default": "fynd"
          },
          "cart_value": {
            "type": "integer",
            "default": 0
          },
          "order_type": {
            "type": "string",
            "default": "HomeDelivery",
            "x-not-enum": true
          },
          "return_url": {
            "type": "string",
            "default": "https://api.jiox0.de/platform/payment/v2/external/payments/callback/"
          },
          "cashback_id": {
            "type": "string",
            "nullable": true
          },
          "cod_charges": {
            "type": "integer",
            "default": 0
          },
          "employee_id": {
            "type": "string",
            "nullable": true
          },
          "payment_mode": {
            "type": "string",
            "default": "COD"
          },
          "cart_id": {
            "type": "integer",
            "default": 412
          },
          "cashback": {
            "type": "integer",
            "default": 0
          },
          "merchant_code": {
            "type": "string",
            "default": "jio",
            "x-not-enum": true
          },
          "ordering_store": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateAggregatorCardReq": {
        "type": "object",
        "properties": {
          "refresh": {
            "type": "boolean"
          }
        }
      },
      "UpdateAggregatorCardDetails": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation was successful or not."
          },
          "message": {
            "type": "string",
            "description": "A message providing additional information about the response."
          },
          "cards": {
            "$ref": "#/components/schemas/AggregatorCard"
          }
        }
      },
      "AggregatorCard": {
        "type": "object",
        "properties": {
          "aggregator": {
            "type": "string",
            "description": "The aggregator associated with the cards."
          },
          "api": {
            "type": "string",
            "nullable": true,
            "description": "The API associated with the cards."
          },
          "customer_id": {
            "type": "string",
            "nullable": true,
            "description": "The customer ID associated with the cards."
          }
        }
      },
      "UpdateCard": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation was successful or not."
          },
          "message": {
            "type": "string",
            "description": "A message providing additional information about the response."
          },
          "data": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "object"
            }
          }
        }
      },
      "PaymentCallbackDetails": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the payment callback was successful or not."
          },
          "message": {
            "type": "string",
            "description": "Additional information about the payment callback."
          }
        },
        "example": {
          "success": true,
          "message": "Payment callback received successfully"
        }
      },
      "PaymentConfirmation": {
        "type": "object",
        "properties": {
          "order_id": {
            "type": "string",
            "description": "Unique order id."
          },
          "payment_methods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MultiTenderPaymentMethod"
            }
          }
        },
        "required": [
          "order_id",
          "payment_methods"
        ]
      },
      "MultiTenderPaymentMethod": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Payment mode name."
          },
          "meta": {
            "$ref": "#/components/schemas/MultiTenderPaymentMeta"
          },
          "amount": {
            "type": "number",
            "format": "float",
            "description": "Payment amount."
          },
          "mode": {
            "type": "string"
          }
        },
        "required": [
          "amount",
          "mode"
        ]
      },
      "MultiTenderPaymentMeta": {
        "type": "object",
        "properties": {
          "extra_meta": {
            "type": "object",
            "nullable": true,
            "additionalProperties": true
          },
          "order_id": {
            "type": "string"
          },
          "payment_id": {
            "type": "string"
          },
          "current_status": {
            "type": "string"
          },
          "payment_gateway": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "PaymentConfirmationDetails": {
        "type": "object",
        "properties": {
          "order_id": {
            "type": "string",
            "description": "Unique order id."
          },
          "message": {
            "type": "string",
            "description": "Message."
          },
          "success": {
            "type": "boolean",
            "description": "Payment confirmation updated or not."
          },
          "errors": {
            "type": "string"
          },
          "return_url": {
            "type": "string"
          }
        },
        "required": [
          "message",
          "success"
        ]
      },
      "HttpErrorCodeAndMessage": {
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ErrorCodeAndDescription"
          },
          "success": {
            "type": "boolean",
            "description": "Response is successful or not."
          }
        },
        "required": [
          "success"
        ],
        "description": "A standard response format for HTTP codes."
      },
      "RewardsArticle": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "points": {
            "type": "number"
          },
          "price": {
            "type": "number"
          }
        }
      },
      "CatalogueOrderDetails": {
        "type": "object",
        "properties": {
          "articles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RewardsArticle"
            }
          }
        }
      },
      "CatalogueOrderCreation": {
        "type": "object",
        "properties": {
          "articles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RewardsArticle"
            }
          }
        }
      },
      "PointsDetails": {
        "type": "object",
        "properties": {
          "points": {
            "description": "Total points available",
            "type": "number"
          }
        }
      },
      "ReferralDetailsUser": {
        "type": "object",
        "properties": {
          "blocked": {
            "type": "boolean"
          },
          "points": {
            "type": "number"
          },
          "redeemed": {
            "type": "boolean"
          },
          "referral_code": {
            "type": "string",
            "x-not-enum": true
          }
        }
      },
      "Offer": {
        "type": "object",
        "properties": {
          "_schedule": {
            "$ref": "#/components/schemas/Schedule"
          },
          "active": {
            "type": "boolean"
          },
          "application_id": {
            "type": "string"
          },
          "banner_image": {
            "$ref": "#/components/schemas/Asset"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "rule": {
            "type": "object",
            "additionalProperties": true
          },
          "share": {
            "$ref": "#/components/schemas/ShareMessages"
          },
          "sub_text": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "ShareMessages": {
        "type": "object",
        "properties": {
          "email": {
            "type": "integer"
          },
          "facebook": {
            "type": "string"
          },
          "fallback": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "messenger": {
            "type": "string"
          },
          "sms": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "twitter": {
            "type": "string"
          },
          "whatsapp": {
            "type": "string"
          }
        }
      },
      "ReferralDetails": {
        "type": "object",
        "properties": {
          "referral": {
            "$ref": "#/components/schemas/Offer"
          },
          "share": {
            "$ref": "#/components/schemas/ShareMessages"
          },
          "user": {
            "$ref": "#/components/schemas/ReferralDetailsUser"
          },
          "referrer_info": {
            "type": "string"
          },
          "terms_conditions_link": {
            "type": "string"
          }
        }
      },
      "RetrieveOrderDiscount": {
        "type": "object",
        "required": [
          "order_amount"
        ],
        "properties": {
          "order_amount": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          }
        }
      },
      "OrderDiscountRuleBucket": {
        "type": "object",
        "properties": {
          "high": {
            "type": "number"
          },
          "low": {
            "type": "number"
          },
          "max": {
            "type": "number"
          },
          "value": {
            "type": "number"
          },
          "value_type": {
            "type": "string",
            "x-not-enum": true
          }
        }
      },
      "DiscountProperties": {
        "type": "object",
        "properties": {
          "absolute": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "display_absolute": {
            "type": "string"
          },
          "display_percent": {
            "type": "string"
          },
          "percent": {
            "type": "number"
          }
        }
      },
      "OrderDiscountDetails": {
        "type": "object",
        "properties": {
          "order_amount": {
            "type": "number"
          },
          "points": {
            "type": "number"
          },
          "discount": {
            "$ref": "#/components/schemas/DiscountProperties"
          },
          "base_discount": {
            "$ref": "#/components/schemas/DiscountProperties"
          },
          "applied_rule_bucket": {
            "$ref": "#/components/schemas/OrderDiscountRuleBucket"
          }
        }
      },
      "RedeemReferralCode": {
        "type": "object",
        "properties": {
          "device_id": {
            "type": "string"
          },
          "referral_code": {
            "type": "string",
            "x-not-enum": true
          }
        }
      },
      "RedeemReferralCodeDetails": {
        "type": "object",
        "properties": {
          "redeemed": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "referrer_info": {
            "type": "string"
          },
          "referrer_id": {
            "type": "string"
          },
          "points": {
            "type": "number"
          }
        }
      },
      "PointsHistoryDetails": {
        "type": "object",
        "properties": {
          "items": {
            "description": "History is the list of points transaction.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PointsHistory"
            }
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          }
        }
      },
      "PointsHistory": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "application_id": {
            "type": "string"
          },
          "claimed": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "expires_on": {
            "type": "string"
          },
          "meta": {
            "type": "object",
            "additionalProperties": true
          },
          "points": {
            "type": "number"
          },
          "remaining_points": {
            "type": "number"
          },
          "text_1": {
            "type": "string"
          },
          "text_2": {
            "type": "string"
          },
          "text_3": {
            "type": "string"
          },
          "txn_name": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "QRCodeResp": {
        "type": "object",
        "properties": {
          "link": {
            "type": "string",
            "description": "Original url that was used to encoded url into a QR code."
          },
          "svg": {
            "type": "string",
            "description": "String representation of the QR Code in SVG format."
          }
        },
        "description": "Response schema for QR code api that returns the original Link, which is the URL encoded by the QR code, and svg, which is the QR code in SVG format."
      },
      "RedirectDevice": {
        "type": "object",
        "properties": {
          "link": {
            "type": "string",
            "description": "Fallback URL to redirect users to the app store or a web page if the app is not installed when they click the link."
          },
          "type": {
            "type": "string",
            "enum": [
              "web",
              "app_store"
            ],
            "description": "Type of fallback used to redirect users to the app store or a web page if the app is not installed when they click the link."
          }
        },
        "description": "Redirection schema for device that includes fallback URL, which is the URL to redirect users to the app store or a web page if the app is not installed, and fallback type, indicating whether the fallback directs users to the app store or a web page."
      },
      "WebRedirect": {
        "type": "object",
        "properties": {
          "link": {
            "type": "string",
            "description": "Fallback URL to redirect users to the app store or a web page if the app is not installed when they click the link."
          },
          "type": {
            "type": "string",
            "enum": [
              "web"
            ],
            "description": "Type of fallback used to redirect users to the app store or a web page if the app is not installed when they click the link."
          }
        },
        "description": "Redirection schema for web that includes fallback URL, which is the URL to redirect users to the app store or a web page if the app is not installed, and fallback type, indicating whether the fallback directs users to the app store or a web page."
      },
      "Redirects": {
        "type": "object",
        "properties": {
          "ios": {
            "$ref": "#/components/schemas/RedirectDevice"
          },
          "android": {
            "$ref": "#/components/schemas/RedirectDevice"
          },
          "web": {
            "$ref": "#/components/schemas/WebRedirect"
          },
          "force_web": {
            "type": "boolean",
            "description": "Flag for overriding redirection traffic to the web if the app is not installed when the link is clicked."
          }
        },
        "description": "Redirects schema for redirection configuration for different mediums like device and web."
      },
      "CampaignShortLink": {
        "type": "object",
        "properties": {
          "source": {
            "type": "string",
            "description": "Source of communication of campaign."
          },
          "medium": {
            "type": "string",
            "description": "Channel of communication of campaign."
          }
        },
        "description": "Schema for campaign attributes of shortlink. It includes source and channel of communication of campaign."
      },
      "Attribution": {
        "type": "object",
        "properties": {
          "campaign_cookie_expiry": {
            "type": "string",
            "description": "Expiration of campaign."
          }
        },
        "description": "Schema for expiration attributes of shortlink campaign."
      },
      "SocialMediaTags": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title to be displayed when link is shared on social media platforms."
          },
          "description": {
            "type": "string",
            "description": "Description to be displayed when link is shared on social media platforms."
          },
          "image": {
            "type": "string",
            "description": "Preview to be displayed when link is shared on social media platforms."
          }
        },
        "description": "Schema for Social Media Tags attributes of shortlink."
      },
      "ShortLinkReq": {
        "type": "object",
        "required": [
          "title",
          "url"
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "Give a name to the link."
          },
          "url": {
            "type": "string",
            "description": "The web address to shorten."
          },
          "hash": {
            "type": "string",
            "description": "A string value used for converting long URL to short URL and vice-versa."
          },
          "active": {
            "type": "boolean",
            "description": "Status of the shortlink."
          },
          "expire_at": {
            "type": "string",
            "format": "date-time",
            "description": "Expiry of the shortlink."
          },
          "enable_tracking": {
            "type": "boolean",
            "description": "Flag to enable tracking of a short link."
          },
          "personalized": {
            "type": "boolean",
            "description": "To create personalized short links."
          },
          "campaign": {
            "$ref": "#/components/schemas/CampaignShortLink"
          },
          "redirects": {
            "$ref": "#/components/schemas/Redirects"
          },
          "attribution": {
            "$ref": "#/components/schemas/Attribution"
          },
          "social_media_tags": {
            "$ref": "#/components/schemas/SocialMediaTags"
          },
          "count": {
            "type": "integer",
            "description": "Click count of shortlink."
          }
        },
        "description": "Request schema for creation of short link  that includes original link , meta data , hash of url , campaign attributes , redirect attributes and social media attributes of short link to be created."
      },
      "UrlInfo": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "original": {
            "type": "string"
          },
          "hash": {
            "type": "string",
            "description": "A string value used for converting long URL to short URL and vice-versa."
          },
          "short_url": {
            "type": "string"
          }
        },
        "description": "Schema for url component of short link which contains original link to be shortened , the hash of URL and the shortened URL."
      },
      "ShortLinkRes": {
        "additionalProperties": true,
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Name reference of the shortlink."
          },
          "url": {
            "$ref": "#/components/schemas/UrlInfo"
          },
          "created_by": {
            "type": "string",
            "description": "Reference of the creator of the shortlink."
          },
          "app_redirect": {
            "type": "boolean",
            "description": "Application redirection flag of shortlink."
          },
          "fallback": {
            "type": "string",
            "enum": [
              "web",
              "app_store"
            ],
            "description": "Fallback attributes of shortlink."
          },
          "active": {
            "type": "boolean",
            "description": "Status of the shortlink."
          },
          "_id": {
            "type": "string",
            "description": "Key used to uniquely identify document that contains shortlink details."
          },
          "enable_tracking": {
            "type": "boolean",
            "description": "Flag to enable tracking of a short link."
          },
          "expire_at": {
            "type": "string",
            "format": "date-time",
            "description": "Expiry of the shortlink."
          },
          "application": {
            "type": "string",
            "description": "The ID of the sales channel associated with the shortlink."
          },
          "user_id": {
            "type": "string",
            "description": "Identifier which can uniquely identify the user."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp indicating when a record was initially created."
          },
          "meta": {
            "type": "object",
            "additionalProperties": true,
            "description": "Additional attributes of shortlink."
          },
          "updated_at": {
            "format": "date-time",
            "type": "string",
            "description": "The timestamp indicating when a record was last modified or updated."
          },
          "personalized": {
            "type": "boolean",
            "description": "To create personalized short links."
          },
          "campaign": {
            "$ref": "#/components/schemas/CampaignShortLink"
          },
          "redirects": {
            "$ref": "#/components/schemas/Redirects"
          },
          "attribution": {
            "$ref": "#/components/schemas/Attribution"
          },
          "social_media_tags": {
            "$ref": "#/components/schemas/SocialMediaTags"
          },
          "count": {
            "type": "integer",
            "description": "Click count of shortlink."
          }
        },
        "description": "Response schema for successful creation of short link  that includes original link , meta data , hash of url , campaign attributes , document ID, document timestamps, redirect attributes and social media attributes of short link to be created."
      },
      "ErrorRes": {
        "additionalProperties": true,
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message providing details about the error."
          }
        },
        "description": "The schema for an error response when a user request is erroneous or system is unable to process the request. It includes an error message providing details about the error."
      },
      "AllAvailablePageSchema": {
        "type": "object",
        "description": "All available pages.",
        "properties": {
          "pages": {
            "type": "array",
            "description": "List all the pages.",
            "items": {
              "$ref": "#/components/schemas/AvailablePageSchema"
            }
          }
        }
      },
      "AvailablePageSchema": {
        "type": "object",
        "description": "Schema representing a collection of all available pages within a specific context or system.",
        "properties": {
          "value": {
            "description": "The name of the page. For example, 'about-us'.",
            "type": "string"
          },
          "text": {
            "description": "The textual content associated with the page. For example, 'about us'.",
            "type": "string"
          },
          "path": {
            "description": "The url path for the page. For example, 'about-us'.",
            "type": "string"
          },
          "type": {
            "type": "string",
            "description": "The type of the page, which can be 'system', 'custom', or 'sections'.",
            "enum": [
              "system",
              "custom",
              "sections"
            ]
          },
          "sections": {
            "type": "array",
            "description": "An array of sections that make up the page.",
            "items": {
              "$ref": "#/components/schemas/AvailablePageSchemaSections"
            }
          },
          "sections_meta": {
            "type": "array",
            "description": "An array of metadata attributes for the sections of the page, each represented by an object.",
            "items": {
              "$ref": "#/components/schemas/AvailablePageSectionMetaAttributes"
            }
          },
          "theme": {
            "type": "string",
            "description": "The unique identifier for the theme associated with the section."
          },
          "seo": {
            "$ref": "#/components/schemas/AvailablePageSeo"
          },
          "props": {
            "type": "array",
            "description": "An array of properties associated with the object, where each property is represented as an object.",
            "items": {
              "type": "object"
            }
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "__v": {
            "description": "Version Key",
            "type": "number"
          },
          "_id": {
            "type": "string",
            "description": "The unique identifier for the object."
          }
        }
      },
      "AvailablePageSectionMetaAttributes": {
        "type": "object",
        "description": "An object representing metadata attributes for a section of the page.",
        "properties": {
          "attributes": {
            "description": "A key-value pair object containing metadata attributes for the section.",
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "AvailablePageSeo": {
        "type": "object",
        "description": "An object representing seo-related information for the page.",
        "properties": {
          "title": {
            "type": "string",
            "description": "The seo title of the page."
          },
          "description": {
            "type": "string",
            "description": "The seo description of the page."
          },
          "canonical_url": {
            "type": "string",
            "description": "The canonical url of the page."
          },
          "meta_tags": {
            "type": "array",
            "description": "An array of meta tags for the page, each represented by an object.",
            "items": {
              "$ref": "#/components/schemas/SEOMetaItem"
            }
          },
          "sitemap": {
            "$ref": "#/components/schemas/SEOSitemap"
          },
          "breadcrumbs": {
            "type": "array",
            "description": "An array representing breadcrumb navigation, where each item provides information about a step in the navigation path.",
            "items": {
              "$ref": "#/components/schemas/SEObreadcrumb"
            }
          },
          "_id": {
            "type": "string",
            "description": "The unique identifier for the object."
          }
        }
      },
      "AvailablePageSchemaSections": {
        "type": "object",
        "description": "An object representing a section of the page. Each section can contain various attributes and elements that contribute to the page's content.",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Unique Id for section."
          },
          "name": {
            "type": "string",
            "description": "The name of the section."
          },
          "label": {
            "description": "A label for the section, which can be used for display purposes.",
            "type": "string"
          },
          "props": {
            "type": "object",
            "description": "An object containing various properties associated with the section.",
            "additionalProperties": true
          },
          "blocks": {
            "type": "array",
            "description": "An array of blocks within the section, where each block is represented as an object.",
            "items": {
              "type": "object",
              "description": "An object representing an individual block within the array. Each block object contains various properties and attributes specific to that block"
            }
          },
          "preset": {
            "description": "An object containing preset configurations for the section.",
            "type": "object",
            "additionalProperties": true
          },
          "predicate": {
            "$ref": "#/components/schemas/AvailablePagePredicate"
          },
          "__source": {
            "$ref": "#/components/schemas/SectionSource"
          },
          "assets": {
            "$ref": "#/components/schemas/SectionAssets"
          }
        }
      },
      "SectionAssets": {
        "type": "object",
        "properties": {
          "js": {
            "type": "string",
            "description": "The CDN URL of JS bundle."
          },
          "css": {
            "type": "string",
            "description": "The CDN URL of CSS file."
          }
        },
        "description": "An object defining source details for the section."
      },
      "SectionSource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The source id specifying the source of the section."
          },
          "bundle_name": {
            "type": "string",
            "description": "This is the extension binding name containing this section."
          },
          "type": {
            "type": "string",
            "description": "This is source type. It will either be themeBundle or extension."
          }
        },
        "description": "An object defining source details for the section."
      },
      "AvailablePagePredicate": {
        "type": "object",
        "description": "An object defining conditions or predicates for the section.",
        "properties": {
          "screen": {
            "$ref": "#/components/schemas/AvailablePageScreenPredicate"
          },
          "user": {
            "$ref": "#/components/schemas/AvailablePageUserPredicate"
          },
          "route": {
            "$ref": "#/components/schemas/AvailablePageRoutePredicate"
          },
          "schedule": {
            "$ref": "#/components/schemas/AvailablePageSchedulePredicate"
          },
          "platform": {
            "$ref": "#/components/schemas/AvailablePagePlatformPredicate"
          },
          "zones": {
            "type": "array",
            "description": "An array of zone ids associated with the section.",
            "items": {
              "type": "string",
              "description": "A unique identifier for a zone."
            }
          }
        }
      },
      "AvailablePageScreenPredicate": {
        "type": "object",
        "description": "Predicate related to screen conditions.",
        "properties": {
          "mobile": {
            "description": "Indicates if the predicate applies to mobile screens.",
            "type": "boolean"
          },
          "desktop": {
            "description": "Indicates if the predicate applies to desktop screens.",
            "type": "boolean"
          },
          "tablet": {
            "description": "Indicates if the predicate applies to tablet screens.",
            "type": "boolean"
          }
        }
      },
      "AvailablePageUserPredicate": {
        "type": "object",
        "description": "Predicate related to user conditions.",
        "properties": {
          "authenticated": {
            "type": "boolean",
            "description": "Indicates if the predicate applies to authenticated users."
          },
          "anonymous": {
            "description": "Indicates if the predicate applies to anonymous users.",
            "type": "boolean"
          }
        }
      },
      "AvailablePageRoutePredicate": {
        "type": "object",
        "description": "Predicate related to route conditions.",
        "properties": {
          "selected": {
            "type": "string",
            "description": "Specifies the type of route selection, which can be 'none', 'exact', or 'query'.",
            "enum": [
              "none",
              "exact",
              "query"
            ]
          },
          "exact_url": {
            "description": "The exact url for the route when 'selected' is set to 'exact'.",
            "type": "string"
          },
          "query": {
            "type": "object",
            "properties": {},
            "additionalProperties": true,
            "description": "An object representing query parameters for the route when 'selected' is set to 'query'."
          }
        }
      },
      "AvailablePageSchedulePredicate": {
        "type": "object",
        "description": "Scheduling values for a section.",
        "properties": {
          "cron": {
            "type": "string",
            "description": "A cron expression specifying the schedule for the predicate."
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "description": "The start date and time for the schedule, in iso 8601 format.",
            "example": "2019-08-06T18:25:43.511Z"
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "description": "The end date and time for the schedule, in iso 8601 format.",
            "example": "2019-08-06T18:25:43.511Z"
          }
        }
      },
      "ThemesSchema": {
        "type": "object",
        "description": "The response body containing the theme details.",
        "properties": {
          "font": {
            "$ref": "#/components/schemas/Font"
          },
          "config": {
            "$ref": "#/components/schemas/Config"
          },
          "applied": {
            "type": "boolean",
            "description": "Whether the theme has been applied or not.",
            "example": true
          },
          "is_private": {
            "type": "boolean",
            "description": "Whether the theme is private or not.",
            "example": false
          },
          "tags": {
            "type": "array",
            "description": "An array of tags associated with the theme.",
            "items": {
              "type": "string",
              "description": "A single tag associated with the theme, represented as a string."
            }
          },
          "_id": {
            "type": "string",
            "description": "The unique identifier of the theme.",
            "example": "64be4423bc7b28003211322e"
          },
          "application_id": {
            "type": "string",
            "description": "The id of the application.",
            "example": "6487ea376e1442284917c44e"
          },
          "marketplace_theme_id": {
            "type": "string",
            "description": "The id of the theme in the marketplace.",
            "example": "648709a9dc78c855cc907ae5"
          },
          "meta": {
            "$ref": "#/components/schemas/ThemeMeta"
          },
          "name": {
            "type": "string",
            "description": "The name of the theme.",
            "example": "HKJun12"
          },
          "template_theme_id": {
            "type": "string",
            "description": "The id of the template theme.",
            "example": "6487143bebd1aebdeb6c9226"
          },
          "version": {
            "type": "string",
            "description": "The version of the theme.",
            "example": "1.0.0"
          },
          "styles": {
            "type": "object",
            "description": "The styles associated with the theme.",
            "additionalProperties": true
          },
          "created_at": {
            "type": "string",
            "description": "The creation timestamp of the theme.",
            "format": "date-time",
            "example": "2023-06-14T11:44:14.497Z"
          },
          "updated_at": {
            "type": "string",
            "description": "The last update timestamp of the theme.",
            "format": "date-time",
            "example": "2023-06-14T11:44:14.497Z"
          },
          "assets": {
            "$ref": "#/components/schemas/Assets"
          },
          "available_sections": {
            "type": "array",
            "description": "Available sections information.",
            "items": {
              "$ref": "#/components/schemas/SectionItem"
            }
          },
          "theme_type": {
            "type": "string",
            "description": "The theme or category type associated with the page.",
            "enum": [
              "vue2",
              "react"
            ],
            "example": "react"
          },
          "company_id": {
            "type": "number",
            "description": "The company id in which sales channel exists.",
            "example": 1
          },
          "src": {
            "type": "string"
          },
          "global_sections": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "Font": {
        "type": "object",
        "description": "An object representing font properties and attributes.",
        "properties": {
          "variants": {
            "$ref": "#/components/schemas/FontVariants"
          },
          "family": {
            "type": "string",
            "description": "The font family.",
            "example": "Poppins"
          }
        },
        "required": [
          "variants",
          "family"
        ]
      },
      "FontVariants": {
        "type": "object",
        "description": "Multiple variants of a font, each with specific properties related to styles or weights of the font.",
        "properties": {
          "light": {
            "$ref": "#/components/schemas/FontVariant"
          },
          "regular": {
            "$ref": "#/components/schemas/FontVariant"
          },
          "medium": {
            "$ref": "#/components/schemas/FontVariant"
          },
          "semi_bold": {
            "$ref": "#/components/schemas/FontVariant"
          },
          "bold": {
            "$ref": "#/components/schemas/FontVariant"
          }
        }
      },
      "FontVariant": {
        "type": "object",
        "description": "A variant of a font, containing properties related to specific styles or weights of the font.",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the font variant.",
            "example": "300"
          },
          "file": {
            "type": "string",
            "description": "The url of the font file.",
            "example": "https://fonts.gstatic.com/s/poppins/v9/pxiByp8kv8JHgFVrLDz8V1tvFP-KUEg.ttf"
          }
        },
        "required": [
          "name",
          "file"
        ]
      },
      "Config": {
        "type": "object",
        "description": "The configuration object that contains various settings and parameters. Each property within this object defines a specific configuration setting, allowing for customization and control over different aspects of the system or application.",
        "properties": {
          "current": {
            "type": "string",
            "description": "The current configuration.",
            "example": "Default"
          },
          "list": {
            "type": "array",
            "description": "A list of configurations.",
            "items": {
              "$ref": "#/components/schemas/ThemeConfiguration"
            }
          },
          "global_schema": {
            "$ref": "#/components/schemas/GlobalSchema"
          },
          "preset": {
            "type": "object",
            "description": "An object representing a preset configuration, containing an array of pages.",
            "additionalProperties": true,
            "example": {
              "custom_key": "custom_value"
            }
          }
        },
        "required": [
          "current",
          "list"
        ]
      },
      "ThemeConfiguration": {
        "type": "object",
        "description": "An object representing the configuration settings for a theme.",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the configuration.",
            "example": "Default"
          },
          "global_config": {
            "type": "object",
            "properties": {},
            "additionalProperties": true,
            "description": "A global configuration object containing various settings for the theme."
          },
          "page": {
            "type": "array",
            "description": "An array of pages associated with the theme configuration.",
            "items": {
              "type": "string",
              "description": "The identifier of a page."
            }
          }
        }
      },
      "CustomConfig": {
        "type": "object",
        "description": "An object representing custom configuration settings.",
        "properties": {
          "props": {
            "$ref": "#/components/schemas/CustomProps"
          }
        }
      },
      "CustomProps": {
        "type": "object",
        "description": "An object representing custom properties.",
        "properties": {
          "header_bg_color": {
            "type": "string",
            "description": "The header background color.",
            "example": "#ffffff"
          },
          "header_text_color": {
            "type": "string",
            "description": "The header text color.",
            "example": "#000000"
          },
          "header_border_color": {
            "type": "string",
            "description": "The header border color.",
            "example": "#e1e1e1"
          },
          "header_icon_color": {
            "type": "string",
            "description": "The header icon color.",
            "example": "#000000"
          },
          "header_cart_notification_bg_color": {
            "type": "string",
            "description": "The header cart notification background color.",
            "example": "#e8a76c"
          },
          "header_cart_notification_text_color": {
            "type": "string",
            "description": "The header cart notification text color.",
            "example": "#ffffff"
          },
          "header_nav_hover_color": {
            "type": "string",
            "description": "The header navigation hover color.",
            "example": "#999999"
          },
          "button_primary_color": {
            "type": "string",
            "description": "The primary button color.",
            "example": "#ffffff"
          },
          "button_primary_label_color": {
            "type": "string",
            "description": "The primary button label color.",
            "example": "#000000"
          },
          "button_add_to_cart_color": {
            "type": "string",
            "description": "The add to cart button color.",
            "example": "#000000"
          },
          "button_add_to_cart_label_color": {
            "type": "string",
            "description": "The add to cart button label color.",
            "example": "#ffffff"
          },
          "button_secondary_color": {
            "type": "string",
            "description": "The secondary button color.",
            "example": "#000000"
          },
          "button_secondary_label_color": {
            "type": "string",
            "description": "The secondary button label color.",
            "example": "#ffffff"
          },
          "button_tertiary_color": {
            "type": "string",
            "description": "The tertiary button color.",
            "example": "#000000"
          },
          "button_tertiary_label_color": {
            "type": "string",
            "description": "The tertiary button label color.",
            "example": "#000000"
          },
          "button_tertiary_hover_color": {
            "type": "string",
            "description": "The tertiary button hover color.",
            "example": "#000000"
          },
          "button_tertiary_hover_text_color": {
            "type": "string",
            "description": "The tertiary button hover text color.",
            "example": "#ffffff"
          },
          "text_heading_link_color": {
            "type": "string",
            "description": "The text heading link color.",
            "example": "#000000"
          },
          "text_body_color": {
            "type": "string",
            "description": "The text body color.",
            "example": "#000000"
          },
          "text_price_color": {
            "type": "string",
            "description": "The text price color.",
            "example": "#000000"
          },
          "text_sale_price_color": {
            "type": "string",
            "description": "The text sale price color.",
            "example": "#fb406b"
          },
          "text_strikethrough_price_color": {
            "type": "string",
            "description": "The text strikethrough price color.",
            "example": "#9b9b9b"
          },
          "text_discount_color": {
            "type": "string",
            "description": "The text discount color.",
            "example": "#ee478d"
          },
          "footer_bg_color": {
            "type": "string",
            "description": "The footer background color.",
            "example": "#ffffff"
          },
          "footer_text_color": {
            "type": "string",
            "description": "The footer text color.",
            "example": "#999999"
          },
          "footer_border_color": {
            "type": "string",
            "description": "The footer border color.",
            "example": "#e1e1e1"
          },
          "footer_nav_hover_color": {
            "type": "string",
            "description": "The footer navigation hover color.",
            "example": "#000000"
          },
          "disable_cart": {
            "type": "boolean",
            "description": "Whether to disable the cart or not.",
            "example": false
          },
          "is_menu_below_logo": {
            "type": "boolean",
            "description": "Whether the menu is below the logo or not.",
            "example": false
          },
          "menu_position": {
            "type": "string",
            "description": "The position of the menu.",
            "example": "left"
          }
        }
      },
      "GeneralSetting": {
        "type": "object",
        "description": "General settings.",
        "properties": {
          "theme": {
            "$ref": "#/components/schemas/ThemeSetting"
          },
          "text": {
            "$ref": "#/components/schemas/TextSetting"
          },
          "button": {
            "$ref": "#/components/schemas/ButtonSetting"
          },
          "sale_discount": {
            "$ref": "#/components/schemas/SaleDiscountSetting"
          },
          "header": {
            "$ref": "#/components/schemas/HeaderSetting"
          },
          "footer": {
            "$ref": "#/components/schemas/FooterSetting"
          }
        }
      },
      "AdvanceSetting": {
        "type": "object",
        "description": "Advanced configuration settings.",
        "properties": {
          "overlay_popup": {
            "$ref": "#/components/schemas/OverlayPopupSetting"
          },
          "divider_stroke_highlight": {
            "$ref": "#/components/schemas/DividerStrokeHighlightSetting"
          },
          "user_alerts": {
            "$ref": "#/components/schemas/UserAlertsSetting"
          }
        }
      },
      "UserAlertsSetting": {
        "type": "object",
        "description": "User alerts configuration settings.",
        "properties": {
          "success_background": {
            "type": "string",
            "description": "The success background color.",
            "example": "#C2DBC9"
          },
          "success_text": {
            "type": "string",
            "description": "The success text color.",
            "example": "#1C958F"
          },
          "error_background": {
            "type": "string",
            "description": "The error background color.",
            "example": "#E6D5D5"
          },
          "error_text": {
            "type": "string",
            "description": "The error text color.",
            "example": "#B24141"
          },
          "info_background": {
            "type": "string",
            "description": "The info background color.",
            "example": "#EBD3BC"
          },
          "info_text": {
            "type": "string",
            "description": "The info text color.",
            "example": "#D28F51"
          }
        }
      },
      "ThemeSetting": {
        "type": "object",
        "description": "An object representing theme settings.",
        "properties": {
          "page_background": {
            "type": "string",
            "description": "The page background color.",
            "example": "#F3F3ED"
          },
          "theme_accent": {
            "type": "string",
            "description": "The theme accent color.",
            "example": "#E1D0C8"
          }
        }
      },
      "TextSetting": {
        "type": "object",
        "description": "An object representing settings specific to text.",
        "properties": {
          "text_heading": {
            "type": "string",
            "description": "The text heading color.",
            "example": "#26201A"
          },
          "text_body": {
            "type": "string",
            "description": "The text body color.",
            "example": "#3C3131"
          },
          "text_label": {
            "type": "string",
            "description": "The text label color.",
            "example": "#7D7676"
          },
          "text_secondary": {
            "type": "string",
            "description": "The secondary text color.",
            "example": "#9C9C9C"
          }
        }
      },
      "ButtonSetting": {
        "type": "object",
        "description": "An object representing settings specific to buttons.",
        "properties": {
          "button_primary": {
            "type": "string",
            "description": "The primary button color.",
            "example": "#4E3F09"
          },
          "button_secondary": {
            "type": "string",
            "description": "The secondary button color.",
            "example": "#FFFFFF"
          },
          "button_link": {
            "type": "string",
            "description": "The button link color.",
            "example": "#B1655B"
          }
        }
      },
      "SaleDiscountSetting": {
        "type": "object",
        "description": "An object representing settings specific to sale discounts.",
        "properties": {
          "sale_badge_background": {
            "type": "string",
            "description": "The sale badge background color.",
            "example": "#FFFFFF"
          },
          "sale_badge_text": {
            "type": "string",
            "description": "The sale badge text color.",
            "example": "#1C958F"
          },
          "sale_discount_text": {
            "type": "string",
            "description": "The sale discount text color.",
            "example": "#1C958F"
          },
          "sale_timer": {
            "type": "string",
            "description": "The sale timer color.",
            "example": "#994449"
          }
        }
      },
      "HeaderSetting": {
        "type": "object",
        "description": "An object representing settings specific to headers.",
        "properties": {
          "header_background": {
            "type": "string",
            "description": "The header background color.",
            "example": "#F3F3ED"
          },
          "header_nav": {
            "type": "string",
            "description": "The header navigation color.",
            "example": "#261A1A"
          },
          "header_icon": {
            "type": "string",
            "description": "The header icon color.",
            "example": "#261A1A"
          }
        }
      },
      "FooterSetting": {
        "type": "object",
        "description": "An object representing settings specific to footers.",
        "properties": {
          "footer_background": {
            "type": "string",
            "description": "The footer background color.",
            "example": "#2C231E"
          },
          "footer_bottom_background": {
            "type": "string",
            "description": "The footer bottom background color.",
            "example": "#231812"
          },
          "footer_heading_text": {
            "type": "string",
            "description": "The footer heading text color.",
            "example": "#FFFFFF"
          },
          "footer_body_text": {
            "type": "string",
            "description": "The footer body text color.",
            "example": "#FFFFFF"
          },
          "footer_icon": {
            "type": "string",
            "description": "The footer icon color.",
            "example": "#FFFFFF"
          }
        }
      },
      "OverlayPopupSetting": {
        "description": "An object representing settings specific to overlay popups.",
        "type": "object",
        "properties": {
          "dialog_backgroung": {
            "type": "string",
            "description": "The dialog background color.",
            "example": "#FFFFFF"
          },
          "overlay": {
            "type": "string",
            "description": "The overlay color.",
            "example": "#14130E"
          }
        }
      },
      "DividerStrokeHighlightSetting": {
        "type": "object",
        "description": "An object representing settings specific to divider stroke highlight.",
        "properties": {
          "divider_strokes": {
            "type": "string",
            "description": "The divider strokes color.",
            "example": "#D4D1D1"
          },
          "highlight": {
            "type": "string",
            "description": "The highlight color.",
            "example": "#EDECE9"
          }
        }
      },
      "StaticConfig": {
        "type": "object",
        "description": "Configuration object holding static values for the application.",
        "properties": {
          "props": {
            "$ref": "#/components/schemas/StaticProps"
          }
        }
      },
      "StaticProps": {
        "type": "object",
        "description": "Various static properties.",
        "properties": {
          "colors": {
            "$ref": "#/components/schemas/Colors"
          },
          "auth": {
            "$ref": "#/components/schemas/AuthConfig"
          },
          "palette": {
            "$ref": "#/components/schemas/PaletteConfig"
          }
        }
      },
      "Colors": {
        "type": "object",
        "description": "Different color options.",
        "properties": {
          "primary_color": {
            "type": "string",
            "description": "The primary color.",
            "example": "#000000"
          },
          "secondary_color": {
            "type": "string",
            "description": "The secondary color.",
            "example": "#000000"
          },
          "accent_color": {
            "type": "string",
            "description": "The accent color.",
            "example": "#000000"
          },
          "link_color": {
            "type": "string",
            "description": "The link color.",
            "example": "#4499FF"
          },
          "button_secondary_color": {
            "type": "string",
            "description": "The secondary button color.",
            "example": "#000000"
          },
          "bg_color": {
            "type": "string",
            "description": "The background color.",
            "example": "#F8F8F8"
          }
        }
      },
      "AuthConfig": {
        "type": "object",
        "description": "An object representing the authentication configuration settings.",
        "properties": {
          "show_header_auth": {
            "type": "boolean",
            "description": "Whether to show header authentication or not.",
            "example": false
          },
          "show_footer_auth": {
            "type": "boolean",
            "description": "Whether to show footer authentication or not.",
            "example": false
          }
        }
      },
      "PaletteConfig": {
        "type": "object",
        "description": "Configuration settings for color palettes.",
        "properties": {
          "general_setting": {
            "$ref": "#/components/schemas/GeneralSetting"
          },
          "advance_setting": {
            "$ref": "#/components/schemas/AdvanceSetting"
          }
        }
      },
      "ThemeMeta": {
        "type": "object",
        "description": "Metadata for themes.",
        "properties": {
          "payment": {
            "$ref": "#/components/schemas/ThemePayment"
          },
          "description": {
            "type": "string",
            "description": "The description of the theme.",
            "example": "scribe your thescribe your the"
          },
          "industry": {
            "type": "array",
            "description": "An array of industries associated with the theme.",
            "items": {
              "type": "string",
              "description": "A specific industry associated with the theme providing a clear identification of each industry's involvement in the theme.",
              "example": "Arts and crafts"
            }
          },
          "release": {
            "$ref": "#/components/schemas/Release"
          },
          "images": {
            "$ref": "#/components/schemas/Images"
          },
          "slug": {
            "type": "string",
            "description": "The slug of the theme.",
            "example": "hkjun12"
          },
          "name": {
            "type": "string",
            "description": "The name of the theme.",
            "example": "HKJun12"
          }
        }
      },
      "ThemePayment": {
        "type": "object",
        "description": "An object representing the payment settings for themes.",
        "properties": {
          "is_paid": {
            "type": "boolean",
            "description": "Whether the theme is paid or not.",
            "example": false
          },
          "amount": {
            "type": "number",
            "description": "The amount of the theme.",
            "example": 0
          }
        }
      },
      "Release": {
        "type": "object",
        "description": "An object representing the release information and settings.",
        "properties": {
          "notes": {
            "type": "string",
            "description": "The release notes of the theme.",
            "example": "<p>escribe your new theme in just a few paragraphs or briefly list the exact changes, feature enhancements, or bug fixes it contains.</p>"
          },
          "version": {
            "type": "string",
            "description": "The version of the theme.",
            "example": "1.0.0"
          }
        }
      },
      "Images": {
        "type": "object",
        "description": "An object representing various image configurations and settings.",
        "properties": {
          "desktop": {
            "type": "string",
            "description": "The url of the desktop image.",
            "example": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/addsale/misc/pictures/free-icon/original/burYmo6Z--desktop.jpeg"
          },
          "mobile": {
            "type": "string",
            "description": "The url of the mobile image.",
            "example": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/addsale/misc/pictures/free-icon/original/EymjcVzm1-mobile.jpeg"
          }
        }
      },
      "Assets": {
        "type": "object",
        "description": "An object containing information about assets, such as images, files, or other resources used in the application.",
        "properties": {
          "umd_js": {
            "$ref": "#/components/schemas/UMDJs"
          },
          "common_js": {
            "$ref": "#/components/schemas/CommonJS"
          },
          "css": {
            "$ref": "#/components/schemas/CSS"
          }
        }
      },
      "UMDJs": {
        "type": "object",
        "description": "Urls for umd javascript assets.",
        "properties": {
          "link": {
            "type": "string",
            "example": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/addsale/organization/60afe92972b7a964de57a1d4/theme/assets/EeHIEp-3v_themeBundle.umd.min.js"
          },
          "links": {
            "type": "array",
            "description": "An array of strings representing urls or links.",
            "items": {
              "type": "string",
              "description": "Each item in the array is a string representing a theme bundle URL or link."
            },
            "example": [
              "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/addsale/organization/60afe92972b7a964de57a1d4/theme/assets/EeHIEp-3v_themeBundle.umd.min.js"
            ]
          }
        }
      },
      "CommonJS": {
        "type": "object",
        "description": "An object representing commonjs module information.",
        "properties": {
          "link": {
            "type": "string",
            "description": "A string representing the url or link to the commonjs module.",
            "example": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/addsale/organization/60afe92972b7a964de57a1d4/theme/assets/EeHIEp-3v_themeBundle.common.js"
          }
        }
      },
      "CSS": {
        "type": "object",
        "description": "An object representing css assets.",
        "properties": {
          "link": {
            "type": "string",
            "example": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/addsale/organization/60afe92972b7a964de57a1d4/theme/assets/EeHIEp-3v_themeBundle.umd.min.js"
          },
          "links": {
            "type": "array",
            "description": "An array of strings representing urls for css assets.",
            "items": {
              "type": "string",
              "description": "Each item in the array is a string representing a theme bundle URL or link."
            },
            "example": [
              "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/addsale/organization/60afe92972b7a964de57a1d4/theme/assets/EeHIEp-3v_themeBundle.css"
            ]
          }
        }
      },
      "SectionItem": {
        "type": "object",
        "description": "An object representing a section item.",
        "properties": {
          "props": {
            "type": "array",
            "description": "An array of objects representing properties or attributes of the section item.",
            "items": {
              "type": "object",
              "description": "An object representing a specific property or attribute of the section item.",
              "additionalProperties": true
            }
          },
          "blocks": {
            "type": "array",
            "description": "An array having blocks of the section.",
            "items": {
              "type": "object",
              "additionalProperties": true,
              "description": "An object representing an individual unit within the blocks array, containing specific properties and values."
            }
          },
          "preset": {
            "$ref": "#/components/schemas/SectionPreset"
          },
          "name": {
            "type": "string",
            "example": "section_extension",
            "description": "Name of the section."
          },
          "label": {
            "type": "string",
            "example": "Extensions",
            "description": "Label for the section."
          }
        }
      },
      "GlobalSchema": {
        "type": "object",
        "description": "A global schema object containing an array of properties.",
        "properties": {
          "props": {
            "type": "array",
            "description": "An array of properties associated with the global schema, where each property is represented by an object.",
            "items": {
              "$ref": "#/components/schemas/Prop"
            }
          }
        }
      },
      "SectionPreset": {
        "type": "object",
        "properties": {
          "blocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Block"
            }
          }
        }
      },
      "ImagePickerProp": {
        "type": "object",
        "description": "Properties specific to an image picker.",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of the property.",
            "example": "image_picker"
          },
          "value": {
            "type": "string",
            "description": "The value of the image picker property.",
            "example": ""
          }
        }
      },
      "Block": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of the block.",
            "example": "image_slide"
          },
          "name": {
            "type": "string",
            "description": "The name of the block.",
            "example": "Slide"
          },
          "props": {
            "$ref": "#/components/schemas/BlockProps"
          }
        }
      },
      "BlockProps": {
        "type": "object",
        "properties": {
          "image": {
            "$ref": "#/components/schemas/ImagePickerProp"
          },
          "slide_link": {
            "$ref": "#/components/schemas/UrlProp"
          }
        }
      },
      "UrlProp": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of the property.",
            "example": "url"
          },
          "value": {
            "type": "string",
            "description": "The value of the URL property.",
            "example": ""
          }
        }
      },
      "Prop": {
        "type": "object",
        "description": "An object representing a single property with various attributes.",
        "properties": {
          "type": {
            "type": "string",
            "example": "color",
            "description": "The type of the property."
          },
          "category": {
            "type": "string",
            "example": "Colors",
            "description": "The category of the property."
          },
          "id": {
            "type": "string",
            "example": "button_buy_it_now_label_color",
            "description": "The id of the property."
          },
          "label": {
            "type": "string",
            "example": "Buy It Now label/Check Pincode Button label",
            "description": "The label of the property."
          },
          "info": {
            "type": "string",
            "example": "This color will be applied on 'Check' button label in Check pincode popup & 'Buy It Now' button label in Product Detail Page(PDP)",
            "description": "Additional information about the property."
          }
        }
      },
      "AvailablePagePlatformPredicate": {
        "type": "object",
        "description": "An object of platform values enabled for the section.",
        "properties": {
          "ios": {
            "type": "boolean",
            "description": "Section visibility on ios platform.",
            "example": true
          },
          "android": {
            "type": "boolean",
            "description": "Section visibility on android platform.",
            "example": true
          },
          "web": {
            "type": "boolean",
            "description": "Section visibility on web platform.",
            "example": true
          }
        }
      },
      "BlitzkriegInternalServerErrorSchema": {
        "type": "object",
        "description": "Schema for an internal server error response in the blitzkrieg system.",
        "properties": {
          "message": {
            "description": "A descriptive message detailing the internal server error.",
            "type": "string"
          }
        }
      },
      "BlitzkriegApiErrorSchema": {
        "description": "Shema for an api error response in the blitzkrieg system.",
        "type": "object",
        "properties": {
          "message": {
            "description": "A descriptive message detailing the api error.",
            "type": "string"
          }
        }
      },
      "UpdateAttributesRequestPayload": {
        "type": "object",
        "properties": {
          "attributes": {
            "additionalProperties": true,
            "type": "object",
            "description": "Describes the request structure to update the user attribute."
          }
        },
        "description": "Describes the request structure to update the user attribute."
      },
      "UserAttributes": {
        "type": "object",
        "properties": {
          "attributes": {
            "additionalProperties": true,
            "type": "object",
            "description": "Describes the structure of user attribute."
          }
        },
        "description": "Describes the structure of user attribute."
      },
      "DeleteApplicationUserRequestSchema": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "description": "User id for the application user."
          },
          "reason": {
            "type": "string",
            "description": "Reason to delete the application user."
          },
          "reason_id": {
            "type": "string",
            "description": "Reason id of request to delete the application user ."
          },
          "request_id": {
            "type": "string",
            "description": "ID of request to delete the application user ."
          },
          "otp": {
            "type": "string",
            "description": "OTP to verify the delete application user request."
          }
        },
        "required": [
          "user_id",
          "otp",
          "reason",
          "reason_id"
        ],
        "description": "Describes the request structure to delete the application user."
      },
      "EditEmailRequestSchema": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email of the user."
          }
        },
        "required": [
          "email"
        ],
        "description": "Describes the request structure to update the email."
      },
      "SendVerificationLinkMobileRequestSchema": {
        "type": "object",
        "properties": {
          "verified": {
            "type": "boolean",
            "description": "Boolean to specify if the phone number is verified or not."
          },
          "active": {
            "type": "boolean",
            "description": "Boolean to specify if the phone number is active or not."
          },
          "country_code": {
            "type": "string",
            "x-not-enum": true,
            "description": "Country code for the phone number."
          },
          "phone": {
            "type": "string",
            "description": "Phone number."
          },
          "primary": {
            "type": "boolean",
            "description": "Boolean to specify if the phone number is primary or not."
          }
        },
        "required": [
          "country_code",
          "phone"
        ],
        "description": "Describes the request structure to send verification link to phone number."
      },
      "EditMobileRequestSchema": {
        "type": "object",
        "properties": {
          "country_code": {
            "type": "string",
            "x-not-enum": true,
            "description": "Country code for the phone number."
          },
          "phone": {
            "type": "string",
            "description": "Phone number of user."
          }
        },
        "required": [
          "country_code",
          "phone"
        ],
        "description": "Describes the request structure to edit the phone number."
      },
      "EditProfileRequestSchema": {
        "type": "object",
        "properties": {
          "ci": {
            "type": "boolean",
            "description": "Set to true if you want to encrypt the OTP."
          },
          "first_name": {
            "type": "string",
            "description": "First name of the application user."
          },
          "last_name": {
            "type": "string",
            "description": "Last name of the application user."
          },
          "mobile": {
            "$ref": "#/components/schemas/EditProfileMobileSchema"
          },
          "country_code": {
            "type": "string",
            "x-not-enum": true,
            "description": "Country code for the phone number."
          },
          "email": {
            "type": "string",
            "description": "Email id of user."
          },
          "gender": {
            "type": "string",
            "description": "Gender of user."
          },
          "dob": {
            "type": "string",
            "description": "Date of birth of user."
          },
          "profile_pic_url": {
            "type": "string",
            "description": "Profile picture of user."
          },
          "android_hash": {
            "type": "string",
            "description": "Unique hash value."
          },
          "sender": {
            "type": "string",
            "description": "Identity of the sender."
          },
          "register_token": {
            "type": "string",
            "description": "Unique temporary registration of the user."
          }
        },
        "description": "Describes the request structure to edit the profile details."
      },
      "EditProfileMobileSchema": {
        "type": "object",
        "properties": {
          "phone": {
            "type": "string",
            "description": "Phone number of user."
          },
          "country_code": {
            "type": "string",
            "x-not-enum": true,
            "description": "Country code for the phone number."
          }
        },
        "description": "Describes the request structure to edit the mobile number in profile details."
      },
      "SendEmailOtpRequestSchema": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email of a user to send email OTP."
          },
          "action": {
            "type": "string",
            "enum": [
              "send",
              "resend"
            ],
            "description": "Action to specify if to send or resent the OTP."
          },
          "token": {
            "type": "string",
            "description": "Token to validate the request."
          },
          "register_token": {
            "type": "string",
            "description": "Unique temporary registration of the user."
          }
        },
        "required": [
          "email",
          "action"
        ],
        "description": "Describes the request structure to send OTP to email."
      },
      "SendEmailForgotOtpRequestSchema": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email of a user to send email OTP."
          },
          "action": {
            "type": "string",
            "enum": [
              "send",
              "resend"
            ],
            "description": "Action to specify if to send or resent the OTP."
          },
          "token": {
            "type": "string",
            "description": "Token to validate the request."
          }
        },
        "required": [
          "email",
          "action"
        ],
        "description": "Describes the request structure to send OTP to email."
      },
      "VerifyEmailOtpRequestSchema": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email of a user to verify OTP."
          },
          "request_id": {
            "type": "string"
          },
          "action": {
            "type": "string",
            "description": "Action to verify the send or resent OTP."
          },
          "register_token": {
            "type": "string",
            "description": "Unique temporary registration of the user."
          },
          "otp": {
            "type": "string",
            "description": "OTP for verification."
          }
        },
        "required": [
          "email",
          "otp",
          "action"
        ],
        "description": "Describes the request structure to verify OTP."
      },
      "VerifyEmailForgotOtpRequestSchema": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email id of user."
          },
          "otp": {
            "type": "string",
            "description": "OTP for verification."
          },
          "request_id": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "otp"
        ],
        "description": "Describes the request structure to verify OTP for forgot email."
      },
      "VerifyOtpRequestSchema": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "Unique request id for the OTP sent to mobile number."
          },
          "register_token": {
            "type": "string",
            "description": "Unique temporary registration of the user."
          },
          "otp": {
            "type": "string",
            "description": "OTP for verification."
          }
        },
        "required": [
          "request_id",
          "otp"
        ],
        "description": "Describes the request structure to verify OTP."
      },
      "VerifyMobileForgotOtpRequestSchema": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "Unique request id for the OTP."
          },
          "otp": {
            "type": "string",
            "description": "OTP for verification."
          }
        },
        "required": [
          "request_id",
          "otp"
        ],
        "description": "Describes the request structure to verify OTP for forgot mobile number."
      },
      "SendMobileOtpRequestSchema": {
        "type": "object",
        "properties": {
          "ci": {
            "type": "boolean",
            "description": "Set to true if you want to encrypt the OTP."
          },
          "mobile": {
            "type": "string",
            "description": "Mobile number of user."
          },
          "country_code": {
            "type": "string",
            "x-not-enum": true,
            "description": "Country code for the phone number."
          },
          "action": {
            "type": "string",
            "enum": [
              "send",
              "resend"
            ],
            "description": "Action to specify if to send or resent the OTP."
          },
          "token": {
            "type": "string",
            "description": "Token to validate the request."
          },
          "android_hash": {
            "type": "string",
            "description": "Unique hash value."
          },
          "force": {
            "type": "string",
            "description": "Force verify the OTP."
          }
        },
        "required": [
          "action",
          "mobile",
          "country_code"
        ],
        "description": "Describes the request structure to send OTP on mobile."
      },
      "SendMobileForgotOtpRequestSchema": {
        "type": "object",
        "properties": {
          "mobile": {
            "type": "string",
            "description": "Phone number of user."
          },
          "country_code": {
            "type": "string",
            "x-not-enum": true,
            "description": "Country code for the phone number."
          },
          "action": {
            "type": "string",
            "enum": [
              "send",
              "resend"
            ],
            "description": "Action to specify if to send or resent the OTP."
          },
          "token": {
            "type": "string",
            "description": "Token to validate the request."
          },
          "android_hash": {
            "type": "string",
            "description": "Unique hash value."
          }
        },
        "required": [
          "action",
          "mobile",
          "country_code"
        ],
        "description": "Describes the request structure to send OTP on forgot mobile number."
      },
      "UpdatePasswordRequestSchema": {
        "type": "object",
        "properties": {
          "old_password": {
            "type": "string",
            "description": "Old password."
          },
          "new_password": {
            "type": "string",
            "description": "New password."
          }
        },
        "required": [
          "old_password",
          "new_password"
        ],
        "description": "Describes the request structure to update the password."
      },
      "FormRegisterRequestSchema": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "description": "First name of the application user."
          },
          "last_name": {
            "type": "string",
            "description": "Last name of the application user."
          },
          "gender": {
            "type": "string",
            "description": "Gender of user."
          },
          "email": {
            "type": "string",
            "description": "Email of user."
          },
          "password": {
            "type": "string",
            "description": "Password of user."
          },
          "phone": {
            "$ref": "#/components/schemas/FormRegisterRequestSchemaPhone"
          },
          "register_token": {
            "type": "string",
            "description": "Unique registration token of user."
          }
        },
        "description": "Describes the request structure to register new user."
      },
      "TokenRequestBodySchema": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Unique token."
          }
        },
        "required": [
          "token"
        ],
        "description": "Describes the request structure to login or register using a token."
      },
      "ForgotPasswordRequestSchema": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Unique code to verify request."
          },
          "password": {
            "type": "string",
            "description": "Password of user."
          }
        },
        "required": [
          "code",
          "password"
        ],
        "description": "Describes the request structure to initiate the password recovery process for the user."
      },
      "CodeRequestBodySchema": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Unique code to verify request."
          }
        },
        "required": [
          "code"
        ],
        "description": "Describes the request to send code to reset password."
      },
      "SendResetPasswordEmailRequestSchema": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email id of user."
          }
        },
        "required": [
          "email"
        ],
        "description": "Describes the request structure to reset a password using the link sent on email."
      },
      "PasswordLoginRequestSchema": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "description": "Password of user."
          },
          "username": {
            "type": "string",
            "description": "Username of user."
          }
        },
        "required": [
          "password",
          "username"
        ],
        "description": "Describes the request structure to login or register using an email address and password."
      },
      "SendOtpRequestSchema": {
        "type": "object",
        "properties": {
          "ci": {
            "type": "boolean",
            "description": "Set to true if you want to encrypt the OTP."
          },
          "country_code": {
            "type": "string",
            "x-not-enum": true,
            "description": "Country code for the phone number."
          },
          "mobile": {
            "type": "string",
            "description": "Phone number."
          },
          "android_hash": {
            "type": "string",
            "description": "Unique hash value."
          }
        },
        "required": [
          "country_code",
          "mobile"
        ],
        "description": "Describes the request structure to login or register with a one-time password (OTP) sent via email or sms."
      },
      "OAuthRequestSchema": {
        "type": "object",
        "properties": {
          "is_signed_in": {
            "type": "boolean",
            "description": "Boolean to specify if the user is signed in ."
          },
          "oauth2": {
            "$ref": "#/components/schemas/OAuthRequestSchemaOauth2"
          },
          "profile": {
            "$ref": "#/components/schemas/OAuthRequestSchemaProfile"
          }
        },
        "required": [
          "oauth2",
          "profile"
        ],
        "description": "Describes the request structure to login or register using facebook/google account credentials."
      },
      "OAuthRequestAppleSchema": {
        "type": "object",
        "properties": {
          "user_identifier": {
            "type": "string",
            "description": "Unique user identifier."
          },
          "oauth": {
            "$ref": "#/components/schemas/OAuthRequestAppleSchemaOauth"
          },
          "profile": {
            "$ref": "#/components/schemas/OAuthRequestAppleSchemaProfile"
          }
        },
        "description": "Describes the request structure to login or register in ios app using apple account credentials."
      },
      "UserObjectSchema": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserSchema"
          }
        },
        "description": "Describes the structure of user details."
      },
      "AuthSuccess": {
        "type": "object",
        "properties": {
          "register_token": {
            "type": "string",
            "description": "Unique registration token for user."
          },
          "user_exists": {
            "type": "boolean",
            "description": "Boolean which specifies if user is registered."
          },
          "user": {
            "$ref": "#/components/schemas/UserSchema"
          }
        },
        "description": "Describes the authentication success structure."
      },
      "UserExists": {
        "type": "object",
        "properties": {
          "user_exists": {
            "type": "boolean",
            "description": "Boolean which specifies if user is registered or not."
          }
        },
        "description": "Describes the response which specifies if user exists or not."
      },
      "SendOtp": {
        "type": "object",
        "properties": {
          "resend_timer": {
            "type": "integer",
            "description": "Time after which opt can be resent."
          },
          "resend_token": {
            "type": "string",
            "description": "Unique token to identify the OTP send request and resend the token."
          },
          "success": {
            "type": "boolean",
            "description": "Specify if the OTP is successfully sent."
          },
          "request_id": {
            "type": "string",
            "description": "Unique request id for the OTP."
          },
          "message": {
            "type": "string",
            "description": "Message to specify the OTP send status. Eg. OTP sent, failed to send OTP etc."
          },
          "mobile": {
            "type": "string",
            "description": "Phone number of user."
          },
          "country_code": {
            "type": "string",
            "x-not-enum": true,
            "description": "Country code for the phone number."
          },
          "email": {
            "type": "string",
            "description": "Email id of user."
          },
          "resend_email_token": {
            "type": "string",
            "description": "Unique token to identify the OTP send request and resend the token on email."
          },
          "register_token": {
            "type": "string",
            "description": "Unique registration token for user."
          },
          "verify_email_otp": {
            "type": "boolean",
            "description": "If email OTP verification is mandatory for registration."
          },
          "verify_mobile_otp": {
            "type": "boolean",
            "description": "If mobile OTP verification is mandatory for registration."
          },
          "user_exists": {
            "type": "boolean",
            "description": "If user is registered or not."
          }
        },
        "description": "Describes the successful response on sending OTP on user registration or authentication."
      },
      "EmailOtp": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "example": "1cc79c911923971580d903039ea9ee05"
          },
          "resend_timer": {
            "type": "integer",
            "format": "int32",
            "example": 30
          }
        }
      },
      "ProfileEditSuccess": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserSchema"
          },
          "register_token": {
            "type": "string",
            "description": "Unique registration token for user."
          },
          "resend_email_token": {
            "type": "string",
            "description": "Unique token to identify the request for OTP verification in case of unverified email."
          },
          "user_exists": {
            "type": "boolean",
            "description": "If user is registered or not."
          },
          "verify_email_link": {
            "type": "boolean",
            "description": "Whether to send a link to verify the registered email id of the user."
          },
          "verify_email_otp": {
            "type": "boolean",
            "description": "Whether to send a OTP to verify the registered email id of the user."
          },
          "verify_mobile_otp": {
            "type": "boolean",
            "description": "Whether to send a OTP to verify the registered phone of the user."
          },
          "email": {
            "type": "string",
            "description": "Email id of user."
          },
          "email_otp": {
            "$ref": "#/components/schemas/EmailOtp"
          },
          "request_id": {
            "type": "string",
            "description": "A random uuid string used to track the request."
          },
          "country_code": {
            "type": "string",
            "x-not-enum": true,
            "description": "The country specific prefix for the phone number."
          },
          "mobile": {
            "type": "string",
            "description": "The user's mobile number without the country code."
          },
          "success": {
            "type": "boolean",
            "description": "Whether the operation was successful."
          },
          "message": {
            "type": "string",
            "description": "Information about the operation's result."
          },
          "resend_timer": {
            "type": "integer",
            "description": "Time in seconds before an request can be resent."
          },
          "resend_token": {
            "type": "string",
            "description": "A token used to authorize the resending of request."
          }
        },
        "description": "Describes the response on successful user profile update."
      },
      "LoginSuccess": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserSchema"
          },
          "request_id": {
            "type": "string",
            "description": "A random uuid string used to track the send OTP response."
          },
          "register_token": {
            "type": "string",
            "description": "A token used for registration purposes."
          }
        },
        "description": "Schema representing the response received upon a successful login operation."
      },
      "ResetForgotPasswordSuccess": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Whether the password reset operation was successful."
          }
        },
        "description": "Schema representing the response received upon a successful password reset operation."
      },
      "VerifyOtpSuccess": {
        "type": "object",
        "properties": {
          "verify_mobile_link": {
            "type": "boolean",
            "description": "Whether verify mobile is done or not."
          },
          "user": {
            "$ref": "#/components/schemas/UserSchema"
          },
          "user_exists": {
            "type": "boolean",
            "description": "Whether the user already exists."
          },
          "register_token": {
            "type": "string",
            "description": "A token used for registration purposes."
          }
        },
        "description": "Schema representing the response received upon successful OTP verification."
      },
      "VerifyForgotOtpSuccess": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Whether the OTP verification was successful."
          },
          "forgot_token": {
            "type": "string",
            "description": "A token used for resetting the forgotten password."
          }
        },
        "description": "Schema representing the response received upon successful OTP verification for forgotten password."
      },
      "ResetPasswordSuccess": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of the password reset operation."
          }
        },
        "description": "Schema representing the response received upon a successful password reset operation."
      },
      "RegisterFormSuccess": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "The email address provided during registration."
          },
          "email_otp": {
            "$ref": "#/components/schemas/EmailOtp"
          },
          "resend_timer": {
            "type": "integer",
            "description": "The time in seconds before an OTP can be resent."
          },
          "resend_token": {
            "type": "string",
            "description": "A token used to authorize the resending of an OTP."
          },
          "resend_email_token": {
            "type": "string",
            "description": "A token used to authorize the resending of an OTP via email."
          },
          "register_token": {
            "type": "string",
            "description": "A token used for completing the registration process."
          },
          "success": {
            "type": "boolean",
            "description": "A boolean value indicating whether the registration operation was successful."
          },
          "request_id": {
            "type": "string",
            "description": "A random uuid string used to track the registration response."
          },
          "message": {
            "type": "string",
            "description": "A string containing additional information about the operation's result."
          },
          "mobile": {
            "type": "string",
            "description": "The user's phone mobile without the country code."
          },
          "country_code": {
            "type": "string",
            "x-not-enum": true,
            "description": "The country specific prefix for the phone number."
          },
          "verify_email_otp": {
            "type": "boolean",
            "description": "Whether email OTP verification is required."
          },
          "verify_mobile_otp": {
            "type": "boolean",
            "description": "Whether mobile OTP verification is required."
          },
          "user_exists": {
            "type": "boolean",
            "description": "Whether the user already exists."
          }
        },
        "description": "Schema representing the response received upon a successful user registration using a form."
      },
      "VerifyEmailSuccess": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Result of the email verification process."
          }
        },
        "description": "Schema representing the response received upon successful email verification."
      },
      "HasPasswordSuccess": {
        "type": "object",
        "properties": {
          "result": {
            "type": "integer",
            "description": "An integer value indicating whether the user has set a password (1 for true, 0 for false)."
          }
        },
        "description": "Schema representing the response received upon checking if a user has set an account password."
      },
      "LogoutSuccess": {
        "type": "object",
        "properties": {
          "logout": {
            "type": "boolean",
            "description": "Whether the logout operation was successful."
          }
        },
        "description": "Schema representing the response received upon a successful logout operation."
      },
      "DeleteUserSuccess": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Whether the user deletion operation was successful."
          }
        },
        "description": "Schema representing the response received upon a successful user deletion."
      },
      "OtpSuccess": {
        "type": "object",
        "properties": {
          "resend_timer": {
            "type": "integer",
            "description": "The time in seconds before an OTP can be resent."
          },
          "resend_token": {
            "type": "string",
            "description": "A token used to authorize the resending of an OTP."
          },
          "register_token": {
            "type": "string",
            "description": "A token used for completing the registration process."
          },
          "success": {
            "type": "boolean",
            "description": "Whether the OTP send operation was successful."
          },
          "request_id": {
            "type": "string",
            "description": "A random uuid string used to track the OTP send response."
          },
          "message": {
            "type": "string",
            "description": "Additional information about the operation's result."
          },
          "mobile": {
            "type": "string",
            "description": "The user's mobile number without the country code."
          },
          "country_code": {
            "type": "string",
            "x-not-enum": true,
            "description": "The country specific prefix for the phone number."
          }
        },
        "description": "Schema representing the response received upon successfully sending an OTP to the user's mobile."
      },
      "EmailOtpSuccess": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Whether the OTP send operation was successful."
          },
          "resend_email_token": {
            "type": "string",
            "description": "A token used to authorize the resending of an OTP via email."
          },
          "email_otp": {
            "$ref": "#/components/schemas/EmailOtp"
          }
        },
        "description": "Schema representing the response received upon successfully sending an OTP to the user's email."
      },
      "SessionListSuccess": {
        "type": "object",
        "properties": {
          "sessions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of active session identifiers."
          }
        },
        "description": "Schema representing the response received upon successfully retrieving all active sessions of a user."
      },
      "VerifyMobileOTPSuccess": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserSchema"
          },
          "verify_mobile_link": {
            "type": "boolean",
            "description": "Whether the mobile number verification link was successful."
          }
        },
        "description": "Schema representing the response received upon successfully verifying a mobile OTP."
      },
      "VerifyEmailOTPSuccess": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserSchema"
          },
          "verify_email_link": {
            "type": "boolean",
            "description": "Whether the email verification link was successful."
          }
        },
        "description": "Schema representing the response received upon successfully verifying an email OTP."
      },
      "SendMobileVerifyLinkSuccess": {
        "type": "object",
        "properties": {
          "verify_mobile_link": {
            "type": "boolean",
            "description": "Whether the mobile verification link was successfully sent."
          },
          "user": {
            "$ref": "#/components/schemas/UserSchema"
          }
        },
        "description": "Schema representing the response received upon successfully sending a verification link to a mobile number."
      },
      "SendEmailVerifyLinkSuccess": {
        "type": "object",
        "properties": {
          "verify_email_link": {
            "type": "boolean",
            "description": "Whether the email verification link was successfully sent."
          }
        },
        "description": "Schema representing the response received upon successfully sending a verification link to an email."
      },
      "APIError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The error code representing the type of error."
          },
          "message": {
            "type": "string",
            "description": "A descriptive message providing more details about the error."
          },
          "info": {
            "type": "string",
            "description": "A link to the error code description."
          },
          "request_id": {
            "type": "string",
            "description": "A random uuid string used to track the api request."
          },
          "error": {
            "type": "string",
            "description": "The error message or stack trace."
          },
          "meta": {
            "type": "object",
            "additionalProperties": true,
            "description": "Additional metadata associated with the error."
          },
          "authenticated": {
            "type": "boolean",
            "description": "Whether the user is authenticated."
          }
        },
        "description": "Schema representing the error response received upon a failed api request."
      },
      "FormRegisterRequestSchemaPhone": {
        "type": "object",
        "properties": {
          "country_code": {
            "type": "string",
            "x-not-enum": true,
            "description": "Country code for mobile number."
          },
          "mobile": {
            "type": "string",
            "description": "The user's mobile number without the country code."
          }
        },
        "description": "Schema representing the phone details for user registration."
      },
      "OAuthRequestSchemaOauth2": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "The access token issued by the oauth2 provider."
          },
          "expiry": {
            "type": "integer",
            "description": "The expiry time of the access token in milliseconds since epoch."
          },
          "refresh_token": {
            "type": "string",
            "description": "The refresh token issued by the oauth2 provider."
          }
        },
        "required": [
          "access_token"
        ],
        "description": "Schema representing the oauth2 token details."
      },
      "OAuthRequestSchemaProfile": {
        "type": "object",
        "properties": {
          "last_name": {
            "type": "string",
            "description": "The last name of the user."
          },
          "image": {
            "type": "string",
            "description": "The url of the user's profile picture."
          },
          "id": {
            "type": "string",
            "description": "The unique identifier of the user."
          },
          "email": {
            "type": "string",
            "description": "The email address of the user."
          },
          "full_name": {
            "type": "string",
            "description": "The full name of the user."
          },
          "first_name": {
            "type": "string",
            "description": "The first name of the user."
          }
        },
        "description": "Schema representing the profile information of the user."
      },
      "OAuthRequestAppleSchemaOauth": {
        "type": "object",
        "properties": {
          "identity_token": {
            "type": "string",
            "description": "The identity token issued by apple."
          }
        },
        "description": "Schema representing the oauth token details for apple login."
      },
      "OAuthRequestAppleSchemaProfile": {
        "type": "object",
        "properties": {
          "last_name": {
            "type": "string",
            "description": "The last name of the user."
          },
          "full_name": {
            "type": "string",
            "description": "The full name of the user."
          },
          "first_name": {
            "type": "string",
            "description": "The first name of the user."
          }
        },
        "description": "Schema representing the profile information of the user for apple login."
      },
      "PlatformSchema": {
        "type": "object",
        "properties": {
          "display": {
            "type": "string",
            "description": "The display name of the platform."
          },
          "look_and_feel": {
            "$ref": "#/components/schemas/LookAndFeel"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the configuration was last updated."
          },
          "active": {
            "type": "boolean",
            "description": "Is the application config active or not ."
          },
          "forgot_password": {
            "type": "boolean",
            "description": "Forgot password option to be given or not to application user."
          },
          "login": {
            "$ref": "#/components/schemas/Login"
          },
          "account_lockout": {
            "$ref": "#/components/schemas/AccountLockout"
          },
          "password_settings": {
            "$ref": "#/components/schemas/PasswordSettings"
          },
          "skip_captcha": {
            "type": "boolean",
            "description": "Skip the captcha or not ."
          },
          "name": {
            "type": "string",
            "description": "Name of the application."
          },
          "meta": {
            "$ref": "#/components/schemas/MetaSchema"
          },
          "_id": {
            "type": "string",
            "description": "Unique document id of the platform config."
          },
          "social": {
            "$ref": "#/components/schemas/Social"
          },
          "required_fields": {
            "$ref": "#/components/schemas/RequiredFields"
          },
          "register_required_fields": {
            "$ref": "#/components/schemas/RegisterRequiredFields"
          },
          "skip_login": {
            "type": "boolean",
            "description": "Whether to skip the login or not ."
          },
          "flash_card": {
            "$ref": "#/components/schemas/FlashCard"
          },
          "subtext": {
            "type": "string",
            "description": "Text to be shown at the top of the flash card like login to fynd, login to tira."
          },
          "social_tokens": {
            "$ref": "#/components/schemas/SocialTokens"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "When was the application platform config document was created."
          },
          "register": {
            "type": "boolean",
            "description": "Whether to show the registration page on landing page or not."
          },
          "mobile_image": {
            "type": "string",
            "nullable": true,
            "description": "Image to be shown on registration page for mobile devices."
          },
          "desktop_image": {
            "type": "string",
            "nullable": true,
            "description": "Image to be shown on registration page for desktop devices."
          },
          "delete_account_day": {
            "type": "integer",
            "description": "Number of days after which the user account will be deleted."
          },
          "delete_account_reasons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeleteAccountReasons"
            },
            "description": "List of reasons you can set  to ask user when account is being deleted from application."
          },
          "delete_account_consent": {
            "$ref": "#/components/schemas/DeleteAccountConsent"
          },
          "session_config": {
            "$ref": "#/components/schemas/SessionExpiry"
          },
          "__v": {
            "type": "integer",
            "description": "Version of the document."
          }
        },
        "description": "Schema representing the platform sales channel authentication configuration."
      },
      "LookAndFeel": {
        "type": "object",
        "properties": {
          "card_position": {
            "type": "string",
            "description": "Position of the card eg right, left, top-right etc."
          },
          "background_color": {
            "type": "string",
            "description": "Background colour of the card."
          }
        },
        "description": "Contains information of the card position and background colour."
      },
      "PasswordConfigs": {
        "type": "object",
        "properties": {
          "length": {
            "type": "number"
          },
          "require_special_character": {
            "type": "boolean"
          },
          "require_number": {
            "type": "boolean"
          },
          "require_capital_character": {
            "type": "boolean"
          }
        }
      },
      "PasswordHistory": {
        "type": "object",
        "properties": {
          "required": {
            "type": "boolean"
          },
          "count": {
            "type": "number"
          }
        }
      },
      "PasswordExpiry": {
        "type": "object",
        "properties": {
          "required": {
            "type": "boolean"
          },
          "duration": {
            "type": "number"
          }
        }
      },
      "PasswordSettings": {
        "type": "object",
        "properties": {
          "configs": {
            "$ref": "#/components/schemas/PasswordConfigs"
          },
          "history": {
            "$ref": "#/components/schemas/PasswordHistory"
          },
          "expiry": {
            "$ref": "#/components/schemas/PasswordExpiry"
          }
        }
      },
      "AccountLockout": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean"
          },
          "attempts": {
            "type": "number"
          },
          "duration": {
            "type": "number"
          }
        }
      },
      "Login": {
        "type": "object",
        "properties": {
          "password": {
            "type": "boolean",
            "description": "Application is providing login with password or not."
          },
          "otp": {
            "type": "boolean",
            "description": "Application is providing login with OTP or not."
          },
          "via": {
            "type": "string",
            "enum": [
              "email",
              "phone",
              "both"
            ]
          }
        },
        "description": "Contains information of the login options a application can use."
      },
      "MetaSchema": {
        "type": "object",
        "properties": {
          "fynd_default": {
            "type": "boolean",
            "description": "One of the custom field that you are storing in meta."
          }
        },
        "description": "Any additional information you want to store other than the documents fields."
      },
      "Social": {
        "type": "object",
        "properties": {
          "account_kit": {
            "type": "boolean",
            "description": "Is accountkit social login active for application or not."
          },
          "facebook": {
            "type": "boolean",
            "description": "Is facebook social login active for application or not ."
          },
          "google": {
            "type": "boolean",
            "description": "Is google social login active for application or not ."
          },
          "apple": {
            "type": "boolean",
            "description": "Is apple social login active for application or not."
          }
        },
        "description": "Type of social login are active or inactive for application."
      },
      "RequiredFields": {
        "type": "object",
        "properties": {
          "email": {
            "$ref": "#/components/schemas/PlatformEmail"
          },
          "mobile": {
            "$ref": "#/components/schemas/PlatformMobile"
          },
          "password": {
            "$ref": "#/components/schemas/PlatformPassword"
          }
        },
        "description": "Mandatory fields for user when registering as a user."
      },
      "PlatformEmail": {
        "type": "object",
        "properties": {
          "is_required": {
            "type": "boolean",
            "description": "Is email mandatory for user to register on a application or not."
          },
          "level": {
            "type": "string",
            "description": "Level of email mandatory hard is mandatory and soft is optional."
          }
        },
        "description": "Structure of email configuration."
      },
      "PlatformMobile": {
        "type": "object",
        "properties": {
          "is_required": {
            "type": "boolean",
            "description": "Is mobile mandatory for user to register on a application or not."
          },
          "level": {
            "type": "string",
            "description": "Level of mobile mandatory hard is mandatory and soft is optional."
          }
        },
        "description": "Structure of phone configuration."
      },
      "PlatformPassword": {
        "type": "object",
        "properties": {
          "is_required": {
            "type": "boolean"
          }
        }
      },
      "RegisterRequiredFields": {
        "type": "object",
        "properties": {
          "email": {
            "$ref": "#/components/schemas/RegisterRequiredFieldsEmail"
          },
          "mobile": {
            "$ref": "#/components/schemas/RegisterRequiredFieldsMobile"
          },
          "password": {
            "$ref": "#/components/schemas/PlatformPassword"
          }
        },
        "description": "Structure of mandatory fields while registering user."
      },
      "RegisterRequiredFieldsEmail": {
        "type": "object",
        "properties": {
          "is_required": {
            "type": "boolean",
            "description": "Is email mandatory for user to register on a application or not."
          },
          "level": {
            "type": "string",
            "description": "Level of email mandatory hard is mandatory and soft is optional."
          }
        },
        "description": "Structure of email configuration."
      },
      "RegisterRequiredFieldsMobile": {
        "type": "object",
        "properties": {
          "is_required": {
            "type": "boolean",
            "description": "Is mobile mandatory for user to register on a application or not."
          },
          "level": {
            "type": "string",
            "description": "Level of mobile mandatory hard is mandatory and soft is optional."
          }
        },
        "description": "Structure of phone configuration."
      },
      "FlashCard": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "Text to be shown in the flash card."
          },
          "text_color": {
            "type": "string",
            "description": "Text colour for the text in the flash card."
          },
          "background_color": {
            "type": "string",
            "description": "Background colour of the text to be shown on the flash card."
          }
        },
        "description": "Structure of flashcard details."
      },
      "SocialTokens": {
        "type": "object",
        "properties": {
          "facebook": {
            "$ref": "#/components/schemas/Facebook"
          },
          "accountkit": {
            "$ref": "#/components/schemas/Accountkit"
          },
          "google": {
            "$ref": "#/components/schemas/Google"
          }
        },
        "description": "Structure of social credentials of application owner."
      },
      "DeleteAccountReasons": {
        "type": "object",
        "properties": {
          "reason_text": {
            "type": "string",
            "description": "Text of the reason to be shown to user."
          },
          "reason_id": {
            "type": "string",
            "description": "Unique id of the reason ."
          },
          "show_text_area": {
            "type": "boolean",
            "description": "A boolean whether to show text area or not."
          }
        },
        "description": "Structure of reasons to be shown to user for delete account."
      },
      "DeleteAccountConsent": {
        "type": "object",
        "properties": {
          "consent_text": {
            "type": "string",
            "description": "Consent text to be shown to user."
          }
        },
        "description": "Structure of the delete account consent."
      },
      "Facebook": {
        "type": "object",
        "properties": {
          "app_id": {
            "type": "string",
            "description": "App id of the  credentials facebook."
          },
          "app_secret": {
            "type": "string"
          }
        },
        "description": "Structure of credentials of facebook social."
      },
      "Accountkit": {
        "type": "object",
        "properties": {
          "app_id": {
            "type": "string",
            "description": "App id of the  credentials account kit."
          },
          "app_secret": {
            "type": "string"
          }
        },
        "description": "Structure of credentials of account kit social."
      },
      "Google": {
        "type": "object",
        "properties": {
          "app_id": {
            "type": "string",
            "description": "App id of the  credentials google."
          },
          "app_secret": {
            "type": "string"
          }
        },
        "description": "Structure of credentials of google social."
      },
      "SessionExpiry": {
        "type": "object",
        "properties": {
          "duration": {
            "type": "integer",
            "description": "Number of days or hours based on type till which the session can be rolled back."
          },
          "type": {
            "type": "string",
            "enum": [
              "Minutes",
              "Days",
              "Hours"
            ],
            "description": "Days or hours the type of time for session rollback."
          },
          "is_rolling": {
            "type": "boolean",
            "description": "Whether session needs to be rollback or not."
          }
        },
        "description": "Structure of session expiry ."
      },
      "UserSchema": {
        "description": "Describes the user details structure.",
        "type": "object",
        "properties": {
          "debug": {
            "$ref": "#/components/schemas/DebugInfo"
          },
          "has_old_password_hash": {
            "description": "Has old password hash.",
            "type": "boolean"
          },
          "application_id": {
            "description": "Application id of the user.",
            "type": "string"
          },
          "user_id": {
            "description": "Unique id of the user.",
            "type": "string"
          },
          "first_name": {
            "description": "First name of the user.",
            "type": "string"
          },
          "meta": {
            "description": "Metadata of the user, used to store details about the user",
            "type": "object",
            "additionalProperties": true
          },
          "last_name": {
            "description": "Last name of the user",
            "type": "string"
          },
          "phone_numbers": {
            "description": "List of phone numbers of the user.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneNumber"
            }
          },
          "emails": {
            "description": "List of email addresses of the user.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Email"
            }
          },
          "gender": {
            "description": "Gender of the user.",
            "type": "string",
            "nullable": true
          },
          "dob": {
            "description": "Date of birth of the user.",
            "type": "string"
          },
          "active": {
            "description": "Is the user active.",
            "type": "boolean"
          },
          "profile_pic_url": {
            "description": "URL of the profile picture of the user.",
            "type": "string"
          },
          "username": {
            "description": "Unique username of the user.",
            "type": "string"
          },
          "account_type": {
            "description": "Type of user (user, programmatic (created by system))",
            "type": "string",
            "enum": [
              "user",
              "programmatic"
            ]
          },
          "_id": {
            "description": "Unique id of the user.",
            "type": "string"
          },
          "created_at": {
            "description": "Date and time of user creation.",
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "description": "Date and time of user update.",
            "type": "string",
            "format": "date-time"
          },
          "external_id": {
            "description": "Unique id referencing any user external documents (jio).",
            "type": "string"
          },
          "rr_id": {
            "description": "Unique id referencing any user external documents.",
            "type": "string"
          }
        }
      },
      "DebugInfo": {
        "description": "Parameters like source and platform for tracing purpose.",
        "type": "object",
        "properties": {
          "source": {
            "type": "string",
            "description": "Source service name."
          },
          "platform": {
            "type": "string",
            "description": "Platform type(eg; platform, partner)."
          }
        }
      },
      "PhoneNumber": {
        "type": "object",
        "description": "Describes the phone number structures.",
        "properties": {
          "phone": {
            "type": "string",
            "description": "Phone number of the user.",
            "example": "8888888888"
          },
          "country_code": {
            "type": "integer",
            "description": "Country code for mobile number.",
            "example": 91,
            "x-not-enum": true
          },
          "active": {
            "type": "boolean",
            "description": "Is the phone number active.",
            "example": true
          },
          "primary": {
            "type": "boolean",
            "description": "Is it a primary phone number.",
            "example": true
          },
          "verified": {
            "type": "boolean",
            "description": "Is the phone number verified.",
            "example": true
          }
        }
      },
      "Email": {
        "type": "object",
        "description": "Describes the email id structure.",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email address.",
            "example": "test@go.com"
          },
          "active": {
            "type": "boolean",
            "description": "Is the email active.",
            "example": true
          },
          "primary": {
            "type": "boolean",
            "description": "Is it a primary email.",
            "example": true
          },
          "verified": {
            "type": "boolean",
            "description": "Is the email verified.",
            "example": true
          }
        }
      },
      "ClickEventBatch": {
        "type": "object",
        "description": "Click event batch schema.",
        "additionalProperties": true,
        "properties": {
          "event_name": {
            "type": "string",
            "description": "Name of click event."
          }
        }
      },
      "ClickEventPayload": {
        "type": "object",
        "description": "Click event request schema.",
        "properties": {
          "batch": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClickEventBatch"
            },
            "description": "List of click events captured."
          },
          "sent_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ClickEventDetails": {
        "type": "object",
        "description": "Click event response schema.",
        "properties": {
          "success_count": {
            "type": "integer",
            "description": "Count of valid events."
          },
          "failed_count": {
            "type": "integer",
            "description": "Count of events failed in schema validation."
          },
          "failed_events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClickEventBatch"
            },
            "description": "List of failed events with error."
          }
        }
      }
    },
    "responses": {
      "BlitzkriegApiError": {
        "description": "API error. See the error object in the response body to know the exact reason.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BlitzkriegApiErrorSchema"
            },
            "examples": {
              "invalid_id": {
                "value": {
                  "message": "Invalid id"
                }
              }
            }
          }
        }
      },
      "BlitzkriegInternalServerError": {
        "description": "Internal Server Error. See the error object in the response body to know the exact reason.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BlitzkriegInternalServerErrorSchema"
            }
          }
        }
      }
    },
    "examples": {
      "OtpConfiguration": {
        "value": {
          "type": "numeric",
          "otp_length": 4,
          "expiry": {
            "type": "new",
            "duration": {
              "time": 5,
              "denomination": "min"
            }
          },
          "rate_limit": {
            "duration": 60,
            "limit": 5
          }
        }
      },
      "CommunicationConsentReq": {
        "value": {
          "response": "yes",
          "action": "optin",
          "channel": "sms"
        }
      },
      "CommunicationConsentRes": {
        "value": {
          "user_id": "5e56021c4bda3ccab6d9f884",
          "channels": {
            "email": {
              "response": "yes",
              "display_name": "Email"
            },
            "sms": {
              "response": "yes",
              "display_name": "SMS"
            },
            "whatsapp": {
              "response": "noaction",
              "display_name": "WhatsApp"
            }
          }
        }
      },
      "CommunicationConsent": {
        "value": {
          "app_id": "000000000000000000000004",
          "user_id": "5e56021c4bda3ccab6d9f884",
          "channels": {
            "email": {
              "response": "yes",
              "display_name": "Email"
            },
            "sms": {
              "response": "yes",
              "display_name": "SMS"
            },
            "whatsapp": {
              "response": "yes",
              "display_name": "WhatsApp",
              "country_code": "91",
              "phone_number": "9869821300"
            }
          }
        }
      },
      "PushtokenReq": {
        "value": {
          "action": "create",
          "bundle_identifier": "000002",
          "push_token": "45",
          "unique_device_id": "3",
          "type": "fynd-platform"
        }
      },
      "PushtokenResponseReset": {
        "value": {
          "_id": "601b6924d8ea9a061570a09f",
          "bundle_identifier": "000002",
          "push_token": "45",
          "unique_device_id": "3",
          "type": "fynd-platform",
          "platform": "web",
          "application_id": "000000000000000000000004",
          "user_id": "5e56021c4bda3ccab6d9f884",
          "created_at": "2021-02-04T03:25:24.765Z",
          "updated_at": "2021-02-04T03:25:51.152Z",
          "expired_at": "2021-02-05T03:25:51.138Z"
        }
      },
      "BlogResponse": {
        "value": {
          "_id": "5eaa451a21a4dd75f0fd96c5",
          "application": "5d3ebd89f540e7506b8b3548",
          "tags": [
            "abhinav"
          ],
          "title": "my first blog",
          "slug": "1st_blog",
          "feature_image": {
            "secure_url": "https://google.com"
          },
          "content": [
            {
              "type": "html",
              "value": "<p>hey there!</p>"
            }
          ],
          "published": true,
          "author": {
            "name": "Fynd App"
          },
          "date_meta": {
            "created_on": "2021-03-14T06:49:03.945Z",
            "modified_on": "2021-03-14T06:49:03.945Z"
          },
          "summary": "Blogs summary text"
        }
      },
      "BlogGetResponse": {
        "value": {
          "items": [
            {
              "date_meta": {
                "created_on": "2021-03-14T06:49:03.945Z",
                "modified_on": "2021-03-14T06:49:03.945Z"
              },
              "tags": [],
              "_id": "604db275b3ae202873964d94",
              "content": [
                {
                  "type": "html",
                  "value": "<p>test abhinav</p>"
                }
              ],
              "title": "1st Blog",
              "slug": "1st-blog",
              "published": true,
              "feature_image": {
                "secure_url": ""
              },
              "application": "000000000000000000000001",
              "author": {
                "name": "Fynd App"
              },
              "summary": "Blogs summary text"
            }
          ],
          "page": {
            "type": "number",
            "current": 1,
            "size": 1,
            "item_total": 2,
            "has_next": true
          },
          "filters": {
            "tags": [
              "gaming",
              "fashion",
              "pop culture",
              "travelling"
            ]
          }
        }
      },
      "DataLoaderResponse": {
        "value": {
          "items": [
            {
              "name": "Algolia",
              "is_selected": false,
              "type": "url",
              "_id": "61bc4523a7ffc7504f4de4a5",
              "service": "catalog",
              "operation_id": "fetchSuggestions",
              "url": "/ext/example/url",
              "created_at": "2023-07-25T09:11:37.190Z",
              "modified_at": "2023-07-29T10:50:01.879Z",
              "application": "64d37ebf989a52a3b43ea28b",
              "company": "22"
            },
            {
              "name": "Algolia v3",
              "is_selected": false,
              "type": "url",
              "_id": "61bc452da7ffc7504f4de4a7",
              "service": "catalog",
              "operation_id": "fetchSuggestions",
              "url": "/ext/example/url",
              "created_at": "2023-07-25T09:11:37.190Z",
              "modified_at": "2023-07-29T10:50:01.879Z",
              "application": "64d37ebf989a52a3b43ea28b",
              "company": "22"
            }
          ]
        }
      },
      "AppFaqs": {
        "value": {
          "faqs": [
            {
              "_id": "5eb2db750a8ebf497e315028",
              "question": "how to refer my friend",
              "answer": "1. Click on refer and earn image in fynd app\n2. Click on share the code\n3. Use any method for sharing\n4. Once the user activates the app with your code, both of you will get the refereal credits.",
              "slug": "how to refer",
              "application": "000000000000000000000001"
            }
          ]
        }
      },
      "CategorySchema": {
        "value": {
          "categories": [
            {
              "_id": "64d1eef9f76a12ff011ca3af",
              "application": "64d37ebf989a52a3b43ea28b",
              "title": "FAQ Group Test 1",
              "description": "",
              "index": 23,
              "slug": "testingslugfirsst",
              "children": [],
              "icon_url": "https://cdn.fynd.com/v2/falling-surf-7c8bb8/fyndnp/wrkr/addsale/company/2707/applications/64be343872985245a63265f2/faq/pictures/square-logo/original/VvcjJUWgM-FAQ-icon.webp",
              "__v": 0
            },
            {
              "_id": "64d1eef9f76a12ff011ca3cd",
              "application": "64d37ebf989a52a3b43ea28b",
              "title": "FAQ Group Test 2",
              "description": "",
              "index": 25,
              "slug": "testingslugsecond",
              "children": [
                "64b7d7515668f85a50275bfd"
              ],
              "icon_url": "https://cdn.fynd.com/v2/falling-surf-7c8bb8/fyndnp/wrkr/addsale/company/2707/applications/64be343872985245a63265f2/faq/pictures/square-logo/original/VvcjJUWgM-FAQ-icon.webp",
              "__v": 0
            }
          ]
        }
      },
      "FaqSchema": {
        "value": {
          "_id": "5eb2db750a8ebf497e315028",
          "question": "how to refer my friend",
          "answer": "1. Click on refer and earn image in fynd app\n2. Click on share the code\n3. Use any method for sharing\n4. Once the user activates the app with your code, both of you will get the refereal credits.",
          "slug": "how to refer",
          "tags": [],
          "application": "000000000000000000000001"
        }
      },
      "GetFaqCategoryBySlugSchema": {
        "value": {
          "category": {
            "_id": "64d1eef9f76a12ff011ca3af",
            "application": "64d37ebf989a52a3b43ea28b",
            "title": "FAQ Group Test 1",
            "description": "",
            "index": 23,
            "slug": "testingslugfirsst",
            "children": [],
            "icon_url": "https://cdn.fynd.com/v2/falling-surf-7c8bb8/fyndnp/wrkr/addsale/company/2707/applications/64be343872985245a63265f2/faq/pictures/square-logo/original/VvcjJUWgM-FAQ-icon.webp",
            "__v": 0
          }
        }
      },
      "GetFaqSchema": {
        "value": {
          "faqs": [
            {
              "_id": "64b7d7515668f85a50275bfd",
              "application": "64d37ebf989a52a3b43ea28b",
              "slug": "question-1",
              "question": "hello?",
              "answer": "Hi",
              "tags": [],
              "__v": 0
            }
          ]
        }
      },
      "Seo": {
        "value": {
          "seo": {
            "details": {
              "title": "Zyosa Zyosa",
              "description": "",
              "image_url": ""
            },
            "robots_txt": "User-agent: * \nAllow: / \nsancisciasn xwsaixjowqnxwsiwjs",
            "sitemap_enabled": false,
            "cannonical_enabled": false,
            "_id": "6009819ee463ad40de397eb2",
            "app": "000000000000000000000001",
            "created_at": "2021-01-21T13:29:02.543Z",
            "updated_at": "2021-02-05T06:36:16.048Z",
            "__v": 11,
            "custom_meta_tags": [
              {
                "name": "test 0000",
                "content": "<meta name=\"test\" content=\"0000 cn dcje dcj rejre cjrenurenc \">",
                "_id": "6017c301bde3c21dbb13b284"
              },
              {
                "name": "cwdcdc",
                "content": "<meta content=\"wdcewdewc\">",
                "_id": "6017c675bde3c22cfb13b290"
              }
            ]
          }
        }
      },
      "SeoSchemaComponent": {
        "value": {
          "items": [
            {
              "_id": "65a6fafaba30223a41d9a7df",
              "title": "blogschema11",
              "page_type": "blog",
              "description": "",
              "schema": "ewogICAgICAgICAgICAiQGNvbnRleHQiOiAiaHR0cHM6Ly9zY2hlbWEub3JnIiwKICAgICAgICAgICAgIkB0eXBlIjogIldlYlNpdGUiLAogICAgICAgICAgICAidXJsIjogImh0dHA6Ly9leGFtcGxlLmNvbS8iLAogIAkJCSJ0ZXN0IjoiYmxvZ3NjaGVtYSIKICAgICAgICB9",
              "target_json": {
                "_id": "5eaa451a21a4dd75f0fd96c5",
                "application": "5d3ebd89f540e7506b8b3548",
                "tags": [
                  "abhinav"
                ],
                "title": "my first blog",
                "slug": "1st_blog",
                "feature_image": {
                  "secure_url": "https://google.com"
                },
                "content": [
                  {
                    "type": "html",
                    "value": "<p>hey there!</p>"
                  }
                ],
                "published": true,
                "author": {
                  "name": "Fynd App"
                },
                "date_meta": {
                  "created_on": "2021-03-14T06:49:03.945Z",
                  "modified_on": "2021-03-14T06:49:03.945Z"
                }
              },
              "active": true,
              "application": "61012f6a9250ccd1b9ef8a1d",
              "created_at": "2024-01-16T21:54:02.443+0000",
              "updated_at": "2024-01-16T21:54:58.601+0000",
              "status": "draft",
              "__v": 0
            }
          ]
        }
      },
      "SitemapConfigurationListSuccess": {
        "value": {
          "items": [
            {
              "name": "main-sitemap",
              "is_active": true,
              "sitemap": "<?xml version='1.0'?><urlset xmlns='http://www.sitemaps.org/schemas/sitemap/0.9'><url><loc>http://example.com</loc></url></urlset>",
              "created_at": "2024-01-01T00:00:00Z",
              "updated_at": "2024-01-01T00:00:00Z"
            }
          ],
          "page": {
            "type": "number",
            "item_total": 1,
            "has_next": false,
            "current": 1,
            "size": 20
          }
        }
      },
      "SitemapConfigurationSuccess": {
        "value": {
          "name": "main-sitemap",
          "is_active": true,
          "sitemap": "<?xml version='1.0'?><urlset xmlns='http://www.sitemaps.org/schemas/sitemap/0.9'><url><loc>http://example.com</loc></url></urlset>",
          "created_at": "2024-01-01T00:00:00Z",
          "updated_at": "2024-01-01T00:00:00Z"
        }
      },
      "Support": {
        "value": {
          "_id": "5ea4980b87a7944094216193",
          "application": "000000000000000000000001",
          "created_at": "2020-04-25T20:05:31.300Z",
          "updated_at": "2020-12-04T10:48:12.194Z",
          "contact": {
            "phone": {
              "active": true,
              "phone": [
                {
                  "key": "Jane Doe",
                  "code": "91",
                  "number": "9988776655",
                  "phone_type": "phone_number"
                },
                {
                  "key": "Jack jill",
                  "number": "18001801111",
                  "phone_type": "tollfree"
                }
              ]
            },
            "email": {
              "active": false,
              "email": []
            }
          },
          "created": true
        }
      },
      "Legal": {
        "value": {
          "tnc": "**Terms and Conditions test**",
          "policy": "**Privacy policy test**",
          "shipping": "**Shipping term and conditions**",
          "returns": "**Terms & conditions for returns **",
          "_id": "5e8b2b96abe7dc94c02c9ac9",
          "application": "000000000000000000000001",
          "faq": [
            {
              "question": "New Question",
              "answer": "New Answer"
            },
            {
              "question": "New",
              "answer": "sdfghjhg"
            },
            {
              "question": "test",
              "answer": "test"
            },
            {
              "question": "New Test",
              "answer": "New Test answer"
            },
            {
              "question": "test",
              "answer": "test"
            }
          ],
          "created_at": "2020-04-06T13:16:06.818Z",
          "updated_at": "2020-07-16T09:47:40.751Z",
          "__v": 260
        }
      },
      "LandingPageResponse": {
        "value": {
          "_id": "5eaa451a21a4dd75f0fd96c5",
          "application": "5d3ebd89f540e7506b8b3548",
          "_custom_json": {},
          "slug": "pnc-landing",
          "action": {
            "page": {
              "type": "home"
            },
            "type": "page"
          },
          "platform": [
            "web"
          ],
          "created_by": {
            "id": "000000000000000000000000"
          },
          "date_meta": {
            "created_on": "2020-04-30T03:25:14.549Z",
            "modified_on": "2020-04-30T03:25:14.549Z"
          },
          "archived": false
        }
      },
      "NavigationGet": {
        "value": {
          "items": [
            {
              "_id": "64aed3787441ee44ed99e904",
              "application": "64d37ebf989a52a3b43ea28b",
              "name": "testnavigationtestnavigationadacdscfcijerfhiorhoiufhiowhiihihwefifewiifhewifwifiweijfiowejfioweihofiohewfihwiojef",
              "slug": "default-nav",
              "navigation": [
                {
                  "display": "Home",
                  "image": "https://hdn-1.fynd.com/misc/pictures/free-icon/original/bBv0jdR2Rc-mystore-tab_y0dqzt.png",
                  "sort_order": 1,
                  "action": {
                    "page": {
                      "type": "home"
                    },
                    "type": "page"
                  },
                  "active": true,
                  "tags": [],
                  "acl": [
                    "all"
                  ],
                  "sub_navigation": []
                },
                {
                  "display": "Brands",
                  "image": "https://hdn-1.fynd.com/misc/pictures/free-icon/original/Pd3XC5DLB3-brands-tab_sfinpk.png",
                  "sort_order": 2,
                  "action": {
                    "page": {
                      "type": "brands"
                    },
                    "type": "page"
                  },
                  "active": true,
                  "tags": [],
                  "acl": [
                    "all"
                  ],
                  "sub_navigation": []
                },
                {
                  "display": "Collections",
                  "image": "https://hdn-1.fynd.com/misc/pictures/free-icon/original/By9halFhWy-collections-tab_a0tg9c.png",
                  "sort_order": 3,
                  "action": {
                    "page": {
                      "type": "collections"
                    },
                    "type": "page"
                  },
                  "active": true,
                  "tags": [],
                  "acl": [
                    "all"
                  ],
                  "sub_navigation": []
                },
                {
                  "display": "Categories",
                  "image": "https://hdn-1.fynd.com/misc/pictures/free-icon/original/ZXUrX0VMyT-categories-tab_ss8e0q.png",
                  "sort_order": 4,
                  "action": {
                    "page": {
                      "type": "categories"
                    },
                    "type": "page"
                  },
                  "active": true,
                  "tags": [],
                  "acl": [
                    "all"
                  ],
                  "sub_navigation": []
                },
                {
                  "display": "Primary Menu",
                  "image": "",
                  "sort_order": 5,
                  "action": {
                    "page": {
                      "type": "home"
                    },
                    "type": "page"
                  },
                  "active": true,
                  "tags": [],
                  "acl": [],
                  "sub_navigation": []
                }
              ],
              "version": 3,
              "date_meta": {
                "created_on": "2023-12-16T16:23:20.331Z",
                "modified_on": "2025-10-30T07:58:33.467Z"
              },
              "archived": false,
              "__v": 0,
              "platform": [
                "web"
              ],
              "orientation": {
                "landscape": [],
                "portrait": [
                  "bottom"
                ]
              }
            }
          ],
          "page": {
            "type": "number",
            "current": 1,
            "size": 10,
            "item_total": 1,
            "has_next": false
          }
        }
      },
      "TagsSchema": {
        "value": {
          "application": "000000000000000000000001",
          "_id": "5f7c37b2dd0144bb3a353c5f",
          "tags": [
            {
              "name": "Tapfiliate JS",
              "sub_type": "external",
              "_id": "5f7c37b2dd0144f1f8353c60",
              "type": "js",
              "url": "https://script.tapfiliate.com/tapfiliate.js",
              "position": "body-bottom",
              "attributes": {
                "async": true
              }
            }
          ]
        }
      },
      "4XXAPIError": {
        "value": {
          "message": "Oops! Something went wrong. Please try later",
          "status": 400,
          "code": "CX-1003",
          "exception": "",
          "info": "",
          "request_id": "",
          "stack_trace": "",
          "meta": {}
        }
      },
      "PageStorefrontResponse": {
        "value": {
          "date_meta": {
            "created_on": "2021-03-16T08:24:19.197Z",
            "modified_on": "2021-03-16T08:24:19.197Z"
          },
          "tags": [
            "my first page"
          ],
          "published": true,
          "component_ids": [],
          "archived": false,
          "_id": "60506dcad18cb33946026862",
          "title": "my first page",
          "slug": "1st_page",
          "feature_image": {
            "secure_url": "https://google.com/some-image"
          },
          "content_path": "https://hdn-1.fynd.com/company/1526/applications/61012f6a9250ccd1b9ef8a1d/pages/content/page_slug.html",
          "platform": "web",
          "description": "hey this is my first page",
          "visibility": {
            "test": true
          },
          "_schedule": {
            "start": "2021-04-23T23:50:00.000Z",
            "next_schedule": [
              {}
            ]
          },
          "seo": {
            "title": "my first page",
            "description": "hey this is my first page",
            "image": {
              "url": ""
            }
          },
          "type": "rawhtml",
          "application": "000000000000000000000001",
          "orientation": "portrait",
          "page_meta": []
        }
      },
      "PageGetStorefrontResponse": {
        "value": {
          "items": [
            {
              "_id": "64af00b447af02792fc97e75",
              "application": "64d37ebf989a52a3b43ea28b",
              "platform": "web",
              "title": "uvgbhjxxmuhrlctyrkpwtlqelhziemrgxlj",
              "slug": "uvgbhjxxmuhrlctyrkpwtlqelhziemrgxlj",
              "type": "rawhtml",
              "tags": [
                "wireless",
                "odit",
                "unleash",
                "Renminbi",
                "program"
              ],
              "orientation": "portrait",
              "description": "lime Gasoline Northeast Virginia East South generating Legacy Northeast Agent",
              "published": true,
              "_schedule": {
                "next_schedule": [
                  {
                    "start": "2023-07-12T19:36:09.693Z"
                  }
                ],
                "start": "2023-07-12T19:36:09.693Z"
              },
              "page_meta": [
                {
                  "key": "width",
                  "value": {
                    "value": 772,
                    "unit": "px"
                  }
                }
              ],
              "seo": {
                "title": "tfhtfrutyirlovykqthtgqamliminynmouk",
                "description": "AGP generating Illinois Soft pleasure Ferrari Minnesota when recontextualize New",
                "sitemap": {
                  "priority": 0.5,
                  "frequency": "never"
                },
                "canonical_url": "",
                "breadcrumbs": [],
                "meta_tags": []
              },
              "component_ids": [],
              "date_meta": {
                "created_on": "2023-07-12T19:36:20.582Z",
                "modified_on": "2023-07-12T19:36:20.582Z"
              },
              "archived": false,
              "__v": 0,
              "id": "64af00b447af02792fc97e75"
            }
          ],
          "page": {
            "type": "number",
            "current": 1,
            "size": 1,
            "item_total": 2,
            "has_next": true
          }
        }
      },
      "WellKnown": {
        "value": {
          "_id": "674c0e85fc9b7b5e507faedd",
          "slug": "assetlinks.json",
          "application_id": "64d37ebf989a52a3b43ea28b",
          "content": "{\"relation\":[\"delegate_permission/common.handle_all_urls\"],\"target\":{\"namespace\":\"android_app\",\"package_name\":\"com.example.app\"}}",
          "content_type": "application/json",
          "created_at": "2024-01-01T00:00:00Z",
          "updated_at": "2024-01-01T00:00:00Z"
        }
      },
      "CustomObjectBySlugRes": {
        "value": {
          "company_id": "1",
          "application_id": "000000000000000000000002",
          "status": "active",
          "slug": "jaipur",
          "display_name": "address #67a5d28edb820552a2c96d29",
          "definition": {
            "_id": "67a5d281db820552a2c96d17",
            "name": "address",
            "type": "address"
          },
          "references": [],
          "fields": [
            {
              "namespace": "address",
              "resource": "metaobject",
              "value": [
                "rajasthan"
              ],
              "resource_id": "67a5d28edb820552a2c96d29",
              "type": "string_single_line",
              "multi_value": false,
              "company_id": "1",
              "slug": "state",
              "id": "67a5d28edb820552a2c96d2d"
            },
            {
              "namespace": "address",
              "resource": "metaobject",
              "value": [
                324008
              ],
              "resource_id": "67a5d28edb820552a2c96d29",
              "type": "integer",
              "multi_value": false,
              "company_id": "1",
              "slug": "pincode",
              "id": "67a5d28edb820552a2c96d2e"
            }
          ],
          "definition_slug": "address",
          "id": "67a5d28edb820552a2c96d29"
        }
      },
      "TicketResponse": {
        "value": {
          "_id": "5f150f33d8bd5237b16bc279",
          "context": {
            "application_id": "5da1aa89e9b4036afd623686",
            "company_id": "568"
          },
          "created_on": {
            "user_agent": "Platform/Android Platform-Version/13 App-Name/Universal-Fynd-Store App-Version/3.2.5 Identifier/com.fynd.universal",
            "platform": "android",
            "app_version": "3.2.5",
            "os_version": "13"
          },
          "content": {
            "title": "Product Request",
            "description": "PGRpdj48Yj5EZXNjcmlwdGlvbjogPC9iPkxpbGxpZSBtb2M8YnI+PGI+UHJvZHVjdCBjb2RlOiA8L2I+NDBSOUxJRlAzQjxicj48Yj5SZXF1aXJlZCBTaXplKHMpOiA8L2I+PHVsPjxsaT48Yj43LjU6PC9iPiAxPC9saT48L3VsPjwvZGl2Pg==",
            "attachments": [
              {
                "display": "Image",
                "type": "image",
                "value": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/content://media/external/images/media/1000010294"
              }
            ]
          },
          "category": {
            "key": "product-request",
            "display": "Product Request",
            "sub_categories": [],
            "feedback_form": {}
          },
          "source": "sales_channel",
          "status": {
            "display": "In Progress",
            "color": "#ffa951",
            "key": "in_progress"
          },
          "video_room_id": "6502bf86bf5cd83470f50ef0",
          "priority": {
            "display": "Medium",
            "color": "#f37736",
            "key": "medium"
          },
          "created_by": {
            "id": "64e60b0ba4b643c18883b373"
          },
          "assigned_to": {
            "agent_id": "5d34aa6a8beb61fc19f98a67"
          },
          "tags": [],
          "is_feedback_pending": false,
          "subscribers": [],
          "additional_info": [],
          "created_at": "2023-09-14T08:08:38.452Z",
          "updated_at": "2023-10-10T04:50:16.685Z",
          "__v": 0
        }
      },
      "NotFoundExample": {
        "value": {
          "message": "Not Found Message"
        }
      },
      "TicketHistoryCreatePayload": {
        "value": {
          "type": "rating",
          "value": {
            "feedback": "Aag",
            "rating": [
              {
                "key": "overall",
                "rating": "4.0",
                "title": "Overall"
              },
              {
                "key": "audio",
                "rating": "5.0",
                "title": "Audio"
              },
              {
                "key": "video",
                "rating": "5.0",
                "title": "Video"
              }
            ]
          }
        }
      },
      "FailureTicketHistoryCreatePayload": {
        "value": {
          "type": "other",
          "value": {
            "feedback": "Aag",
            "rating": [
              {
                "key": "overall",
                "rating": "4.0",
                "title": "Overall"
              },
              {
                "key": "audio",
                "rating": "5.0",
                "title": "Audio"
              },
              {
                "key": "video",
                "rating": "5.0",
                "title": "Video"
              }
            ]
          }
        }
      },
      "CreateTicketHistoryResponse": {
        "value": {
          "type": "rating",
          "value": {
            "feedback": "Aag",
            "rating": [
              {
                "key": "overall",
                "rating": "4.0",
                "title": "Overall"
              },
              {
                "key": "audio",
                "rating": "5.0",
                "title": "Audio"
              },
              {
                "key": "video",
                "rating": "5.0",
                "title": "Video"
              }
            ]
          },
          "created_on": {
            "user_agent": "Ktor client",
            "platform": "web",
            "meta": {
              "browser": {
                "name": "",
                "version": ""
              }
            }
          },
          "created_by": "000000000000000016841367",
          "ticket_id": "5f3f7803f31c03e0386630fa",
          "_id": "65df18e9c082c1311ecb67b9",
          "created_at": "2024-02-28T11:28:41.772Z",
          "__v": 0
        }
      },
      "AddTicketPayload": {
        "value": {
          "created_by": {
            "id": "3d39cce2ffaffbee98dfefcb"
          },
          "status": "open",
          "priority": "high",
          "category": "themes",
          "content": {
            "title": "create tikcet payload, Please close.",
            "description": "PHA+dGVzdCB0aWNrZXQ6IHBsZWFzZSBjbG9zZSZuYnNwOzwvcD4=",
            "attachments": []
          },
          "_custom_json": {}
        }
      },
      "FailureAddTicketPayload": {
        "value": {
          "value": null,
          "created_by": {
            "id": "3d39cce2ffaffbee98dfefcb"
          },
          "status": "open",
          "priority": "anyother",
          "category": "themes",
          "content": {
            "title": "create ticket payload, Please close.",
            "description": "PHA+dGVzdCB0aWNrZXQ6IHBsZWFzZSBjbG9zZSZuYnNwOzwvcD4=",
            "attachments": []
          },
          "_custom_json": {}
        }
      },
      "CustomFormResponse": {
        "value": {
          "_id": "5fa03b1726cf56053159e0c4",
          "application_id": "000000000000000000000001",
          "slug": "video-assistance",
          "header_image": "https://lh6.googleusercontent.com/0VEYp02ezdWv1-v2XguYuNqHVO3m2bossilObdfiiZM6B65JF6zD-8E4kv6mwIbWStLDbS3Zp4h1a4Dabc60ghXH-lFIR25Sd17THoZvmqmQaMiCViX0eG-0Qy2f=w3334",
          "title": "Video Assistance",
          "description": "Please submit this form for booking an appointment on Video Call",
          "priority": {
            "display": "Medium",
            "color": "#f37736",
            "key": "medium"
          },
          "login_required": false,
          "should_notify": true,
          "inputs": [
            {
              "required": true,
              "display": "Name",
              "key": "name",
              "placeholder": "Enter your name",
              "tooltip": "Enter your name",
              "type": "text",
              "error_message": "Please do enter a valid name",
              "enum": [],
              "showRegexInput": false
            },
            {
              "required": true,
              "display": "Mobile",
              "key": "mobile",
              "placeholder": "Enter a valid mobile",
              "tooltip": "All the communication will be done on this mobile",
              "type": "mobile",
              "regex": "[0-9]{10}$",
              "error_message": "Please do enter a valid Mobile",
              "enum": [],
              "showRegexInput": true
            },
            {
              "required": true,
              "display": "Pincode",
              "key": "pincode",
              "placeholder": "Enter a valid pincode",
              "tooltip": "This will help us to identify nearest store for you.",
              "type": "number",
              "regex": "^[1-9][0-9]{5}$",
              "error_message": "Please do enter a valid Pincode",
              "enum": [],
              "showRegexInput": true
            },
            {
              "required": false,
              "display": "Email",
              "key": "email",
              "placeholder": "Enter a valid email",
              "type": "email",
              "regex": "\\S+@\\S+\\.\\S+",
              "error_message": "Please do enter a valid Email",
              "enum": [],
              "showRegexInput": true
            },
            {
              "required": true,
              "display": "Gender",
              "key": "gender",
              "tooltip": "Select your gender",
              "type": "radio",
              "enum": [
                {
                  "display": "Male",
                  "key": "male"
                },
                {
                  "display": "Female",
                  "key": "female"
                }
              ],
              "showRegexInput": false
            },
            {
              "required": true,
              "display": "Query",
              "key": "query",
              "placeholder": "Enter your query",
              "type": "textarea",
              "enum": [],
              "showRegexInput": false
            }
          ],
          "created_on": {
            "user_agent": "PostmanRuntime/7.26.5",
            "platform": "web",
            "meta": {
              "browser": {
                "name": "",
                "version": ""
              }
            }
          },
          "poll_for_assignment": {
            "duration": 20,
            "message": "We are looking for executive to connect you",
            "success_message": "Executive found",
            "failure_message": "All our executives are busy at the moment, We have accepted your request and someone will connect with you soon!"
          },
          "available_assignees": [],
          "created_at": "2020-09-12T10:44:37.053Z",
          "updated_at": "2021-01-28T06:15:21.815Z",
          "__v": 0
        }
      },
      "CreateTicketResponse": {
        "value": {
          "context": {
            "company_id": "568",
            "application_id": "000000000000000000000001"
          },
          "created_on": {
            "user_agent": "Ktor client",
            "platform": "web",
            "meta": {
              "browser": {
                "name": "",
                "version": ""
              }
            }
          },
          "content": {
            "title": "create tikcet payload, Please close.",
            "description": "PHA+dGVzdCB0aWNrZXQ6IHBsZWFzZSBjbG9zZSZuYnNwOzwvcD4=",
            "attachments": []
          },
          "category": {
            "key": "themes",
            "display": "Themes",
            "sub_categories": [],
            "group_id": 89000062934,
            "feedback_form": {}
          },
          "source": "platform_panel",
          "status": {
            "display": "Open",
            "color": "#eae22b",
            "key": "open"
          },
          "priority": {
            "display": "High",
            "color": "#fe4a49",
            "key": "high"
          },
          "created_by": {
            "id": "000000000000000016841367"
          },
          "tags": [],
          "integration": {
            "type": "freshdesk"
          },
          "is_feedback_pending": false,
          "subscribers": [],
          "additional_info": [
            {
              "display_name": "Ticket ID",
              "display_value": "65e5955a68021852354e1c30"
            }
          ],
          "_id": "65e5955a68021852354e1c30",
          "created_at": "2024-03-04T09:33:14.241Z",
          "updated_at": "2024-03-04T09:33:14.241Z",
          "__v": 0,
          "ticket_link": "https://fyndplatform.freshdesk.com/a/tickets/undefined"
        }
      },
      "Error4XXExample": {
        "value": {
          "message": {},
          "sentry": "c562de4016004e95a066b2325fb4f81c",
          "stack": "ValidationError"
        }
      },
      "CustomFormSubmissionPayload": {
        "value": {
          "response": [
            {
              "key": "name",
              "value": "asdf"
            },
            {
              "key": "email",
              "value": "asdf@asdf.com"
            },
            {
              "key": "mobile",
              "value": {
                "code": "91",
                "number": "9890425946"
              }
            },
            {
              "key": "pincode",
              "value": "400037"
            },
            {
              "key": "gender",
              "value": "male"
            },
            {
              "key": "query",
              "value": "asdf"
            }
          ]
        }
      },
      "SubmitCustomFormResponse": {
        "value": {
          "message": "Submitted successfully",
          "ticket": {
            "context": {
              "application_id": "000000000000000000000001",
              "company_id": "1"
            },
            "created_on": {
              "user_agent": "Ktor client",
              "platform": "web",
              "meta": {
                "browser": {
                  "name": "",
                  "version": ""
                }
              }
            },
            "response_id": "65e84bbf9d4778eb2eb65028",
            "content": {
              "title": "Video Assistance Response",
              "description": "PGI+TmFtZTwvYj46IGFzZGY8YnI+PGI+TW9iaWxlPC9iPjogKzkxLTk4OTA0MjU5NDY8YnI+PGI+UGluY29kZTwvYj46IDQwMDAzNzxicj48Yj5FbWFpbDwvYj46IGFzZGZAYXNkZi5jb208YnI+PGI+R2VuZGVyPC9iPjogTWFsZTxicj48Yj5RdWVyeTwvYj46IGFzZGY8YnI+",
              "attachments": []
            },
            "category": {
              "key": "video-assistance",
              "display": "Video Assistance",
              "sub_categories": [],
              "feedback_form": {}
            },
            "source": "sales_channel",
            "status": {
              "display": "Open",
              "color": "#eae22b",
              "key": "open"
            },
            "priority": {
              "display": "Low",
              "color": "#fed766",
              "key": "low"
            },
            "created_by": {
              "id": "000000000000000016841367",
              "details": {
                "phone": {
                  "code": "91",
                  "number": "9890425946"
                },
                "email": "asdf@asdf.com",
                "name": "asdf"
              }
            },
            "tags": [
              "video-assistance"
            ],
            "is_feedback_pending": false,
            "subscribers": [],
            "additional_info": [
              {
                "display_name": "Ticket ID",
                "display_value": "65e84bbf9d4778eb2eb6502a"
              }
            ],
            "_id": "65e84bbf9d4778eb2eb6502a",
            "created_at": "2024-03-06T10:55:59.582Z",
            "updated_at": "2024-03-06T10:55:59.582Z",
            "__v": 0,
            "ticket_id": "65e84bbf9d4778eb2eb6502a"
          },
          "response": {
            "application_id": "000000000000000000000001",
            "form_slug": "video-assistance",
            "response": [
              {
                "key": "name",
                "value": "asdf"
              },
              {
                "key": "email",
                "value": "asdf@asdf.com"
              },
              {
                "key": "mobile",
                "value": {
                  "code": "91",
                  "number": "9890425946"
                }
              },
              {
                "key": "pincode",
                "value": "400037"
              },
              {
                "key": "gender",
                "value": "male"
              },
              {
                "key": "query",
                "value": "asdf"
              }
            ],
            "created_on": {
              "user_agent": "Ktor client",
              "platform": "web",
              "meta": {
                "browser": {
                  "name": "",
                  "version": ""
                }
              }
            },
            "created_by": "000000000000000016841367",
            "_id": "65e84bbf9d4778eb2eb65028",
            "created_at": "2024-03-06T10:55:59.575Z",
            "updated_at": "2024-03-06T10:55:59.575Z",
            "__v": 0
          },
          "notified_to": []
        }
      },
      "FailureCustomFormSubmissionPayload": {
        "value": {
          "response": [
            {
              "key": "name",
              "value": "asdf"
            },
            {
              "key": "email",
              "value": "asdf@asdf.com"
            },
            {
              "key": "mobile",
              "value": {
                "code": "91",
                "number": "9890425946"
              }
            },
            {
              "key": "pincode",
              "value": "400037"
            },
            {
              "key": "gender",
              "value": "male"
            },
            {
              "key": "query",
              "value": "asdf"
            }
          ]
        }
      },
      "GenerateShipmentsAndCourierPartnerMumbai": {
        "value": {
          "shipments": [
            {
              "fulfillment_id": 9876,
              "shipment_type": "single_shipment",
              "count": 1,
              "weight": 1.5,
              "volumetric_weight": 1.5,
              "is_auto_assign": true,
              "from_serviceability": {
                "pincode": "400001",
                "sector": "East",
                "state": "Maharashtra",
                "country": "India",
                "city": "Mumbai",
                "country_iso_code": "IN",
                "location": {
                  "longitude": "73.1234",
                  "latitude": "19.4567"
                }
              },
              "articles": [
                {
                  "id": "SKU123",
                  "quantity": 5,
                  "item_id": 1,
                  "size": "SMALL",
                  "sla": "2023-08-25T05:51:03.134Z",
                  "is_set": false,
                  "set": {
                    "name": "Home Decor Set",
                    "quantity": 3,
                    "size_distribution": {
                      "sizes": [
                        {
                          "pieces": 2,
                          "size": "Small"
                        },
                        {
                          "pieces": 1,
                          "size": "Medium"
                        }
                      ]
                    }
                  }
                }
              ],
              "courier_partners": [
                {
                  "extension_id": "CP123",
                  "scheme_id": "AC001",
                  "area_code": {
                    "source": "A001",
                    "destination": "A100"
                  },
                  "tat": {
                    "min": 20000,
                    "max": 90000
                  },
                  "display_name": "FastShip",
                  "is_qc_enabled": true,
                  "is_self_ship": true,
                  "is_own_account": false
                }
              ],
              "promise": {
                "customer_promise": {
                  "min": "2023-12-14T09:30:00Z",
                  "max": "2023-12-16T09:30:00Z"
                },
                "meta": {
                  "seller_promise": {
                    "min": "2023-12-12T15:50:37Z",
                    "max": "2023-12-12T15:50:37Z"
                  },
                  "courier_partner_promise": {
                    "min": "2023-12-14T09:30:00Z",
                    "max": "2023-12-16T09:30:00Z",
                    "attributes": {
                      "tat": {
                        "min": 259200,
                        "max": 432000
                      }
                    }
                  },
                  "customer_initial_promise": {
                    "min": "2023-12-14T09:30:00Z",
                    "max": "2023-12-16T09:30:00Z"
                  }
                }
              },
              "tags": [
                {
                  "slug": "gifting",
                  "name": "Gifting"
                }
              ],
              "is_mto": false,
              "is_gift": true,
              "is_locked": false,
              "packaging": {
                "name": "Box",
                "id": "P001",
                "dimension": {
                  "length": 40,
                  "width": 30,
                  "height": 20
                }
              },
              "delivery_slots": {
                "delivery_date": "2023-08-29T00:00:00.000Z",
                "min_slot": "11:30",
                "max_slot": "16:30"
              }
            }
          ],
          "is_cod_available": true
        }
      },
      "GenerateShipmentsAndCourierPartnerPune": {
        "value": {
          "shipments": [
            {
              "fulfillment_id": 6543,
              "count": 5,
              "weight": 1.8,
              "volumetric_weight": 1.5,
              "is_auto_assign": true,
              "from_serviceability": {
                "pincode": "400001",
                "sector": "East",
                "state": "Maharashtra",
                "country": "India",
                "city": "Mumbai",
                "country_iso_code": "IN",
                "location": {
                  "longitude": "73.1234",
                  "latitude": "19.4567"
                }
              },
              "articles": [
                {
                  "id": "SKU456",
                  "quantity": 10,
                  "item_id": 2,
                  "size": "M",
                  "manufacturing_time_unit": "days",
                  "manufacturing_time": 1,
                  "sla": "2023-08-25T05:51:03.134Z"
                }
              ],
              "courier_partners": [
                {
                  "extension_id": "CP456",
                  "scheme_id": "AC002",
                  "area_code": {
                    "source": "A101",
                    "destination": "A200"
                  },
                  "tat": {
                    "min": 30000,
                    "max": 60000
                  },
                  "display_name": "QuickShip",
                  "is_qc_enabled": false,
                  "is_self_ship": true
                }
              ],
              "promise": {
                "customer_promise": {
                  "min": "2023-12-14T09:30:00Z",
                  "max": "2023-12-16T09:30:00Z"
                },
                "meta": {
                  "seller_promise": {
                    "min": "2023-12-12T15:50:37Z",
                    "max": "2023-12-12T15:50:37Z"
                  },
                  "courier_partner_promise": {
                    "min": "2023-12-14T09:30:00Z",
                    "max": "2023-12-16T09:30:00Z",
                    "attributes": {
                      "tat": {
                        "min": 259200,
                        "max": 432000
                      }
                    }
                  },
                  "customer_initial_promise": {
                    "min": "2023-12-14T09:30:00Z",
                    "max": "2023-12-16T09:30:00Z"
                  }
                }
              },
              "tags": [
                "Express",
                "National"
              ],
              "is_mto": true,
              "is_gift": false,
              "is_locked": true,
              "packaging": {
                "name": "Envelope",
                "id": "P003",
                "dimension": {
                  "length": 30,
                  "width": 20,
                  "height": 10
                }
              },
              "delivery_slots": {
                "delivery_date": "2023-08-29T00:00:00.000Z",
                "min_slot": "11:30",
                "max_slot": "16:30"
              }
            }
          ],
          "is_cod_available": false
        }
      },
      "GenerateShipmentsPune": {
        "value": {
          "to_serviceability": {
            "pincode": "400101",
            "sector": "West",
            "state": "Maharashtra",
            "country": "India",
            "city": "Pune",
            "country_iso_code": "IN",
            "location": {
              "longitude": "74.5678",
              "latitude": "20.7890"
            }
          },
          "location_articles": [
            {
              "fulfillment_id": 6543,
              "from_serviceability": {
                "pincode": "111045",
                "sector": "",
                "state": "Maharashtra",
                "country": "India",
                "city": "Pune",
                "country_iso_code": "IN",
                "location": {
                  "longitude": "18.5588",
                  "latitude": "73.7770"
                }
              },
              "fulfillment_type": "store",
              "fulfillment_tags": [
                "Store Tag"
              ],
              "articles": [
                {
                  "id": "SKU456",
                  "item_id": 1,
                  "department_id": 1,
                  "price": 1000,
                  "tags": [
                    "Item Tag1"
                  ],
                  "size": "S",
                  "group_id": "G567",
                  "weight": {
                    "shipping": 1500,
                    "unit": "gram",
                    "is_default": false
                  },
                  "attributes": {
                    "battery_operated": "yes",
                    "is_flammable": "no"
                  },
                  "category_id": 789,
                  "dimension": {
                    "height": 20,
                    "is_default": true,
                    "length": 30,
                    "unit": "cm",
                    "width": 20
                  },
                  "brand_id": 123,
                  "quantity": 75,
                  "manufacturing_time": 10,
                  "manufacturing_time_unit": "days",
                  "mto_quantity": 20,
                  "is_gift": true,
                  "is_set": false,
                  "set_quantity": 0,
                  "delivery_slots": {
                    "delivery_date": "2023-08-29T00:00:00.000Z",
                    "min_slot": "11:30",
                    "max_slot": "16:30"
                  },
                  "return_reason": {
                    "qc_type": [
                      "doorstep_qc"
                    ]
                  }
                }
              ]
            }
          ],
          "journey": "reverse",
          "payment_mode": "Online Banking"
        }
      },
      "GenerateShipmentsMumbai": {
        "value": {
          "to_serviceability": {
            "pincode": "400001",
            "sector": "East",
            "state": "Maharashtra",
            "country": "India",
            "city": "Mumbai",
            "country_iso_code": "IN",
            "location": {
              "longitude": "73.1234",
              "latitude": "19.4567"
            }
          },
          "location_articles": [
            {
              "fulfillment_id": 102,
              "from_serviceability": {
                "pincode": "400701",
                "sector": "",
                "state": "Maharashtra",
                "country": "India",
                "city": "Mumbai",
                "country_iso_code": "IN",
                "location": {
                  "longitude": "18.5588",
                  "latitude": "73.7770"
                }
              },
              "fulfillment_type": "store",
              "fulfillment_tags": [
                "Store Tag"
              ],
              "articles": [
                {
                  "id": "661395dbf140a21d18dc6454",
                  "price": 100,
                  "item_id": 7674763,
                  "tags": [
                    "Item Tag"
                  ],
                  "size": "S",
                  "group_id": "G123",
                  "weight": {
                    "shipping": 1000,
                    "unit": "gram",
                    "is_default": true
                  },
                  "attributes": {
                    "battery_operated": "yes",
                    "is_flammable": "no"
                  },
                  "category_id": 2227,
                  "dimension": {
                    "height": 15,
                    "is_default": false,
                    "length": 25,
                    "unit": "cm",
                    "width": 15
                  },
                  "brand_id": 456,
                  "department_id": 7,
                  "quantity": 1,
                  "manufacturing_time": 1,
                  "manufacturing_time_unit": "days",
                  "mto_quantity": 10,
                  "is_gift": false,
                  "is_set": true,
                  "set": {
                    "name": "Home Decor Set",
                    "quantity": 3,
                    "size_distribution": {
                      "sizes": [
                        {
                          "pieces": 2,
                          "size": "Small"
                        },
                        {
                          "pieces": 1,
                          "size": "Medium"
                        }
                      ]
                    }
                  },
                  "set_quantity": 1,
                  "delivery_slots": {
                    "delivery_date": "2023-08-29T00:00:00.000Z",
                    "min_slot": "11:30",
                    "max_slot": "16:30"
                  }
                }
              ]
            }
          ],
          "journey": "forward",
          "payment_mode": "Credit Card"
        }
      },
      "India": {
        "value": {
          "address": "ab",
          "area": "Ted 02",
          "landmark": "ab",
          "pincode": "400001",
          "city": "MUMBAI",
          "state": "MAHARASHTRA",
          "name": "Ted 02",
          "phone": "8005518467",
          "email": "wework@w.com"
        }
      },
      "ValidateAddressResponse1": {
        "value": {
          "address": "ab",
          "area": "Ted 02",
          "landmark": "ab",
          "pincode": "401107",
          "city": "THANE",
          "state": "STATE1"
        }
      },
      "UAE": {
        "value": {
          "address1": "WeWork",
          "address2": "Andheri",
          "landmark": "Police Station",
          "city": "Abu Dhabi",
          "sector": "Abu Dhabi",
          "name": "WeWork",
          "phone": "9876543210",
          "email": "wework@w.com"
        }
      },
      "GetCountries1": {
        "value": {
          "items": [
            {
              "id": "country1",
              "name": "INDIA",
              "type": "country",
              "display_name": "India",
              "iso2": "IN",
              "iso3": "IND",
              "timezones": [
                "Asia/Kolkata"
              ],
              "latitude": "24.4648",
              "longitude": "54.3618",
              "currency": {
                "code": "INR",
                "name": "Indian Rupee",
                "symbol": "?"
              },
              "phone_code": "+91",
              "hierarchy": [
                {
                  "display_name": "Pincode",
                  "slug": "pincode"
                },
                {
                  "display_name": "City",
                  "slug": "city"
                },
                {
                  "display_name": "State",
                  "slug": "state"
                }
              ]
            }
          ],
          "page": {
            "current": 1,
            "has_next": false,
            "has_previous": false,
            "item_total": 1,
            "size": 1,
            "type": "number"
          }
        }
      },
      "GetCountries2": {
        "value": {
          "items": [
            {
              "id": "669ea5280000000000000000",
              "name": "United Arab Emirates",
              "display_name": "United Arab Emirates",
              "type": "country",
              "iso2": "AE",
              "iso3": "ARE",
              "timezones": [
                "Asia/Dubai"
              ],
              "latitude": "24.4648",
              "longitude": "54.3618",
              "currency": {
                "code": "AED",
                "name": "United Arab Emirates Dirham",
                "symbol": "AED"
              },
              "phone_code": "+971",
              "hierarchy": [
                {
                  "display_name": "City",
                  "slug": "city"
                },
                {
                  "display_name": "Area",
                  "slug": "sector"
                }
              ]
            }
          ],
          "page": {
            "current": 1,
            "has_next": true,
            "has_previous": false,
            "item_total": 1,
            "size": 1,
            "type": "number"
          }
        }
      },
      "GetCountry1": {
        "value": {
          "name": "INDIA",
          "display_name": "India",
          "type": "country",
          "id": "64c6ac280000000000000000",
          "iso2": "IN",
          "iso3": "IND",
          "timezones": [
            "Asia/Kolkata"
          ],
          "latitude": "28.6667",
          "longitude": "77.2167",
          "currency": {
            "code": "INR",
            "name": "Indian Rupee",
            "symbol": "?"
          },
          "phone_code": "+91",
          "hierarchy": [
            {
              "display_name": "Pincode",
              "slug": "pincode"
            },
            {
              "display_name": "City",
              "slug": "city"
            },
            {
              "display_name": "State",
              "slug": "state"
            }
          ],
          "fields": {
            "serviceability_fields": [
              "pincode"
            ],
            "address_template": {
              "checkout_form": "{address} {area}_{landmark} {pincode}_{city} {state}_{name} {phone}_{email}",
              "store_os_form": "{pincode}_{address}_{area}_{landmark}",
              "default_display": "{address} {area}_{landmark}_{city} {state} {pincode}_{country}"
            },
            "address": [
              {
                "display_name": "Flat No/House No",
                "slug": "address",
                "input": "textbox",
                "required": true,
                "edit": true,
                "values": null,
                "validation": null,
                "error_text": null
              },
              {
                "display_name": "Building Name/street",
                "slug": "area",
                "input": "textbox",
                "required": true,
                "edit": true,
                "values": null,
                "validation": null,
                "error_text": null
              },
              {
                "display_name": "Locality/Landmark",
                "slug": "landmark",
                "input": "textbox",
                "required": true,
                "edit": true,
                "values": null,
                "validation": null,
                "error_text": null
              },
              {
                "display_name": "Pincode",
                "slug": "pincode",
                "input": "textbox",
                "required": true,
                "pre_fill": "400601",
                "edit": true,
                "values": {
                  "get_one": {
                    "operation_id": "getLocality",
                    "params": {
                      "path": {
                        "value": "400601",
                        "type": "pincode"
                      }
                    }
                  }
                },
                "validation": {
                  "type": "regex",
                  "regex": {
                    "value": "^[0-9]{6}$",
                    "length": {
                      "min": 6,
                      "max": 6
                    }
                  }
                },
                "error_text": "Invalid Pincode"
              },
              {
                "display_name": "City",
                "slug": "city",
                "input": "textbox",
                "required": true,
                "edit": false,
                "values": null,
                "validation": null,
                "error_text": "Invalid City"
              },
              {
                "display_name": "State",
                "slug": "state",
                "input": "textbox",
                "required": true,
                "edit": false,
                "values": null,
                "validation": null,
                "error_text": "Invalid State"
              },
              {
                "display_name": "Full Name",
                "slug": "name",
                "input": "textbox",
                "required": true,
                "edit": true,
                "values": null,
                "validation": {
                  "type": "regex",
                  "regex": {
                    "value": ".*",
                    "length": {
                      "min": null,
                      "max": null
                    }
                  }
                },
                "error_text": null
              },
              {
                "display_name": "Mobile Number",
                "slug": "phone",
                "input": "textbox",
                "required": true,
                "edit": true,
                "values": null,
                "validation": {
                  "type": "regex",
                  "regex": {
                    "value": "^\\\\+[0-9]{2}\\\\s[0-9]{10}$",
                    "length": {
                      "min": 13,
                      "max": 13
                    }
                  }
                },
                "error_text": "Invalid Phone Number"
              },
              {
                "display_name": "Email",
                "slug": "email",
                "input": "textbox",
                "required": false,
                "edit": true,
                "values": null,
                "validation": {
                  "type": "regex",
                  "regex": {
                    "value": "^[\\w\\.-]+@[a-zA-Z\\d\\.-]+\\.[a-zA-Z]{2,}$",
                    "length": {
                      "min": null,
                      "max": null
                    }
                  }
                },
                "error_text": "Invalid Email"
              }
            ]
          }
        }
      },
      "GetCountry2": {
        "value": {
          "name": "United Arab Emirates",
          "display_name": "United Arab Emirates",
          "type": "country",
          "id": "669ea5280000000000000000",
          "iso2": "AE",
          "iso3": "ARE",
          "timezones": [
            "Asia/Dubai"
          ],
          "latitude": "24.4648",
          "longitude": "54.3618",
          "currency": {
            "code": "AED",
            "name": "United Arab Emirates Dirham",
            "symbol": "AED"
          },
          "phone_code": "+971",
          "hierarchy": [
            {
              "display_name": "Area",
              "slug": "sector"
            },
            {
              "display_name": "City",
              "slug": "city"
            }
          ],
          "fields": {
            "serviceability_fields": [
              "city",
              "sector"
            ],
            "address_template": {
              "checkout_form": "{address} {area}_{landmark} {pincode}_{city} {state}_{name} {phone}_{email}",
              "store_os_form": "{address} {area}_{landmark} {pincode}_{city} {state}_{name} {phone}_{email}",
              "default_display": "{address} {area}_{landmark}_{city}_{sector} {country}"
            },
            "address": [
              {
                "display_name": "Flat No/House No",
                "slug": "address",
                "input": "textbox",
                "required": true,
                "edit": true,
                "values": null,
                "validation": null,
                "error_text": null
              },
              {
                "display_name": "Building Name/street",
                "slug": "area",
                "input": "textbox",
                "required": true,
                "edit": true,
                "values": null,
                "validation": null,
                "error_text": null
              },
              {
                "display_name": "Locality/Landmark",
                "slug": "landmark",
                "input": "textbox",
                "required": true,
                "edit": true,
                "values": null,
                "validation": null,
                "error_text": null
              },
              {
                "display_name": "City",
                "slug": "city",
                "input": "textbox",
                "required": true,
                "edit": true,
                "pre_fill": "Dubai",
                "values": {
                  "get_all": {
                    "operation_id": "getLocalities",
                    "params": {
                      "path": {
                        "type": "city"
                      }
                    }
                  }
                },
                "validation": null,
                "error_text": "Invalid Pincode"
              },
              {
                "display_name": "Area",
                "slug": "sector",
                "input": "textbox",
                "required": true,
                "edit": true,
                "pre_fill": "Downtown Dubai",
                "values": {
                  "get_all": {
                    "operation_id": "getLocalities",
                    "params": {
                      "path": {
                        "type": "sector"
                      },
                      "query": {
                        "city": "THANE"
                      }
                    }
                  }
                },
                "validation": null,
                "error_text": "Invalid Area"
              },
              {
                "display_name": "Full Name",
                "slug": "name",
                "input": "textbox",
                "required": true,
                "edit": true,
                "values": null,
                "validation": {
                  "type": "regex",
                  "regex": {
                    "value": ".*",
                    "length": {
                      "min": null,
                      "max": null
                    }
                  }
                },
                "error_text": null
              },
              {
                "display_name": "Mobile Number",
                "slug": "phone",
                "input": "textbox",
                "required": true,
                "edit": true,
                "values": null,
                "validation": {
                  "type": "regex",
                  "regex": {
                    "value": "^\\\\+[0-9]{2}\\\\s[0-9]{10}$",
                    "length": {
                      "min": 13,
                      "max": 13
                    }
                  }
                },
                "error_text": "Invalid Phone Number"
              },
              {
                "display_name": "Email",
                "slug": "email",
                "input": "textbox",
                "required": false,
                "edit": true,
                "values": null,
                "validation": {
                  "type": "regex",
                  "regex": {
                    "value": "^[\\w\\.-]+@[a-zA-Z\\d\\.-]+\\.[a-zA-Z]{2,}$",
                    "length": {
                      "min": null,
                      "max": null
                    }
                  }
                },
                "error_text": "Invalid Email"
              }
            ]
          }
        }
      },
      "GetLocalities1": {
        "value": {
          "items": [
            {
              "id": "64aec5a93a079bd32853783b",
              "name": "MAHARASHTRA",
              "display_name": "MAHARASHTRA",
              "parent_ids": [
                "country1"
              ],
              "type": "state",
              "localities": [
                {
                  "id": "country1",
                  "name": "INDIA",
                  "display_name": "India",
                  "parent_ids": [],
                  "type": "country"
                }
              ]
            }
          ],
          "page": {
            "current": 1,
            "has_next": false,
            "has_previous": false,
            "item_total": 1,
            "size": 1,
            "type": "number"
          }
        }
      },
      "GetLocality1": {
        "value": {
          "id": "649f1f280000000000000000",
          "name": "ABU DHABI",
          "display_name": "Abu Dhabi",
          "type": "city",
          "parent_uid": "64b78b60707446a37f2aec6f",
          "parent_ids": [
            "64b78b60707446a37f2aec6f"
          ],
          "localities": [
            {
              "name": "UNITED_ARAB_EMIRATES",
              "id": "64b78b60707446a37f2aec6f",
              "display_name": "United Arab Emirates",
              "type": "country",
              "parent_ids": []
            }
          ],
          "meta": {}
        }
      },
      "GetCountriesList1": {
        "value": {
          "results": [
            {
              "name": "India",
              "is_active": true,
              "parent_id": "ASIA",
              "sub_type": "country",
              "uid": "IN_001",
              "display_name": "Republic of India",
              "meta": {
                "iso2": "IN",
                "iso3": "IND",
                "currency": {
                  "code": "INR",
                  "name": "Indian Rupee",
                  "symbol": "â‚¹"
                },
                "phone_code": "+91",
                "parent_id": null,
                "zone": "red",
                "deliverables": [
                  "essential"
                ],
                "hierarchy": [
                  {
                    "display_name": "Pincode",
                    "slug": "pincode"
                  },
                  {
                    "display_name": "City",
                    "slug": "city"
                  },
                  {
                    "display_name": "State",
                    "slug": "state"
                  }
                ]
              },
              "logistics": {
                "dp": {}
              }
            }
          ]
        }
      },
      "SuccessfulZoneCreation": {
        "value": {
          "items": [
            {
              "name": "Maharashtra Pincode Zone",
              "slug": "maharashtra-pincode-zone",
              "application_id": "64aec5a93a079bd328537835",
              "company_id": 1,
              "type": "custom",
              "access_level": "private",
              "is_active": true,
              "is_opted": true,
              "is_public_opted": true,
              "geo_areas": [
                {
                  "id": "65d300b6a3e31dec430b7208",
                  "type": "delivery",
                  "name": "Geo Area 3"
                }
              ],
              "product": {
                "type": "department",
                "values": [
                  1
                ]
              },
              "stores": {
                "type": "all",
                "values": [
                  1
                ]
              },
              "summary": {
                "stores_count": 7,
                "products_count": 1,
                "regions": [
                  {
                    "name": "India",
                    "count": 2
                  }
                ]
              },
              "created_by": "Naruto",
              "created_on": "2024-02-20T15:36:32.061583",
              "modified_by": "Uzumaki",
              "modified_on": "2024-02-20T15:36:32.061583",
              "stage": "completed",
              "zone_id": "65e1b16b3b58a28839285f94"
            }
          ],
          "page": {
            "type": "number",
            "size": 1,
            "current": 1,
            "has_next": false,
            "item_total": 1
          }
        }
      },
      "GetPromiseDetailsExample": {
        "value": {
          "items": [
            {
              "uid": 1,
              "code": "HS-01",
              "name": "store1",
              "promise": {
                "min": "2024-08-11T12:40:39Z",
                "max": "2024-08-09T12:40:39Z"
              }
            },
            {
              "uid": 2,
              "code": "WH-01",
              "name": "store2",
              "promise": {
                "min": "2024-08-11T12:40:39Z",
                "max": "2025-02-09T12:40:39Z"
              }
            }
          ],
          "promise": {
            "min": "2024-08-11T12:40:39Z",
            "max": "2025-02-09T12:40:39Z"
          },
          "page": {
            "current": 2,
            "has_next": false,
            "has_previous": false,
            "item_total": 2,
            "size": 2,
            "type": "number"
          }
        }
      },
      "BaseErrorResponseExample": {
        "value": {
          "success": false,
          "message": "event failure messages."
        }
      },
      "GetInvoiceShipmentExample": {
        "value": {
          "success": true,
          "presigned_type": "GET",
          "shipment_id": "17291513844841775952",
          "presigned_url": ""
        }
      },
      "GetOrderByIdExample": {
        "value": {
          "order": {
            "bags_for_reorder": [
              {
                "item_id": 7500429,
                "item_size": "OS",
                "store_id": 50,
                "seller_id": 33,
                "article_assignment": {
                  "level": "multi-companies",
                  "strategy": "low-price"
                },
                "quantity": 3
              }
            ],
            "gstin_code": "27AALCA0442L1ZM",
            "coupon_details": [
              {
                "display": "Coupon Code",
                "code": "SAVE500",
                "currency_symbol": "",
                "currency_code": "",
                "value": 124
              }
            ],
            "user_info": {
              "mobile": "9892133001",
              "first_name": "User",
              "last_name": "-",
              "gender": "male"
            },
            "order_created_time": "2022-09-23T12:07:20.000Z",
            "total_shipments_in_order": 2,
            "order_id": "FY632D541F01152493D0",
            "charges": [],
            "breakup_values": [
              {
                "name": "mrp_total",
                "display": "MRP Total",
                "value": 3000
              },
              {
                "name": "sub_total",
                "display": "Sub Total",
                "value": 1797
              },
              {
                "name": "coupon",
                "display": "Coupon",
                "value": 0
              },
              {
                "name": "discount",
                "display": "Discount",
                "value": -1203
              },
              {
                "name": "promotion",
                "display": "Promotion",
                "value": 0
              },
              {
                "name": "reward_points",
                "display": "Reward Points",
                "value": 0
              },
              {
                "name": "cashback_applied",
                "display": "Cashback Applied",
                "value": 0
              },
              {
                "name": "delivery_charges",
                "display": "Delivery Charges",
                "value": 0
              },
              {
                "name": "cod_charges",
                "display": "COD Charges",
                "value": 0
              },
              {
                "name": "amount_to_be_collected",
                "display": "Amount To Be Collected",
                "value": 0
              },
              {
                "name": "Delivery Charge 2",
                "display": "Delivery Charge 2",
                "value": 100
              },
              {
                "name": "total",
                "display": "Total",
                "value": 1897
              }
            ],
            "shipments": [
              {
                "order_id": "FY632D541F01152493D0",
                "order": {
                  "meta": {
                    "custom_cart_id": "652ce6972512f05477a32547",
                    "name": "Universal/Smart Bazar/Fresh Cart",
                    "slug": "universal/smart-bazar/fresh-cart"
                  },
                  "charges": [
                    {
                      "code": "Delivery Charge 2",
                      "name": "Delivery Charge 2",
                      "type": "charge",
                      "amount": {
                        "base_currency": {
                          "value": 100,
                          "currency": "INR"
                        },
                        "ordering_currency": {
                          "value": 100,
                          "currency": "INR"
                        }
                      },
                      "distribution_logic": {
                        "distribution": {
                          "rule": {
                            "conditions": {
                              "department": [
                                "elect",
                                "groceries"
                              ],
                              "article_tag": "1p"
                            }
                          },
                          "type": "multi",
                          "logic": "apportion"
                        },
                        "distribution_level": "shipment"
                      }
                    }
                  ]
                },
                "breakup_values": [
                  {
                    "name": "mrp_total",
                    "display": "MRP Total",
                    "value": 2000
                  },
                  {
                    "name": "sub_total",
                    "display": "Sub Total",
                    "value": 1198
                  },
                  {
                    "name": "coupon",
                    "display": "Coupon",
                    "value": 0
                  },
                  {
                    "name": "discount",
                    "display": "Discount",
                    "value": -802
                  },
                  {
                    "name": "promotion",
                    "display": "Promotion",
                    "value": 0
                  },
                  {
                    "name": "reward_points",
                    "display": "Reward Points",
                    "value": 0
                  },
                  {
                    "name": "cashback_applied",
                    "display": "Cashback Applied",
                    "value": 0
                  },
                  {
                    "name": "delivery_charges",
                    "display": "Delivery Charges",
                    "value": 0
                  },
                  {
                    "name": "cod_charges",
                    "display": "COD Charges",
                    "value": 0
                  },
                  {
                    "name": "amount_to_be_collected",
                    "display": "Amount To Be Collected",
                    "value": 0
                  },
                  {
                    "name": "Delivery Charge 2",
                    "display": "Delivery Charge 2",
                    "value": 100
                  },
                  {
                    "name": "total",
                    "display": "Total",
                    "value": 1298
                  }
                ],
                "beneficiary_details": false,
                "shipment_created_at": "2022-09-23T12:07:35.000Z",
                "shipment_id": "16639150404761166748K",
                "shipment_status": {
                  "title": "Placed",
                  "value": "processing",
                  "hex_code": "#02D1CB"
                },
                "track_url": "",
                "traking_no": "",
                "awb_no": "",
                "dp_name": "",
                "tracking_details": [
                  {
                    "status": "Order Placed",
                    "time": "2022-09-23T12:07:35.000Z",
                    "is_passed": true,
                    "value": "processing"
                  },
                  {
                    "status": "Order Confirmed",
                    "time": "",
                    "is_passed": false,
                    "value": "confirmed"
                  },
                  {
                    "status": "Delivery Partner Assigned",
                    "time": "",
                    "is_passed": false,
                    "value": "dp_assigned"
                  },
                  {
                    "status": "In Transit",
                    "time": "",
                    "is_passed": false,
                    "value": "in_transit"
                  },
                  {
                    "status": "Out For Delivery",
                    "time": "",
                    "is_passed": false,
                    "value": "out_for_delivery"
                  },
                  {
                    "status": "Delivered",
                    "time": "",
                    "is_passed": false,
                    "value": "delivered"
                  }
                ],
                "total_bags": 1,
                "order_type": "HomeDelivery",
                "promise": {
                  "show_promise": true,
                  "timestamp": {
                    "dp_promise": null,
                    "min": "2022-09-26T06:37:17.000Z",
                    "max": "2022-09-27T06:37:17.000Z"
                  }
                },
                "bags": [
                  {
                    "id": 67631,
                    "current_status": {
                      "status": "placed",
                      "updated_at": "2022-09-23T12:07:35.000Z",
                      "name": "Placed",
                      "journey_type": "forward"
                    },
                    "charges": [],
                    "prices": {
                      "price_effective": 599,
                      "discount": 401,
                      "amount_paid": 599,
                      "coupon_effective_discount": 0,
                      "delivery_charge": 0,
                      "fynd_credits": 0,
                      "cod_charges": 0,
                      "refund_credit": 0,
                      "cashback": 0,
                      "refund_amount": 599,
                      "added_to_fynd_cash": false,
                      "cashback_applied": 0,
                      "gst_tax_percentage": 5,
                      "value_of_good": 570.48,
                      "price_marked": 1000,
                      "transfer_price": 0,
                      "brand_calculated_amount": 599,
                      "promotion_effective_discount": 0,
                      "coupon_value": 0,
                      "amount_to_be_collected": 0,
                      "pm_price_split": {
                        "": 599
                      }
                    },
                    "item": {
                      "name": "FYND Black T-Shirt 03",
                      "brand": {
                        "name": "lacoste",
                        "logo": "https://hdn-1.jiomarketx0.de/x0/brands/pictures/square-logo/original/JK1ZUAgrl-Logo.png"
                      },
                      "image": [
                        "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/Cg5vRX38t-FYND-Black-Cotton-Mens-T-shirt.jpeg",
                        "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/QkYTI_VBn-FYND-Black-Cotton-Mens-T-shirt.jpeg",
                        "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/QRNIZFn7_-FYND-Black-T-Shirt.jpeg",
                        "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/TJLO6V8dW-FYND-Black-T-Shirt.jpeg",
                        "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/h0HW_3rr5-FYND-Black-T-Shirt-01.jpeg",
                        "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/u1zbaCncl-FYND-Black-T-Shirt-01.jpeg",
                        "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/TJLO6V8dW-FYND-Black-T-Shirt.jpeg",
                        "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/h0HW_3rr5-FYND-Black-T-Shirt-01.jpeg",
                        "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/u1zbaCncl-FYND-Black-T-Shirt-01.jpeg"
                      ],
                      "slug_key": "fynd-black-cotton-mens-t-shirt",
                      "size": "OS",
                      "code": "SHIRT-01",
                      "id": 7500429,
                      "category": {
                        "l1": [
                          {
                            "uid": 124,
                            "name": "Apparel",
                            "level": 1,
                            "departments": [
                              {
                                "uid": 24,
                                "name": "Crafts Of India"
                              },
                              {
                                "uid": 8,
                                "name": "Fashion"
                              }
                            ],
                            "gated_category_types": {}
                          }
                        ],
                        "l2": [
                          {
                            "uid": 50,
                            "name": "Western Wear",
                            "level": 2,
                            "departments": [
                              {
                                "uid": 8,
                                "name": "Fashion"
                              }
                            ],
                            "gated_category_types": {}
                          }
                        ],
                        "l3": [
                          {
                            "uid": 25,
                            "name": "T-Shirts",
                            "level": 3,
                            "departments": [
                              {
                                "uid": 1,
                                "name": "Men's Fashionjhjh"
                              },
                              {
                                "uid": 8,
                                "name": "Fashion"
                              }
                            ],
                            "gated_category_types": {
                              "food": false
                            }
                          }
                        ]
                      },
                      "seller_identifier": "SHIRT-01"
                    },
                    "financial_breakup": [
                      {
                        "price_effective": 599,
                        "discount": 401,
                        "amount_paid": 599,
                        "coupon_effective_discount": 0,
                        "delivery_charge": 0,
                        "fynd_credits": 0,
                        "cod_charges": 0,
                        "refund_credit": 0,
                        "cashback": 0,
                        "refund_amount": 599,
                        "added_to_fynd_cash": false,
                        "cashback_applied": 0,
                        "gst_tax_percentage": 5,
                        "value_of_good": 570.48,
                        "price_marked": 1000,
                        "transfer_price": 0,
                        "brand_calculated_amount": 599,
                        "promotion_effective_discount": 0,
                        "coupon_value": 0,
                        "amount_to_be_collected": 0,
                        "pm_price_split": {
                          "": 599
                        },
                        "size": "OS",
                        "total_units": 1,
                        "hsn_code": "62063000",
                        "identifiers": {
                          "sku_code": "SHIRT-01"
                        },
                        "item_name": "FYND Black T-Shirt 03",
                        "gst_fee": 28.52,
                        "gst_tag": "SGST"
                      }
                    ],
                    "quantity": 2,
                    "can_cancel": true,
                    "can_return": false,
                    "delivery_date": null,
                    "returnable_date": null,
                    "article": {
                      "tags": [
                        "1P"
                      ]
                    }
                  }
                ],
                "size_info": {
                  "SHIRT-01": {
                    "quantity": 2,
                    "price_effective": 599,
                    "amount_paid": 599,
                    "price_marked": 1000,
                    "margin": 40.1
                  }
                },
                "total_details": {
                  "sizes": 1,
                  "total_price": 599,
                  "pieces": 2
                },
                "fulfilling_store": {
                  "name": "Jio-market-store4",
                  "company_id": 33,
                  "id": 50,
                  "code": "store3"
                },
                "fulfilling_company": {
                  "id": 33,
                  "name": "RELIANCE JIO INFOCOMM LIMITED"
                },
                "delivery_date": null,
                "delivery_address": {
                  "id": "62dfe1d112b842b2959de99e",
                  "uid": 660,
                  "area": "asd",
                  "city": "Mumbai",
                  "name": "Vaishakh Shetty",
                  "email": "vaishakh@gofynd.com",
                  "phone": "9892133001",
                  "state": "Maharashtra",
                  "address": "dsa",
                  "country": "India",
                  "pincode": "400059",
                  "version": "1.0",
                  "address1": " asd",
                  "address2": "",
                  "landmark": "tr",
                  "latitude": 19.1157486,
                  "address_1": " asd",
                  "area_code": "400059",
                  "longitude": 72.8773159,
                  "created_at": "2022-09-22T18:19:29.000Z",
                  "updated_at": "2022-09-22T18:19:29.000Z",
                  "address_type": "home",
                  "country_code": "91",
                  "geo_location": {
                    "latitude": 19.1157486,
                    "longitude": 72.8773159
                  },
                  "area_code_slug": "pincode",
                  "delivery_address_id": 660,
                  "addressee_name": "Vaishakh Shetty",
                  "delivery_code_required": 1
                },
                "billing_address": {
                  "id": "62dfe1d112b842b2959de99e",
                  "uid": 660,
                  "area": "asd",
                  "city": "Mumbai",
                  "name": "Vaishakh Shetty",
                  "email": "vaishakh@gofynd.com",
                  "phone": "9892133001",
                  "state": "Maharashtra",
                  "address": "dsa",
                  "country": "India",
                  "pincode": "400059",
                  "version": "1.0",
                  "address1": " asd",
                  "address2": "",
                  "landmark": "tr",
                  "latitude": 19.1157486,
                  "address_1": " asd",
                  "area_code": "400059",
                  "longitude": 72.8773159,
                  "created_at": "2022-09-22T18:19:29.000Z",
                  "updated_at": "2022-09-22T18:19:29.000Z",
                  "address_type": "home",
                  "country_code": "91",
                  "geo_location": {
                    "latitude": 19.1157486,
                    "longitude": 72.8773159
                  },
                  "area_code_slug": "pincode",
                  "delivery_address_id": 660,
                  "addressee_name": "Vaishakh Shetty",
                  "delivery_code_required": 1
                },
                "can_cancel": true,
                "can_return": false,
                "returnable_date": null,
                "show_download_invoice": false,
                "show_track_link": false,
                "prices": {
                  "amount_paid": 1198,
                  "refund_amount": 1198,
                  "price_marked": 2000,
                  "cod_charges": 0,
                  "coupon_value": 0,
                  "discount": 802,
                  "cashback_applied": 0,
                  "delivery_charge": 0,
                  "fynd_credits": 0,
                  "cashback": 0,
                  "price_effective": 1198,
                  "refund_credit": 0,
                  "value_of_good": 1140.96,
                  "discount_percent": 40,
                  "amount_to_be_collected": 0
                },
                "can_break": {
                  "bag_repriced": {
                    "can_break_entity": false
                  },
                  "cancelled_seller": {
                    "can_break_entity": false
                  },
                  "bag_not_verified": {
                    "can_break_entity": false
                  },
                  "product_not_available": {
                    "can_break_entity": false
                  },
                  "bag_invoiced": {
                    "can_break_entity": false
                  },
                  "store_reassigned": {
                    "can_break_entity": false
                  },
                  "cancelled_fynd": {
                    "can_break_entity": false
                  },
                  "cancelled_operations": {
                    "can_break_entity": true
                  },
                  "cancelled_customer": {
                    "can_break_entity": true
                  },
                  "bag_not_confirmed": {
                    "can_break_entity": true
                  },
                  "delivery_sla_breached": {
                    "can_break_entity": false
                  },
                  "bag_confirmed": {
                    "can_break_entity": true
                  }
                },
                "need_help_url": "https://fynd.freshdesk.com/support/solutions/33000003306",
                "payment": {
                  "logo": "https://hdn-1.fynd.com/payment/Pos+Logo.png",
                  "mode": "Jio Partner Pay",
                  "mop": "PREPAID",
                  "status": "Paid"
                },
                "payment_info": [
                  {
                    "logo": "https://hdn-1.fynd.com/payment/Pos+Logo.png",
                    "mode": "Jio Partner Pay",
                    "mop": "PREPAID",
                    "status": "Paid"
                  }
                ],
                "user_info": {
                  "email": "paymentsdummy@gofynd.com",
                  "gender": "male",
                  "mobile": "9892133001",
                  "name": "User -"
                },
                "comment": "",
                "invoice": {
                  "updated_date": "2022-09-26T06:37:17.000Z",
                  "store_invoice_id": null,
                  "invoice_url": "",
                  "label_url": ""
                },
                "refund_details": {
                  "rrn": null
                }
              },
              {
                "order_id": "FY632D541F01152493D0",
                "breakup_values": [
                  {
                    "name": "mrp_total",
                    "display": "MRP Total",
                    "value": 1000
                  },
                  {
                    "name": "sub_total",
                    "display": "Sub Total",
                    "value": 599
                  },
                  {
                    "name": "coupon",
                    "display": "Coupon",
                    "value": 0
                  },
                  {
                    "name": "discount",
                    "display": "Discount",
                    "value": -401
                  },
                  {
                    "name": "promotion",
                    "display": "Promotion",
                    "value": 0
                  },
                  {
                    "name": "reward_points",
                    "display": "Reward Points",
                    "value": 0
                  },
                  {
                    "name": "cashback_applied",
                    "display": "Cashback Applied",
                    "value": 0
                  },
                  {
                    "name": "delivery_charges",
                    "display": "Delivery Charges",
                    "value": 0
                  },
                  {
                    "name": "cod_charges",
                    "display": "COD Charges",
                    "value": 0
                  },
                  {
                    "name": "amount_to_be_collected",
                    "display": "Amount To Be Collected",
                    "value": 0
                  },
                  {
                    "name": "total",
                    "display": "Total",
                    "value": 599
                  }
                ],
                "beneficiary_details": false,
                "shipment_id": "16639150772951172388K",
                "shipment_status": {
                  "title": "Refund Initiated",
                  "value": "refund_initiated",
                  "hex_code": "#FE8F46"
                },
                "track_url": "",
                "traking_no": "",
                "awb_no": "",
                "dp_name": "",
                "tracking_details": [
                  {
                    "status": "Order Placed",
                    "time": "2022-09-23T12:07:35.000Z",
                    "is_passed": true,
                    "value": "processing"
                  },
                  {
                    "status": "Cancelled",
                    "time": "2022-09-23T12:07:57.000Z",
                    "is_passed": true,
                    "value": "cancelled"
                  },
                  {
                    "status": "Refund Processing",
                    "time": "2022-09-23T12:07:58.000Z",
                    "is_passed": true,
                    "value": "refund_initiated",
                    "tracking_details": [
                      {
                        "status": "Refund Initiated",
                        "time": "2022-09-23T12:07:58.000Z",
                        "is_passed": true,
                        "value": "refund_initiated"
                      },
                      {
                        "status": "Refund Completed",
                        "time": "",
                        "is_passed": false,
                        "value": "refund_done"
                      }
                    ]
                  }
                ],
                "total_bags": 1,
                "order_type": null,
                "promise": {
                  "show_promise": false,
                  "timestamp": {
                    "dp_promise": null,
                    "min": "2022-09-26T06:37:17.000Z",
                    "max": "2022-09-27T06:37:17.000Z"
                  }
                },
                "bags": [
                  {
                    "id": 67632,
                    "current_status": {
                      "status": "refund_acknowledged",
                      "updated_at": "2022-09-23T12:07:58.000Z",
                      "name": "Refund Acknowledged",
                      "journey_type": null
                    },
                    "prices": {
                      "price_effective": 599,
                      "discount": 401,
                      "amount_paid": 599,
                      "coupon_effective_discount": 0,
                      "delivery_charge": 0,
                      "fynd_credits": 0,
                      "cod_charges": 0,
                      "refund_credit": 0,
                      "cashback": 0,
                      "refund_amount": 599,
                      "added_to_fynd_cash": false,
                      "cashback_applied": 0,
                      "gst_tax_percentage": 5,
                      "value_of_good": 570.48,
                      "price_marked": 1000,
                      "transfer_price": 0,
                      "brand_calculated_amount": 599,
                      "promotion_effective_discount": 0,
                      "coupon_value": 0,
                      "amount_to_be_collected": 0,
                      "pm_price_split": {
                        "": 599
                      }
                    },
                    "item": {
                      "name": "FYND Black T-Shirt 03",
                      "brand": {
                        "name": "lacoste",
                        "logo": "https://hdn-1.jiomarketx0.de/x0/brands/pictures/square-logo/original/JK1ZUAgrl-Logo.png"
                      },
                      "image": [
                        "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/Cg5vRX38t-FYND-Black-Cotton-Mens-T-shirt.jpeg",
                        "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/QkYTI_VBn-FYND-Black-Cotton-Mens-T-shirt.jpeg",
                        "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/QRNIZFn7_-FYND-Black-T-Shirt.jpeg",
                        "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/TJLO6V8dW-FYND-Black-T-Shirt.jpeg",
                        "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/h0HW_3rr5-FYND-Black-T-Shirt-01.jpeg",
                        "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/u1zbaCncl-FYND-Black-T-Shirt-01.jpeg",
                        "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/TJLO6V8dW-FYND-Black-T-Shirt.jpeg",
                        "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/h0HW_3rr5-FYND-Black-T-Shirt-01.jpeg",
                        "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/u1zbaCncl-FYND-Black-T-Shirt-01.jpeg"
                      ],
                      "slug_key": "fynd-black-cotton-mens-t-shirt",
                      "size": "OS",
                      "code": "SHIRT-01",
                      "id": 7500429,
                      "category": {
                        "l1": [
                          {
                            "uid": 124,
                            "name": "Apparel",
                            "level": 1,
                            "departments": [
                              {
                                "uid": 24,
                                "name": "Crafts Of India"
                              },
                              {
                                "uid": 8,
                                "name": "Fashion"
                              }
                            ],
                            "gated_category_types": {}
                          }
                        ],
                        "l2": [
                          {
                            "uid": 50,
                            "name": "Western Wear",
                            "level": 2,
                            "departments": [
                              {
                                "uid": 8,
                                "name": "Fashion"
                              }
                            ],
                            "gated_category_types": {}
                          }
                        ],
                        "l3": [
                          {
                            "uid": 25,
                            "name": "T-Shirts",
                            "level": 3,
                            "departments": [
                              {
                                "uid": 1,
                                "name": "Men's Fashionjhjh"
                              },
                              {
                                "uid": 8,
                                "name": "Fashion"
                              }
                            ],
                            "gated_category_types": {
                              "food": false
                            }
                          }
                        ]
                      },
                      "seller_identifier": "SHIRT-01"
                    },
                    "financial_breakup": [
                      {
                        "price_effective": 599,
                        "discount": 401,
                        "amount_paid": 599,
                        "coupon_effective_discount": 0,
                        "delivery_charge": 0,
                        "fynd_credits": 0,
                        "cod_charges": 0,
                        "refund_credit": 0,
                        "cashback": 0,
                        "refund_amount": 599,
                        "added_to_fynd_cash": false,
                        "cashback_applied": 0,
                        "gst_tax_percentage": 5,
                        "value_of_good": 570.48,
                        "price_marked": 1000,
                        "transfer_price": 0,
                        "brand_calculated_amount": 599,
                        "promotion_effective_discount": 0,
                        "coupon_value": 0,
                        "amount_to_be_collected": 0,
                        "pm_price_split": {
                          "": 599
                        },
                        "size": "OS",
                        "total_units": 1,
                        "hsn_code": "62063000",
                        "identifiers": {
                          "sku_code": "SHIRT-01"
                        },
                        "item_name": "FYND Black T-Shirt 03",
                        "gst_fee": 28.52,
                        "gst_tag": "SGST"
                      }
                    ],
                    "quantity": 1,
                    "can_cancel": false,
                    "can_return": false,
                    "delivery_date": null,
                    "returnable_date": null
                  }
                ],
                "size_info": {
                  "SHIRT-01": {
                    "quantity": 1,
                    "price_effective": 599,
                    "amount_paid": 599,
                    "price_marked": 1000,
                    "margin": 40.1
                  }
                },
                "total_details": {
                  "sizes": 1,
                  "total_price": 599,
                  "pieces": 1
                },
                "fulfilling_store": {
                  "name": "Jio-market-store4",
                  "company_id": 33,
                  "id": 50,
                  "code": "store3"
                },
                "fulfilling_company": {
                  "id": 33,
                  "name": "RELIANCE JIO INFOCOMM LIMITED"
                },
                "delivery_date": null,
                "delivery_address": {
                  "id": "62dfe1d112b842b2959de99e",
                  "uid": 660,
                  "area": "asd",
                  "city": "Mumbai",
                  "name": "Vaishakh Shetty",
                  "email": "vaishakh@gofynd.com",
                  "phone": "9892133001",
                  "state": "Maharashtra",
                  "address": "dsa",
                  "country": "India",
                  "pincode": "400059",
                  "version": "1.0",
                  "address1": " asd",
                  "address2": "",
                  "landmark": "tr",
                  "latitude": 19.1157486,
                  "address_1": " asd",
                  "area_code": "400059",
                  "longitude": 72.8773159,
                  "created_at": "2022-09-22T18:19:29.000Z",
                  "updated_at": "2022-09-22T18:19:29.000Z",
                  "address_type": "home",
                  "country_code": "91",
                  "geo_location": {
                    "latitude": 19.1157486,
                    "longitude": 72.8773159
                  },
                  "area_code_slug": "pincode",
                  "delivery_address_id": 660,
                  "addressee_name": "Vaishakh Shetty",
                  "delivery_code_required": 1
                },
                "billing_address": {
                  "id": "62dfe1d112b842b2959de99e",
                  "uid": 660,
                  "area": "asd",
                  "city": "Mumbai",
                  "name": "Vaishakh Shetty",
                  "email": "vaishakh@gofynd.com",
                  "phone": "9892133001",
                  "state": "Maharashtra",
                  "address": "dsa",
                  "country": "India",
                  "pincode": "400059",
                  "version": "1.0",
                  "address1": " asd",
                  "address2": "",
                  "landmark": "tr",
                  "latitude": 19.1157486,
                  "address_1": " asd",
                  "area_code": "400059",
                  "longitude": 72.8773159,
                  "created_at": "2022-09-22T18:19:29.000Z",
                  "updated_at": "2022-09-22T18:19:29.000Z",
                  "address_type": "home",
                  "country_code": "91",
                  "geo_location": {
                    "latitude": 19.1157486,
                    "longitude": 72.8773159
                  },
                  "area_code_slug": "pincode",
                  "delivery_address_id": 660,
                  "addressee_name": "Vaishakh Shetty",
                  "delivery_code_required": 1
                },
                "can_cancel": false,
                "can_return": false,
                "returnable_date": null,
                "show_download_invoice": false,
                "show_track_link": false,
                "prices": {
                  "amount_paid": 599,
                  "refund_amount": 599,
                  "price_marked": 1000,
                  "cod_charges": 0,
                  "coupon_value": 0,
                  "discount": 401,
                  "cashback_applied": 0,
                  "delivery_charge": 0,
                  "fynd_credits": 0,
                  "cashback": 0,
                  "price_effective": 599,
                  "refund_credit": 0,
                  "value_of_good": 570.48,
                  "discount_percent": 40,
                  "amount_to_be_collected": 0
                },
                "can_break": {
                  "refund_completed": {
                    "can_break_entity": false
                  },
                  "rto_delivery_attempt_failed": {
                    "can_break_entity": false
                  },
                  "return_rejected_by_dp": {
                    "can_break_entity": false
                  },
                  "return_to_origin": {
                    "can_break_entity": false
                  },
                  "rto_initiated": {
                    "can_break_entity": false
                  },
                  "refund_failed": {
                    "can_break_entity": false
                  },
                  "bag_picked": {
                    "can_break_entity": false
                  },
                  "rto_bag_delivered": {
                    "can_break_entity": false
                  },
                  "return_dp_assigned": {
                    "can_break_entity": false
                  },
                  "return_bag_in_transit": {
                    "can_break_entity": false
                  },
                  "return_bag_out_for_delivery": {
                    "can_break_entity": false
                  },
                  "return_initiated": {
                    "can_break_entity": true
                  },
                  "return_rejected_by_store": {
                    "can_break_entity": false
                  },
                  "rto_bag_out_for_delivery": {
                    "can_break_entity": false
                  },
                  "deadstock": {
                    "can_break_entity": false
                  },
                  "bag_lost": {
                    "can_break_entity": false
                  },
                  "return_bag_delivered": {
                    "can_break_entity": false
                  },
                  "return_completed": {
                    "can_break_entity": false
                  },
                  "return_bag_picked": {
                    "can_break_entity": false
                  },
                  "rto_bag_accepted": {
                    "can_break_entity": false
                  },
                  "deadstock_defective": {
                    "can_break_entity": false
                  },
                  "rto_in_transit": {
                    "can_break_entity": false
                  },
                  "return_accepted": {
                    "can_break_entity": false
                  },
                  "out_for_pickup": {
                    "can_break_entity": false
                  },
                  "return_bag_not_delivered": {
                    "can_break_entity": false
                  },
                  "cancelled_customer": {
                    "can_break_entity": true
                  },
                  "return_bag_lost": {
                    "can_break_entity": false
                  }
                },
                "need_help_url": "https://fynd.freshdesk.com/support/solutions/33000003306",
                "payment": {
                  "logo": "https://hdn-1.fynd.com/payment/Pos+Logo.png",
                  "mode": "Jio Partner Pay",
                  "mop": "PREPAID",
                  "status": "Paid"
                },
                "payment_info": [
                  {
                    "logo": "https://hdn-1.fynd.com/payment/Pos+Logo.png",
                    "mode": "Jio Partner Pay",
                    "mop": "PREPAID",
                    "status": "Paid"
                  }
                ],
                "user_info": {
                  "email": "paymentsdummy@gofynd.com",
                  "gender": "male",
                  "mobile": "9892133001",
                  "name": "User -"
                },
                "comment": "",
                "invoice": {
                  "updated_date": "2022-09-26T06:37:17.000Z",
                  "store_invoice_id": null,
                  "invoice_url": "",
                  "label_url": ""
                },
                "refund_details": {
                  "rrn": ""
                }
              }
            ],
            "is_validated": false,
            "meta": {}
          }
        }
      },
      "GetShipmentByIdExample": {
        "value": {
          "shipment": {
            "order_id": "FY62F3B8290150D13E36",
            "meta": {
              "dp_id": "9",
              "weight": 300,
              "external": {},
              "formatted": {
                "max": "Fri, 25 Nov",
                "min": "Wed, 23 Nov"
              },
              "timestamp": {
                "max": 1669394750,
                "min": 1669221950
              },
              "bag_weight": {
                "20472628": 300
              },
              "debug_info": {
                "stormbreaker_uuid": "998171bb-67af-412a-a00a-12d436418ff2"
              },
              "dp_options": {},
              "order_type": null,
              "dp_sort_key": "fm_priority",
              "packaging_name": "POLYB_DFLT_L",
              "assign_dp_from_sb": true,
              "same_store_available": true,
              "fulfill_virtual_invoice": false,
              "fulfilment_priority_text": null,
              "auto_trigger_dp_assignment_ACF": true,
              "refund_information": []
            },
            "coupon_details": [
              {
                "display": "Coupon Code",
                "code": "SAVE500",
                "currency_symbol": "",
                "currency_code": "",
                "value": 124
              }
            ],
            "order": {
              "meta": {
                "custom_cart_id": "652ce6972512f05477a32547",
                "name": "Universal/Smart Bazar/Fresh Cart",
                "slug": "universal/smart-bazar/fresh-cart"
              }
            },
            "charges": [],
            "breakup_values": [
              {
                "name": "mrp_total",
                "display": "MRP Total",
                "value": 50
              },
              {
                "name": "sub_total",
                "display": "Sub Total",
                "value": 50
              },
              {
                "name": "coupon",
                "display": "Coupon",
                "value": 0
              },
              {
                "name": "discount",
                "display": "Discount",
                "value": 0
              },
              {
                "name": "promotion",
                "display": "Promotion",
                "value": 0
              },
              {
                "name": "reward_points",
                "display": "Reward Points",
                "value": 0
              },
              {
                "name": "cashback_applied",
                "display": "Cashback Applied",
                "value": 0
              },
              {
                "name": "delivery_charges",
                "display": "Delivery Charges",
                "value": 0
              },
              {
                "name": "cod_charges",
                "display": "COD Charges",
                "value": 0
              },
              {
                "name": "amount_to_be_collected",
                "display": "Amount To Be Collected",
                "value": 0
              },
              {
                "name": "total",
                "display": "Total",
                "value": 50
              }
            ],
            "beneficiary_details": false,
            "need_help_url": "https://fynd.freshdesk.com/support/solutions/33000003306",
            "shipment_created_at": "2022-08-10T19:22:42.000Z",
            "shipment_id": "16601395620321798247K",
            "shipment_status": {
              "title": "DP Assigned",
              "value": "dp_assigned",
              "hex_code": "#FE8F46"
            },
            "track_url": "",
            "traking_no": "Tracking No.: 5923410031146",
            "awb_no": "5923410031146",
            "dp_name": "delhivery_jio_surface",
            "tracking_details": [
              {
                "status": "Order Placed",
                "time": "2022-08-10T19:22:55.000Z",
                "is_passed": true,
                "value": "processing"
              },
              {
                "status": "Order Confirmed",
                "time": "2022-08-18T19:11:02.000Z",
                "is_passed": true,
                "value": "confirmed"
              },
              {
                "status": "Delivery Partner Assigned",
                "time": "2022-08-18T19:11:38.000Z",
                "is_passed": true,
                "value": "dp_assigned"
              },
              {
                "status": "In Transit",
                "time": "",
                "is_passed": false,
                "value": "in_transit"
              },
              {
                "status": "Out For Delivery",
                "time": "",
                "is_passed": false,
                "value": "out_for_delivery"
              },
              {
                "status": "Delivered",
                "time": "",
                "is_passed": false,
                "value": "delivered"
              }
            ],
            "total_bags": 1,
            "promise": {
              "show_promise": false,
              "timestamp": {
                "min": "2022-08-14T13:52:37.000Z",
                "max": "2022-08-17T13:52:37.000Z",
                "dp_promise": null
              }
            },
            "bags": [
              {
                "id": 59624,
                "charges": [],
                "current_status": {
                  "status": "bag_not_picked",
                  "updated_at": "2022-08-18T23:46:11.000Z",
                  "name": "Bag Not Picked",
                  "journey_type": "forward"
                },
                "prices": {
                  "price_effective": 50,
                  "discount": 0,
                  "amount_paid": 50,
                  "coupon_effective_discount": 0,
                  "delivery_charge": 0,
                  "fynd_credits": 0,
                  "cod_charges": 0,
                  "refund_credit": 0,
                  "cashback": 0,
                  "refund_amount": 50,
                  "added_to_fynd_cash": false,
                  "cashback_applied": 0,
                  "gst_tax_percentage": 18,
                  "value_of_good": 42.37,
                  "price_marked": 50,
                  "transfer_price": 0,
                  "brand_calculated_amount": 50,
                  "promotion_effective_discount": 0,
                  "coupon_value": 0,
                  "amount_to_be_collected": 0,
                  "pm_price_split": {
                    "COD": 50
                  }
                },
                "item": {
                  "name": "Tissues",
                  "l2_category": [
                    "Tools & Accessories"
                  ],
                  "l2_category_id": 3,
                  "brand": {
                    "name": "Zepto",
                    "logo": "https://hdn-1.jiomarketx0.de/x0/brands/pictures/square-logo/original/5XLRHXC5H-Logo.png"
                  },
                  "image": [
                    "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/hGov80Pbv-411yLXtNYNL._SL1000_.jpg",
                    "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/U-6bpneFP-Tissues.jpeg",
                    "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/U-6bpneFP-Tissues.jpeg",
                    "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/U-6bpneFP-Tissues.jpeg",
                    "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/U-6bpneFP-Tissues.jpeg",
                    "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/U-6bpneFP-Tissues.jpeg",
                    "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/U-6bpneFP-Tissues.jpeg",
                    "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/U-6bpneFP-Tissues.jpeg",
                    "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/U-6bpneFP-Tissues.jpeg",
                    "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/U-6bpneFP-Tissues.jpeg",
                    "https://hdn-1.jiomarketx0.de/x0/products/pictures/item/free/270x0/U-6bpneFP-Tissues.jpeg"
                  ],
                  "slug_key": "tissues",
                  "size": "OS",
                  "code": "TIS-102",
                  "id": 7500474,
                  "seller_identifier": "987432134",
                  "attributes": {}
                },
                "financial_breakup": [
                  {
                    "price_effective": 50,
                    "discount": 0,
                    "amount_paid": 50,
                    "coupon_effective_discount": 0,
                    "delivery_charge": 0,
                    "fynd_credits": 0,
                    "cod_charges": 0,
                    "refund_credit": 0,
                    "cashback": 0,
                    "refund_amount": 50,
                    "added_to_fynd_cash": false,
                    "cashback_applied": 0,
                    "gst_tax_percentage": 18,
                    "value_of_good": 42.37,
                    "price_marked": 50,
                    "transfer_price": 0,
                    "brand_calculated_amount": 50,
                    "promotion_effective_discount": 0,
                    "coupon_value": 0,
                    "amount_to_be_collected": 0,
                    "pm_price_split": {
                      "COD": 50
                    },
                    "size": "OS",
                    "total_units": 1,
                    "hsn_code": "70099200",
                    "identifiers": {
                      "sku_code": "987432134"
                    },
                    "item_name": "Tissues",
                    "gst_fee": 7.62,
                    "gst_tag": "SGST"
                  }
                ],
                "quantity": 1,
                "departments": [
                  31
                ],
                "can_cancel": false,
                "can_return": false
              }
            ],
            "size_info": {
              "TIS-102": {
                "quantity": 1,
                "price_effective": 50,
                "amount_paid": 50,
                "price_marked": 50,
                "margin": 0
              }
            },
            "total_details": {
              "sizes": 1,
              "total_price": 50,
              "pieces": 1
            },
            "fulfilling_store": {
              "name": "Jio-market-store3",
              "company_id": 33,
              "id": 50,
              "code": "store3",
              "tags": [
                "infibeam"
              ]
            },
            "fulfilling_company": {
              "id": 33,
              "name": "RELIANCE JIO INFOCOMM LIMITED"
            },
            "gstin_code": "27AALCA0442L1ZM",
            "billing_address": {
              "id": "62e8fc91c1700b808fe528bd",
              "uid": 745,
              "area": "test",
              "city": "Mumbai",
              "name": "abc",
              "email": "abc@gofynd.com",
              "phone": "1234567890",
              "state": "Maharashtra",
              "address": "1234",
              "country": "India",
              "pincode": "400074",
              "version": "1.0",
              "address1": " test",
              "address2": "",
              "landmark": "test",
              "latitude": 19.0653252,
              "address_1": " test",
              "area_code": "400074",
              "longitude": 72.8423802,
              "created_at": "2022-08-10T18:52:38.000Z",
              "updated_at": "2022-08-10T18:52:38.000Z",
              "address_type": "home",
              "country_code": "91",
              "geo_location": {
                "latitude": 19.0653252,
                "longitude": 72.8423802
              },
              "area_code_slug": "pincode",
              "delivery_address_id": 745,
              "addressee_name": "abc",
              "delivery_code_required": 1
            },
            "delivery_address": {
              "id": "62e8fc91c1700b808fe528bd",
              "uid": 745,
              "area": "test",
              "city": "Mumbai",
              "name": "abc",
              "email": "abc@gofynd.com",
              "phone": "1234567890",
              "state": "Maharashtra",
              "address": "1234",
              "country": "India",
              "pincode": "400074",
              "version": "1.0",
              "address1": " test",
              "address2": "",
              "landmark": "test",
              "latitude": 19.0653252,
              "address_1": " test",
              "area_code": "400074",
              "longitude": 72.8423802,
              "created_at": "2022-08-10T18:52:38.000Z",
              "updated_at": "2022-08-10T18:52:38.000Z",
              "address_type": "home",
              "country_code": "91",
              "geo_location": {
                "latitude": 19.0653252,
                "longitude": 72.8423802
              },
              "area_code_slug": "pincode",
              "delivery_address_id": 745,
              "addressee_name": "abc",
              "delivery_code_required": 1
            },
            "can_cancel": false,
            "can_return": false,
            "delivery_date": null,
            "returnable_date": null,
            "show_download_invoice": true,
            "show_track_link": true,
            "prices": {
              "amount_paid": 50,
              "refund_amount": 50,
              "price_marked": 50,
              "cod_charges": 0,
              "coupon_value": 0,
              "discount": 0,
              "cashback_applied": 0,
              "delivery_charge": 0,
              "fynd_credits": 0,
              "cashback": 0,
              "price_effective": 50,
              "refund_credit": 0,
              "value_of_good": 42.37,
              "amount_to_be_collected": 0
            },
            "can_break": {
              "bag_not_picked": {
                "can_break_entity": false
              },
              "cancelled_customer": {
                "can_break_entity": true
              },
              "bag_picked": {
                "can_break_entity": false
              },
              "cancelled_fynd": {
                "can_break_entity": true
              },
              "bag_rescheduled": {
                "can_break_entity": false
              },
              "cancelled_at_dp": {
                "can_break_entity": false
              },
              "handed_over_to_dg": {
                "can_break_entity": false
              },
              "dp_assigned": {
                "can_break_entity": false
              },
              "cancelled_operations": {
                "can_break_entity": false
              },
              "cancelled_seller": {
                "can_break_entity": false
              },
              "out_for_pickup": {
                "can_break_entity": false
              },
              "bag_pick_failed": {
                "can_break_entity": false
              },
              "update_qr_code": {
                "can_break_entity": false
              }
            },
            "payment": {
              "logo": "https://hdn-1.fynd.com/payment/Pos+Logo.png",
              "mode": "Jio Partner Pay",
              "mop": "COD",
              "display_name": "COD",
              "payment_mode": "COD",
              "status": "Unpaid"
            },
            "payment_info": [
              {
                "logo": "https://hdn-1.fynd.com/payment/Pos+Logo.png",
                "mode": "Jio Partner Pay",
                "mop": "COD",
                "display_name": "COD",
                "payment_mode": "COD",
                "status": "Unpaid"
              }
            ],
            "user_info": {
              "email": "paymentsdummy@gofynd.com",
              "gender": "male",
              "mobile": "1234567890",
              "name": "User -"
            },
            "comment": "",
            "invoice": {
              "updated_date": "2022-08-18T19:11:02.000Z",
              "store_invoice_id": "00000050AA000147",
              "invoice_url": "",
              "label_url": ""
            },
            "refund_details": {
              "rrn": ""
            }
          }
        }
      },
      "CatalogueOrderDetails": {
        "value": {
          "articles": [
            {
              "id": "qwer",
              "price": 2356,
              "points": 1000
            }
          ]
        }
      },
      "CatalogueOrderCreation": {
        "value": {
          "articles": [
            {
              "id": "qwer",
              "price": 2356
            }
          ]
        }
      },
      "PointsDetails": {
        "value": {
          "points": 100
        }
      },
      "Offer": {
        "value": {
          "_id": "63bfb9c1195d62ac089641cd",
          "application_id": "5d5c304a4df829372e2ad6d1",
          "name": "order",
          "_schedule": {},
          "active": true,
          "banner_image": {
            "aspect_ratio": "2:1",
            "secure_url": "https://hdn-1.fynd.com/company/884/applications/000000000000000000000001/rewards/pictures/landscape-banner/original/dbY4bHh9d-reward-banner.png"
          },
          "created_at": "2023-01-12T07:41:53.356Z",
          "display": {
            "validity": 1000,
            "validity_unit": "hours"
          },
          "info_action": {
            "type": "",
            "page": {
              "type": "",
              "params": {
                "slug": null
              },
              "url": ""
            }
          },
          "rule": {
            "claimed": true,
            "value": 10,
            "value_type": "percent",
            "validity": 60000
          },
          "share": {
            "default": "Hey, join me on {{application_name}} and get exciting offers and reward points. Signup today and quickly earn Rs.{{offer_amount}}. Visit {{offer_link}} now!",
            "text": ""
          },
          "sub_text": "Purchase and get reward points",
          "text": "Order & Earn",
          "type": "earn",
          "updated_at": "2023-01-12T15:46:04.854Z",
          "updated_by": "6678589f5d0df704c9996644",
          "url": ""
        }
      },
      "ReferralDetails": {
        "value": {
          "referral": {
            "_id": "6325b07224c4f10f7ca2ef0b",
            "application_id": "000000000000000000000001",
            "name": "referral",
            "_schedule": {
              "start": "2020-01-27T20:07:27.418Z",
              "end": "2030-01-27T18:30:00.000Z"
            },
            "active": true,
            "banner_image": {
              "secure_url": "https://hdn-1.fynd.com/company/884/applications/000000000000000000000001/rewards/pictures/landscape-banner/original/05ZGi_YkI-reward-banner.png",
              "aspect_ratio": "2:1"
            },
            "created_at": "2022-09-17T11:33:06.862Z",
            "display": {
              "validity": 4,
              "validity_unit": "weeks"
            },
            "info_action": {
              "type": "",
              "page": {
                "type": "",
                "params": {
                  "slug": null
                },
                "url": ""
              }
            },
            "rule": {
              "amount": 100,
              "referrer_amount": 200,
              "amount_validity": 40320,
              "threshold": 10000,
              "counter": 0
            },
            "share": {
              "default": "",
              "text": "👋 Hey there!\n\nI just gave you 100 points.\n\nShop from brands like Campus Sutra, Snitch, Freakins, Off Duty, and other streetwear and athleisure brands\n\n10 GoFynd points = ₹1 off on your next order.\n\nLet me break it down for you: Every 10 GoFynd Points you have will get you a ₹1 discount on your transaction. So, for example, if you have 1000 GoFynd Points, you can enjoy a fabulous ₹100 off during checkout.\n\nJoin me on GoFynd and signup using my code E4WZC5\n\nVisit Now: https://www.fynd.com/l/E4WZC5"
            },
            "sub_text": "When your friends sign up using your referral code.\n\nYou get ₹200 and They get ₹100",
            "text": "Refer & Earn",
            "type": "earn",
            "updated_at": "2023-05-22T13:59:28.295Z",
            "updated_by": "b360c46c3f5c939dadf8f9ab",
            "url": "",
            "updated_by_name": "jaykaria_gofynd_com_39144"
          },
          "share": {
            "default": "",
            "text": "👋 Hey there!\n\nI just gave you 100 points.\n\nShop from brands like Campus Sutra, Snitch, Freakins, Off Duty, and other streetwear and athleisure brands\n\n10 GoFynd points = ₹1 off on your next order.\n\nLet me break it down for you: Every 10 GoFynd Points you have will get you a ₹1 discount on your transaction. So, for example, if you have 1000 GoFynd Points, you can enjoy a fabulous ₹100 off during checkout.\n\nJoin me on GoFynd and signup using my code E4WZC5\n\nVisit Now: https://www.fynd.com/l/E4WZC5"
          },
          "referrer_info": "Code redeemed",
          "user": {
            "blocked": false,
            "referral_code": "E4WZC5",
            "redeemed": true
          },
          "terms_conditions_link": "https://fynd.freshdesk.com/support/solutions/folders/33000111619"
        }
      },
      "RetrieveOrderDiscount": {
        "value": {
          "order_amount": 3000,
          "currency": "INR"
        }
      },
      "OrderDiscountDetails": {
        "value": {
          "order_amount": 3000,
          "discount": {
            "absolute": 0,
            "currency": "INR",
            "percent": 0,
            "display_absoulte": "0.00",
            "display_percent": "0%"
          },
          "base_discount": {
            "absolute": 0,
            "currency": "INR",
            "percent": 0,
            "display_absoulte": "0.00",
            "display_percent": "0"
          },
          "points": 0,
          "applied_rule_bucket": {
            "low": 1,
            "high": -1,
            "max": 1000,
            "value": 10,
            "value_type": "percent"
          }
        }
      },
      "RedeemReferralCode": {
        "value": {
          "device_id": "123",
          "referral_code": "ROHA01"
        }
      },
      "RedeemReferralCodeDetails": {
        "value": {
          "redeemed": true,
          "message": "Successfully redeemed referral code",
          "referrer_info": "Referred by Abhinav Maurya",
          "referrer_id": "600693a01faf8695d70a15df",
          "points": 100
        }
      },
      "PointsHistoryDetails": {
        "value": {
          "items": [
            {
              "_id": "6464a9eb70e0debb8462667d",
              "application_id": "000000000000000000000001",
              "user_id": "000000000000000009802478",
              "points": 500,
              "remaining_points": 500,
              "txn_name": "signup_credit",
              "claimed": true,
              "expires_on": "2023-06-14T10:18:19.118Z",
              "meta": {
                "offer_id": "630e0b8e349f3f1cfbec572f"
              },
              "created_at": "2023-05-17T10:18:19.118Z",
              "updated_at": "2023-05-17T10:18:19.118Z",
              "text_1": "Signup points",
              "text_2": "Additional Points",
              "text_3": "Will expire on 3:48 PM, 14 Jun'23"
            },
            {
              "_id": "6464a9d370e0debb84626677",
              "application_id": "000000000000000000000001",
              "user_id": "000000000000000009802478",
              "points": 500,
              "remaining_points": 500,
              "txn_name": "signup_credit",
              "claimed": true,
              "expires_on": "2023-06-14T10:17:55.588Z",
              "meta": {
                "offer_id": "630e0b8e349f3f1cfbec572f"
              },
              "created_at": "2023-05-17T10:17:55.588Z",
              "updated_at": "2023-05-17T10:17:55.588Z",
              "text_1": "Signup points",
              "text_2": "Additional Points",
              "text_3": "Will expire on 3:47 PM, 14 Jun'23"
            }
          ],
          "page": {
            "current": 0,
            "item_total": 2,
            "type": "cursor",
            "size": 1,
            "has_previous": true,
            "has_next": false,
            "next_id": ""
          }
        }
      },
      "ThemeExample": {
        "value": {
          "_id": "64be4423bc7b28003211322e",
          "applied": false,
          "is_private": false,
          "tags": [],
          "application_id": "61b7248a17b032821ce3cc55",
          "marketplace_theme_id": "64be1f4cceb549012e93d5f4",
          "meta": {
            "payment": {
              "is_paid": false,
              "amount": 0
            },
            "description": "Indulge in the epitome of luxury with our expertly crafted theme, showcasing a high-end aesthetic that exudes elegance. Designed with meticulous attention to detail, our features are tailored to elevate your products and amplify your brand identity.",
            "industry": [
              "Arts and crafts",
              "Baby and kids",
              "Books, music, and video"
            ],
            "release": {
              "notes": "<p>Emerge release notes. Fyndx1 theme submission.</p>"
            },
            "images": {
              "desktop": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/addsale/misc/pictures/free-icon/original/McHjwol_h-images_desktop.webp",
              "mobile": "https://cdn.pixelbin.io/v2/falling-surf-7c8bb8/fyndnp/wrkr/addsale/misc/pictures/free-icon/original/bq6gXrmVE-images_mobile.webp"
            },
            "slug": "emerge"
          },
          "name": "Emerge",
          "template_theme_id": "64be1fdc2139f66b3ca2e94d",
          "version": "1.0.153",
          "styles": {},
          "created_at": "2023-07-24T09:28:03.845Z",
          "updated_at": "2023-07-31T12:14:13.097Z",
          "theme_type": "vue2",
          "assets": {
            "umd_js": {
              "links": [
                "https://cdn.fynd.com/v2/falling-surf-7c8bb8/fyndnp/wrkr/addsale/organization/64b0eb01c35f990518880a82/theme/assets/yf7ijNZKa_themeBundle.umd.min.8.js",
                "https://cdn.fynd.com/v2/falling-surf-7c8bb8/fyndnp/wrkr/addsale/organization/64b0eb01c35f990518880a82/theme/assets/yf7ijNZKa_themeBundle.umd.min.cart.js",
                "https://cdn.fynd.com/v2/falling-surf-7c8bb8/fyndnp/wrkr/addsale/organization/64b0eb01c35f990518880a82/theme/assets/yf7ijNZKa_themeBundle.umd.min.extras.js",
                "https://cdn.fynd.com/v2/falling-surf-7c8bb8/fyndnp/wrkr/addsale/organization/64b0eb01c35f990518880a82/theme/assets/yf7ijNZKa_themeBundle.umd.min.products-listing.js",
                "https://cdn.fynd.com/v2/falling-surf-7c8bb8/fyndnp/wrkr/addsale/organization/64b0eb01c35f990518880a82/theme/assets/yf7ijNZKa_themeBundle.umd.min.products.js",
                "https://cdn.fynd.com/v2/falling-surf-7c8bb8/fyndnp/wrkr/addsale/organization/64b0eb01c35f990518880a82/theme/assets/yf7ijNZKa_themeBundle.umd.min.profile.js",
                "https://cdn.fynd.com/v2/falling-surf-7c8bb8/fyndnp/wrkr/addsale/organization/64b0eb01c35f990518880a82/theme/assets/yf7ijNZKa_themeBundle.umd.min.vendors_products-listing.js",
                "https://cdn.fynd.com/v2/falling-surf-7c8bb8/fyndnp/wrkr/addsale/organization/64b0eb01c35f990518880a82/theme/assets/yf7ijNZKa_themeBundle.umd.min.vendors_products.js",
                "https://cdn.fynd.com/v2/falling-surf-7c8bb8/fyndnp/wrkr/addsale/organization/64b0eb01c35f990518880a82/theme/assets/yf7ijNZKa_themeBundle.umd.min.js"
              ],
              "link": ""
            },
            "common_js": {
              "link": "https://cdn.fynd.com/v2/falling-surf-7c8bb8/fyndnp/wrkr/addsale/organization/64b0eb01c35f990518880a82/theme/assets/yf7ijNZKa_themeBundle.common.js"
            },
            "css": {
              "links": [
                "https://cdn.fynd.com/v2/falling-surf-7c8bb8/fyndnp/wrkr/addsale/organization/64b0eb01c35f990518880a82/theme/assets/yf7ijNZKa_cart.1b038cd83e502f2d58bc.css",
                "https://cdn.fynd.com/v2/falling-surf-7c8bb8/fyndnp/wrkr/addsale/organization/64b0eb01c35f990518880a82/theme/assets/yf7ijNZKa_extras.f8a9789ae6a06b0bd503.css",
                "https://cdn.fynd.com/v2/falling-surf-7c8bb8/fyndnp/wrkr/addsale/organization/64b0eb01c35f990518880a82/theme/assets/yf7ijNZKa_products-listing.1d639747568baee211ba.css",
                "https://cdn.fynd.com/v2/falling-surf-7c8bb8/fyndnp/wrkr/addsale/organization/64b0eb01c35f990518880a82/theme/assets/yf7ijNZKa_products.c1f151d12b3f704fe028.css",
                "https://cdn.fynd.com/v2/falling-surf-7c8bb8/fyndnp/wrkr/addsale/organization/64b0eb01c35f990518880a82/theme/assets/yf7ijNZKa_profile.c9e6a92612e4b423dbd7.css",
                "https://cdn.fynd.com/v2/falling-surf-7c8bb8/fyndnp/wrkr/addsale/organization/64b0eb01c35f990518880a82/theme/assets/yf7ijNZKa_themeBundle.css",
                "https://cdn.fynd.com/v2/falling-surf-7c8bb8/fyndnp/wrkr/addsale/organization/64b0eb01c35f990518880a82/theme/assets/yf7ijNZKa_vendors_products-listing.c8fe85761d60286348e3.css"
              ],
              "link": ""
            }
          },
          "font": {
            "variants": {
              "light": {
                "name": "300",
                "file": "https://fonts.gstatic.com/s/poppins/v9/pxiByp8kv8JHgFVrLDz8V1tvFP-KUEg.ttf"
              },
              "regular": {
                "name": "regular",
                "file": "https://fonts.gstatic.com/s/poppins/v9/pxiEyp8kv8JHgFVrFJDUc1NECPY.ttf"
              },
              "medium": {
                "name": "500",
                "file": "https://fonts.gstatic.com/s/poppins/v9/pxiByp8kv8JHgFVrLGT9V1tvFP-KUEg.ttf"
              },
              "semi_bold": {
                "name": "600",
                "file": "https://fonts.gstatic.com/s/poppins/v9/pxiByp8kv8JHgFVrLEj6V1tvFP-KUEg.ttf"
              },
              "bold": {
                "name": "700",
                "file": "https://fonts.gstatic.com/s/poppins/v9/pxiByp8kv8JHgFVrLCz7V1tvFP-KUEg.ttf"
              }
            },
            "family": "Poppins"
          },
          "config": {
            "current": "Default",
            "list": [
              {
                "name": "Default",
                "global_config": {
                  "static": {
                    "props": {
                      "colors": {
                        "primary_color": "#000000",
                        "secondary_color": "#000000",
                        "accent_color": "#000000",
                        "link_color": "#4499FF",
                        "button_secondary_color": "#000000",
                        "bg_color": "#F8F8F8"
                      },
                      "auth": {
                        "show_header_auth": false,
                        "show_footer_auth": false
                      },
                      "palette": {
                        "general_setting": {
                          "theme": {
                            "page_background": "#F3F3ED",
                            "theme_accent": "#E1D0C8"
                          },
                          "text": {
                            "text_heading": "#26201A",
                            "text_body": "#3C3131",
                            "text_label": "#7D7676",
                            "text_secondary": "#9C9C9C"
                          },
                          "button": {
                            "button_primary": "#4E3F09",
                            "button_secondary": "#FFFFFF",
                            "button_link": "#B1655B"
                          },
                          "sale_discount": {
                            "sale_badge_background": "#FFFFFF",
                            "sale_badge_text": "#1C958F",
                            "sale_discount_text": "#1C958F",
                            "sale_timer": "#994449"
                          },
                          "header": {
                            "header_background": "#F3F3ED",
                            "header_nav": "#261A1A",
                            "header_icon": "#261A1A"
                          },
                          "footer": {
                            "footer_background": "#2C231E",
                            "footer_bottom_background": "#231812",
                            "footer_heading_text": "#FFFFFF",
                            "footer_body_text": "#FFFFFF",
                            "footer_icon": "#FFFFFF"
                          }
                        },
                        "advance_setting": {
                          "overlay_popup": {
                            "dialog_backgroung": "#FFFFFF",
                            "overlay": "#14130E"
                          },
                          "divider_stroke_highlight": {
                            "divider_strokes": "#D4D1D1",
                            "highlight": "#EDECE9"
                          },
                          "user_alerts": {
                            "success_background": "#C2DBC9",
                            "success_text": "#1C958F",
                            "error_background": "#E6D5D5",
                            "error_text": "#B24141",
                            "info_background": "#EBD3BC",
                            "info_text": "#D28F51"
                          }
                        }
                      },
                      "extension": {
                        "header_top": [],
                        "header_bottom": [],
                        "footer_top": [],
                        "footer_bottom": []
                      }
                    }
                  },
                  "custom": {
                    "props": {
                      "header_bg_color": "#ffffff",
                      "header_text_color": "#000000",
                      "header_border_color": "#e1e1e1",
                      "header_icon_color": "#000000",
                      "header_cart_notification_bg_color": "#e8a76c",
                      "header_cart_notification_text_color": "#ffffff",
                      "header_nav_hover_color": "#999999",
                      "button_primary_color": "#ffffff",
                      "button_primary_label_color": "#000000",
                      "button_add_to_cart_color": "#000000",
                      "button_add_to_cart_label_color": "#ffffff",
                      "button_secondary_color": "#000000",
                      "button_secondary_label_color": "#ffffff",
                      "button_tertiary_color": "#000000",
                      "button_tertiary_label_color": "#000000",
                      "button_tertiary_hover_color": "#000000",
                      "button_tertiary_hover_text_color": "#ffffff",
                      "text_heading_link_color": "#000000",
                      "text_body_color": "#000000",
                      "text_price_color": "#000000",
                      "text_sale_price_color": "#fb406b",
                      "text_strikethrough_price_color": "#9b9b9b",
                      "text_discount_color": "#ee478d",
                      "footer_bg_color": "#ffffff",
                      "footer_text_color": "#999999",
                      "footer_border_color": "#e1e1e1",
                      "footer_nav_hover_color": "#000000",
                      "disable_cart": false,
                      "is_menu_below_logo": false,
                      "menu_position": "left"
                    }
                  }
                },
                "page": []
              },
              {
                "name": "Dark",
                "global_config": {
                  "static": {
                    "props": {
                      "colors": {
                        "primary_color": "#000000",
                        "secondary_color": "#000000",
                        "accent_color": "#000000",
                        "link_color": "#4499FF",
                        "button_secondary_color": "#000000",
                        "bg_color": "#F8F8F8"
                      },
                      "auth": {
                        "show_header_auth": false,
                        "show_footer_auth": false
                      },
                      "palette": {
                        "general_setting": {
                          "theme": {
                            "page_background": "#F3F3ED",
                            "theme_accent": "#E1D0C8"
                          },
                          "text": {
                            "text_heading": "#26201A",
                            "text_body": "#3C3131",
                            "text_label": "#7D7676",
                            "text_secondary": "#9C9C9C"
                          },
                          "button": {
                            "button_primary": "#4E3F09",
                            "button_secondary": "#FFFFFF",
                            "button_link": "#B1655B"
                          },
                          "sale_discount": {
                            "sale_badge_background": "#FFFFFF",
                            "sale_badge_text": "#1C958F",
                            "sale_discount_text": "#1C958F",
                            "sale_timer": "#994449"
                          },
                          "header": {
                            "header_background": "#F3F3ED",
                            "header_nav": "#261A1A",
                            "header_icon": "#261A1A"
                          },
                          "footer": {
                            "footer_background": "#2C231E",
                            "footer_bottom_background": "#231812",
                            "footer_heading_text": "#FFFFFF",
                            "footer_body_text": "#FFFFFF",
                            "footer_icon": "#FFFFFF"
                          }
                        },
                        "advance_setting": {
                          "overlay_popup": {
                            "dialog_backgroung": "#FFFFFF",
                            "overlay": "#14130E"
                          },
                          "divider_stroke_highlight": {
                            "divider_strokes": "#D4D1D1",
                            "highlight": "#EDECE9"
                          },
                          "user_alerts": {
                            "success_background": "#C2DBC9",
                            "success_text": "#1C958F",
                            "error_background": "#E6D5D5",
                            "error_text": "#B24141",
                            "info_background": "#EBD3BC",
                            "info_text": "#D28F51"
                          }
                        }
                      },
                      "extension": {
                        "header_top": [],
                        "header_bottom": [],
                        "footer_top": [],
                        "footer_bottom": []
                      }
                    }
                  },
                  "custom": {
                    "props": {
                      "header_bg_color": "#2e3032",
                      "header_text_color": "#ffffff",
                      "header_border_color": "#FFFFFF",
                      "header_icon_color": "#ffffff",
                      "header_cart_notification_bg_color": "#FFFFFF",
                      "header_cart_notification_text_color": "#2e3032",
                      "header_nav_hover_color": "#000000",
                      "button_primary_color": "#000000",
                      "button_primary_label_color": "#ffffff",
                      "button_add_to_cart_color": "#000000",
                      "button_add_to_cart_label_color": "#ffffff",
                      "button_secondary_color": "#000000",
                      "button_secondary_label_color": "#ffffff",
                      "button_tertiary_color": "#000000",
                      "button_tertiary_label_color": "#000000",
                      "button_tertiary_hover_color": "#000000",
                      "button_tertiary_hover_text_color": "#ffffff",
                      "text_heading_link_color": "#000000",
                      "text_body_color": "#000000",
                      "text_price_color": "#000000",
                      "text_sale_price_color": "#fb406b",
                      "text_strikethrough_price_color": "#9b9b9b",
                      "text_discount_color": "#ee478d",
                      "footer_bg_color": "#2e3032",
                      "footer_text_color": "#ffffff",
                      "footer_border_color": "#FFFFFF",
                      "footer_nav_hover_color": "#ffffff"
                    }
                  }
                },
                "page": []
              },
              {
                "name": "Blue",
                "global_config": {
                  "static": {
                    "props": {
                      "colors": {
                        "primary_color": "#000000",
                        "secondary_color": "#000000",
                        "accent_color": "#000000",
                        "link_color": "#4499FF",
                        "button_secondary_color": "#000000",
                        "bg_color": "#F8F8F8"
                      },
                      "auth": {
                        "show_header_auth": false,
                        "show_footer_auth": false
                      },
                      "palette": {
                        "general_setting": {
                          "theme": {
                            "page_background": "#F3F3ED",
                            "theme_accent": "#E1D0C8"
                          },
                          "text": {
                            "text_heading": "#26201A",
                            "text_body": "#3C3131",
                            "text_label": "#7D7676",
                            "text_secondary": "#9C9C9C"
                          },
                          "button": {
                            "button_primary": "#4E3F09",
                            "button_secondary": "#FFFFFF",
                            "button_link": "#B1655B"
                          },
                          "sale_discount": {
                            "sale_badge_background": "#FFFFFF",
                            "sale_badge_text": "#1C958F",
                            "sale_discount_text": "#1C958F",
                            "sale_timer": "#994449"
                          },
                          "header": {
                            "header_background": "#F3F3ED",
                            "header_nav": "#261A1A",
                            "header_icon": "#261A1A"
                          },
                          "footer": {
                            "footer_background": "#2C231E",
                            "footer_bottom_background": "#231812",
                            "footer_heading_text": "#FFFFFF",
                            "footer_body_text": "#FFFFFF",
                            "footer_icon": "#FFFFFF"
                          }
                        },
                        "advance_setting": {
                          "overlay_popup": {
                            "dialog_backgroung": "#FFFFFF",
                            "overlay": "#14130E"
                          },
                          "divider_stroke_highlight": {
                            "divider_strokes": "#D4D1D1",
                            "highlight": "#EDECE9"
                          },
                          "user_alerts": {
                            "success_background": "#C2DBC9",
                            "success_text": "#1C958F",
                            "error_background": "#E6D5D5",
                            "error_text": "#B24141",
                            "info_background": "#EBD3BC",
                            "info_text": "#D28F51"
                          }
                        }
                      },
                      "extension": {
                        "header_top": [],
                        "header_bottom": [],
                        "footer_top": [],
                        "footer_bottom": []
                      }
                    }
                  },
                  "custom": {
                    "props": {
                      "header_bg_color": "#7f9ed0",
                      "header_text_color": "#FFFFFF",
                      "header_border_color": "#FFFFFF",
                      "header_icon_color": "#FFFFFF",
                      "header_cart_notification_bg_color": "#2e3032",
                      "header_cart_notification_text_color": "#FFFFFF",
                      "header_nav_hover_color": "#2e3032",
                      "button_primary_color": "#ffffff",
                      "button_primary_label_color": "#000000",
                      "button_add_to_cart_color": "#000000",
                      "button_add_to_cart_label_color": "#ffffff",
                      "button_secondary_color": "#000000",
                      "button_secondary_label_color": "#ffffff",
                      "button_tertiary_color": "#000000",
                      "button_tertiary_label_color": "#000000",
                      "button_tertiary_hover_color": "#000000",
                      "button_tertiary_hover_text_color": "#ffffff",
                      "text_heading_link_color": "#000000",
                      "text_body_color": "#000000",
                      "text_price_color": "#000000",
                      "text_sale_price_color": "#fb406b",
                      "text_strikethrough_price_color": "#9b9b9b",
                      "text_discount_color": "#ee478d",
                      "footer_bg_color": "#7f9ed0",
                      "footer_text_color": "#FFFFFF",
                      "footer_border_color": "#FFFFFF",
                      "footer_nav_hover_color": "#2e3032"
                    }
                  }
                },
                "page": []
              }
            ],
            "preset": {
              "pages": [
                {
                  "sections": [
                    {
                      "blocks": [],
                      "predicate": {
                        "screen": {
                          "mobile": true,
                          "desktop": true,
                          "tablet": true
                        },
                        "user": {
                          "authenticated": true,
                          "anonymous": true
                        },
                        "route": {
                          "selected": "none",
                          "exact_url": ""
                        }
                      },
                      "name": "hero_image",
                      "props": {
                        "image": {
                          "value": "",
                          "type": "image_picker"
                        },
                        "overlay_layout": {
                          "type": "select",
                          "value": "center"
                        },
                        "overlay_image": {
                          "value": "",
                          "type": "image_picker"
                        },
                        "overlay_text": {
                          "value": "",
                          "type": "text"
                        },
                        "text_color": {
                          "value": "#000",
                          "type": "color"
                        },
                        "button_link": {
                          "type": "url",
                          "value": ""
                        },
                        "button_text": {
                          "value": "Shop Now",
                          "type": "text"
                        },
                        "full_width": {
                          "value": true,
                          "type": "checkbox"
                        }
                      }
                    },
                    {
                      "blocks": [],
                      "predicate": {
                        "screen": {
                          "mobile": true,
                          "desktop": true,
                          "tablet": true
                        },
                        "user": {
                          "authenticated": true,
                          "anonymous": true
                        },
                        "route": {
                          "selected": "none",
                          "exact_url": ""
                        }
                      },
                      "name": "image_slideshow",
                      "props": {
                        "autoplay": {
                          "value": false,
                          "type": "checkbox"
                        },
                        "full_width": {
                          "value": false,
                          "type": "checkbox"
                        },
                        "slide_height": {
                          "value": "adapt",
                          "type": "select"
                        },
                        "slide_interval": {
                          "value": 2,
                          "type": "range"
                        },
                        "title": {
                          "value": "Trending",
                          "type": "text"
                        }
                      },
                      "preset": {
                        "blocks": [
                          {
                            "name": "Slide"
                          },
                          {
                            "name": "Slide"
                          },
                          {
                            "name": "Slide"
                          }
                        ]
                      }
                    },
                    {
                      "blocks": [
                        {
                          "type": "gallery_image",
                          "name": "Image",
                          "props": {
                            "image": {
                              "type": "image_picker",
                              "value": ""
                            },
                            "caption": {
                              "type": "text",
                              "value": ""
                            },
                            "link": {
                              "type": "url",
                              "value": ""
                            }
                          }
                        },
                        {
                          "type": "gallery_image",
                          "name": "Image",
                          "props": {
                            "image": {
                              "type": "image_picker",
                              "value": ""
                            },
                            "caption": {
                              "type": "text",
                              "value": ""
                            },
                            "link": {
                              "type": "url",
                              "value": ""
                            }
                          }
                        },
                        {
                          "type": "gallery_image",
                          "name": "Image",
                          "props": {
                            "image": {
                              "type": "image_picker",
                              "value": ""
                            },
                            "caption": {
                              "type": "text",
                              "value": ""
                            },
                            "link": {
                              "type": "url",
                              "value": ""
                            }
                          }
                        },
                        {
                          "type": "gallery_image",
                          "name": "Image",
                          "props": {
                            "image": {
                              "type": "image_picker",
                              "value": ""
                            },
                            "caption": {
                              "type": "text",
                              "value": ""
                            },
                            "link": {
                              "type": "url",
                              "value": ""
                            }
                          }
                        }
                      ],
                      "predicate": {
                        "screen": {
                          "mobile": true,
                          "desktop": true,
                          "tablet": true
                        },
                        "user": {
                          "authenticated": true,
                          "anonymous": true
                        },
                        "route": {
                          "selected": "none",
                          "exact_url": ""
                        }
                      },
                      "name": "image_gallery",
                      "props": {
                        "title": {
                          "type": "text",
                          "value": "Popular Brands"
                        },
                        "layout": {
                          "value": "grid",
                          "type": "select"
                        },
                        "item_count": {
                          "value": 4,
                          "type": "range"
                        },
                        "cta_text": {
                          "value": "",
                          "type": "text"
                        },
                        "cta_link": {
                          "type": "url",
                          "value": ""
                        },
                        "full_width": {
                          "value": false,
                          "type": "checkbox"
                        }
                      },
                      "preset": {
                        "blocks": [
                          {
                            "name": "Image"
                          },
                          {
                            "name": "Image"
                          },
                          {
                            "name": "Image"
                          },
                          {
                            "name": "Image"
                          }
                        ]
                      }
                    },
                    {
                      "blocks": [],
                      "predicate": {
                        "screen": {
                          "mobile": true,
                          "desktop": true,
                          "tablet": true
                        },
                        "user": {
                          "authenticated": true,
                          "anonymous": true
                        },
                        "route": {
                          "selected": "none",
                          "exact_url": ""
                        }
                      },
                      "name": "brands_listing",
                      "props": {
                        "brand_type": {
                          "value": "all",
                          "type": "radio"
                        },
                        "cta_text": {
                          "value": "View all",
                          "type": "text"
                        },
                        "department": {
                          "type": "department"
                        },
                        "header": {
                          "type": "header"
                        },
                        "items_per_row": {
                          "value": 5,
                          "type": "range"
                        },
                        "layout": {
                          "value": "horizontal",
                          "type": "select"
                        },
                        "title": {
                          "type": "text",
                          "value": "Brands"
                        },
                        "view_options": {
                          "value": "fullview",
                          "type": "select"
                        }
                      }
                    },
                    {
                      "blocks": [
                        {
                          "type": "testimonial",
                          "name": "Testimonial",
                          "props": {
                            "testimonialText": {
                              "type": "textarea",
                              "value": ""
                            },
                            "author_name": {
                              "type": "text"
                            },
                            "author_description": {
                              "type": "text",
                              "value": ""
                            },
                            "author_image": {
                              "type": "image_picker",
                              "value": ""
                            }
                          }
                        },
                        {
                          "type": "testimonial",
                          "name": "Testimonial",
                          "props": {
                            "testimonialText": {
                              "type": "textarea",
                              "value": ""
                            },
                            "author_name": {
                              "type": "text"
                            },
                            "author_description": {
                              "type": "text",
                              "value": ""
                            },
                            "author_image": {
                              "type": "image_picker",
                              "value": ""
                            }
                          }
                        },
                        {
                          "type": "testimonial",
                          "name": "Testimonial",
                          "props": {
                            "testimonialText": {
                              "type": "textarea",
                              "value": ""
                            },
                            "author_name": {
                              "type": "text"
                            },
                            "author_description": {
                              "type": "text",
                              "value": ""
                            },
                            "author_image": {
                              "type": "image_picker",
                              "value": ""
                            }
                          }
                        }
                      ],
                      "predicate": {
                        "screen": {
                          "mobile": true,
                          "desktop": true,
                          "tablet": true
                        },
                        "user": {
                          "authenticated": true,
                          "anonymous": true
                        },
                        "route": {
                          "selected": "none",
                          "exact_url": ""
                        }
                      },
                      "name": "testimonials",
                      "props": {
                        "autoplay": {
                          "value": false,
                          "type": "checkbox"
                        },
                        "slide_interval": {
                          "value": 2,
                          "type": "range"
                        }
                      },
                      "preset": {
                        "blocks": [
                          {
                            "name": "Testimonial"
                          },
                          {
                            "name": "Testimonial"
                          },
                          {
                            "name": "Testimonial"
                          }
                        ]
                      }
                    }
                  ],
                  "value": "home"
                }
              ]
            },
            "global_schema": {
              "props": [
                {
                  "type": "checkbox",
                  "id": "disable_cart",
                  "category": "Colors",
                  "label": "header"
                }
              ]
            }
          },
          "available_sections": [
            {
              "props": [
                {
                  "type": "url",
                  "id": "banner_link",
                  "label": "Redirect Link"
                },
                {
                  "type": "checkbox",
                  "id": "full_width",
                  "label": "Full width",
                  "info": "Check to allow items to take entire width of the viewport"
                },
                {
                  "type": "range",
                  "id": "margin_top",
                  "min": 0,
                  "max": 1000,
                  "step": 1,
                  "unit": "px",
                  "label": "Section Top Margin"
                },
                {
                  "type": "range",
                  "id": "margin_bottom",
                  "min": 0,
                  "max": 1000,
                  "step": 1,
                  "unit": "px",
                  "label": "Section Bottom Margin"
                }
              ],
              "blocks": [],
              "name": "application_banner",
              "label": "Application Banner"
            },
            {
              "props": [
                {
                  "type": "text",
                  "id": "title",
                  "label": "Title"
                },
                {
                  "type": "range",
                  "id": "margin_top",
                  "min": 0,
                  "max": 1000,
                  "step": 1,
                  "unit": "px",
                  "label": "Section Top Margin"
                },
                {
                  "type": "range",
                  "id": "margin_bottom",
                  "min": 0,
                  "max": 1000,
                  "step": 1,
                  "unit": "px",
                  "label": "Section Bottom Margin"
                },
                {
                  "type": "header",
                  "id": "header",
                  "value": "Choose Brands to Show"
                },
                {
                  "id": "view_options",
                  "type": "select",
                  "options": [
                    {
                      "value": "logo",
                      "text": "Logo View"
                    },
                    {
                      "value": "fullview",
                      "text": "Logo and Banner View"
                    }
                  ],
                  "label": "View Options",
                  "info": "Brand card view options"
                },
                {
                  "type": "radio",
                  "id": "brand_type",
                  "options": [
                    {
                      "value": "all",
                      "text": "All"
                    },
                    {
                      "value": "department",
                      "text": "Department"
                    },
                    {
                      "value": "handpicked",
                      "text": "Handpicked"
                    }
                  ]
                },
                {
                  "type": "department",
                  "id": "department",
                  "label": "Department",
                  "info": "Select a department of brands",
                  "note": "Department only applies if 'department' type is selected"
                },
                {
                  "type": "range",
                  "id": "items_per_row",
                  "min": 3,
                  "max": 5,
                  "step": 1,
                  "unit": "",
                  "label": "Items per row",
                  "info": "Maximum items allowed per row"
                },
                {
                  "id": "layout",
                  "type": "select",
                  "options": [
                    {
                      "value": "grid",
                      "text": "Grid View"
                    },
                    {
                      "value": "horizontal",
                      "text": "Horizontal View"
                    }
                  ],
                  "label": "Layout",
                  "info": "Alignment of content"
                },
                {
                  "type": "text",
                  "id": "cta_text",
                  "label": "CTA Text"
                }
              ],
              "blocks": [
                {
                  "type": "brand_item",
                  "name": "Brand Item",
                  "props": [
                    {
                      "type": "brand",
                      "id": "brand",
                      "label": "Select Brand"
                    }
                  ]
                }
              ],
              "name": "brands_listing",
              "label": "Brands Listing"
            },
            {
              "props": [
                {
                  "type": "text",
                  "id": "title",
                  "label": "Title"
                },
                {
                  "type": "range",
                  "id": "margin_top",
                  "min": 0,
                  "max": 1000,
                  "step": 1,
                  "unit": "px",
                  "label": "Section Top Margin"
                },
                {
                  "type": "range",
                  "id": "margin_bottom",
                  "min": 0,
                  "max": 1000,
                  "step": 1,
                  "unit": "px",
                  "label": "Section Bottom Margin"
                },
                {
                  "type": "radio",
                  "id": "collection_type",
                  "options": [
                    {
                      "value": "all",
                      "text": "All"
                    },
                    {
                      "value": "handpicked",
                      "text": "Handpicked"
                    }
                  ]
                },
                {
                  "type": "text",
                  "id": "tags_filter",
                  "label": "Filter by tags",
                  "info": "Filter by Tags "
                },
                {
                  "type": "range",
                  "id": "items_per_row",
                  "min": 3,
                  "max": 5,
                  "step": 1,
                  "unit": "",
                  "label": "Max items per row",
                  "info": "Maximum items allowed per row"
                },
                {
                  "id": "layout",
                  "type": "select",
                  "options": [
                    {
                      "value": "grid",
                      "text": "Grid View"
                    },
                    {
                      "value": "horizontal",
                      "text": "Horizontal View"
                    }
                  ],
                  "label": "Layout",
                  "info": "Alignment of content"
                },
                {
                  "type": "text",
                  "id": "cta_text",
                  "label": "CTA Text"
                }
              ],
              "blocks": [
                {
                  "type": "collection-item",
                  "name": "collection Item",
                  "props": [
                    {
                      "type": "collection",
                      "id": "collection",
                      "label": "Select Collection"
                    }
                  ]
                }
              ],
              "name": "collections_listing",
              "label": "Collections Listing"
            },
            {
              "props": [
                {
                  "type": "code",
                  "id": "code",
                  "label": "Custom HTML",
                  "info": "Add Your custom HTML Code below. You can also use the full screen icon to open a code editor and add your code"
                },
                {
                  "type": "range",
                  "id": "margin_top",
                  "min": 0,
                  "max": 1000,
                  "step": 1,
                  "unit": "px",
                  "label": "Section Top Margin"
                },
                {
                  "type": "range",
                  "id": "margin_bottom",
                  "min": 0,
                  "max": 1000,
                  "step": 1,
                  "unit": "px",
                  "label": "Section Bottom Margin"
                }
              ],
              "blocks": [],
              "name": "custom_html",
              "label": "Custom HTML"
            },
            {
              "props": [
                {
                  "type": "extension",
                  "id": "extension",
                  "label": "Extension Positions",
                  "info": "Handle extension in these positions",
                  "positions": [
                    {
                      "value": "section_extension",
                      "text": ""
                    }
                  ]
                },
                {
                  "type": "range",
                  "id": "margin_top",
                  "min": 0,
                  "max": 1000,
                  "step": 1,
                  "unit": "px",
                  "label": "Section Top Margin"
                },
                {
                  "type": "range",
                  "id": "margin_bottom",
                  "min": 0,
                  "max": 1000,
                  "step": 1,
                  "unit": "px",
                  "label": "Section Bottom Margin"
                }
              ],
              "blocks": [],
              "name": "section_extension",
              "label": "Extensions"
            },
            {
              "props": [
                {
                  "type": "text",
                  "id": "title",
                  "label": "Title"
                },
                {
                  "type": "range",
                  "id": "margin_top",
                  "min": 0,
                  "max": 1000,
                  "step": 1,
                  "unit": "px",
                  "label": "Section Top Margin"
                },
                {
                  "type": "range",
                  "id": "margin_bottom",
                  "min": 0,
                  "max": 1000,
                  "step": 1,
                  "unit": "px",
                  "label": "Section Bottom Margin"
                },
                {
                  "type": "collection",
                  "id": "collection",
                  "label": "Collection",
                  "info": "Select a collection to display its products"
                },
                {
                  "type": "range",
                  "id": "items_per_row",
                  "min": 2,
                  "max": 5,
                  "step": 1,
                  "unit": "",
                  "label": "Products per row",
                  "info": "Maximum items allowed per row"
                },
                {
                  "id": "layout",
                  "type": "select",
                  "options": [
                    {
                      "value": "grid",
                      "text": "Grid View"
                    },
                    {
                      "value": "horizontal",
                      "text": "Horizontal View"
                    }
                  ],
                  "label": "Layout",
                  "info": "Alignment of content"
                },
                {
                  "type": "checkbox",
                  "id": "autoplay",
                  "label": "AutoPlay Slides",
                  "info": "Check to autoplay slides"
                },
                {
                  "type": "range",
                  "id": "slide_interval",
                  "min": 1,
                  "max": 10,
                  "step": 1,
                  "unit": "sec",
                  "label": "Change slides after every",
                  "info": "Autoplay slide duration"
                }
              ],
              "blocks": [],
              "name": "featured_collection",
              "label": "Featured Collection"
            },
            {
              "props": [
                {
                  "id": "image",
                  "type": "image_picker",
                  "label": "Hero Image"
                },
                {
                  "type": "range",
                  "id": "margin_top",
                  "min": 0,
                  "max": 1000,
                  "step": 1,
                  "unit": "px",
                  "label": "Section Top Margin"
                },
                {
                  "type": "range",
                  "id": "margin_bottom",
                  "min": 0,
                  "max": 1000,
                  "step": 1,
                  "unit": "px",
                  "label": "Section Bottom Margin"
                },
                {
                  "id": "overlay_layout",
                  "type": "select",
                  "options": [
                    {
                      "value": "left",
                      "text": "Align Left"
                    },
                    {
                      "value": "center",
                      "text": "Align Center"
                    },
                    {
                      "value": "right",
                      "text": "Align Right"
                    }
                  ],
                  "label": "Overlay Layout",
                  "info": "Alignment of overlay content"
                },
                {
                  "type": "image_picker",
                  "id": "overlay_image",
                  "label": "Overlay image",
                  "info": "Overlay Image"
                },
                {
                  "type": "text",
                  "id": "overlay_text",
                  "label": "Overlay Text"
                },
                {
                  "type": "color",
                  "id": "text_color",
                  "label": "Text Color"
                },
                {
                  "type": "url",
                  "id": "button_link",
                  "label": "Redirect Link"
                },
                {
                  "type": "text",
                  "id": "button_text",
                  "label": "Button Text"
                },
                {
                  "type": "checkbox",
                  "id": "full_width",
                  "label": "Full width",
                  "info": "Check to allow items to take entire width of the viewport"
                },
                {
                  "type": "checkbox",
                  "id": "fullscreen_image",
                  "label": "Fullscreen Banner ",
                  "info": "Check to allow items to take entire viewport"
                }
              ],
              "blocks": [],
              "name": "hero_image",
              "label": "Hero Image"
            },
            {
              "props": [
                {
                  "type": "video",
                  "id": "videoFile",
                  "label": "Primary Video"
                },
                {
                  "id": "videoUrl",
                  "type": "text",
                  "label": "Video URL",
                  "info": "Supports MP4 Video & Youtube Video URL"
                },
                {
                  "type": "checkbox",
                  "id": "autoplay",
                  "label": "Autoplay",
                  "info": "Check to enable autoplay (Video will be muted if autoplay is active)"
                },
                {
                  "type": "checkbox",
                  "id": "hidecontrols",
                  "label": "Hide Video Controls",
                  "info": "check to disable video controls"
                },
                {
                  "type": "checkbox",
                  "id": "showloop",
                  "label": "Play Video in Loop",
                  "info": "check to disable Loop"
                },
                {
                  "type": "text",
                  "id": "title",
                  "label": "Heading"
                },
                {
                  "id": "coverUrl",
                  "type": "image_picker",
                  "label": "Thumbnail Image"
                }
              ],
              "blocks": [],
              "name": "hero_video-v2",
              "label": "Hero Video V2"
            },
            {
              "props": [
                {
                  "id": "video_url",
                  "type": "text",
                  "label": "Video URL",
                  "info": "Supports MP4 Video & Youtube Video URL"
                },
                {
                  "type": "range",
                  "id": "margin_top",
                  "min": 0,
                  "max": 1000,
                  "step": 1,
                  "unit": "px",
                  "label": "Section Top Margin"
                },
                {
                  "type": "range",
                  "id": "margin_bottom",
                  "min": 0,
                  "max": 1000,
                  "step": 1,
                  "unit": "px",
                  "label": "Section Bottom Margin"
                },
                {
                  "type": "checkbox",
                  "id": "autoplay",
                  "label": "Autoplay",
                  "info": "Check to enable autoplay (Video will be muted if autoplay is active)"
                },
                {
                  "type": "checkbox",
                  "id": "controls",
                  "label": "Video Controls",
                  "info": "Uncheck to disable video controls"
                },
                {
                  "type": "checkbox",
                  "id": "full_width",
                  "label": "Full width",
                  "info": "Check to allow items to take entire width of the viewport"
                },
                {
                  "type": "checkbox",
                  "id": "bg_video",
                  "label": "Video In Background",
                  "info": "Use video in background with overlay (Overlay Image & Video Controls will be disabled by default on website)"
                },
                {
                  "type": "select",
                  "id": "size",
                  "options": [
                    {
                      "value": "small",
                      "text": "Small"
                    },
                    {
                      "value": "medium",
                      "text": "Medium"
                    },
                    {
                      "value": "large",
                      "text": "Large"
                    },
                    {
                      "value": "adapt",
                      "text": "Adapt"
                    },
                    {
                      "value": "fullscreen",
                      "text": "Fullscreen"
                    }
                  ],
                  "label": "Video Height",
                  "info": "Height of Video"
                },
                {
                  "type": "checkbox",
                  "id": "enable_overlay_image",
                  "label": "Enable Overlay Image"
                },
                {
                  "id": "cover_url",
                  "type": "image_picker",
                  "label": "Video Overlay Image"
                },
                {
                  "type": "checkbox",
                  "id": "enable_overlay_color",
                  "label": "Enable Overlay Colour"
                },
                {
                  "type": "color",
                  "id": "overlay_color",
                  "label": "Overlay Color"
                },
                {
                  "type": "range",
                  "id": "overlay_opacity",
                  "min": 0,
                  "max": 1,
                  "step": 0.1,
                  "unit": "",
                  "label": "Overlay Opacity"
                },
                {
                  "type": "select",
                  "id": "overlay_size",
                  "options": [
                    {
                      "value": "container",
                      "text": "Container (Default)"
                    },
                    {
                      "value": "content",
                      "text": "Content"
                    }
                  ],
                  "label": "Overlay Size"
                },
                {
                  "id": "overlay_position",
                  "type": "select",
                  "options": [
                    {
                      "value": "top-left",
                      "text": "Top Left"
                    },
                    {
                      "value": "top-center",
                      "text": "Top Center"
                    },
                    {
                      "value": "top-right",
                      "text": "Top Right"
                    },
                    {
                      "value": "center-left",
                      "text": "Center Left"
                    },
                    {
                      "value": "center-center",
                      "text": "Center (Default)"
                    },
                    {
                      "value": "center-right",
                      "text": "Center Right"
                    },
                    {
                      "value": "bottom-left",
                      "text": "Bottom Left"
                    },
                    {
                      "value": "bottom-center",
                      "text": "Bottom Center"
                    },
                    {
                      "value": "bottom-right",
                      "text": "Bottom right"
                    }
                  ],
                  "label": "Overlay position",
                  "info": "Alignment of Overlay content(heading, sub-heading, button)"
                },
                {
                  "type": "text",
                  "id": "heading",
                  "label": "Heading"
                },
                {
                  "type": "color",
                  "id": "heading_color",
                  "label": "Heading Text Color"
                },
                {
                  "type": "text",
                  "id": "sub_heading",
                  "label": "Sub-heading"
                },
                {
                  "type": "color",
                  "id": "sub_heading_color",
                  "label": "Sub-heading Text Color"
                },
                {
                  "type": "url",
                  "id": "button_link",
                  "label": "Redirect Link"
                },
                {
                  "type": "text",
                  "id": "button_text",
                  "label": "Button Text"
                }
              ],
              "blocks": [],
              "name": "hero_video",
              "label": "Hero Video"
            },
            {
              "props": [
                {
                  "type": "text",
                  "id": "title",
                  "label": "Title"
                },
                {
                  "type": "range",
                  "id": "margin_top",
                  "min": 0,
                  "max": 1000,
                  "step": 1,
                  "unit": "px",
                  "label": "Section Top Margin"
                },
                {
                  "type": "range",
                  "id": "margin_bottom",
                  "min": 0,
                  "max": 1000,
                  "step": 1,
                  "unit": "px",
                  "label": "Section Bottom Margin"
                },
                {
                  "id": "layout",
                  "type": "select",
                  "options": [
                    {
                      "value": "grid",
                      "text": "Grid View"
                    },
                    {
                      "value": "horizontal",
                      "text": "Horizontal View"
                    }
                  ],
                  "label": "Layout",
                  "info": "Alignment of content"
                },
                {
                  "type": "range",
                  "id": "item_count",
                  "min": 3,
                  "max": 4,
                  "step": 1,
                  "unit": "",
                  "label": "No of items",
                  "info": "Maximum items allowed per row for Horizontal view, for gallery max 5 are viewable and only 5 blocks are required"
                },
                {
                  "type": "text",
                  "id": "cta_text",
                  "label": "CTA Text"
                },
                {
                  "type": "url",
                  "id": "cta_link",
                  "label": "CTA Link",
                  "info": "Link to redirect"
                },
                {
                  "type": "checkbox",
                  "id": "full_width",
                  "label": "Full width",
                  "info": "Check to allow items to take entire width of the viewport"
                }
              ],
              "blocks": [
                {
                  "type": "gallery_image",
                  "name": "Image",
                  "props": [
                    {
                      "type": "image_picker",
                      "id": "image",
                      "label": "Gallery Image"
                    },
                    {
                      "type": "text",
                      "id": "caption",
                      "label": "Image Caption"
                    },
                    {
                      "type": "url",
                      "id": "link",
                      "label": "Link",
                      "info": "Link to redirect"
                    }
                  ]
                }
              ],
              "name": "image_gallery",
              "label": "Image Gallery",
              "preset": {
                "blocks": [
                  {
                    "name": "Image"
                  },
                  {
                    "name": "Image"
                  },
                  {
                    "name": "Image"
                  },
                  {
                    "name": "Image"
                  }
                ]
              }
            },
            {
              "props": [
                {
                  "type": "text",
                  "id": "title",
                  "label": "Title"
                },
                {
                  "type": "range",
                  "id": "margin_top",
                  "min": 0,
                  "max": 1000,
                  "step": 1,
                  "unit": "px",
                  "label": "Section Top Margin"
                },
                {
                  "type": "range",
                  "id": "margin_bottom",
                  "min": 0,
                  "max": 1000,
                  "step": 1,
                  "unit": "px",
                  "label": "Section Bottom Margin"
                },
                {
                  "type": "checkbox",
                  "id": "autoplay",
                  "label": "AutoPlay Slides",
                  "info": "Check to autoplay slides"
                },
                {
                  "type": "range",
                  "id": "slide_interval",
                  "min": 1,
                  "max": 10,
                  "step": 1,
                  "unit": "sec",
                  "label": "Change slides after every",
                  "info": "Autoplay slide duration"
                },
                {
                  "type": "select",
                  "id": "slide_height",
                  "options": [
                    {
                      "value": "adapt",
                      "text": "Adapt to first image"
                    },
                    {
                      "value": "small",
                      "text": "Small"
                    },
                    {
                      "value": "medium",
                      "text": "Medium"
                    },
                    {
                      "value": "large",
                      "text": "Large"
                    }
                  ],
                  "label": "Slide height",
                  "info": "Size of the slide"
                },
                {
                  "type": "checkbox",
                  "id": "full_width",
                  "label": "Full width",
                  "info": "Check to allow items to take entire width of the viewport"
                }
              ],
              "blocks": [
                {
                  "type": "image_slide",
                  "name": "Slide",
                  "props": [
                    {
                      "type": "image_picker",
                      "id": "image",
                      "label": "Image"
                    },
                    {
                      "type": "url",
                      "id": "slide_link",
                      "label": "Slide Link"
                    }
                  ]
                }
              ],
              "name": "image_slideshow",
              "label": "Image Slideshow",
              "preset": {
                "blocks": [
                  {
                    "name": "Slide"
                  },
                  {
                    "name": "Slide"
                  },
                  {
                    "name": "Slide"
                  }
                ]
              }
            },
            {
              "props": [
                {
                  "type": "image_picker",
                  "id": "image",
                  "label": "Image"
                },
                {
                  "id": "video",
                  "type": "url",
                  "label": "Video"
                },
                {
                  "type": "range",
                  "id": "margin_top",
                  "min": 0,
                  "max": 1000,
                  "step": 1,
                  "unit": "px",
                  "label": "Section Top Margin"
                },
                {
                  "type": "range",
                  "id": "margin_bottom",
                  "min": 0,
                  "max": 1000,
                  "step": 1,
                  "unit": "px",
                  "label": "Section Bottom Margin"
                },
                {
                  "id": "cover",
                  "type": "url",
                  "label": "Video Cover Image"
                },
                {
                  "type": "select",
                  "id": "media_alignment",
                  "options": [
                    {
                      "value": "left",
                      "text": "Left"
                    },
                    {
                      "value": "center",
                      "text": "Center"
                    },
                    {
                      "value": "right",
                      "text": "Right"
                    }
                  ],
                  "label": "Media Alignment"
                },
                {
                  "type": "text",
                  "id": "heading",
                  "label": "Heading"
                },
                {
                  "type": "text",
                  "id": "text Pair large text with an image to give focus to your chosen product, collection, or blog post. Add details on availability, style, or even provide a review.",
                  "label": "Text"
                },
                {
                  "type": "select",
                  "id": "text_alignment",
                  "options": [
                    {
                      "value": "left",
                      "text": "Left"
                    },
                    {
                      "value": "center",
                      "text": "Center"
                    },
                    {
                      "value": "right",
                      "text": "Right"
                    }
                  ],
                  "label": "Text Alignment"
                }
              ],
              "blocks": [],
              "name": "media_with_text",
              "label": "Media with text"
            },
            {
              "props": [
                {
                  "type": "text",
                  "id": "title",
                  "label": "Title"
                },
                {
                  "type": "range",
                  "id": "margin_top",
                  "min": 0,
                  "max": 1000,
                  "step": 1,
                  "unit": "px",
                  "label": "Section Top Margin"
                },
                {
                  "type": "range",
                  "id": "margin_bottom",
                  "min": 0,
                  "max": 1000,
                  "step": 1,
                  "unit": "px",
                  "label": "Section Bottom Margin"
                },
                {
                  "type": "checkbox",
                  "id": "autoplay",
                  "label": "AutoPlay Slides"
                },
                {
                  "type": "range",
                  "id": "slide_interval",
                  "min": 1,
                  "max": 10,
                  "step": 1,
                  "unit": "sec",
                  "label": "Change slides every"
                }
              ],
              "blocks": [
                {
                  "type": "testimonial",
                  "name": "Testimonial",
                  "props": [
                    {
                      "type": "textarea",
                      "id": "testimonialText",
                      "label": "Text for Testimonial",
                      "info": "Text for testimonial",
                      "placeholder": "Text"
                    },
                    {
                      "type": "text",
                      "id": "author_name",
                      "label": "Author name"
                    },
                    {
                      "type": "text",
                      "id": "author_description",
                      "label": "Author Description"
                    },
                    {
                      "type": "image_picker",
                      "id": "author_image",
                      "label": "Author Image"
                    }
                  ]
                }
              ],
              "name": "testimonials",
              "label": "Testimonial",
              "preset": {
                "blocks": [
                  {
                    "name": "Testimonial"
                  },
                  {
                    "name": "Testimonial"
                  },
                  {
                    "name": "Testimonial"
                  }
                ]
              }
            }
          ],
          "src": "https://cdn.fynd.com/v2/falling-surf-7c8bb8/fyndnp/wrkr/addsale/organization/64b0eb01c35f990518880a82/theme/assets/7yuL57qP2-archive.zip",
          "company_id": 1
        }
      },
      "AvailablePageHomepageExample": {
        "value": {
          "text": "Home",
          "value": "home",
          "path": "",
          "type": "system",
          "sections": [
            {
              "label": "",
              "blocks": [
                {
                  "type": "gallery_image",
                  "name": "Image",
                  "props": {
                    "image": {
                      "type": "image_picker",
                      "value": "https://hdn-1.fynd.com/company/884/applications/000000000000000000000003/theme/pictures/free/original/theme-image-1615401262078.png"
                    },
                    "slide_link": {
                      "type": "url",
                      "value": "/products"
                    }
                  }
                },
                {
                  "type": "gallery_image",
                  "name": "Image",
                  "props": {
                    "image": {
                      "type": "image_picker",
                      "value": "https://hdn-1.addsale.com/x0/company/7/applications/5ec3d224848a007bfeacb550/theme/pictures/free/original/theme-image-1593022382417.jpeg"
                    },
                    "slide_link": {
                      "type": "url",
                      "value": "/products"
                    }
                  }
                }
              ],
              "predicate": {
                "screen": {
                  "mobile": true,
                  "desktop": true,
                  "tablet": true
                },
                "user": {
                  "authenticated": true,
                  "anonymous": true
                },
                "route": {
                  "selected": "none",
                  "exact_url": "",
                  "query": {
                    "utm_source": "facebook"
                  }
                },
                "schedule": {
                  "start": "2022-08-29T09:30:51.312Z",
                  "end": "2022-08-29T09:30:51.312Z",
                  "cron": "test"
                }
              },
              "name": "slideshow",
              "props": {
                "slide_height": {
                  "type": "select",
                  "value": "adapt"
                },
                "autoplay": {
                  "type": "checkbox",
                  "value": false
                },
                "slide_interval": {
                  "type": "range",
                  "value": 2
                },
                "arrow": {
                  "type": "checkbox",
                  "value": null
                }
              }
            },
            {
              "label": "",
              "blocks": [],
              "predicate": {
                "screen": {
                  "mobile": true,
                  "desktop": true,
                  "tablet": true
                },
                "user": {
                  "authenticated": true,
                  "anonymous": true
                },
                "route": {
                  "selected": "none",
                  "exact_url": ""
                }
              },
              "name": "imageBanner",
              "props": {
                "image": {
                  "type": "image_picker",
                  "value": ""
                },
                "layout": {
                  "type": "select",
                  "value": "full"
                },
                "height": {
                  "type": "select",
                  "value": "h-auto"
                },
                "text": {
                  "type": "text",
                  "value": ""
                },
                "overlay_layout": {
                  "type": "select",
                  "value": "left"
                },
                "overlay_image": {
                  "type": "image_picker",
                  "value": ""
                },
                "cta_link": {
                  "type": "url",
                  "value": "https://demo.fyndstore.co/"
                },
                "cta_text": {
                  "type": "text",
                  "value": "Video Assistance"
                },
                "overlayLayout": {
                  "type": "select",
                  "value": "left"
                },
                "overlayImage": {
                  "type": "image_picker",
                  "value": null
                },
                "ctaLink": {
                  "type": "url",
                  "value": null
                },
                "ctaText": {
                  "type": "text",
                  "value": null
                }
              }
            },
            {
              "label": "",
              "blocks": [
                {
                  "type": "collection",
                  "name": "Collection",
                  "props": {
                    "collection": {
                      "type": "collection"
                    }
                  }
                },
                {
                  "type": "collection",
                  "name": "Collection",
                  "props": {
                    "collection": {
                      "type": "collection"
                    }
                  }
                },
                {
                  "type": "collection",
                  "name": "Collection",
                  "props": {
                    "collection": {
                      "type": "collection"
                    }
                  }
                },
                {
                  "type": "collection",
                  "name": "Collection",
                  "props": {
                    "collection": {
                      "type": "collection"
                    }
                  }
                }
              ],
              "predicate": {
                "screen": {
                  "mobile": true,
                  "desktop": true,
                  "tablet": true
                },
                "user": {
                  "authenticated": true,
                  "anonymous": true
                },
                "route": {
                  "selected": "none",
                  "exact_url": ""
                }
              },
              "name": "collectionList",
              "props": {
                "heading": {
                  "value": "Collection List",
                  "type": "text"
                },
                "item_count": {
                  "value": 4,
                  "type": "range"
                },
                "full_width": {
                  "value": false,
                  "type": "checkbox"
                }
              },
              "preset": {
                "blocks": [
                  {
                    "name": "Collection"
                  },
                  {
                    "name": "Collection"
                  },
                  {
                    "name": "Collection"
                  },
                  {
                    "name": "Collection"
                  }
                ]
              }
            },
            {
              "label": "",
              "blocks": [],
              "predicate": {
                "screen": {
                  "mobile": true,
                  "desktop": true,
                  "tablet": true
                },
                "user": {
                  "authenticated": true,
                  "anonymous": true
                },
                "route": {
                  "selected": "none",
                  "exact_url": ""
                }
              },
              "name": "ApplicationBanner",
              "props": {
                "cta_link": {
                  "type": "url",
                  "value": "https://demo.fyndstore.co/form/video-assistance"
                },
                "ctaLink": {
                  "type": "url",
                  "value": null
                }
              }
            },
            {
              "label": "",
              "blocks": [
                {
                  "type": "gallery_image",
                  "name": "Image",
                  "props": {
                    "image": {
                      "type": "image_picker",
                      "value": "https://place-hold.it/600x500"
                    },
                    "caption": {
                      "type": "text",
                      "value": ""
                    },
                    "link": {
                      "type": "url",
                      "value": ""
                    }
                  }
                },
                {
                  "type": "gallery_image",
                  "name": "Image",
                  "props": {
                    "image": {
                      "type": "image_picker",
                      "value": "https://place-hold.it/600x500"
                    },
                    "caption": {
                      "type": "text",
                      "value": ""
                    },
                    "link": {
                      "type": "url",
                      "value": ""
                    }
                  }
                },
                {
                  "type": "gallery_image",
                  "name": "Image",
                  "props": {
                    "image": {
                      "type": "image_picker",
                      "value": "https://place-hold.it/600x500"
                    },
                    "caption": {
                      "type": "text",
                      "value": ""
                    },
                    "link": {
                      "type": "url",
                      "value": ""
                    }
                  }
                },
                {
                  "type": "gallery_image",
                  "name": "Image",
                  "props": {
                    "image": {
                      "type": "image_picker",
                      "value": "https://place-hold.it/600x500"
                    },
                    "caption": {
                      "type": "text",
                      "value": ""
                    },
                    "link": {
                      "type": "url",
                      "value": ""
                    }
                  }
                }
              ],
              "predicate": {
                "screen": {
                  "mobile": true,
                  "desktop": true,
                  "tablet": true
                },
                "user": {
                  "authenticated": true,
                  "anonymous": true
                },
                "route": {
                  "selected": "none",
                  "exact_url": ""
                }
              },
              "name": "gallery",
              "props": {
                "item_count": {
                  "value": 4,
                  "type": "range"
                }
              },
              "preset": {
                "blocks": [
                  {
                    "name": "Image"
                  },
                  {
                    "name": "Image"
                  },
                  {
                    "name": "Image"
                  },
                  {
                    "name": "Image"
                  }
                ]
              }
            },
            {
              "label": "",
              "blocks": [
                {
                  "type": "collection",
                  "name": "Collection",
                  "props": {
                    "collection": {
                      "type": "collection"
                    }
                  }
                },
                {
                  "type": "collection",
                  "name": "Collection",
                  "props": {
                    "collection": {
                      "type": "collection"
                    }
                  }
                },
                {
                  "type": "collection",
                  "name": "Collection",
                  "props": {
                    "collection": {
                      "type": "collection"
                    }
                  }
                },
                {
                  "type": "collection",
                  "name": "Collection",
                  "props": {
                    "collection": {
                      "type": "collection"
                    }
                  }
                }
              ],
              "predicate": {
                "screen": {
                  "mobile": true,
                  "desktop": true,
                  "tablet": true
                },
                "user": {
                  "authenticated": true,
                  "anonymous": true
                },
                "route": {
                  "selected": "none",
                  "exact_url": ""
                }
              },
              "name": "collectionList",
              "props": {
                "heading": {
                  "type": "text",
                  "value": "Collection List 2"
                },
                "item_count": {
                  "value": 4,
                  "type": "range"
                },
                "full_width": {
                  "value": false,
                  "type": "checkbox"
                }
              },
              "preset": {
                "blocks": [
                  {
                    "name": "Collection"
                  },
                  {
                    "name": "Collection"
                  },
                  {
                    "name": "Collection"
                  },
                  {
                    "name": "Collection"
                  }
                ]
              }
            },
            {
              "label": "",
              "blocks": [
                {
                  "type": "gallery_image",
                  "name": "Image",
                  "props": {
                    "image": {
                      "type": "image_picker",
                      "value": "https://hdn-1.fynd.com/company/884/applications/000000000000000000000003/theme/pictures/free/original/diesel-desktop.png"
                    },
                    "slide_link": {
                      "type": "url",
                      "value": "/products"
                    }
                  }
                },
                {
                  "type": "gallery_image",
                  "name": "Image",
                  "props": {
                    "image": {
                      "type": "image_picker",
                      "value": "https://hdn-1.addsale.com/x0/company/7/applications/5ec3d224848a007bfeacb550/theme/pictures/free/original/theme-image-1593022382417.jpeg"
                    },
                    "slide_link": {
                      "type": "url",
                      "value": "/products"
                    }
                  }
                }
              ],
              "predicate": {
                "screen": {
                  "mobile": true,
                  "desktop": true,
                  "tablet": true
                },
                "user": {
                  "authenticated": true,
                  "anonymous": true
                },
                "route": {
                  "selected": "none",
                  "exact_url": "",
                  "query": {
                    "utm_source": "facebook"
                  }
                }
              },
              "name": "slideshow",
              "props": {
                "slide_height": {
                  "type": "select",
                  "value": "adapt"
                },
                "autoplay": {
                  "type": "checkbox",
                  "value": false
                },
                "slide_interval": {
                  "type": "range",
                  "value": 2
                },
                "arrow": {
                  "type": "checkbox",
                  "value": null
                }
              }
            }
          ],
          "sections_meta": [
            {
              "attributes": {
                "page": "home"
              }
            }
          ],
          "theme": "000000000000000000000001",
          "seo": {
            "title": "",
            "description": "",
            "breadcrumbs": [],
            "canonical_url": "",
            "meta_tags": [],
            "sitemap": {
              "frequency": "never",
              "priority": 0.5,
              "modified_on": "2024-09-05T10:33:22.432Z"
            }
          },
          "props": [],
          "updated_at": "2023-11-01T15:40:28.640Z",
          "created_at": "2023-11-01T15:40:28.640Z",
          "_id": "60c0f83ccd911b040f40978b"
        }
      },
      "AllAvailablePageExample": {
        "value": {
          "pages": [
            {
              "value": "test",
              "path": "",
              "type": "system",
              "sections": [
                {
                  "label": "",
                  "blocks": [
                    {
                      "type": "gallery_image",
                      "name": "Image",
                      "props": {
                        "image": {
                          "type": "image_picker",
                          "value": "https://hdn-1.fynd.com/company/884/applications/000000000000000000000003/theme/pictures/free/original/theme-image-1615401262078.png"
                        },
                        "slide_link": {
                          "type": "url",
                          "value": "/products"
                        }
                      }
                    },
                    {
                      "type": "gallery_image",
                      "name": "Image",
                      "props": {
                        "image": {
                          "type": "image_picker",
                          "value": "https://hdn-1.addsale.com/x0/company/7/applications/5ec3d224848a007bfeacb550/theme/pictures/free/original/theme-image-1593022382417.jpeg"
                        },
                        "slide_link": {
                          "type": "url",
                          "value": "/products"
                        }
                      }
                    }
                  ],
                  "predicate": {
                    "screen": {
                      "mobile": true,
                      "desktop": true,
                      "tablet": true
                    },
                    "user": {
                      "authenticated": true,
                      "anonymous": true
                    },
                    "route": {
                      "selected": "none",
                      "exact_url": "",
                      "query": {
                        "utm_source": "facebook"
                      }
                    },
                    "schedule": {
                      "start": "2022-08-29T09:30:51.312Z",
                      "end": "2022-08-29T09:30:51.312Z",
                      "cron": "test"
                    }
                  },
                  "name": "slideshow",
                  "props": {
                    "slide_height": {
                      "type": "select",
                      "value": "adapt"
                    },
                    "autoplay": {
                      "type": "checkbox",
                      "value": false
                    },
                    "slide_interval": {
                      "type": "range",
                      "value": 2
                    },
                    "arrow": {
                      "type": "checkbox",
                      "value": null
                    }
                  }
                },
                {
                  "label": "",
                  "blocks": [],
                  "predicate": {
                    "screen": {
                      "mobile": true,
                      "desktop": true,
                      "tablet": true
                    },
                    "user": {
                      "authenticated": true,
                      "anonymous": true
                    },
                    "route": {
                      "selected": "none",
                      "exact_url": ""
                    }
                  },
                  "name": "imageBanner",
                  "props": {
                    "image": {
                      "type": "image_picker",
                      "value": ""
                    },
                    "layout": {
                      "type": "select",
                      "value": "full"
                    },
                    "height": {
                      "type": "select",
                      "value": "h-auto"
                    },
                    "text": {
                      "type": "text",
                      "value": ""
                    },
                    "overlay_layout": {
                      "type": "select",
                      "value": "left"
                    },
                    "overlay_image": {
                      "type": "image_picker",
                      "value": ""
                    },
                    "cta_link": {
                      "type": "url",
                      "value": "https://demo.fyndstore.co/"
                    },
                    "cta_text": {
                      "type": "text",
                      "value": "Video Assistance"
                    },
                    "overlayLayout": {
                      "type": "select",
                      "value": "left"
                    },
                    "overlayImage": {
                      "type": "image_picker",
                      "value": null
                    },
                    "ctaLink": {
                      "type": "url",
                      "value": null
                    },
                    "ctaText": {
                      "type": "text",
                      "value": null
                    }
                  }
                },
                {
                  "label": "",
                  "blocks": [
                    {
                      "type": "collection",
                      "name": "Collection",
                      "props": {
                        "collection": {
                          "type": "collection"
                        }
                      }
                    },
                    {
                      "type": "collection",
                      "name": "Collection",
                      "props": {
                        "collection": {
                          "type": "collection"
                        }
                      }
                    },
                    {
                      "type": "collection",
                      "name": "Collection",
                      "props": {
                        "collection": {
                          "type": "collection"
                        }
                      }
                    },
                    {
                      "type": "collection",
                      "name": "Collection",
                      "props": {
                        "collection": {
                          "type": "collection"
                        }
                      }
                    }
                  ],
                  "predicate": {
                    "screen": {
                      "mobile": true,
                      "desktop": true,
                      "tablet": true
                    },
                    "user": {
                      "authenticated": true,
                      "anonymous": true
                    },
                    "route": {
                      "selected": "none",
                      "exact_url": ""
                    }
                  },
                  "name": "collectionList",
                  "props": {
                    "heading": {
                      "value": "Collection List",
                      "type": "text"
                    },
                    "item_count": {
                      "value": 4,
                      "type": "range"
                    },
                    "full_width": {
                      "value": false,
                      "type": "checkbox"
                    }
                  },
                  "preset": {
                    "blocks": [
                      {
                        "name": "Collection"
                      },
                      {
                        "name": "Collection"
                      },
                      {
                        "name": "Collection"
                      },
                      {
                        "name": "Collection"
                      }
                    ]
                  }
                },
                {
                  "label": "",
                  "blocks": [],
                  "predicate": {
                    "screen": {
                      "mobile": true,
                      "desktop": true,
                      "tablet": true
                    },
                    "user": {
                      "authenticated": true,
                      "anonymous": true
                    },
                    "route": {
                      "selected": "none",
                      "exact_url": ""
                    }
                  },
                  "name": "ApplicationBanner",
                  "props": {
                    "cta_link": {
                      "type": "url",
                      "value": "https://demo.fyndstore.co/form/video-assistance"
                    },
                    "ctaLink": {
                      "type": "url",
                      "value": null
                    }
                  }
                },
                {
                  "label": "",
                  "blocks": [
                    {
                      "type": "gallery_image",
                      "name": "Image",
                      "props": {
                        "image": {
                          "type": "image_picker",
                          "value": "https://place-hold.it/600x500"
                        },
                        "caption": {
                          "type": "text",
                          "value": ""
                        },
                        "link": {
                          "type": "url",
                          "value": ""
                        }
                      }
                    },
                    {
                      "type": "gallery_image",
                      "name": "Image",
                      "props": {
                        "image": {
                          "type": "image_picker",
                          "value": "https://place-hold.it/600x500"
                        },
                        "caption": {
                          "type": "text",
                          "value": ""
                        },
                        "link": {
                          "type": "url",
                          "value": ""
                        }
                      }
                    },
                    {
                      "type": "gallery_image",
                      "name": "Image",
                      "props": {
                        "image": {
                          "type": "image_picker",
                          "value": "https://place-hold.it/600x500"
                        },
                        "caption": {
                          "type": "text",
                          "value": ""
                        },
                        "link": {
                          "type": "url",
                          "value": ""
                        }
                      }
                    },
                    {
                      "type": "gallery_image",
                      "name": "Image",
                      "props": {
                        "image": {
                          "type": "image_picker",
                          "value": "https://place-hold.it/600x500"
                        },
                        "caption": {
                          "type": "text",
                          "value": ""
                        },
                        "link": {
                          "type": "url",
                          "value": ""
                        }
                      }
                    }
                  ],
                  "predicate": {
                    "screen": {
                      "mobile": true,
                      "desktop": true,
                      "tablet": true
                    },
                    "user": {
                      "authenticated": true,
                      "anonymous": true
                    },
                    "route": {
                      "selected": "none",
                      "exact_url": ""
                    }
                  },
                  "name": "gallery",
                  "props": {
                    "item_count": {
                      "value": 4,
                      "type": "range"
                    }
                  },
                  "preset": {
                    "blocks": [
                      {
                        "name": "Image"
                      },
                      {
                        "name": "Image"
                      },
                      {
                        "name": "Image"
                      },
                      {
                        "name": "Image"
                      }
                    ]
                  }
                },
                {
                  "label": "",
                  "blocks": [
                    {
                      "type": "collection",
                      "name": "Collection",
                      "props": {
                        "collection": {
                          "type": "collection"
                        }
                      }
                    },
                    {
                      "type": "collection",
                      "name": "Collection",
                      "props": {
                        "collection": {
                          "type": "collection"
                        }
                      }
                    },
                    {
                      "type": "collection",
                      "name": "Collection",
                      "props": {
                        "collection": {
                          "type": "collection"
                        }
                      }
                    },
                    {
                      "type": "collection",
                      "name": "Collection",
                      "props": {
                        "collection": {
                          "type": "collection"
                        }
                      }
                    }
                  ],
                  "predicate": {
                    "screen": {
                      "mobile": true,
                      "desktop": true,
                      "tablet": true
                    },
                    "user": {
                      "authenticated": true,
                      "anonymous": true
                    },
                    "route": {
                      "selected": "none",
                      "exact_url": ""
                    }
                  },
                  "name": "collectionList",
                  "props": {
                    "heading": {
                      "type": "text",
                      "value": "Collection List 2"
                    },
                    "item_count": {
                      "value": 4,
                      "type": "range"
                    },
                    "full_width": {
                      "value": false,
                      "type": "checkbox"
                    }
                  },
                  "preset": {
                    "blocks": [
                      {
                        "name": "Collection"
                      },
                      {
                        "name": "Collection"
                      },
                      {
                        "name": "Collection"
                      },
                      {
                        "name": "Collection"
                      }
                    ]
                  }
                },
                {
                  "label": "",
                  "blocks": [
                    {
                      "type": "gallery_image",
                      "name": "Image",
                      "props": {
                        "image": {
                          "type": "image_picker",
                          "value": "https://hdn-1.fynd.com/company/884/applications/000000000000000000000003/theme/pictures/free/original/diesel-desktop.png"
                        },
                        "slide_link": {
                          "type": "url",
                          "value": "/products"
                        }
                      }
                    },
                    {
                      "type": "gallery_image",
                      "name": "Image",
                      "props": {
                        "image": {
                          "type": "image_picker",
                          "value": "https://hdn-1.addsale.com/x0/company/7/applications/5ec3d224848a007bfeacb550/theme/pictures/free/original/theme-image-1593022382417.jpeg"
                        },
                        "slide_link": {
                          "type": "url",
                          "value": "/products"
                        }
                      }
                    }
                  ],
                  "predicate": {
                    "screen": {
                      "mobile": true,
                      "desktop": true,
                      "tablet": true
                    },
                    "user": {
                      "authenticated": true,
                      "anonymous": true
                    },
                    "route": {
                      "selected": "none",
                      "exact_url": "",
                      "query": {
                        "utm_source": "facebook"
                      }
                    }
                  },
                  "name": "slideshow",
                  "props": {
                    "slide_height": {
                      "type": "select",
                      "value": "adapt"
                    },
                    "autoplay": {
                      "type": "checkbox",
                      "value": false
                    },
                    "slide_interval": {
                      "type": "range",
                      "value": 2
                    },
                    "arrow": {
                      "type": "checkbox",
                      "value": null
                    }
                  }
                }
              ],
              "sections_meta": [
                {
                  "attributes": {
                    "page": "home"
                  }
                }
              ],
              "theme": "000000000000000000000001",
              "seo": {
                "title": "",
                "description": "",
                "breadcrumbs": [],
                "sitemap": {
                  "priority": 0.5,
                  "frequency": "never"
                },
                "meta_tags": []
              },
              "_id": "60ab5ca6d572fed64294eb0e"
            },
            {
              "value": "product-listing",
              "text": "Product Listing",
              "theme": "5fb3ee4194a5181feeeba8e5",
              "sections_meta": [],
              "sections": [],
              "__v": 9
            },
            {
              "path": "collection",
              "type": "system",
              "seo": {
                "title": "",
                "description": "",
                "canonical_url": "",
                "meta_tags": []
              },
              "_id": "60ab5ca6d572fed64294eaf9",
              "text": "Collection Listing",
              "value": "collection-listing",
              "theme": "5fb3ee4194a5181feeeba8e5",
              "sections_meta": [],
              "sections": [],
              "__v": 9
            },
            {
              "path": "compare",
              "type": "system",
              "seo": {
                "title": "",
                "description": "",
                "canonical_url": "",
                "breadcrumbs": [],
                "meta_tags": [],
                "sitemap": {
                  "frequency": "never",
                  "priority": 0.5
                }
              },
              "_id": "60ab5ca6d572fed64294eb0b"
            },
            {
              "value": "compare-products",
              "text": "Compare Products",
              "theme": "5fb3ee4194a5181feeeba8e5",
              "sections_meta": [],
              "sections": [],
              "__v": 9
            },
            {
              "path": "cart/bag",
              "type": "system",
              "seo": {
                "title": "",
                "description": "",
                "canonical_url": "",
                "breadcrumbs": [],
                "sitemap": {
                  "priority": 0.5,
                  "frequency": "never"
                },
                "meta_tags": [],
                "_id": "60210832d7e9812fdf13f6ae"
              },
              "_id": "60ab5ca6d572fed64294eb02",
              "value": "cart-landing",
              "text": "Cart Landing",
              "theme": "5fb3ee4194a5181feeeba8e5",
              "sections_meta": [],
              "sections": [],
              "__v": 9
            },
            {
              "path": "product",
              "type": "system",
              "seo": {
                "title": "",
                "description": "",
                "canonical_url": "",
                "breadcrumbs": [],
                "sitemap": {
                  "priority": 0.5,
                  "frequency": "never"
                },
                "meta_tags": [],
                "_id": "60210832d7e9815c9713f6ab"
              },
              "_id": "60ab5ca6d572fed64294eaf6",
              "text": "Product Description",
              "value": "product-description",
              "theme": "5fb3ee4194a5181feeeba8e5",
              "sections_meta": [],
              "sections": [],
              "__v": 9
            },
            {
              "path": "product/:slug/reviews",
              "type": "system",
              "seo": {
                "title": "",
                "description": "",
                "canonical_url": "",
                "breadcrumbs": [],
                "sitemap": {
                  "priority": 0.5,
                  "frequency": "never"
                },
                "meta_tags": [],
                "_id": "60ab5ca6d572fed64294eb24"
              },
              "_id": "60ab5ca6d572fed64294eb25",
              "sections_meta": [],
              "sections": [],
              "value": "product-reviews",
              "text": "Product Reviews",
              "theme": "5fb3ee4194a5181feeeba8e5",
              "__v": 9
            },
            {
              "path": "blog",
              "type": "system",
              "seo": {
                "title": "",
                "description": "",
                "canonical_url": "",
                "breadcrumbs": [],
                "sitemap": {
                  "priority": 0.5,
                  "frequency": "never"
                },
                "meta_tags": [],
                "_id": "60ab5ca6d572fed64294eb22"
              },
              "_id": "60ab5ca6d572fed64294eb23",
              "sections_meta": [],
              "sections": [],
              "value": "blog",
              "text": "Blog",
              "theme": "5fb3ee4194a5181feeeba8e5",
              "__v": 9
            },
            {
              "path": "sections/cookie",
              "type": "sections",
              "seo": {
                "title": "",
                "description": "",
                "canonical_url": "",
                "breadcrumbs": [],
                "sitemap": {
                  "priority": 0.5,
                  "frequency": "never"
                },
                "meta_tags": [],
                "_id": "60210832d7e9814fed13f6b5"
              },
              "_id": "60ab5ca6d572fed64294eb17",
              "text": "cookie",
              "value": "cookie",
              "theme": "5fb3ee4194a5181feeeba8e5",
              "sections_meta": [],
              "sections": [],
              "__v": 9
            },
            {
              "path": "sections/vivek",
              "type": "sections",
              "seo": {
                "title": "",
                "description": "",
                "canonical_url": "",
                "breadcrumbs": [],
                "sitemap": {
                  "priority": 0.5,
                  "frequency": "never"
                },
                "meta_tags": [],
                "_id": "60210832d7e981b32713f6b6"
              },
              "_id": "60ab5ca6d572fed64294eb1a",
              "text": "vivek",
              "value": "vivek",
              "theme": "5fb3ee4194a5181feeeba8e5",
              "sections_meta": [],
              "sections": [],
              "__v": 9
            },
            {
              "path": "about-us",
              "type": "system",
              "seo": {
                "title": "",
                "description": "",
                "canonical_url": "",
                "breadcrumbs": [],
                "sitemap": {
                  "priority": 0.5,
                  "frequency": "never"
                },
                "meta_tags": [],
                "_id": "60ab5ca6d572fed64294eb28"
              },
              "_id": "60ab5ca6d572fed64294eb29",
              "sections_meta": [],
              "sections": [],
              "value": "about-us",
              "text": "About Us",
              "theme": "5fb3ee4194a5181feeeba8e5",
              "__v": 9
            },
            {
              "path": "wishlist",
              "type": "system",
              "seo": {
                "title": "",
                "description": "",
                "canonical_url": "",
                "breadcrumbs": [],
                "sitemap": {
                  "priority": 0.5,
                  "frequency": "never"
                },
                "meta_tags": [],
                "_id": "60210832d7e981dd2d13f6b3"
              },
              "_id": "60ab5ca6d572fed64294eb11",
              "value": "wishlist",
              "text": "Wishlist",
              "theme": "5fb3ee4194a5181feeeba8e5",
              "sections_meta": [],
              "sections": [],
              "__v": 9
            },
            {
              "path": "product/:slug/add-review",
              "type": "system",
              "seo": {
                "title": "",
                "description": "",
                "canonical_url": "",
                "breadcrumbs": [],
                "sitemap": {
                  "priority": 0.5,
                  "frequency": "never"
                },
                "meta_tags": [],
                "_id": "60ab5ca6d572fed64294eb26"
              },
              "_id": "60ab5ca6d572fed64294eb27",
              "sections_meta": [],
              "sections": [],
              "value": "add-product-review",
              "text": "Add Product Review",
              "theme": "5fb3ee4194a5181feeeba8e5",
              "__v": 9
            },
            {
              "path": "brands",
              "type": "system",
              "seo": {
                "title": "",
                "description": "",
                "canonical_url": "",
                "breadcrumbs": [],
                "sitemap": {
                  "priority": 0.5,
                  "frequency": "never"
                },
                "meta_tags": [],
                "_id": "60210832d7e981161a13f6ad"
              },
              "_id": "60ab5ca6d572fed64294eaff",
              "value": "brands",
              "text": "Brands",
              "theme": "5fb3ee4194a5181feeeba8e5",
              "sections_meta": [],
              "sections": [],
              "__v": 9
            },
            {
              "path": "",
              "type": "system",
              "seo": {
                "title": "",
                "description": "",
                "canonical_url": "",
                "breadcrumbs": [],
                "sitemap": {
                  "priority": 0.5,
                  "frequency": "never"
                },
                "meta_tags": [],
                "_id": "60210832d7e98115b013f6ac"
              },
              "_id": "60ab5ca6d572fed64294eafc",
              "value": "home",
              "text": "Home",
              "theme": "5fb3ee4194a5181feeeba8e5",
              "sections_meta": [],
              "sections": [],
              "__v": 9
            },
            {
              "path": "collections",
              "type": "system",
              "seo": {
                "title": "",
                "description": "",
                "canonical_url": "",
                "breadcrumbs": [],
                "sitemap": {
                  "priority": 0.5,
                  "frequency": "never"
                },
                "meta_tags": [],
                "_id": "60210832d7e981ad0b13f6b0"
              },
              "_id": "60ab5ca6d572fed64294eb08",
              "value": "collections",
              "text": "Collections",
              "theme": "5fb3ee4194a5181feeeba8e5",
              "sections_meta": [],
              "sections": [],
              "__v": 9
            },
            {
              "path": "categories",
              "type": "system",
              "seo": {
                "title": "",
                "description": "",
                "canonical_url": "",
                "breadcrumbs": [],
                "sitemap": {
                  "priority": 0.5,
                  "frequency": "never"
                },
                "meta_tags": [],
                "_id": "60210832d7e981872c13f6af"
              },
              "_id": "60ab5ca6d572fed64294eb05",
              "value": "categories",
              "text": "Categories",
              "theme": "5fb3ee4194a5181feeeba8e5",
              "sections_meta": [],
              "sections": [],
              "__v": 9
            },
            {
              "path": "sections/test",
              "type": "sections",
              "seo": {
                "title": "",
                "description": "",
                "canonical_url": "",
                "breadcrumbs": [],
                "sitemap": {
                  "priority": 0.5,
                  "frequency": "never"
                },
                "meta_tags": [],
                "_id": "60210832d7e98177f713f6b4"
              },
              "_id": "60ab5ca6d572fed64294eb14",
              "text": "Test",
              "value": "test",
              "theme": "5fb3ee4194a5181feeeba8e5",
              "sections_meta": [],
              "sections": [],
              "__v": 9
            },
            {
              "path": "sections/vinit",
              "type": "sections",
              "seo": {
                "title": "",
                "description": "",
                "canonical_url": "",
                "breadcrumbs": [],
                "sitemap": {
                  "priority": 0.5,
                  "frequency": "never"
                },
                "meta_tags": [],
                "_id": "60210832d7e98170b813f6b8"
              },
              "_id": "60ab5ca6d572fed64294eb20",
              "text": "vinit",
              "value": "vinit",
              "theme": "5fb3ee4194a5181feeeba8e5",
              "sections_meta": [],
              "sections": [],
              "__v": 9
            },
            {
              "path": "sections/maggie",
              "type": "sections",
              "seo": {
                "title": "",
                "description": "",
                "canonical_url": "",
                "breadcrumbs": [],
                "sitemap": {
                  "priority": 0.5,
                  "frequency": "never"
                },
                "meta_tags": [],
                "_id": "60210832d7e981469613f6b7"
              },
              "_id": "60ab5ca6d572fed64294eb1d",
              "text": "maggie",
              "value": "maggie",
              "theme": "5fb3ee4194a5181feeeba8e5",
              "sections_meta": [],
              "sections": [],
              "__v": 9
            }
          ]
        }
      },
      "SendOtpResponse": {
        "value": {
          "success": true,
          "request_id": "01503005aeab87cbed93d40f46cc2749",
          "message": "OTP sent",
          "mobile": "8652523958",
          "country_code": "91",
          "resend_timer": 30,
          "resend_token": "58e72ca0-66ae-11eb-98b1-77d61363826e"
        }
      },
      "AuthSuccess": {
        "value": {
          "user_exists": false,
          "user": {
            "emails": [
              {
                "email": "www.akash24@gmail.com",
                "verified": true,
                "primary": true,
                "active": true
              }
            ],
            "phone_numbers": [],
            "first_name": "Akash",
            "last_name": "Mane",
            "debug": {
              "platform": "Fynd"
            },
            "active": true
          },
          "register_token": "d960c388-e286-43d9-b688-f6d1decc632d"
        }
      },
      "UserExistsExample": {
        "value": {
          "user_exists": true
        }
      },
      "UserExampleObject": {
        "value": {
          "user": {
            "debug": {
              "source": "deadlock",
              "platform": "000000000000000000000001"
            },
            "gender": "male",
            "account_type": "user",
            "active": true,
            "profile_pic_url": "https://d2co8r51m5ca2d.cloudfront.net/inapp_banners/default_profile_img.png",
            "has_old_password_hash": false,
            "_id": "5e68af49cfa09bf7233022f1",
            "first_name": "Akash",
            "last_name": "Mane",
            "username": "akashmane_gofynd_com_10039",
            "phone_numbers": [
              {
                "active": true,
                "primary": true,
                "verified": true,
                "phone": "8652523958",
                "country_code": 91
              }
            ],
            "emails": [
              {
                "active": true,
                "primary": true,
                "verified": true,
                "email": "akashmane@gofynd.com"
              },
              {
                "active": true,
                "primary": false,
                "verified": true,
                "email": "akashmane@fynd.com"
              },
              {
                "active": true,
                "primary": false,
                "verified": true,
                "email": "akashmane@uniket.store"
              }
            ],
            "created_at": "2020-03-11T09:28:41.982Z",
            "updated_at": "2021-02-04T10:10:44.981Z"
          }
        }
      },
      "ResetForgotPassword": {
        "value": {
          "success": true
        }
      },
      "VerifyMobileOTP": {
        "value": {
          "verify_mobile_link": true,
          "user": {
            "debug": {
              "source": "deadlock",
              "platform": "000000000000000000000001"
            },
            "gender": "male",
            "account_type": "user",
            "active": true,
            "profile_pic_url": "https://d2co8r51m5ca2d.cloudfront.net/inapp_banners/default_profile_img.png",
            "has_old_password_hash": false,
            "_id": "5e68af49cfa09bf7233022f1",
            "first_name": "Akash",
            "last_name": "Mane",
            "username": "akashmane_gofynd_com_10039",
            "phone_numbers": [
              {
                "active": true,
                "primary": true,
                "verified": true,
                "phone": "8652523958",
                "country_code": 91
              }
            ],
            "emails": [
              {
                "active": true,
                "primary": true,
                "verified": true,
                "email": "akashmane@gofynd.com"
              },
              {
                "active": true,
                "primary": false,
                "verified": true,
                "email": "akashmane@fynd.com"
              },
              {
                "active": true,
                "primary": false,
                "verified": true,
                "email": "akashmane@uniket.store"
              }
            ],
            "created_at": "2020-03-11T09:28:41.982Z",
            "updated_at": "2021-02-04T10:10:44.981Z"
          }
        }
      },
      "VerifyEmailOTP": {
        "value": {
          "verify_email_link": true,
          "user": {
            "debug": {
              "source": "deadlock",
              "platform": "000000000000000000000001"
            },
            "gender": "male",
            "account_type": "user",
            "active": true,
            "profile_pic_url": "https://d2co8r51m5ca2d.cloudfront.net/inapp_banners/default_profile_img.png",
            "has_old_password_hash": false,
            "_id": "5e68af49cfa09bf7233022f1",
            "first_name": "Akash",
            "last_name": "Mane",
            "username": "akashmane_gofynd_com_10039",
            "phone_numbers": [
              {
                "active": true,
                "primary": true,
                "verified": true,
                "phone": "8652523958",
                "country_code": 91
              }
            ],
            "emails": [
              {
                "active": true,
                "primary": true,
                "verified": true,
                "email": "akashmane@gofynd.com"
              },
              {
                "active": true,
                "primary": false,
                "verified": true,
                "email": "akashmane@fynd.com"
              },
              {
                "active": true,
                "primary": false,
                "verified": true,
                "email": "akashmane@uniket.store"
              }
            ],
            "created_at": "2020-03-11T09:28:41.982Z",
            "updated_at": "2021-02-04T10:10:44.981Z"
          }
        }
      },
      "UserAttributesExample": {
        "value": {
          "attributes": {
            "Attribute_01": 1,
            "Attribute_02": "String01"
          }
        }
      }
    },
    "securitySchemes": {
      "applicationId": {
        "type": "apiKey",
        "in": "header",
        "name": "x-application-id"
      },
      "applicationToken": {
        "type": "apiKey",
        "in": "header",
        "name": "x-application-token"
      },
      "cookieAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "f.session"
      }
    }
  },
  "servers": [
    {
      "url": "https://api.fynd.com",
      "description": "Fynd"
    }
  ],
  "securitySchemes": {}
}
