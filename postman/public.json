{
  "item": [
    {
      "id": "71ce82fa-8e86-4ef7-9488-5f6eca321245",
      "name": "Billing",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "23b31c24-7007-4199-aefd-97aca00be832",
          "name": "getStandardPlans | Get Standard/Public Plans",
          "request": {
            "name": "getStandardPlans | Get Standard/Public Plans",
            "description": {
              "content": "Get Standard/Public Plans.\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "public",
                "billing",
                "v1.0",
                "plan",
                "detailed-list"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "platform_type",
                  "value": "<string>",
                  "description": "(Required) The type of platform for which plans are requested."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "272863a7-df59-4c7d-8e52-06df2d53d22a",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform_type",
                      "value": "app/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"plans\": [\n    {\n      \"recurring\": {\n        \"interval\": \"month\",\n        \"interval_count\": 3\n      },\n      \"is_trial_plan\": true,\n      \"plan_group\": \"default\",\n      \"tag_lines\": [\n        \"This is 2020won trial plan\",\n        \"This is 2020won trial plan\"\n      ],\n      \"currency\": \"INR\",\n      \"is_active\": true,\n      \"is_visible\": false,\n      \"trial_period\": 30,\n      \"addons\": [\n        \"ea ipsum aliqua dolor\",\n        \"dolore ullamco aliqua in\"\n      ],\n      \"tags\": [\n        \"eiusmod sit nisi dolor Lorem\",\n        \"sint magna\"\n      ],\n      \"type\": \"public\",\n      \"country\": \"IN\",\n      \"_id\": \"5f0dcd866173cb003706098f\",\n      \"name\": \"30 day Trial\",\n      \"description\": \"30 day Trial\",\n      \"amount\": 0,\n      \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n      \"created_at\": \"2020-07-14T15:21:42.959Z\",\n      \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n    },\n    {\n      \"recurring\": {\n        \"interval\": \"month\",\n        \"interval_count\": 3\n      },\n      \"is_trial_plan\": true,\n      \"plan_group\": \"default\",\n      \"tag_lines\": [\n        \"This is 2020won trial plan\",\n        \"This is 2020won trial plan\"\n      ],\n      \"currency\": \"INR\",\n      \"is_active\": true,\n      \"is_visible\": false,\n      \"trial_period\": 30,\n      \"addons\": [\n        \"aute in ex\",\n        \"exercitation tempor velit\"\n      ],\n      \"tags\": [\n        \"dolor id\",\n        \"exercitation eu amet laborum\"\n      ],\n      \"type\": \"public\",\n      \"country\": \"IN\",\n      \"_id\": \"5f0dcd866173cb003706098f\",\n      \"name\": \"30 day Trial\",\n      \"description\": \"30 day Trial\",\n      \"amount\": 0,\n      \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n      \"created_at\": \"2020-07-14T15:21:42.959Z\",\n      \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n    }\n  ],\n  \"trial_plan\": {\n    \"recurring\": {\n      \"interval\": \"month\",\n      \"interval_count\": 3\n    },\n    \"is_trial_plan\": true,\n    \"plan_group\": \"default\",\n    \"tag_lines\": [\n      \"This is 2020won trial plan\",\n      \"This is 2020won trial plan\"\n    ],\n    \"currency\": \"INR\",\n    \"is_active\": true,\n    \"is_visible\": false,\n    \"trial_period\": 30,\n    \"addons\": [\n      \"sit Ut culpa ullamco\",\n      \"ad nulla tempor dolor ullamco\"\n    ],\n    \"tags\": [\n      \"quis non do dolore\",\n      \"aute sit\"\n    ],\n    \"type\": \"public\",\n    \"country\": \"IN\",\n    \"_id\": \"5f0dcd866173cb003706098f\",\n    \"name\": \"30 day Trial\",\n    \"description\": \"30 day Trial\",\n    \"amount\": 0,\n    \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n    \"created_at\": \"2020-07-14T15:21:42.959Z\",\n    \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n  },\n  \"component_groups\": [\n    \"Key Features\",\n    \"Key Features\"\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "bc6747e4-5960-4487-b6c5-1f0745fcb764",
              "name": "Resource not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform_type",
                      "value": "app/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Reason is required\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f93fe95a-8ea5-49b8-8e43-b6332cb58b72",
              "name": "Internal server error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform_type",
                      "value": "app/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Opps something went wrong !!\",\n  \"code\": \"INTERNAL_SERVER_ERROR\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "ea35e833-0f57-4b07-83ff-9e4090fbddc1",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "91dc283d-b5e4-4e98-abcf-c86ff74949eb",
          "name": "searchApplication | Search application.",
          "request": {
            "name": "searchApplication | Search application.",
            "description": {
              "content": "Provide application name or domain url.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "5ae502f4-2d19-4a9e-af5e-6037e340577f",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "aute nulla ad aliquip Ut",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"application\": {\n    \"website\": {\n      \"enabled\": true,\n      \"basepath\": \"/\"\n    },\n    \"cors\": {\n      \"domains\": []\n    },\n    \"auth\": {\n      \"enabled\": true\n    },\n    \"description\": \"test\",\n    \"channel_type\": \"store\",\n    \"cache_ttl\": -1,\n    \"internal\": false,\n    \"is_active\": true,\n    \"mode\": \"live\",\n    \"_id\": \"620b931ee7bfb11f910bf4a3\",\n    \"company_id\": 2,\n    \"name\": \"test\",\n    \"owner\": \"5b9b98150df588546aaea6d2\",\n    \"logo\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"favicon\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"banner\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n    },\n    \"token\": \"tPQv0nc23\",\n    \"tokens\": [\n      {\n        \"token\": \"tPQv0nc23\",\n        \"created_at\": \"2022-02-15T11:48:46.909Z\"\n      }\n    ],\n    \"domains\": [\n      {\n        \"verified\": true,\n        \"is_primary\": true,\n        \"is_shortlink\": true,\n        \"_id\": \"620b931ee7bfb11f910bf4a4\",\n        \"name\": \"qckvv5lhp.hostfynd.dev\"\n      }\n    ],\n    \"redirections\": [],\n    \"meta\": [],\n    \"created_at\": \"2022-02-15T11:48:46.909Z\",\n    \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n    \"__v\": 0,\n    \"domain\": {\n      \"verified\": true,\n      \"is_primary\": true,\n      \"is_shortlink\": true,\n      \"_id\": \"620b931ee7bfb11f910bf4a4\",\n      \"name\": \"qckvv5lhp.hostfynd.dev\"\n    },\n    \"id\": \"620b931ee7bfb11f910bf4a3\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3f8512cc-ebd6-45f6-bb03-a492268da9a3",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "aute nulla ad aliquip Ut",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"Invalid application domain or id.\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "566aa3b9-68ab-4e36-9d96-a8028d0a0e17",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "aute nulla ad aliquip Ut",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"No application found\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "3a9ea2df-10f4-4d59-b066-6def376dd60c",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {
              "content": "Get Location configuration",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "3e6d6f19-06eb-4aea-8485-f3391737de0e",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"items\": [\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"non eiusmod cillum\",\n      \"phone_code\": \"990999092\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"sed tempor\",\n      \"country_code\": \"pariatur voluptate occaecat\",\n      \"latitude\": \"sit nostrud\",\n      \"longitude\": \"enim mollit magna\"\n    },\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"dolor tempor ipsum deserunt\",\n      \"phone_code\": \"990999092\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"sunt\",\n      \"country_code\": \"nisi\",\n      \"latitude\": \"voluptate ea\",\n      \"longitude\": \"Lorem am\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "114af145-61b0-4f8a-a8f5-a2d57e269e34",
      "name": "Content",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "4dc84ae1-cd8d-42fe-93d7-3ceed9263246",
          "name": "getCredentialsByEntity | Get credentials to power chat support systems",
          "request": {
            "name": "getCredentialsByEntity | Get credentials to power chat support systems",
            "description": {
              "content": "Get credentials for support system",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "public",
                "content",
                "credentials",
                ":entity"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "entity",
                  "description": "Server Type"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "d0b6add0-c88c-49e5-876d-7711c8413cb9",
              "name": "Success. Refer `CredentialsSchema` for more details.",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "content",
                    "credentials",
                    ":entity"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "entity",
                      "description": "Server Type"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"entity_type\": \"partner\",\n  \"type\": \"freshchat\",\n  \"is_enable\": true,\n  \"configuration\": {\n    \"token\": \"a3e4gf20b-d11g-4512-n3zq-03b9aa7e1yxz\",\n    \"siteId\": \"a3e8f20b-d97f-452f-bd72-03b9aa7e1bf0\",\n    \"host\": \"https://wchat.freshchat.com\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9af59c09-3878-4062-8be5-3f6f4b0d184b",
              "name": "Bad Request. See the error object in the response body to know the exact reason.",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "content",
                    "credentials",
                    ":entity"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "entity",
                      "description": "Server Type"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Oops! Something went wrong. Please try later\",\n  \"status\": 400,\n  \"code\": \"CX-1003\",\n  \"exception\": \"\",\n  \"info\": \"\",\n  \"request_id\": \"\",\n  \"stack_trace\": \"\",\n  \"meta\": {}\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "f58cccba-bbc6-420b-ac9a-9c4b77a52067",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "4a2bcecc-9605-449e-9e44-9820756547e1",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "a97bf16a-c1bb-4870-8529-fdea21c778f0",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1963-10-17T02:29:53.476Z\",\n  \"status\": 93815878,\n  \"error\": \"commodo\",\n  \"exception\": \"sed consequat sunt amet officia\",\n  \"message\": \"labore est non cul\",\n  \"total_time_taken_in_millis\": 74513601,\n  \"http_status\": \"300 MULTIPLE_CHOICES\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"elit enim\",\n  \"page\": {\n    \"type\": \"aliquip Excepteur dolor minim\",\n    \"size\": -81211545,\n    \"current\": 44158767,\n    \"has_next\": true,\n    \"item_total\": -80669939,\n    \"next_id\": \"ut\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "fd559189-ee2f-45c2-a818-657877b56c8c",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1963-10-17T02:29:53.476Z\",\n  \"status\": 93815878,\n  \"error\": \"commodo\",\n  \"exception\": \"sed consequat sunt amet officia\",\n  \"message\": \"labore est non cul\",\n  \"total_time_taken_in_millis\": 74513601,\n  \"http_status\": \"300 MULTIPLE_CHOICES\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"elit enim\",\n  \"page\": {\n    \"type\": \"aliquip Excepteur dolor minim\",\n    \"size\": -81211545,\n    \"current\": 44158767,\n    \"has_next\": true,\n    \"item_total\": -80669939,\n    \"next_id\": \"ut\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "903ea732-4fe9-4954-8335-a645cb668073",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1963-10-17T02:29:53.476Z\",\n  \"status\": 93815878,\n  \"error\": \"commodo\",\n  \"exception\": \"sed consequat sunt amet officia\",\n  \"message\": \"labore est non cul\",\n  \"total_time_taken_in_millis\": 74513601,\n  \"http_status\": \"300 MULTIPLE_CHOICES\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"elit enim\",\n  \"page\": {\n    \"type\": \"aliquip Excepteur dolor minim\",\n    \"size\": -81211545,\n    \"current\": 44158767,\n    \"has_next\": true,\n    \"item_total\": -80669939,\n    \"next_id\": \"ut\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "47622d45-fd4d-41a9-a3c2-f99e5869a5b7",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "febb9b4c-0a1d-44c4-9cf7-cceff25f3626",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1986-05-09T14:27:36.155Z\",\n  \"status\": 43007527,\n  \"error\": \"pariatur elit dolore fugi\",\n  \"exception\": \"in dolor\",\n  \"message\": \"non des\",\n  \"total_time_taken_in_millis\": -61625541,\n  \"http_status\": \"502 BAD_GATEWAY\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"et sed ut qui\",\n  \"page\": {\n    \"type\": \"laborum veniam anim ad elit\",\n    \"size\": -80541288,\n    \"current\": 54212275,\n    \"has_next\": false,\n    \"item_total\": 95105307,\n    \"next_id\": \"occaecat ut\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "bc021d16-e012-4a91-bfc9-5cb6e91420ec",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1986-05-09T14:27:36.155Z\",\n  \"status\": 43007527,\n  \"error\": \"pariatur elit dolore fugi\",\n  \"exception\": \"in dolor\",\n  \"message\": \"non des\",\n  \"total_time_taken_in_millis\": -61625541,\n  \"http_status\": \"502 BAD_GATEWAY\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"et sed ut qui\",\n  \"page\": {\n    \"type\": \"laborum veniam anim ad elit\",\n    \"size\": -80541288,\n    \"current\": 54212275,\n    \"has_next\": false,\n    \"item_total\": 95105307,\n    \"next_id\": \"occaecat ut\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ca7b4b1d-5edf-4213-912c-e0456d18e38c",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1986-05-09T14:27:36.155Z\",\n  \"status\": 43007527,\n  \"error\": \"pariatur elit dolore fugi\",\n  \"exception\": \"in dolor\",\n  \"message\": \"non des\",\n  \"total_time_taken_in_millis\": -61625541,\n  \"http_status\": \"502 BAD_GATEWAY\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"et sed ut qui\",\n  \"page\": {\n    \"type\": \"laborum veniam anim ad elit\",\n    \"size\": -80541288,\n    \"current\": 54212275,\n    \"has_next\": false,\n    \"item_total\": 95105307,\n    \"next_id\": \"occaecat ut\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "0fca4d3b-ed0d-4bbd-ab16-04a4b5794c19",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1986-05-09T14:27:36.155Z\",\n  \"status\": 43007527,\n  \"error\": \"pariatur elit dolore fugi\",\n  \"exception\": \"in dolor\",\n  \"message\": \"non des\",\n  \"total_time_taken_in_millis\": -61625541,\n  \"http_status\": \"502 BAD_GATEWAY\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"et sed ut qui\",\n  \"page\": {\n    \"type\": \"laborum veniam anim ad elit\",\n    \"size\": -80541288,\n    \"current\": 54212275,\n    \"has_next\": false,\n    \"item_total\": 95105307,\n    \"next_id\": \"occaecat ut\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "876f421b-4248-43e8-98ed-42f5ff3afc34",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1986-05-09T14:27:36.155Z\",\n  \"status\": 43007527,\n  \"error\": \"pariatur elit dolore fugi\",\n  \"exception\": \"in dolor\",\n  \"message\": \"non des\",\n  \"total_time_taken_in_millis\": -61625541,\n  \"http_status\": \"502 BAD_GATEWAY\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"et sed ut qui\",\n  \"page\": {\n    \"type\": \"laborum veniam anim ad elit\",\n    \"size\": -80541288,\n    \"current\": 54212275,\n    \"has_next\": false,\n    \"item_total\": 95105307,\n    \"next_id\": \"occaecat ut\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "e91406fc-f7d2-423a-8e6a-c42e5c26b419",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "f1408f0d-c1fd-4a54-82b5-8ca1a9dabbb8",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2002-05-06T08:23:38.442Z\",\n  \"status\": 99858952,\n  \"error\": \"eiusmod\",\n  \"exception\": \"consectetur ad\",\n  \"message\": \"minim aute occaecat in esse\",\n  \"total_time_taken_in_millis\": 77821178,\n  \"http_status\": \"304 NOT_MODIFIED\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"aute sunt deserunt\",\n      \"description\": \"ex\",\n      \"name\": \"elit\",\n      \"slug\": \"Ut sunt Duis amet\",\n      \"meta\": [\n        {\n          \"_id\": \"commodo esse Lorem veniam\",\n          \"name\": \"in sunt nisi\",\n          \"value\": \"officia\"\n        },\n        {\n          \"_id\": \"voluptate id irure adipisicing nisi\",\n          \"name\": \"do dolore\",\n          \"value\": \"aliqua minim sunt\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"reprehenderit commodo voluptate\",\n        \"integration\": \"sint\",\n        \"level\": \"voluptate sit ut deserunt\",\n        \"uid\": 53190950,\n        \"opted\": false,\n        \"permissions\": [\n          \"aliquip occaecat dolore\",\n          \"ullamco\"\n        ],\n        \"token\": \"do amet\",\n        \"name\": \"ullamco anim magna\",\n        \"stores\": [\n          {\n            \"_id\": \"tempor fugiat nostrud magna Duis\",\n            \"integration\": \"eu tempor in ex\",\n            \"level\": \"Excepteur do dolor\",\n            \"uid\": 93632363,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ut mollit\",\n            \"code\": \"occaecat reprehenderit amet\",\n            \"name\": \"pariatur magna dolore eu consequat\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"aliquip do laboris sit\",\n            \"integration\": \"ad dolor consequat\",\n            \"level\": \"sint reprehenderit laboris\",\n            \"uid\": 89583017,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"in Duis consectetur et\",\n            \"code\": \"qui ut mollit\",\n            \"name\": \"officia deserunt cupidatat\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"aliquip incididunt amet\",\n        \"integration\": \"dolor\",\n        \"level\": \"cupidatat esse ut elit\",\n        \"uid\": -45824951,\n        \"opted\": false,\n        \"permissions\": [\n          \"voluptate deserunt et\",\n          \"veniam in ullamco sed eiusmod\"\n        ],\n        \"token\": \"aliqua magna sunt dolor Duis\",\n        \"name\": \"anim nisi dolore consequat\",\n        \"stores\": [\n          {\n            \"_id\": \"esse aliqua minim laborum\",\n            \"integration\": \"amet magna\",\n            \"level\": \"laboris incididunt mollit ea\",\n            \"uid\": -85498654,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"occaecat sed non proident\",\n            \"code\": \"labore cillum\",\n            \"name\": \"elit fugiat sed dolore\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"in Ut\",\n            \"integration\": \"laboris fugiat reprehenderit\",\n            \"level\": \"sunt veniam laborum\",\n            \"uid\": -65003029,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"enim mollit\",\n            \"code\": \"nisi anim \",\n            \"name\": \"ullamco mollit\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"minim in sint aute\",\n      \"description\": \"sint tempor\",\n      \"name\": \"non\",\n      \"slug\": \"irure magna est proident\",\n      \"meta\": [\n        {\n          \"_id\": \"nostrud quis cupidatat nulla ipsum\",\n          \"name\": \"pariatur fugiat\",\n          \"value\": \"ut cillum anim sed\"\n        },\n        {\n          \"_id\": \"in laborum veniam\",\n          \"name\": \"mollit voluptate\",\n          \"value\": \"minim et id\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"voluptate labore dolor\",\n        \"integration\": \"velit\",\n        \"level\": \"in deserunt exercitation dolor\",\n        \"uid\": -5309263,\n        \"opted\": false,\n        \"permissions\": [\n          \"quis\",\n          \"Duis sed aute\"\n        ],\n        \"token\": \"ad aute ullamco et\",\n        \"name\": \"Lorem consectetur Duis ex\",\n        \"stores\": [\n          {\n            \"_id\": \"ipsum\",\n            \"integration\": \"nisi incididunt occaecat\",\n            \"level\": \"qui\",\n            \"uid\": 13516519,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"veniam\",\n            \"code\": \"adipisicing eu est laborum\",\n            \"name\": \"anim irure\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"sint fugiat nulla adipisicing non\",\n            \"integration\": \"dolore ex non\",\n            \"level\": \"sint ut fugiat laboris\",\n            \"uid\": -5426813,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"mollit ut do magna id\",\n            \"code\": \"reprehenderit Excepteur\",\n            \"name\": \"sint ea in eiusmod\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"eiusmod mollit\",\n        \"integration\": \"aliqua occaecat\",\n        \"level\": \"amet proident ut\",\n        \"uid\": -9611525,\n        \"opted\": true,\n        \"permissions\": [\n          \"velit ut do eiusmod Ut\",\n          \"consequat nulla anim officia dolor\"\n        ],\n        \"token\": \"magna\",\n        \"name\": \"esse\",\n        \"stores\": [\n          {\n            \"_id\": \"commodo labore aliqua incididunt\",\n            \"integration\": \"exercitation incididunt esse culpa\",\n            \"level\": \"sunt anim\",\n            \"uid\": 76021710,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"in enim anim aliqua\",\n            \"code\": \"deserunt ipsum id magna nostrud\",\n            \"name\": \"officia nulla la\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"pariatur\",\n            \"integration\": \"magna ex amet\",\n            \"level\": \"qui ipsum\",\n            \"uid\": 88429922,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"officia laboris\",\n            \"code\": \"su\",\n            \"name\": \"Excepteur pariatur\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"sunt enim\",\n  \"page\": {\n    \"type\": \"Lorem eu irure velit\",\n    \"size\": -88088830,\n    \"current\": 75811895,\n    \"has_next\": false,\n    \"item_total\": -43818815,\n    \"next_id\": \"labore ex\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "454cc76d-fd71-4dd5-8328-eb63979b3509",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2009-09-02T07:32:48.955Z\",\n  \"status\": 61167951,\n  \"error\": \"magna pariatur exercitation Excepteur adipisicing\",\n  \"exception\": \"nulla Excepteur do\",\n  \"message\": \"enim ullamco\",\n  \"total_time_taken_in_millis\": 97806675,\n  \"http_status\": \"417 EXPECTATION_FAILED\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"quis eiusmod voluptate sed exercitation\",\n      \"description\": \"qui veniam ex\",\n      \"name\": \"dolore quis ad magna\",\n      \"slug\": \"nulla eu deserunt tempor\",\n      \"meta\": [\n        {\n          \"_id\": \"labore esse sint\",\n          \"name\": \"culpa et non amet\",\n          \"value\": \"qui aute sunt\"\n        },\n        {\n          \"_id\": \"nulla\",\n          \"name\": \"do \",\n          \"value\": \"do esse mollit irure pariatur\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"Duis in nulla reprehenderit dolor\",\n        \"integration\": \"nostrud commodo occaecat\",\n        \"level\": \"nulla sunt\",\n        \"uid\": 12840881,\n        \"opted\": false,\n        \"permissions\": [\n          \"enim officia dolor cupidatat\",\n          \"do est velit\"\n        ],\n        \"token\": \"minim consequat est voluptate\",\n        \"name\": \"ullamco a\",\n        \"stores\": [\n          {\n            \"_id\": \"sint veniam\",\n            \"integration\": \"cillum\",\n            \"level\": \"mollit adip\",\n            \"uid\": -64162456,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"eu dolor mollit\",\n            \"code\": \"Lorem veniam labore aute\",\n            \"name\": \"minim ea\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"consectetur culpa fugiat incididunt\",\n            \"integration\": \"anim aute\",\n            \"level\": \"et consequat aute ad\",\n            \"uid\": 62168967,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"amet Exc\",\n            \"code\": \"dolore ex tempor\",\n            \"name\": \"do eiusmod in\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"proident aute commodo dolore\",\n        \"integration\": \"nostrud id ame\",\n        \"level\": \"ullamco pariatur cupidatat\",\n        \"uid\": -66037736,\n        \"opted\": true,\n        \"permissions\": [\n          \"ut Ut ad\",\n          \"deserunt ut labore do voluptate\"\n        ],\n        \"token\": \"ut \",\n        \"name\": \"co\",\n        \"stores\": [\n          {\n            \"_id\": \"aute Lorem\",\n            \"integration\": \"et ad eiusmod\",\n            \"level\": \"proident culpa\",\n            \"uid\": 28741525,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"veniam\",\n            \"code\": \"nulla Excepteur\",\n            \"name\": \"ut quis pariatur ullamco\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"Excepteur\",\n            \"integration\": \"qui dolor\",\n            \"level\": \"ex cillum\",\n            \"uid\": -43565211,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"dolore culpa\",\n            \"code\": \"enim reprehenderit est anim\",\n            \"name\": \"esse sunt eiusmod nostrud\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"laboris est magna\",\n      \"description\": \"laboris velit ex Duis dolore\",\n      \"name\": \"Lorem ipsum non aute\",\n      \"slug\": \"labore culpa ipsum\",\n      \"meta\": [\n        {\n          \"_id\": \"nulla irure commodo sit\",\n          \"name\": \"commodo tempor culpa ut\",\n          \"value\": \"consectetur occaecat culpa\"\n        },\n        {\n          \"_id\": \"commodo\",\n          \"name\": \"cupidatat\",\n          \"value\": \"aliqua proident\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"nisi adipisicing in est\",\n        \"integration\": \"in commodo\",\n        \"level\": \"sunt deserunt ut laborum \",\n        \"uid\": -78959861,\n        \"opted\": true,\n        \"permissions\": [\n          \"nostrud reprehenderit proident in\",\n          \"exercitation\"\n        ],\n        \"token\": \"in ex aliquip\",\n        \"name\": \"mi\",\n        \"stores\": [\n          {\n            \"_id\": \"magna officia\",\n            \"integration\": \"Duis consequat in nostrud\",\n            \"level\": \"est labore mollit eiusmod\",\n            \"uid\": -29686061,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"anim velit ullamco\",\n            \"code\": \"dolor in do m\",\n            \"name\": \"aute\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"esse ut\",\n            \"integration\": \"do\",\n            \"level\": \"ex laboris aute pari\",\n            \"uid\": -12652577,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ipsum quis mollit voluptate\",\n            \"code\": \"commodo nisi est\",\n            \"name\": \"non ut do\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"fugiat sit\",\n        \"integration\": \"eu anim\",\n        \"level\": \"dolor sunt Lorem eiusmod\",\n        \"uid\": -13338017,\n        \"opted\": false,\n        \"permissions\": [\n          \"voluptate velit exercitation est\",\n          \"ipsum Lorem fugiat dolor\"\n        ],\n        \"token\": \"non deserunt amet\",\n        \"name\": \"et adipisicing culpa incididunt\",\n        \"stores\": [\n          {\n            \"_id\": \"et\",\n            \"integration\": \"qui consequat exercitation\",\n            \"level\": \"velit ea ex\",\n            \"uid\": 79696860,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"fugiat cupidatat officia\",\n            \"code\": \"id aliquip\",\n            \"name\": \"eu\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"exercitation consequat ullam\",\n            \"integration\": \"amet ullamco\",\n            \"level\": \"nisi\",\n            \"uid\": -30104499,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ut eu qui magna\",\n            \"code\": \"non tempor ut occaecat\",\n            \"name\": \"ipsum voluptate\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"elit magna\",\n  \"page\": {\n    \"type\": \"dolor eu do\",\n    \"size\": -89535139,\n    \"current\": -87036276,\n    \"has_next\": false,\n    \"item_total\": 66906338,\n    \"next_id\": \"commodo Lorem\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e198a7ba-6b49-4ba9-a5fc-90b8d45c5896",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2009-09-02T07:32:48.955Z\",\n  \"status\": 61167951,\n  \"error\": \"magna pariatur exercitation Excepteur adipisicing\",\n  \"exception\": \"nulla Excepteur do\",\n  \"message\": \"enim ullamco\",\n  \"total_time_taken_in_millis\": 97806675,\n  \"http_status\": \"417 EXPECTATION_FAILED\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"quis eiusmod voluptate sed exercitation\",\n      \"description\": \"qui veniam ex\",\n      \"name\": \"dolore quis ad magna\",\n      \"slug\": \"nulla eu deserunt tempor\",\n      \"meta\": [\n        {\n          \"_id\": \"labore esse sint\",\n          \"name\": \"culpa et non amet\",\n          \"value\": \"qui aute sunt\"\n        },\n        {\n          \"_id\": \"nulla\",\n          \"name\": \"do \",\n          \"value\": \"do esse mollit irure pariatur\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"Duis in nulla reprehenderit dolor\",\n        \"integration\": \"nostrud commodo occaecat\",\n        \"level\": \"nulla sunt\",\n        \"uid\": 12840881,\n        \"opted\": false,\n        \"permissions\": [\n          \"enim officia dolor cupidatat\",\n          \"do est velit\"\n        ],\n        \"token\": \"minim consequat est voluptate\",\n        \"name\": \"ullamco a\",\n        \"stores\": [\n          {\n            \"_id\": \"sint veniam\",\n            \"integration\": \"cillum\",\n            \"level\": \"mollit adip\",\n            \"uid\": -64162456,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"eu dolor mollit\",\n            \"code\": \"Lorem veniam labore aute\",\n            \"name\": \"minim ea\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"consectetur culpa fugiat incididunt\",\n            \"integration\": \"anim aute\",\n            \"level\": \"et consequat aute ad\",\n            \"uid\": 62168967,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"amet Exc\",\n            \"code\": \"dolore ex tempor\",\n            \"name\": \"do eiusmod in\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"proident aute commodo dolore\",\n        \"integration\": \"nostrud id ame\",\n        \"level\": \"ullamco pariatur cupidatat\",\n        \"uid\": -66037736,\n        \"opted\": true,\n        \"permissions\": [\n          \"ut Ut ad\",\n          \"deserunt ut labore do voluptate\"\n        ],\n        \"token\": \"ut \",\n        \"name\": \"co\",\n        \"stores\": [\n          {\n            \"_id\": \"aute Lorem\",\n            \"integration\": \"et ad eiusmod\",\n            \"level\": \"proident culpa\",\n            \"uid\": 28741525,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"veniam\",\n            \"code\": \"nulla Excepteur\",\n            \"name\": \"ut quis pariatur ullamco\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"Excepteur\",\n            \"integration\": \"qui dolor\",\n            \"level\": \"ex cillum\",\n            \"uid\": -43565211,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"dolore culpa\",\n            \"code\": \"enim reprehenderit est anim\",\n            \"name\": \"esse sunt eiusmod nostrud\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"laboris est magna\",\n      \"description\": \"laboris velit ex Duis dolore\",\n      \"name\": \"Lorem ipsum non aute\",\n      \"slug\": \"labore culpa ipsum\",\n      \"meta\": [\n        {\n          \"_id\": \"nulla irure commodo sit\",\n          \"name\": \"commodo tempor culpa ut\",\n          \"value\": \"consectetur occaecat culpa\"\n        },\n        {\n          \"_id\": \"commodo\",\n          \"name\": \"cupidatat\",\n          \"value\": \"aliqua proident\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"nisi adipisicing in est\",\n        \"integration\": \"in commodo\",\n        \"level\": \"sunt deserunt ut laborum \",\n        \"uid\": -78959861,\n        \"opted\": true,\n        \"permissions\": [\n          \"nostrud reprehenderit proident in\",\n          \"exercitation\"\n        ],\n        \"token\": \"in ex aliquip\",\n        \"name\": \"mi\",\n        \"stores\": [\n          {\n            \"_id\": \"magna officia\",\n            \"integration\": \"Duis consequat in nostrud\",\n            \"level\": \"est labore mollit eiusmod\",\n            \"uid\": -29686061,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"anim velit ullamco\",\n            \"code\": \"dolor in do m\",\n            \"name\": \"aute\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"esse ut\",\n            \"integration\": \"do\",\n            \"level\": \"ex laboris aute pari\",\n            \"uid\": -12652577,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ipsum quis mollit voluptate\",\n            \"code\": \"commodo nisi est\",\n            \"name\": \"non ut do\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"fugiat sit\",\n        \"integration\": \"eu anim\",\n        \"level\": \"dolor sunt Lorem eiusmod\",\n        \"uid\": -13338017,\n        \"opted\": false,\n        \"permissions\": [\n          \"voluptate velit exercitation est\",\n          \"ipsum Lorem fugiat dolor\"\n        ],\n        \"token\": \"non deserunt amet\",\n        \"name\": \"et adipisicing culpa incididunt\",\n        \"stores\": [\n          {\n            \"_id\": \"et\",\n            \"integration\": \"qui consequat exercitation\",\n            \"level\": \"velit ea ex\",\n            \"uid\": 79696860,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"fugiat cupidatat officia\",\n            \"code\": \"id aliquip\",\n            \"name\": \"eu\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"exercitation consequat ullam\",\n            \"integration\": \"amet ullamco\",\n            \"level\": \"nisi\",\n            \"uid\": -30104499,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ut eu qui magna\",\n            \"code\": \"non tempor ut occaecat\",\n            \"name\": \"ipsum voluptate\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"elit magna\",\n  \"page\": {\n    \"type\": \"dolor eu do\",\n    \"size\": -89535139,\n    \"current\": -87036276,\n    \"has_next\": false,\n    \"item_total\": 66906338,\n    \"next_id\": \"commodo Lorem\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "d4b3098b-6792-4fff-a044-5bb5671f0419",
          "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
          "request": {
            "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "46414057-24b6-443e-9111-9b4cecf556a4",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1982-01-20T20:39:06.754Z\",\n  \"status\": -30425602,\n  \"error\": \"laboris\",\n  \"exception\": \"mollit laboris consectetur ut\",\n  \"message\": \"veniam elit\",\n  \"total_time_taken_in_millis\": 28517603,\n  \"http_status\": \"400 BAD_REQUEST\",\n  \"items\": {\n    \"session_id\": \"dolore id fugiat nulla amet\",\n    \"error_message\": \"in ad id dolore occaecat\"\n  },\n  \"payload\": {\n    \"session_id\": \"eiusmod\",\n    \"error_message\": \"ipsum\"\n  },\n  \"trace_id\": \"mollit esse commodo id ut\",\n  \"page\": {\n    \"type\": \"id dolore ut\",\n    \"size\": -69367090,\n    \"current\": 40694460,\n    \"has_next\": true,\n    \"item_total\": -17381638,\n    \"next_id\": \"amet cillum\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "48fae4ed-6b87-4e11-b88f-12896fc618ea",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1982-01-20T20:39:06.754Z\",\n  \"status\": -30425602,\n  \"error\": \"laboris\",\n  \"exception\": \"mollit laboris consectetur ut\",\n  \"message\": \"veniam elit\",\n  \"total_time_taken_in_millis\": 28517603,\n  \"http_status\": \"400 BAD_REQUEST\",\n  \"items\": {\n    \"session_id\": \"dolore id fugiat nulla amet\",\n    \"error_message\": \"in ad id dolore occaecat\"\n  },\n  \"payload\": {\n    \"session_id\": \"eiusmod\",\n    \"error_message\": \"ipsum\"\n  },\n  \"trace_id\": \"mollit esse commodo id ut\",\n  \"page\": {\n    \"type\": \"id dolore ut\",\n    \"size\": -69367090,\n    \"current\": 40694460,\n    \"has_next\": true,\n    \"item_total\": -17381638,\n    \"next_id\": \"amet cillum\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "868091aa-aa46-468e-987f-019cb9cae791",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1982-01-20T20:39:06.754Z\",\n  \"status\": -30425602,\n  \"error\": \"laboris\",\n  \"exception\": \"mollit laboris consectetur ut\",\n  \"message\": \"veniam elit\",\n  \"total_time_taken_in_millis\": 28517603,\n  \"http_status\": \"400 BAD_REQUEST\",\n  \"items\": {\n    \"session_id\": \"dolore id fugiat nulla amet\",\n    \"error_message\": \"in ad id dolore occaecat\"\n  },\n  \"payload\": {\n    \"session_id\": \"eiusmod\",\n    \"error_message\": \"ipsum\"\n  },\n  \"trace_id\": \"mollit esse commodo id ut\",\n  \"page\": {\n    \"type\": \"id dolore ut\",\n    \"size\": -69367090,\n    \"current\": 40694460,\n    \"has_next\": true,\n    \"item_total\": -17381638,\n    \"next_id\": \"amet cillum\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b0092938-2e32-4c77-a98e-92354ef159de",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "dc39f944-84ea-4897-9fc0-590d14bc5463",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1961-08-09T06:56:15.514Z\",\n  \"status\": -91061914,\n  \"error\": \"Duis qui\",\n  \"exception\": \"nisi dolore mollit exercitation\",\n  \"message\": \"ipsum consectetur eu\",\n  \"total_time_taken_in_millis\": 77854577,\n  \"http_status\": \"503 SERVICE_UNAVAILABLE\",\n  \"items\": {\n    \"company_id\": 94525610,\n    \"integration_data\": {\n      \"occaecat_ddd\": {},\n      \"ea_633\": {},\n      \"laboris_2\": {},\n      \"commodo__\": {}\n    },\n    \"company_name\": \"est ex in sed\",\n    \"task_details\": {\n      \"type\": 72144270,\n      \"group_list\": [\n        {\n          \"text\": \"velit dolore\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"ut deserunt eiusmod\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 57558818.05651325,\n      \"safe_stock\": 89975371,\n      \"period_threshold\": -63807485,\n      \"period_threshold_type\": \"HOURS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"in quis dolor in\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"Excepteur pariatur dolor\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"dolore minim aute\",\n    \"alias\": \"ea minim esse ad\"\n  },\n  \"payload\": {\n    \"company_id\": -51525128,\n    \"integration_data\": {\n      \"nullaa96\": {},\n      \"incididunt9\": {}\n    },\n    \"company_name\": \"dolore in Ut officia sit\",\n    \"task_details\": {\n      \"type\": 8828242,\n      \"group_list\": [\n        {\n          \"text\": \"do ut amet occaecat ut\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"consequat ea labore exercitation\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -56317836.02317522,\n      \"safe_stock\": 31792233,\n      \"period_threshold\": 52314240,\n      \"period_threshold_type\": \"DAYS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"culpa elit consequat\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"ut ullamco\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"labore consectetur minim\",\n    \"alias\": \"ipsum culpa nisi ullamco\"\n  },\n  \"trace_id\": \"proident dolore pariatur Duis\",\n  \"page\": {\n    \"type\": \"ullamco pariatur\",\n    \"size\": 61956297,\n    \"current\": -57513593,\n    \"has_next\": false,\n    \"item_total\": 58063169,\n    \"next_id\": \"aute non proident\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9b813b37-b6fa-485f-bb31-d30b0cb4d839",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2006-02-23T01:03:34.653Z\",\n  \"status\": -46213266,\n  \"error\": \"quis Lorem\",\n  \"exception\": \"ipsum irure labore sunt\",\n  \"message\": \"veniam nisi nostrud\",\n  \"total_time_taken_in_millis\": 83551544,\n  \"http_status\": \"422 UNPROCESSABLE_ENTITY\",\n  \"items\": {\n    \"company_id\": 56631709,\n    \"integration_data\": {\n      \"do_0_\": {},\n      \"consectetur_0\": {},\n      \"sunt_4d0\": {},\n      \"velit_8\": {}\n    },\n    \"company_name\": \"aliquip u\",\n    \"task_details\": {\n      \"type\": 44724654,\n      \"group_list\": [\n        {\n          \"text\": \"labore irure incididunt\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"consequat id\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -49557157.57338979,\n      \"safe_stock\": -15879504,\n      \"period_threshold\": 8310793,\n      \"period_threshold_type\": \"MONTHS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"ut ut ullamco consectetu\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"Excepteur Ut ipsum nulla\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"elit fugiat\",\n    \"alias\": \"cillum id moll\"\n  },\n  \"payload\": {\n    \"company_id\": -51234088,\n    \"integration_data\": {\n      \"reprehenderite9_\": {},\n      \"veniamde\": {}\n    },\n    \"company_name\": \"aliquip officia reprehenderit ad\",\n    \"task_details\": {\n      \"type\": -50694399,\n      \"group_list\": [\n        {\n          \"text\": \"exercitation irure ex\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"id\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -88623566.03266855,\n      \"safe_stock\": 15652725,\n      \"period_threshold\": 4938944,\n      \"period_threshold_type\": \"DAYS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"ad mollit tempor aliqua\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"non enim aliqua\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"quis consectetur nisi cupidatat\",\n    \"alias\": \"veniam\"\n  },\n  \"trace_id\": \"aliq\",\n  \"page\": {\n    \"type\": \"dolor\",\n    \"size\": -14642037,\n    \"current\": -68783072,\n    \"has_next\": true,\n    \"item_total\": 90549028,\n    \"next_id\": \"non tempor\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2ef8a1ab-8661-46a4-9f55-02541cfca80f",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2006-02-23T01:03:34.653Z\",\n  \"status\": -46213266,\n  \"error\": \"quis Lorem\",\n  \"exception\": \"ipsum irure labore sunt\",\n  \"message\": \"veniam nisi nostrud\",\n  \"total_time_taken_in_millis\": 83551544,\n  \"http_status\": \"422 UNPROCESSABLE_ENTITY\",\n  \"items\": {\n    \"company_id\": 56631709,\n    \"integration_data\": {\n      \"do_0_\": {},\n      \"consectetur_0\": {},\n      \"sunt_4d0\": {},\n      \"velit_8\": {}\n    },\n    \"company_name\": \"aliquip u\",\n    \"task_details\": {\n      \"type\": 44724654,\n      \"group_list\": [\n        {\n          \"text\": \"labore irure incididunt\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"consequat id\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -49557157.57338979,\n      \"safe_stock\": -15879504,\n      \"period_threshold\": 8310793,\n      \"period_threshold_type\": \"MONTHS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"ut ut ullamco consectetu\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"Excepteur Ut ipsum nulla\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"elit fugiat\",\n    \"alias\": \"cillum id moll\"\n  },\n  \"payload\": {\n    \"company_id\": -51234088,\n    \"integration_data\": {\n      \"reprehenderite9_\": {},\n      \"veniamde\": {}\n    },\n    \"company_name\": \"aliquip officia reprehenderit ad\",\n    \"task_details\": {\n      \"type\": -50694399,\n      \"group_list\": [\n        {\n          \"text\": \"exercitation irure ex\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"id\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -88623566.03266855,\n      \"safe_stock\": 15652725,\n      \"period_threshold\": 4938944,\n      \"period_threshold_type\": \"DAYS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"ad mollit tempor aliqua\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"non enim aliqua\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"quis consectetur nisi cupidatat\",\n    \"alias\": \"veniam\"\n  },\n  \"trace_id\": \"aliq\",\n  \"page\": {\n    \"type\": \"dolor\",\n    \"size\": -14642037,\n    \"current\": -68783072,\n    \"has_next\": true,\n    \"item_total\": 90549028,\n    \"next_id\": \"non tempor\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "9d1769e6-1de3-4c66-ba8e-8a29b464c234",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "5133b5ed-03c1-4d06-95d1-9c81aaf9b37d",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2013-03-18T08:35:24.870Z\",\n  \"status\": -19800961,\n  \"error\": \"eiusmod exercitation esse sunt\",\n  \"exception\": \"a\",\n  \"message\": \"enim\",\n  \"total_time_taken_in_millis\": -6260295,\n  \"http_status\": \"417 EXPECTATION_FAILED\",\n  \"items\": [\n    {\n      \"company_id\": 74085143,\n      \"integration_data\": {\n        \"tempor1\": {},\n        \"eiusmod_b92\": {}\n      },\n      \"company_name\": \"ea consequat tempor velit\",\n      \"task_details\": {\n        \"type\": -92189284,\n        \"group_list\": [\n          {\n            \"text\": \"sit ut id\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"Ut officia esse in irure\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 7365342.685717955,\n        \"safe_stock\": -19342300,\n        \"period_threshold\": -81353235,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"ipsum\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"amet et laborum consequat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"veniam\",\n      \"alias\": \"ad irure dolor\"\n    },\n    {\n      \"company_id\": 35983575,\n      \"integration_data\": {\n        \"aliquip0\": {}\n      },\n      \"company_name\": \"aliqua \",\n      \"task_details\": {\n        \"type\": -33385591,\n        \"group_list\": [\n          {\n            \"text\": \"Lorem anim\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"labore Ut se\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -44745455.709037475,\n        \"safe_stock\": 22109527,\n        \"period_threshold\": 5428245,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"sunt anim exercitation\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"quis Excepteur aliqua Ut\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"minim velit mollit\",\n      \"alias\": \"laborum in reprehenderit sint dolor\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": 23328518,\n      \"integration_data\": {\n        \"in_4\": {}\n      },\n      \"company_name\": \"tempor est\",\n      \"task_details\": {\n        \"type\": -38473182,\n        \"group_list\": [\n          {\n            \"text\": \"dolor magna\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"veniam irure cupidatat in\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -75291724.4018367,\n        \"safe_stock\": 87246456,\n        \"period_threshold\": 41847218,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"velit id ullamco\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"do consectetur laborum ipsum\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"nisi amet deserunt\",\n      \"alias\": \"velit ipsum consectetur voluptate\"\n    },\n    {\n      \"company_id\": -73674370,\n      \"integration_data\": {\n        \"Excepteur0d\": {}\n      },\n      \"company_name\": \"cillum pariatur voluptate non sit\",\n      \"task_details\": {\n        \"type\": 42473250,\n        \"group_list\": [\n          {\n            \"text\": \"officia et elit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"nulla adipisicing dolor\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 69851957.16537955,\n        \"safe_stock\": 48390662,\n        \"period_threshold\": -81652035,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"mollit dolore anim\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"pariatur officia\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"eu\",\n      \"alias\": \"tempor est dolor pariatur\"\n    }\n  ],\n  \"trace_id\": \"non\",\n  \"page\": {\n    \"type\": \"mollit tempor Ut\",\n    \"size\": -39148660,\n    \"current\": 68876004,\n    \"has_next\": false,\n    \"item_total\": -3048138,\n    \"next_id\": \"esse et cillum\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "55deb37e-82df-492f-b6ce-8e90c0b6ac0b",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1979-12-23T12:23:58.420Z\",\n  \"status\": 84385355,\n  \"error\": \"enim eiusmod qui cillum\",\n  \"exception\": \"eu ut Lorem in enim\",\n  \"message\": \"et magna pariatur sed\",\n  \"total_time_taken_in_millis\": -34388610,\n  \"http_status\": \"200 OK\",\n  \"items\": [\n    {\n      \"company_id\": -74111703,\n      \"integration_data\": {\n        \"laboris_4\": {}\n      },\n      \"company_name\": \"cillum nostrud\",\n      \"task_details\": {\n        \"type\": 9423527,\n        \"group_list\": [\n          {\n            \"text\": \"ullamco consequat sint no\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"aliqua\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -38267618.46769298,\n        \"safe_stock\": -63647650,\n        \"period_threshold\": 99720680,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"sint elit incididunt\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ut ullamco\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"pariatur Duis\",\n      \"alias\": \"esse\"\n    },\n    {\n      \"company_id\": -42373334,\n      \"integration_data\": {\n        \"officia_d98\": {}\n      },\n      \"company_name\": \"ven\",\n      \"task_details\": {\n        \"type\": 59744234,\n        \"group_list\": [\n          {\n            \"text\": \"Duis\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"nostrud ea amet cupidatat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 37463275.26257619,\n        \"safe_stock\": 56638115,\n        \"period_threshold\": 18949359,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"occaecat dolor ut\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"laboris nisi cupidatat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"exercitation adipis\",\n      \"alias\": \"dolor veniam Duis dolore\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": -3263889,\n      \"integration_data\": {\n        \"ut_d7\": {},\n        \"est_856\": {}\n      },\n      \"company_name\": \"Ut sit consectetur anim\",\n      \"task_details\": {\n        \"type\": 10446025,\n        \"group_list\": [\n          {\n            \"text\": \"voluptate proident aliqua\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"est Ut\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 30479277.45386833,\n        \"safe_stock\": 48699769,\n        \"period_threshold\": 62065964,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"nostrud proident dolor\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"eiusmod non laborum\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"mollit dolore id deserunt ad\",\n      \"alias\": \"do cillum officia\"\n    },\n    {\n      \"company_id\": -73859794,\n      \"integration_data\": {\n        \"eiusmod_0_\": {},\n        \"tempor9\": {},\n        \"dolor__9\": {}\n      },\n      \"company_name\": \"occaecat veniam esse in ipsum\",\n      \"task_details\": {\n        \"type\": 96623003,\n        \"group_list\": [\n          {\n            \"text\": \"voluptate elit consequat fugiat ex\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"sunt velit tempor culpa\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 9280714.399485439,\n        \"safe_stock\": -95334068,\n        \"period_threshold\": -52603054,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"sint\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"fugiat anim ipsum\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"Lorem amet\",\n      \"alias\": \"irure ipsum labori\"\n    }\n  ],\n  \"trace_id\": \"tempor labore\",\n  \"page\": {\n    \"type\": \"irure\",\n    \"size\": -26856299,\n    \"current\": -94633861,\n    \"has_next\": true,\n    \"item_total\": 28718452,\n    \"next_id\": \"irure culpa ut\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "8460999f-5eee-4575-bc3f-7ec010f17f72",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1979-12-23T12:23:58.420Z\",\n  \"status\": 84385355,\n  \"error\": \"enim eiusmod qui cillum\",\n  \"exception\": \"eu ut Lorem in enim\",\n  \"message\": \"et magna pariatur sed\",\n  \"total_time_taken_in_millis\": -34388610,\n  \"http_status\": \"200 OK\",\n  \"items\": [\n    {\n      \"company_id\": -74111703,\n      \"integration_data\": {\n        \"laboris_4\": {}\n      },\n      \"company_name\": \"cillum nostrud\",\n      \"task_details\": {\n        \"type\": 9423527,\n        \"group_list\": [\n          {\n            \"text\": \"ullamco consequat sint no\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"aliqua\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -38267618.46769298,\n        \"safe_stock\": -63647650,\n        \"period_threshold\": 99720680,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"sint elit incididunt\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ut ullamco\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"pariatur Duis\",\n      \"alias\": \"esse\"\n    },\n    {\n      \"company_id\": -42373334,\n      \"integration_data\": {\n        \"officia_d98\": {}\n      },\n      \"company_name\": \"ven\",\n      \"task_details\": {\n        \"type\": 59744234,\n        \"group_list\": [\n          {\n            \"text\": \"Duis\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"nostrud ea amet cupidatat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 37463275.26257619,\n        \"safe_stock\": 56638115,\n        \"period_threshold\": 18949359,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"occaecat dolor ut\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"laboris nisi cupidatat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"exercitation adipis\",\n      \"alias\": \"dolor veniam Duis dolore\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": -3263889,\n      \"integration_data\": {\n        \"ut_d7\": {},\n        \"est_856\": {}\n      },\n      \"company_name\": \"Ut sit consectetur anim\",\n      \"task_details\": {\n        \"type\": 10446025,\n        \"group_list\": [\n          {\n            \"text\": \"voluptate proident aliqua\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"est Ut\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 30479277.45386833,\n        \"safe_stock\": 48699769,\n        \"period_threshold\": 62065964,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"nostrud proident dolor\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"eiusmod non laborum\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"mollit dolore id deserunt ad\",\n      \"alias\": \"do cillum officia\"\n    },\n    {\n      \"company_id\": -73859794,\n      \"integration_data\": {\n        \"eiusmod_0_\": {},\n        \"tempor9\": {},\n        \"dolor__9\": {}\n      },\n      \"company_name\": \"occaecat veniam esse in ipsum\",\n      \"task_details\": {\n        \"type\": 96623003,\n        \"group_list\": [\n          {\n            \"text\": \"voluptate elit consequat fugiat ex\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"sunt velit tempor culpa\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 9280714.399485439,\n        \"safe_stock\": -95334068,\n        \"period_threshold\": -52603054,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"sint\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"fugiat anim ipsum\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"Lorem amet\",\n      \"alias\": \"irure ipsum labori\"\n    }\n  ],\n  \"trace_id\": \"tempor labore\",\n  \"page\": {\n    \"type\": \"irure\",\n    \"size\": -26856299,\n    \"current\": -94633861,\n    \"has_next\": true,\n    \"item_total\": 28718452,\n    \"next_id\": \"irure culpa ut\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "21e14544-0c84-40c4-b1a2-05c3a5fa9dbb",
      "name": "Partner",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "d1574d1c-fd1f-40c1-81e4-e4b520fa8c21",
          "name": "getPanelExtensionDetails | Get panel extension details.",
          "request": {
            "name": "getPanelExtensionDetails | Get panel extension details.",
            "description": {
              "content": "Retrieve detailed information about panel extensions in the public server setup.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "panel",
                "partners",
                "v1.0",
                "extensions",
                ":slug"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "slug",
                  "description": "(Required) pass the slug of the extension"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "39eb8204-7e1b-4c6c-8a09-ef1a619a26a5",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "panel",
                    "partners",
                    "v1.0",
                    "extensions",
                    ":slug"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "slug",
                      "description": "(Required) pass the slug of the extension"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"_id\": \"633ab5cb635a41fdde9fb648\",\n  \"organization_id\": \"6333fef3b1d85e44e738c138\",\n  \"extension_id\": \"633425ebb1d85e44e738c2ab\",\n  \"slug\": \"example-extension-1\",\n  \"scope\": [\n    \"company/profile\",\n    \"company/saleschannel\",\n    \"company/product\",\n    \"company/order\",\n    \"company/application/customer\",\n    \"company/application/analytics\",\n    \"company/application/storage\",\n    \"company/application/marketing\",\n    \"company/application/catalogue\",\n    \"company/application/communication\",\n    \"company/application/support\",\n    \"company/application/order\",\n    \"company/application/settings\"\n  ],\n  \"category\": {\n    \"categories_l1\": [],\n    \"categories_l2\": []\n  },\n  \"listing_info\": {\n    \"name\": \"ujjawal-example-extension-1\",\n    \"keywords\": [],\n    \"tagline\": \"test-extension for test how extensions look and work and how to create them\",\n    \"icon\": \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/AMwIEOw0U-logo.png\"\n  },\n  \"details\": {\n    \"benefits\": [\n      {\n        \"title\": \"Works fast\",\n        \"description\": \"works fast\",\n        \"_id\": \"633ab5cb635a41fdde9fb649\"\n      }\n    ],\n    \"screenshots\": {\n      \"desktop\": [\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/g95yHXkou-1024x576.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/IKdHxP2fN-1024x576.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/_auq1yvEp-1024x576.png\"\n      ],\n      \"mobile\": [\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/E_YAHM9cU-600x900.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/vEnXw9cCg-600x900.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/O3Wng4Rqn-600x900.png\"\n      ]\n    },\n    \"description\": \"Sample public extension\",\n    \"demo_url\": \"\",\n    \"video_url\": [\n      {\n        \"type\": \"video\",\n        \"url\": \"https://hdn-1.addsale.com/x0/products/videos/item/free/original/kizLVNWyS-video-sc-1.mp4\"\n      }\n    ],\n    \"integrations\": []\n  },\n  \"plan_type\": \"free\",\n  \"plans\": [\n    {\n      \"name\": \"Custom Free\",\n      \"features\": \"provides ease\",\n      \"type\": \"free\",\n      \"price\": {\n        \"amount\": 0,\n        \"currency\": \"INR\"\n      },\n      \"trial_days\": 0,\n      \"additional_charges\": \"\"\n    }\n  ],\n  \"plans_url\": \"\",\n  \"contact_info\": {\n    \"support\": {\n      \"email\": \"ujjawaltaleja@gofynd.com\",\n      \"phone\": \"7988169279\",\n      \"website_url\": \"\",\n      \"faq_url\": \"\",\n      \"privacy_policy_url\": \"\"\n    }\n  },\n  \"current_status\": \"active\",\n  \"coming_soon\": {\n    \"is_coming_soon\": false,\n    \"upvote_count\": 0\n  },\n  \"created_at\": \"2022-10-03T10:13:31.607Z\",\n  \"modified_at\": \"2022-10-03T10:13:31.607Z\",\n  \"organization\": {\n    \"name\": \"ujjawal-partners-fashion\",\n    \"slug\": \"ujjawa-w7t-68\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "b0be8218-fc3f-43e2-86c9-e27e361dc9ef",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "ba3d1df9-53f8-4b09-b709-8f0b9d082af9",
          "name": "fetchAllWebhookEvents | Fetch all webhook events.",
          "request": {
            "name": "fetchAllWebhookEvents | Fetch all webhook events.",
            "description": {
              "content": "Retrieve a list of all webhook events in the public server setup.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "ff9a6d69-ab24-4640-b00b-c82a286298f4",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "c2a038c5-f698-44a0-af1d-a4c51e7b11a6",
          "name": "queryWebhookEventDetails | Query webhook event details.",
          "request": {
            "name": "queryWebhookEventDetails | Query webhook event details.",
            "description": {
              "content": "Query and obtain detailed information about webhook events in the public server configurations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "9e2a0f6b-ab56-4212-9aba-d807432e54c1",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"event_name\": \"article\",\n    \"event_type\": \"update\",\n    \"event_category\": \"company\",\n    \"version\": \"1\"\n  }\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "54d82b9d-bfa1-44b8-9e11-67b63703a822",
          "name": "notifyDepricatedEvent | Notifies all the events that are going to depricate",
          "request": {
            "name": "notifyDepricatedEvent | Notifies all the events that are going to depricate",
            "description": {
              "content": "Notifies all the events that are subscribed and are going to deprecate or new version is available for those events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "depricated-event-notifier"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "4d7326fa-3356-49ff-8ef8-1908d5fceb15",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "depricated-event-notifier"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "366c1076-cc46-41e5-bf65-322d12d03ef8",
          "name": "testHandlerTransformation | Test transformation of handler",
          "request": {
            "name": "testHandlerTransformation | Test transformation of handler",
            "description": {
              "content": "Test transformation of handler",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "transform-event"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event_name\": \"<string>\",\n  \"event_type\": \"<string>\",\n  \"event_category\": \"<string>\",\n  \"event_version\": \"<string>\",\n  \"event\": {\n    \"payload\": {\n      \"nostrud_6cb\": true\n    },\n    \"meta\": {\n      \"et40\": \"in et\",\n      \"commodo_7f2\": false\n    }\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "e8eb16bf-4e51-4aa7-8514-107953edc624",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "transform-event"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"event_name\": \"location\",\n  \"event_type\": \"create\",\n  \"event_category\": \"company\",\n  \"event_version\": \"1\",\n  \"event\": {\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450008\",\n        \"modified_on\": \"2023-10-24T01:41:44.450015\"\n      }\n    },\n    \"meta\": {\n      \"event\": {\n        \"type\": \"create\",\n        \"name\": \"location\",\n        \"version\": \"1\"\n      },\n      \"company_id\": 6086,\n      \"service\": {\n        \"name\": \"WheelJack\"\n      },\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"created_timestamp\": 1698111704725\n    }\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_trace_id\": [\n    \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n  ],\n  \"data\": {\n    \"event\": {\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"name\": \"location\",\n      \"type\": \"create\",\n      \"version\": \"1\",\n      \"created_timestamp\": 1698111704725\n    },\n    \"company_id\": 6086,\n    \"contains\": [\n      \"location\"\n    ],\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450008\",\n        \"modified_on\": \"2023-10-24T01:41:44.450015\"\n      }\n    }\n  },\n  \"event_name\": \"location\",\n  \"version\": \"1\",\n  \"status\": false,\n  \"event_type\": \"create\",\n  \"service_meta\": {\n    \"name\": \"WheelJack\"\n  },\n  \"association\": {\n    \"company_id\": 6086\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ecb800da-caa8-41b9-814d-480a501991f8",
          "name": "validateSchema | Validate Schema for an event",
          "request": {
            "name": "validateSchema | Validate Schema for an event",
            "description": {
              "content": "Validate Schema for an event",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "validate-event-schema"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event_name\": \"<string>\",\n  \"event_type\": \"<string>\",\n  \"event_category\": \"<string>\",\n  \"event_version\": \"<string>\",\n  \"event\": {\n    \"payload\": {\n      \"in_d\": -48104729.25160152\n    },\n    \"meta\": {\n      \"laboris313\": -49109058.77881007\n    }\n  },\n  \"event_schema\": {\n    \"irurea9b\": -1356894,\n    \"fugiat9\": -91162465.9016757,\n    \"amet_e4b\": 12250656,\n    \"ipsum77\": -97174370\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "a0ef0210-d1b0-401e-adb0-a065e1f2d4d0",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "validate-event-schema"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"event_name\": \"location\",\n  \"event_type\": \"create\",\n  \"event_category\": \"company\",\n  \"event_version\": \"1\",\n  \"event\": {\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450008\",\n        \"modified_on\": \"2023-10-24T01:41:44.450015\"\n      }\n    },\n    \"meta\": {\n      \"event\": {\n        \"type\": \"create\",\n        \"name\": \"location\",\n        \"version\": \"1\"\n      },\n      \"company_id\": 6086,\n      \"service\": {\n        \"name\": \"WheelJack\"\n      },\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"created_timestamp\": 1698111704725\n    }\n  },\n  \"event_schema\": {}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": true,\n  \"message\": \"Valid schema for this event\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fynd.com"
    }
  ],
  "info": {
    "_postman_id": "4f4b4896-286f-418d-9398-2669aa6ccd5e",
    "name": "Fynd Platform's Public Side APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public Side APIs",
      "type": "text/plain"
    }
  }
}
