{
  "item": [
    {
      "id": "dd0df68e-6c71-46da-b538-e1c288fe171b",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "c37731e0-7ed4-4465-a911-744cda9524ab",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "257754cc-2c66-4bbc-b881-8a74a827ec85",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "ut Ut non do",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ea9eba87-0a17-4ed0-a4fa-758d38dae5fa",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "ut Ut non do",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "2dc63df7-d1b1-4ab6-9192-a6c2f8a576ca",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "ut Ut non do",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "372afc14-6dcc-4e81-8f52-5c38cbd2e1a0",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "9f1f0883-ea1e-49ac-8ff1-6f733c8140cb",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "92441dc5-e563-45b8-a6b2-594f3a2226d2",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "3811b2c2-329e-4ae6-93ca-d1b841e4d60a",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "f16f15e9-0b80-46a2-84b4-d2a5ab21b1fb",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -85865181,\n   \"event_name\": \"enim culpa\",\n   \"event_type\": \"ut enim pariatur nisi\",\n   \"event_category\": \"aute in veniam eu\",\n   \"version\": \"veniam eiusmod\",\n   \"display_name\": \"cupidatat non veniam\",\n   \"description\": \"do\",\n   \"created_on\": \"sit occaecat\"\n  },\n  {\n   \"id\": -54098367,\n   \"event_name\": \"ea cillum aute amet aliqua\",\n   \"event_type\": \"dolor occaeca\",\n   \"event_category\": \"commodo consectetur\",\n   \"version\": \"mollit nisi\",\n   \"display_name\": \"Excepteur eu labore qui pariatur\",\n   \"description\": \"Excepteur\",\n   \"created_on\": \"irure sit\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "a50257c4-85c0-4afb-b799-40cb16cdb65e",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "970a7af2-efd8-4fa9-bfcf-aded057a46af",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -80473131,\n   \"event_name\": \"est\",\n   \"event_type\": \"ut\",\n   \"event_category\": \"dolore do Duis \",\n   \"version\": \"qui\",\n   \"display_name\": \"aute velit\",\n   \"description\": \"labore enim\",\n   \"created_on\": \"ea ut sed culpa\"\n  },\n  {\n   \"id\": -38923589,\n   \"event_name\": \"minim exercitation quis\",\n   \"event_type\": \"velit nulla nisi\",\n   \"event_category\": \"nisi aliquip\",\n   \"version\": \"dolore sint ut reprehenderit\",\n   \"display_name\": \"dolore nostrud\",\n   \"description\": \"et magna deserunt ex\",\n   \"created_on\": \"in fugiat in\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "ef0670d3-eac3-46f6-831f-05e396728d9b",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "a0609afa-4ab5-499c-b723-bf40ab7c5af4",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "5526e3f7-c73e-4a73-9754-568c00be66bc",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1961-11-21T15:45:38.733Z\",\n \"status\": -36594534,\n \"error\": \"voluptate\",\n \"exception\": \"labore\",\n \"message\": \"nisi voluptate eiusmod dolore\",\n \"total_time_taken_in_millis\": 39401959,\n \"http_status\": \"507 INSUFFICIENT_STORAGE\",\n \"items\": {\n  \"company_id\": -96320981,\n  \"integration_data\": {},\n  \"company_name\": \"Lorem cillum\",\n  \"task_details\": {\n   \"type\": 54429102,\n   \"group_list\": [\n    {\n     \"text\": \"sit dolore\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"do fugiat laborum\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -23152248.92286487,\n   \"safe_stock\": 16210065,\n   \"period_threshold\": -55776960,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"aliquip consequat\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"cupidatat amet Ut dolor\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"veniam Duis ut dolore consequat\",\n  \"alias\": \"aute\"\n },\n \"payload\": {\n  \"company_id\": -35168433,\n  \"integration_data\": {},\n  \"company_name\": \"elit\",\n  \"task_details\": {\n   \"type\": 41263796,\n   \"group_list\": [\n    {\n     \"text\": \"in cupidatat in in aliqua\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"et magna fugiat \",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -16598514.965100273,\n   \"safe_stock\": 3248629,\n   \"period_threshold\": 24495952,\n   \"period_threshold_type\": \"WEEKS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"velit\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"laborum est dolore\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"nisi occaecat dolore ex\",\n  \"alias\": \"deserunt sit consequat cillum\"\n },\n \"trace_id\": \"irure fugiat officia consectetur\",\n \"page\": {\n  \"type\": \"dolor aute\",\n  \"size\": 20800509,\n  \"current\": -39361544,\n  \"has_next\": false,\n  \"item_total\": -83753269,\n  \"next_id\": \"laborum do pariatur\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e576ec3c-e2bd-40ef-a105-b18e111aded3",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1961-11-21T15:45:38.733Z\",\n \"status\": -36594534,\n \"error\": \"voluptate\",\n \"exception\": \"labore\",\n \"message\": \"nisi voluptate eiusmod dolore\",\n \"total_time_taken_in_millis\": 39401959,\n \"http_status\": \"507 INSUFFICIENT_STORAGE\",\n \"items\": {\n  \"company_id\": -96320981,\n  \"integration_data\": {},\n  \"company_name\": \"Lorem cillum\",\n  \"task_details\": {\n   \"type\": 54429102,\n   \"group_list\": [\n    {\n     \"text\": \"sit dolore\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"do fugiat laborum\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -23152248.92286487,\n   \"safe_stock\": 16210065,\n   \"period_threshold\": -55776960,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"aliquip consequat\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"cupidatat amet Ut dolor\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"veniam Duis ut dolore consequat\",\n  \"alias\": \"aute\"\n },\n \"payload\": {\n  \"company_id\": -35168433,\n  \"integration_data\": {},\n  \"company_name\": \"elit\",\n  \"task_details\": {\n   \"type\": 41263796,\n   \"group_list\": [\n    {\n     \"text\": \"in cupidatat in in aliqua\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"et magna fugiat \",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -16598514.965100273,\n   \"safe_stock\": 3248629,\n   \"period_threshold\": 24495952,\n   \"period_threshold_type\": \"WEEKS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"velit\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"laborum est dolore\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"nisi occaecat dolore ex\",\n  \"alias\": \"deserunt sit consequat cillum\"\n },\n \"trace_id\": \"irure fugiat officia consectetur\",\n \"page\": {\n  \"type\": \"dolor aute\",\n  \"size\": 20800509,\n  \"current\": -39361544,\n  \"has_next\": false,\n  \"item_total\": -83753269,\n  \"next_id\": \"laborum do pariatur\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d171e893-84b7-438b-a17e-e718bb4086ad",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1961-11-21T15:45:38.733Z\",\n \"status\": -36594534,\n \"error\": \"voluptate\",\n \"exception\": \"labore\",\n \"message\": \"nisi voluptate eiusmod dolore\",\n \"total_time_taken_in_millis\": 39401959,\n \"http_status\": \"507 INSUFFICIENT_STORAGE\",\n \"items\": {\n  \"company_id\": -96320981,\n  \"integration_data\": {},\n  \"company_name\": \"Lorem cillum\",\n  \"task_details\": {\n   \"type\": 54429102,\n   \"group_list\": [\n    {\n     \"text\": \"sit dolore\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"do fugiat laborum\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -23152248.92286487,\n   \"safe_stock\": 16210065,\n   \"period_threshold\": -55776960,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"aliquip consequat\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"cupidatat amet Ut dolor\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"veniam Duis ut dolore consequat\",\n  \"alias\": \"aute\"\n },\n \"payload\": {\n  \"company_id\": -35168433,\n  \"integration_data\": {},\n  \"company_name\": \"elit\",\n  \"task_details\": {\n   \"type\": 41263796,\n   \"group_list\": [\n    {\n     \"text\": \"in cupidatat in in aliqua\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"et magna fugiat \",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -16598514.965100273,\n   \"safe_stock\": 3248629,\n   \"period_threshold\": 24495952,\n   \"period_threshold_type\": \"WEEKS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"velit\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"laborum est dolore\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"nisi occaecat dolore ex\",\n  \"alias\": \"deserunt sit consequat cillum\"\n },\n \"trace_id\": \"irure fugiat officia consectetur\",\n \"page\": {\n  \"type\": \"dolor aute\",\n  \"size\": 20800509,\n  \"current\": -39361544,\n  \"has_next\": false,\n  \"item_total\": -83753269,\n  \"next_id\": \"laborum do pariatur\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "8ceb286c-22ac-4cf2-aabb-c898028263c7",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "7c31b14e-c05a-4422-8bc5-04cac476c6d6",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1974-11-16T08:49:59.775Z\",\n \"status\": -83371318,\n \"error\": \"voluptate ut Duis do\",\n \"exception\": \"nulla conse\",\n \"message\": \"cillum aute sit\",\n \"total_time_taken_in_millis\": 49782635,\n \"http_status\": \"103 CHECKPOINT\",\n \"items\": [\n  {\n   \"company_id\": -90228256,\n   \"integration_data\": {},\n   \"company_name\": \"non enim qui\",\n   \"task_details\": {\n    \"type\": -68230258,\n    \"group_list\": [\n     {\n      \"text\": \"dolor aliqua\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in Ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 64698321.24034026,\n    \"safe_stock\": -63428828,\n    \"period_threshold\": 32086566,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"fugiat dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ad nisi\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"qui incididunt aliquip sunt\",\n   \"alias\": \"et labore\"\n  },\n  {\n   \"company_id\": -2086466,\n   \"integration_data\": {},\n   \"company_name\": \"Lorem sed\",\n   \"task_details\": {\n    \"type\": 56281355,\n    \"group_list\": [\n     {\n      \"text\": \"quis amet minim ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ullamco ad\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -17512060.142676324,\n    \"safe_stock\": 72898966,\n    \"period_threshold\": -86162755,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"voluptate\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"minim commodo dolor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ex minim velit amet\",\n   \"alias\": \"esse tempor commodo\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 76392570,\n   \"integration_data\": {},\n   \"company_name\": \"veniam\",\n   \"task_details\": {\n    \"type\": 1407943,\n    \"group_list\": [\n     {\n      \"text\": \"sed eiusmod exercitation Duis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sunt laboru\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -22415378.996943012,\n    \"safe_stock\": 61741965,\n    \"period_threshold\": -55197111,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolor exercitation\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sit sunt \",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"cillum pariatur dolor\",\n   \"alias\": \"in minim tempor ea si\"\n  },\n  {\n   \"company_id\": 18889206,\n   \"integration_data\": {},\n   \"company_name\": \"labore dolor eiusmod\",\n   \"task_details\": {\n    \"type\": -64458149,\n    \"group_list\": [\n     {\n      \"text\": \"ullamco aliqua dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"velit elit in reprehenderit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -91875397.34501317,\n    \"safe_stock\": 28649339,\n    \"period_threshold\": -73738532,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"eu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"fugiat et\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in\",\n   \"alias\": \"cupidatat voluptate consequat Duis\"\n  }\n ],\n \"trace_id\": \"qui velit\",\n \"page\": {\n  \"type\": \"ex Ut\",\n  \"size\": 82191610,\n  \"current\": -74001900,\n  \"has_next\": true,\n  \"item_total\": 29991715,\n  \"next_id\": \"consequat pariatur\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "64a84d33-f6cf-4cdd-8f55-8f686ce972df",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1992-02-11T21:46:35.971Z\",\n \"status\": -68624497,\n \"error\": \"quis\",\n \"exception\": \"amet esse occaecat commodo deserunt\",\n \"message\": \"irure elit u\",\n \"total_time_taken_in_millis\": 50227356,\n \"http_status\": \"205 RESET_CONTENT\",\n \"items\": [\n  {\n   \"company_id\": -86569958,\n   \"integration_data\": {},\n   \"company_name\": \"aute cillum proident id\",\n   \"task_details\": {\n    \"type\": 12435863,\n    \"group_list\": [\n     {\n      \"text\": \"sint exercitation voluptate irure\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"labore in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 38189470.24684417,\n    \"safe_stock\": -60352036,\n    \"period_threshold\": 44824485,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"incididunt aute cillum ut reprehenderit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"pariatur Lorem molli\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"veniam quis dolore\",\n   \"alias\": \"dolore do occaecat nisi\"\n  },\n  {\n   \"company_id\": -24792008,\n   \"integration_data\": {},\n   \"company_name\": \"laboris ut non\",\n   \"task_details\": {\n    \"type\": -11032779,\n    \"group_list\": [\n     {\n      \"text\": \"sint laboris deserunt Lorem Excepteur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cupidatat ipsum Excepteur Duis qui\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 44264960.34406799,\n    \"safe_stock\": 33854941,\n    \"period_threshold\": 29749956,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"mollit do adipisicing\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Ut in labore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ad nulla minim\",\n   \"alias\": \"anim ad dolor ipsum\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 67270041,\n   \"integration_data\": {},\n   \"company_name\": \"fugiat Duis non quis\",\n   \"task_details\": {\n    \"type\": 60393967,\n    \"group_list\": [\n     {\n      \"text\": \"nostrud non\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ipsum in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -35850731.684508786,\n    \"safe_stock\": -79242772,\n    \"period_threshold\": -3389640,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"laboris veniam\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laboris veniam dolore ex\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"dolor enim laboris sint\",\n   \"alias\": \"ea\"\n  },\n  {\n   \"company_id\": 61792,\n   \"integration_data\": {},\n   \"company_name\": \"nulla dolor adipisicing\",\n   \"task_details\": {\n    \"type\": 13835532,\n    \"group_list\": [\n     {\n      \"text\": \"Duis in cillum sed\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliquip reprehenderit proident non\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 48850883.274956435,\n    \"safe_stock\": -49247684,\n    \"period_threshold\": -55719681,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"pariatur consectetur Lo\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"anim aliqua dolore consectetur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"incididunt sunt adipisicing\",\n   \"alias\": \"esse velit mollit\"\n  }\n ],\n \"trace_id\": \"sunt sit nostrud tempor\",\n \"page\": {\n  \"type\": \"aliquip cupidatat\",\n  \"size\": 60371993,\n  \"current\": -31466922,\n  \"has_next\": false,\n  \"item_total\": -71677001,\n  \"next_id\": \"re\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c5b45ae4-d23c-4ac7-a88f-dcd2a46d778d",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1992-02-11T21:46:35.971Z\",\n \"status\": -68624497,\n \"error\": \"quis\",\n \"exception\": \"amet esse occaecat commodo deserunt\",\n \"message\": \"irure elit u\",\n \"total_time_taken_in_millis\": 50227356,\n \"http_status\": \"205 RESET_CONTENT\",\n \"items\": [\n  {\n   \"company_id\": -86569958,\n   \"integration_data\": {},\n   \"company_name\": \"aute cillum proident id\",\n   \"task_details\": {\n    \"type\": 12435863,\n    \"group_list\": [\n     {\n      \"text\": \"sint exercitation voluptate irure\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"labore in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 38189470.24684417,\n    \"safe_stock\": -60352036,\n    \"period_threshold\": 44824485,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"incididunt aute cillum ut reprehenderit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"pariatur Lorem molli\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"veniam quis dolore\",\n   \"alias\": \"dolore do occaecat nisi\"\n  },\n  {\n   \"company_id\": -24792008,\n   \"integration_data\": {},\n   \"company_name\": \"laboris ut non\",\n   \"task_details\": {\n    \"type\": -11032779,\n    \"group_list\": [\n     {\n      \"text\": \"sint laboris deserunt Lorem Excepteur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cupidatat ipsum Excepteur Duis qui\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 44264960.34406799,\n    \"safe_stock\": 33854941,\n    \"period_threshold\": 29749956,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"mollit do adipisicing\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Ut in labore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ad nulla minim\",\n   \"alias\": \"anim ad dolor ipsum\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 67270041,\n   \"integration_data\": {},\n   \"company_name\": \"fugiat Duis non quis\",\n   \"task_details\": {\n    \"type\": 60393967,\n    \"group_list\": [\n     {\n      \"text\": \"nostrud non\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ipsum in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -35850731.684508786,\n    \"safe_stock\": -79242772,\n    \"period_threshold\": -3389640,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"laboris veniam\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laboris veniam dolore ex\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"dolor enim laboris sint\",\n   \"alias\": \"ea\"\n  },\n  {\n   \"company_id\": 61792,\n   \"integration_data\": {},\n   \"company_name\": \"nulla dolor adipisicing\",\n   \"task_details\": {\n    \"type\": 13835532,\n    \"group_list\": [\n     {\n      \"text\": \"Duis in cillum sed\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliquip reprehenderit proident non\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 48850883.274956435,\n    \"safe_stock\": -49247684,\n    \"period_threshold\": -55719681,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"pariatur consectetur Lo\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"anim aliqua dolore consectetur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"incididunt sunt adipisicing\",\n   \"alias\": \"esse velit mollit\"\n  }\n ],\n \"trace_id\": \"sunt sit nostrud tempor\",\n \"page\": {\n  \"type\": \"aliquip cupidatat\",\n  \"size\": 60371993,\n  \"current\": -31466922,\n  \"has_next\": false,\n  \"item_total\": -71677001,\n  \"next_id\": \"re\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "e7ffc1e1-0123-46a4-9e11-39e740efc54c",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "497efe46-64e4-4a15-8744-dc8a76e368a2",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1996-11-20T17:32:22.450Z\",\n \"status\": 40907791,\n \"error\": \"in dolore eiusmo\",\n \"exception\": \"q\",\n \"message\": \"minim\",\n \"total_time_taken_in_millis\": -86224847,\n \"http_status\": \"421 DESTINATION_LOCKED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"dolore occaecat fugiat consequat\",\n \"page\": {\n  \"type\": \"amet officia ipsum i\",\n  \"size\": 32640937,\n  \"current\": 47078008,\n  \"has_next\": true,\n  \"item_total\": -81448390,\n  \"next_id\": \"nulla dolore\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "65edc32d-7727-4594-82bf-8ccea394ab60",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1996-11-20T17:32:22.450Z\",\n \"status\": 40907791,\n \"error\": \"in dolore eiusmo\",\n \"exception\": \"q\",\n \"message\": \"minim\",\n \"total_time_taken_in_millis\": -86224847,\n \"http_status\": \"421 DESTINATION_LOCKED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"dolore occaecat fugiat consequat\",\n \"page\": {\n  \"type\": \"amet officia ipsum i\",\n  \"size\": 32640937,\n  \"current\": 47078008,\n  \"has_next\": true,\n  \"item_total\": -81448390,\n  \"next_id\": \"nulla dolore\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "62c131a7-6486-4272-9b67-b9bc4447bc94",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1996-11-20T17:32:22.450Z\",\n \"status\": 40907791,\n \"error\": \"in dolore eiusmo\",\n \"exception\": \"q\",\n \"message\": \"minim\",\n \"total_time_taken_in_millis\": -86224847,\n \"http_status\": \"421 DESTINATION_LOCKED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"dolore occaecat fugiat consequat\",\n \"page\": {\n  \"type\": \"amet officia ipsum i\",\n  \"size\": 32640937,\n  \"current\": 47078008,\n  \"has_next\": true,\n  \"item_total\": -81448390,\n  \"next_id\": \"nulla dolore\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "9d6fde47-e9cd-41ff-ae11-e70a771797da",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "e7147db9-c5a4-4192-843a-d6d49e6d2e75",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2003-07-21T19:15:02.355Z\",\n \"status\": 57534729,\n \"error\": \"adipisicing fugiat pariatur\",\n \"exception\": \"in cillum\",\n \"message\": \"ullamco\",\n \"total_time_taken_in_millis\": -90512083,\n \"http_status\": \"206 PARTIAL_CONTENT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"Duis sit incididunt\",\n \"page\": {\n  \"type\": \"laborum nisi veniam\",\n  \"size\": -8186960,\n  \"current\": 35792141,\n  \"has_next\": false,\n  \"item_total\": 73334134,\n  \"next_id\": \"in consequat Excepteur dolor\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "05aec381-eca3-4138-b6e6-7130c81373c6",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2003-07-21T19:15:02.355Z\",\n \"status\": 57534729,\n \"error\": \"adipisicing fugiat pariatur\",\n \"exception\": \"in cillum\",\n \"message\": \"ullamco\",\n \"total_time_taken_in_millis\": -90512083,\n \"http_status\": \"206 PARTIAL_CONTENT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"Duis sit incididunt\",\n \"page\": {\n  \"type\": \"laborum nisi veniam\",\n  \"size\": -8186960,\n  \"current\": 35792141,\n  \"has_next\": false,\n  \"item_total\": 73334134,\n  \"next_id\": \"in consequat Excepteur dolor\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "cbd1442e-b337-4386-8660-c57e30403ff8",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2003-07-21T19:15:02.355Z\",\n \"status\": 57534729,\n \"error\": \"adipisicing fugiat pariatur\",\n \"exception\": \"in cillum\",\n \"message\": \"ullamco\",\n \"total_time_taken_in_millis\": -90512083,\n \"http_status\": \"206 PARTIAL_CONTENT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"Duis sit incididunt\",\n \"page\": {\n  \"type\": \"laborum nisi veniam\",\n  \"size\": -8186960,\n  \"current\": 35792141,\n  \"has_next\": false,\n  \"item_total\": 73334134,\n  \"next_id\": \"in consequat Excepteur dolor\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "fd684e98-8393-4947-a3bd-2426ef4899f5",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2003-07-21T19:15:02.355Z\",\n \"status\": 57534729,\n \"error\": \"adipisicing fugiat pariatur\",\n \"exception\": \"in cillum\",\n \"message\": \"ullamco\",\n \"total_time_taken_in_millis\": -90512083,\n \"http_status\": \"206 PARTIAL_CONTENT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"Duis sit incididunt\",\n \"page\": {\n  \"type\": \"laborum nisi veniam\",\n  \"size\": -8186960,\n  \"current\": 35792141,\n  \"has_next\": false,\n  \"item_total\": 73334134,\n  \"next_id\": \"in consequat Excepteur dolor\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "7d2f5dc8-11d7-4fe4-969c-dc74f8091015",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2003-07-21T19:15:02.355Z\",\n \"status\": 57534729,\n \"error\": \"adipisicing fugiat pariatur\",\n \"exception\": \"in cillum\",\n \"message\": \"ullamco\",\n \"total_time_taken_in_millis\": -90512083,\n \"http_status\": \"206 PARTIAL_CONTENT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"Duis sit incididunt\",\n \"page\": {\n  \"type\": \"laborum nisi veniam\",\n  \"size\": -8186960,\n  \"current\": 35792141,\n  \"has_next\": false,\n  \"item_total\": 73334134,\n  \"next_id\": \"in consequat Excepteur dolor\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fynd.com"
    }
  ],
  "info": {
    "_postman_id": "ddf3cb12-be0f-49b3-9080-1596479b2ec0",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
