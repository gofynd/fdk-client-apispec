{
  "item": [
    {
      "id": "ed6f43aa-ca7b-4dec-8a5e-8e6203733e7a",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "0196dd61-39df-43e9-8522-b9614f0221d9",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "e8f9091a-3c72-4ae9-8318-d871a72ef390",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "mollit ullamco labore cupidatat ea",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1c5757b9-a580-486d-ab96-5c1b77be55ab",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "mollit ullamco labore cupidatat ea",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "b1d848f6-eb7c-404c-983c-c9bbb3912c85",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "mollit ullamco labore cupidatat ea",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "91f9f7de-eb6a-4d74-91a1-d41e0039ec75",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "017dbc78-b389-46ef-8665-0a15411f64e9",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "f066e0bb-8c32-4502-ac7a-f578cedb87a8",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "8c088bef-c83d-4b0c-9617-5ec535d5b8a9",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "4ed10f38-6937-4d5a-bedb-b319121c24c5",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 25042190,\n   \"event_name\": \"occaecat aliqua\",\n   \"event_type\": \"reprehenderit minim velit\",\n   \"event_category\": \"sed adipisicing sint mollit\",\n   \"version\": \"eu deserunt pariatur veniam\",\n   \"display_name\": \"tempor commodo labore\",\n   \"description\": \"aliqua veniam\",\n   \"created_on\": \"exercitation\"\n  },\n  {\n   \"id\": 36377096,\n   \"event_name\": \"ut amet\",\n   \"event_type\": \"elit eiusmod tempor \",\n   \"event_category\": \"ipsum dolor deserunt\",\n   \"version\": \"enim cillum\",\n   \"display_name\": \"ut non ad\",\n   \"description\": \"sunt ullamco pariatur mollit\",\n   \"created_on\": \"veniam labore cillum\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "707af6ab-9af4-4971-83be-13a79a426b3d",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "ba28c8c8-ce5e-4eed-857e-bf9aa5cac025",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 55542252,\n   \"event_name\": \"sit esse eiusmod\",\n   \"event_type\": \"eu esse cupidatat laboris velit\",\n   \"event_category\": \"minim\",\n   \"version\": \"culpa magna aute Lorem adipisicing\",\n   \"display_name\": \"sed labore qui\",\n   \"description\": \"sint non\",\n   \"created_on\": \"fugiat pariatur magna deserunt\"\n  },\n  {\n   \"id\": -90600546,\n   \"event_name\": \"sunt quis in magna irure\",\n   \"event_type\": \"proident sunt\",\n   \"event_category\": \"Duis nisi do\",\n   \"version\": \"minim labore Excepteur \",\n   \"display_name\": \"ut et\",\n   \"description\": \"ut officia laboris cillum\",\n   \"created_on\": \"enim\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "3d121115-e34d-4772-ab8d-51ec361ff3fa",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "c09e4e2c-93f7-41ec-87f7-53d91e158875",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "9ae2b433-e525-4fc5-8aa1-6a7ee43653a6",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1981-08-01T03:49:33.079Z\",\n \"status\": 62811528,\n \"error\": \"tempor enim ut mollit\",\n \"exception\": \"consequat culpa\",\n \"message\": \"Lorem quis\",\n \"total_time_taken_in_millis\": -48809461,\n \"http_status\": \"100 CONTINUE\",\n \"items\": {\n  \"company_id\": 72623006,\n  \"integration_data\": {},\n  \"company_name\": \"commodo ut\",\n  \"task_details\": {\n   \"type\": 95078347,\n   \"group_list\": [\n    {\n     \"text\": \"ut\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ullamco mollit in sit magna\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 5496780.0580384135,\n   \"safe_stock\": 63403019,\n   \"period_threshold\": -41024677,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"proident Excepteur nulla mollit\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ea Duis la\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"ad consectetur\",\n  \"alias\": \"velit dolore ea sunt aliquip\"\n },\n \"payload\": {\n  \"company_id\": -74382728,\n  \"integration_data\": {},\n  \"company_name\": \"occaecat Lorem mollit\",\n  \"task_details\": {\n   \"type\": -24204466,\n   \"group_list\": [\n    {\n     \"text\": \"eiusmod consectetur amet pariatur nostrud\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ut ea\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -68494239.29180807,\n   \"safe_stock\": -69012438,\n   \"period_threshold\": 45375795,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"incididunt anim tempor\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"nulla eu\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"pariatur elit eius\",\n  \"alias\": \"nulla consectetur labore in\"\n },\n \"trace_id\": \"exercitation consequat do nisi\",\n \"page\": {\n  \"type\": \"et\",\n  \"size\": 5551346,\n  \"current\": 61172288,\n  \"has_next\": true,\n  \"item_total\": 1615043,\n  \"next_id\": \"esse velit\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "4d8ef2a9-bcaf-4279-b69d-af4afff0a0f2",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1981-08-01T03:49:33.079Z\",\n \"status\": 62811528,\n \"error\": \"tempor enim ut mollit\",\n \"exception\": \"consequat culpa\",\n \"message\": \"Lorem quis\",\n \"total_time_taken_in_millis\": -48809461,\n \"http_status\": \"100 CONTINUE\",\n \"items\": {\n  \"company_id\": 72623006,\n  \"integration_data\": {},\n  \"company_name\": \"commodo ut\",\n  \"task_details\": {\n   \"type\": 95078347,\n   \"group_list\": [\n    {\n     \"text\": \"ut\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ullamco mollit in sit magna\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 5496780.0580384135,\n   \"safe_stock\": 63403019,\n   \"period_threshold\": -41024677,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"proident Excepteur nulla mollit\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ea Duis la\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"ad consectetur\",\n  \"alias\": \"velit dolore ea sunt aliquip\"\n },\n \"payload\": {\n  \"company_id\": -74382728,\n  \"integration_data\": {},\n  \"company_name\": \"occaecat Lorem mollit\",\n  \"task_details\": {\n   \"type\": -24204466,\n   \"group_list\": [\n    {\n     \"text\": \"eiusmod consectetur amet pariatur nostrud\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ut ea\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -68494239.29180807,\n   \"safe_stock\": -69012438,\n   \"period_threshold\": 45375795,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"incididunt anim tempor\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"nulla eu\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"pariatur elit eius\",\n  \"alias\": \"nulla consectetur labore in\"\n },\n \"trace_id\": \"exercitation consequat do nisi\",\n \"page\": {\n  \"type\": \"et\",\n  \"size\": 5551346,\n  \"current\": 61172288,\n  \"has_next\": true,\n  \"item_total\": 1615043,\n  \"next_id\": \"esse velit\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5dbd8b07-f1bf-4f4b-b998-26cc1abebd82",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1981-08-01T03:49:33.079Z\",\n \"status\": 62811528,\n \"error\": \"tempor enim ut mollit\",\n \"exception\": \"consequat culpa\",\n \"message\": \"Lorem quis\",\n \"total_time_taken_in_millis\": -48809461,\n \"http_status\": \"100 CONTINUE\",\n \"items\": {\n  \"company_id\": 72623006,\n  \"integration_data\": {},\n  \"company_name\": \"commodo ut\",\n  \"task_details\": {\n   \"type\": 95078347,\n   \"group_list\": [\n    {\n     \"text\": \"ut\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ullamco mollit in sit magna\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 5496780.0580384135,\n   \"safe_stock\": 63403019,\n   \"period_threshold\": -41024677,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"proident Excepteur nulla mollit\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ea Duis la\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"ad consectetur\",\n  \"alias\": \"velit dolore ea sunt aliquip\"\n },\n \"payload\": {\n  \"company_id\": -74382728,\n  \"integration_data\": {},\n  \"company_name\": \"occaecat Lorem mollit\",\n  \"task_details\": {\n   \"type\": -24204466,\n   \"group_list\": [\n    {\n     \"text\": \"eiusmod consectetur amet pariatur nostrud\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ut ea\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -68494239.29180807,\n   \"safe_stock\": -69012438,\n   \"period_threshold\": 45375795,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"incididunt anim tempor\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"nulla eu\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"pariatur elit eius\",\n  \"alias\": \"nulla consectetur labore in\"\n },\n \"trace_id\": \"exercitation consequat do nisi\",\n \"page\": {\n  \"type\": \"et\",\n  \"size\": 5551346,\n  \"current\": 61172288,\n  \"has_next\": true,\n  \"item_total\": 1615043,\n  \"next_id\": \"esse velit\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "a8a9c582-1579-4c58-b7c7-1bc9610a4d72",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "eff2b998-67fd-4004-bbcd-5b22006e3198",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1946-09-18T20:59:12.584Z\",\n \"status\": -83239632,\n \"error\": \"Ut veniam aute\",\n \"exception\": \"eiusmod Ut\",\n \"message\": \"non nostrud deserunt\",\n \"total_time_taken_in_millis\": -28687330,\n \"http_status\": \"511 NETWORK_AUTHENTICATION_REQUIRED\",\n \"items\": [\n  {\n   \"company_id\": -20989810,\n   \"integration_data\": {},\n   \"company_name\": \"ad\",\n   \"task_details\": {\n    \"type\": -58115882,\n    \"group_list\": [\n     {\n      \"text\": \"tempor eu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sit nostrud\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -67507768.93774937,\n    \"safe_stock\": -52667891,\n    \"period_threshold\": -51614164,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ullamco et\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laboris\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"amet proident\",\n   \"alias\": \"incididunt occaecat\"\n  },\n  {\n   \"company_id\": -71393090,\n   \"integration_data\": {},\n   \"company_name\": \"minim quis Lorem nulla exer\",\n   \"task_details\": {\n    \"type\": -85447484,\n    \"group_list\": [\n     {\n      \"text\": \"velit nulla sit laboris\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"non anim ullamco pariatur officia\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 83942930.98010013,\n    \"safe_stock\": -65870089,\n    \"period_threshold\": -97111887,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"id aliqua officia\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"enim dolor anim velit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aute incididunt do\",\n   \"alias\": \"nostrud tempor\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 64425581,\n   \"integration_data\": {},\n   \"company_name\": \"consectetur nulla elit\",\n   \"task_details\": {\n    \"type\": 54194024,\n    \"group_list\": [\n     {\n      \"text\": \"eu ad\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laboris\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -54357145.40772034,\n    \"safe_stock\": -3936757,\n    \"period_threshold\": -11344199,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"incididunt cons\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"deserunt in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"veniam quis in\",\n   \"alias\": \"eiusmod amet\"\n  },\n  {\n   \"company_id\": 49050376,\n   \"integration_data\": {},\n   \"company_name\": \"elit laboris velit sint\",\n   \"task_details\": {\n    \"type\": -13358587,\n    \"group_list\": [\n     {\n      \"text\": \"id sunt cillum in aute\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consequat officia amet mollit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -92764285.2968955,\n    \"safe_stock\": 93667588,\n    \"period_threshold\": 4997223,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"c\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eiusmod in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"eiusmod voluptate amet aliquip\",\n   \"alias\": \"et dolore pariatur esse\"\n  }\n ],\n \"trace_id\": \"laborum irure dolor aute\",\n \"page\": {\n  \"type\": \"nulla Duis est esse aliqua\",\n  \"size\": 20099845,\n  \"current\": 17434258,\n  \"has_next\": true,\n  \"item_total\": -3444710,\n  \"next_id\": \"minim est consequat\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "27c5ce20-6629-451e-8989-e318488e0451",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1943-03-31T23:55:50.611Z\",\n \"status\": 76653605,\n \"error\": \"ipsum enim e\",\n \"exception\": \"cillum nulla Excepteur\",\n \"message\": \"la\",\n \"total_time_taken_in_millis\": -74804123,\n \"http_status\": \"402 PAYMENT_REQUIRED\",\n \"items\": [\n  {\n   \"company_id\": 80291474,\n   \"integration_data\": {},\n   \"company_name\": \"dolor in ullamco officia\",\n   \"task_details\": {\n    \"type\": -78242449,\n    \"group_list\": [\n     {\n      \"text\": \"non Lorem\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -87701458.65464953,\n    \"safe_stock\": -43994328,\n    \"period_threshold\": 37085416,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"adipisicing minim nostrud\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"commodo officia ullamco\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"velit ipsum adipisicing\",\n   \"alias\": \"in eiusmod\"\n  },\n  {\n   \"company_id\": -69702032,\n   \"integration_data\": {},\n   \"company_name\": \"aliquip laborum exercitation mollit sint\",\n   \"task_details\": {\n    \"type\": -89625525,\n    \"group_list\": [\n     {\n      \"text\": \"in eiusmod est eu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"do sed\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 18018897.896232694,\n    \"safe_stock\": -12944620,\n    \"period_threshold\": -85984476,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"D\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"qui qu\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"est velit veniam\",\n   \"alias\": \"sed elit sunt\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -87851929,\n   \"integration_data\": {},\n   \"company_name\": \"dolore\",\n   \"task_details\": {\n    \"type\": -39081474,\n    \"group_list\": [\n     {\n      \"text\": \"mollit proident commodo sint\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sed\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -36315040.936980344,\n    \"safe_stock\": 71818037,\n    \"period_threshold\": -26281340,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"reprehenderit sunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor qui officia\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aliquip\",\n   \"alias\": \"ad minim Ut\"\n  },\n  {\n   \"company_id\": -537248,\n   \"integration_data\": {},\n   \"company_name\": \"qui culpa proident eu\",\n   \"task_details\": {\n    \"type\": 68633313,\n    \"group_list\": [\n     {\n      \"text\": \"anim tempor ex veniam Lorem\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Excepteur do sit \",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 62850508.91141915,\n    \"safe_stock\": -59692534,\n    \"period_threshold\": 74051907,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"consequat ullamc\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"deserunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"laboris officia labore\",\n   \"alias\": \"laboris et\"\n  }\n ],\n \"trace_id\": \"proident deserunt eiusmod\",\n \"page\": {\n  \"type\": \"sint elit dolor aliqua\",\n  \"size\": 65990561,\n  \"current\": -33226788,\n  \"has_next\": false,\n  \"item_total\": 37090145,\n  \"next_id\": \"do ea ut\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "fccf7250-fc12-40cc-823c-916d449e758c",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1943-03-31T23:55:50.611Z\",\n \"status\": 76653605,\n \"error\": \"ipsum enim e\",\n \"exception\": \"cillum nulla Excepteur\",\n \"message\": \"la\",\n \"total_time_taken_in_millis\": -74804123,\n \"http_status\": \"402 PAYMENT_REQUIRED\",\n \"items\": [\n  {\n   \"company_id\": 80291474,\n   \"integration_data\": {},\n   \"company_name\": \"dolor in ullamco officia\",\n   \"task_details\": {\n    \"type\": -78242449,\n    \"group_list\": [\n     {\n      \"text\": \"non Lorem\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -87701458.65464953,\n    \"safe_stock\": -43994328,\n    \"period_threshold\": 37085416,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"adipisicing minim nostrud\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"commodo officia ullamco\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"velit ipsum adipisicing\",\n   \"alias\": \"in eiusmod\"\n  },\n  {\n   \"company_id\": -69702032,\n   \"integration_data\": {},\n   \"company_name\": \"aliquip laborum exercitation mollit sint\",\n   \"task_details\": {\n    \"type\": -89625525,\n    \"group_list\": [\n     {\n      \"text\": \"in eiusmod est eu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"do sed\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 18018897.896232694,\n    \"safe_stock\": -12944620,\n    \"period_threshold\": -85984476,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"D\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"qui qu\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"est velit veniam\",\n   \"alias\": \"sed elit sunt\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -87851929,\n   \"integration_data\": {},\n   \"company_name\": \"dolore\",\n   \"task_details\": {\n    \"type\": -39081474,\n    \"group_list\": [\n     {\n      \"text\": \"mollit proident commodo sint\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sed\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -36315040.936980344,\n    \"safe_stock\": 71818037,\n    \"period_threshold\": -26281340,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"reprehenderit sunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor qui officia\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aliquip\",\n   \"alias\": \"ad minim Ut\"\n  },\n  {\n   \"company_id\": -537248,\n   \"integration_data\": {},\n   \"company_name\": \"qui culpa proident eu\",\n   \"task_details\": {\n    \"type\": 68633313,\n    \"group_list\": [\n     {\n      \"text\": \"anim tempor ex veniam Lorem\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Excepteur do sit \",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 62850508.91141915,\n    \"safe_stock\": -59692534,\n    \"period_threshold\": 74051907,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"consequat ullamc\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"deserunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"laboris officia labore\",\n   \"alias\": \"laboris et\"\n  }\n ],\n \"trace_id\": \"proident deserunt eiusmod\",\n \"page\": {\n  \"type\": \"sint elit dolor aliqua\",\n  \"size\": 65990561,\n  \"current\": -33226788,\n  \"has_next\": false,\n  \"item_total\": 37090145,\n  \"next_id\": \"do ea ut\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "f5b5e5f5-4806-4417-bb2e-22c3c9bd6af6",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "b76daa1e-a1d9-4450-afbb-f400217e126f",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2009-06-10T17:08:34.134Z\",\n \"status\": -78050289,\n \"error\": \"labore ut culpa in\",\n \"exception\": \"qui ex\",\n \"message\": \"consequat sint\",\n \"total_time_taken_in_millis\": -6474092,\n \"http_status\": \"419 INSUFFICIENT_SPACE_ON_RESOURCE\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"commodo ea eu\",\n \"page\": {\n  \"type\": \"id mollit enim deserunt\",\n  \"size\": -5768775,\n  \"current\": -72757823,\n  \"has_next\": true,\n  \"item_total\": -86807564,\n  \"next_id\": \"minim\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9bf5fca7-cc3e-408e-b9f7-79d9e4a0098b",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2009-06-10T17:08:34.134Z\",\n \"status\": -78050289,\n \"error\": \"labore ut culpa in\",\n \"exception\": \"qui ex\",\n \"message\": \"consequat sint\",\n \"total_time_taken_in_millis\": -6474092,\n \"http_status\": \"419 INSUFFICIENT_SPACE_ON_RESOURCE\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"commodo ea eu\",\n \"page\": {\n  \"type\": \"id mollit enim deserunt\",\n  \"size\": -5768775,\n  \"current\": -72757823,\n  \"has_next\": true,\n  \"item_total\": -86807564,\n  \"next_id\": \"minim\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "94d1e3d2-a599-4d6e-b5a0-0bac741a0a22",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2009-06-10T17:08:34.134Z\",\n \"status\": -78050289,\n \"error\": \"labore ut culpa in\",\n \"exception\": \"qui ex\",\n \"message\": \"consequat sint\",\n \"total_time_taken_in_millis\": -6474092,\n \"http_status\": \"419 INSUFFICIENT_SPACE_ON_RESOURCE\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"commodo ea eu\",\n \"page\": {\n  \"type\": \"id mollit enim deserunt\",\n  \"size\": -5768775,\n  \"current\": -72757823,\n  \"has_next\": true,\n  \"item_total\": -86807564,\n  \"next_id\": \"minim\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "a00249d1-eba9-45e3-acff-12053fe0e3bb",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "9949adca-7f0f-4f3e-b753-033dbd9cdd4b",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1951-11-28T16:45:21.371Z\",\n \"status\": 33734283,\n \"error\": \"consectetur cillum minim irure culpa\",\n \"exception\": \"deserunt Ut\",\n \"message\": \"consequat elit proident\",\n \"total_time_taken_in_millis\": -8730806,\n \"http_status\": \"422 UNPROCESSABLE_ENTITY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"Duis sed minim\",\n \"page\": {\n  \"type\": \"enim dolor officia\",\n  \"size\": 11458312,\n  \"current\": -67801913,\n  \"has_next\": true,\n  \"item_total\": -13320442,\n  \"next_id\": \"culpa mollit\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2791f3a8-b122-4bc4-852c-cd58af92cfb2",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1951-11-28T16:45:21.371Z\",\n \"status\": 33734283,\n \"error\": \"consectetur cillum minim irure culpa\",\n \"exception\": \"deserunt Ut\",\n \"message\": \"consequat elit proident\",\n \"total_time_taken_in_millis\": -8730806,\n \"http_status\": \"422 UNPROCESSABLE_ENTITY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"Duis sed minim\",\n \"page\": {\n  \"type\": \"enim dolor officia\",\n  \"size\": 11458312,\n  \"current\": -67801913,\n  \"has_next\": true,\n  \"item_total\": -13320442,\n  \"next_id\": \"culpa mollit\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "edf2100b-5e40-42cd-bfa5-e4e24bc9faf6",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1951-11-28T16:45:21.371Z\",\n \"status\": 33734283,\n \"error\": \"consectetur cillum minim irure culpa\",\n \"exception\": \"deserunt Ut\",\n \"message\": \"consequat elit proident\",\n \"total_time_taken_in_millis\": -8730806,\n \"http_status\": \"422 UNPROCESSABLE_ENTITY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"Duis sed minim\",\n \"page\": {\n  \"type\": \"enim dolor officia\",\n  \"size\": 11458312,\n  \"current\": -67801913,\n  \"has_next\": true,\n  \"item_total\": -13320442,\n  \"next_id\": \"culpa mollit\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ccecc5b9-5662-4be6-b81e-90ed1de8f558",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1951-11-28T16:45:21.371Z\",\n \"status\": 33734283,\n \"error\": \"consectetur cillum minim irure culpa\",\n \"exception\": \"deserunt Ut\",\n \"message\": \"consequat elit proident\",\n \"total_time_taken_in_millis\": -8730806,\n \"http_status\": \"422 UNPROCESSABLE_ENTITY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"Duis sed minim\",\n \"page\": {\n  \"type\": \"enim dolor officia\",\n  \"size\": 11458312,\n  \"current\": -67801913,\n  \"has_next\": true,\n  \"item_total\": -13320442,\n  \"next_id\": \"culpa mollit\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ea6bf26d-094f-4a49-8888-f34682bdb7ef",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1951-11-28T16:45:21.371Z\",\n \"status\": 33734283,\n \"error\": \"consectetur cillum minim irure culpa\",\n \"exception\": \"deserunt Ut\",\n \"message\": \"consequat elit proident\",\n \"total_time_taken_in_millis\": -8730806,\n \"http_status\": \"422 UNPROCESSABLE_ENTITY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"Duis sed minim\",\n \"page\": {\n  \"type\": \"enim dolor officia\",\n  \"size\": 11458312,\n  \"current\": -67801913,\n  \"has_next\": true,\n  \"item_total\": -13320442,\n  \"next_id\": \"culpa mollit\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fynd.com"
    }
  ],
  "info": {
    "_postman_id": "6fffa445-72f1-4c23-91eb-be0e8bae4133",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
