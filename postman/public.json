{
  "item": [
    {
      "id": "5e770be6-8cb3-481d-b9e1-2b4bf322cfdc",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "14602666-93c1-4504-a508-3cb761f28f4f",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "7ae4e97f-faf7-4378-a65a-5b9fda3f7a9f",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "occaecat voluptate ut quis adipisicing",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b357c294-080d-4b08-b2e2-66db681d4d95",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "occaecat voluptate ut quis adipisicing",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"Invalid application domain or id.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "7cef6eaa-2b9d-44d1-a6ef-989fc42b8e0c",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "occaecat voluptate ut quis adipisicing",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "92d3c787-06c9-4998-adbc-45f9350e5b93",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "80794f12-fc4a-45b9-b1ad-ece44d345611",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "37fd5bf8-3a06-4cbb-8a90-1caa468ac130",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "a5737fe8-6996-435c-91a5-9485f499cab5",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "d57f08d5-e776-4f10-ac01-6c1b2b2e14bf",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -53855350,\n   \"event_name\": \"eu proident nulla esse cupidatat\",\n   \"event_type\": \"ipsum in do\",\n   \"event_category\": \"ullamco labore culpa Lorem\",\n   \"version\": \"elit eu ex fugiat enim\",\n   \"display_name\": \"do ullamco occaecat laborum\",\n   \"description\": \"anim exercitation et\",\n   \"created_on\": \"in est sit ea\"\n  },\n  {\n   \"id\": 37161157,\n   \"event_name\": \"magna dolor laborum\",\n   \"event_type\": \"non ipsum ea dolore sint\",\n   \"event_category\": \"aute laboris\",\n   \"version\": \"consectetur proident irure\",\n   \"display_name\": \"\",\n   \"description\": \"reprehenderit officia laborum sint\",\n   \"created_on\": \"Lorem\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "cfe727d2-033e-4a41-afc2-e0d4177d31b1",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "79d57d38-f8d4-4773-bc79-c8137985819f",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 35217598,\n   \"event_name\": \"proident cupidatat occaecat eu\",\n   \"event_type\": \"pariatur\",\n   \"event_category\": \"dolore ullamco dolor Ut\",\n   \"version\": \"non id minim reprehenderit ullamco\",\n   \"display_name\": \"voluptate laboris\",\n   \"description\": \"esse ex ea\",\n   \"created_on\": \"pariatur non\"\n  },\n  {\n   \"id\": 61760903,\n   \"event_name\": \"enim eu sunt dolor\",\n   \"event_type\": \"velit voluptate commodo\",\n   \"event_category\": \"sed pariatur laboris adipisicing\",\n   \"version\": \"ipsum in\",\n   \"display_name\": \"consectetur magna nostrud \",\n   \"description\": \"ea dolo\",\n   \"created_on\": \"eiusmod cillum\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "950845ee-3fe8-4fac-9c56-3fe90c9a759c",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "8e89d679-b64b-4b4c-8fc7-77b7b638fa34",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "01184e41-60e6-4d4f-aad3-e25461331ac8",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1986-01-25T08:18:43.739Z\",\n \"status\": -9945933,\n \"error\": \"et\",\n \"exception\": \"dolor reprehenderit elit ad\",\n \"message\": \"cupidatat laboris commodo dolor\",\n \"total_time_taken_in_millis\": 263862,\n \"http_status\": \"409 CONFLICT\",\n \"items\": [\n  {\n   \"company_id\": 37128359,\n   \"integration_data\": {},\n   \"company_name\": \"non sed et eiusmod\",\n   \"task_details\": {\n    \"type\": -62537547,\n    \"group_list\": [\n     {\n      \"text\": \"volu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"et adipisicing dolor veniam\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -24744214.94118473,\n    \"safe_stock\": 88523023,\n    \"period_threshold\": -12839809,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"laborum non laboris consequat consectetur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eiusmod sed\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aliqua Lorem ex\",\n   \"alias\": \"culpa est nostrud amet\"\n  },\n  {\n   \"company_id\": -42615821,\n   \"integration_data\": {},\n   \"company_name\": \"cupidatat commodo velit\",\n   \"task_details\": {\n    \"type\": -63407211,\n    \"group_list\": [\n     {\n      \"text\": \"exercitation consectetur aliqua\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ullamco aliqua ad\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 54071810.09008449,\n    \"safe_stock\": -5016215,\n    \"period_threshold\": 9390935,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"in et dolore est anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"fugiat eiusmod\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in \",\n   \"alias\": \"dolore laborum\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -10635036,\n   \"integration_data\": {},\n   \"company_name\": \"occaecat do voluptate incididunt\",\n   \"task_details\": {\n    \"type\": 16733128,\n    \"group_list\": [\n     {\n      \"text\": \"minim ea mollit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sunt irure ex\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 16713433.044633687,\n    \"safe_stock\": -3405253,\n    \"period_threshold\": -76398064,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"eiusmod proident ipsum cupidatat est\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eiusmod nulla Dui\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"et amet irure\",\n   \"alias\": \"qui aliqua labore velit\"\n  },\n  {\n   \"company_id\": 46516377,\n   \"integration_data\": {},\n   \"company_name\": \"mollit sit nulla ullamco\",\n   \"task_details\": {\n    \"type\": -19942081,\n    \"group_list\": [\n     {\n      \"text\": \"do ut ad laborum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute dolore repre\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -89611388.08323361,\n    \"safe_stock\": 26790047,\n    \"period_threshold\": 66355527,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"c\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sint labore minim nisi pariatur\",\n   \"alias\": \"dolor minim aliquip\"\n  }\n ],\n \"trace_id\": \"Ut\",\n \"page\": {\n  \"type\": \"in dolore incididunt enim nulla\",\n  \"size\": 9612887,\n  \"current\": 27671551,\n  \"has_next\": false,\n  \"item_total\": -10933558,\n  \"next_id\": \"non commodo consequat mollit\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "fa788519-1d3d-4f98-a1b1-2aac319da375",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1968-02-20T10:36:55.791Z\",\n \"status\": 9030975,\n \"error\": \"qui nisi ullamco culpa\",\n \"exception\": \"in ea do\",\n \"message\": \"fugiat\",\n \"total_time_taken_in_millis\": 70565317,\n \"http_status\": \"406 NOT_ACCEPTABLE\",\n \"items\": [\n  {\n   \"company_id\": -24984624,\n   \"integration_data\": {},\n   \"company_name\": \"ex ullamco\",\n   \"task_details\": {\n    \"type\": -13219695,\n    \"group_list\": [\n     {\n      \"text\": \"culpa non\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"voluptate\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -27933965.782589838,\n    \"safe_stock\": 65296939,\n    \"period_threshold\": 97475793,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ex ut eiusmod nisi\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"velit eu proident nulla\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"occaecat commodo reprehenderit\",\n   \"alias\": \"sed in nulla cillum\"\n  },\n  {\n   \"company_id\": -85122541,\n   \"integration_data\": {},\n   \"company_name\": \"ullamco proident enim eu\",\n   \"task_details\": {\n    \"type\": -428898,\n    \"group_list\": [\n     {\n      \"text\": \"U\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"voluptate cillum pariatur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -71380322.26415807,\n    \"safe_stock\": -13875077,\n    \"period_threshold\": -23162483,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ut cupidatat tempor aute\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliqua anim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in nisi occaecat laborum\",\n   \"alias\": \"enim ut et\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 89659828,\n   \"integration_data\": {},\n   \"company_name\": \"sunt dolor enim\",\n   \"task_details\": {\n    \"type\": -84919218,\n    \"group_list\": [\n     {\n      \"text\": \"ut dolor do ea quis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliqua labore ad\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 89020411.21819061,\n    \"safe_stock\": 70354661,\n    \"period_threshold\": -89937005,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sunt adipisicing aute in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"pariatur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"nulla in sed\",\n   \"alias\": \"commodo tempor elit in\"\n  },\n  {\n   \"company_id\": 55037265,\n   \"integration_data\": {},\n   \"company_name\": \"in dolore\",\n   \"task_details\": {\n    \"type\": 72349172,\n    \"group_list\": [\n     {\n      \"text\": \"sit laboris\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"qui officia\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -65747439.87278109,\n    \"safe_stock\": -82366470,\n    \"period_threshold\": -35549868,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"cup\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"anim elit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"dolore culpa\",\n   \"alias\": \"laboris voluptate ea est\"\n  }\n ],\n \"trace_id\": \"enim dolor\",\n \"page\": {\n  \"type\": \"reprehenderit culpa do\",\n  \"size\": 24215838,\n  \"current\": 47333199,\n  \"has_next\": true,\n  \"item_total\": -57470521,\n  \"next_id\": \"incididunt labore aliquip\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c18a95d0-bb51-4c8b-9f84-5687b77aae90",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1968-02-20T10:36:55.791Z\",\n \"status\": 9030975,\n \"error\": \"qui nisi ullamco culpa\",\n \"exception\": \"in ea do\",\n \"message\": \"fugiat\",\n \"total_time_taken_in_millis\": 70565317,\n \"http_status\": \"406 NOT_ACCEPTABLE\",\n \"items\": [\n  {\n   \"company_id\": -24984624,\n   \"integration_data\": {},\n   \"company_name\": \"ex ullamco\",\n   \"task_details\": {\n    \"type\": -13219695,\n    \"group_list\": [\n     {\n      \"text\": \"culpa non\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"voluptate\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -27933965.782589838,\n    \"safe_stock\": 65296939,\n    \"period_threshold\": 97475793,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ex ut eiusmod nisi\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"velit eu proident nulla\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"occaecat commodo reprehenderit\",\n   \"alias\": \"sed in nulla cillum\"\n  },\n  {\n   \"company_id\": -85122541,\n   \"integration_data\": {},\n   \"company_name\": \"ullamco proident enim eu\",\n   \"task_details\": {\n    \"type\": -428898,\n    \"group_list\": [\n     {\n      \"text\": \"U\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"voluptate cillum pariatur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -71380322.26415807,\n    \"safe_stock\": -13875077,\n    \"period_threshold\": -23162483,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ut cupidatat tempor aute\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliqua anim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in nisi occaecat laborum\",\n   \"alias\": \"enim ut et\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 89659828,\n   \"integration_data\": {},\n   \"company_name\": \"sunt dolor enim\",\n   \"task_details\": {\n    \"type\": -84919218,\n    \"group_list\": [\n     {\n      \"text\": \"ut dolor do ea quis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliqua labore ad\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 89020411.21819061,\n    \"safe_stock\": 70354661,\n    \"period_threshold\": -89937005,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sunt adipisicing aute in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"pariatur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"nulla in sed\",\n   \"alias\": \"commodo tempor elit in\"\n  },\n  {\n   \"company_id\": 55037265,\n   \"integration_data\": {},\n   \"company_name\": \"in dolore\",\n   \"task_details\": {\n    \"type\": 72349172,\n    \"group_list\": [\n     {\n      \"text\": \"sit laboris\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"qui officia\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -65747439.87278109,\n    \"safe_stock\": -82366470,\n    \"period_threshold\": -35549868,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"cup\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"anim elit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"dolore culpa\",\n   \"alias\": \"laboris voluptate ea est\"\n  }\n ],\n \"trace_id\": \"enim dolor\",\n \"page\": {\n  \"type\": \"reprehenderit culpa do\",\n  \"size\": 24215838,\n  \"current\": 47333199,\n  \"has_next\": true,\n  \"item_total\": -57470521,\n  \"next_id\": \"incididunt labore aliquip\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "92b2a550-06e0-47b5-95b4-c1716833d97d",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "18421eb3-d5c9-478c-8281-c83734a35ee1",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2001-07-31T07:46:14.887Z\",\n \"status\": 15894993,\n \"error\": \"ex\",\n \"exception\": \"ullamco\",\n \"message\": \"in ut officia sunt\",\n \"total_time_taken_in_millis\": 73695910,\n \"http_status\": \"307 TEMPORARY_REDIRECT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"ea labore aute culpa\",\n \"page\": {\n  \"type\": \"tempor adipisicing qui eu\",\n  \"size\": 8864121,\n  \"current\": -70393230,\n  \"has_next\": false,\n  \"item_total\": -32296320,\n  \"next_id\": \"nulla\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9f8e45a0-b6b3-471f-a8ec-5d9f60f6dd91",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2001-07-31T07:46:14.887Z\",\n \"status\": 15894993,\n \"error\": \"ex\",\n \"exception\": \"ullamco\",\n \"message\": \"in ut officia sunt\",\n \"total_time_taken_in_millis\": 73695910,\n \"http_status\": \"307 TEMPORARY_REDIRECT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"ea labore aute culpa\",\n \"page\": {\n  \"type\": \"tempor adipisicing qui eu\",\n  \"size\": 8864121,\n  \"current\": -70393230,\n  \"has_next\": false,\n  \"item_total\": -32296320,\n  \"next_id\": \"nulla\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a40afd1a-bfcf-4060-b30c-44c01dc677e5",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2001-07-31T07:46:14.887Z\",\n \"status\": 15894993,\n \"error\": \"ex\",\n \"exception\": \"ullamco\",\n \"message\": \"in ut officia sunt\",\n \"total_time_taken_in_millis\": 73695910,\n \"http_status\": \"307 TEMPORARY_REDIRECT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"ea labore aute culpa\",\n \"page\": {\n  \"type\": \"tempor adipisicing qui eu\",\n  \"size\": 8864121,\n  \"current\": -70393230,\n  \"has_next\": false,\n  \"item_total\": -32296320,\n  \"next_id\": \"nulla\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "a20ba2e3-e2b0-4e9b-b76c-377e1c69916e",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "033c40a5-7427-4b23-912c-3add1a9dfdb0",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1975-07-04T00:22:13.732Z\",\n \"status\": 9633211,\n \"error\": \"anim in consectetur pariatur occaecat\",\n \"exception\": \"laboris aliqua ea est ullamco\",\n \"message\": \"dolor dolore\",\n \"total_time_taken_in_millis\": -35668098,\n \"http_status\": \"200 OK\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"occaecat amet quis\",\n \"page\": {\n  \"type\": \"in\",\n  \"size\": -28677821,\n  \"current\": 17515619,\n  \"has_next\": false,\n  \"item_total\": 88979244,\n  \"next_id\": \"incididunt Exce\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "082ba705-d8f6-4d04-9919-638f8352f290",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1975-07-04T00:22:13.732Z\",\n \"status\": 9633211,\n \"error\": \"anim in consectetur pariatur occaecat\",\n \"exception\": \"laboris aliqua ea est ullamco\",\n \"message\": \"dolor dolore\",\n \"total_time_taken_in_millis\": -35668098,\n \"http_status\": \"200 OK\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"occaecat amet quis\",\n \"page\": {\n  \"type\": \"in\",\n  \"size\": -28677821,\n  \"current\": 17515619,\n  \"has_next\": false,\n  \"item_total\": 88979244,\n  \"next_id\": \"incididunt Exce\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ab1b8461-e0b1-44c9-8fff-b0a1386cb1df",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1975-07-04T00:22:13.732Z\",\n \"status\": 9633211,\n \"error\": \"anim in consectetur pariatur occaecat\",\n \"exception\": \"laboris aliqua ea est ullamco\",\n \"message\": \"dolor dolore\",\n \"total_time_taken_in_millis\": -35668098,\n \"http_status\": \"200 OK\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"occaecat amet quis\",\n \"page\": {\n  \"type\": \"in\",\n  \"size\": -28677821,\n  \"current\": 17515619,\n  \"has_next\": false,\n  \"item_total\": 88979244,\n  \"next_id\": \"incididunt Exce\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b898a3b7-b376-4de9-919c-ef21633ec903",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1975-07-04T00:22:13.732Z\",\n \"status\": 9633211,\n \"error\": \"anim in consectetur pariatur occaecat\",\n \"exception\": \"laboris aliqua ea est ullamco\",\n \"message\": \"dolor dolore\",\n \"total_time_taken_in_millis\": -35668098,\n \"http_status\": \"200 OK\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"occaecat amet quis\",\n \"page\": {\n  \"type\": \"in\",\n  \"size\": -28677821,\n  \"current\": 17515619,\n  \"has_next\": false,\n  \"item_total\": 88979244,\n  \"next_id\": \"incididunt Exce\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3ba93ec3-6087-4d61-b0fc-8d6413d75fa4",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1975-07-04T00:22:13.732Z\",\n \"status\": 9633211,\n \"error\": \"anim in consectetur pariatur occaecat\",\n \"exception\": \"laboris aliqua ea est ullamco\",\n \"message\": \"dolor dolore\",\n \"total_time_taken_in_millis\": -35668098,\n \"http_status\": \"200 OK\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"occaecat amet quis\",\n \"page\": {\n  \"type\": \"in\",\n  \"size\": -28677821,\n  \"current\": 17515619,\n  \"has_next\": false,\n  \"item_total\": 88979244,\n  \"next_id\": \"incididunt Exce\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx0.de"
    }
  ],
  "info": {
    "_postman_id": "dc850521-2045-4025-a8ff-d8072a07836a",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
