{
  "item": [
    {
      "id": "5b422b4c-c60f-425d-802c-5d816c9b2eb2",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "98df0849-85f4-4067-93fe-27223c107fc0",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "a6c02f67-90e3-49b3-bd8f-a183a9e78aea",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "non",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3702a9ca-153e-4f5d-9226-480654e5e2b8",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "non",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"Invalid application domain or id.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "25707005-95a5-4cec-8561-a7c32ec35f84",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "non",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "9bd2d1c4-4622-472f-b881-218c7ccd1b72",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "89d38375-e54f-4893-bbd1-022999d93b56",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "cb535793-5ca6-4e08-8efd-49df80c9d1c5",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "5ee2cdb1-92ae-4ea4-b1c2-6a036ee08c59",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "69d0cd76-2455-4aee-90f4-0b91b4148211",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -98040383,\n   \"event_name\": \"consequat in eiusmod cillum \",\n   \"event_type\": \"dolor labore sint cupidatat\",\n   \"event_category\": \"culpa aliqua ad mollit\",\n   \"version\": \"culpa n\",\n   \"display_name\": \"Lorem consectetur dolor cillum exercitation\",\n   \"description\": \"eiusmod\",\n   \"created_on\": \"velit do re\"\n  },\n  {\n   \"id\": -31805689,\n   \"event_name\": \"culpa sint est ipsum\",\n   \"event_type\": \"laborum\",\n   \"event_category\": \"labore\",\n   \"version\": \"dol\",\n   \"display_name\": \"minim in la\",\n   \"description\": \"occaecat velit enim\",\n   \"created_on\": \"dolor ut pariatu\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "89a06c1b-86af-4a30-8362-300ac0ce4913",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "86d873ac-1d82-4d3b-8744-8d92ff7ce99f",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 39142368,\n   \"event_name\": \"ad\",\n   \"event_type\": \"labore Ut enim\",\n   \"event_category\": \"non Excepteur cupidat\",\n   \"version\": \"ad deserunt occaecat\",\n   \"display_name\": \"minim voluptate\",\n   \"description\": \"culpa do quis ipsum exercitation\",\n   \"created_on\": \"exercitation\"\n  },\n  {\n   \"id\": 78316238,\n   \"event_name\": \"laboris do\",\n   \"event_type\": \"ut occaecat dolor\",\n   \"event_category\": \"sint eiusmod ullamco aliqua ad\",\n   \"version\": \"qui in sunt do\",\n   \"display_name\": \"dolore in est quis\",\n   \"description\": \"minim enim\",\n   \"created_on\": \"adipisicing nisi\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "d09cc891-d563-45cd-af18-dfb754dc0c88",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "d9b867f7-dfb5-4c40-9515-86aaf23c5b0d",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "6be924a3-de1f-4b48-98b0-1e279a18637b",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1973-05-10T01:26:35.719Z\",\n \"status\": 49282818,\n \"error\": \"culpa cillum\",\n \"exception\": \"nostrud\",\n \"message\": \"ipsum\",\n \"total_time_taken_in_millis\": 68932937,\n \"http_status\": \"426 UPGRADE_REQUIRED\",\n \"items\": [\n  {\n   \"company_id\": -48030529,\n   \"integration_data\": {},\n   \"company_name\": \"officia ad dolor\",\n   \"task_details\": {\n    \"type\": -87188972,\n    \"group_list\": [\n     {\n      \"text\": \"fugiat dolore exercitation\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"fugiat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 54069609.59333354,\n    \"safe_stock\": 61796968,\n    \"period_threshold\": 55998096,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"consectetur in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"mollit in sit veniam\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"do officia\",\n   \"alias\": \"Excepteur in adipisicing\"\n  },\n  {\n   \"company_id\": 92678892,\n   \"integration_data\": {},\n   \"company_name\": \"ex veniam velit\",\n   \"task_details\": {\n    \"type\": 39169330,\n    \"group_list\": [\n     {\n      \"text\": \"tempor ea\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sint ipsum do\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -84069426.93102257,\n    \"safe_stock\": -92069812,\n    \"period_threshold\": 78674637,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"eiusmod velit amet proident\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliqua sit nostrud\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"et cupidatat\",\n   \"alias\": \"consect\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -14658773,\n   \"integration_data\": {},\n   \"company_name\": \"tempor non do enim\",\n   \"task_details\": {\n    \"type\": -11602887,\n    \"group_list\": [\n     {\n      \"text\": \"anim Excepteur nisi irure reprehenderit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ipsum nisi\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -54581342.38896029,\n    \"safe_stock\": -20141528,\n    \"period_threshold\": -50065451,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"enim non ipsum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sed labore et\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"non la\",\n   \"alias\": \"Duis laboris tempor sint Lorem\"\n  },\n  {\n   \"company_id\": -63784560,\n   \"integration_data\": {},\n   \"company_name\": \"ad nulla\",\n   \"task_details\": {\n    \"type\": 59057474,\n    \"group_list\": [\n     {\n      \"text\": \"ad dolore Excepteur proident\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"id commodo\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -67641653.46916288,\n    \"safe_stock\": 73148682,\n    \"period_threshold\": -89723523,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"aute Duis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"velit consectetur ullamco occaecat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"quis non id\",\n   \"alias\": \"Ut qui ex laborum\"\n  }\n ],\n \"trace_id\": \"\",\n \"page\": {\n  \"type\": \"irure aliquip enim Lorem nisi\",\n  \"size\": -92500250,\n  \"current\": 21472999,\n  \"has_next\": false,\n  \"item_total\": -87486788,\n  \"next_id\": \"tempor\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "46c528ec-62c8-4f0b-badf-6be08da519b8",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1959-04-26T07:58:01.249Z\",\n \"status\": -9787443,\n \"error\": \"laborum esse\",\n \"exception\": \"exercitati\",\n \"message\": \"cillum in pariatur occaecat\",\n \"total_time_taken_in_millis\": 39223136,\n \"http_status\": \"206 PARTIAL_CONTENT\",\n \"items\": [\n  {\n   \"company_id\": -19606408,\n   \"integration_data\": {},\n   \"company_name\": \"in dolore laborum\",\n   \"task_details\": {\n    \"type\": 29189792,\n    \"group_list\": [\n     {\n      \"text\": \"officia Lorem\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"mollit ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -98538564.19303173,\n    \"safe_stock\": 60638841,\n    \"period_threshold\": -38780054,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"consectetur laboris labore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"occaecat exercitation\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"culpa in\",\n   \"alias\": \"sint esse tempor cillu\"\n  },\n  {\n   \"company_id\": 38298667,\n   \"integration_data\": {},\n   \"company_name\": \"qui aute dolore esse sunt\",\n   \"task_details\": {\n    \"type\": 82989101,\n    \"group_list\": [\n     {\n      \"text\": \"adipisicing deserunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in ex do\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 7358475.0195748955,\n    \"safe_stock\": 45653550,\n    \"period_threshold\": 90125254,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"enim ut Excepteur nostrud\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"irure veniam reprehenderit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"cupidatat culpa\",\n   \"alias\": \"laborum consectetur Ut irure\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 98893900,\n   \"integration_data\": {},\n   \"company_name\": \"in\",\n   \"task_details\": {\n    \"type\": -29640362,\n    \"group_list\": [\n     {\n      \"text\": \"velit ad esse\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ea\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 97983689.81609687,\n    \"safe_stock\": -67091917,\n    \"period_threshold\": 33346621,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ipsum nulla occaecat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor deserunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"proident eiusmod commodo ad\",\n   \"alias\": \"sint commodo cillum in\"\n  },\n  {\n   \"company_id\": -82633741,\n   \"integration_data\": {},\n   \"company_name\": \"consequat\",\n   \"task_details\": {\n    \"type\": -36445408,\n    \"group_list\": [\n     {\n      \"text\": \"velit in est\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in ut enim ad nisi\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 16417451.43540287,\n    \"safe_stock\": -57478075,\n    \"period_threshold\": -65259065,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sint dolor ea\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"mollit in v\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"nisi in\",\n   \"alias\": \"officia magna irure et Ut\"\n  }\n ],\n \"trace_id\": \"aute proident magna minim\",\n \"page\": {\n  \"type\": \"in incididunt ut culpa fugiat\",\n  \"size\": 78904368,\n  \"current\": -22124247,\n  \"has_next\": true,\n  \"item_total\": 21724852,\n  \"next_id\": \"magna commodo amet laboris enim\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e8d7fb7a-025c-433a-8ec4-d544037e279a",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1959-04-26T07:58:01.249Z\",\n \"status\": -9787443,\n \"error\": \"laborum esse\",\n \"exception\": \"exercitati\",\n \"message\": \"cillum in pariatur occaecat\",\n \"total_time_taken_in_millis\": 39223136,\n \"http_status\": \"206 PARTIAL_CONTENT\",\n \"items\": [\n  {\n   \"company_id\": -19606408,\n   \"integration_data\": {},\n   \"company_name\": \"in dolore laborum\",\n   \"task_details\": {\n    \"type\": 29189792,\n    \"group_list\": [\n     {\n      \"text\": \"officia Lorem\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"mollit ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -98538564.19303173,\n    \"safe_stock\": 60638841,\n    \"period_threshold\": -38780054,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"consectetur laboris labore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"occaecat exercitation\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"culpa in\",\n   \"alias\": \"sint esse tempor cillu\"\n  },\n  {\n   \"company_id\": 38298667,\n   \"integration_data\": {},\n   \"company_name\": \"qui aute dolore esse sunt\",\n   \"task_details\": {\n    \"type\": 82989101,\n    \"group_list\": [\n     {\n      \"text\": \"adipisicing deserunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in ex do\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 7358475.0195748955,\n    \"safe_stock\": 45653550,\n    \"period_threshold\": 90125254,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"enim ut Excepteur nostrud\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"irure veniam reprehenderit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"cupidatat culpa\",\n   \"alias\": \"laborum consectetur Ut irure\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 98893900,\n   \"integration_data\": {},\n   \"company_name\": \"in\",\n   \"task_details\": {\n    \"type\": -29640362,\n    \"group_list\": [\n     {\n      \"text\": \"velit ad esse\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ea\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 97983689.81609687,\n    \"safe_stock\": -67091917,\n    \"period_threshold\": 33346621,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ipsum nulla occaecat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor deserunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"proident eiusmod commodo ad\",\n   \"alias\": \"sint commodo cillum in\"\n  },\n  {\n   \"company_id\": -82633741,\n   \"integration_data\": {},\n   \"company_name\": \"consequat\",\n   \"task_details\": {\n    \"type\": -36445408,\n    \"group_list\": [\n     {\n      \"text\": \"velit in est\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in ut enim ad nisi\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 16417451.43540287,\n    \"safe_stock\": -57478075,\n    \"period_threshold\": -65259065,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sint dolor ea\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"mollit in v\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"nisi in\",\n   \"alias\": \"officia magna irure et Ut\"\n  }\n ],\n \"trace_id\": \"aute proident magna minim\",\n \"page\": {\n  \"type\": \"in incididunt ut culpa fugiat\",\n  \"size\": 78904368,\n  \"current\": -22124247,\n  \"has_next\": true,\n  \"item_total\": 21724852,\n  \"next_id\": \"magna commodo amet laboris enim\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "7c8f41fe-a10f-4d30-b584-9b1cbe59cba3",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "44e34e0c-ffe6-4090-af72-ec643d60db44",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2004-07-06T05:52:15.580Z\",\n \"status\": 71318367,\n \"error\": \"laboris nisi\",\n \"exception\": \"consequat\",\n \"message\": \"eiusmod\",\n \"total_time_taken_in_millis\": -11977251,\n \"http_status\": \"408 REQUEST_TIMEOUT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"et sed\",\n \"page\": {\n  \"type\": \"in\",\n  \"size\": -62760428,\n  \"current\": 19799887,\n  \"has_next\": true,\n  \"item_total\": -35358640,\n  \"next_id\": \"nulla tempor eiusmod\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "aa4bc2c7-d077-4732-81b7-f139d2090acb",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2004-07-06T05:52:15.580Z\",\n \"status\": 71318367,\n \"error\": \"laboris nisi\",\n \"exception\": \"consequat\",\n \"message\": \"eiusmod\",\n \"total_time_taken_in_millis\": -11977251,\n \"http_status\": \"408 REQUEST_TIMEOUT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"et sed\",\n \"page\": {\n  \"type\": \"in\",\n  \"size\": -62760428,\n  \"current\": 19799887,\n  \"has_next\": true,\n  \"item_total\": -35358640,\n  \"next_id\": \"nulla tempor eiusmod\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9830254f-38d1-4dda-bd6f-246e6ee3f920",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2004-07-06T05:52:15.580Z\",\n \"status\": 71318367,\n \"error\": \"laboris nisi\",\n \"exception\": \"consequat\",\n \"message\": \"eiusmod\",\n \"total_time_taken_in_millis\": -11977251,\n \"http_status\": \"408 REQUEST_TIMEOUT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"et sed\",\n \"page\": {\n  \"type\": \"in\",\n  \"size\": -62760428,\n  \"current\": 19799887,\n  \"has_next\": true,\n  \"item_total\": -35358640,\n  \"next_id\": \"nulla tempor eiusmod\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "0791940a-92cd-4661-8275-0a9f3b9f0a01",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "f0d46c5a-364b-4ab2-90ca-0336b22d75a9",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2002-11-16T00:50:22.388Z\",\n \"status\": 69192897,\n \"error\": \"velit aliqua\",\n \"exception\": \"sunt mollit qui\",\n \"message\": \"dolo\",\n \"total_time_taken_in_millis\": -40505746,\n \"http_status\": \"431 REQUEST_HEADER_FIELDS_TOO_LARGE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"nostrud laborum magna mollit\",\n \"page\": {\n  \"type\": \"in dolore aliquip ullamco laborum\",\n  \"size\": -36761748,\n  \"current\": -83307775,\n  \"has_next\": false,\n  \"item_total\": 73595545,\n  \"next_id\": \"ullamco fugiat non\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "980a8dad-d623-4114-a723-d743e9b66429",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2002-11-16T00:50:22.388Z\",\n \"status\": 69192897,\n \"error\": \"velit aliqua\",\n \"exception\": \"sunt mollit qui\",\n \"message\": \"dolo\",\n \"total_time_taken_in_millis\": -40505746,\n \"http_status\": \"431 REQUEST_HEADER_FIELDS_TOO_LARGE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"nostrud laborum magna mollit\",\n \"page\": {\n  \"type\": \"in dolore aliquip ullamco laborum\",\n  \"size\": -36761748,\n  \"current\": -83307775,\n  \"has_next\": false,\n  \"item_total\": 73595545,\n  \"next_id\": \"ullamco fugiat non\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1e7be8ff-3be6-4422-86e5-6cd842f0d97c",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2002-11-16T00:50:22.388Z\",\n \"status\": 69192897,\n \"error\": \"velit aliqua\",\n \"exception\": \"sunt mollit qui\",\n \"message\": \"dolo\",\n \"total_time_taken_in_millis\": -40505746,\n \"http_status\": \"431 REQUEST_HEADER_FIELDS_TOO_LARGE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"nostrud laborum magna mollit\",\n \"page\": {\n  \"type\": \"in dolore aliquip ullamco laborum\",\n  \"size\": -36761748,\n  \"current\": -83307775,\n  \"has_next\": false,\n  \"item_total\": 73595545,\n  \"next_id\": \"ullamco fugiat non\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "fbbe51bd-2197-49b9-b564-9f6141a4d6e7",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2002-11-16T00:50:22.388Z\",\n \"status\": 69192897,\n \"error\": \"velit aliqua\",\n \"exception\": \"sunt mollit qui\",\n \"message\": \"dolo\",\n \"total_time_taken_in_millis\": -40505746,\n \"http_status\": \"431 REQUEST_HEADER_FIELDS_TOO_LARGE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"nostrud laborum magna mollit\",\n \"page\": {\n  \"type\": \"in dolore aliquip ullamco laborum\",\n  \"size\": -36761748,\n  \"current\": -83307775,\n  \"has_next\": false,\n  \"item_total\": 73595545,\n  \"next_id\": \"ullamco fugiat non\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3675511c-5f4d-41c4-b46a-f1ff8e2ba0f9",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2002-11-16T00:50:22.388Z\",\n \"status\": 69192897,\n \"error\": \"velit aliqua\",\n \"exception\": \"sunt mollit qui\",\n \"message\": \"dolo\",\n \"total_time_taken_in_millis\": -40505746,\n \"http_status\": \"431 REQUEST_HEADER_FIELDS_TOO_LARGE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"nostrud laborum magna mollit\",\n \"page\": {\n  \"type\": \"in dolore aliquip ullamco laborum\",\n  \"size\": -36761748,\n  \"current\": -83307775,\n  \"has_next\": false,\n  \"item_total\": 73595545,\n  \"next_id\": \"ullamco fugiat non\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx0.de"
    }
  ],
  "info": {
    "_postman_id": "3a2cb52a-fe61-4617-9359-370631a06358",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
