{
  "item": [
    {
      "id": "02ed258f-2341-4e79-bc5a-1c468ccb5176",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "5802308c-a50c-4f7f-ac03-fcf9c11b100c",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "630e5a58-748c-42ab-abcc-78ced33e1bee",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "incididunt et laboris consectetur",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1a2ae2ce-af19-4065-a713-7a0f016071ab",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "incididunt et laboris consectetur",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "fb78a1c6-77da-4e50-8107-f79d366d4d15",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "incididunt et laboris consectetur",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "571ffc98-68ff-4f28-82fb-8ac7b2225e7d",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "f80fd886-e44f-43dd-a999-8337a57c3440",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "e8155a0c-1b1e-4ac9-9da2-33de1407d4aa",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "58cbc289-ef59-404b-9dbc-a124a8c5dae6",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "06829e11-b751-4b74-8183-0fbe324908c2",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -17905584,\n   \"event_name\": \"aliquip amet Lorem\",\n   \"event_type\": \"Excepteur\",\n   \"event_category\": \"officia\",\n   \"version\": \"Duis occaecat elit\",\n   \"display_name\": \"deserunt in Lorem irure ad\",\n   \"description\": \"in non\",\n   \"created_on\": \"velit cillum ad do\"\n  },\n  {\n   \"id\": -26603879,\n   \"event_name\": \"est ali\",\n   \"event_type\": \"ullamco veniam ut\",\n   \"event_category\": \"eiusmod consequat dolor aliquip\",\n   \"version\": \"amet in esse\",\n   \"display_name\": \"tempor exercitation ad dolor adipisicing\",\n   \"description\": \"fugiat cillu\",\n   \"created_on\": \"ex tempor nisi\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "8131d632-45c3-4806-bacb-06e65d142454",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "b56325a3-ef9a-4e73-b878-e81597a7a995",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 43811686,\n   \"event_name\": \"minim aute nulla ut\",\n   \"event_type\": \"commodo eiusmod\",\n   \"event_category\": \"est velit sit\",\n   \"version\": \"nisi\",\n   \"display_name\": \"id\",\n   \"description\": \"velit\",\n   \"created_on\": \"in Excepteur proident\"\n  },\n  {\n   \"id\": 13588089,\n   \"event_name\": \"Excepteur aliqua voluptate dolor occaecat\",\n   \"event_type\": \"dolor elit non consequat\",\n   \"event_category\": \"dolor anim deserunt\",\n   \"version\": \"ipsum dolor ullamco dolor reprehenderit\",\n   \"display_name\": \"non\",\n   \"description\": \"do commodo\",\n   \"created_on\": \"ipsum aliqua Ut\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "3f7c94ef-862a-4fa7-bd9a-f2df75995fe2",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "f27c7cd2-31a0-4e0c-9ffa-c9eac9a49b19",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "4bba5af2-3a0e-4d91-a4d0-3e083e2d98ed",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1973-05-18T03:24:10.624Z\",\n \"status\": -43431151,\n \"error\": \"officia veniam\",\n \"exception\": \"sed culpa aliquip\",\n \"message\": \"nulla sunt\",\n \"total_time_taken_in_millis\": -89068134,\n \"http_status\": \"405 METHOD_NOT_ALLOWED\",\n \"items\": {\n  \"company_id\": -7390669,\n  \"integration_data\": {},\n  \"company_name\": \"in pariatur dolor\",\n  \"task_details\": {\n   \"type\": -23893455,\n   \"group_list\": [\n    {\n     \"text\": \"velit veniam ipsum\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"voluptate\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 15957673.447249249,\n   \"safe_stock\": -99638132,\n   \"period_threshold\": 17330677,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"ut in dolore ea esse\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"laborum amet par\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"est\",\n  \"alias\": \"\"\n },\n \"payload\": {\n  \"company_id\": -19470357,\n  \"integration_data\": {},\n  \"company_name\": \"aliqua velit officia consequat elit\",\n  \"task_details\": {\n   \"type\": -27497151,\n   \"group_list\": [\n    {\n     \"text\": \"exercitation est ullamco enim\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"anim in occaecat adipisicing\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 91179069.84406376,\n   \"safe_stock\": 86882845,\n   \"period_threshold\": 67556114,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"consectetur p\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"exercitation qui laboris\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"laborum magna\",\n  \"alias\": \"qui in anim enim\"\n },\n \"trace_id\": \"consectetur dolor Excepteur\",\n \"page\": {\n  \"type\": \"eiusmod\",\n  \"size\": 40313743,\n  \"current\": 53722154,\n  \"has_next\": false,\n  \"item_total\": 73955854,\n  \"next_id\": \"ullamco reprehenderit labore magna\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "021b738d-2c01-4d73-bdc6-e4c4c8690d8c",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1973-05-18T03:24:10.624Z\",\n \"status\": -43431151,\n \"error\": \"officia veniam\",\n \"exception\": \"sed culpa aliquip\",\n \"message\": \"nulla sunt\",\n \"total_time_taken_in_millis\": -89068134,\n \"http_status\": \"405 METHOD_NOT_ALLOWED\",\n \"items\": {\n  \"company_id\": -7390669,\n  \"integration_data\": {},\n  \"company_name\": \"in pariatur dolor\",\n  \"task_details\": {\n   \"type\": -23893455,\n   \"group_list\": [\n    {\n     \"text\": \"velit veniam ipsum\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"voluptate\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 15957673.447249249,\n   \"safe_stock\": -99638132,\n   \"period_threshold\": 17330677,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"ut in dolore ea esse\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"laborum amet par\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"est\",\n  \"alias\": \"\"\n },\n \"payload\": {\n  \"company_id\": -19470357,\n  \"integration_data\": {},\n  \"company_name\": \"aliqua velit officia consequat elit\",\n  \"task_details\": {\n   \"type\": -27497151,\n   \"group_list\": [\n    {\n     \"text\": \"exercitation est ullamco enim\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"anim in occaecat adipisicing\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 91179069.84406376,\n   \"safe_stock\": 86882845,\n   \"period_threshold\": 67556114,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"consectetur p\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"exercitation qui laboris\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"laborum magna\",\n  \"alias\": \"qui in anim enim\"\n },\n \"trace_id\": \"consectetur dolor Excepteur\",\n \"page\": {\n  \"type\": \"eiusmod\",\n  \"size\": 40313743,\n  \"current\": 53722154,\n  \"has_next\": false,\n  \"item_total\": 73955854,\n  \"next_id\": \"ullamco reprehenderit labore magna\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "073d7067-e537-40a9-b4d9-fcf16a71e341",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1973-05-18T03:24:10.624Z\",\n \"status\": -43431151,\n \"error\": \"officia veniam\",\n \"exception\": \"sed culpa aliquip\",\n \"message\": \"nulla sunt\",\n \"total_time_taken_in_millis\": -89068134,\n \"http_status\": \"405 METHOD_NOT_ALLOWED\",\n \"items\": {\n  \"company_id\": -7390669,\n  \"integration_data\": {},\n  \"company_name\": \"in pariatur dolor\",\n  \"task_details\": {\n   \"type\": -23893455,\n   \"group_list\": [\n    {\n     \"text\": \"velit veniam ipsum\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"voluptate\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 15957673.447249249,\n   \"safe_stock\": -99638132,\n   \"period_threshold\": 17330677,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"ut in dolore ea esse\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"laborum amet par\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"est\",\n  \"alias\": \"\"\n },\n \"payload\": {\n  \"company_id\": -19470357,\n  \"integration_data\": {},\n  \"company_name\": \"aliqua velit officia consequat elit\",\n  \"task_details\": {\n   \"type\": -27497151,\n   \"group_list\": [\n    {\n     \"text\": \"exercitation est ullamco enim\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"anim in occaecat adipisicing\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 91179069.84406376,\n   \"safe_stock\": 86882845,\n   \"period_threshold\": 67556114,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"consectetur p\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"exercitation qui laboris\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"laborum magna\",\n  \"alias\": \"qui in anim enim\"\n },\n \"trace_id\": \"consectetur dolor Excepteur\",\n \"page\": {\n  \"type\": \"eiusmod\",\n  \"size\": 40313743,\n  \"current\": 53722154,\n  \"has_next\": false,\n  \"item_total\": 73955854,\n  \"next_id\": \"ullamco reprehenderit labore magna\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "70909b21-b19e-467b-9c7e-87cc67c9106e",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "ea4ffa84-927a-42f1-8e07-960e3dc2dec2",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1955-05-07T20:13:00.825Z\",\n \"status\": 72283722,\n \"error\": \"minim off\",\n \"exception\": \"qui commodo\",\n \"message\": \"consequat in sed quis\",\n \"total_time_taken_in_millis\": 77631407,\n \"http_status\": \"508 LOOP_DETECTED\",\n \"items\": [\n  {\n   \"company_id\": 40839699,\n   \"integration_data\": {},\n   \"company_name\": \"nostrud aliqua eiusmod in mollit\",\n   \"task_details\": {\n    \"type\": -22240972,\n    \"group_list\": [\n     {\n      \"text\": \"in eiusmod\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"officia in proident non\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 54971848.34934959,\n    \"safe_stock\": 83996010,\n    \"period_threshold\": -23402862,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"mollit sunt esse\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Excepteur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"cillum ut anim\",\n   \"alias\": \"laboris incididunt\"\n  },\n  {\n   \"company_id\": 45931459,\n   \"integration_data\": {},\n   \"company_name\": \"voluptate irure in Excepteur\",\n   \"task_details\": {\n    \"type\": 80294484,\n    \"group_list\": [\n     {\n      \"text\": \"voluptate U\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor officia nostrud eu\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 8177380.907085612,\n    \"safe_stock\": -37727771,\n    \"period_threshold\": 88575710,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"Excepteur in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ipsum anim ut reprehenderit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"amet commodo irure\",\n   \"alias\": \"quis labore ad\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -64187606,\n   \"integration_data\": {},\n   \"company_name\": \"id sit eiusmod\",\n   \"task_details\": {\n    \"type\": -3357712,\n    \"group_list\": [\n     {\n      \"text\": \"mollit exercitation commodo anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"esse pariatur minim laboris\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 83336218.49711904,\n    \"safe_stock\": -40772220,\n    \"period_threshold\": 94971702,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"adipisicing\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"minim labore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"dolore esse\",\n   \"alias\": \"esse pariatur incididunt ea\"\n  },\n  {\n   \"company_id\": -29744634,\n   \"integration_data\": {},\n   \"company_name\": \"de\",\n   \"task_details\": {\n    \"type\": 38582848,\n    \"group_list\": [\n     {\n      \"text\": \"dolore ad nulla magna i\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laboris aute labore mollit deserunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -76199147.61362088,\n    \"safe_stock\": -7943431,\n    \"period_threshold\": 52589784,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"culpa anim exercitation dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Lore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"dolor cillum elit eu\",\n   \"alias\": \"velit ullamco Duis voluptate deserunt\"\n  }\n ],\n \"trace_id\": \"cupidatat elit occaecat\",\n \"page\": {\n  \"type\": \"sint labore\",\n  \"size\": -26840426,\n  \"current\": 63282335,\n  \"has_next\": true,\n  \"item_total\": 70414674,\n  \"next_id\": \"adipisicing dolor cillum ipsum\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a5322026-349c-40ca-a2ad-0ed12c3e1847",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2013-10-12T23:35:56.205Z\",\n \"status\": 31455059,\n \"error\": \"pariatur veniam \",\n \"exception\": \"exercitation dolor\",\n \"message\": \"aliquip Duis\",\n \"total_time_taken_in_millis\": 39480769,\n \"http_status\": \"307 TEMPORARY_REDIRECT\",\n \"items\": [\n  {\n   \"company_id\": -9920632,\n   \"integration_data\": {},\n   \"company_name\": \"ea incididunt\",\n   \"task_details\": {\n    \"type\": 49585215,\n    \"group_list\": [\n     {\n      \"text\": \"voluptate sed sunt aute\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ullamco sed\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 21363581.05179684,\n    \"safe_stock\": -93410108,\n    \"period_threshold\": -88645279,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ad in commodo\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"voluptate mollit adipisicing quis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"et ipsum laborum sint\",\n   \"alias\": \"in do tempor sint labore\"\n  },\n  {\n   \"company_id\": -21008790,\n   \"integration_data\": {},\n   \"company_name\": \"aliquip occaecat\",\n   \"task_details\": {\n    \"type\": 82261749,\n    \"group_list\": [\n     {\n      \"text\": \"Lorem cupidatat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proident ut minim ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 39383748.94059545,\n    \"safe_stock\": -78363145,\n    \"period_threshold\": -78647454,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ut ea ve\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"officia cupidatat est\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"et cillum dolore in\",\n   \"alias\": \"dolor proident\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 12631998,\n   \"integration_data\": {},\n   \"company_name\": \"in ut aute\",\n   \"task_details\": {\n    \"type\": -16300633,\n    \"group_list\": [\n     {\n      \"text\": \"adipisicing\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliquip in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 19757742.293313548,\n    \"safe_stock\": -58500833,\n    \"period_threshold\": 67144148,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"eiusmod\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"pariatur dolore eiusmod Excepteu\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"laborum ea\",\n   \"alias\": \"sint Ut qui\"\n  },\n  {\n   \"company_id\": 68283821,\n   \"integration_data\": {},\n   \"company_name\": \"anim\",\n   \"task_details\": {\n    \"type\": -88498645,\n    \"group_list\": [\n     {\n      \"text\": \"ut in dolore voluptate commodo\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laborum consequat quis sint\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -65929460.17897732,\n    \"safe_stock\": -16878413,\n    \"period_threshold\": -52298730,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"veniam deserunt mollit cupidatat et\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore occaecat do et\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"eiusmod ut culpa\",\n   \"alias\": \"d\"\n  }\n ],\n \"trace_id\": \"ut nisi\",\n \"page\": {\n  \"type\": \"occaecat elit\",\n  \"size\": -86497502,\n  \"current\": -10614205,\n  \"has_next\": false,\n  \"item_total\": 58546823,\n  \"next_id\": \"laborum minim\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d530242e-d199-45b3-819d-af5f7c61f883",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2013-10-12T23:35:56.205Z\",\n \"status\": 31455059,\n \"error\": \"pariatur veniam \",\n \"exception\": \"exercitation dolor\",\n \"message\": \"aliquip Duis\",\n \"total_time_taken_in_millis\": 39480769,\n \"http_status\": \"307 TEMPORARY_REDIRECT\",\n \"items\": [\n  {\n   \"company_id\": -9920632,\n   \"integration_data\": {},\n   \"company_name\": \"ea incididunt\",\n   \"task_details\": {\n    \"type\": 49585215,\n    \"group_list\": [\n     {\n      \"text\": \"voluptate sed sunt aute\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ullamco sed\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 21363581.05179684,\n    \"safe_stock\": -93410108,\n    \"period_threshold\": -88645279,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ad in commodo\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"voluptate mollit adipisicing quis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"et ipsum laborum sint\",\n   \"alias\": \"in do tempor sint labore\"\n  },\n  {\n   \"company_id\": -21008790,\n   \"integration_data\": {},\n   \"company_name\": \"aliquip occaecat\",\n   \"task_details\": {\n    \"type\": 82261749,\n    \"group_list\": [\n     {\n      \"text\": \"Lorem cupidatat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proident ut minim ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 39383748.94059545,\n    \"safe_stock\": -78363145,\n    \"period_threshold\": -78647454,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ut ea ve\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"officia cupidatat est\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"et cillum dolore in\",\n   \"alias\": \"dolor proident\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 12631998,\n   \"integration_data\": {},\n   \"company_name\": \"in ut aute\",\n   \"task_details\": {\n    \"type\": -16300633,\n    \"group_list\": [\n     {\n      \"text\": \"adipisicing\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliquip in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 19757742.293313548,\n    \"safe_stock\": -58500833,\n    \"period_threshold\": 67144148,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"eiusmod\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"pariatur dolore eiusmod Excepteu\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"laborum ea\",\n   \"alias\": \"sint Ut qui\"\n  },\n  {\n   \"company_id\": 68283821,\n   \"integration_data\": {},\n   \"company_name\": \"anim\",\n   \"task_details\": {\n    \"type\": -88498645,\n    \"group_list\": [\n     {\n      \"text\": \"ut in dolore voluptate commodo\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laborum consequat quis sint\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -65929460.17897732,\n    \"safe_stock\": -16878413,\n    \"period_threshold\": -52298730,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"veniam deserunt mollit cupidatat et\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore occaecat do et\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"eiusmod ut culpa\",\n   \"alias\": \"d\"\n  }\n ],\n \"trace_id\": \"ut nisi\",\n \"page\": {\n  \"type\": \"occaecat elit\",\n  \"size\": -86497502,\n  \"current\": -10614205,\n  \"has_next\": false,\n  \"item_total\": 58546823,\n  \"next_id\": \"laborum minim\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "0a8fbea5-9548-47fe-ad76-e17e3611cc6e",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "2a4ca92d-1d21-4a29-94f4-3ca4ac529aea",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1966-08-28T10:17:36.642Z\",\n \"status\": 91064356,\n \"error\": \"laboris do\",\n \"exception\": \"qui anim commodo ut\",\n \"message\": \"ad adipisicing\",\n \"total_time_taken_in_millis\": -61976111,\n \"http_status\": \"302 FOUND\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"anim aliquip labore\",\n \"page\": {\n  \"type\": \"nisi culpa laboris est\",\n  \"size\": -66008656,\n  \"current\": 56374354,\n  \"has_next\": false,\n  \"item_total\": -29030967,\n  \"next_id\": \"nulla ex quis aliquip dolor\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "66dcb95c-477f-4c31-967c-0125dc6084f9",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1966-08-28T10:17:36.642Z\",\n \"status\": 91064356,\n \"error\": \"laboris do\",\n \"exception\": \"qui anim commodo ut\",\n \"message\": \"ad adipisicing\",\n \"total_time_taken_in_millis\": -61976111,\n \"http_status\": \"302 FOUND\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"anim aliquip labore\",\n \"page\": {\n  \"type\": \"nisi culpa laboris est\",\n  \"size\": -66008656,\n  \"current\": 56374354,\n  \"has_next\": false,\n  \"item_total\": -29030967,\n  \"next_id\": \"nulla ex quis aliquip dolor\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "349b659f-4d10-457b-91b8-1e24087ed352",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1966-08-28T10:17:36.642Z\",\n \"status\": 91064356,\n \"error\": \"laboris do\",\n \"exception\": \"qui anim commodo ut\",\n \"message\": \"ad adipisicing\",\n \"total_time_taken_in_millis\": -61976111,\n \"http_status\": \"302 FOUND\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"anim aliquip labore\",\n \"page\": {\n  \"type\": \"nisi culpa laboris est\",\n  \"size\": -66008656,\n  \"current\": 56374354,\n  \"has_next\": false,\n  \"item_total\": -29030967,\n  \"next_id\": \"nulla ex quis aliquip dolor\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "7db8358c-2d16-4f7c-9328-b791c1ee8fcf",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "2b4853ec-fbff-402c-938e-4944ab5ba495",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1977-08-16T13:50:42.797Z\",\n \"status\": 25916625,\n \"error\": \"id exercitation\",\n \"exception\": \"ut id nostrud mollit\",\n \"message\": \"ad sed\",\n \"total_time_taken_in_millis\": -13171734,\n \"http_status\": \"205 RESET_CONTENT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"in dolor\",\n \"page\": {\n  \"type\": \"Excepteur exercitation\",\n  \"size\": 15901747,\n  \"current\": -233239,\n  \"has_next\": false,\n  \"item_total\": 49713513,\n  \"next_id\": \"ullamco Ut tempor\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3897e794-8621-44e1-993c-26d040264577",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1977-08-16T13:50:42.797Z\",\n \"status\": 25916625,\n \"error\": \"id exercitation\",\n \"exception\": \"ut id nostrud mollit\",\n \"message\": \"ad sed\",\n \"total_time_taken_in_millis\": -13171734,\n \"http_status\": \"205 RESET_CONTENT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"in dolor\",\n \"page\": {\n  \"type\": \"Excepteur exercitation\",\n  \"size\": 15901747,\n  \"current\": -233239,\n  \"has_next\": false,\n  \"item_total\": 49713513,\n  \"next_id\": \"ullamco Ut tempor\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "87a07300-481a-4cfa-bad3-6b6c39c0ee5b",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1977-08-16T13:50:42.797Z\",\n \"status\": 25916625,\n \"error\": \"id exercitation\",\n \"exception\": \"ut id nostrud mollit\",\n \"message\": \"ad sed\",\n \"total_time_taken_in_millis\": -13171734,\n \"http_status\": \"205 RESET_CONTENT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"in dolor\",\n \"page\": {\n  \"type\": \"Excepteur exercitation\",\n  \"size\": 15901747,\n  \"current\": -233239,\n  \"has_next\": false,\n  \"item_total\": 49713513,\n  \"next_id\": \"ullamco Ut tempor\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "0075e357-e122-4346-9124-4612c93b2187",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1977-08-16T13:50:42.797Z\",\n \"status\": 25916625,\n \"error\": \"id exercitation\",\n \"exception\": \"ut id nostrud mollit\",\n \"message\": \"ad sed\",\n \"total_time_taken_in_millis\": -13171734,\n \"http_status\": \"205 RESET_CONTENT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"in dolor\",\n \"page\": {\n  \"type\": \"Excepteur exercitation\",\n  \"size\": 15901747,\n  \"current\": -233239,\n  \"has_next\": false,\n  \"item_total\": 49713513,\n  \"next_id\": \"ullamco Ut tempor\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "7ef1abd1-ea11-4328-b4ad-4adf782aac28",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1977-08-16T13:50:42.797Z\",\n \"status\": 25916625,\n \"error\": \"id exercitation\",\n \"exception\": \"ut id nostrud mollit\",\n \"message\": \"ad sed\",\n \"total_time_taken_in_millis\": -13171734,\n \"http_status\": \"205 RESET_CONTENT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"in dolor\",\n \"page\": {\n  \"type\": \"Excepteur exercitation\",\n  \"size\": 15901747,\n  \"current\": -233239,\n  \"has_next\": false,\n  \"item_total\": 49713513,\n  \"next_id\": \"ullamco Ut tempor\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fynd.com"
    }
  ],
  "info": {
    "_postman_id": "9aefea55-44cb-445c-ad8c-050def023341",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
