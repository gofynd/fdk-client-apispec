{
  "item": [
    {
      "id": "0ea26ad9-9cd4-42a0-80eb-f77d3d780b81",
      "name": "Billing",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "37fa995f-c2ba-4d40-92cc-d7200c1e29d3",
          "name": "getStandardPlans | Get Standard/Public Plans",
          "request": {
            "name": "getStandardPlans | Get Standard/Public Plans",
            "description": {
              "content": "Get Standard/Public Plans.\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "public",
                "billing",
                "v1.0",
                "plan",
                "detailed-list"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "platform",
                  "value": "<string>",
                  "description": "(Required) The type of platform for which plans are requested."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "17ae40fb-9d3b-4d5b-a01e-fe1084538a40",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform",
                      "value": "mobile/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"plans\": [\n    {\n      \"recurring\": {\n        \"interval\": \"month\",\n        \"interval_count\": 3\n      },\n      \"is_trial_plan\": true,\n      \"plan_group\": \"default\",\n      \"tag_lines\": [\n        \"This is 2020won trial plan\",\n        \"This is 2020won trial plan\"\n      ],\n      \"currency\": \"INR\",\n      \"is_active\": true,\n      \"is_visible\": false,\n      \"trial_period\": 30,\n      \"addons\": [\n        \"non pariatur sed aliqua\",\n        \"occaecat veniam\"\n      ],\n      \"tags\": [\n        \"officia\",\n        \"ullamco tempor\"\n      ],\n      \"type\": \"public\",\n      \"country\": \"IN\",\n      \"_id\": \"5f0dcd866173cb003706098f\",\n      \"name\": \"30 day Trial\",\n      \"description\": \"30 day Trial\",\n      \"amount\": 0,\n      \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n      \"created_at\": \"2020-07-14T15:21:42.959Z\",\n      \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n    },\n    {\n      \"recurring\": {\n        \"interval\": \"month\",\n        \"interval_count\": 3\n      },\n      \"is_trial_plan\": true,\n      \"plan_group\": \"default\",\n      \"tag_lines\": [\n        \"This is 2020won trial plan\",\n        \"This is 2020won trial plan\"\n      ],\n      \"currency\": \"INR\",\n      \"is_active\": true,\n      \"is_visible\": false,\n      \"trial_period\": 30,\n      \"addons\": [\n        \"magna consequat anim\",\n        \"pariatur elit\"\n      ],\n      \"tags\": [\n        \"aliquip dolore cillum\",\n        \"do officia ex eu\"\n      ],\n      \"type\": \"public\",\n      \"country\": \"IN\",\n      \"_id\": \"5f0dcd866173cb003706098f\",\n      \"name\": \"30 day Trial\",\n      \"description\": \"30 day Trial\",\n      \"amount\": 0,\n      \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n      \"created_at\": \"2020-07-14T15:21:42.959Z\",\n      \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n    }\n  ],\n  \"trial_plan\": {\n    \"recurring\": {\n      \"interval\": \"month\",\n      \"interval_count\": 3\n    },\n    \"is_trial_plan\": true,\n    \"plan_group\": \"default\",\n    \"tag_lines\": [\n      \"This is 2020won trial plan\",\n      \"This is 2020won trial plan\"\n    ],\n    \"currency\": \"INR\",\n    \"is_active\": true,\n    \"is_visible\": false,\n    \"trial_period\": 30,\n    \"addons\": [\n      \"in adipisicin\",\n      \"reprehenderit dolore aliqua dolor ex\"\n    ],\n    \"tags\": [\n      \"fugiat sint\",\n      \"eiusmod Ut exercitation nisi\"\n    ],\n    \"type\": \"public\",\n    \"country\": \"IN\",\n    \"_id\": \"5f0dcd866173cb003706098f\",\n    \"name\": \"30 day Trial\",\n    \"description\": \"30 day Trial\",\n    \"amount\": 0,\n    \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n    \"created_at\": \"2020-07-14T15:21:42.959Z\",\n    \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n  },\n  \"component_groups\": [\n    \"Key Features\",\n    \"Key Features\"\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "284163d9-679f-473a-9a28-6bbb54e7a81b",
              "name": "Resource not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform",
                      "value": "mobile/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Reason is required\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f1f90b78-46b2-42ec-a3ac-a379cb0e3c3d",
              "name": "Internal server error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform",
                      "value": "mobile/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Opps something went wrong !!\",\n  \"code\": \"INTERNAL_SERVER_ERROR\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "df753386-2237-4b34-94f0-7fc3ccb9135b",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "26769d2f-f830-4832-a9d0-9ebb5d292cd3",
          "name": "searchApplication | Search application",
          "request": {
            "name": "searchApplication | Search application",
            "description": {
              "content": "Provide application name or domain url.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "85ee032f-c936-4a16-8a78-15db06f03d9c",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "irure nostrud",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"application\": {\n    \"website\": {\n      \"enabled\": true,\n      \"basepath\": \"/\"\n    },\n    \"cors\": {\n      \"domains\": []\n    },\n    \"auth\": {\n      \"enabled\": true\n    },\n    \"description\": \"test\",\n    \"channel_type\": \"store\",\n    \"cache_ttl\": -1,\n    \"internal\": false,\n    \"is_active\": true,\n    \"mode\": \"live\",\n    \"_id\": \"620b931ee7bfb11f910bf4a3\",\n    \"company_id\": 2,\n    \"name\": \"test\",\n    \"owner\": \"5b9b98150df588546aaea6d2\",\n    \"logo\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"favicon\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"banner\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n    },\n    \"token\": \"tPQv0nc23\",\n    \"tokens\": [\n      {\n        \"token\": \"tPQv0nc23\",\n        \"created_at\": \"2022-02-15T11:48:46.909Z\"\n      }\n    ],\n    \"domains\": [\n      {\n        \"verified\": true,\n        \"is_primary\": true,\n        \"is_shortlink\": true,\n        \"_id\": \"620b931ee7bfb11f910bf4a4\",\n        \"name\": \"qckvv5lhp.hostfynd.dev\"\n      }\n    ],\n    \"redirections\": [],\n    \"meta\": [],\n    \"created_at\": \"2022-02-15T11:48:46.909Z\",\n    \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n    \"__v\": 0,\n    \"domain\": {\n      \"verified\": true,\n      \"is_primary\": true,\n      \"is_shortlink\": true,\n      \"_id\": \"620b931ee7bfb11f910bf4a4\",\n      \"name\": \"qckvv5lhp.hostfynd.dev\"\n    },\n    \"id\": \"620b931ee7bfb11f910bf4a3\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "56baab45-040f-43ac-86ff-39b6d859dcaa",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "irure nostrud",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"Invalid application domain or id.\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "8f079ec9-9680-4a26-b395-508d0014f6c4",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "irure nostrud",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"No application found\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "4f864515-2c12-40d0-b8fc-b94b86c48007",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {
              "content": "Get Location configuration",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "86a07bad-5db3-4fec-9a67-a91d1b38ea37",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"items\": [\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"officia veniam cupidatat\",\n      \"phone_code\": \"990999092\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"esse\",\n      \"country_code\": \"in sed\",\n      \"latitude\": \"ad in nisi do\",\n      \"longitude\": \"sit in pariatur tempor aliquip\"\n    },\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"Lorem et\",\n      \"phone_code\": \"990999092\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"Excepteur eu proident Ut\",\n      \"country_code\": \"anim eu proident\",\n      \"latitude\": \"cil\",\n      \"longitude\": \"dolor minim\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "c30e164b-a39b-4ab9-8577-405c8c91fde7",
      "name": "Content",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "dd8b8cd6-d82f-4e2a-8fa4-81a9c1ecc8e9",
          "name": "getCredentialsByEntity | Get credentials to power chat support systems",
          "request": {
            "name": "getCredentialsByEntity | Get credentials to power chat support systems",
            "description": {
              "content": "Get credentials for support system",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "public",
                "content",
                "credentials",
                ":entity"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "entity",
                  "description": "(Required) Server Type"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "16f1350c-2aea-4d8f-8ede-d9c61d37381e",
              "name": "Success. Refer `CredentialsSchema` for more details.",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "content",
                    "credentials",
                    ":entity"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "entity",
                      "description": "(Required) Server Type"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"entity_type\": \"partner\",\n  \"type\": \"freshchat\",\n  \"is_enable\": true,\n  \"configuration\": {\n    \"token\": \"a3e4gf20b-d11g-4512-n3zq-03b9aa7e1yxz\",\n    \"siteId\": \"a3e8f20b-d97f-452f-bd72-03b9aa7e1bf0\",\n    \"host\": \"https://wchat.freshchat.com\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "4a2f45c6-5e1b-46f7-93af-9671cb57a997",
              "name": "Bad Request. See the error object in the response body to know the exact reason.",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "content",
                    "credentials",
                    ":entity"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "entity",
                      "description": "(Required) Server Type"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Oops! Something went wrong. Please try later\",\n  \"status\": 400,\n  \"code\": \"CX-1003\",\n  \"exception\": \"\",\n  \"info\": \"\",\n  \"request_id\": \"\",\n  \"stack_trace\": \"\",\n  \"meta\": {}\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "5dd44494-f1c4-43a8-8913-b1fff1833a33",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "e03942f7-68fd-4c76-8c9e-4d91be620f9e",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "78623cea-8a56-4df6-a7f8-6dff90c5b207",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1973-03-22T01:24:20.659Z\",\n  \"status\": -99920130,\n  \"error\": \"nisi deserunt occaecat proident\",\n  \"exception\": \"aliquip adipisicing Duis commodo\",\n  \"message\": \"ullamco occaecat Excepteur dolor\",\n  \"total_time_taken_in_millis\": -29196128,\n  \"http_status\": \"425 TOO_EARLY\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"aliqua voluptate\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2d376404-d70c-40d1-bd64-ff4e46ebb3a9",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1973-03-22T01:24:20.659Z\",\n  \"status\": -99920130,\n  \"error\": \"nisi deserunt occaecat proident\",\n  \"exception\": \"aliquip adipisicing Duis commodo\",\n  \"message\": \"ullamco occaecat Excepteur dolor\",\n  \"total_time_taken_in_millis\": -29196128,\n  \"http_status\": \"425 TOO_EARLY\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"aliqua voluptate\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f46cbe32-2dfe-441a-8fa6-27512e31ecfc",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1973-03-22T01:24:20.659Z\",\n  \"status\": -99920130,\n  \"error\": \"nisi deserunt occaecat proident\",\n  \"exception\": \"aliquip adipisicing Duis commodo\",\n  \"message\": \"ullamco occaecat Excepteur dolor\",\n  \"total_time_taken_in_millis\": -29196128,\n  \"http_status\": \"425 TOO_EARLY\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"aliqua voluptate\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "51b2a332-6446-4669-b423-13e5b3a92da7",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "208d13ba-7c30-475d-b7d1-f5973bc432d3",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2020-06-05T16:06:52.435Z\",\n  \"status\": -97027274,\n  \"error\": \"Excepteur proident velit\",\n  \"exception\": \"sint labore ex Ut\",\n  \"message\": \"proident deserunt commodo\",\n  \"total_time_taken_in_millis\": -29064923,\n  \"http_status\": \"506 VARIANT_ALSO_NEGOTIATES\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"sint\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3915cda9-655b-4581-9742-61ece45d94a2",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2020-06-05T16:06:52.435Z\",\n  \"status\": -97027274,\n  \"error\": \"Excepteur proident velit\",\n  \"exception\": \"sint labore ex Ut\",\n  \"message\": \"proident deserunt commodo\",\n  \"total_time_taken_in_millis\": -29064923,\n  \"http_status\": \"506 VARIANT_ALSO_NEGOTIATES\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"sint\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "62ce9821-525b-43b1-9bda-edcd7b48c0e8",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2020-06-05T16:06:52.435Z\",\n  \"status\": -97027274,\n  \"error\": \"Excepteur proident velit\",\n  \"exception\": \"sint labore ex Ut\",\n  \"message\": \"proident deserunt commodo\",\n  \"total_time_taken_in_millis\": -29064923,\n  \"http_status\": \"506 VARIANT_ALSO_NEGOTIATES\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"sint\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "32618de8-ba07-48cf-b058-aee99b52bec7",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2020-06-05T16:06:52.435Z\",\n  \"status\": -97027274,\n  \"error\": \"Excepteur proident velit\",\n  \"exception\": \"sint labore ex Ut\",\n  \"message\": \"proident deserunt commodo\",\n  \"total_time_taken_in_millis\": -29064923,\n  \"http_status\": \"506 VARIANT_ALSO_NEGOTIATES\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"sint\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "029d0d62-0002-4627-93a3-e9c076f41f35",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2020-06-05T16:06:52.435Z\",\n  \"status\": -97027274,\n  \"error\": \"Excepteur proident velit\",\n  \"exception\": \"sint labore ex Ut\",\n  \"message\": \"proident deserunt commodo\",\n  \"total_time_taken_in_millis\": -29064923,\n  \"http_status\": \"506 VARIANT_ALSO_NEGOTIATES\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"sint\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "71773775-5b86-40f5-9487-b2c8ede91764",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "40be9e32-8c04-4316-bc42-58df37cb5131",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2006-10-03T07:40:28.483Z\",\n  \"status\": 85663426,\n  \"error\": \"quis veniam reprehenderit\",\n  \"exception\": \"cupidatat deserunt\",\n  \"message\": \"dolore enim velit amet\",\n  \"total_time_taken_in_millis\": -2568262,\n  \"http_status\": \"208 ALREADY_REPORTED\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"aliquip qui ipsum exercitation\",\n      \"description\": \"in id\",\n      \"name\": \"aliquip ea sunt do\",\n      \"slug\": \"consequat dolore est exercitation magna\",\n      \"meta\": [\n        {\n          \"_id\": \"minim qui\",\n          \"name\": \"adipisicing pariatur cillum officia occaecat\",\n          \"value\": \"laboris in\"\n        },\n        {\n          \"_id\": \"est eu esse id\",\n          \"name\": \"aute\",\n          \"value\": \"ipsum irure cillum\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"consectetur\",\n        \"integration\": \"laboris\",\n        \"level\": \"ut in laborum ex veniam\",\n        \"uid\": 95502096,\n        \"opted\": true,\n        \"permissions\": [\n          \"adipisicing dolore enim ex\",\n          \"sit Ut dolor\"\n        ],\n        \"token\": \"exercitation qui elit Excepteur minim\",\n        \"name\": \"aute velit in labore dolor\",\n        \"stores\": [\n          {\n            \"_id\": \"officia ullamco anim\",\n            \"integration\": \"mollit in\",\n            \"level\": \"dolore\",\n            \"uid\": 97103251,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"minim\",\n            \"code\": \"cupidatat tempor\",\n            \"name\": \"Duis aliquip\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"cillum\",\n            \"integration\": \"veniam dolor\",\n            \"level\": \"ad non commodo\",\n            \"uid\": 21717202,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"nulla\",\n            \"code\": \"pariatur dolor magna ut in\",\n            \"name\": \"exercitation nulla minim e\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"Ut\",\n        \"integration\": \"exercitation consectetur amet\",\n        \"level\": \"occaecat\",\n        \"uid\": -72438979,\n        \"opted\": true,\n        \"permissions\": [\n          \"sunt laboris nostrud non\",\n          \"deserunt anim cupidatat consectetur\"\n        ],\n        \"token\": \"veniam laborum incididunt\",\n        \"name\": \"sint adipisicing ut Lorem\",\n        \"stores\": [\n          {\n            \"_id\": \"dolore voluptate non nisi ullamco\",\n            \"integration\": \"occaecat ipsum anim ea eu\",\n            \"level\": \"dolor aliqua\",\n            \"uid\": 75237540,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ipsum commodo des\",\n            \"code\": \"occaecat cupidatat dolor proident\",\n            \"name\": \"esse fugiat\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"anim incididunt Duis\",\n            \"integration\": \"est culpa nisi\",\n            \"level\": \"adipisicing sed veniam commodo deserunt\",\n            \"uid\": 31739789,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"proident\",\n            \"code\": \"in dolor esse\",\n            \"name\": \"sit pariatur repre\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"Lorem dolor laboris\",\n      \"description\": \"sint ad\",\n      \"name\": \"cillum\",\n      \"slug\": \"dolore\",\n      \"meta\": [\n        {\n          \"_id\": \"ad enim\",\n          \"name\": \"nulla elit\",\n          \"value\": \"laborum irure proident labore sunt\"\n        },\n        {\n          \"_id\": \"temp\",\n          \"name\": \"ve\",\n          \"value\": \"amet elit quis\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"laboris ut in consectetur\",\n        \"integration\": \"nisi in\",\n        \"level\": \"commodo tempor\",\n        \"uid\": 22550930,\n        \"opted\": false,\n        \"permissions\": [\n          \"reprehenderit\",\n          \"Lorem sunt dolor dolore\"\n        ],\n        \"token\": \"pariatur amet\",\n        \"name\": \"in consectetur culpa proident mollit\",\n        \"stores\": [\n          {\n            \"_id\": \"labore fugiat est magna\",\n            \"integration\": \"enim ea\",\n            \"level\": \"id proident occaecat\",\n            \"uid\": -25429032,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"adipisicing pariatur incididunt fugiat dolor\",\n            \"code\": \"incididunt ad\",\n            \"name\": \"id quis\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"officia in\",\n            \"integration\": \"in dolore irure id consequat\",\n            \"level\": \"sit mollit\",\n            \"uid\": -51655316,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ut occaecat magna culpa\",\n            \"code\": \"nisi occaecat ad \",\n            \"name\": \"quis sint\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"sunt occaecat dolor\",\n        \"integration\": \"officia eu\",\n        \"level\": \"nisi labore laborum nostrud\",\n        \"uid\": 10824925,\n        \"opted\": false,\n        \"permissions\": [\n          \"eu veniam co\",\n          \"eiusmod exercitation sed esse\"\n        ],\n        \"token\": \"Duis culpa ir\",\n        \"name\": \"aliqua cupidatat\",\n        \"stores\": [\n          {\n            \"_id\": \"esse\",\n            \"integration\": \"in culpa est\",\n            \"level\": \"do labore esse\",\n            \"uid\": -76126617,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"magna\",\n            \"code\": \"enim\",\n            \"name\": \"sunt velit dolor voluptate\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"occaecat minim culpa\",\n            \"integration\": \"qui ullamco consectetur\",\n            \"level\": \"est\",\n            \"uid\": 56193705,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"commodo tempor anim amet qui\",\n            \"code\": \"dolor\",\n            \"name\": \"reprehenderit sint consequat\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"occaecat consectetur\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ab53213c-83d0-4d0e-9847-fc95afbb5c45",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2019-10-24T14:18:08.733Z\",\n  \"status\": -7849584,\n  \"error\": \"sunt sit id in\",\n  \"exception\": \"proident fu\",\n  \"message\": \"laborum esse magna Lorem\",\n  \"total_time_taken_in_millis\": 8593815,\n  \"http_status\": \"408 REQUEST_TIMEOUT\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"velit aliqua Duis et\",\n      \"description\": \"id cupidatat mollit\",\n      \"name\": \"do in officia\",\n      \"slug\": \"eu quis qui consequat\",\n      \"meta\": [\n        {\n          \"_id\": \"minim\",\n          \"name\": \"velit mollit culpa qui\",\n          \"value\": \"dolore nostrud sit\"\n        },\n        {\n          \"_id\": \"ut\",\n          \"name\": \"dolore\",\n          \"value\": \"eiusmod Ut\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"anim eu ut est\",\n        \"integration\": \"exercitation commodo Excepteur voluptate adipisicing\",\n        \"level\": \"irure exercitation nulla\",\n        \"uid\": -34721310,\n        \"opted\": false,\n        \"permissions\": [\n          \"Ut qui in ipsum\",\n          \"aliqua ex proident\"\n        ],\n        \"token\": \"Excepteur \",\n        \"name\": \"et adipisicing dolor\",\n        \"stores\": [\n          {\n            \"_id\": \"nostrud minim cillum\",\n            \"integration\": \"consequat aute\",\n            \"level\": \"in sed dolore\",\n            \"uid\": -21071558,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"consequat\",\n            \"code\": \"eu dolor cillum\",\n            \"name\": \"dolore proident\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"sed ut anim ad cupidatat\",\n            \"integration\": \"officia sint\",\n            \"level\": \"ullamco deserunt ad\",\n            \"uid\": 59387391,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"Excepteur mollit tempor\",\n            \"code\": \"amet\",\n            \"name\": \"proident Lorem aliqua sint\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"laboris magna proident\",\n        \"integration\": \"anim velit in\",\n        \"level\": \"proident non\",\n        \"uid\": -57219718,\n        \"opted\": false,\n        \"permissions\": [\n          \"ullamco quis\",\n          \"reprehenderit Ut\"\n        ],\n        \"token\": \"minim ipsum ut veniam amet\",\n        \"name\": \"ad\",\n        \"stores\": [\n          {\n            \"_id\": \"qui ut\",\n            \"integration\": \"laborum \",\n            \"level\": \"nostrud elit Ut ipsum\",\n            \"uid\": 82956987,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"dolor commodo\",\n            \"code\": \"velit Duis ut dolore labore\",\n            \"name\": \"irur\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"ad proident dolore la\",\n            \"integration\": \"magna in sed in\",\n            \"level\": \"ad aute Excepteur\",\n            \"uid\": 56377453,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"amet ull\",\n            \"code\": \"culpa in nisi\",\n            \"name\": \"pariatur\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"do ea eiusmod\",\n      \"description\": \"ea\",\n      \"name\": \"tempor amet\",\n      \"slug\": \"est culpa\",\n      \"meta\": [\n        {\n          \"_id\": \"irure laboris ea aliquip\",\n          \"name\": \"Duis dolore consectetur non proident\",\n          \"value\": \"magna\"\n        },\n        {\n          \"_id\": \"cillum aute sint culpa\",\n          \"name\": \"reprehenderit Lorem exercitation\",\n          \"value\": \"anim pariatur et\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"ea deserunt \",\n        \"integration\": \"do\",\n        \"level\": \"et minim labore velit\",\n        \"uid\": 47359952,\n        \"opted\": true,\n        \"permissions\": [\n          \"amet fugiat pariatur nulla sed\",\n          \"et\"\n        ],\n        \"token\": \"ut id sunt\",\n        \"name\": \"sit velit occaecat\",\n        \"stores\": [\n          {\n            \"_id\": \"qui fugiat labore minim incididunt\",\n            \"integration\": \"occaecat esse\",\n            \"level\": \"adipisicing ut fugiat\",\n            \"uid\": -60302665,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"fugiat consectetur consequat\",\n            \"code\": \"Duis Excepteur cillum\",\n            \"name\": \"esse aute ipsum ex\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"esse Ut reprehenderit ipsum\",\n            \"integration\": \"dolore reprehenderit dolore\",\n            \"level\": \"molli\",\n            \"uid\": 17693087,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"velit aliqua veniam eu est\",\n            \"code\": \"quis officia\",\n            \"name\": \"Ut Excepteu\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"deserunt\",\n        \"integration\": \"ipsum laborum minim ex\",\n        \"level\": \"sed consequat\",\n        \"uid\": -72930407,\n        \"opted\": true,\n        \"permissions\": [\n          \"enim elit Lorem adipisicing\",\n          \"veniam\"\n        ],\n        \"token\": \"Duis\",\n        \"name\": \"qui dolor eiusmod laboris minim\",\n        \"stores\": [\n          {\n            \"_id\": \"nostrud irure cillum\",\n            \"integration\": \"eiusmod\",\n            \"level\": \"cillum ullamco cupidatat et in\",\n            \"uid\": 7839302,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"consectetur cillum exercitation\",\n            \"code\": \"Ut commodo tempor sed aute\",\n            \"name\": \"nisi nostrud\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"ut dolore nostrud\",\n            \"integration\": \"ad aliqua\",\n            \"level\": \"Lorem pariatur \",\n            \"uid\": -24227966,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"fugiat cillum\",\n            \"code\": \"amet do ea minim\",\n            \"name\": \"magna nulla do laborum\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"dolore in eu reprehenderit\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "6e2ff704-b204-4467-8a00-9137eff94424",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2019-10-24T14:18:08.733Z\",\n  \"status\": -7849584,\n  \"error\": \"sunt sit id in\",\n  \"exception\": \"proident fu\",\n  \"message\": \"laborum esse magna Lorem\",\n  \"total_time_taken_in_millis\": 8593815,\n  \"http_status\": \"408 REQUEST_TIMEOUT\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"velit aliqua Duis et\",\n      \"description\": \"id cupidatat mollit\",\n      \"name\": \"do in officia\",\n      \"slug\": \"eu quis qui consequat\",\n      \"meta\": [\n        {\n          \"_id\": \"minim\",\n          \"name\": \"velit mollit culpa qui\",\n          \"value\": \"dolore nostrud sit\"\n        },\n        {\n          \"_id\": \"ut\",\n          \"name\": \"dolore\",\n          \"value\": \"eiusmod Ut\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"anim eu ut est\",\n        \"integration\": \"exercitation commodo Excepteur voluptate adipisicing\",\n        \"level\": \"irure exercitation nulla\",\n        \"uid\": -34721310,\n        \"opted\": false,\n        \"permissions\": [\n          \"Ut qui in ipsum\",\n          \"aliqua ex proident\"\n        ],\n        \"token\": \"Excepteur \",\n        \"name\": \"et adipisicing dolor\",\n        \"stores\": [\n          {\n            \"_id\": \"nostrud minim cillum\",\n            \"integration\": \"consequat aute\",\n            \"level\": \"in sed dolore\",\n            \"uid\": -21071558,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"consequat\",\n            \"code\": \"eu dolor cillum\",\n            \"name\": \"dolore proident\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"sed ut anim ad cupidatat\",\n            \"integration\": \"officia sint\",\n            \"level\": \"ullamco deserunt ad\",\n            \"uid\": 59387391,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"Excepteur mollit tempor\",\n            \"code\": \"amet\",\n            \"name\": \"proident Lorem aliqua sint\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"laboris magna proident\",\n        \"integration\": \"anim velit in\",\n        \"level\": \"proident non\",\n        \"uid\": -57219718,\n        \"opted\": false,\n        \"permissions\": [\n          \"ullamco quis\",\n          \"reprehenderit Ut\"\n        ],\n        \"token\": \"minim ipsum ut veniam amet\",\n        \"name\": \"ad\",\n        \"stores\": [\n          {\n            \"_id\": \"qui ut\",\n            \"integration\": \"laborum \",\n            \"level\": \"nostrud elit Ut ipsum\",\n            \"uid\": 82956987,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"dolor commodo\",\n            \"code\": \"velit Duis ut dolore labore\",\n            \"name\": \"irur\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"ad proident dolore la\",\n            \"integration\": \"magna in sed in\",\n            \"level\": \"ad aute Excepteur\",\n            \"uid\": 56377453,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"amet ull\",\n            \"code\": \"culpa in nisi\",\n            \"name\": \"pariatur\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"do ea eiusmod\",\n      \"description\": \"ea\",\n      \"name\": \"tempor amet\",\n      \"slug\": \"est culpa\",\n      \"meta\": [\n        {\n          \"_id\": \"irure laboris ea aliquip\",\n          \"name\": \"Duis dolore consectetur non proident\",\n          \"value\": \"magna\"\n        },\n        {\n          \"_id\": \"cillum aute sint culpa\",\n          \"name\": \"reprehenderit Lorem exercitation\",\n          \"value\": \"anim pariatur et\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"ea deserunt \",\n        \"integration\": \"do\",\n        \"level\": \"et minim labore velit\",\n        \"uid\": 47359952,\n        \"opted\": true,\n        \"permissions\": [\n          \"amet fugiat pariatur nulla sed\",\n          \"et\"\n        ],\n        \"token\": \"ut id sunt\",\n        \"name\": \"sit velit occaecat\",\n        \"stores\": [\n          {\n            \"_id\": \"qui fugiat labore minim incididunt\",\n            \"integration\": \"occaecat esse\",\n            \"level\": \"adipisicing ut fugiat\",\n            \"uid\": -60302665,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"fugiat consectetur consequat\",\n            \"code\": \"Duis Excepteur cillum\",\n            \"name\": \"esse aute ipsum ex\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"esse Ut reprehenderit ipsum\",\n            \"integration\": \"dolore reprehenderit dolore\",\n            \"level\": \"molli\",\n            \"uid\": 17693087,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"velit aliqua veniam eu est\",\n            \"code\": \"quis officia\",\n            \"name\": \"Ut Excepteu\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"deserunt\",\n        \"integration\": \"ipsum laborum minim ex\",\n        \"level\": \"sed consequat\",\n        \"uid\": -72930407,\n        \"opted\": true,\n        \"permissions\": [\n          \"enim elit Lorem adipisicing\",\n          \"veniam\"\n        ],\n        \"token\": \"Duis\",\n        \"name\": \"qui dolor eiusmod laboris minim\",\n        \"stores\": [\n          {\n            \"_id\": \"nostrud irure cillum\",\n            \"integration\": \"eiusmod\",\n            \"level\": \"cillum ullamco cupidatat et in\",\n            \"uid\": 7839302,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"consectetur cillum exercitation\",\n            \"code\": \"Ut commodo tempor sed aute\",\n            \"name\": \"nisi nostrud\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"ut dolore nostrud\",\n            \"integration\": \"ad aliqua\",\n            \"level\": \"Lorem pariatur \",\n            \"uid\": -24227966,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"fugiat cillum\",\n            \"code\": \"amet do ea minim\",\n            \"name\": \"magna nulla do laborum\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"dolore in eu reprehenderit\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "02134f2f-1a48-4f46-ac1e-0d44a3a024be",
          "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
          "request": {
            "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "def08859-2244-410d-8ecc-ea0bca5a5d69",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1964-04-11T00:09:09.825Z\",\n  \"status\": 73341154,\n  \"error\": \"pariatur esse cillum veniam quis\",\n  \"exception\": \"reprehenderit ex\",\n  \"message\": \"non\",\n  \"total_time_taken_in_millis\": 5009607,\n  \"http_status\": \"421 DESTINATION_LOCKED\",\n  \"items\": {\n    \"session_id\": \"id ut proident qui\",\n    \"error_message\": \"nisi aliqua ullamco\"\n  },\n  \"payload\": {\n    \"session_id\": \"sit quis sunt nisi adipisicing\",\n    \"error_message\": \"pariatur commodo\"\n  },\n  \"trace_id\": \"ullamco commodo cupidatat do\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "27bc2be5-bda5-4a67-a419-6cc0325cc473",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1964-04-11T00:09:09.825Z\",\n  \"status\": 73341154,\n  \"error\": \"pariatur esse cillum veniam quis\",\n  \"exception\": \"reprehenderit ex\",\n  \"message\": \"non\",\n  \"total_time_taken_in_millis\": 5009607,\n  \"http_status\": \"421 DESTINATION_LOCKED\",\n  \"items\": {\n    \"session_id\": \"id ut proident qui\",\n    \"error_message\": \"nisi aliqua ullamco\"\n  },\n  \"payload\": {\n    \"session_id\": \"sit quis sunt nisi adipisicing\",\n    \"error_message\": \"pariatur commodo\"\n  },\n  \"trace_id\": \"ullamco commodo cupidatat do\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1b401f47-0e11-4b84-8d75-d9356dc37c7b",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1964-04-11T00:09:09.825Z\",\n  \"status\": 73341154,\n  \"error\": \"pariatur esse cillum veniam quis\",\n  \"exception\": \"reprehenderit ex\",\n  \"message\": \"non\",\n  \"total_time_taken_in_millis\": 5009607,\n  \"http_status\": \"421 DESTINATION_LOCKED\",\n  \"items\": {\n    \"session_id\": \"id ut proident qui\",\n    \"error_message\": \"nisi aliqua ullamco\"\n  },\n  \"payload\": {\n    \"session_id\": \"sit quis sunt nisi adipisicing\",\n    \"error_message\": \"pariatur commodo\"\n  },\n  \"trace_id\": \"ullamco commodo cupidatat do\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "d786e072-1e42-4084-9ae2-b7c9be9d1128",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "64b49239-723d-458c-baad-6e036700df63",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1988-05-17T23:23:25.913Z\",\n  \"status\": -46555330,\n  \"error\": \"qui Excepteur\",\n  \"exception\": \"Duis fugiat est\",\n  \"message\": \"sed deserunt\",\n  \"total_time_taken_in_millis\": -97654261,\n  \"http_status\": \"503 SERVICE_UNAVAILABLE\",\n  \"items\": {\n    \"company_id\": 50225850,\n    \"integration_data\": {\n      \"Excepteur_26\": {},\n      \"dolor71f\": {}\n    },\n    \"company_name\": \"eiusmod mollit\",\n    \"task_details\": {\n      \"type\": -91246030,\n      \"group_list\": [\n        {\n          \"text\": \"incididunt magna\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"veniam nisi eu\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -53728016.83065473,\n      \"safe_stock\": 26346394,\n      \"period_threshold\": 6721693,\n      \"period_threshold_type\": \"HOURS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"la\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"Excepteur consectetur\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"tempor sunt\",\n    \"alias\": \"laborum ipsum aliqua mollit\"\n  },\n  \"payload\": {\n    \"company_id\": 17662946,\n    \"integration_data\": {\n      \"Duis_3\": {}\n    },\n    \"company_name\": \"incididunt veniam\",\n    \"task_details\": {\n      \"type\": -97024086,\n      \"group_list\": [\n        {\n          \"text\": \"aute\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"tempor\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -7624372.503964022,\n      \"safe_stock\": 31057071,\n      \"period_threshold\": -39307264,\n      \"period_threshold_type\": \"HOURS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"eiusmod ut occaecat proident\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"Lorem deserunt\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"dolor\",\n    \"alias\": \"aliqua laboris velit nisi Lorem\"\n  },\n  \"trace_id\": \"dolore elit tempor exercitation commodo\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "8d18aa29-6949-489d-8c56-4117e1716441",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1981-11-19T05:12:47.961Z\",\n  \"status\": -13595256,\n  \"error\": \"ex nisi velit\",\n  \"exception\": \"officia est amet enim\",\n  \"message\": \"laborum eiusmod\",\n  \"total_time_taken_in_millis\": -75693976,\n  \"http_status\": \"102 PROCESSING\",\n  \"items\": {\n    \"company_id\": -26348962,\n    \"integration_data\": {\n      \"consectetur9\": {},\n      \"eu80\": {}\n    },\n    \"company_name\": \"laboris consequat\",\n    \"task_details\": {\n      \"type\": -97033462,\n      \"group_list\": [\n        {\n          \"text\": \"minim\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"ipsum pariatur quis\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 29761735.07404329,\n      \"safe_stock\": -56507565,\n      \"period_threshold\": -5975757,\n      \"period_threshold_type\": \"MONTHS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"eu ut\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"labore Duis mollit\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"fugiat en\",\n    \"alias\": \"sint tempor ullamco\"\n  },\n  \"payload\": {\n    \"company_id\": -67236303,\n    \"integration_data\": {\n      \"do0\": {},\n      \"ullamcoa6_\": {},\n      \"exercitation77\": {}\n    },\n    \"company_name\": \"sunt sit Lorem\",\n    \"task_details\": {\n      \"type\": -55051062,\n      \"group_list\": [\n        {\n          \"text\": \"cupidatat esse adipisicing\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"est laborum dolor consectetur sed\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -3194311.1526366025,\n      \"safe_stock\": 31101625,\n      \"period_threshold\": 44304807,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"eiusmod mollit dolore veniam\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"aliquip in anim\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"eu enim in Lorem ad\",\n    \"alias\": \"eiusmod Lorem Ut sint\"\n  },\n  \"trace_id\": \"est fugiat\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "0755b340-d3a5-4de5-aa6b-4f7bde55d8ff",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1981-11-19T05:12:47.961Z\",\n  \"status\": -13595256,\n  \"error\": \"ex nisi velit\",\n  \"exception\": \"officia est amet enim\",\n  \"message\": \"laborum eiusmod\",\n  \"total_time_taken_in_millis\": -75693976,\n  \"http_status\": \"102 PROCESSING\",\n  \"items\": {\n    \"company_id\": -26348962,\n    \"integration_data\": {\n      \"consectetur9\": {},\n      \"eu80\": {}\n    },\n    \"company_name\": \"laboris consequat\",\n    \"task_details\": {\n      \"type\": -97033462,\n      \"group_list\": [\n        {\n          \"text\": \"minim\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"ipsum pariatur quis\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 29761735.07404329,\n      \"safe_stock\": -56507565,\n      \"period_threshold\": -5975757,\n      \"period_threshold_type\": \"MONTHS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"eu ut\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"labore Duis mollit\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"fugiat en\",\n    \"alias\": \"sint tempor ullamco\"\n  },\n  \"payload\": {\n    \"company_id\": -67236303,\n    \"integration_data\": {\n      \"do0\": {},\n      \"ullamcoa6_\": {},\n      \"exercitation77\": {}\n    },\n    \"company_name\": \"sunt sit Lorem\",\n    \"task_details\": {\n      \"type\": -55051062,\n      \"group_list\": [\n        {\n          \"text\": \"cupidatat esse adipisicing\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"est laborum dolor consectetur sed\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -3194311.1526366025,\n      \"safe_stock\": 31101625,\n      \"period_threshold\": 44304807,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"eiusmod mollit dolore veniam\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"aliquip in anim\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"eu enim in Lorem ad\",\n    \"alias\": \"eiusmod Lorem Ut sint\"\n  },\n  \"trace_id\": \"est fugiat\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "bf766350-611e-4983-b5d2-243a2ec6acfd",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "a5d468ff-5424-4f64-926f-07dc6a4e68a1",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1966-08-15T19:14:27.760Z\",\n  \"status\": -45669561,\n  \"error\": \"sint\",\n  \"exception\": \"dolore\",\n  \"message\": \"consectetur\",\n  \"total_time_taken_in_millis\": 55217142,\n  \"http_status\": \"203 NON_AUTHORITATIVE_INFORMATION\",\n  \"items\": [\n    {\n      \"company_id\": 87400384,\n      \"integration_data\": {\n        \"minim98\": {},\n        \"sunt_8\": {}\n      },\n      \"company_name\": \"qui ea laboris veniam\",\n      \"task_details\": {\n        \"type\": 12562212,\n        \"group_list\": [\n          {\n            \"text\": \"nisi id consequat labore\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"eu velit dolore cupidatat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -95059853.75097245,\n        \"safe_stock\": 97707705,\n        \"period_threshold\": 13126986,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"ex\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"incididunt esse anim\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"adipisi\",\n      \"alias\": \"aliquip nostrud Duis Excepteur\"\n    },\n    {\n      \"company_id\": 38244414,\n      \"integration_data\": {\n        \"ad_8\": {},\n        \"ametdc\": {},\n        \"voluptated\": {}\n      },\n      \"company_name\": \"pariatur est\",\n      \"task_details\": {\n        \"type\": 89173808,\n        \"group_list\": [\n          {\n            \"text\": \"cillum laborum irure\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"dolor eu\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 15082731.504492223,\n        \"safe_stock\": 19318466,\n        \"period_threshold\": 6633459,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"proident\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"fugiat sit sunt sint\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"aliqua\",\n      \"alias\": \"sit aliquip ullamco \"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": 88132213,\n      \"integration_data\": {\n        \"culpa_f\": {},\n        \"Excepteur_9\": {}\n      },\n      \"company_name\": \"fugiat exercitation\",\n      \"task_details\": {\n        \"type\": -15009132,\n        \"group_list\": [\n          {\n            \"text\": \"velit eu\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ex eu enim\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -88947407.56024846,\n        \"safe_stock\": 40331965,\n        \"period_threshold\": -50003575,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"sit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"quis nulla occaecat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"in sunt occaecat est enim\",\n      \"alias\": \"sint culpa sunt nostrud\"\n    },\n    {\n      \"company_id\": 73545337,\n      \"integration_data\": {\n        \"laborum_2c4\": {}\n      },\n      \"company_name\": \"dolor ad\",\n      \"task_details\": {\n        \"type\": -4508203,\n        \"group_list\": [\n          {\n            \"text\": \"ut\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"deserunt mollit laboris aliqua sit\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -1503223.822220564,\n        \"safe_stock\": -41372171,\n        \"period_threshold\": 58042456,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"nisi velit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"amet ea magna aute\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"ea incididunt anim dolor et\",\n      \"alias\": \"esse est laborum in\"\n    }\n  ],\n  \"trace_id\": \"anim sed\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3c8b64ca-8710-464d-8f38-3179416b4141",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1955-06-28T22:48:41.806Z\",\n  \"status\": -33032764,\n  \"error\": \"pari\",\n  \"exception\": \"nisi in\",\n  \"message\": \"adipisicing sit\",\n  \"total_time_taken_in_millis\": -95285678,\n  \"http_status\": \"418 I_AM_A_TEAPOT\",\n  \"items\": [\n    {\n      \"company_id\": -5553107,\n      \"integration_data\": {\n        \"dolorea\": {},\n        \"magna_e\": {}\n      },\n      \"company_name\": \"esse cupidatat velit ex\",\n      \"task_details\": {\n        \"type\": -38620580,\n        \"group_list\": [\n          {\n            \"text\": \"cillum sint nostrud\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"adipisicing velit incididunt\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 25778099.856465846,\n        \"safe_stock\": -65202686,\n        \"period_threshold\": -46267487,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"in au\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ex sunt\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"esse dolor dolor\",\n      \"alias\": \"exercitation in quis mollit occaecat\"\n    },\n    {\n      \"company_id\": -43471780,\n      \"integration_data\": {\n        \"exercitationd4\": {},\n        \"aliquaa_0\": {},\n        \"nisi_4a\": {}\n      },\n      \"company_name\": \"aliqua voluptate sed consequat\",\n      \"task_details\": {\n        \"type\": 66191992,\n        \"group_list\": [\n          {\n            \"text\": \"commodo culpa\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"aliqua in do\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 58367527.48827547,\n        \"safe_stock\": 68988157,\n        \"period_threshold\": 46064954,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"Excepteur enim\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"elit Ut esse sed\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"mollit Excepteur nulla dolore\",\n      \"alias\": \"nulla in\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": 10822534,\n      \"integration_data\": {\n        \"deserunt38\": {}\n      },\n      \"company_name\": \"deserunt magna dolore sed\",\n      \"task_details\": {\n        \"type\": -79242954,\n        \"group_list\": [\n          {\n            \"text\": \"do occaecat voluptate magna qui\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"deserunt\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 44226707.36142641,\n        \"safe_stock\": 37168714,\n        \"period_threshold\": -75080281,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"dolore occaecat deserunt incididunt\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ullamco occaecat proident velit\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"Ut amet\",\n      \"alias\": \"voluptate\"\n    },\n    {\n      \"company_id\": -70650008,\n      \"integration_data\": {\n        \"in_be\": {},\n        \"ut_a\": {}\n      },\n      \"company_name\": \"incididunt in magna qui\",\n      \"task_details\": {\n        \"type\": -21323215,\n        \"group_list\": [\n          {\n            \"text\": \"et culpa\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"in\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 95461062.9896889,\n        \"safe_stock\": 62512685,\n        \"period_threshold\": 84283664,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"in ut commodo in\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"adipisicing laboris nostrud in\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"exercitation ullamco veniam aliqua\",\n      \"alias\": \"sunt aute et\"\n    }\n  ],\n  \"trace_id\": \"ex\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2f124355-bbd9-41a9-9fa8-1d35b16a9418",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1955-06-28T22:48:41.806Z\",\n  \"status\": -33032764,\n  \"error\": \"pari\",\n  \"exception\": \"nisi in\",\n  \"message\": \"adipisicing sit\",\n  \"total_time_taken_in_millis\": -95285678,\n  \"http_status\": \"418 I_AM_A_TEAPOT\",\n  \"items\": [\n    {\n      \"company_id\": -5553107,\n      \"integration_data\": {\n        \"dolorea\": {},\n        \"magna_e\": {}\n      },\n      \"company_name\": \"esse cupidatat velit ex\",\n      \"task_details\": {\n        \"type\": -38620580,\n        \"group_list\": [\n          {\n            \"text\": \"cillum sint nostrud\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"adipisicing velit incididunt\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 25778099.856465846,\n        \"safe_stock\": -65202686,\n        \"period_threshold\": -46267487,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"in au\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ex sunt\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"esse dolor dolor\",\n      \"alias\": \"exercitation in quis mollit occaecat\"\n    },\n    {\n      \"company_id\": -43471780,\n      \"integration_data\": {\n        \"exercitationd4\": {},\n        \"aliquaa_0\": {},\n        \"nisi_4a\": {}\n      },\n      \"company_name\": \"aliqua voluptate sed consequat\",\n      \"task_details\": {\n        \"type\": 66191992,\n        \"group_list\": [\n          {\n            \"text\": \"commodo culpa\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"aliqua in do\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 58367527.48827547,\n        \"safe_stock\": 68988157,\n        \"period_threshold\": 46064954,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"Excepteur enim\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"elit Ut esse sed\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"mollit Excepteur nulla dolore\",\n      \"alias\": \"nulla in\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": 10822534,\n      \"integration_data\": {\n        \"deserunt38\": {}\n      },\n      \"company_name\": \"deserunt magna dolore sed\",\n      \"task_details\": {\n        \"type\": -79242954,\n        \"group_list\": [\n          {\n            \"text\": \"do occaecat voluptate magna qui\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"deserunt\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 44226707.36142641,\n        \"safe_stock\": 37168714,\n        \"period_threshold\": -75080281,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"dolore occaecat deserunt incididunt\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ullamco occaecat proident velit\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"Ut amet\",\n      \"alias\": \"voluptate\"\n    },\n    {\n      \"company_id\": -70650008,\n      \"integration_data\": {\n        \"in_be\": {},\n        \"ut_a\": {}\n      },\n      \"company_name\": \"incididunt in magna qui\",\n      \"task_details\": {\n        \"type\": -21323215,\n        \"group_list\": [\n          {\n            \"text\": \"et culpa\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"in\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 95461062.9896889,\n        \"safe_stock\": 62512685,\n        \"period_threshold\": 84283664,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"in ut commodo in\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"adipisicing laboris nostrud in\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"exercitation ullamco veniam aliqua\",\n      \"alias\": \"sunt aute et\"\n    }\n  ],\n  \"trace_id\": \"ex\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "e550e607-2be7-43c3-afe8-7546f31d6c75",
      "name": "Partner",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "7f051eb7-9f37-4533-8879-047541153899",
          "name": "getPanelExtensionDetails | Get panel extension details",
          "request": {
            "name": "getPanelExtensionDetails | Get panel extension details",
            "description": {
              "content": "Retrieve detailed information about panel extensions in the public server setup.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "panel",
                "partners",
                "v1.0",
                "extensions",
                ":slug"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "slug",
                  "description": "(Required) pass the slug of the extension"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "0344f2f3-cf62-4d62-b269-5f3f1e18aaca",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "panel",
                    "partners",
                    "v1.0",
                    "extensions",
                    ":slug"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "slug",
                      "description": "(Required) pass the slug of the extension"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"_id\": \"633ab5cb635a41fdde9fb648\",\n  \"organization_id\": \"6333fef3b1d85e44e738c138\",\n  \"extension_id\": \"633425ebb1d85e44e738c2ab\",\n  \"slug\": \"example-extension-1\",\n  \"scope\": [\n    \"company/profile\",\n    \"company/saleschannel\",\n    \"company/product\",\n    \"company/order\",\n    \"company/application/customer\",\n    \"company/application/analytics\",\n    \"company/application/storage\",\n    \"company/application/marketing\",\n    \"company/application/catalogue\",\n    \"company/application/communication\",\n    \"company/application/support\",\n    \"company/application/order\",\n    \"company/application/settings\"\n  ],\n  \"category\": {\n    \"categories_l1\": [],\n    \"categories_l2\": []\n  },\n  \"listing_info\": {\n    \"name\": \"ujjawal-example-extension-1\",\n    \"keywords\": [],\n    \"tagline\": \"test-extension for test how extensions look and work and how to create them\",\n    \"icon\": \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/AMwIEOw0U-logo.png\"\n  },\n  \"details\": {\n    \"benefits\": [\n      {\n        \"title\": \"Works fast\",\n        \"description\": \"works fast\",\n        \"_id\": \"633ab5cb635a41fdde9fb649\"\n      }\n    ],\n    \"screenshots\": {\n      \"desktop\": [\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/g95yHXkou-1024x576.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/IKdHxP2fN-1024x576.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/_auq1yvEp-1024x576.png\"\n      ],\n      \"mobile\": [\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/E_YAHM9cU-600x900.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/vEnXw9cCg-600x900.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/O3Wng4Rqn-600x900.png\"\n      ]\n    },\n    \"description\": \"Sample public extension\",\n    \"demo_url\": \"\",\n    \"video_url\": [\n      {\n        \"type\": \"video\",\n        \"url\": \"https://hdn-1.addsale.com/x0/products/videos/item/free/original/kizLVNWyS-video-sc-1.mp4\"\n      }\n    ],\n    \"integrations\": []\n  },\n  \"plan_type\": \"free\",\n  \"plans\": [\n    {\n      \"name\": \"Custom Free\",\n      \"features\": \"provides ease\",\n      \"type\": \"free\",\n      \"price\": {\n        \"amount\": 0,\n        \"currency\": \"INR\"\n      },\n      \"trial_days\": 0,\n      \"additional_charges\": \"\"\n    }\n  ],\n  \"plans_url\": \"\",\n  \"contact_info\": {\n    \"support\": {\n      \"email\": \"ujjawaltaleja@gofynd.com\",\n      \"phone\": \"7988169279\",\n      \"website_url\": \"\",\n      \"faq_url\": \"\",\n      \"privacy_policy_url\": \"\"\n    }\n  },\n  \"current_status\": \"active\",\n  \"coming_soon\": {\n    \"is_coming_soon\": false,\n    \"upvote_count\": 0\n  },\n  \"created_at\": \"2022-10-03T10:13:31.607Z\",\n  \"modified_at\": \"2022-10-03T10:13:31.607Z\",\n  \"organization\": {\n    \"name\": \"ujjawal-partners-fashion\",\n    \"slug\": \"ujjawa-w7t-68\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "61c997ec-2aa1-46a8-8a31-ebad3582a71c",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "c86cf6c9-45ae-40bd-8144-2d9fcf26d3b7",
          "name": "fetchAllWebhookEvents | Fetch all webhook events.",
          "request": {
            "name": "fetchAllWebhookEvents | Fetch all webhook events.",
            "description": {
              "content": "Retrieve a list of all webhook events in the public server setup.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "8f443260-90f7-4da4-b579-1723cdd2ceca",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "5cc4a393-2985-4f7c-bc9d-65ef5d3d7885",
          "name": "queryWebhookEventDetails | Query webhook event details.",
          "request": {
            "name": "queryWebhookEventDetails | Query webhook event details.",
            "description": {
              "content": "Query and obtain detailed information about webhook events in the public server configurations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "6d135b00-1c6e-4a56-b67c-d7b38e7cdc7a",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"event_name\": \"article\",\n    \"event_type\": \"update\",\n    \"event_category\": \"company\",\n    \"version\": \"1\"\n  }\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "738faecb-8ceb-469d-86f5-0c727d5ac1aa",
          "name": "notifyDepricatedEvent | Notifies all the events that are going to depricate",
          "request": {
            "name": "notifyDepricatedEvent | Notifies all the events that are going to depricate",
            "description": {
              "content": "Notifies all the events that are subscribed and are going to deprecate or new version is available for those events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "depricated-event-notifier"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "0ee32b0c-fa18-4aad-b75c-554d2f738392",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "depricated-event-notifier"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "4ae4679f-7a8d-4d4a-9cf4-8df52516669c",
          "name": "testHandlerTransformation | Test transformation of handler",
          "request": {
            "name": "testHandlerTransformation | Test transformation of handler",
            "description": {
              "content": "Test transformation of handler",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "transform-event"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event_name\": \"<string>\",\n  \"event_type\": \"<string>\",\n  \"event_category\": \"<string>\",\n  \"event_version\": \"<string>\",\n  \"event\": {\n    \"payload\": {\n      \"amet_4c\": \"magna in cupidatat commodo ad\",\n      \"non2\": \"aliquip veniam culpa proident\"\n    },\n    \"meta\": {\n      \"voluptatea_3\": -38498414.19865685,\n      \"labore96_\": \"Excepteur enim\"\n    }\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "3534ef3f-a50b-4c75-8bb2-8e5397bb725f",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "transform-event"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"event_name\": \"location\",\n  \"event_type\": \"create\",\n  \"event_category\": \"company\",\n  \"event_version\": \"1\",\n  \"event\": {\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450Z\",\n        \"modified_on\": \"2023-10-24T01:41:44.450Z\"\n      }\n    },\n    \"meta\": {\n      \"event\": {\n        \"type\": \"create\",\n        \"name\": \"location\",\n        \"version\": \"1\"\n      },\n      \"company_id\": 6086,\n      \"service\": {\n        \"name\": \"WheelJack\"\n      },\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"created_timestamp\": 1698111704725\n    }\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_trace_id\": [\n    \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n  ],\n  \"data\": {\n    \"event\": {\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"name\": \"location\",\n      \"type\": \"create\",\n      \"version\": \"1\",\n      \"created_timestamp\": 1698111704725\n    },\n    \"company_id\": 6086,\n    \"contains\": [\n      \"location\"\n    ],\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450Z\",\n        \"modified_on\": \"2023-10-24T01:41:44.450Z\"\n      }\n    }\n  },\n  \"event_name\": \"location\",\n  \"version\": \"1\",\n  \"status\": false,\n  \"event_type\": \"create\",\n  \"service_meta\": {\n    \"name\": \"WheelJack\"\n  },\n  \"association\": {\n    \"company_id\": 6086\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "2c7d8323-aeaa-4221-9431-a3cef370ce78",
          "name": "validateSchema | Validate Schema for an event",
          "request": {
            "name": "validateSchema | Validate Schema for an event",
            "description": {
              "content": "Validate Schema for an event",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "validate-event-schema"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event_name\": \"<string>\",\n  \"event_type\": \"<string>\",\n  \"event_category\": \"<string>\",\n  \"event_version\": \"<string>\",\n  \"event\": {\n    \"payload\": {\n      \"non82d\": true\n    },\n    \"meta\": {\n      \"exercitation_34_\": -21714672,\n      \"in_0\": true\n    }\n  },\n  \"event_schema\": {\n    \"Utb8\": false,\n    \"cillum_daf\": \"nulla\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "a7da989c-167b-4980-82ab-b1cbb599e9c1",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "validate-event-schema"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"event_name\": \"location\",\n  \"event_type\": \"create\",\n  \"event_category\": \"company\",\n  \"event_version\": \"1\",\n  \"event\": {\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450Z\",\n        \"modified_on\": \"2023-10-24T01:41:44.450Z\"\n      }\n    },\n    \"meta\": {\n      \"event\": {\n        \"type\": \"create\",\n        \"name\": \"location\",\n        \"version\": \"1\"\n      },\n      \"company_id\": 6086,\n      \"service\": {\n        \"name\": \"WheelJack\"\n      },\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"created_timestamp\": 1698111704725\n    }\n  },\n  \"event_schema\": {}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": true,\n  \"message\": \"Valid schema for this event\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fynd.com"
    }
  ],
  "info": {
    "_postman_id": "5f466fb8-601f-482a-8706-e2493b167018",
    "name": "Fynd Platform's Public Side APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public Side APIs",
      "type": "text/plain"
    }
  }
}
