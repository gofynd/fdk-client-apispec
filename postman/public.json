{
  "item": [
    {
      "id": "9a93a380-a71e-4f3b-a5c3-93289d698501",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "2b5688d4-8ec2-4f52-896a-32d7a30fcbe5",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "cc2a0c75-43cd-421c-adcd-447d7199ffdd",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "ullamco aliqua",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"application\": {\n    \"website\": {\n      \"enabled\": true,\n      \"basepath\": \"/\"\n    },\n    \"cors\": {\n      \"domains\": []\n    },\n    \"auth\": {\n      \"enabled\": true\n    },\n    \"description\": \"test\",\n    \"channel_type\": \"store\",\n    \"cache_ttl\": -1,\n    \"internal\": false,\n    \"is_active\": true,\n    \"mode\": \"live\",\n    \"_id\": \"620b931ee7bfb11f910bf4a3\",\n    \"company_id\": 2,\n    \"name\": \"test\",\n    \"owner\": \"5b9b98150df588546aaea6d2\",\n    \"logo\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"favicon\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"banner\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n    },\n    \"token\": \"tPQv0nc23\",\n    \"tokens\": [\n      {\n        \"token\": \"tPQv0nc23\",\n        \"created_at\": \"2022-02-15T11:48:46.909Z\"\n      }\n    ],\n    \"domains\": [\n      {\n        \"verified\": true,\n        \"is_primary\": true,\n        \"is_shortlink\": true,\n        \"_id\": \"620b931ee7bfb11f910bf4a4\",\n        \"name\": \"qckvv5lhp.hostfynd.dev\"\n      }\n    ],\n    \"redirections\": [],\n    \"meta\": [],\n    \"created_at\": \"2022-02-15T11:48:46.909Z\",\n    \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n    \"__v\": 0,\n    \"domain\": {\n      \"verified\": true,\n      \"is_primary\": true,\n      \"is_shortlink\": true,\n      \"_id\": \"620b931ee7bfb11f910bf4a4\",\n      \"name\": \"qckvv5lhp.hostfynd.dev\"\n    },\n    \"id\": \"620b931ee7bfb11f910bf4a3\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "59901e55-4277-4c25-baa9-562392621a15",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "ullamco aliqua",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"Invalid application domain or id.\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e73deb6a-caec-4d9c-be22-b1340c790816",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "ullamco aliqua",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"No application found\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "af89e4f2-6902-47bb-99d3-cee3fe542239",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "2b928888-ae5c-45c4-bf61-bfe42b1a8b29",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"items\": [\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"voluptate Lorem et officia\",\n      \"phone_code\": \"voluptate\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"in ut aliqua\",\n      \"country_code\": \"deserunt incididunt nostrud\",\n      \"latitude\": \"dolor ullamco\",\n      \"longitude\": \"sed nostrud amet labore\"\n    },\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"dolore nostrud incididunt\",\n      \"phone_code\": \"Excepteur Ut veniam eiusmod\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"qui ullamco\",\n      \"country_code\": \"id ullamco\",\n      \"latitude\": \"dolor laboris voluptate nisi\",\n      \"longitude\": \"esse et Ut nisi in\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "006a70a0-7d75-47ec-932c-505b5397ffb4",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "e6c39e0e-706c-4c48-a737-cb9f8b7fc822",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "cbc4ac3f-3560-4547-b4f0-d93567145e19",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": -26826962,\n      \"event_name\": \"veniam mollit incididunt laboris\",\n      \"event_type\": \"in Lorem laborum\",\n      \"event_category\": \"culpa mollit Lorem in dolore\",\n      \"version\": \"culpa aute magna ipsum minim\",\n      \"display_name\": \"mollit occaecat aliqua amet\",\n      \"description\": \"labore nisi\",\n      \"created_on\": \"ipsum velit sint\"\n    },\n    {\n      \"id\": -26851405,\n      \"event_name\": \"dolore aliqua\",\n      \"event_type\": \"in minim\",\n      \"event_category\": \"commodo\",\n      \"version\": \"qui sint nulla quis in\",\n      \"display_name\": \"magna aliqua ut eu\",\n      \"description\": \"officia aliquip adipisicing ut ipsum\",\n      \"created_on\": \"sed\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "d1bb9bb5-5df5-416f-872e-a31dc65d7607",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "bd393310-122c-4517-98e0-384cf03644a5",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": -91896137,\n      \"event_name\": \"et fugiat nostrud minim ex\",\n      \"event_type\": \"in ut Excepteur\",\n      \"event_category\": \"amet enim ex\",\n      \"version\": \"eu cupidatat\",\n      \"display_name\": \"ad\",\n      \"description\": \"Duis veniam dolor\",\n      \"created_on\": \"culpa nostrud\"\n    },\n    {\n      \"id\": 97001850,\n      \"event_name\": \"reprehenderit ut eu cillum\",\n      \"event_type\": \"dolore quis\",\n      \"event_category\": \"adipisicing ut sunt\",\n      \"version\": \"pariatur consectetur deserunt\",\n      \"display_name\": \"irure consequat dolore\",\n      \"description\": \"irure esse eu cupidatat\",\n      \"created_on\": \"ut deserunt\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "1d651dae-43c1-440c-8898-feda98382079",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "20d805eb-512b-49e4-b2c2-b59c4a319b73",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "ac944835-5836-41a8-b84d-d087d5869d85",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1956-07-17T03:43:46.668Z\",\n  \"status\": -49446563,\n  \"error\": \"consectetur est\",\n  \"exception\": \"deserunt cillum sed reprehenderit\",\n  \"message\": \"deserunt sunt aliqua elit\",\n  \"total_time_taken_in_millis\": -48518860,\n  \"http_status\": \"303 SEE_OTHER\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"minim ex\",\n  \"page\": {\n    \"type\": \"ut nisi in dolore\",\n    \"size\": -13737994,\n    \"current\": -48630811,\n    \"has_next\": false,\n    \"item_total\": 82916401,\n    \"next_id\": \"occaecat ut\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "92c2e392-d680-4ea3-99c0-f621414edfd1",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1956-07-17T03:43:46.668Z\",\n  \"status\": -49446563,\n  \"error\": \"consectetur est\",\n  \"exception\": \"deserunt cillum sed reprehenderit\",\n  \"message\": \"deserunt sunt aliqua elit\",\n  \"total_time_taken_in_millis\": -48518860,\n  \"http_status\": \"303 SEE_OTHER\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"minim ex\",\n  \"page\": {\n    \"type\": \"ut nisi in dolore\",\n    \"size\": -13737994,\n    \"current\": -48630811,\n    \"has_next\": false,\n    \"item_total\": 82916401,\n    \"next_id\": \"occaecat ut\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "311a865b-d69c-41c3-9f03-6491f6b83f76",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1956-07-17T03:43:46.668Z\",\n  \"status\": -49446563,\n  \"error\": \"consectetur est\",\n  \"exception\": \"deserunt cillum sed reprehenderit\",\n  \"message\": \"deserunt sunt aliqua elit\",\n  \"total_time_taken_in_millis\": -48518860,\n  \"http_status\": \"303 SEE_OTHER\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"minim ex\",\n  \"page\": {\n    \"type\": \"ut nisi in dolore\",\n    \"size\": -13737994,\n    \"current\": -48630811,\n    \"has_next\": false,\n    \"item_total\": 82916401,\n    \"next_id\": \"occaecat ut\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1cdc9f4f-d594-4729-a4f7-e47239f0da68",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "6c95c37b-df0f-4610-8eec-770af0f105fa",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1995-09-08T13:21:15.832Z\",\n  \"status\": 35898016,\n  \"error\": \"anim dolor in proident\",\n  \"exception\": \"proident sed Ut\",\n  \"message\": \"labore\",\n  \"total_time_taken_in_millis\": 22539347,\n  \"http_status\": \"409 CONFLICT\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"dolor amet consequat ut\",\n  \"page\": {\n    \"type\": \"ut sunt dolore commodo\",\n    \"size\": -3341009,\n    \"current\": 17111718,\n    \"has_next\": false,\n    \"item_total\": -68182533,\n    \"next_id\": \"velit ullamco ut\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2fcd5a70-4d50-460e-a101-c76e0abd31aa",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1995-09-08T13:21:15.832Z\",\n  \"status\": 35898016,\n  \"error\": \"anim dolor in proident\",\n  \"exception\": \"proident sed Ut\",\n  \"message\": \"labore\",\n  \"total_time_taken_in_millis\": 22539347,\n  \"http_status\": \"409 CONFLICT\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"dolor amet consequat ut\",\n  \"page\": {\n    \"type\": \"ut sunt dolore commodo\",\n    \"size\": -3341009,\n    \"current\": 17111718,\n    \"has_next\": false,\n    \"item_total\": -68182533,\n    \"next_id\": \"velit ullamco ut\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "39339b5a-a8c1-4eb4-b345-9b632accda6d",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1995-09-08T13:21:15.832Z\",\n  \"status\": 35898016,\n  \"error\": \"anim dolor in proident\",\n  \"exception\": \"proident sed Ut\",\n  \"message\": \"labore\",\n  \"total_time_taken_in_millis\": 22539347,\n  \"http_status\": \"409 CONFLICT\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"dolor amet consequat ut\",\n  \"page\": {\n    \"type\": \"ut sunt dolore commodo\",\n    \"size\": -3341009,\n    \"current\": 17111718,\n    \"has_next\": false,\n    \"item_total\": -68182533,\n    \"next_id\": \"velit ullamco ut\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "6118dd88-f853-4c22-92c3-ee2736351722",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1995-09-08T13:21:15.832Z\",\n  \"status\": 35898016,\n  \"error\": \"anim dolor in proident\",\n  \"exception\": \"proident sed Ut\",\n  \"message\": \"labore\",\n  \"total_time_taken_in_millis\": 22539347,\n  \"http_status\": \"409 CONFLICT\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"dolor amet consequat ut\",\n  \"page\": {\n    \"type\": \"ut sunt dolore commodo\",\n    \"size\": -3341009,\n    \"current\": 17111718,\n    \"has_next\": false,\n    \"item_total\": -68182533,\n    \"next_id\": \"velit ullamco ut\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "50ab319d-757c-476c-a368-1748d12ecae0",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1995-09-08T13:21:15.832Z\",\n  \"status\": 35898016,\n  \"error\": \"anim dolor in proident\",\n  \"exception\": \"proident sed Ut\",\n  \"message\": \"labore\",\n  \"total_time_taken_in_millis\": 22539347,\n  \"http_status\": \"409 CONFLICT\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"dolor amet consequat ut\",\n  \"page\": {\n    \"type\": \"ut sunt dolore commodo\",\n    \"size\": -3341009,\n    \"current\": 17111718,\n    \"has_next\": false,\n    \"item_total\": -68182533,\n    \"next_id\": \"velit ullamco ut\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "68a5eece-cc1c-46b1-ae0b-784368db2baf",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "708292ef-552a-4d80-b222-f8e133a4959a",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1986-04-06T03:35:48.628Z\",\n  \"status\": -93680162,\n  \"error\": \"reprehe\",\n  \"exception\": \"culpa eiusmod consectet\",\n  \"message\": \"pariatur in do esse incididunt\",\n  \"total_time_taken_in_millis\": 18912338,\n  \"http_status\": \"431 REQUEST_HEADER_FIELDS_TOO_LARGE\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"aute dolore irure ipsum\",\n      \"description\": \"qui id\",\n      \"name\": \"deserunt eiusmod qui non Excepteur\",\n      \"slug\": \"elit\",\n      \"meta\": [\n        {\n          \"_id\": \"non ullamco in amet\",\n          \"name\": \"pariatur ut\",\n          \"value\": \"Excepteur anim elit et sit\"\n        },\n        {\n          \"_id\": \"magna\",\n          \"name\": \"sunt laborum\",\n          \"value\": \"ad aliqua\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"voluptate laborum\",\n        \"integration\": \"qui id dolor commodo\",\n        \"level\": \"fugiat pariatur\",\n        \"uid\": -92270504,\n        \"opted\": false,\n        \"permissions\": [\n          \"anim elit velit est labo\",\n          \"enim occaecat\"\n        ],\n        \"token\": \"commodo Ut cillum nisi\",\n        \"name\": \"incididunt in aute voluptate Lorem\",\n        \"stores\": [\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"do tempor\",\n        \"integration\": \"in\",\n        \"level\": \"Ut pa\",\n        \"uid\": -32138457,\n        \"opted\": true,\n        \"permissions\": [\n          \"ut dolor est Duis\",\n          \"aliqua\"\n        ],\n        \"token\": \"incididunt\",\n        \"name\": \"ea laboris\",\n        \"stores\": [\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"pariatur irure sit\",\n      \"description\": \"reprehenderit\",\n      \"name\": \"sed adipisicing commodo\",\n      \"slug\": \"ex dolor\",\n      \"meta\": [\n        {\n          \"_id\": \"anim Lorem do\",\n          \"name\": \"ipsum veniam aliquip\",\n          \"value\": \"exercitation ut proident adipisicing\"\n        },\n        {\n          \"_id\": \"esse quis consequat\",\n          \"name\": \"reprehenderit sit sint eiusmod\",\n          \"value\": \"culpa commodo non aliquip ex\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"aute nisi lab\",\n        \"integration\": \"Excepteur labore m\",\n        \"level\": \"do commodo ullamc\",\n        \"uid\": -3832781,\n        \"opted\": false,\n        \"permissions\": [\n          \"incididunt irure sed\",\n          \"elit sit\"\n        ],\n        \"token\": \"laborum in exercitation mollit\",\n        \"name\": \"sit id nulla dolore\",\n        \"stores\": [\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"magna voluptate velit in\",\n        \"integration\": \"est ex\",\n        \"level\": \"fugiat incididunt ea\",\n        \"uid\": 8599225,\n        \"opted\": true,\n        \"permissions\": [\n          \"adipisicing ut voluptate\",\n          \"voluptate eiusmod eu aute est\"\n        ],\n        \"token\": \"ea anim laboris id\",\n        \"name\": \"aliquip proident reprehenderit pariatur\",\n        \"stores\": [\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"cil\",\n  \"page\": {\n    \"type\": \"Ut\",\n    \"size\": -53223864,\n    \"current\": 78854568,\n    \"has_next\": true,\n    \"item_total\": -92242934,\n    \"next_id\": \"culpa aliquip veniam\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "07fd28b7-37e4-4260-9e32-46dd9196767b",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1995-06-11T05:33:41.305Z\",\n  \"status\": -84663020,\n  \"error\": \"dolor cupidatat officia ullamco tempor\",\n  \"exception\": \"eius\",\n  \"message\": \"elit\",\n  \"total_time_taken_in_millis\": -16054463,\n  \"http_status\": \"207 MULTI_STATUS\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"fugiat dolore id mollit\",\n      \"description\": \"sit proident dolor sunt\",\n      \"name\": \"sed et laborum aliqua\",\n      \"slug\": \"officia dolore tempor\",\n      \"meta\": [\n        {\n          \"_id\": \"veniam occaecat Lorem velit amet\",\n          \"name\": \"exercitation ut\",\n          \"value\": \"elit aliquip cillum mollit\"\n        },\n        {\n          \"_id\": \"dolor sed cil\",\n          \"name\": \"dolor velit\",\n          \"value\": \"occaecat sed ea\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"in aliqua occaecat\",\n        \"integration\": \"aute amet\",\n        \"level\": \"consectetur exercitation sed\",\n        \"uid\": -52229459,\n        \"opted\": true,\n        \"permissions\": [\n          \"pariatur\",\n          \"velit in aute voluptate sunt\"\n        ],\n        \"token\": \"Lorem elit enim occaecat do\",\n        \"name\": \"tempor incididunt\",\n        \"stores\": [\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"sed pariatur\",\n        \"integration\": \"amet aute in\",\n        \"level\": \"eiusmod id consequat in in\",\n        \"uid\": -16054356,\n        \"opted\": false,\n        \"permissions\": [\n          \"aliqua\",\n          \"eiusmod aliquip commodo dolore id\"\n        ],\n        \"token\": \"pariatur nostrud velit proident irure\",\n        \"name\": \"aliquip non Ut Duis incididunt\",\n        \"stores\": [\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"elit Ut magna\",\n      \"description\": \"laboris dolor Ut\",\n      \"name\": \"dolore aliquip minim\",\n      \"slug\": \"anim ad\",\n      \"meta\": [\n        {\n          \"_id\": \"ipsum ut magna ex\",\n          \"name\": \"aliqua tempor\",\n          \"value\": \"est adipisicing reprehenderit ut\"\n        },\n        {\n          \"_id\": \"tempor Lorem\",\n          \"name\": \"pariatur mag\",\n          \"value\": \"est cillum\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"ut\",\n        \"integration\": \"officia consequat in ex\",\n        \"level\": \"reprehenderit Lorem\",\n        \"uid\": -37226616,\n        \"opted\": true,\n        \"permissions\": [\n          \"est\",\n          \"consectetur\"\n        ],\n        \"token\": \"eiusmod mollit magna quis aliquip\",\n        \"name\": \"consectetur Ut incididunt tempor\",\n        \"stores\": [\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"commodo\",\n        \"integration\": \"non aliqua\",\n        \"level\": \"exercit\",\n        \"uid\": -12576778,\n        \"opted\": false,\n        \"permissions\": [\n          \"labore\",\n          \"id sunt adipisicing\"\n        ],\n        \"token\": \"est minim\",\n        \"name\": \"commodo quis fugiat ut\",\n        \"stores\": [\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"\",\n  \"page\": {\n    \"type\": \"ut dolor\",\n    \"size\": -74519063,\n    \"current\": -23897618,\n    \"has_next\": false,\n    \"item_total\": 40308028,\n    \"next_id\": \"in ad magna proident quis\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "7513663a-3451-4113-aae8-c294a614ee2c",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1995-06-11T05:33:41.305Z\",\n  \"status\": -84663020,\n  \"error\": \"dolor cupidatat officia ullamco tempor\",\n  \"exception\": \"eius\",\n  \"message\": \"elit\",\n  \"total_time_taken_in_millis\": -16054463,\n  \"http_status\": \"207 MULTI_STATUS\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"fugiat dolore id mollit\",\n      \"description\": \"sit proident dolor sunt\",\n      \"name\": \"sed et laborum aliqua\",\n      \"slug\": \"officia dolore tempor\",\n      \"meta\": [\n        {\n          \"_id\": \"veniam occaecat Lorem velit amet\",\n          \"name\": \"exercitation ut\",\n          \"value\": \"elit aliquip cillum mollit\"\n        },\n        {\n          \"_id\": \"dolor sed cil\",\n          \"name\": \"dolor velit\",\n          \"value\": \"occaecat sed ea\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"in aliqua occaecat\",\n        \"integration\": \"aute amet\",\n        \"level\": \"consectetur exercitation sed\",\n        \"uid\": -52229459,\n        \"opted\": true,\n        \"permissions\": [\n          \"pariatur\",\n          \"velit in aute voluptate sunt\"\n        ],\n        \"token\": \"Lorem elit enim occaecat do\",\n        \"name\": \"tempor incididunt\",\n        \"stores\": [\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"sed pariatur\",\n        \"integration\": \"amet aute in\",\n        \"level\": \"eiusmod id consequat in in\",\n        \"uid\": -16054356,\n        \"opted\": false,\n        \"permissions\": [\n          \"aliqua\",\n          \"eiusmod aliquip commodo dolore id\"\n        ],\n        \"token\": \"pariatur nostrud velit proident irure\",\n        \"name\": \"aliquip non Ut Duis incididunt\",\n        \"stores\": [\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"elit Ut magna\",\n      \"description\": \"laboris dolor Ut\",\n      \"name\": \"dolore aliquip minim\",\n      \"slug\": \"anim ad\",\n      \"meta\": [\n        {\n          \"_id\": \"ipsum ut magna ex\",\n          \"name\": \"aliqua tempor\",\n          \"value\": \"est adipisicing reprehenderit ut\"\n        },\n        {\n          \"_id\": \"tempor Lorem\",\n          \"name\": \"pariatur mag\",\n          \"value\": \"est cillum\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"ut\",\n        \"integration\": \"officia consequat in ex\",\n        \"level\": \"reprehenderit Lorem\",\n        \"uid\": -37226616,\n        \"opted\": true,\n        \"permissions\": [\n          \"est\",\n          \"consectetur\"\n        ],\n        \"token\": \"eiusmod mollit magna quis aliquip\",\n        \"name\": \"consectetur Ut incididunt tempor\",\n        \"stores\": [\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"commodo\",\n        \"integration\": \"non aliqua\",\n        \"level\": \"exercit\",\n        \"uid\": -12576778,\n        \"opted\": false,\n        \"permissions\": [\n          \"labore\",\n          \"id sunt adipisicing\"\n        ],\n        \"token\": \"est minim\",\n        \"name\": \"commodo quis fugiat ut\",\n        \"stores\": [\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"\",\n  \"page\": {\n    \"type\": \"ut dolor\",\n    \"size\": -74519063,\n    \"current\": -23897618,\n    \"has_next\": false,\n    \"item_total\": 40308028,\n    \"next_id\": \"in ad magna proident quis\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "e1230390-091f-4d24-a106-ce6a3d56547f",
          "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
          "request": {
            "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "1318a82e-ec04-4207-a3a8-644ee97f7527",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1969-08-08T23:42:19.828Z\",\n  \"status\": 76218209,\n  \"error\": \"reprehend\",\n  \"exception\": \"Ut anim id Duis\",\n  \"message\": \"pariatur Ut\",\n  \"total_time_taken_in_millis\": -94370047,\n  \"http_status\": \"507 INSUFFICIENT_STORAGE\",\n  \"items\": {\n    \"session_id\": \"esse laborum\",\n    \"error_message\": \"consectetur veniam\"\n  },\n  \"payload\": {\n    \"session_id\": \"Ut ea\",\n    \"error_message\": \"et commodo nostrud\"\n  },\n  \"trace_id\": \"sint tempor deserunt occaecat\",\n  \"page\": {\n    \"type\": \"mollit pariatur veniam do ut\",\n    \"size\": -80141568,\n    \"current\": -13607076,\n    \"has_next\": true,\n    \"item_total\": 81508097,\n    \"next_id\": \"ullamco in est enim\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "7b92a6ef-7a81-4e95-8ec7-85e5666a3675",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1969-08-08T23:42:19.828Z\",\n  \"status\": 76218209,\n  \"error\": \"reprehend\",\n  \"exception\": \"Ut anim id Duis\",\n  \"message\": \"pariatur Ut\",\n  \"total_time_taken_in_millis\": -94370047,\n  \"http_status\": \"507 INSUFFICIENT_STORAGE\",\n  \"items\": {\n    \"session_id\": \"esse laborum\",\n    \"error_message\": \"consectetur veniam\"\n  },\n  \"payload\": {\n    \"session_id\": \"Ut ea\",\n    \"error_message\": \"et commodo nostrud\"\n  },\n  \"trace_id\": \"sint tempor deserunt occaecat\",\n  \"page\": {\n    \"type\": \"mollit pariatur veniam do ut\",\n    \"size\": -80141568,\n    \"current\": -13607076,\n    \"has_next\": true,\n    \"item_total\": 81508097,\n    \"next_id\": \"ullamco in est enim\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "cfd3b8da-4fa4-42f5-bb4f-ab029d9cbd1d",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1969-08-08T23:42:19.828Z\",\n  \"status\": 76218209,\n  \"error\": \"reprehend\",\n  \"exception\": \"Ut anim id Duis\",\n  \"message\": \"pariatur Ut\",\n  \"total_time_taken_in_millis\": -94370047,\n  \"http_status\": \"507 INSUFFICIENT_STORAGE\",\n  \"items\": {\n    \"session_id\": \"esse laborum\",\n    \"error_message\": \"consectetur veniam\"\n  },\n  \"payload\": {\n    \"session_id\": \"Ut ea\",\n    \"error_message\": \"et commodo nostrud\"\n  },\n  \"trace_id\": \"sint tempor deserunt occaecat\",\n  \"page\": {\n    \"type\": \"mollit pariatur veniam do ut\",\n    \"size\": -80141568,\n    \"current\": -13607076,\n    \"has_next\": true,\n    \"item_total\": 81508097,\n    \"next_id\": \"ullamco in est enim\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "fc0c9a7d-c87d-4daf-b430-7f8544901a18",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "fa7c2979-082f-4445-bace-0d2c86199ebd",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2015-10-06T23:13:42.829Z\",\n  \"status\": -1774838,\n  \"error\": \"Excepteur tempor ipsum nulla amet\",\n  \"exception\": \"fugiat Excepteur reprehenderit ut dolore\",\n  \"message\": \"in est dolore in cillum\",\n  \"total_time_taken_in_millis\": 50662935,\n  \"http_status\": \"416 REQUESTED_RANGE_NOT_SATISFIABLE\",\n  \"items\": {\n    \"company_id\": -5293462,\n    \"integration_data\": {\n      \"Ut01\": {},\n      \"id3\": {}\n    },\n    \"company_name\": \"sint laboris u\",\n    \"task_details\": {\n      \"type\": -17159140,\n      \"group_list\": [\n        {\n          \"text\": \"irure fugiat Lorem in\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"non deserunt sint ex occaecat\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -50499431.441868484,\n      \"safe_stock\": 48073592,\n      \"period_threshold\": -54976264,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"laborum tempor officia\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"reprehenderit nisi labore\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"cupidatat e\",\n    \"alias\": \"et eu\"\n  },\n  \"payload\": {\n    \"company_id\": -62285037,\n    \"integration_data\": {\n      \"dolor9\": {}\n    },\n    \"company_name\": \"dolor Duis Ut non\",\n    \"task_details\": {\n      \"type\": 10117930,\n      \"group_list\": [\n        {\n          \"text\": \"velit dolore cillum\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"ullamco minim sint nisi\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -72024665.25985822,\n      \"safe_stock\": -90740001,\n      \"period_threshold\": 63154100,\n      \"period_threshold_type\": \"HOURS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"consectetur laborum incididunt sint\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"pariatur\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"est\",\n    \"alias\": \"deserunt nostrud\"\n  },\n  \"trace_id\": \"aute d\",\n  \"page\": {\n    \"type\": \"commodo nulla\",\n    \"size\": -33359268,\n    \"current\": -88285750,\n    \"has_next\": false,\n    \"item_total\": 59564007,\n    \"next_id\": \"mollit nulla irure dolor velit\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a1b6b2aa-e306-4359-9f8e-abbf64f00581",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2004-11-15T23:15:31.553Z\",\n  \"status\": 62343266,\n  \"error\": \"sunt\",\n  \"exception\": \"laborum cupidatat reprehenderit\",\n  \"message\": \"ut laborum i\",\n  \"total_time_taken_in_millis\": 50892371,\n  \"http_status\": \"403 FORBIDDEN\",\n  \"items\": {\n    \"company_id\": 91358672,\n    \"integration_data\": {\n      \"eu_8a1\": {}\n    },\n    \"company_name\": \"nisi adipisicing Excepteur ut\",\n    \"task_details\": {\n      \"type\": 2401346,\n      \"group_list\": [\n        {\n          \"text\": \"dolor dolor occaecat\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"cupidatat dolore proident irure\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 57132220.60760522,\n      \"safe_stock\": 69876125,\n      \"period_threshold\": -6323826,\n      \"period_threshold_type\": \"HOURS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"tempor veniam sit in labo\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"sit anim Lorem\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"si\",\n    \"alias\": \"in pariatur anim ipsum\"\n  },\n  \"payload\": {\n    \"company_id\": 83925662,\n    \"integration_data\": {\n      \"sed_0\": {}\n    },\n    \"company_name\": \"occ\",\n    \"task_details\": {\n      \"type\": -84418206,\n      \"group_list\": [\n        {\n          \"text\": \"amet cillum irure nostrud\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"qui aliquip laboris\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 69212233.42952168,\n      \"safe_stock\": -13946630,\n      \"period_threshold\": 75594571,\n      \"period_threshold_type\": \"HOURS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"adipisicing\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"tempor reprehenderit irure\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"exercitation ea ut occaecat Excepteur\",\n    \"alias\": \"id irure dolore\"\n  },\n  \"trace_id\": \"Ut amet sunt\",\n  \"page\": {\n    \"type\": \"nisi ad lab\",\n    \"size\": -52912942,\n    \"current\": -71845526,\n    \"has_next\": true,\n    \"item_total\": -29677688,\n    \"next_id\": \"Ut voluptate amet eu\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ebc71fb9-b75f-406c-93b5-bc592b683577",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2004-11-15T23:15:31.553Z\",\n  \"status\": 62343266,\n  \"error\": \"sunt\",\n  \"exception\": \"laborum cupidatat reprehenderit\",\n  \"message\": \"ut laborum i\",\n  \"total_time_taken_in_millis\": 50892371,\n  \"http_status\": \"403 FORBIDDEN\",\n  \"items\": {\n    \"company_id\": 91358672,\n    \"integration_data\": {\n      \"eu_8a1\": {}\n    },\n    \"company_name\": \"nisi adipisicing Excepteur ut\",\n    \"task_details\": {\n      \"type\": 2401346,\n      \"group_list\": [\n        {\n          \"text\": \"dolor dolor occaecat\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"cupidatat dolore proident irure\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 57132220.60760522,\n      \"safe_stock\": 69876125,\n      \"period_threshold\": -6323826,\n      \"period_threshold_type\": \"HOURS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"tempor veniam sit in labo\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"sit anim Lorem\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"si\",\n    \"alias\": \"in pariatur anim ipsum\"\n  },\n  \"payload\": {\n    \"company_id\": 83925662,\n    \"integration_data\": {\n      \"sed_0\": {}\n    },\n    \"company_name\": \"occ\",\n    \"task_details\": {\n      \"type\": -84418206,\n      \"group_list\": [\n        {\n          \"text\": \"amet cillum irure nostrud\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"qui aliquip laboris\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 69212233.42952168,\n      \"safe_stock\": -13946630,\n      \"period_threshold\": 75594571,\n      \"period_threshold_type\": \"HOURS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"adipisicing\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"tempor reprehenderit irure\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"exercitation ea ut occaecat Excepteur\",\n    \"alias\": \"id irure dolore\"\n  },\n  \"trace_id\": \"Ut amet sunt\",\n  \"page\": {\n    \"type\": \"nisi ad lab\",\n    \"size\": -52912942,\n    \"current\": -71845526,\n    \"has_next\": true,\n    \"item_total\": -29677688,\n    \"next_id\": \"Ut voluptate amet eu\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "c9330d22-0091-44a1-a97c-ee475be32614",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "fa44449e-1d3c-43d6-aeac-a72711ab834f",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1983-04-18T21:39:05.891Z\",\n  \"status\": -69041408,\n  \"error\": \"sit\",\n  \"exception\": \"dolor cillum pariatur\",\n  \"message\": \"non irure mollit Ut\",\n  \"total_time_taken_in_millis\": -29910435,\n  \"http_status\": \"503 SERVICE_UNAVAILABLE\",\n  \"items\": [\n    {\n      \"company_id\": -22976853,\n      \"integration_data\": {\n        \"culpa_40a\": {}\n      },\n      \"company_name\": \"aliquip proident eiusmod\",\n      \"task_details\": {\n        \"type\": 84237510,\n        \"group_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 95968550.93106002,\n        \"safe_stock\": 15652832,\n        \"period_threshold\": -51882883,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"job_code\": \"ex cupidatat proident dolore\",\n      \"alias\": \"sit laborum dolore\"\n    },\n    {\n      \"company_id\": 59337173,\n      \"integration_data\": {\n        \"ullamco_92\": {},\n        \"veniam_2a_\": {},\n        \"minimf8f\": {}\n      },\n      \"company_name\": \"ad eiusmod\",\n      \"task_details\": {\n        \"type\": -50586322,\n        \"group_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 82713832.40031165,\n        \"safe_stock\": 89084179,\n        \"period_threshold\": 30660862,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"job_code\": \"sint mollit\",\n      \"alias\": \"officia Lorem eiusmod quis consectetur\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": -61949638,\n      \"integration_data\": {\n        \"culpa_23\": {}\n      },\n      \"company_name\": \"aliqua esse anim\",\n      \"task_details\": {\n        \"type\": 10086533,\n        \"group_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -89588875.15191934,\n        \"safe_stock\": -5434325,\n        \"period_threshold\": -19870714,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"job_code\": \"ex qui ut Duis\",\n      \"alias\": \"culpa incididunt\"\n    },\n    {\n      \"company_id\": 13420439,\n      \"integration_data\": {\n        \"do_e86\": {},\n        \"ipsum_0c4\": {},\n        \"sit7\": {}\n      },\n      \"company_name\": \"dolore\",\n      \"task_details\": {\n        \"type\": 96508560,\n        \"group_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -16006123.968796521,\n        \"safe_stock\": 94427218,\n        \"period_threshold\": 51375560,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"job_code\": \"sunt\",\n      \"alias\": \"e\"\n    }\n  ],\n  \"trace_id\": \"aute\",\n  \"page\": {\n    \"type\": \"ipsum\",\n    \"size\": -82802703,\n    \"current\": -74201902,\n    \"has_next\": true,\n    \"item_total\": 61354233,\n    \"next_id\": \"amet cillum\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c0bc2b09-2656-43b8-9a3f-eb0bf2a8d2ac",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1969-12-16T02:32:57.423Z\",\n  \"status\": 60114660,\n  \"error\": \"dolor nostrud consequat\",\n  \"exception\": \"Lorem\",\n  \"message\": \"ex laboris\",\n  \"total_time_taken_in_millis\": 95864857,\n  \"http_status\": \"429 TOO_MANY_REQUESTS\",\n  \"items\": [\n    {\n      \"company_id\": -98278515,\n      \"integration_data\": {\n        \"aute_a68\": {}\n      },\n      \"company_name\": \"dolor sint in ut\",\n      \"task_details\": {\n        \"type\": 40221591,\n        \"group_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -57970827.5928835,\n        \"safe_stock\": 32509065,\n        \"period_threshold\": 73229108,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"job_code\": \"enim amet sed fugiat\",\n      \"alias\": \"cupidatat sint aute eu\"\n    },\n    {\n      \"company_id\": 77015427,\n      \"integration_data\": {\n        \"dolor_29\": {}\n      },\n      \"company_name\": \"proident amet\",\n      \"task_details\": {\n        \"type\": -53278530,\n        \"group_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -84817578.00742212,\n        \"safe_stock\": 48748334,\n        \"period_threshold\": 17550079,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"job_code\": \"cupidatat qui ut magna\",\n      \"alias\": \"ex et nostrud\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": 25516207,\n      \"integration_data\": {\n        \"sint7a3\": {}\n      },\n      \"company_name\": \"consectetur velit reprehenderit\",\n      \"task_details\": {\n        \"type\": -29764365,\n        \"group_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 67543065.70840907,\n        \"safe_stock\": 48488842,\n        \"period_threshold\": -58996583,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"job_code\": \"nostrud commodo laboris minim et\",\n      \"alias\": \"anim aliquip esse\"\n    },\n    {\n      \"company_id\": 48790619,\n      \"integration_data\": {\n        \"mollit__f\": {},\n        \"aute_4e\": {}\n      },\n      \"company_name\": \"eu veniam Lorem\",\n      \"task_details\": {\n        \"type\": -16650949,\n        \"group_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -20419801.988600865,\n        \"safe_stock\": 94228959,\n        \"period_threshold\": -80800480,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"job_code\": \"aliquip Duis\",\n      \"alias\": \"Ut in\"\n    }\n  ],\n  \"trace_id\": \"elit\",\n  \"page\": {\n    \"type\": \"exercitation elit voluptate id\",\n    \"size\": -38964926,\n    \"current\": 35604151,\n    \"has_next\": true,\n    \"item_total\": -28615084,\n    \"next_id\": \"veniam eu eiusmod\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "bbadb7c6-d662-48a5-8180-4330551593e6",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1969-12-16T02:32:57.423Z\",\n  \"status\": 60114660,\n  \"error\": \"dolor nostrud consequat\",\n  \"exception\": \"Lorem\",\n  \"message\": \"ex laboris\",\n  \"total_time_taken_in_millis\": 95864857,\n  \"http_status\": \"429 TOO_MANY_REQUESTS\",\n  \"items\": [\n    {\n      \"company_id\": -98278515,\n      \"integration_data\": {\n        \"aute_a68\": {}\n      },\n      \"company_name\": \"dolor sint in ut\",\n      \"task_details\": {\n        \"type\": 40221591,\n        \"group_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -57970827.5928835,\n        \"safe_stock\": 32509065,\n        \"period_threshold\": 73229108,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"job_code\": \"enim amet sed fugiat\",\n      \"alias\": \"cupidatat sint aute eu\"\n    },\n    {\n      \"company_id\": 77015427,\n      \"integration_data\": {\n        \"dolor_29\": {}\n      },\n      \"company_name\": \"proident amet\",\n      \"task_details\": {\n        \"type\": -53278530,\n        \"group_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -84817578.00742212,\n        \"safe_stock\": 48748334,\n        \"period_threshold\": 17550079,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"job_code\": \"cupidatat qui ut magna\",\n      \"alias\": \"ex et nostrud\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": 25516207,\n      \"integration_data\": {\n        \"sint7a3\": {}\n      },\n      \"company_name\": \"consectetur velit reprehenderit\",\n      \"task_details\": {\n        \"type\": -29764365,\n        \"group_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 67543065.70840907,\n        \"safe_stock\": 48488842,\n        \"period_threshold\": -58996583,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"job_code\": \"nostrud commodo laboris minim et\",\n      \"alias\": \"anim aliquip esse\"\n    },\n    {\n      \"company_id\": 48790619,\n      \"integration_data\": {\n        \"mollit__f\": {},\n        \"aute_4e\": {}\n      },\n      \"company_name\": \"eu veniam Lorem\",\n      \"task_details\": {\n        \"type\": -16650949,\n        \"group_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -20419801.988600865,\n        \"safe_stock\": 94228959,\n        \"period_threshold\": -80800480,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"job_code\": \"aliquip Duis\",\n      \"alias\": \"Ut in\"\n    }\n  ],\n  \"trace_id\": \"elit\",\n  \"page\": {\n    \"type\": \"exercitation elit voluptate id\",\n    \"size\": -38964926,\n    \"current\": 35604151,\n    \"has_next\": true,\n    \"item_total\": -28615084,\n    \"next_id\": \"veniam eu eiusmod\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "51cbb639-6156-43cb-b6e1-19fe384b4a8e",
      "name": "Partner",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "2120404c-971c-4bcc-8a9b-95ba719bd873",
          "name": "getPanelExtensionDetails | Get extension details",
          "request": {
            "name": "getPanelExtensionDetails | Get extension details",
            "description": {
              "content": "Use this API to get extension details",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "panel",
                "partners",
                "v1.0",
                "extensions",
                ":slug"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "slug",
                  "description": "(Required) pass the slug of the extension"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "91de37a0-0ea2-487a-ada8-7e6ec73032f6",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "panel",
                    "partners",
                    "v1.0",
                    "extensions",
                    ":slug"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "slug",
                      "description": "(Required) pass the slug of the extension"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"_id\": \"633ab5cb635a41fdde9fb648\",\n  \"organization_id\": \"6333fef3b1d85e44e738c138\",\n  \"extension_id\": \"633425ebb1d85e44e738c2ab\",\n  \"slug\": \"example-extension-1\",\n  \"scope\": [\n    \"company/profile\",\n    \"company/saleschannel\",\n    \"company/product\",\n    \"company/order\",\n    \"company/application/customer\",\n    \"company/application/analytics\",\n    \"company/application/storage\",\n    \"company/application/marketing\",\n    \"company/application/catalogue\",\n    \"company/application/communication\",\n    \"company/application/support\",\n    \"company/application/order\",\n    \"company/application/settings\"\n  ],\n  \"category\": {\n    \"categories_l1\": [],\n    \"categories_l2\": []\n  },\n  \"listing_info\": {\n    \"name\": \"ujjawal-example-extension-1\",\n    \"keywords\": [],\n    \"tagline\": \"test-extension for test how extensions look and work and how to create them\",\n    \"icon\": \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/AMwIEOw0U-logo.png\"\n  },\n  \"details\": {\n    \"benefits\": [\n      {\n        \"title\": \"Works fast\",\n        \"description\": \"works fast\",\n        \"_id\": \"633ab5cb635a41fdde9fb649\"\n      }\n    ],\n    \"screenshots\": {\n      \"desktop\": [\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/g95yHXkou-1024x576.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/IKdHxP2fN-1024x576.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/_auq1yvEp-1024x576.png\"\n      ],\n      \"mobile\": [\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/E_YAHM9cU-600x900.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/vEnXw9cCg-600x900.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/O3Wng4Rqn-600x900.png\"\n      ]\n    },\n    \"description\": \"<p>Sample public extension</p>\",\n    \"demo_url\": \"\",\n    \"video_url\": [\n      {\n        \"type\": \"video\",\n        \"url\": \"https://hdn-1.addsale.com/x0/products/videos/item/free/original/kizLVNWyS-video-sc-1.mp4\"\n      }\n    ],\n    \"integrations\": []\n  },\n  \"plan_type\": \"free\",\n  \"plans\": [\n    {\n      \"name\": \"Custom Free\",\n      \"features\": \"provides ease\",\n      \"type\": \"free\",\n      \"price\": {\n        \"amount\": 0,\n        \"currency\": \"INR\"\n      },\n      \"trial_days\": 0,\n      \"additional_charges\": \"\"\n    }\n  ],\n  \"plans_url\": \"\",\n  \"contact_info\": {\n    \"support\": {\n      \"email\": \"ujjawaltaleja@gofynd.com\",\n      \"phone\": \"7988169279\",\n      \"website_url\": \"\",\n      \"faq_url\": \"\",\n      \"privacy_policy_url\": \"\"\n    }\n  },\n  \"current_status\": \"active\",\n  \"coming_soon\": {\n    \"is_coming_soon\": false,\n    \"upvote_count\": 0\n  },\n  \"created_at\": \"2022-10-03T10:13:31.607Z\",\n  \"modified_at\": \"2022-10-03T10:13:31.607Z\",\n  \"organization\": {\n    \"name\": \"ujjawal-partners-fashion\",\n    \"slug\": \"ujjawa-w7t-68\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b6b669df-1995-4c07-8b34-22b47e620179",
          "name": "getOrganizationList | Get organization list",
          "request": {
            "name": "getOrganizationList | Get organization list",
            "description": {
              "content": "Use this API to get the list of organization for the current user",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "panel",
                "partners",
                "v1.0",
                "organization"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "04d2ed3c-d1f6-434a-aec1-eb4173a861f8",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "panel",
                    "partners",
                    "v1.0",
                    "organization"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"items\": [\n    {\n      \"_id\": \"610d178e2ab8f356aa98481b\",\n      \"name\": \"Fynd\",\n      \"details\": \"Fynd partner organization. Add all live extension on this environment here\",\n      \"created_at\": \"2021-08-06T11:05:50.940Z\",\n      \"slug\": \"Fynd-s8f-32\"\n    },\n    {\n      \"_id\": \"610d29f395dcfaba6b408ba6\",\n      \"name\": \"Test\",\n      \"details\": \"Test Account\",\n      \"created_at\": \"2021-08-06T12:24:19.415Z\",\n      \"slug\": \"Rushab-omn-2\"\n    }\n  ],\n  \"page\": {\n    \"type\": \"number\",\n    \"current\": 1,\n    \"size\": 10,\n    \"item_total\": 90,\n    \"has_next\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx1.de"
    }
  ],
  "info": {
    "_postman_id": "cc1f6f5e-1f9f-45a5-b7ea-0ac3126997cd",
    "name": "Fynd Platform's Public Side APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public Side APIs",
      "type": "text/plain"
    }
  }
}
