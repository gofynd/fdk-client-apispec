{
  "item": [
    {
      "id": "ef696b8a-a2ab-4b09-9c66-cd091411e8b1",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "280fff1f-bf9f-4f64-bf2d-c2ddce6fd54f",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "986fc3cc-52b2-4bd3-9a34-e4f86f35ba0b",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "Excepteur magna",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "91cdf9c2-33cb-4a64-9cfa-7679d9246b41",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "Excepteur magna",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"Invalid application domain or id.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "6280b6aa-b3b9-4545-a09d-2067c672cdff",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "Excepteur magna",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "41a3fdd1-2898-4a80-b47e-dc1623d5a5d5",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "ce2d9fa1-bcaa-4bbb-803f-50cfa0485221",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "28a0750d-2ec9-4e46-b687-75e830c4b0c7",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "d3a7e435-773f-4fd3-a0fd-05bc8be773c7",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "6c190fb2-5d67-40b6-9f7a-e3ff34e1ca40",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 52720776,\n   \"event_name\": \"ad reprehenderit esse ut pariatur\",\n   \"event_type\": \"enim dolore\",\n   \"event_category\": \"cupidatat ullamco ut sint dolor\",\n   \"version\": \"mini\",\n   \"display_name\": \"in sit sunt\",\n   \"description\": \"proident do ipsum exercitation quis\",\n   \"created_on\": \"cillum laboris dolore elit\"\n  },\n  {\n   \"id\": 55948458,\n   \"event_name\": \"in\",\n   \"event_type\": \"esse\",\n   \"event_category\": \"dolore pariatur\",\n   \"version\": \"culpa Ut dolor\",\n   \"display_name\": \"enim aliqua pariatur dolor nulla\",\n   \"description\": \"ut non laboris reprehenderit\",\n   \"created_on\": \"deserunt incididunt Ut\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "47161c93-ae06-4f23-9da3-7401e0db15f4",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "3fa014d7-27f7-422e-8efd-5f38b709ff9a",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 28493985,\n   \"event_name\": \"et fugiat id velit\",\n   \"event_type\": \"commodo dolor\",\n   \"event_category\": \"pariatur anim consequat exercitation\",\n   \"version\": \"eu ullamco amet nisi enim\",\n   \"display_name\": \"nisi fugiat ex\",\n   \"description\": \"aute ipsum sit Excepteur non\",\n   \"created_on\": \"pariatur\"\n  },\n  {\n   \"id\": 44636059,\n   \"event_name\": \"reprehenderit officia\",\n   \"event_type\": \"exercitation eu cillum qui\",\n   \"event_category\": \"in sint veniam esse in\",\n   \"version\": \"aute ipsum officia adipisicing\",\n   \"display_name\": \"adipisicing \",\n   \"description\": \"deserunt aliquip in\",\n   \"created_on\": \"nisi ut ut eu incididunt\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "1d343855-cf12-45b7-9678-56344ee62fc7",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "451d400f-e2b3-45e2-8f53-2415901446b4",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "8ee1d63c-72d4-4dc3-8214-e6e4fd480aae",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1954-02-02T06:25:54.836Z\",\n \"status\": -33938413,\n \"error\": \"pariatur consectetur\",\n \"exception\": \"proident laborum\",\n \"message\": \"ad magna dolor occaecat\",\n \"total_time_taken_in_millis\": 59949283,\n \"http_status\": \"418 I_AM_A_TEAPOT\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"dolor\",\n   \"description\": \"dolor elit minim \",\n   \"name\": \"aliquip et\",\n   \"slug\": \"labo\",\n   \"meta\": [\n    {\n     \"_id\": \"deserunt velit sint anim\",\n     \"name\": \"velit \",\n     \"value\": \"nulla cupidatat adipisicing\"\n    },\n    {\n     \"_id\": \"sint aliqua\",\n     \"name\": \"reprehenderit aliqua\",\n     \"value\": \"proident adipisicin\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"incididunt proident\",\n    \"integration\": \"Ut deserunt occaecat adipisicing id\",\n    \"level\": \"tempor ipsum\",\n    \"uid\": 85874642,\n    \"opted\": false,\n    \"permissions\": [\n     \"in qui velit nostrud\",\n     \"tempor mollit do\"\n    ],\n    \"token\": \"est officia reprehenderit\",\n    \"name\": \"ex\",\n    \"stores\": [\n     {\n      \"_id\": \"eiusmod aliquip officia\",\n      \"integration\": \"dolor eiusmod est\",\n      \"level\": \"laboris dolore aliquip\",\n      \"uid\": 27164943,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sint cupidatat in ipsum\",\n      \"code\": \"in mollit fugiat\",\n      \"name\": \"incididunt nisi fugiat dolor occaecat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"voluptate dolore\",\n      \"integration\": \"id sunt anim aliquip\",\n      \"level\": \"irure Lorem\",\n      \"uid\": -50616920,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"occaecat\",\n      \"code\": \"esse labor\",\n      \"name\": \"minim officia\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"nisi esse sed nostrud\",\n      \"integration\": \"ex pariatur ipsum ea\",\n      \"level\": \"occaecat Ut ipsum qui\",\n      \"uid\": -55287786,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"pariatur laborum eu ipsum\",\n      \"code\": \"laboris dolore\",\n      \"name\": \"qui amet\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"dolore nisi aliqua\",\n      \"integration\": \"laboris fugiat\",\n      \"level\": \"in qui ea\",\n      \"uid\": -27631593,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"veniam velit est\",\n      \"code\": \"sunt pariatur ipsum cupidata\",\n      \"name\": \"Excepteur irure laboris\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"sit commodo\",\n    \"integration\": \"labore sint culpa\",\n    \"level\": \"Ut enim minim\",\n    \"uid\": -98696332,\n    \"opted\": false,\n    \"permissions\": [\n     \"anim esse\",\n     \"enim veniam dolore\"\n    ],\n    \"token\": \"ex dolore\",\n    \"name\": \"aute\",\n    \"stores\": [\n     {\n      \"_id\": \"quis officia mollit dolore\",\n      \"integration\": \"reprehenderit dolore do aliquip\",\n      \"level\": \"est tempor et Duis\",\n      \"uid\": -23417612,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ut dolor cillum anim\",\n      \"code\": \"in in\",\n      \"name\": \"sunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"ut dolor\",\n      \"integration\": \"reprehenderit cillum veniam in Excepteur\",\n      \"level\": \"c\",\n      \"uid\": -86784159,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolore in ex veniam\",\n      \"code\": \"minim voluptate adipisicing\",\n      \"name\": \"irure\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"non velit adipisicing ipsum\",\n      \"integration\": \"officia\",\n      \"level\": \"aliquip dolore ea labore eu\",\n      \"uid\": -32525120,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"commodo e\",\n      \"code\": \"enim ea quis velit\",\n      \"name\": \"consectetur magna deserunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"tempor nisi\",\n      \"integration\": \"elit voluptate\",\n      \"level\": \"exercitation aute velit dolor\",\n      \"uid\": -7731027,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"mollit quis nisi laborum proident\",\n      \"code\": \"nulla pariatur\",\n      \"name\": \"nulla ullamco nisi incididunt commodo\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"ut proident sunt ullamco\",\n   \"description\": \"Ut deserunt aute occaecat consectetur\",\n   \"name\": \"officia aliquip est\",\n   \"slug\": \"exercitation veniam culpa nostrud\",\n   \"meta\": [\n    {\n     \"_id\": \"elit minim dolor\",\n     \"name\": \"p\",\n     \"value\": \"dolore\"\n    },\n    {\n     \"_id\": \"voluptate dolor\",\n     \"name\": \"adipisicing proident\",\n     \"value\": \"dolor minim eiusmod laborum Duis\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"velit occaecat laborum\",\n    \"integration\": \"enim dolore non in\",\n    \"level\": \"aliqua adi\",\n    \"uid\": 64912717,\n    \"opted\": true,\n    \"permissions\": [\n     \"consequat deserun\",\n     \"do ex\"\n    ],\n    \"token\": \"reprehenderit pariatur aute quis esse\",\n    \"name\": \"irure aute amet id\",\n    \"stores\": [\n     {\n      \"_id\": \"sed reprehenderit\",\n      \"integration\": \"nisi officia deserunt\",\n      \"level\": \"quis sed\",\n      \"uid\": -4989524,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolor veniam\",\n      \"code\": \"ullamco velit nisi ea\",\n      \"name\": \"dolore in commodo Ut fugiat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"id consequat dolore ut\",\n      \"integration\": \"officia\",\n      \"level\": \"cillum ea consequat veniam\",\n      \"uid\": -26327339,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"deserunt do in\",\n      \"code\": \"exercitation\",\n      \"name\": \"sit reprehende\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"consequat laborum Duis elit\",\n      \"integration\": \"culpa Lorem sed aute\",\n      \"level\": \"minim laboris culpa sunt et\",\n      \"uid\": 68111386,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in nulla do labore\",\n      \"code\": \"sin\",\n      \"name\": \"magna Ut in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"ut do\",\n      \"integration\": \"elit ipsum deserunt ullamco est\",\n      \"level\": \"pariatur irure anim Duis\",\n      \"uid\": -40517604,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"culpa amet\",\n      \"code\": \"aliquip dolore\",\n      \"name\": \"magna do dolo\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"ut Excepteur eiusmod cupidatat\",\n    \"integration\": \"dolore labore cupidatat cillum\",\n    \"level\": \"Ut Excepteur esse\",\n    \"uid\": 49923657,\n    \"opted\": true,\n    \"permissions\": [\n     \"ut Duis Excepteur et\",\n     \"voluptate magna\"\n    ],\n    \"token\": \"est anim\",\n    \"name\": \"mollit officia do ullamco aliqua\",\n    \"stores\": [\n     {\n      \"_id\": \"voluptate nulla\",\n      \"integration\": \"dolor aliqua laboris\",\n      \"level\": \"dolor eu consectetur dolor\",\n      \"uid\": -33941560,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"aute Duis\",\n      \"code\": \"consequat in veniam adipisicing\",\n      \"name\": \"magna minim voluptate in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"Lorem reprehenderit\",\n      \"integration\": \"nostrud\",\n      \"level\": \"reprehenderit\",\n      \"uid\": 37427534,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in anim est\",\n      \"code\": \"eiusmod esse consequat\",\n      \"name\": \"dolor do anim\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"dolore in\",\n      \"integration\": \"laborum \",\n      \"level\": \"sed nostrud in\",\n      \"uid\": -11774673,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ullamco exer\",\n      \"code\": \"eu in proident occaecat ex\",\n      \"name\": \"eiusmod culpa dolor\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"commodo pariatur voluptate sint\",\n      \"integration\": \"aliqu\",\n      \"level\": \"cupidatat\",\n      \"uid\": -67634088,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"labore sunt ut inc\",\n      \"code\": \"ea ullamco occaecat\",\n      \"name\": \"culpa\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"cillum dolor\",\n \"page\": {\n  \"type\": \"ex\",\n  \"size\": 22171439,\n  \"current\": -48833312,\n  \"has_next\": true,\n  \"item_total\": -13270551,\n  \"next_id\": \"sint Excepteur adipisicing\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "71b53a9d-403c-4cfd-9cf6-723d8dfc660a",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1954-02-02T06:25:54.836Z\",\n \"status\": -33938413,\n \"error\": \"pariatur consectetur\",\n \"exception\": \"proident laborum\",\n \"message\": \"ad magna dolor occaecat\",\n \"total_time_taken_in_millis\": 59949283,\n \"http_status\": \"418 I_AM_A_TEAPOT\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"dolor\",\n   \"description\": \"dolor elit minim \",\n   \"name\": \"aliquip et\",\n   \"slug\": \"labo\",\n   \"meta\": [\n    {\n     \"_id\": \"deserunt velit sint anim\",\n     \"name\": \"velit \",\n     \"value\": \"nulla cupidatat adipisicing\"\n    },\n    {\n     \"_id\": \"sint aliqua\",\n     \"name\": \"reprehenderit aliqua\",\n     \"value\": \"proident adipisicin\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"incididunt proident\",\n    \"integration\": \"Ut deserunt occaecat adipisicing id\",\n    \"level\": \"tempor ipsum\",\n    \"uid\": 85874642,\n    \"opted\": false,\n    \"permissions\": [\n     \"in qui velit nostrud\",\n     \"tempor mollit do\"\n    ],\n    \"token\": \"est officia reprehenderit\",\n    \"name\": \"ex\",\n    \"stores\": [\n     {\n      \"_id\": \"eiusmod aliquip officia\",\n      \"integration\": \"dolor eiusmod est\",\n      \"level\": \"laboris dolore aliquip\",\n      \"uid\": 27164943,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sint cupidatat in ipsum\",\n      \"code\": \"in mollit fugiat\",\n      \"name\": \"incididunt nisi fugiat dolor occaecat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"voluptate dolore\",\n      \"integration\": \"id sunt anim aliquip\",\n      \"level\": \"irure Lorem\",\n      \"uid\": -50616920,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"occaecat\",\n      \"code\": \"esse labor\",\n      \"name\": \"minim officia\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"nisi esse sed nostrud\",\n      \"integration\": \"ex pariatur ipsum ea\",\n      \"level\": \"occaecat Ut ipsum qui\",\n      \"uid\": -55287786,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"pariatur laborum eu ipsum\",\n      \"code\": \"laboris dolore\",\n      \"name\": \"qui amet\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"dolore nisi aliqua\",\n      \"integration\": \"laboris fugiat\",\n      \"level\": \"in qui ea\",\n      \"uid\": -27631593,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"veniam velit est\",\n      \"code\": \"sunt pariatur ipsum cupidata\",\n      \"name\": \"Excepteur irure laboris\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"sit commodo\",\n    \"integration\": \"labore sint culpa\",\n    \"level\": \"Ut enim minim\",\n    \"uid\": -98696332,\n    \"opted\": false,\n    \"permissions\": [\n     \"anim esse\",\n     \"enim veniam dolore\"\n    ],\n    \"token\": \"ex dolore\",\n    \"name\": \"aute\",\n    \"stores\": [\n     {\n      \"_id\": \"quis officia mollit dolore\",\n      \"integration\": \"reprehenderit dolore do aliquip\",\n      \"level\": \"est tempor et Duis\",\n      \"uid\": -23417612,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ut dolor cillum anim\",\n      \"code\": \"in in\",\n      \"name\": \"sunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"ut dolor\",\n      \"integration\": \"reprehenderit cillum veniam in Excepteur\",\n      \"level\": \"c\",\n      \"uid\": -86784159,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolore in ex veniam\",\n      \"code\": \"minim voluptate adipisicing\",\n      \"name\": \"irure\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"non velit adipisicing ipsum\",\n      \"integration\": \"officia\",\n      \"level\": \"aliquip dolore ea labore eu\",\n      \"uid\": -32525120,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"commodo e\",\n      \"code\": \"enim ea quis velit\",\n      \"name\": \"consectetur magna deserunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"tempor nisi\",\n      \"integration\": \"elit voluptate\",\n      \"level\": \"exercitation aute velit dolor\",\n      \"uid\": -7731027,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"mollit quis nisi laborum proident\",\n      \"code\": \"nulla pariatur\",\n      \"name\": \"nulla ullamco nisi incididunt commodo\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"ut proident sunt ullamco\",\n   \"description\": \"Ut deserunt aute occaecat consectetur\",\n   \"name\": \"officia aliquip est\",\n   \"slug\": \"exercitation veniam culpa nostrud\",\n   \"meta\": [\n    {\n     \"_id\": \"elit minim dolor\",\n     \"name\": \"p\",\n     \"value\": \"dolore\"\n    },\n    {\n     \"_id\": \"voluptate dolor\",\n     \"name\": \"adipisicing proident\",\n     \"value\": \"dolor minim eiusmod laborum Duis\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"velit occaecat laborum\",\n    \"integration\": \"enim dolore non in\",\n    \"level\": \"aliqua adi\",\n    \"uid\": 64912717,\n    \"opted\": true,\n    \"permissions\": [\n     \"consequat deserun\",\n     \"do ex\"\n    ],\n    \"token\": \"reprehenderit pariatur aute quis esse\",\n    \"name\": \"irure aute amet id\",\n    \"stores\": [\n     {\n      \"_id\": \"sed reprehenderit\",\n      \"integration\": \"nisi officia deserunt\",\n      \"level\": \"quis sed\",\n      \"uid\": -4989524,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolor veniam\",\n      \"code\": \"ullamco velit nisi ea\",\n      \"name\": \"dolore in commodo Ut fugiat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"id consequat dolore ut\",\n      \"integration\": \"officia\",\n      \"level\": \"cillum ea consequat veniam\",\n      \"uid\": -26327339,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"deserunt do in\",\n      \"code\": \"exercitation\",\n      \"name\": \"sit reprehende\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"consequat laborum Duis elit\",\n      \"integration\": \"culpa Lorem sed aute\",\n      \"level\": \"minim laboris culpa sunt et\",\n      \"uid\": 68111386,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in nulla do labore\",\n      \"code\": \"sin\",\n      \"name\": \"magna Ut in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"ut do\",\n      \"integration\": \"elit ipsum deserunt ullamco est\",\n      \"level\": \"pariatur irure anim Duis\",\n      \"uid\": -40517604,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"culpa amet\",\n      \"code\": \"aliquip dolore\",\n      \"name\": \"magna do dolo\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"ut Excepteur eiusmod cupidatat\",\n    \"integration\": \"dolore labore cupidatat cillum\",\n    \"level\": \"Ut Excepteur esse\",\n    \"uid\": 49923657,\n    \"opted\": true,\n    \"permissions\": [\n     \"ut Duis Excepteur et\",\n     \"voluptate magna\"\n    ],\n    \"token\": \"est anim\",\n    \"name\": \"mollit officia do ullamco aliqua\",\n    \"stores\": [\n     {\n      \"_id\": \"voluptate nulla\",\n      \"integration\": \"dolor aliqua laboris\",\n      \"level\": \"dolor eu consectetur dolor\",\n      \"uid\": -33941560,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"aute Duis\",\n      \"code\": \"consequat in veniam adipisicing\",\n      \"name\": \"magna minim voluptate in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"Lorem reprehenderit\",\n      \"integration\": \"nostrud\",\n      \"level\": \"reprehenderit\",\n      \"uid\": 37427534,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in anim est\",\n      \"code\": \"eiusmod esse consequat\",\n      \"name\": \"dolor do anim\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"dolore in\",\n      \"integration\": \"laborum \",\n      \"level\": \"sed nostrud in\",\n      \"uid\": -11774673,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ullamco exer\",\n      \"code\": \"eu in proident occaecat ex\",\n      \"name\": \"eiusmod culpa dolor\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"commodo pariatur voluptate sint\",\n      \"integration\": \"aliqu\",\n      \"level\": \"cupidatat\",\n      \"uid\": -67634088,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"labore sunt ut inc\",\n      \"code\": \"ea ullamco occaecat\",\n      \"name\": \"culpa\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"cillum dolor\",\n \"page\": {\n  \"type\": \"ex\",\n  \"size\": 22171439,\n  \"current\": -48833312,\n  \"has_next\": true,\n  \"item_total\": -13270551,\n  \"next_id\": \"sint Excepteur adipisicing\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "adc51c63-4d3e-4545-845d-08574ae9082a",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1954-02-02T06:25:54.836Z\",\n \"status\": -33938413,\n \"error\": \"pariatur consectetur\",\n \"exception\": \"proident laborum\",\n \"message\": \"ad magna dolor occaecat\",\n \"total_time_taken_in_millis\": 59949283,\n \"http_status\": \"418 I_AM_A_TEAPOT\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"dolor\",\n   \"description\": \"dolor elit minim \",\n   \"name\": \"aliquip et\",\n   \"slug\": \"labo\",\n   \"meta\": [\n    {\n     \"_id\": \"deserunt velit sint anim\",\n     \"name\": \"velit \",\n     \"value\": \"nulla cupidatat adipisicing\"\n    },\n    {\n     \"_id\": \"sint aliqua\",\n     \"name\": \"reprehenderit aliqua\",\n     \"value\": \"proident adipisicin\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"incididunt proident\",\n    \"integration\": \"Ut deserunt occaecat adipisicing id\",\n    \"level\": \"tempor ipsum\",\n    \"uid\": 85874642,\n    \"opted\": false,\n    \"permissions\": [\n     \"in qui velit nostrud\",\n     \"tempor mollit do\"\n    ],\n    \"token\": \"est officia reprehenderit\",\n    \"name\": \"ex\",\n    \"stores\": [\n     {\n      \"_id\": \"eiusmod aliquip officia\",\n      \"integration\": \"dolor eiusmod est\",\n      \"level\": \"laboris dolore aliquip\",\n      \"uid\": 27164943,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sint cupidatat in ipsum\",\n      \"code\": \"in mollit fugiat\",\n      \"name\": \"incididunt nisi fugiat dolor occaecat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"voluptate dolore\",\n      \"integration\": \"id sunt anim aliquip\",\n      \"level\": \"irure Lorem\",\n      \"uid\": -50616920,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"occaecat\",\n      \"code\": \"esse labor\",\n      \"name\": \"minim officia\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"nisi esse sed nostrud\",\n      \"integration\": \"ex pariatur ipsum ea\",\n      \"level\": \"occaecat Ut ipsum qui\",\n      \"uid\": -55287786,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"pariatur laborum eu ipsum\",\n      \"code\": \"laboris dolore\",\n      \"name\": \"qui amet\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"dolore nisi aliqua\",\n      \"integration\": \"laboris fugiat\",\n      \"level\": \"in qui ea\",\n      \"uid\": -27631593,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"veniam velit est\",\n      \"code\": \"sunt pariatur ipsum cupidata\",\n      \"name\": \"Excepteur irure laboris\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"sit commodo\",\n    \"integration\": \"labore sint culpa\",\n    \"level\": \"Ut enim minim\",\n    \"uid\": -98696332,\n    \"opted\": false,\n    \"permissions\": [\n     \"anim esse\",\n     \"enim veniam dolore\"\n    ],\n    \"token\": \"ex dolore\",\n    \"name\": \"aute\",\n    \"stores\": [\n     {\n      \"_id\": \"quis officia mollit dolore\",\n      \"integration\": \"reprehenderit dolore do aliquip\",\n      \"level\": \"est tempor et Duis\",\n      \"uid\": -23417612,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ut dolor cillum anim\",\n      \"code\": \"in in\",\n      \"name\": \"sunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"ut dolor\",\n      \"integration\": \"reprehenderit cillum veniam in Excepteur\",\n      \"level\": \"c\",\n      \"uid\": -86784159,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolore in ex veniam\",\n      \"code\": \"minim voluptate adipisicing\",\n      \"name\": \"irure\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"non velit adipisicing ipsum\",\n      \"integration\": \"officia\",\n      \"level\": \"aliquip dolore ea labore eu\",\n      \"uid\": -32525120,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"commodo e\",\n      \"code\": \"enim ea quis velit\",\n      \"name\": \"consectetur magna deserunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"tempor nisi\",\n      \"integration\": \"elit voluptate\",\n      \"level\": \"exercitation aute velit dolor\",\n      \"uid\": -7731027,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"mollit quis nisi laborum proident\",\n      \"code\": \"nulla pariatur\",\n      \"name\": \"nulla ullamco nisi incididunt commodo\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"ut proident sunt ullamco\",\n   \"description\": \"Ut deserunt aute occaecat consectetur\",\n   \"name\": \"officia aliquip est\",\n   \"slug\": \"exercitation veniam culpa nostrud\",\n   \"meta\": [\n    {\n     \"_id\": \"elit minim dolor\",\n     \"name\": \"p\",\n     \"value\": \"dolore\"\n    },\n    {\n     \"_id\": \"voluptate dolor\",\n     \"name\": \"adipisicing proident\",\n     \"value\": \"dolor minim eiusmod laborum Duis\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"velit occaecat laborum\",\n    \"integration\": \"enim dolore non in\",\n    \"level\": \"aliqua adi\",\n    \"uid\": 64912717,\n    \"opted\": true,\n    \"permissions\": [\n     \"consequat deserun\",\n     \"do ex\"\n    ],\n    \"token\": \"reprehenderit pariatur aute quis esse\",\n    \"name\": \"irure aute amet id\",\n    \"stores\": [\n     {\n      \"_id\": \"sed reprehenderit\",\n      \"integration\": \"nisi officia deserunt\",\n      \"level\": \"quis sed\",\n      \"uid\": -4989524,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolor veniam\",\n      \"code\": \"ullamco velit nisi ea\",\n      \"name\": \"dolore in commodo Ut fugiat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"id consequat dolore ut\",\n      \"integration\": \"officia\",\n      \"level\": \"cillum ea consequat veniam\",\n      \"uid\": -26327339,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"deserunt do in\",\n      \"code\": \"exercitation\",\n      \"name\": \"sit reprehende\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"consequat laborum Duis elit\",\n      \"integration\": \"culpa Lorem sed aute\",\n      \"level\": \"minim laboris culpa sunt et\",\n      \"uid\": 68111386,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in nulla do labore\",\n      \"code\": \"sin\",\n      \"name\": \"magna Ut in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"ut do\",\n      \"integration\": \"elit ipsum deserunt ullamco est\",\n      \"level\": \"pariatur irure anim Duis\",\n      \"uid\": -40517604,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"culpa amet\",\n      \"code\": \"aliquip dolore\",\n      \"name\": \"magna do dolo\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"ut Excepteur eiusmod cupidatat\",\n    \"integration\": \"dolore labore cupidatat cillum\",\n    \"level\": \"Ut Excepteur esse\",\n    \"uid\": 49923657,\n    \"opted\": true,\n    \"permissions\": [\n     \"ut Duis Excepteur et\",\n     \"voluptate magna\"\n    ],\n    \"token\": \"est anim\",\n    \"name\": \"mollit officia do ullamco aliqua\",\n    \"stores\": [\n     {\n      \"_id\": \"voluptate nulla\",\n      \"integration\": \"dolor aliqua laboris\",\n      \"level\": \"dolor eu consectetur dolor\",\n      \"uid\": -33941560,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"aute Duis\",\n      \"code\": \"consequat in veniam adipisicing\",\n      \"name\": \"magna minim voluptate in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"Lorem reprehenderit\",\n      \"integration\": \"nostrud\",\n      \"level\": \"reprehenderit\",\n      \"uid\": 37427534,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in anim est\",\n      \"code\": \"eiusmod esse consequat\",\n      \"name\": \"dolor do anim\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"dolore in\",\n      \"integration\": \"laborum \",\n      \"level\": \"sed nostrud in\",\n      \"uid\": -11774673,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ullamco exer\",\n      \"code\": \"eu in proident occaecat ex\",\n      \"name\": \"eiusmod culpa dolor\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"commodo pariatur voluptate sint\",\n      \"integration\": \"aliqu\",\n      \"level\": \"cupidatat\",\n      \"uid\": -67634088,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"labore sunt ut inc\",\n      \"code\": \"ea ullamco occaecat\",\n      \"name\": \"culpa\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"cillum dolor\",\n \"page\": {\n  \"type\": \"ex\",\n  \"size\": 22171439,\n  \"current\": -48833312,\n  \"has_next\": true,\n  \"item_total\": -13270551,\n  \"next_id\": \"sint Excepteur adipisicing\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "84c78dfd-1c41-478a-8f04-8454d9729d38",
          "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
          "request": {
            "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "b879e391-8716-4b0c-801e-e2b7dc3d1b66",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1967-02-15T19:12:24.426Z\",\n \"status\": 83412309,\n \"error\": \"ipsum ut ut velit\",\n \"exception\": \"dolore\",\n \"message\": \"ex nisi aute s\",\n \"total_time_taken_in_millis\": -15260963,\n \"http_status\": \"508 LOOP_DETECTED\",\n \"items\": {\n  \"session_id\": \"pariatur deser\",\n  \"error_message\": \"labore voluptate mollit\"\n },\n \"payload\": {\n  \"session_id\": \"aute ad dolore sed eiusmod\",\n  \"error_message\": \"laborum officia eiusmod ea\"\n },\n \"trace_id\": \"aliquip eiusmod ipsum minim\",\n \"page\": {\n  \"type\": \"eu veniam\",\n  \"size\": -91905070,\n  \"current\": 41695031,\n  \"has_next\": true,\n  \"item_total\": -76613629,\n  \"next_id\": \"Ut\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "6f50483e-50f7-4ae5-8741-ab78618e9ce3",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1967-02-15T19:12:24.426Z\",\n \"status\": 83412309,\n \"error\": \"ipsum ut ut velit\",\n \"exception\": \"dolore\",\n \"message\": \"ex nisi aute s\",\n \"total_time_taken_in_millis\": -15260963,\n \"http_status\": \"508 LOOP_DETECTED\",\n \"items\": {\n  \"session_id\": \"pariatur deser\",\n  \"error_message\": \"labore voluptate mollit\"\n },\n \"payload\": {\n  \"session_id\": \"aute ad dolore sed eiusmod\",\n  \"error_message\": \"laborum officia eiusmod ea\"\n },\n \"trace_id\": \"aliquip eiusmod ipsum minim\",\n \"page\": {\n  \"type\": \"eu veniam\",\n  \"size\": -91905070,\n  \"current\": 41695031,\n  \"has_next\": true,\n  \"item_total\": -76613629,\n  \"next_id\": \"Ut\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "56ec670b-a427-4f6f-92d6-206ead1b05cd",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1967-02-15T19:12:24.426Z\",\n \"status\": 83412309,\n \"error\": \"ipsum ut ut velit\",\n \"exception\": \"dolore\",\n \"message\": \"ex nisi aute s\",\n \"total_time_taken_in_millis\": -15260963,\n \"http_status\": \"508 LOOP_DETECTED\",\n \"items\": {\n  \"session_id\": \"pariatur deser\",\n  \"error_message\": \"labore voluptate mollit\"\n },\n \"payload\": {\n  \"session_id\": \"aute ad dolore sed eiusmod\",\n  \"error_message\": \"laborum officia eiusmod ea\"\n },\n \"trace_id\": \"aliquip eiusmod ipsum minim\",\n \"page\": {\n  \"type\": \"eu veniam\",\n  \"size\": -91905070,\n  \"current\": 41695031,\n  \"has_next\": true,\n  \"item_total\": -76613629,\n  \"next_id\": \"Ut\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "b1fee371-20f3-4b12-ab31-8a895ddfd1b2",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "cb80b9f3-942a-4235-90a0-9d16f280c0f6",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2008-07-02T09:53:31.276Z\",\n \"status\": -69141907,\n \"error\": \"tempor Lorem\",\n \"exception\": \"sint dolore\",\n \"message\": \"minim cupidatat\",\n \"total_time_taken_in_millis\": 95662986,\n \"http_status\": \"307 TEMPORARY_REDIRECT\",\n \"items\": {\n  \"company_id\": 22138705,\n  \"integration_data\": {},\n  \"company_name\": \"irure laborum\",\n  \"task_details\": {\n   \"type\": -86381996,\n   \"group_list\": [\n    {\n     \"text\": \"officia minim labore reprehenderit\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"in voluptate reprehenderit magna Ut\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 83348499.14277408,\n   \"safe_stock\": -39164778,\n   \"period_threshold\": -67362502,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"dolor m\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ex\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"Excepteur quis Duis \",\n  \"alias\": \"consequat elit anim ut\"\n },\n \"payload\": {\n  \"company_id\": -36485700,\n  \"integration_data\": {},\n  \"company_name\": \"commodo\",\n  \"task_details\": {\n   \"type\": -45946724,\n   \"group_list\": [\n    {\n     \"text\": \"Duis voluptate labore\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"exercitation magna ea\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -57282410.67019715,\n   \"safe_stock\": 60498078,\n   \"period_threshold\": 41167093,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"id magna ea\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"non aliqua\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"commodo deserunt\",\n  \"alias\": \"ea sint dolor commodo quis\"\n },\n \"trace_id\": \"ullamco\",\n \"page\": {\n  \"type\": \"non mollit\",\n  \"size\": -39388818,\n  \"current\": -42033099,\n  \"has_next\": false,\n  \"item_total\": -55938233,\n  \"next_id\": \"voluptate et nostrud dolore sunt\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5b3f2c0f-a2db-4157-99cd-090b015c54a5",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2008-07-02T09:53:31.276Z\",\n \"status\": -69141907,\n \"error\": \"tempor Lorem\",\n \"exception\": \"sint dolore\",\n \"message\": \"minim cupidatat\",\n \"total_time_taken_in_millis\": 95662986,\n \"http_status\": \"307 TEMPORARY_REDIRECT\",\n \"items\": {\n  \"company_id\": 22138705,\n  \"integration_data\": {},\n  \"company_name\": \"irure laborum\",\n  \"task_details\": {\n   \"type\": -86381996,\n   \"group_list\": [\n    {\n     \"text\": \"officia minim labore reprehenderit\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"in voluptate reprehenderit magna Ut\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 83348499.14277408,\n   \"safe_stock\": -39164778,\n   \"period_threshold\": -67362502,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"dolor m\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ex\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"Excepteur quis Duis \",\n  \"alias\": \"consequat elit anim ut\"\n },\n \"payload\": {\n  \"company_id\": -36485700,\n  \"integration_data\": {},\n  \"company_name\": \"commodo\",\n  \"task_details\": {\n   \"type\": -45946724,\n   \"group_list\": [\n    {\n     \"text\": \"Duis voluptate labore\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"exercitation magna ea\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -57282410.67019715,\n   \"safe_stock\": 60498078,\n   \"period_threshold\": 41167093,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"id magna ea\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"non aliqua\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"commodo deserunt\",\n  \"alias\": \"ea sint dolor commodo quis\"\n },\n \"trace_id\": \"ullamco\",\n \"page\": {\n  \"type\": \"non mollit\",\n  \"size\": -39388818,\n  \"current\": -42033099,\n  \"has_next\": false,\n  \"item_total\": -55938233,\n  \"next_id\": \"voluptate et nostrud dolore sunt\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "8f68000d-e9b2-4a7f-9678-69a34099a8be",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2008-07-02T09:53:31.276Z\",\n \"status\": -69141907,\n \"error\": \"tempor Lorem\",\n \"exception\": \"sint dolore\",\n \"message\": \"minim cupidatat\",\n \"total_time_taken_in_millis\": 95662986,\n \"http_status\": \"307 TEMPORARY_REDIRECT\",\n \"items\": {\n  \"company_id\": 22138705,\n  \"integration_data\": {},\n  \"company_name\": \"irure laborum\",\n  \"task_details\": {\n   \"type\": -86381996,\n   \"group_list\": [\n    {\n     \"text\": \"officia minim labore reprehenderit\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"in voluptate reprehenderit magna Ut\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 83348499.14277408,\n   \"safe_stock\": -39164778,\n   \"period_threshold\": -67362502,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"dolor m\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ex\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"Excepteur quis Duis \",\n  \"alias\": \"consequat elit anim ut\"\n },\n \"payload\": {\n  \"company_id\": -36485700,\n  \"integration_data\": {},\n  \"company_name\": \"commodo\",\n  \"task_details\": {\n   \"type\": -45946724,\n   \"group_list\": [\n    {\n     \"text\": \"Duis voluptate labore\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"exercitation magna ea\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -57282410.67019715,\n   \"safe_stock\": 60498078,\n   \"period_threshold\": 41167093,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"id magna ea\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"non aliqua\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"commodo deserunt\",\n  \"alias\": \"ea sint dolor commodo quis\"\n },\n \"trace_id\": \"ullamco\",\n \"page\": {\n  \"type\": \"non mollit\",\n  \"size\": -39388818,\n  \"current\": -42033099,\n  \"has_next\": false,\n  \"item_total\": -55938233,\n  \"next_id\": \"voluptate et nostrud dolore sunt\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "23eb47d9-1e49-4eec-b6bc-fba989b849f0",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "91818eef-1349-488d-8c29-1901a6726fcb",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1990-06-09T00:53:54.220Z\",\n \"status\": 56055715,\n \"error\": \"esse aliquip aliqua ut\",\n \"exception\": \"veniam adipisicing laboris consectetur dolore\",\n \"message\": \"labore sunt occaecat\",\n \"total_time_taken_in_millis\": 22535654,\n \"http_status\": \"424 FAILED_DEPENDENCY\",\n \"items\": [\n  {\n   \"company_id\": -37512525,\n   \"integration_data\": {},\n   \"company_name\": \"labore in\",\n   \"task_details\": {\n    \"type\": -38719442,\n    \"group_list\": [\n     {\n      \"text\": \"exercitation Excepteur ipsum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"veniam irure\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -57929348.59631327,\n    \"safe_stock\": 23683190,\n    \"period_threshold\": -79911280,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"in sunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Duis veniam\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"voluptate id et\",\n   \"alias\": \"labore nulla laboris dolor\"\n  },\n  {\n   \"company_id\": 46559814,\n   \"integration_data\": {},\n   \"company_name\": \"ea culpa elit\",\n   \"task_details\": {\n    \"type\": -6891724,\n    \"group_list\": [\n     {\n      \"text\": \"irure\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"minim est nisi pariatur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 52770479.28527668,\n    \"safe_stock\": -63456709,\n    \"period_threshold\": 17578786,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"deserunt minim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"mollit dolo\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"minim\",\n   \"alias\": \"Excepteur enim veniam\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -9587655,\n   \"integration_data\": {},\n   \"company_name\": \"aliquip eu\",\n   \"task_details\": {\n    \"type\": 93083398,\n    \"group_list\": [\n     {\n      \"text\": \"aute Duis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Ut ullamco dolor ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 6939281.696201146,\n    \"safe_stock\": -79853258,\n    \"period_threshold\": 57616165,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"tempor elit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute fugiat ut mollit consectetur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"amet eu ex\",\n   \"alias\": \"cillum sit\"\n  },\n  {\n   \"company_id\": 77998438,\n   \"integration_data\": {},\n   \"company_name\": \"ut labore Excepteur cillum\",\n   \"task_details\": {\n    \"type\": 64841013,\n    \"group_list\": [\n     {\n      \"text\": \"v\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laboris exercitation sin\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -38015759.25274783,\n    \"safe_stock\": -87528630,\n    \"period_threshold\": 80813265,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"incididunt quis labore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"anim in deserunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ut non nisi proident id\",\n   \"alias\": \"Duis ipsum deserunt\"\n  }\n ],\n \"trace_id\": \"culpa sint \",\n \"page\": {\n  \"type\": \"pariatur in incididunt\",\n  \"size\": 80129911,\n  \"current\": -78913042,\n  \"has_next\": true,\n  \"item_total\": 69032710,\n  \"next_id\": \"eiusmod\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b1a21dcf-8f8e-4756-bdab-577e22b3c2a5",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2003-05-23T03:47:22.343Z\",\n \"status\": 4701629,\n \"error\": \"dolor culpa ipsum nulla\",\n \"exception\": \"est\",\n \"message\": \"consect\",\n \"total_time_taken_in_millis\": -53209550,\n \"http_status\": \"413 PAYLOAD_TOO_LARGE\",\n \"items\": [\n  {\n   \"company_id\": -17344161,\n   \"integration_data\": {},\n   \"company_name\": \"reprehenderit culpa irure\",\n   \"task_details\": {\n    \"type\": 24517285,\n    \"group_list\": [\n     {\n      \"text\": \"anim elit nisi ad\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"esse consequat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -77802548.21206039,\n    \"safe_stock\": 76883482,\n    \"period_threshold\": 45398703,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"eu in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"commodo esse occaecat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"quis aliqua aute\",\n   \"alias\": \"occaecat\"\n  },\n  {\n   \"company_id\": 50795357,\n   \"integration_data\": {},\n   \"company_name\": \"non cupidatat consectetur\",\n   \"task_details\": {\n    \"type\": 79618689,\n    \"group_list\": [\n     {\n      \"text\": \"Lorem elit paria\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"deserunt nos\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -51647043.46205591,\n    \"safe_stock\": -1510594,\n    \"period_threshold\": -21495149,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"quis eu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"t\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ea ut deserunt mollit\",\n   \"alias\": \"pariatur\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -33454833,\n   \"integration_data\": {},\n   \"company_name\": \"nisi voluptate non Excepteur\",\n   \"task_details\": {\n    \"type\": 89201940,\n    \"group_list\": [\n     {\n      \"text\": \"consequat Excepteur consectetur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor cupidatat ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -27808889.934699416,\n    \"safe_stock\": -19881632,\n    \"period_threshold\": 92257834,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"nulla\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"veniam eiusmod ullamco\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"cillum exercitation magna\",\n   \"alias\": \"veniam e\"\n  },\n  {\n   \"company_id\": -13655637,\n   \"integration_data\": {},\n   \"company_name\": \"id cupidatat mollit officia\",\n   \"task_details\": {\n    \"type\": 86915964,\n    \"group_list\": [\n     {\n      \"text\": \"ut do\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in Ut ex aliqua proident\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -61866134.3158605,\n    \"safe_stock\": 70377812,\n    \"period_threshold\": 4709538,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"incididunt mollit des\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"non laborum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Ut esse fugiat labore\",\n   \"alias\": \"ut veniam deserunt\"\n  }\n ],\n \"trace_id\": \"sit dolor Lorem\",\n \"page\": {\n  \"type\": \"do elit in officia\",\n  \"size\": -87559285,\n  \"current\": 72133737,\n  \"has_next\": false,\n  \"item_total\": 85275997,\n  \"next_id\": \"irure aute officia ullamco\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "33011a31-c3ef-40df-bcf7-ac801c486ee4",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2003-05-23T03:47:22.343Z\",\n \"status\": 4701629,\n \"error\": \"dolor culpa ipsum nulla\",\n \"exception\": \"est\",\n \"message\": \"consect\",\n \"total_time_taken_in_millis\": -53209550,\n \"http_status\": \"413 PAYLOAD_TOO_LARGE\",\n \"items\": [\n  {\n   \"company_id\": -17344161,\n   \"integration_data\": {},\n   \"company_name\": \"reprehenderit culpa irure\",\n   \"task_details\": {\n    \"type\": 24517285,\n    \"group_list\": [\n     {\n      \"text\": \"anim elit nisi ad\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"esse consequat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -77802548.21206039,\n    \"safe_stock\": 76883482,\n    \"period_threshold\": 45398703,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"eu in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"commodo esse occaecat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"quis aliqua aute\",\n   \"alias\": \"occaecat\"\n  },\n  {\n   \"company_id\": 50795357,\n   \"integration_data\": {},\n   \"company_name\": \"non cupidatat consectetur\",\n   \"task_details\": {\n    \"type\": 79618689,\n    \"group_list\": [\n     {\n      \"text\": \"Lorem elit paria\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"deserunt nos\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -51647043.46205591,\n    \"safe_stock\": -1510594,\n    \"period_threshold\": -21495149,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"quis eu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"t\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ea ut deserunt mollit\",\n   \"alias\": \"pariatur\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -33454833,\n   \"integration_data\": {},\n   \"company_name\": \"nisi voluptate non Excepteur\",\n   \"task_details\": {\n    \"type\": 89201940,\n    \"group_list\": [\n     {\n      \"text\": \"consequat Excepteur consectetur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor cupidatat ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -27808889.934699416,\n    \"safe_stock\": -19881632,\n    \"period_threshold\": 92257834,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"nulla\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"veniam eiusmod ullamco\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"cillum exercitation magna\",\n   \"alias\": \"veniam e\"\n  },\n  {\n   \"company_id\": -13655637,\n   \"integration_data\": {},\n   \"company_name\": \"id cupidatat mollit officia\",\n   \"task_details\": {\n    \"type\": 86915964,\n    \"group_list\": [\n     {\n      \"text\": \"ut do\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in Ut ex aliqua proident\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -61866134.3158605,\n    \"safe_stock\": 70377812,\n    \"period_threshold\": 4709538,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"incididunt mollit des\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"non laborum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Ut esse fugiat labore\",\n   \"alias\": \"ut veniam deserunt\"\n  }\n ],\n \"trace_id\": \"sit dolor Lorem\",\n \"page\": {\n  \"type\": \"do elit in officia\",\n  \"size\": -87559285,\n  \"current\": 72133737,\n  \"has_next\": false,\n  \"item_total\": 85275997,\n  \"next_id\": \"irure aute officia ullamco\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "a6d1b354-e290-4a3a-952d-b822a4f3d986",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "3817a5dd-4902-4da9-8684-e83d28589138",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1963-03-25T23:38:29.988Z\",\n \"status\": -50363141,\n \"error\": \"nulla ut laboris Lorem\",\n \"exception\": \"aliqua reprehenderit qui\",\n \"message\": \"non ea ex\",\n \"total_time_taken_in_millis\": -69857797,\n \"http_status\": \"510 NOT_EXTENDED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"nulla\",\n \"page\": {\n  \"type\": \"velit in deserunt fugiat\",\n  \"size\": -87005425,\n  \"current\": -22913194,\n  \"has_next\": true,\n  \"item_total\": 12435884,\n  \"next_id\": \"Duis tempor ess\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "df407aa6-8181-4985-b3e1-463509ba538b",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1963-03-25T23:38:29.988Z\",\n \"status\": -50363141,\n \"error\": \"nulla ut laboris Lorem\",\n \"exception\": \"aliqua reprehenderit qui\",\n \"message\": \"non ea ex\",\n \"total_time_taken_in_millis\": -69857797,\n \"http_status\": \"510 NOT_EXTENDED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"nulla\",\n \"page\": {\n  \"type\": \"velit in deserunt fugiat\",\n  \"size\": -87005425,\n  \"current\": -22913194,\n  \"has_next\": true,\n  \"item_total\": 12435884,\n  \"next_id\": \"Duis tempor ess\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "cca13f1d-646a-452a-8700-71c995f7304f",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1963-03-25T23:38:29.988Z\",\n \"status\": -50363141,\n \"error\": \"nulla ut laboris Lorem\",\n \"exception\": \"aliqua reprehenderit qui\",\n \"message\": \"non ea ex\",\n \"total_time_taken_in_millis\": -69857797,\n \"http_status\": \"510 NOT_EXTENDED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"nulla\",\n \"page\": {\n  \"type\": \"velit in deserunt fugiat\",\n  \"size\": -87005425,\n  \"current\": -22913194,\n  \"has_next\": true,\n  \"item_total\": 12435884,\n  \"next_id\": \"Duis tempor ess\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "bef58182-203d-4413-b3a3-64d9b36ede78",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "c386f20d-fb3f-4378-8a2d-f9d277f801f2",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1992-09-08T08:57:43.940Z\",\n \"status\": 51163140,\n \"error\": \"commodo amet enim\",\n \"exception\": \"consectetur\",\n \"message\": \"Ut esse\",\n \"total_time_taken_in_millis\": -52141073,\n \"http_status\": \"415 UNSUPPORTED_MEDIA_TYPE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"sed consequat\",\n \"page\": {\n  \"type\": \"sunt irure id culpa deserunt\",\n  \"size\": 77999678,\n  \"current\": 66573545,\n  \"has_next\": true,\n  \"item_total\": -6510469,\n  \"next_id\": \"sint aliqua \",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2aee4284-f263-4839-93b1-65d25dd62c2f",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1992-09-08T08:57:43.940Z\",\n \"status\": 51163140,\n \"error\": \"commodo amet enim\",\n \"exception\": \"consectetur\",\n \"message\": \"Ut esse\",\n \"total_time_taken_in_millis\": -52141073,\n \"http_status\": \"415 UNSUPPORTED_MEDIA_TYPE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"sed consequat\",\n \"page\": {\n  \"type\": \"sunt irure id culpa deserunt\",\n  \"size\": 77999678,\n  \"current\": 66573545,\n  \"has_next\": true,\n  \"item_total\": -6510469,\n  \"next_id\": \"sint aliqua \",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "08a0aa94-14b5-484d-abae-ca7dece9a5ab",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1992-09-08T08:57:43.940Z\",\n \"status\": 51163140,\n \"error\": \"commodo amet enim\",\n \"exception\": \"consectetur\",\n \"message\": \"Ut esse\",\n \"total_time_taken_in_millis\": -52141073,\n \"http_status\": \"415 UNSUPPORTED_MEDIA_TYPE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"sed consequat\",\n \"page\": {\n  \"type\": \"sunt irure id culpa deserunt\",\n  \"size\": 77999678,\n  \"current\": 66573545,\n  \"has_next\": true,\n  \"item_total\": -6510469,\n  \"next_id\": \"sint aliqua \",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b3c4c7ae-9f90-43be-ba8c-c7937cbd0c40",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1992-09-08T08:57:43.940Z\",\n \"status\": 51163140,\n \"error\": \"commodo amet enim\",\n \"exception\": \"consectetur\",\n \"message\": \"Ut esse\",\n \"total_time_taken_in_millis\": -52141073,\n \"http_status\": \"415 UNSUPPORTED_MEDIA_TYPE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"sed consequat\",\n \"page\": {\n  \"type\": \"sunt irure id culpa deserunt\",\n  \"size\": 77999678,\n  \"current\": 66573545,\n  \"has_next\": true,\n  \"item_total\": -6510469,\n  \"next_id\": \"sint aliqua \",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "81ddaf4a-6295-474e-9e32-5abfc8ae14ed",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1992-09-08T08:57:43.940Z\",\n \"status\": 51163140,\n \"error\": \"commodo amet enim\",\n \"exception\": \"consectetur\",\n \"message\": \"Ut esse\",\n \"total_time_taken_in_millis\": -52141073,\n \"http_status\": \"415 UNSUPPORTED_MEDIA_TYPE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"sed consequat\",\n \"page\": {\n  \"type\": \"sunt irure id culpa deserunt\",\n  \"size\": 77999678,\n  \"current\": 66573545,\n  \"has_next\": true,\n  \"item_total\": -6510469,\n  \"next_id\": \"sint aliqua \",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.sngz0.de"
    }
  ],
  "info": {
    "_postman_id": "c8f229ab-3a64-4028-a704-274675ab70b9",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
