{
  "item": [
    {
      "id": "f13c8894-292a-4ead-a5c0-be72421fe6f4",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "96f93837-1ef1-4c9f-ad07-11df75380c5d",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "345e38cd-86ab-485e-8e3e-9ff7d788b114",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "laborum nisi dolore aliquip",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ac02b19b-486f-4b34-9601-fb5d6a5208b1",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "laborum nisi dolore aliquip",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "cf40f370-34ba-4b30-856a-8ebb67a38fb2",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "laborum nisi dolore aliquip",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "07370763-9146-483f-8382-1af54b2d6965",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "2869db75-06bf-499b-8ffd-3e8d76d1ddc3",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "3ff73f70-2373-4f65-a234-ba21312a4b62",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "eeba9aa6-f484-45bf-807d-74b765e32bf3",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "704427ee-b037-42b0-a541-03a1c7109e0e",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -21926217,\n   \"event_name\": \"mollit minim\",\n   \"event_type\": \"eu deserunt quis\",\n   \"event_category\": \"Duis nulla ex enim\",\n   \"version\": \"minim occaecat consequat laboris\",\n   \"display_name\": \"dolore cupidatat occaecat Duis\",\n   \"description\": \"et enim dolore nu\",\n   \"created_on\": \"dolor\"\n  },\n  {\n   \"id\": -60818606,\n   \"event_name\": \"proident Ut commodo\",\n   \"event_type\": \"laboris ullamco dolor adipisicing ipsum\",\n   \"event_category\": \"irure qui cupidatat enim\",\n   \"version\": \"occaecat in sint qui\",\n   \"display_name\": \"nulla co\",\n   \"description\": \"nisi magna sint\",\n   \"created_on\": \"sunt culpa commodo laboris\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "0f848bc0-e5c0-453f-aa8e-2e4cb2d1260d",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "8fb34401-2770-4bf8-b0c7-2842a6255fc2",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -66474688,\n   \"event_name\": \"cupidatat adipisicing irure dolor\",\n   \"event_type\": \"commodo ad\",\n   \"event_category\": \"commodo nostrud Duis\",\n   \"version\": \"in fugiat\",\n   \"display_name\": \"Excepteur aliquip aliqua anim\",\n   \"description\": \"nostrud ullamco voluptate veniam aute\",\n   \"created_on\": \"voluptate mollit\"\n  },\n  {\n   \"id\": -82495391,\n   \"event_name\": \"enim id\",\n   \"event_type\": \"laborum officia\",\n   \"event_category\": \"pariatur veniam sit adipisicing\",\n   \"version\": \"Lorem aute \",\n   \"display_name\": \"sit Ut deserunt ad\",\n   \"description\": \"laboris dolor\",\n   \"created_on\": \"dolore qui voluptate nisi dolor\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "c31c0cff-e58b-4bd9-9168-a714e118046f",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "5ed91eae-8a67-47b8-9a68-e94d37d08cbc",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "5b6d10bc-2ba9-47e4-b069-a6e4bab49d68",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1957-09-16T22:44:08.959Z\",\n \"status\": -97706474,\n \"error\": \"anim deserunt est\",\n \"exception\": \"magna aliquip\",\n \"message\": \"anim est ad\",\n \"total_time_taken_in_millis\": 20881569,\n \"http_status\": \"204 NO_CONTENT\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"esse culpa\",\n   \"description\": \"do adipisicing\",\n   \"name\": \"incididunt deserunt ex pariatur ut\",\n   \"slug\": \"ut incididunt commodo nulla\",\n   \"meta\": [\n    {\n     \"_id\": \"proid\",\n     \"name\": \"Duis enim ea laborum\",\n     \"value\": \"in qui aliquip cillum et\"\n    },\n    {\n     \"_id\": \"exercitation et\",\n     \"name\": \"reprehenderit Excepteur\",\n     \"value\": \"ut\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"dolor irure id deserunt\",\n    \"integration\": \"anim occaecat deserunt ea culpa\",\n    \"level\": \"\",\n    \"uid\": 23341814,\n    \"opted\": false,\n    \"permissions\": [\n     \"fugiat\",\n     \"qui officia nulla\"\n    ],\n    \"token\": \"sit magna cillum Lorem dolor\",\n    \"name\": \"labore ex occaecat officia\",\n    \"stores\": [\n     {\n      \"_id\": \"incididunt aliqua ullamco\",\n      \"integration\": \"nulla esse aliqua nisi\",\n      \"level\": \"consequat Excepteur aliquip pro\",\n      \"uid\": 70773197,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolor deserunt\",\n      \"code\": \"nulla mollit\",\n      \"name\": \"voluptate fugiat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"dolore consectetur eu\",\n      \"integration\": \"amet aliqua qui ut\",\n      \"level\": \"in dolor voluptate nisi\",\n      \"uid\": -16216246,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"aliquip\",\n      \"code\": \"reprehenderit mollit quis\",\n      \"name\": \"quis\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"nisi ea\",\n      \"integration\": \"ut ut labore deserunt\",\n      \"level\": \"enim\",\n      \"uid\": -99318919,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"tempor vo\",\n      \"code\": \"\",\n      \"name\": \"magna ad occaecat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"dolor aliquip\",\n      \"integration\": \"dolor occaecat non sint\",\n      \"level\": \"in exercitation voluptate\",\n      \"uid\": -4474345,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Lorem mollit\",\n      \"code\": \"Ut adipisicing dolor\",\n      \"name\": \"exercitation magna proident consequat esse\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"laborum anim\",\n    \"integration\": \"aliquip ullamco\",\n    \"level\": \"nulla nostrud commodo Duis incididunt\",\n    \"uid\": 63370374,\n    \"opted\": true,\n    \"permissions\": [\n     \"nostrud voluptate ut pariatur\",\n     \"proident\"\n    ],\n    \"token\": \"ut ex in\",\n    \"name\": \"aliqua\",\n    \"stores\": [\n     {\n      \"_id\": \"id dolore quis\",\n      \"integration\": \"ipsum proident\",\n      \"level\": \"amet irure\",\n      \"uid\": 76007203,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"proident exercitation\",\n      \"code\": \"non et reprehenderit \",\n      \"name\": \"nulla velit Excepteur\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"est nostrud dolor elit\",\n      \"integration\": \"deserunt quis aliqua Lorem\",\n      \"level\": \"adipisicing\",\n      \"uid\": -9398994,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolore minim aliquip ut\",\n      \"code\": \"quis\",\n      \"name\": \"incididunt anim\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"labore est ullamco dolore\",\n      \"integration\": \"nisi nulla ut deserunt ipsum\",\n      \"level\": \"do Duis\",\n      \"uid\": 78711511,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ad in\",\n      \"code\": \"Excepteur occaecat dolor\",\n      \"name\": \"enim proident in qui\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"cupidatat ipsum elit amet\",\n      \"integration\": \"amet in non do\",\n      \"level\": \"laboris culpa\",\n      \"uid\": 89371804,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"nisi quis dolor Excepteur amet\",\n      \"code\": \"dolore\",\n      \"name\": \"in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"adipisicing sint\",\n   \"description\": \"sit nostrud\",\n   \"name\": \"elit dolore velit\",\n   \"slug\": \"dolor sint Duis nulla\",\n   \"meta\": [\n    {\n     \"_id\": \"nostrud\",\n     \"name\": \"laboris dolore est exercitation ullamco\",\n     \"value\": \"Lorem ea nulla\"\n    },\n    {\n     \"_id\": \"dolore occaecat sed ad eiusmod\",\n     \"name\": \"in exercitation Lorem dolor\",\n     \"value\": \"anim et\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"adipisicing in reprehenderit enim\",\n    \"integration\": \"dolor\",\n    \"level\": \"adipisicing ad dolor\",\n    \"uid\": 71958782,\n    \"opted\": true,\n    \"permissions\": [\n     \"laboris enim\",\n     \"Lorem et\"\n    ],\n    \"token\": \"veniam\",\n    \"name\": \"aute esse nulla\",\n    \"stores\": [\n     {\n      \"_id\": \"adipisicing eu Lorem voluptate\",\n      \"integration\": \"deserunt anim\",\n      \"level\": \"voluptate culpa eiusmod occaecat\",\n      \"uid\": 65988366,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"mollit id nostrud ea\",\n      \"code\": \"veniam fugiat\",\n      \"name\": \"in ut sit Excepteur\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"culpa quis tempor aliqua labore\",\n      \"integration\": \"occaecat ad sint\",\n      \"level\": \"exercitation ipsum mollit veniam\",\n      \"uid\": 89043124,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"labore Lorem elit in\",\n      \"code\": \"ipsum reprehenderit\",\n      \"name\": \"est nostrud aliquip\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"voluptate in aliqua sint enim\",\n      \"integration\": \"anim ex ut reprehenderit\",\n      \"level\": \"eu ea nostrud anim nulla\",\n      \"uid\": -96133862,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"consectetur amet\",\n      \"code\": \"ullamco nulla adipisicing\",\n      \"name\": \"fugiat veniam irure consectetur dolore\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"ex sunt\",\n      \"integration\": \"sunt deserunt eu\",\n      \"level\": \"voluptate\",\n      \"uid\": 90073221,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolore laboris Duis\",\n      \"code\": \"eu non exercitation\",\n      \"name\": \"ad Duis irure\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"est officia\",\n    \"integration\": \"qui in enim ex\",\n    \"level\": \"ullamco officia minim\",\n    \"uid\": -16856971,\n    \"opted\": false,\n    \"permissions\": [\n     \"Excepteur\",\n     \"in fugiat dolore\"\n    ],\n    \"token\": \"esse do sunt\",\n    \"name\": \"nulla proident sed\",\n    \"stores\": [\n     {\n      \"_id\": \"minim elit\",\n      \"integration\": \"ea ut\",\n      \"level\": \"consequat quis\",\n      \"uid\": -98885955,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"qui irure consequat fugiat\",\n      \"code\": \"incididunt sit ipsum i\",\n      \"name\": \"ea quis elit fugiat irure\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"adipisicing\",\n      \"integration\": \"laboris consequat irure\",\n      \"level\": \"voluptate dolor ea\",\n      \"uid\": -29563181,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in Ut aliquip\",\n      \"code\": \"eu cillum nulla reprehenderit labore\",\n      \"name\": \"ad sint ex officia quis\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"esse nostrud cupidatat Excepteur\",\n      \"integration\": \"elit officia\",\n      \"level\": \"id\",\n      \"uid\": -30730178,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ex velit esse dolore eiusmod\",\n      \"code\": \"adipisicing Lorem quis dolore re\",\n      \"name\": \"sit exercitation n\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"laborum com\",\n      \"integration\": \"non do in\",\n      \"level\": \"Lorem ipsum labore\",\n      \"uid\": 41496187,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"nostr\",\n      \"code\": \"est pariatur labore dolore\",\n      \"name\": \"irure Excepteur consectetur\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"ex dolor\",\n \"page\": {\n  \"type\": \"cupidatat dolore nisi\",\n  \"size\": -76251828,\n  \"current\": 11826477,\n  \"has_next\": true,\n  \"item_total\": 87676098,\n  \"next_id\": \"in\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b0ceb305-5483-41ff-9877-4ebd6248e44f",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1957-09-16T22:44:08.959Z\",\n \"status\": -97706474,\n \"error\": \"anim deserunt est\",\n \"exception\": \"magna aliquip\",\n \"message\": \"anim est ad\",\n \"total_time_taken_in_millis\": 20881569,\n \"http_status\": \"204 NO_CONTENT\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"esse culpa\",\n   \"description\": \"do adipisicing\",\n   \"name\": \"incididunt deserunt ex pariatur ut\",\n   \"slug\": \"ut incididunt commodo nulla\",\n   \"meta\": [\n    {\n     \"_id\": \"proid\",\n     \"name\": \"Duis enim ea laborum\",\n     \"value\": \"in qui aliquip cillum et\"\n    },\n    {\n     \"_id\": \"exercitation et\",\n     \"name\": \"reprehenderit Excepteur\",\n     \"value\": \"ut\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"dolor irure id deserunt\",\n    \"integration\": \"anim occaecat deserunt ea culpa\",\n    \"level\": \"\",\n    \"uid\": 23341814,\n    \"opted\": false,\n    \"permissions\": [\n     \"fugiat\",\n     \"qui officia nulla\"\n    ],\n    \"token\": \"sit magna cillum Lorem dolor\",\n    \"name\": \"labore ex occaecat officia\",\n    \"stores\": [\n     {\n      \"_id\": \"incididunt aliqua ullamco\",\n      \"integration\": \"nulla esse aliqua nisi\",\n      \"level\": \"consequat Excepteur aliquip pro\",\n      \"uid\": 70773197,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolor deserunt\",\n      \"code\": \"nulla mollit\",\n      \"name\": \"voluptate fugiat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"dolore consectetur eu\",\n      \"integration\": \"amet aliqua qui ut\",\n      \"level\": \"in dolor voluptate nisi\",\n      \"uid\": -16216246,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"aliquip\",\n      \"code\": \"reprehenderit mollit quis\",\n      \"name\": \"quis\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"nisi ea\",\n      \"integration\": \"ut ut labore deserunt\",\n      \"level\": \"enim\",\n      \"uid\": -99318919,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"tempor vo\",\n      \"code\": \"\",\n      \"name\": \"magna ad occaecat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"dolor aliquip\",\n      \"integration\": \"dolor occaecat non sint\",\n      \"level\": \"in exercitation voluptate\",\n      \"uid\": -4474345,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Lorem mollit\",\n      \"code\": \"Ut adipisicing dolor\",\n      \"name\": \"exercitation magna proident consequat esse\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"laborum anim\",\n    \"integration\": \"aliquip ullamco\",\n    \"level\": \"nulla nostrud commodo Duis incididunt\",\n    \"uid\": 63370374,\n    \"opted\": true,\n    \"permissions\": [\n     \"nostrud voluptate ut pariatur\",\n     \"proident\"\n    ],\n    \"token\": \"ut ex in\",\n    \"name\": \"aliqua\",\n    \"stores\": [\n     {\n      \"_id\": \"id dolore quis\",\n      \"integration\": \"ipsum proident\",\n      \"level\": \"amet irure\",\n      \"uid\": 76007203,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"proident exercitation\",\n      \"code\": \"non et reprehenderit \",\n      \"name\": \"nulla velit Excepteur\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"est nostrud dolor elit\",\n      \"integration\": \"deserunt quis aliqua Lorem\",\n      \"level\": \"adipisicing\",\n      \"uid\": -9398994,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolore minim aliquip ut\",\n      \"code\": \"quis\",\n      \"name\": \"incididunt anim\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"labore est ullamco dolore\",\n      \"integration\": \"nisi nulla ut deserunt ipsum\",\n      \"level\": \"do Duis\",\n      \"uid\": 78711511,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ad in\",\n      \"code\": \"Excepteur occaecat dolor\",\n      \"name\": \"enim proident in qui\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"cupidatat ipsum elit amet\",\n      \"integration\": \"amet in non do\",\n      \"level\": \"laboris culpa\",\n      \"uid\": 89371804,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"nisi quis dolor Excepteur amet\",\n      \"code\": \"dolore\",\n      \"name\": \"in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"adipisicing sint\",\n   \"description\": \"sit nostrud\",\n   \"name\": \"elit dolore velit\",\n   \"slug\": \"dolor sint Duis nulla\",\n   \"meta\": [\n    {\n     \"_id\": \"nostrud\",\n     \"name\": \"laboris dolore est exercitation ullamco\",\n     \"value\": \"Lorem ea nulla\"\n    },\n    {\n     \"_id\": \"dolore occaecat sed ad eiusmod\",\n     \"name\": \"in exercitation Lorem dolor\",\n     \"value\": \"anim et\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"adipisicing in reprehenderit enim\",\n    \"integration\": \"dolor\",\n    \"level\": \"adipisicing ad dolor\",\n    \"uid\": 71958782,\n    \"opted\": true,\n    \"permissions\": [\n     \"laboris enim\",\n     \"Lorem et\"\n    ],\n    \"token\": \"veniam\",\n    \"name\": \"aute esse nulla\",\n    \"stores\": [\n     {\n      \"_id\": \"adipisicing eu Lorem voluptate\",\n      \"integration\": \"deserunt anim\",\n      \"level\": \"voluptate culpa eiusmod occaecat\",\n      \"uid\": 65988366,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"mollit id nostrud ea\",\n      \"code\": \"veniam fugiat\",\n      \"name\": \"in ut sit Excepteur\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"culpa quis tempor aliqua labore\",\n      \"integration\": \"occaecat ad sint\",\n      \"level\": \"exercitation ipsum mollit veniam\",\n      \"uid\": 89043124,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"labore Lorem elit in\",\n      \"code\": \"ipsum reprehenderit\",\n      \"name\": \"est nostrud aliquip\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"voluptate in aliqua sint enim\",\n      \"integration\": \"anim ex ut reprehenderit\",\n      \"level\": \"eu ea nostrud anim nulla\",\n      \"uid\": -96133862,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"consectetur amet\",\n      \"code\": \"ullamco nulla adipisicing\",\n      \"name\": \"fugiat veniam irure consectetur dolore\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"ex sunt\",\n      \"integration\": \"sunt deserunt eu\",\n      \"level\": \"voluptate\",\n      \"uid\": 90073221,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolore laboris Duis\",\n      \"code\": \"eu non exercitation\",\n      \"name\": \"ad Duis irure\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"est officia\",\n    \"integration\": \"qui in enim ex\",\n    \"level\": \"ullamco officia minim\",\n    \"uid\": -16856971,\n    \"opted\": false,\n    \"permissions\": [\n     \"Excepteur\",\n     \"in fugiat dolore\"\n    ],\n    \"token\": \"esse do sunt\",\n    \"name\": \"nulla proident sed\",\n    \"stores\": [\n     {\n      \"_id\": \"minim elit\",\n      \"integration\": \"ea ut\",\n      \"level\": \"consequat quis\",\n      \"uid\": -98885955,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"qui irure consequat fugiat\",\n      \"code\": \"incididunt sit ipsum i\",\n      \"name\": \"ea quis elit fugiat irure\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"adipisicing\",\n      \"integration\": \"laboris consequat irure\",\n      \"level\": \"voluptate dolor ea\",\n      \"uid\": -29563181,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in Ut aliquip\",\n      \"code\": \"eu cillum nulla reprehenderit labore\",\n      \"name\": \"ad sint ex officia quis\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"esse nostrud cupidatat Excepteur\",\n      \"integration\": \"elit officia\",\n      \"level\": \"id\",\n      \"uid\": -30730178,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ex velit esse dolore eiusmod\",\n      \"code\": \"adipisicing Lorem quis dolore re\",\n      \"name\": \"sit exercitation n\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"laborum com\",\n      \"integration\": \"non do in\",\n      \"level\": \"Lorem ipsum labore\",\n      \"uid\": 41496187,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"nostr\",\n      \"code\": \"est pariatur labore dolore\",\n      \"name\": \"irure Excepteur consectetur\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"ex dolor\",\n \"page\": {\n  \"type\": \"cupidatat dolore nisi\",\n  \"size\": -76251828,\n  \"current\": 11826477,\n  \"has_next\": true,\n  \"item_total\": 87676098,\n  \"next_id\": \"in\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b3d5296e-aa7f-4b09-94c8-f8fb2f791034",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1957-09-16T22:44:08.959Z\",\n \"status\": -97706474,\n \"error\": \"anim deserunt est\",\n \"exception\": \"magna aliquip\",\n \"message\": \"anim est ad\",\n \"total_time_taken_in_millis\": 20881569,\n \"http_status\": \"204 NO_CONTENT\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"esse culpa\",\n   \"description\": \"do adipisicing\",\n   \"name\": \"incididunt deserunt ex pariatur ut\",\n   \"slug\": \"ut incididunt commodo nulla\",\n   \"meta\": [\n    {\n     \"_id\": \"proid\",\n     \"name\": \"Duis enim ea laborum\",\n     \"value\": \"in qui aliquip cillum et\"\n    },\n    {\n     \"_id\": \"exercitation et\",\n     \"name\": \"reprehenderit Excepteur\",\n     \"value\": \"ut\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"dolor irure id deserunt\",\n    \"integration\": \"anim occaecat deserunt ea culpa\",\n    \"level\": \"\",\n    \"uid\": 23341814,\n    \"opted\": false,\n    \"permissions\": [\n     \"fugiat\",\n     \"qui officia nulla\"\n    ],\n    \"token\": \"sit magna cillum Lorem dolor\",\n    \"name\": \"labore ex occaecat officia\",\n    \"stores\": [\n     {\n      \"_id\": \"incididunt aliqua ullamco\",\n      \"integration\": \"nulla esse aliqua nisi\",\n      \"level\": \"consequat Excepteur aliquip pro\",\n      \"uid\": 70773197,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolor deserunt\",\n      \"code\": \"nulla mollit\",\n      \"name\": \"voluptate fugiat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"dolore consectetur eu\",\n      \"integration\": \"amet aliqua qui ut\",\n      \"level\": \"in dolor voluptate nisi\",\n      \"uid\": -16216246,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"aliquip\",\n      \"code\": \"reprehenderit mollit quis\",\n      \"name\": \"quis\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"nisi ea\",\n      \"integration\": \"ut ut labore deserunt\",\n      \"level\": \"enim\",\n      \"uid\": -99318919,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"tempor vo\",\n      \"code\": \"\",\n      \"name\": \"magna ad occaecat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"dolor aliquip\",\n      \"integration\": \"dolor occaecat non sint\",\n      \"level\": \"in exercitation voluptate\",\n      \"uid\": -4474345,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Lorem mollit\",\n      \"code\": \"Ut adipisicing dolor\",\n      \"name\": \"exercitation magna proident consequat esse\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"laborum anim\",\n    \"integration\": \"aliquip ullamco\",\n    \"level\": \"nulla nostrud commodo Duis incididunt\",\n    \"uid\": 63370374,\n    \"opted\": true,\n    \"permissions\": [\n     \"nostrud voluptate ut pariatur\",\n     \"proident\"\n    ],\n    \"token\": \"ut ex in\",\n    \"name\": \"aliqua\",\n    \"stores\": [\n     {\n      \"_id\": \"id dolore quis\",\n      \"integration\": \"ipsum proident\",\n      \"level\": \"amet irure\",\n      \"uid\": 76007203,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"proident exercitation\",\n      \"code\": \"non et reprehenderit \",\n      \"name\": \"nulla velit Excepteur\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"est nostrud dolor elit\",\n      \"integration\": \"deserunt quis aliqua Lorem\",\n      \"level\": \"adipisicing\",\n      \"uid\": -9398994,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolore minim aliquip ut\",\n      \"code\": \"quis\",\n      \"name\": \"incididunt anim\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"labore est ullamco dolore\",\n      \"integration\": \"nisi nulla ut deserunt ipsum\",\n      \"level\": \"do Duis\",\n      \"uid\": 78711511,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ad in\",\n      \"code\": \"Excepteur occaecat dolor\",\n      \"name\": \"enim proident in qui\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"cupidatat ipsum elit amet\",\n      \"integration\": \"amet in non do\",\n      \"level\": \"laboris culpa\",\n      \"uid\": 89371804,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"nisi quis dolor Excepteur amet\",\n      \"code\": \"dolore\",\n      \"name\": \"in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"adipisicing sint\",\n   \"description\": \"sit nostrud\",\n   \"name\": \"elit dolore velit\",\n   \"slug\": \"dolor sint Duis nulla\",\n   \"meta\": [\n    {\n     \"_id\": \"nostrud\",\n     \"name\": \"laboris dolore est exercitation ullamco\",\n     \"value\": \"Lorem ea nulla\"\n    },\n    {\n     \"_id\": \"dolore occaecat sed ad eiusmod\",\n     \"name\": \"in exercitation Lorem dolor\",\n     \"value\": \"anim et\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"adipisicing in reprehenderit enim\",\n    \"integration\": \"dolor\",\n    \"level\": \"adipisicing ad dolor\",\n    \"uid\": 71958782,\n    \"opted\": true,\n    \"permissions\": [\n     \"laboris enim\",\n     \"Lorem et\"\n    ],\n    \"token\": \"veniam\",\n    \"name\": \"aute esse nulla\",\n    \"stores\": [\n     {\n      \"_id\": \"adipisicing eu Lorem voluptate\",\n      \"integration\": \"deserunt anim\",\n      \"level\": \"voluptate culpa eiusmod occaecat\",\n      \"uid\": 65988366,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"mollit id nostrud ea\",\n      \"code\": \"veniam fugiat\",\n      \"name\": \"in ut sit Excepteur\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"culpa quis tempor aliqua labore\",\n      \"integration\": \"occaecat ad sint\",\n      \"level\": \"exercitation ipsum mollit veniam\",\n      \"uid\": 89043124,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"labore Lorem elit in\",\n      \"code\": \"ipsum reprehenderit\",\n      \"name\": \"est nostrud aliquip\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"voluptate in aliqua sint enim\",\n      \"integration\": \"anim ex ut reprehenderit\",\n      \"level\": \"eu ea nostrud anim nulla\",\n      \"uid\": -96133862,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"consectetur amet\",\n      \"code\": \"ullamco nulla adipisicing\",\n      \"name\": \"fugiat veniam irure consectetur dolore\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"ex sunt\",\n      \"integration\": \"sunt deserunt eu\",\n      \"level\": \"voluptate\",\n      \"uid\": 90073221,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolore laboris Duis\",\n      \"code\": \"eu non exercitation\",\n      \"name\": \"ad Duis irure\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"est officia\",\n    \"integration\": \"qui in enim ex\",\n    \"level\": \"ullamco officia minim\",\n    \"uid\": -16856971,\n    \"opted\": false,\n    \"permissions\": [\n     \"Excepteur\",\n     \"in fugiat dolore\"\n    ],\n    \"token\": \"esse do sunt\",\n    \"name\": \"nulla proident sed\",\n    \"stores\": [\n     {\n      \"_id\": \"minim elit\",\n      \"integration\": \"ea ut\",\n      \"level\": \"consequat quis\",\n      \"uid\": -98885955,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"qui irure consequat fugiat\",\n      \"code\": \"incididunt sit ipsum i\",\n      \"name\": \"ea quis elit fugiat irure\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"adipisicing\",\n      \"integration\": \"laboris consequat irure\",\n      \"level\": \"voluptate dolor ea\",\n      \"uid\": -29563181,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in Ut aliquip\",\n      \"code\": \"eu cillum nulla reprehenderit labore\",\n      \"name\": \"ad sint ex officia quis\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"esse nostrud cupidatat Excepteur\",\n      \"integration\": \"elit officia\",\n      \"level\": \"id\",\n      \"uid\": -30730178,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ex velit esse dolore eiusmod\",\n      \"code\": \"adipisicing Lorem quis dolore re\",\n      \"name\": \"sit exercitation n\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"laborum com\",\n      \"integration\": \"non do in\",\n      \"level\": \"Lorem ipsum labore\",\n      \"uid\": 41496187,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"nostr\",\n      \"code\": \"est pariatur labore dolore\",\n      \"name\": \"irure Excepteur consectetur\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"ex dolor\",\n \"page\": {\n  \"type\": \"cupidatat dolore nisi\",\n  \"size\": -76251828,\n  \"current\": 11826477,\n  \"has_next\": true,\n  \"item_total\": 87676098,\n  \"next_id\": \"in\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "320c02d2-9198-40f2-a1d7-59780598d4a4",
          "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
          "request": {
            "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "e6fbb356-f0cf-4081-b751-9c0acf5105a9",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1956-12-12T10:02:51.335Z\",\n \"status\": 70310305,\n \"error\": \"proident ut\",\n \"exception\": \"aute cupidatat\",\n \"message\": \"magna consectetur fugiat enim\",\n \"total_time_taken_in_millis\": -78158975,\n \"http_status\": \"508 LOOP_DETECTED\",\n \"items\": {\n  \"session_id\": \"laboris\",\n  \"error_message\": \"et deserunt amet\"\n },\n \"payload\": {\n  \"session_id\": \"aliqua fugiat eiusmod ullamco\",\n  \"error_message\": \"sed incididunt sit\"\n },\n \"trace_id\": \"amet mollit anim do\",\n \"page\": {\n  \"type\": \"tempor eiusmod quis ad\",\n  \"size\": -73424205,\n  \"current\": -77680485,\n  \"has_next\": true,\n  \"item_total\": 30091868,\n  \"next_id\": \"non cillum\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "962f68f3-d495-4575-a7b2-bce60e83cdd1",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1956-12-12T10:02:51.335Z\",\n \"status\": 70310305,\n \"error\": \"proident ut\",\n \"exception\": \"aute cupidatat\",\n \"message\": \"magna consectetur fugiat enim\",\n \"total_time_taken_in_millis\": -78158975,\n \"http_status\": \"508 LOOP_DETECTED\",\n \"items\": {\n  \"session_id\": \"laboris\",\n  \"error_message\": \"et deserunt amet\"\n },\n \"payload\": {\n  \"session_id\": \"aliqua fugiat eiusmod ullamco\",\n  \"error_message\": \"sed incididunt sit\"\n },\n \"trace_id\": \"amet mollit anim do\",\n \"page\": {\n  \"type\": \"tempor eiusmod quis ad\",\n  \"size\": -73424205,\n  \"current\": -77680485,\n  \"has_next\": true,\n  \"item_total\": 30091868,\n  \"next_id\": \"non cillum\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e5ce7ec9-da17-45e0-bdbd-557e6d8f6c93",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1956-12-12T10:02:51.335Z\",\n \"status\": 70310305,\n \"error\": \"proident ut\",\n \"exception\": \"aute cupidatat\",\n \"message\": \"magna consectetur fugiat enim\",\n \"total_time_taken_in_millis\": -78158975,\n \"http_status\": \"508 LOOP_DETECTED\",\n \"items\": {\n  \"session_id\": \"laboris\",\n  \"error_message\": \"et deserunt amet\"\n },\n \"payload\": {\n  \"session_id\": \"aliqua fugiat eiusmod ullamco\",\n  \"error_message\": \"sed incididunt sit\"\n },\n \"trace_id\": \"amet mollit anim do\",\n \"page\": {\n  \"type\": \"tempor eiusmod quis ad\",\n  \"size\": -73424205,\n  \"current\": -77680485,\n  \"has_next\": true,\n  \"item_total\": 30091868,\n  \"next_id\": \"non cillum\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "9514b268-1b83-45fd-be2f-18737d615044",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "7315ef0d-920d-472a-99ce-82cd5de75496",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1985-05-04T14:18:02.319Z\",\n \"status\": 49755702,\n \"error\": \"nisi consectetur officia\",\n \"exception\": \"ad elit ullamco sint\",\n \"message\": \"ad mollit laboris\",\n \"total_time_taken_in_millis\": -69803708,\n \"http_status\": \"404 NOT_FOUND\",\n \"items\": {\n  \"company_id\": 75818513,\n  \"integration_data\": {},\n  \"company_name\": \"ut dolore\",\n  \"task_details\": {\n   \"type\": 22618592,\n   \"group_list\": [\n    {\n     \"text\": \"\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"incididunt labore ame\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -44701239.81256999,\n   \"safe_stock\": -87925015,\n   \"period_threshold\": -25553468,\n   \"period_threshold_type\": \"WEEKS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"proident non esse ad\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"veniam cillum\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"sed exercitation sint\",\n  \"alias\": \"do esse\"\n },\n \"payload\": {\n  \"company_id\": 89579883,\n  \"integration_data\": {},\n  \"company_name\": \"culpa quis pariatur velit\",\n  \"task_details\": {\n   \"type\": -20567072,\n   \"group_list\": [\n    {\n     \"text\": \"ut fugiat aute\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"Ut\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 4373853.185789794,\n   \"safe_stock\": 27375728,\n   \"period_threshold\": -2766730,\n   \"period_threshold_type\": \"WEEKS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"Ut Lorem \",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ullamco Lorem sed\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"ipsum ut sint\",\n  \"alias\": \"Lorem consequat\"\n },\n \"trace_id\": \"enim laboris Excepteur minim\",\n \"page\": {\n  \"type\": \"exercitation ut occaecat reprehenderit\",\n  \"size\": 96761337,\n  \"current\": -14697694,\n  \"has_next\": true,\n  \"item_total\": -91937989,\n  \"next_id\": \"aute\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f822f8f2-40ad-48e6-8439-e74c8e396659",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1985-05-04T14:18:02.319Z\",\n \"status\": 49755702,\n \"error\": \"nisi consectetur officia\",\n \"exception\": \"ad elit ullamco sint\",\n \"message\": \"ad mollit laboris\",\n \"total_time_taken_in_millis\": -69803708,\n \"http_status\": \"404 NOT_FOUND\",\n \"items\": {\n  \"company_id\": 75818513,\n  \"integration_data\": {},\n  \"company_name\": \"ut dolore\",\n  \"task_details\": {\n   \"type\": 22618592,\n   \"group_list\": [\n    {\n     \"text\": \"\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"incididunt labore ame\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -44701239.81256999,\n   \"safe_stock\": -87925015,\n   \"period_threshold\": -25553468,\n   \"period_threshold_type\": \"WEEKS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"proident non esse ad\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"veniam cillum\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"sed exercitation sint\",\n  \"alias\": \"do esse\"\n },\n \"payload\": {\n  \"company_id\": 89579883,\n  \"integration_data\": {},\n  \"company_name\": \"culpa quis pariatur velit\",\n  \"task_details\": {\n   \"type\": -20567072,\n   \"group_list\": [\n    {\n     \"text\": \"ut fugiat aute\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"Ut\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 4373853.185789794,\n   \"safe_stock\": 27375728,\n   \"period_threshold\": -2766730,\n   \"period_threshold_type\": \"WEEKS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"Ut Lorem \",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ullamco Lorem sed\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"ipsum ut sint\",\n  \"alias\": \"Lorem consequat\"\n },\n \"trace_id\": \"enim laboris Excepteur minim\",\n \"page\": {\n  \"type\": \"exercitation ut occaecat reprehenderit\",\n  \"size\": 96761337,\n  \"current\": -14697694,\n  \"has_next\": true,\n  \"item_total\": -91937989,\n  \"next_id\": \"aute\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2d633af2-cc02-40b9-bc02-ac8a5403b1a1",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1985-05-04T14:18:02.319Z\",\n \"status\": 49755702,\n \"error\": \"nisi consectetur officia\",\n \"exception\": \"ad elit ullamco sint\",\n \"message\": \"ad mollit laboris\",\n \"total_time_taken_in_millis\": -69803708,\n \"http_status\": \"404 NOT_FOUND\",\n \"items\": {\n  \"company_id\": 75818513,\n  \"integration_data\": {},\n  \"company_name\": \"ut dolore\",\n  \"task_details\": {\n   \"type\": 22618592,\n   \"group_list\": [\n    {\n     \"text\": \"\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"incididunt labore ame\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -44701239.81256999,\n   \"safe_stock\": -87925015,\n   \"period_threshold\": -25553468,\n   \"period_threshold_type\": \"WEEKS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"proident non esse ad\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"veniam cillum\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"sed exercitation sint\",\n  \"alias\": \"do esse\"\n },\n \"payload\": {\n  \"company_id\": 89579883,\n  \"integration_data\": {},\n  \"company_name\": \"culpa quis pariatur velit\",\n  \"task_details\": {\n   \"type\": -20567072,\n   \"group_list\": [\n    {\n     \"text\": \"ut fugiat aute\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"Ut\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 4373853.185789794,\n   \"safe_stock\": 27375728,\n   \"period_threshold\": -2766730,\n   \"period_threshold_type\": \"WEEKS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"Ut Lorem \",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ullamco Lorem sed\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"ipsum ut sint\",\n  \"alias\": \"Lorem consequat\"\n },\n \"trace_id\": \"enim laboris Excepteur minim\",\n \"page\": {\n  \"type\": \"exercitation ut occaecat reprehenderit\",\n  \"size\": 96761337,\n  \"current\": -14697694,\n  \"has_next\": true,\n  \"item_total\": -91937989,\n  \"next_id\": \"aute\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "db4ebc30-2eff-4657-91dc-ff242b6f213e",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "104f2fe9-6e85-4238-a3d3-6d182930a138",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1971-02-28T03:37:40.302Z\",\n \"status\": 602874,\n \"error\": \"eiusmod sed nisi\",\n \"exception\": \"sed dolor eiusmod\",\n \"message\": \"incididunt irure\",\n \"total_time_taken_in_millis\": -24418486,\n \"http_status\": \"418 I_AM_A_TEAPOT\",\n \"items\": [\n  {\n   \"company_id\": -30768774,\n   \"integration_data\": {},\n   \"company_name\": \"Excepteur\",\n   \"task_details\": {\n    \"type\": -93844259,\n    \"group_list\": [\n     {\n      \"text\": \"proident eiusmod in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laboris exercitation aute aliquip\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 84632255.24133638,\n    \"safe_stock\": -63548281,\n    \"period_threshold\": -10769660,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"reprehenderit proident esse sit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"adipisicing sunt labor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"magna labore Lorem\",\n   \"alias\": \"enim do\"\n  },\n  {\n   \"company_id\": -63744396,\n   \"integration_data\": {},\n   \"company_name\": \"eu id ex in\",\n   \"task_details\": {\n    \"type\": 14049157,\n    \"group_list\": [\n     {\n      \"text\": \"elit sint\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliqua sit ad aute\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -20813304.214523003,\n    \"safe_stock\": 39691070,\n    \"period_threshold\": -78373407,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"Lorem in dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nulla ea\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"esse tempor dolor eu\",\n   \"alias\": \"exercitation irure Duis do\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 5772103,\n   \"integration_data\": {},\n   \"company_name\": \"quis\",\n   \"task_details\": {\n    \"type\": -68607144,\n    \"group_list\": [\n     {\n      \"text\": \"dolore commodo enim quis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"amet deserunt ut voluptate\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 63221252.306773305,\n    \"safe_stock\": -57907229,\n    \"period_threshold\": 51527206,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"commodo tempor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cupidatat sunt proident\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"eiusmod velit mollit\",\n   \"alias\": \"eiusmod ex mollit anim\"\n  },\n  {\n   \"company_id\": 54161438,\n   \"integration_data\": {},\n   \"company_name\": \"sint dolore culpa reprehenderit\",\n   \"task_details\": {\n    \"type\": -52676395,\n    \"group_list\": [\n     {\n      \"text\": \"magna sint fugiat laborum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nostrud in ullamco deserunt laborum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -53175104.67939459,\n    \"safe_stock\": 87744502,\n    \"period_threshold\": 42704175,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"nulla sint elit labore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"deserunt Excepteur proident consequat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sunt tempor\",\n   \"alias\": \"ut incididunt esse dolore Ut\"\n  }\n ],\n \"trace_id\": \"irure proident\",\n \"page\": {\n  \"type\": \"Duis Lorem dolore reprehenderit tempor\",\n  \"size\": 93285297,\n  \"current\": -61224920,\n  \"has_next\": true,\n  \"item_total\": 40840095,\n  \"next_id\": \"deserunt culpa dolor et\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f5ee5735-1415-42d0-8d7d-40bfecb12961",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2020-05-18T01:54:28.169Z\",\n \"status\": -83881793,\n \"error\": \"sunt quis Lorem\",\n \"exception\": \"fugiat laboris\",\n \"message\": \"incididunt i\",\n \"total_time_taken_in_millis\": 91616328,\n \"http_status\": \"102 PROCESSING\",\n \"items\": [\n  {\n   \"company_id\": 40750828,\n   \"integration_data\": {},\n   \"company_name\": \"mollit officia sit sunt id\",\n   \"task_details\": {\n    \"type\": -25862771,\n    \"group_list\": [\n     {\n      \"text\": \"al\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proid\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 66057040.35815379,\n    \"safe_stock\": 9251494,\n    \"period_threshold\": -73449926,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"exercitation deserunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laboris voluptate veniam\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"e\",\n   \"alias\": \"eiusmod amet sed incididunt\"\n  },\n  {\n   \"company_id\": 51912077,\n   \"integration_data\": {},\n   \"company_name\": \"Lorem ex in\",\n   \"task_details\": {\n    \"type\": -76823018,\n    \"group_list\": [\n     {\n      \"text\": \"mollit occaecat sit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eu ut id no\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 64064446.275377214,\n    \"safe_stock\": 30178448,\n    \"period_threshold\": -91324774,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"proident\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"quis qui ex aute Duis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Lorem aliquip\",\n   \"alias\": \"sunt\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -4749848,\n   \"integration_data\": {},\n   \"company_name\": \"dolore sint\",\n   \"task_details\": {\n    \"type\": -75916346,\n    \"group_list\": [\n     {\n      \"text\": \"in aliqua laborum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore exercitati\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -97763349.76817153,\n    \"safe_stock\": -6994889,\n    \"period_threshold\": -19081674,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"in culpa in anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"incididunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"amet sint ull\",\n   \"alias\": \"proident id non deserunt\"\n  },\n  {\n   \"company_id\": -49690442,\n   \"integration_data\": {},\n   \"company_name\": \"quis \",\n   \"task_details\": {\n    \"type\": -65276358,\n    \"group_list\": [\n     {\n      \"text\": \"quis dolore dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Duis Ut et est\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 94548371.25262773,\n    \"safe_stock\": 20374716,\n    \"period_threshold\": 2722729,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"commodo\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nulla enim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"deserunt\",\n   \"alias\": \"commodo magna\"\n  }\n ],\n \"trace_id\": \"tempor Duis proid\",\n \"page\": {\n  \"type\": \"esse deserunt cillum\",\n  \"size\": -82265000,\n  \"current\": -24995899,\n  \"has_next\": true,\n  \"item_total\": 21498419,\n  \"next_id\": \"qui\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d8702b25-0797-4f5f-b084-365c2a7a9007",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2020-05-18T01:54:28.169Z\",\n \"status\": -83881793,\n \"error\": \"sunt quis Lorem\",\n \"exception\": \"fugiat laboris\",\n \"message\": \"incididunt i\",\n \"total_time_taken_in_millis\": 91616328,\n \"http_status\": \"102 PROCESSING\",\n \"items\": [\n  {\n   \"company_id\": 40750828,\n   \"integration_data\": {},\n   \"company_name\": \"mollit officia sit sunt id\",\n   \"task_details\": {\n    \"type\": -25862771,\n    \"group_list\": [\n     {\n      \"text\": \"al\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proid\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 66057040.35815379,\n    \"safe_stock\": 9251494,\n    \"period_threshold\": -73449926,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"exercitation deserunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laboris voluptate veniam\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"e\",\n   \"alias\": \"eiusmod amet sed incididunt\"\n  },\n  {\n   \"company_id\": 51912077,\n   \"integration_data\": {},\n   \"company_name\": \"Lorem ex in\",\n   \"task_details\": {\n    \"type\": -76823018,\n    \"group_list\": [\n     {\n      \"text\": \"mollit occaecat sit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eu ut id no\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 64064446.275377214,\n    \"safe_stock\": 30178448,\n    \"period_threshold\": -91324774,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"proident\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"quis qui ex aute Duis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Lorem aliquip\",\n   \"alias\": \"sunt\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -4749848,\n   \"integration_data\": {},\n   \"company_name\": \"dolore sint\",\n   \"task_details\": {\n    \"type\": -75916346,\n    \"group_list\": [\n     {\n      \"text\": \"in aliqua laborum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore exercitati\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -97763349.76817153,\n    \"safe_stock\": -6994889,\n    \"period_threshold\": -19081674,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"in culpa in anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"incididunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"amet sint ull\",\n   \"alias\": \"proident id non deserunt\"\n  },\n  {\n   \"company_id\": -49690442,\n   \"integration_data\": {},\n   \"company_name\": \"quis \",\n   \"task_details\": {\n    \"type\": -65276358,\n    \"group_list\": [\n     {\n      \"text\": \"quis dolore dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Duis Ut et est\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 94548371.25262773,\n    \"safe_stock\": 20374716,\n    \"period_threshold\": 2722729,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"commodo\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nulla enim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"deserunt\",\n   \"alias\": \"commodo magna\"\n  }\n ],\n \"trace_id\": \"tempor Duis proid\",\n \"page\": {\n  \"type\": \"esse deserunt cillum\",\n  \"size\": -82265000,\n  \"current\": -24995899,\n  \"has_next\": true,\n  \"item_total\": 21498419,\n  \"next_id\": \"qui\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "a6cde79a-994e-4a7c-bff7-d0e00d33da8b",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "150ad98d-4e58-44d8-a874-354c0421173d",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1988-10-08T18:13:46.535Z\",\n \"status\": -26902447,\n \"error\": \"laboris sit deserunt\",\n \"exception\": \"occaecat ex\",\n \"message\": \"ut aute\",\n \"total_time_taken_in_millis\": 48654477,\n \"http_status\": \"204 NO_CONTENT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"id dolore mollit\",\n \"page\": {\n  \"type\": \"dolore consequat ex sint ea\",\n  \"size\": 2351185,\n  \"current\": 71587017,\n  \"has_next\": true,\n  \"item_total\": -67105475,\n  \"next_id\": \"Ut sunt cupidatat\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d7193590-1ceb-458b-b47d-de8faacd040d",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1988-10-08T18:13:46.535Z\",\n \"status\": -26902447,\n \"error\": \"laboris sit deserunt\",\n \"exception\": \"occaecat ex\",\n \"message\": \"ut aute\",\n \"total_time_taken_in_millis\": 48654477,\n \"http_status\": \"204 NO_CONTENT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"id dolore mollit\",\n \"page\": {\n  \"type\": \"dolore consequat ex sint ea\",\n  \"size\": 2351185,\n  \"current\": 71587017,\n  \"has_next\": true,\n  \"item_total\": -67105475,\n  \"next_id\": \"Ut sunt cupidatat\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ebaa0f44-5053-4ed1-b1c3-5b575a868eea",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1988-10-08T18:13:46.535Z\",\n \"status\": -26902447,\n \"error\": \"laboris sit deserunt\",\n \"exception\": \"occaecat ex\",\n \"message\": \"ut aute\",\n \"total_time_taken_in_millis\": 48654477,\n \"http_status\": \"204 NO_CONTENT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"id dolore mollit\",\n \"page\": {\n  \"type\": \"dolore consequat ex sint ea\",\n  \"size\": 2351185,\n  \"current\": 71587017,\n  \"has_next\": true,\n  \"item_total\": -67105475,\n  \"next_id\": \"Ut sunt cupidatat\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "3f2b296e-9576-45d5-9981-c5d5277e7ade",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "b0fd6acc-e60e-4267-be37-a8b8d508e007",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2000-03-31T20:25:42.908Z\",\n \"status\": -15966123,\n \"error\": \"nisi commodo adipisicing\",\n \"exception\": \"sit deserunt occaecat\",\n \"message\": \"eiusmod ea adipisicing\",\n \"total_time_taken_in_millis\": -92615520,\n \"http_status\": \"505 HTTP_VERSION_NOT_SUPPORTED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"voluptate ad et amet\",\n \"page\": {\n  \"type\": \"ex aliqua\",\n  \"size\": -33967992,\n  \"current\": 89278361,\n  \"has_next\": false,\n  \"item_total\": -34526747,\n  \"next_id\": \"amet fugiat incididunt eu\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "eb85bfc4-71e0-4396-b7e8-57383e3f35b1",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2000-03-31T20:25:42.908Z\",\n \"status\": -15966123,\n \"error\": \"nisi commodo adipisicing\",\n \"exception\": \"sit deserunt occaecat\",\n \"message\": \"eiusmod ea adipisicing\",\n \"total_time_taken_in_millis\": -92615520,\n \"http_status\": \"505 HTTP_VERSION_NOT_SUPPORTED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"voluptate ad et amet\",\n \"page\": {\n  \"type\": \"ex aliqua\",\n  \"size\": -33967992,\n  \"current\": 89278361,\n  \"has_next\": false,\n  \"item_total\": -34526747,\n  \"next_id\": \"amet fugiat incididunt eu\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d189487a-272d-4465-ba5f-91bbd348588e",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2000-03-31T20:25:42.908Z\",\n \"status\": -15966123,\n \"error\": \"nisi commodo adipisicing\",\n \"exception\": \"sit deserunt occaecat\",\n \"message\": \"eiusmod ea adipisicing\",\n \"total_time_taken_in_millis\": -92615520,\n \"http_status\": \"505 HTTP_VERSION_NOT_SUPPORTED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"voluptate ad et amet\",\n \"page\": {\n  \"type\": \"ex aliqua\",\n  \"size\": -33967992,\n  \"current\": 89278361,\n  \"has_next\": false,\n  \"item_total\": -34526747,\n  \"next_id\": \"amet fugiat incididunt eu\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5f7f2c13-cfa2-4aeb-96f2-da6666a0b42d",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2000-03-31T20:25:42.908Z\",\n \"status\": -15966123,\n \"error\": \"nisi commodo adipisicing\",\n \"exception\": \"sit deserunt occaecat\",\n \"message\": \"eiusmod ea adipisicing\",\n \"total_time_taken_in_millis\": -92615520,\n \"http_status\": \"505 HTTP_VERSION_NOT_SUPPORTED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"voluptate ad et amet\",\n \"page\": {\n  \"type\": \"ex aliqua\",\n  \"size\": -33967992,\n  \"current\": 89278361,\n  \"has_next\": false,\n  \"item_total\": -34526747,\n  \"next_id\": \"amet fugiat incididunt eu\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "6d758a0e-9bf2-4e15-90ff-e7fc091b8ade",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2000-03-31T20:25:42.908Z\",\n \"status\": -15966123,\n \"error\": \"nisi commodo adipisicing\",\n \"exception\": \"sit deserunt occaecat\",\n \"message\": \"eiusmod ea adipisicing\",\n \"total_time_taken_in_millis\": -92615520,\n \"http_status\": \"505 HTTP_VERSION_NOT_SUPPORTED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"voluptate ad et amet\",\n \"page\": {\n  \"type\": \"ex aliqua\",\n  \"size\": -33967992,\n  \"current\": 89278361,\n  \"has_next\": false,\n  \"item_total\": -34526747,\n  \"next_id\": \"amet fugiat incididunt eu\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fynd.com"
    }
  ],
  "info": {
    "_postman_id": "5e13d8a6-a064-4646-9ede-1172bd532154",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
