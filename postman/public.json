{
  "item": [
    {
      "id": "c7af1276-6cad-4d8b-b1f6-a01527b58ab3",
      "name": "Billing",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "37643ade-90e8-45f5-b057-f9c93315d93f",
          "name": "getStandardPlans | Get Standard/Public Plans",
          "request": {
            "name": "getStandardPlans | Get Standard/Public Plans",
            "description": {
              "content": "Get Standard/Public Plans.\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "public",
                "billing",
                "v1.0",
                "plan",
                "detailed-list"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "platform_type",
                  "value": "<string>",
                  "description": "(Required) The type of platform for which plans are requested."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "8499eacd-f2c3-48cf-9027-cd09b79cca32",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform_type",
                      "value": "app/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"plans\": [\n    {\n      \"recurring\": {\n        \"interval\": \"month\",\n        \"interval_count\": 3\n      },\n      \"is_trial_plan\": true,\n      \"plan_group\": \"default\",\n      \"tag_lines\": [\n        \"This is 2020won trial plan\",\n        \"This is 2020won trial plan\"\n      ],\n      \"currency\": \"INR\",\n      \"is_active\": true,\n      \"is_visible\": false,\n      \"trial_period\": 30,\n      \"addons\": [\n        \"tempor consequat\",\n        \"pariatur sit\"\n      ],\n      \"tags\": [\n        \"sed Excepteur in minim\",\n        \"consequat aliqua ea laborum sed\"\n      ],\n      \"type\": \"public\",\n      \"country\": \"IN\",\n      \"_id\": \"5f0dcd866173cb003706098f\",\n      \"name\": \"30 day Trial\",\n      \"description\": \"30 day Trial\",\n      \"amount\": 0,\n      \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n      \"created_at\": \"2020-07-14T15:21:42.959Z\",\n      \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n    },\n    {\n      \"recurring\": {\n        \"interval\": \"month\",\n        \"interval_count\": 3\n      },\n      \"is_trial_plan\": true,\n      \"plan_group\": \"default\",\n      \"tag_lines\": [\n        \"This is 2020won trial plan\",\n        \"This is 2020won trial plan\"\n      ],\n      \"currency\": \"INR\",\n      \"is_active\": true,\n      \"is_visible\": false,\n      \"trial_period\": 30,\n      \"addons\": [\n        \"aliquip irure ipsum quis\",\n        \"incididunt ex\"\n      ],\n      \"tags\": [\n        \"sint labore irure\",\n        \"consectet\"\n      ],\n      \"type\": \"public\",\n      \"country\": \"IN\",\n      \"_id\": \"5f0dcd866173cb003706098f\",\n      \"name\": \"30 day Trial\",\n      \"description\": \"30 day Trial\",\n      \"amount\": 0,\n      \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n      \"created_at\": \"2020-07-14T15:21:42.959Z\",\n      \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n    }\n  ],\n  \"trial_plan\": {\n    \"recurring\": {\n      \"interval\": \"month\",\n      \"interval_count\": 3\n    },\n    \"is_trial_plan\": true,\n    \"plan_group\": \"default\",\n    \"tag_lines\": [\n      \"This is 2020won trial plan\",\n      \"This is 2020won trial plan\"\n    ],\n    \"currency\": \"INR\",\n    \"is_active\": true,\n    \"is_visible\": false,\n    \"trial_period\": 30,\n    \"addons\": [\n      \"velit eiusmod Excepteur ut\",\n      \"mollit nostrud\"\n    ],\n    \"tags\": [\n      \"Ut id velit aute\",\n      \"ullamco\"\n    ],\n    \"type\": \"public\",\n    \"country\": \"IN\",\n    \"_id\": \"5f0dcd866173cb003706098f\",\n    \"name\": \"30 day Trial\",\n    \"description\": \"30 day Trial\",\n    \"amount\": 0,\n    \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n    \"created_at\": \"2020-07-14T15:21:42.959Z\",\n    \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n  },\n  \"component_groups\": [\n    \"Key Features\",\n    \"Key Features\"\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "4929de5d-369e-4a7e-bdef-9e5b8a7e7840",
              "name": "Resource not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform_type",
                      "value": "app/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Reason is required\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "be7b5947-669b-40fc-a226-929a46a7e08b",
              "name": "Internal server error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform_type",
                      "value": "app/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Opps something went wrong !!\",\n  \"code\": \"INTERNAL_SERVER_ERROR\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "b7cca468-f89d-40f8-9256-4d555fd493ae",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "5ba5477d-310a-40d4-be2c-8a00197a6b9e",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "a8e09ac7-5a7b-4754-b059-3f5f3f8b5c07",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "nulla cillum officia ut",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"application\": {\n    \"website\": {\n      \"enabled\": true,\n      \"basepath\": \"/\"\n    },\n    \"cors\": {\n      \"domains\": []\n    },\n    \"auth\": {\n      \"enabled\": true\n    },\n    \"description\": \"test\",\n    \"channel_type\": \"store\",\n    \"cache_ttl\": -1,\n    \"internal\": false,\n    \"is_active\": true,\n    \"mode\": \"live\",\n    \"_id\": \"620b931ee7bfb11f910bf4a3\",\n    \"company_id\": 2,\n    \"name\": \"test\",\n    \"owner\": \"5b9b98150df588546aaea6d2\",\n    \"logo\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"favicon\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"banner\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n    },\n    \"token\": \"tPQv0nc23\",\n    \"tokens\": [\n      {\n        \"token\": \"tPQv0nc23\",\n        \"created_at\": \"2022-02-15T11:48:46.909Z\"\n      }\n    ],\n    \"domains\": [\n      {\n        \"verified\": true,\n        \"is_primary\": true,\n        \"is_shortlink\": true,\n        \"_id\": \"620b931ee7bfb11f910bf4a4\",\n        \"name\": \"qckvv5lhp.hostfynd.dev\"\n      }\n    ],\n    \"redirections\": [],\n    \"meta\": [],\n    \"created_at\": \"2022-02-15T11:48:46.909Z\",\n    \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n    \"__v\": 0,\n    \"domain\": {\n      \"verified\": true,\n      \"is_primary\": true,\n      \"is_shortlink\": true,\n      \"_id\": \"620b931ee7bfb11f910bf4a4\",\n      \"name\": \"qckvv5lhp.hostfynd.dev\"\n    },\n    \"id\": \"620b931ee7bfb11f910bf4a3\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "111cad8f-43c3-45d8-a640-e344aa6901ad",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "nulla cillum officia ut",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"Invalid application domain or id.\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "22205be5-fe92-4153-95f3-59b9e310e0bb",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "nulla cillum officia ut",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"No application found\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "5652d25d-4c2f-4227-98ad-1c6a63cfa317",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {
              "content": "Get Location configuration",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "fd3a137b-3905-46eb-a3af-d518aa34cf57",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"items\": [\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"magna in officia culpa dolore\",\n      \"phone_code\": \"990999092\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"velit fugiat aliqua mollit\",\n      \"country_code\": \"et laborum id\",\n      \"latitude\": \"minim ullamco\",\n      \"longitude\": \"non sint sunt\"\n    },\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"enim amet cupidatat eiusmod\",\n      \"phone_code\": \"990999092\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"tempor\",\n      \"country_code\": \"ut id\",\n      \"latitude\": \"consequat in incididunt velit\",\n      \"longitude\": \"in\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "c355ad21-bc09-45ef-aede-86f0e1cbcb21",
      "name": "Content",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "141e56ff-4b37-4132-ad89-49ac3e06361f",
          "name": "getCredentialsByEntity | Get credentials to power chat support systems",
          "request": {
            "name": "getCredentialsByEntity | Get credentials to power chat support systems",
            "description": {
              "content": "Get credentials for support system",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "public",
                "content",
                "credentials",
                ":entity"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "entity",
                  "description": "Server Type"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "51f389c8-2f49-4796-a3b7-601f5f09ef8c",
              "name": "Success. Refer `CredentialsSchema` for more details.",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "content",
                    "credentials",
                    ":entity"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "entity",
                      "description": "Server Type"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"entity_type\": \"partner\",\n  \"type\": \"freshchat\",\n  \"is_enable\": true,\n  \"configuration\": {\n    \"token\": \"a3e4gf20b-d11g-4512-n3zq-03b9aa7e1yxz\",\n    \"siteId\": \"a3e8f20b-d97f-452f-bd72-03b9aa7e1bf0\",\n    \"host\": \"https://wchat.freshchat.com\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "de5e2e54-24ec-4e6a-a15e-17fb2d7fd2bd",
              "name": "Bad Request. See the error object in the response body to know the exact reason.",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "content",
                    "credentials",
                    ":entity"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "entity",
                      "description": "Server Type"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Oops! Something went wrong. Please try later\",\n  \"status\": 400,\n  \"code\": \"CX-1003\",\n  \"exception\": \"\",\n  \"info\": \"\",\n  \"request_id\": \"\",\n  \"stack_trace\": \"\",\n  \"meta\": {}\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "3df420b8-ac58-4554-9b66-e1ac38774bb9",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "174e3d5d-aa9c-4209-b57b-5dd81833707f",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "0ab4a720-31d0-4835-8a2a-29651ea6f140",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1968-04-15T22:15:52.874Z\",\n  \"status\": 52911383,\n  \"error\": \"ex nisi anim\",\n  \"exception\": \"esse velit\",\n  \"message\": \"ex incididunt\",\n  \"total_time_taken_in_millis\": -93681067,\n  \"http_status\": \"411 LENGTH_REQUIRED\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"exercitation in Duis\",\n  \"page\": {\n    \"type\": \"anim esse in veniam\",\n    \"size\": 6141529,\n    \"current\": -8554587,\n    \"has_next\": true,\n    \"item_total\": -52895648,\n    \"next_id\": \"dolor quis aliquip labore\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "725868d1-aa78-466c-8087-91601ce36915",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1968-04-15T22:15:52.874Z\",\n  \"status\": 52911383,\n  \"error\": \"ex nisi anim\",\n  \"exception\": \"esse velit\",\n  \"message\": \"ex incididunt\",\n  \"total_time_taken_in_millis\": -93681067,\n  \"http_status\": \"411 LENGTH_REQUIRED\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"exercitation in Duis\",\n  \"page\": {\n    \"type\": \"anim esse in veniam\",\n    \"size\": 6141529,\n    \"current\": -8554587,\n    \"has_next\": true,\n    \"item_total\": -52895648,\n    \"next_id\": \"dolor quis aliquip labore\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "362d1ca8-982c-4fa7-85a0-cb896288526a",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1968-04-15T22:15:52.874Z\",\n  \"status\": 52911383,\n  \"error\": \"ex nisi anim\",\n  \"exception\": \"esse velit\",\n  \"message\": \"ex incididunt\",\n  \"total_time_taken_in_millis\": -93681067,\n  \"http_status\": \"411 LENGTH_REQUIRED\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"exercitation in Duis\",\n  \"page\": {\n    \"type\": \"anim esse in veniam\",\n    \"size\": 6141529,\n    \"current\": -8554587,\n    \"has_next\": true,\n    \"item_total\": -52895648,\n    \"next_id\": \"dolor quis aliquip labore\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "a0afa053-4265-4356-aace-e13c16fe50d1",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "7b49bca2-ebf4-4bbd-9451-ddb4978c9048",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1986-04-25T16:18:08.881Z\",\n  \"status\": 74651265,\n  \"error\": \"ipsum dolore\",\n  \"exception\": \"nulla mollit\",\n  \"message\": \"dolor do Excepteur\",\n  \"total_time_taken_in_millis\": -826048,\n  \"http_status\": \"504 GATEWAY_TIMEOUT\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"enim do voluptate nisi dolore\",\n  \"page\": {\n    \"type\": \"nisi culpa eiusmod mollit\",\n    \"size\": 74624984,\n    \"current\": 61518622,\n    \"has_next\": false,\n    \"item_total\": -5909708,\n    \"next_id\": \"Excepteur qui\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "7623364e-cd01-4b12-bf62-79f43bb58d90",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1986-04-25T16:18:08.881Z\",\n  \"status\": 74651265,\n  \"error\": \"ipsum dolore\",\n  \"exception\": \"nulla mollit\",\n  \"message\": \"dolor do Excepteur\",\n  \"total_time_taken_in_millis\": -826048,\n  \"http_status\": \"504 GATEWAY_TIMEOUT\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"enim do voluptate nisi dolore\",\n  \"page\": {\n    \"type\": \"nisi culpa eiusmod mollit\",\n    \"size\": 74624984,\n    \"current\": 61518622,\n    \"has_next\": false,\n    \"item_total\": -5909708,\n    \"next_id\": \"Excepteur qui\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "85dab7dd-c43a-4970-964f-9c94553b00d8",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1986-04-25T16:18:08.881Z\",\n  \"status\": 74651265,\n  \"error\": \"ipsum dolore\",\n  \"exception\": \"nulla mollit\",\n  \"message\": \"dolor do Excepteur\",\n  \"total_time_taken_in_millis\": -826048,\n  \"http_status\": \"504 GATEWAY_TIMEOUT\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"enim do voluptate nisi dolore\",\n  \"page\": {\n    \"type\": \"nisi culpa eiusmod mollit\",\n    \"size\": 74624984,\n    \"current\": 61518622,\n    \"has_next\": false,\n    \"item_total\": -5909708,\n    \"next_id\": \"Excepteur qui\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "98a66e90-116a-4aef-bd8f-7444cb626151",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1986-04-25T16:18:08.881Z\",\n  \"status\": 74651265,\n  \"error\": \"ipsum dolore\",\n  \"exception\": \"nulla mollit\",\n  \"message\": \"dolor do Excepteur\",\n  \"total_time_taken_in_millis\": -826048,\n  \"http_status\": \"504 GATEWAY_TIMEOUT\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"enim do voluptate nisi dolore\",\n  \"page\": {\n    \"type\": \"nisi culpa eiusmod mollit\",\n    \"size\": 74624984,\n    \"current\": 61518622,\n    \"has_next\": false,\n    \"item_total\": -5909708,\n    \"next_id\": \"Excepteur qui\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "7eca7af6-6cc4-4a64-8fb7-1af9d4f3f0b4",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1986-04-25T16:18:08.881Z\",\n  \"status\": 74651265,\n  \"error\": \"ipsum dolore\",\n  \"exception\": \"nulla mollit\",\n  \"message\": \"dolor do Excepteur\",\n  \"total_time_taken_in_millis\": -826048,\n  \"http_status\": \"504 GATEWAY_TIMEOUT\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"enim do voluptate nisi dolore\",\n  \"page\": {\n    \"type\": \"nisi culpa eiusmod mollit\",\n    \"size\": 74624984,\n    \"current\": 61518622,\n    \"has_next\": false,\n    \"item_total\": -5909708,\n    \"next_id\": \"Excepteur qui\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "f45dfabb-bbbc-48ae-b2b7-97e030c11783",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "0b5d9245-c4c5-4851-b41e-063744c85699",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1963-10-04T07:57:15.972Z\",\n  \"status\": -80439712,\n  \"error\": \"deserunt\",\n  \"exception\": \"id voluptate minim velit\",\n  \"message\": \"eu enim esse ex\",\n  \"total_time_taken_in_millis\": -90499628,\n  \"http_status\": \"505 HTTP_VERSION_NOT_SUPPORTED\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"dolor ut laboris\",\n      \"description\": \"fugiat Duis\",\n      \"name\": \"consequat Duis qui officia\",\n      \"slug\": \"non sit adipisicing\",\n      \"meta\": [\n        {\n          \"_id\": \"quis commodo exercitation ea\",\n          \"name\": \"Lorem ipsum occaecat non\",\n          \"value\": \"adipisicing d\"\n        },\n        {\n          \"_id\": \"culpa dolore laboris adipisicing ut\",\n          \"name\": \"in\",\n          \"value\": \"ullamco quis\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"qui Ut aliqua elit tempor\",\n        \"integration\": \"commodo cillum eiusmod ea\",\n        \"level\": \"sit\",\n        \"uid\": 1250343,\n        \"opted\": true,\n        \"permissions\": [\n          \"ex proident incididunt amet nulla\",\n          \"Lorem aute\"\n        ],\n        \"token\": \"ad dolore\",\n        \"name\": \"sed\",\n        \"stores\": [\n          {\n            \"_id\": \"velit sed\",\n            \"integration\": \"aliqua Lore\",\n            \"level\": \"nisi\",\n            \"uid\": -72902258,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ad adipisicing\",\n            \"code\": \"consectetur ad\",\n            \"name\": \"consectetur\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"Lorem proident qui sunt\",\n            \"integration\": \"id dolore sint\",\n            \"level\": \"sint sit\",\n            \"uid\": -36373451,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"elit nulla magna quis\",\n            \"code\": \"anim consectetur exercitation ex\",\n            \"name\": \"do proident reprehenderit Lorem\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"cupidatat ad\",\n        \"integration\": \"tempor nostrud consequat minim\",\n        \"level\": \"enim r\",\n        \"uid\": -80167298,\n        \"opted\": true,\n        \"permissions\": [\n          \"occaecat enim ea\",\n          \"pariatur quis voluptate\"\n        ],\n        \"token\": \"sit o\",\n        \"name\": \"in \",\n        \"stores\": [\n          {\n            \"_id\": \"et aliqua in cupidatat laborum\",\n            \"integration\": \"Ut ullamco\",\n            \"level\": \"deserunt in ut\",\n            \"uid\": 45491892,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"sint nostrud sit Ut est\",\n            \"code\": \"Lorem culpa\",\n            \"name\": \"ipsum nulla\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"adipisicing proident dolor\",\n            \"integration\": \"consequat cillum proident nisi\",\n            \"level\": \"minim est Excepteur\",\n            \"uid\": 78245712,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"nostrud\",\n            \"code\": \"sint est sunt\",\n            \"name\": \"fugiat \",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"in est in adipisi\",\n      \"description\": \"Lorem reprehenderit aliqua\",\n      \"name\": \"in dolor amet qui\",\n      \"slug\": \"voluptate cillum proident\",\n      \"meta\": [\n        {\n          \"_id\": \"est ad inci\",\n          \"name\": \"irure\",\n          \"value\": \"qui\"\n        },\n        {\n          \"_id\": \"consectetur dolore eiusmod\",\n          \"name\": \"dolore mollit sint laboris ut\",\n          \"value\": \"in veniam consectetur ut ullamco\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"in dolor nulla et\",\n        \"integration\": \"in\",\n        \"level\": \"et velit minim enim\",\n        \"uid\": -57685115,\n        \"opted\": true,\n        \"permissions\": [\n          \"labore voluptate\",\n          \"fugiat nisi proident et amet\"\n        ],\n        \"token\": \"quis id esse dolor\",\n        \"name\": \"reprehender\",\n        \"stores\": [\n          {\n            \"_id\": \"occaecat Excepteur dolore\",\n            \"integration\": \"ipsum consectetur incididunt\",\n            \"level\": \"culpa\",\n            \"uid\": 84723718,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"occaecat et\",\n            \"code\": \"sit\",\n            \"name\": \"sint ad proident\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"quis occa\",\n            \"integration\": \"dolore amet\",\n            \"level\": \"exercitation\",\n            \"uid\": -21213710,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"pariatur nisi\",\n            \"code\": \"mollit aute enim\",\n            \"name\": \"magna Lorem pariatur labore velit\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"aliqua nostrud\",\n        \"integration\": \"dolor aliquip\",\n        \"level\": \"reprehenderit labore fu\",\n        \"uid\": -45903640,\n        \"opted\": false,\n        \"permissions\": [\n          \"aute sint\",\n          \"id minim elit nostrud\"\n        ],\n        \"token\": \"elit eu\",\n        \"name\": \"non Lorem commodo sint voluptate\",\n        \"stores\": [\n          {\n            \"_id\": \"dolore ipsum dolor\",\n            \"integration\": \"fugiat cupidatat eu\",\n            \"level\": \"proident veniam cu\",\n            \"uid\": -12769057,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"irure et aliqua ex\",\n            \"code\": \"sed laboris\",\n            \"name\": \"est eiusmod Ut\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"reprehenderit\",\n            \"integration\": \"ullamco reprehenderit\",\n            \"level\": \"proident\",\n            \"uid\": -36148624,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"amet laborum proident fugiat incididunt\",\n            \"code\": \"veniam eu sint ullamco\",\n            \"name\": \"minim et sunt adipisicing\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"commodo\",\n  \"page\": {\n    \"type\": \"dolor qui tempor cillum\",\n    \"size\": 46610304,\n    \"current\": -41032277,\n    \"has_next\": false,\n    \"item_total\": -74944262,\n    \"next_id\": \"nostrud sint dolore sunt\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "26f27b25-e4a4-490c-83b9-74721a5331ff",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2007-07-09T17:30:45.397Z\",\n  \"status\": -22217184,\n  \"error\": \"ad magna proident velit\",\n  \"exception\": \"ex dolore\",\n  \"message\": \"reprehenderit Ut incididunt esse\",\n  \"total_time_taken_in_millis\": -27367322,\n  \"http_status\": \"500 INTERNAL_SERVER_ERROR\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"aliqua nulla ullamco fugiat elit\",\n      \"description\": \"pariatur\",\n      \"name\": \"in culpa\",\n      \"slug\": \"non irure\",\n      \"meta\": [\n        {\n          \"_id\": \"mollit\",\n          \"name\": \"mollit\",\n          \"value\": \"do esse incididunt aute\"\n        },\n        {\n          \"_id\": \"qui nisi eiusmod Duis eu\",\n          \"name\": \"aliquip reprehenderit\",\n          \"value\": \"Excepteur quis consequat\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"ad sit anim fugiat dolore\",\n        \"integration\": \"off\",\n        \"level\": \"ut ut elit\",\n        \"uid\": -95189537,\n        \"opted\": false,\n        \"permissions\": [\n          \"proident veniam\",\n          \"nisi officia\"\n        ],\n        \"token\": \"dolore in ex\",\n        \"name\": \"Duis\",\n        \"stores\": [\n          {\n            \"_id\": \"sunt dolor esse ut\",\n            \"integration\": \"dolor dolore sit velit nostrud\",\n            \"level\": \"Lorem\",\n            \"uid\": -20931435,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"nulla pariatur non\",\n            \"code\": \"incididunt enim Ut\",\n            \"name\": \"magna amet et\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"ex laboris Lorem aliquip et\",\n            \"integration\": \"consectetur enim mollit\",\n            \"level\": \"Lorem sint commodo esse minim\",\n            \"uid\": 40876563,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"magna nulla Excepteur\",\n            \"code\": \"in dolor dolore ipsum consequat\",\n            \"name\": \"Ut ad\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"laboris ullamco nisi\",\n        \"integration\": \"in nisi\",\n        \"level\": \"aliquip\",\n        \"uid\": 14846940,\n        \"opted\": true,\n        \"permissions\": [\n          \"sed\",\n          \"ex ut laborum\"\n        ],\n        \"token\": \"do consequat\",\n        \"name\": \"ut dolor amet cillum\",\n        \"stores\": [\n          {\n            \"_id\": \"mollit Ut exercitation\",\n            \"integration\": \"fugiat anim aliquip\",\n            \"level\": \"sit anim\",\n            \"uid\": 89451267,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"enim ad est do\",\n            \"code\": \"Ut dese\",\n            \"name\": \"sint in\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"labore\",\n            \"integration\": \"est exercitation aliquip\",\n            \"level\": \"laboris quis\",\n            \"uid\": -99915721,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"voluptate ex\",\n            \"code\": \"mollit\",\n            \"name\": \"ea sed laborum\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"quis nisi occaecat\",\n      \"description\": \"fugiat\",\n      \"name\": \"et mollit ut\",\n      \"slug\": \"veniam consectetur nisi proident\",\n      \"meta\": [\n        {\n          \"_id\": \"consectetur Duis dolor\",\n          \"name\": \"ut pariatur sed sint Ut\",\n          \"value\": \"culpa nostrud\"\n        },\n        {\n          \"_id\": \"eiusmod\",\n          \"name\": \"ad anim\",\n          \"value\": \"ullamco\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"amet sit ut aute\",\n        \"integration\": \"elit ut laboris quis\",\n        \"level\": \"commodo Ut Duis\",\n        \"uid\": -83447464,\n        \"opted\": false,\n        \"permissions\": [\n          \"cupidatat voluptate ut anim\",\n          \"velit in commodo\"\n        ],\n        \"token\": \"dolor dolore sint\",\n        \"name\": \"cupidatat ad reprehenderit\",\n        \"stores\": [\n          {\n            \"_id\": \"in voluptate ad\",\n            \"integration\": \"pariatur irure\",\n            \"level\": \"aliqua do\",\n            \"uid\": 48768378,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"fugiat nulla\",\n            \"code\": \"velit elit irure esse\",\n            \"name\": \"dolore pariatur consectetur\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"reprehenderit incididunt\",\n            \"integration\": \"sit pariatur\",\n            \"level\": \"ipsum officia mollit dolor reprehenderit\",\n            \"uid\": -65176960,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"deserunt est adipisicing\",\n            \"code\": \"cillum\",\n            \"name\": \"irure nostrud fugiat\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"in ipsum do\",\n        \"integration\": \"do ut in id\",\n        \"level\": \"veniam s\",\n        \"uid\": -54768836,\n        \"opted\": false,\n        \"permissions\": [\n          \"ipsum nulla sit\",\n          \"in\"\n        ],\n        \"token\": \"do anim et\",\n        \"name\": \"ad temp\",\n        \"stores\": [\n          {\n            \"_id\": \"irure occaecat ad veniam\",\n            \"integration\": \"Duis cupidatat eiusmod\",\n            \"level\": \"laboris magna \",\n            \"uid\": -85070025,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"sint cillum et laborum ad\",\n            \"code\": \"elit\",\n            \"name\": \"sunt id esse\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"Excepteur aute enim\",\n            \"integration\": \"ipsum aliquip aute tempor\",\n            \"level\": \"dolor\",\n            \"uid\": 66864609,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"aute ex dolore sed\",\n            \"code\": \"mollit ullamco non labore\",\n            \"name\": \"elit do amet\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"elit\",\n  \"page\": {\n    \"type\": \"do nisi cillum dolore\",\n    \"size\": 42626731,\n    \"current\": 56764049,\n    \"has_next\": false,\n    \"item_total\": -16504284,\n    \"next_id\": \"laboris amet incididunt\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "21b5d480-e3df-4c68-b7b3-588d64fb661d",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2007-07-09T17:30:45.397Z\",\n  \"status\": -22217184,\n  \"error\": \"ad magna proident velit\",\n  \"exception\": \"ex dolore\",\n  \"message\": \"reprehenderit Ut incididunt esse\",\n  \"total_time_taken_in_millis\": -27367322,\n  \"http_status\": \"500 INTERNAL_SERVER_ERROR\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"aliqua nulla ullamco fugiat elit\",\n      \"description\": \"pariatur\",\n      \"name\": \"in culpa\",\n      \"slug\": \"non irure\",\n      \"meta\": [\n        {\n          \"_id\": \"mollit\",\n          \"name\": \"mollit\",\n          \"value\": \"do esse incididunt aute\"\n        },\n        {\n          \"_id\": \"qui nisi eiusmod Duis eu\",\n          \"name\": \"aliquip reprehenderit\",\n          \"value\": \"Excepteur quis consequat\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"ad sit anim fugiat dolore\",\n        \"integration\": \"off\",\n        \"level\": \"ut ut elit\",\n        \"uid\": -95189537,\n        \"opted\": false,\n        \"permissions\": [\n          \"proident veniam\",\n          \"nisi officia\"\n        ],\n        \"token\": \"dolore in ex\",\n        \"name\": \"Duis\",\n        \"stores\": [\n          {\n            \"_id\": \"sunt dolor esse ut\",\n            \"integration\": \"dolor dolore sit velit nostrud\",\n            \"level\": \"Lorem\",\n            \"uid\": -20931435,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"nulla pariatur non\",\n            \"code\": \"incididunt enim Ut\",\n            \"name\": \"magna amet et\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"ex laboris Lorem aliquip et\",\n            \"integration\": \"consectetur enim mollit\",\n            \"level\": \"Lorem sint commodo esse minim\",\n            \"uid\": 40876563,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"magna nulla Excepteur\",\n            \"code\": \"in dolor dolore ipsum consequat\",\n            \"name\": \"Ut ad\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"laboris ullamco nisi\",\n        \"integration\": \"in nisi\",\n        \"level\": \"aliquip\",\n        \"uid\": 14846940,\n        \"opted\": true,\n        \"permissions\": [\n          \"sed\",\n          \"ex ut laborum\"\n        ],\n        \"token\": \"do consequat\",\n        \"name\": \"ut dolor amet cillum\",\n        \"stores\": [\n          {\n            \"_id\": \"mollit Ut exercitation\",\n            \"integration\": \"fugiat anim aliquip\",\n            \"level\": \"sit anim\",\n            \"uid\": 89451267,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"enim ad est do\",\n            \"code\": \"Ut dese\",\n            \"name\": \"sint in\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"labore\",\n            \"integration\": \"est exercitation aliquip\",\n            \"level\": \"laboris quis\",\n            \"uid\": -99915721,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"voluptate ex\",\n            \"code\": \"mollit\",\n            \"name\": \"ea sed laborum\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"quis nisi occaecat\",\n      \"description\": \"fugiat\",\n      \"name\": \"et mollit ut\",\n      \"slug\": \"veniam consectetur nisi proident\",\n      \"meta\": [\n        {\n          \"_id\": \"consectetur Duis dolor\",\n          \"name\": \"ut pariatur sed sint Ut\",\n          \"value\": \"culpa nostrud\"\n        },\n        {\n          \"_id\": \"eiusmod\",\n          \"name\": \"ad anim\",\n          \"value\": \"ullamco\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"amet sit ut aute\",\n        \"integration\": \"elit ut laboris quis\",\n        \"level\": \"commodo Ut Duis\",\n        \"uid\": -83447464,\n        \"opted\": false,\n        \"permissions\": [\n          \"cupidatat voluptate ut anim\",\n          \"velit in commodo\"\n        ],\n        \"token\": \"dolor dolore sint\",\n        \"name\": \"cupidatat ad reprehenderit\",\n        \"stores\": [\n          {\n            \"_id\": \"in voluptate ad\",\n            \"integration\": \"pariatur irure\",\n            \"level\": \"aliqua do\",\n            \"uid\": 48768378,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"fugiat nulla\",\n            \"code\": \"velit elit irure esse\",\n            \"name\": \"dolore pariatur consectetur\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"reprehenderit incididunt\",\n            \"integration\": \"sit pariatur\",\n            \"level\": \"ipsum officia mollit dolor reprehenderit\",\n            \"uid\": -65176960,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"deserunt est adipisicing\",\n            \"code\": \"cillum\",\n            \"name\": \"irure nostrud fugiat\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"in ipsum do\",\n        \"integration\": \"do ut in id\",\n        \"level\": \"veniam s\",\n        \"uid\": -54768836,\n        \"opted\": false,\n        \"permissions\": [\n          \"ipsum nulla sit\",\n          \"in\"\n        ],\n        \"token\": \"do anim et\",\n        \"name\": \"ad temp\",\n        \"stores\": [\n          {\n            \"_id\": \"irure occaecat ad veniam\",\n            \"integration\": \"Duis cupidatat eiusmod\",\n            \"level\": \"laboris magna \",\n            \"uid\": -85070025,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"sint cillum et laborum ad\",\n            \"code\": \"elit\",\n            \"name\": \"sunt id esse\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"Excepteur aute enim\",\n            \"integration\": \"ipsum aliquip aute tempor\",\n            \"level\": \"dolor\",\n            \"uid\": 66864609,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"aute ex dolore sed\",\n            \"code\": \"mollit ullamco non labore\",\n            \"name\": \"elit do amet\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"elit\",\n  \"page\": {\n    \"type\": \"do nisi cillum dolore\",\n    \"size\": 42626731,\n    \"current\": 56764049,\n    \"has_next\": false,\n    \"item_total\": -16504284,\n    \"next_id\": \"laboris amet incididunt\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "34960de4-99d5-4dfd-bc50-35f4a2c1d039",
          "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
          "request": {
            "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "d2730058-1aa0-48d7-b0bf-58f8f9ec5d57",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1999-03-21T05:13:55.459Z\",\n  \"status\": -12162346,\n  \"error\": \"tempor eiusmod\",\n  \"exception\": \"in sed dolore est in\",\n  \"message\": \"ut mollit dolor et\",\n  \"total_time_taken_in_millis\": -60719265,\n  \"http_status\": \"302 FOUND\",\n  \"items\": {\n    \"session_id\": \"aliqua amet dolor\",\n    \"error_message\": \"non consequat\"\n  },\n  \"payload\": {\n    \"session_id\": \"sit consequat\",\n    \"error_message\": \"elit id incididunt Excepteur nulla\"\n  },\n  \"trace_id\": \"et Lorem\",\n  \"page\": {\n    \"type\": \"in dolore\",\n    \"size\": -33562576,\n    \"current\": -22940402,\n    \"has_next\": false,\n    \"item_total\": -33227513,\n    \"next_id\": \"exercitation qui Du\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1978a832-7766-440f-a530-f5d9a5b7be91",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1999-03-21T05:13:55.459Z\",\n  \"status\": -12162346,\n  \"error\": \"tempor eiusmod\",\n  \"exception\": \"in sed dolore est in\",\n  \"message\": \"ut mollit dolor et\",\n  \"total_time_taken_in_millis\": -60719265,\n  \"http_status\": \"302 FOUND\",\n  \"items\": {\n    \"session_id\": \"aliqua amet dolor\",\n    \"error_message\": \"non consequat\"\n  },\n  \"payload\": {\n    \"session_id\": \"sit consequat\",\n    \"error_message\": \"elit id incididunt Excepteur nulla\"\n  },\n  \"trace_id\": \"et Lorem\",\n  \"page\": {\n    \"type\": \"in dolore\",\n    \"size\": -33562576,\n    \"current\": -22940402,\n    \"has_next\": false,\n    \"item_total\": -33227513,\n    \"next_id\": \"exercitation qui Du\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "bf612663-83bd-4b5d-896b-e8824e93a01c",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1999-03-21T05:13:55.459Z\",\n  \"status\": -12162346,\n  \"error\": \"tempor eiusmod\",\n  \"exception\": \"in sed dolore est in\",\n  \"message\": \"ut mollit dolor et\",\n  \"total_time_taken_in_millis\": -60719265,\n  \"http_status\": \"302 FOUND\",\n  \"items\": {\n    \"session_id\": \"aliqua amet dolor\",\n    \"error_message\": \"non consequat\"\n  },\n  \"payload\": {\n    \"session_id\": \"sit consequat\",\n    \"error_message\": \"elit id incididunt Excepteur nulla\"\n  },\n  \"trace_id\": \"et Lorem\",\n  \"page\": {\n    \"type\": \"in dolore\",\n    \"size\": -33562576,\n    \"current\": -22940402,\n    \"has_next\": false,\n    \"item_total\": -33227513,\n    \"next_id\": \"exercitation qui Du\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "baafdefa-36e8-4379-bdae-7414da224ce0",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "6ab8aa6b-11a0-48c1-9063-33d90817fd44",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1945-03-10T15:16:13.398Z\",\n  \"status\": 75869269,\n  \"error\": \"cillum d\",\n  \"exception\": \"ex anim non quis\",\n  \"message\": \"eu voluptate dolor amet\",\n  \"total_time_taken_in_millis\": -14744406,\n  \"http_status\": \"206 PARTIAL_CONTENT\",\n  \"items\": {\n    \"company_id\": -98928057,\n    \"integration_data\": {\n      \"et_3\": {},\n      \"laborum_98\": {}\n    },\n    \"company_name\": \"do laboris\",\n    \"task_details\": {\n      \"type\": 97024286,\n      \"group_list\": [\n        {\n          \"text\": \"amet ullamco\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"pariatur dolor mollit non adipisicing\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -80390295.05470791,\n      \"safe_stock\": 28039107,\n      \"period_threshold\": 59327230,\n      \"period_threshold_type\": \"HOURS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"nostrud proident officia\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"id dolor cupidatat incididunt\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"sit\",\n    \"alias\": \"Lorem sunt dolor\"\n  },\n  \"payload\": {\n    \"company_id\": 57901291,\n    \"integration_data\": {\n      \"laboris1\": {}\n    },\n    \"company_name\": \"aliqua in\",\n    \"task_details\": {\n      \"type\": 67063911,\n      \"group_list\": [\n        {\n          \"text\": \"qui cupidatat elit\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"Except\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -47920490.64369279,\n      \"safe_stock\": 73462833,\n      \"period_threshold\": -9923795,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"minim\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"labore sint ea\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"Duis voluptate Excepteur veniam sint\",\n    \"alias\": \"Lorem culpa aute deserunt anim\"\n  },\n  \"trace_id\": \"elit et\",\n  \"page\": {\n    \"type\": \"ullamco in\",\n    \"size\": 3380995,\n    \"current\": 26494852,\n    \"has_next\": false,\n    \"item_total\": -90064370,\n    \"next_id\": \"mollit\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "df61f4bb-7f27-474f-944e-a4d9ccce718c",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2004-01-31T15:51:49.607Z\",\n  \"status\": 7202065,\n  \"error\": \"proident enim cupidatat labore\",\n  \"exception\": \"non sed aliquip reprehenderit\",\n  \"message\": \"ullamco Lorem\",\n  \"total_time_taken_in_millis\": -95761995,\n  \"http_status\": \"510 NOT_EXTENDED\",\n  \"items\": {\n    \"company_id\": -62119886,\n    \"integration_data\": {\n      \"occaecat_9\": {},\n      \"in2\": {},\n      \"cupidatat5b\": {}\n    },\n    \"company_name\": \"ut irure anim\",\n    \"task_details\": {\n      \"type\": 69322223,\n      \"group_list\": [\n        {\n          \"text\": \"elit\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"Excepteur ullamco in eiusmod\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -27227671.838611126,\n      \"safe_stock\": 95508653,\n      \"period_threshold\": -29597386,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"ea\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"mollit ea\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"sunt dolore dolore in\",\n    \"alias\": \"commodo ad occaecat et\"\n  },\n  \"payload\": {\n    \"company_id\": 16643507,\n    \"integration_data\": {\n      \"eu3\": {},\n      \"Ut_971\": {},\n      \"tempor_973\": {}\n    },\n    \"company_name\": \"anim velit cillum ipsum\",\n    \"task_details\": {\n      \"type\": 53588295,\n      \"group_list\": [\n        {\n          \"text\": \"officia Excepteur aliquip enim velit\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"Ut comm\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -23613788.097779095,\n      \"safe_stock\": 96087750,\n      \"period_threshold\": 39060381,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"Duis enim qui velit\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"laboris proident officia\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"ut voluptate adipisicing Duis\",\n    \"alias\": \"sed dolor velit ea\"\n  },\n  \"trace_id\": \"elit in commodo\",\n  \"page\": {\n    \"type\": \"Ut in voluptate Duis nulla\",\n    \"size\": 65995814,\n    \"current\": 5779519,\n    \"has_next\": true,\n    \"item_total\": 76091942,\n    \"next_id\": \"nulla anim consectetur non i\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a7493acb-7906-4f02-bb70-f669cb2d80aa",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2004-01-31T15:51:49.607Z\",\n  \"status\": 7202065,\n  \"error\": \"proident enim cupidatat labore\",\n  \"exception\": \"non sed aliquip reprehenderit\",\n  \"message\": \"ullamco Lorem\",\n  \"total_time_taken_in_millis\": -95761995,\n  \"http_status\": \"510 NOT_EXTENDED\",\n  \"items\": {\n    \"company_id\": -62119886,\n    \"integration_data\": {\n      \"occaecat_9\": {},\n      \"in2\": {},\n      \"cupidatat5b\": {}\n    },\n    \"company_name\": \"ut irure anim\",\n    \"task_details\": {\n      \"type\": 69322223,\n      \"group_list\": [\n        {\n          \"text\": \"elit\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"Excepteur ullamco in eiusmod\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -27227671.838611126,\n      \"safe_stock\": 95508653,\n      \"period_threshold\": -29597386,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"ea\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"mollit ea\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"sunt dolore dolore in\",\n    \"alias\": \"commodo ad occaecat et\"\n  },\n  \"payload\": {\n    \"company_id\": 16643507,\n    \"integration_data\": {\n      \"eu3\": {},\n      \"Ut_971\": {},\n      \"tempor_973\": {}\n    },\n    \"company_name\": \"anim velit cillum ipsum\",\n    \"task_details\": {\n      \"type\": 53588295,\n      \"group_list\": [\n        {\n          \"text\": \"officia Excepteur aliquip enim velit\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"Ut comm\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -23613788.097779095,\n      \"safe_stock\": 96087750,\n      \"period_threshold\": 39060381,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"Duis enim qui velit\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"laboris proident officia\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"ut voluptate adipisicing Duis\",\n    \"alias\": \"sed dolor velit ea\"\n  },\n  \"trace_id\": \"elit in commodo\",\n  \"page\": {\n    \"type\": \"Ut in voluptate Duis nulla\",\n    \"size\": 65995814,\n    \"current\": 5779519,\n    \"has_next\": true,\n    \"item_total\": 76091942,\n    \"next_id\": \"nulla anim consectetur non i\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "83f81e85-27bd-41bf-a377-c66691ea740c",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "fe266b8e-8b67-4da9-bf39-2befa7e2ebc5",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1950-12-24T16:26:03.134Z\",\n  \"status\": -86199250,\n  \"error\": \"labore proident ut enim\",\n  \"exception\": \"eiusm\",\n  \"message\": \"incididunt dolore consectetur fugiat\",\n  \"total_time_taken_in_millis\": 61534456,\n  \"http_status\": \"407 PROXY_AUTHENTICATION_REQUIRED\",\n  \"items\": [\n    {\n      \"company_id\": -79205281,\n      \"integration_data\": {\n        \"laborum_7\": {}\n      },\n      \"company_name\": \"sed\",\n      \"task_details\": {\n        \"type\": 64421324,\n        \"group_list\": [\n          {\n            \"text\": \"mollit ipsum nostrud\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"id dolor\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 36654275.510615855,\n        \"safe_stock\": 44699587,\n        \"period_threshold\": 933666,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"ullamco dolore\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ul\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"est et deserunt quis veniam\",\n      \"alias\": \"irure adipisicing commodo qui\"\n    },\n    {\n      \"company_id\": -76621590,\n      \"integration_data\": {\n        \"sit28\": {}\n      },\n      \"company_name\": \"ipsum dolor oc\",\n      \"task_details\": {\n        \"type\": 93826830,\n        \"group_list\": [\n          {\n            \"text\": \"ad\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"culpa dese\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -67234545.31237496,\n        \"safe_stock\": -24435230,\n        \"period_threshold\": -95421012,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"aliqua pariatur incididunt culpa\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"adipisicing culpa\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"in eiusmod\",\n      \"alias\": \"reprehenderit sunt proident enim\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": -2669331,\n      \"integration_data\": {\n        \"irure027\": {}\n      },\n      \"company_name\": \"aliquip a\",\n      \"task_details\": {\n        \"type\": -33055963,\n        \"group_list\": [\n          {\n            \"text\": \"amet\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"laboris esse anim\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -59181561.37838073,\n        \"safe_stock\": 23607351,\n        \"period_threshold\": 61107890,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"Lorem ut consequat Excepteur dolor\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"sed incididunt\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"ipsum\",\n      \"alias\": \"dolore in\"\n    },\n    {\n      \"company_id\": -69118572,\n      \"integration_data\": {\n        \"ine0\": {},\n        \"magna_5f\": {},\n        \"ametb87\": {},\n        \"proident241\": {}\n      },\n      \"company_name\": \"in ut veniam quis\",\n      \"task_details\": {\n        \"type\": -37989011,\n        \"group_list\": [\n          {\n            \"text\": \"exercitation officia\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"exercitation\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -4690910.701907709,\n        \"safe_stock\": 5351596,\n        \"period_threshold\": 37084155,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"laboris\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"non est adipisicing officia\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"qui cupidatat deserunt\",\n      \"alias\": \"eiusmod amet id\"\n    }\n  ],\n  \"trace_id\": \"Lorem labore elit\",\n  \"page\": {\n    \"type\": \"sed dolor voluptate consectetur\",\n    \"size\": 51008948,\n    \"current\": -45850017,\n    \"has_next\": false,\n    \"item_total\": -3782659,\n    \"next_id\": \"velit sit id minim\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e2ce1f9c-f866-4c14-b455-25113afadf83",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2008-12-22T22:48:53.749Z\",\n  \"status\": 81648417,\n  \"error\": \"mollit magna ut\",\n  \"exception\": \"in labore\",\n  \"message\": \"et ut ad veniam\",\n  \"total_time_taken_in_millis\": -25895682,\n  \"http_status\": \"507 INSUFFICIENT_STORAGE\",\n  \"items\": [\n    {\n      \"company_id\": 34136772,\n      \"integration_data\": {\n        \"aliquipc\": {}\n      },\n      \"company_name\": \"cillum ad \",\n      \"task_details\": {\n        \"type\": -35609831,\n        \"group_list\": [\n          {\n            \"text\": \"sit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"do dolor nisi ipsum\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 37706618.37014505,\n        \"safe_stock\": 12122492,\n        \"period_threshold\": -44740614,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"sit dolor\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"mollit dolore commodo nulla\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"sint nostrud aute\",\n      \"alias\": \"aliqua quis\"\n    },\n    {\n      \"company_id\": -18927334,\n      \"integration_data\": {\n        \"ipsum8ce\": {},\n        \"reprehenderit_9\": {}\n      },\n      \"company_name\": \"sint ea\",\n      \"task_details\": {\n        \"type\": 35280445,\n        \"group_list\": [\n          {\n            \"text\": \"nisi quis ullamco cupidatat\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"mollit laborum\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 71612812.80584326,\n        \"safe_stock\": -22490141,\n        \"period_threshold\": 64344532,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"veniam aute\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"sint do\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"esse occaecat mollit\",\n      \"alias\": \"in deserunt dolore consectetur\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": -24321571,\n      \"integration_data\": {\n        \"nulla_03e\": {}\n      },\n      \"company_name\": \"labore culpa id\",\n      \"task_details\": {\n        \"type\": -23247696,\n        \"group_list\": [\n          {\n            \"text\": \"Lorem commodo labore\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"velit dolore\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -59581744.727884576,\n        \"safe_stock\": -27147052,\n        \"period_threshold\": -58730341,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"laboris labore\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"sint amet nisi aute e\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"e\",\n      \"alias\": \"tempor cillum\"\n    },\n    {\n      \"company_id\": -79657056,\n      \"integration_data\": {\n        \"deserunt_d7\": {}\n      },\n      \"company_name\": \"quis\",\n      \"task_details\": {\n        \"type\": 15632916,\n        \"group_list\": [\n          {\n            \"text\": \"nulla incididunt aute si\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"consequat aliquip\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 74693513.02058905,\n        \"safe_stock\": -42008955,\n        \"period_threshold\": -14424495,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"exercitation labore\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"in minim\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"amet\",\n      \"alias\": \"proident\"\n    }\n  ],\n  \"trace_id\": \"sunt dolor aute qui\",\n  \"page\": {\n    \"type\": \"nost\",\n    \"size\": -74512366,\n    \"current\": -3459378,\n    \"has_next\": true,\n    \"item_total\": -41505622,\n    \"next_id\": \"pariatur in\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "38185de4-a1a6-4f44-a156-81dafb3f18b5",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2008-12-22T22:48:53.749Z\",\n  \"status\": 81648417,\n  \"error\": \"mollit magna ut\",\n  \"exception\": \"in labore\",\n  \"message\": \"et ut ad veniam\",\n  \"total_time_taken_in_millis\": -25895682,\n  \"http_status\": \"507 INSUFFICIENT_STORAGE\",\n  \"items\": [\n    {\n      \"company_id\": 34136772,\n      \"integration_data\": {\n        \"aliquipc\": {}\n      },\n      \"company_name\": \"cillum ad \",\n      \"task_details\": {\n        \"type\": -35609831,\n        \"group_list\": [\n          {\n            \"text\": \"sit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"do dolor nisi ipsum\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 37706618.37014505,\n        \"safe_stock\": 12122492,\n        \"period_threshold\": -44740614,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"sit dolor\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"mollit dolore commodo nulla\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"sint nostrud aute\",\n      \"alias\": \"aliqua quis\"\n    },\n    {\n      \"company_id\": -18927334,\n      \"integration_data\": {\n        \"ipsum8ce\": {},\n        \"reprehenderit_9\": {}\n      },\n      \"company_name\": \"sint ea\",\n      \"task_details\": {\n        \"type\": 35280445,\n        \"group_list\": [\n          {\n            \"text\": \"nisi quis ullamco cupidatat\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"mollit laborum\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 71612812.80584326,\n        \"safe_stock\": -22490141,\n        \"period_threshold\": 64344532,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"veniam aute\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"sint do\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"esse occaecat mollit\",\n      \"alias\": \"in deserunt dolore consectetur\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": -24321571,\n      \"integration_data\": {\n        \"nulla_03e\": {}\n      },\n      \"company_name\": \"labore culpa id\",\n      \"task_details\": {\n        \"type\": -23247696,\n        \"group_list\": [\n          {\n            \"text\": \"Lorem commodo labore\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"velit dolore\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -59581744.727884576,\n        \"safe_stock\": -27147052,\n        \"period_threshold\": -58730341,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"laboris labore\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"sint amet nisi aute e\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"e\",\n      \"alias\": \"tempor cillum\"\n    },\n    {\n      \"company_id\": -79657056,\n      \"integration_data\": {\n        \"deserunt_d7\": {}\n      },\n      \"company_name\": \"quis\",\n      \"task_details\": {\n        \"type\": 15632916,\n        \"group_list\": [\n          {\n            \"text\": \"nulla incididunt aute si\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"consequat aliquip\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 74693513.02058905,\n        \"safe_stock\": -42008955,\n        \"period_threshold\": -14424495,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"exercitation labore\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"in minim\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"amet\",\n      \"alias\": \"proident\"\n    }\n  ],\n  \"trace_id\": \"sunt dolor aute qui\",\n  \"page\": {\n    \"type\": \"nost\",\n    \"size\": -74512366,\n    \"current\": -3459378,\n    \"has_next\": true,\n    \"item_total\": -41505622,\n    \"next_id\": \"pariatur in\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "7588b9ea-e37e-44ee-8ae9-0559a40f8ce5",
      "name": "Partner",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "04ca4911-20b3-4e59-b04d-19b40112e52f",
          "name": "getPanelExtensionDetails | Get extension details",
          "request": {
            "name": "getPanelExtensionDetails | Get extension details",
            "description": {
              "content": "Use this API to get extension details",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "panel",
                "partners",
                "v1.0",
                "extensions",
                ":slug"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "slug",
                  "description": "(Required) pass the slug of the extension"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "6122479d-244e-4397-ab28-9095b35495c8",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "panel",
                    "partners",
                    "v1.0",
                    "extensions",
                    ":slug"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "slug",
                      "description": "(Required) pass the slug of the extension"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"_id\": \"633ab5cb635a41fdde9fb648\",\n  \"organization_id\": \"6333fef3b1d85e44e738c138\",\n  \"extension_id\": \"633425ebb1d85e44e738c2ab\",\n  \"slug\": \"example-extension-1\",\n  \"scope\": [\n    \"company/profile\",\n    \"company/saleschannel\",\n    \"company/product\",\n    \"company/order\",\n    \"company/application/customer\",\n    \"company/application/analytics\",\n    \"company/application/storage\",\n    \"company/application/marketing\",\n    \"company/application/catalogue\",\n    \"company/application/communication\",\n    \"company/application/support\",\n    \"company/application/order\",\n    \"company/application/settings\"\n  ],\n  \"category\": {\n    \"categories_l1\": [],\n    \"categories_l2\": []\n  },\n  \"listing_info\": {\n    \"name\": \"ujjawal-example-extension-1\",\n    \"keywords\": [],\n    \"tagline\": \"test-extension for test how extensions look and work and how to create them\",\n    \"icon\": \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/AMwIEOw0U-logo.png\"\n  },\n  \"details\": {\n    \"benefits\": [\n      {\n        \"title\": \"Works fast\",\n        \"description\": \"works fast\",\n        \"_id\": \"633ab5cb635a41fdde9fb649\"\n      }\n    ],\n    \"screenshots\": {\n      \"desktop\": [\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/g95yHXkou-1024x576.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/IKdHxP2fN-1024x576.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/_auq1yvEp-1024x576.png\"\n      ],\n      \"mobile\": [\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/E_YAHM9cU-600x900.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/vEnXw9cCg-600x900.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/O3Wng4Rqn-600x900.png\"\n      ]\n    },\n    \"description\": \"Sample public extension\",\n    \"demo_url\": \"\",\n    \"video_url\": [\n      {\n        \"type\": \"video\",\n        \"url\": \"https://hdn-1.addsale.com/x0/products/videos/item/free/original/kizLVNWyS-video-sc-1.mp4\"\n      }\n    ],\n    \"integrations\": []\n  },\n  \"plan_type\": \"free\",\n  \"plans\": [\n    {\n      \"name\": \"Custom Free\",\n      \"features\": \"provides ease\",\n      \"type\": \"free\",\n      \"price\": {\n        \"amount\": 0,\n        \"currency\": \"INR\"\n      },\n      \"trial_days\": 0,\n      \"additional_charges\": \"\"\n    }\n  ],\n  \"plans_url\": \"\",\n  \"contact_info\": {\n    \"support\": {\n      \"email\": \"ujjawaltaleja@gofynd.com\",\n      \"phone\": \"7988169279\",\n      \"website_url\": \"\",\n      \"faq_url\": \"\",\n      \"privacy_policy_url\": \"\"\n    }\n  },\n  \"current_status\": \"active\",\n  \"coming_soon\": {\n    \"is_coming_soon\": false,\n    \"upvote_count\": 0\n  },\n  \"created_at\": \"2022-10-03T10:13:31.607Z\",\n  \"modified_at\": \"2022-10-03T10:13:31.607Z\",\n  \"organization\": {\n    \"name\": \"ujjawal-partners-fashion\",\n    \"slug\": \"ujjawa-w7t-68\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "5b235de2-463f-4f55-9a58-39be0155d206",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "53c92afb-8b97-4511-8943-c7c0eaac403a",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "d2a0fdad-46ae-4c38-970c-cdfff4e464aa",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "a8041364-fe5c-4670-ac44-b02a10ac80d7",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "5fa0b034-a9da-438a-8357-1808d4067f79",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"event_name\": \"article\",\n    \"event_type\": \"update\",\n    \"event_category\": \"company\",\n    \"version\": \"1\"\n  }\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "e85996b8-93d4-4698-b1cc-8481b5ebba70",
          "name": "notifyDepricatedEvent | Notifies all the events that are going to depricate",
          "request": {
            "name": "notifyDepricatedEvent | Notifies all the events that are going to depricate",
            "description": {
              "content": "Notifies all the events that are subscribed and are going to deprecate or new version is available for those events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "depricated-event-notifier"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "f25fedf6-a78a-4dfd-b934-8f2a2399b28b",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "depricated-event-notifier"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "4a056db5-ae51-4a3d-83b5-39eb7a52d3f5",
          "name": "testHandlerTransformation | Test transformation of handler",
          "request": {
            "name": "testHandlerTransformation | Test transformation of handler",
            "description": {
              "content": "Test transformation of handler",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "transform-event"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event_name\": \"<string>\",\n  \"event_type\": \"<string>\",\n  \"event_category\": \"<string>\",\n  \"event_version\": \"<string>\",\n  \"event\": {\n    \"payload\": {\n      \"non_f\": 6475840,\n      \"ea_14e\": -83409634\n    },\n    \"meta\": {\n      \"eu_9ab\": true,\n      \"Excepteurcf\": -57675855.64306699,\n      \"est_f1\": false\n    }\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "c0d40da2-0c54-417d-8d09-8444f15ed6ac",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "transform-event"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"event_name\": \"location\",\n  \"event_type\": \"create\",\n  \"event_category\": \"company\",\n  \"event_version\": \"1\",\n  \"event\": {\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450008\",\n        \"modified_on\": \"2023-10-24T01:41:44.450015\"\n      }\n    },\n    \"meta\": {\n      \"event\": {\n        \"type\": \"create\",\n        \"name\": \"location\",\n        \"version\": \"1\"\n      },\n      \"company_id\": 6086,\n      \"service\": {\n        \"name\": \"WheelJack\"\n      },\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"created_timestamp\": 1698111704725\n    }\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_trace_id\": [\n    \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n  ],\n  \"data\": {\n    \"event\": {\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"name\": \"location\",\n      \"type\": \"create\",\n      \"version\": \"1\",\n      \"created_timestamp\": 1698111704725\n    },\n    \"company_id\": 6086,\n    \"contains\": [\n      \"location\"\n    ],\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450008\",\n        \"modified_on\": \"2023-10-24T01:41:44.450015\"\n      }\n    }\n  },\n  \"event_name\": \"location\",\n  \"version\": \"1\",\n  \"status\": false,\n  \"event_type\": \"create\",\n  \"service_meta\": {\n    \"name\": \"WheelJack\"\n  },\n  \"association\": {\n    \"company_id\": 6086\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b3d2428e-cc2a-4f7f-8261-deea894d314f",
          "name": "validateSchema | Validate Schema for an event",
          "request": {
            "name": "validateSchema | Validate Schema for an event",
            "description": {
              "content": "Validate Schema for an event",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "validate-event-schema"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event_name\": \"<string>\",\n  \"event_type\": \"<string>\",\n  \"event_category\": \"<string>\",\n  \"event_version\": \"<string>\",\n  \"event\": {\n    \"payload\": {\n      \"fugiat_a1\": \"qui cupidatat aute\",\n      \"Duis_8\": -9581607,\n      \"commodo6cb\": 84291005.02707586\n    },\n    \"meta\": {\n      \"dolora2\": true,\n      \"exercitation_205\": true,\n      \"incididunt_c\": -69223790\n    }\n  },\n  \"event_schema\": {\n    \"eiusmod__8\": -65159810,\n    \"eiusmod6\": \"ullamco do\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "cf6b2149-b629-4d86-b8f7-9c99ac3372cc",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "validate-event-schema"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"event_name\": \"location\",\n  \"event_type\": \"create\",\n  \"event_category\": \"company\",\n  \"event_version\": \"1\",\n  \"event\": {\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450008\",\n        \"modified_on\": \"2023-10-24T01:41:44.450015\"\n      }\n    },\n    \"meta\": {\n      \"event\": {\n        \"type\": \"create\",\n        \"name\": \"location\",\n        \"version\": \"1\"\n      },\n      \"company_id\": 6086,\n      \"service\": {\n        \"name\": \"WheelJack\"\n      },\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"created_timestamp\": 1698111704725\n    }\n  },\n  \"event_schema\": {}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": true,\n  \"message\": \"Valid schema for this event\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fynd.com"
    }
  ],
  "info": {
    "_postman_id": "dc8eb938-d313-4ac3-98b6-e716473327da",
    "name": "Fynd Platform's Public Side APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public Side APIs",
      "type": "text/plain"
    }
  }
}
