{
  "item": [
    {
      "id": "531ed3a8-b027-4267-b622-27f25bf354b9",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "c8b80ff5-6b00-4ab4-9597-a98be88b745f",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "e0b1f4b2-0eb2-4981-84b8-65f2dffa2a1d",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "occaecat ut anim",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "fae86387-d939-462f-aa65-2750b644fbff",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "occaecat ut anim",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "12dae0c6-dffb-404b-b3ba-08506fa0402b",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "occaecat ut anim",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "df51ce38-bdfd-48be-94f0-dc872cf86f5a",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "5e7dd445-8503-4492-b107-4e024130d142",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "b7b882ff-f300-47a0-9cd3-2142082f66da",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "f5cdfb43-649a-40a1-9b02-67ad6a1d4de5",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "0c9fcc07-6c14-424a-a8ba-35d126d716f3",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -28230882,\n   \"event_name\": \"id Lorem dolor\",\n   \"event_type\": \"qui veniam cillum\",\n   \"event_category\": \"dolor elit in Excepte\",\n   \"version\": \"non\",\n   \"display_name\": \"aute dolor fugiat\",\n   \"description\": \"enim eu incididunt\",\n   \"created_on\": \"proident deserunt est\"\n  },\n  {\n   \"id\": 99599775,\n   \"event_name\": \"laborum anim reprehenderit\",\n   \"event_type\": \"velit consequat\",\n   \"event_category\": \"Excepteur eu eiusmod consequat\",\n   \"version\": \"elit aliquip\",\n   \"display_name\": \"esse velit aute\",\n   \"description\": \"fugiat dolor ipsum\",\n   \"created_on\": \"dolore in\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "b48a7693-3dd9-4d2c-8421-ab1c7e4a2e5b",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "349e0dfe-077f-48e9-9bc0-d2c476697478",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -74075872,\n   \"event_name\": \"dolor\",\n   \"event_type\": \"Ut ullamco dolore adipisicing dolor\",\n   \"event_category\": \"elit\",\n   \"version\": \"magna reprehenderit irure\",\n   \"display_name\": \"ullamco magna officia culpa\",\n   \"description\": \"esse labore ut tempor\",\n   \"created_on\": \"laborum ut nostrud elit\"\n  },\n  {\n   \"id\": 88044075,\n   \"event_name\": \"ad eiusmod\",\n   \"event_type\": \"elit velit E\",\n   \"event_category\": \"fugiat labore dolor\",\n   \"version\": \"labore veniam Lorem dolor\",\n   \"display_name\": \"nulla ut nostrud\",\n   \"description\": \"adipisicing in Excepteur\",\n   \"created_on\": \"proident aute\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "9cd6ed02-679f-4c58-8b15-46fecc43bcd3",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "ef6b2c30-3b63-40c5-8cfb-3975d70f003e",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "96531092-ba21-495a-b459-a98632c850d6",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2013-01-25T05:19:43.180Z\",\n \"status\": 10471160,\n \"error\": \"proident\",\n \"exception\": \"non aute ut\",\n \"message\": \"do est tempor\",\n \"total_time_taken_in_millis\": -70722337,\n \"http_status\": \"429 TOO_MANY_REQUESTS\",\n \"items\": {\n  \"company_id\": -50786292,\n  \"integration_data\": {},\n  \"company_name\": \"id eu culpa\",\n  \"task_details\": {\n   \"type\": 80859722,\n   \"group_list\": [\n    {\n     \"text\": \"exercitation enim labore\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"Duis culpa in\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -6501843.582371563,\n   \"safe_stock\": 96337599,\n   \"period_threshold\": 27019213,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"cillum mollit ut irure\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"velit in\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"nisi est\",\n  \"alias\": \"id Ut\"\n },\n \"payload\": {\n  \"company_id\": -22942806,\n  \"integration_data\": {},\n  \"company_name\": \"amet laboris aliqua\",\n  \"task_details\": {\n   \"type\": 48508451,\n   \"group_list\": [\n    {\n     \"text\": \"pariatur dolor a\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"qui \",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 54164498.26191306,\n   \"safe_stock\": 71746298,\n   \"period_threshold\": 7037437,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"consectetur ipsum\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"mollit\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"aliqua e\",\n  \"alias\": \"dolor ex ad in\"\n },\n \"trace_id\": \"dolor Excepteur ad\",\n \"page\": {\n  \"type\": \"amet Excepteur incididunt tempor\",\n  \"size\": 63475678,\n  \"current\": 96644386,\n  \"has_next\": true,\n  \"item_total\": -91408049,\n  \"next_id\": \"aliqua exercitation id reprehenderit\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "efb091c9-eef4-45fa-9ac1-912a2b50ea76",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2013-01-25T05:19:43.180Z\",\n \"status\": 10471160,\n \"error\": \"proident\",\n \"exception\": \"non aute ut\",\n \"message\": \"do est tempor\",\n \"total_time_taken_in_millis\": -70722337,\n \"http_status\": \"429 TOO_MANY_REQUESTS\",\n \"items\": {\n  \"company_id\": -50786292,\n  \"integration_data\": {},\n  \"company_name\": \"id eu culpa\",\n  \"task_details\": {\n   \"type\": 80859722,\n   \"group_list\": [\n    {\n     \"text\": \"exercitation enim labore\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"Duis culpa in\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -6501843.582371563,\n   \"safe_stock\": 96337599,\n   \"period_threshold\": 27019213,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"cillum mollit ut irure\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"velit in\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"nisi est\",\n  \"alias\": \"id Ut\"\n },\n \"payload\": {\n  \"company_id\": -22942806,\n  \"integration_data\": {},\n  \"company_name\": \"amet laboris aliqua\",\n  \"task_details\": {\n   \"type\": 48508451,\n   \"group_list\": [\n    {\n     \"text\": \"pariatur dolor a\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"qui \",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 54164498.26191306,\n   \"safe_stock\": 71746298,\n   \"period_threshold\": 7037437,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"consectetur ipsum\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"mollit\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"aliqua e\",\n  \"alias\": \"dolor ex ad in\"\n },\n \"trace_id\": \"dolor Excepteur ad\",\n \"page\": {\n  \"type\": \"amet Excepteur incididunt tempor\",\n  \"size\": 63475678,\n  \"current\": 96644386,\n  \"has_next\": true,\n  \"item_total\": -91408049,\n  \"next_id\": \"aliqua exercitation id reprehenderit\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b3dc212b-688e-48c7-a1e8-ffc436f13e00",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2013-01-25T05:19:43.180Z\",\n \"status\": 10471160,\n \"error\": \"proident\",\n \"exception\": \"non aute ut\",\n \"message\": \"do est tempor\",\n \"total_time_taken_in_millis\": -70722337,\n \"http_status\": \"429 TOO_MANY_REQUESTS\",\n \"items\": {\n  \"company_id\": -50786292,\n  \"integration_data\": {},\n  \"company_name\": \"id eu culpa\",\n  \"task_details\": {\n   \"type\": 80859722,\n   \"group_list\": [\n    {\n     \"text\": \"exercitation enim labore\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"Duis culpa in\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -6501843.582371563,\n   \"safe_stock\": 96337599,\n   \"period_threshold\": 27019213,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"cillum mollit ut irure\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"velit in\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"nisi est\",\n  \"alias\": \"id Ut\"\n },\n \"payload\": {\n  \"company_id\": -22942806,\n  \"integration_data\": {},\n  \"company_name\": \"amet laboris aliqua\",\n  \"task_details\": {\n   \"type\": 48508451,\n   \"group_list\": [\n    {\n     \"text\": \"pariatur dolor a\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"qui \",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 54164498.26191306,\n   \"safe_stock\": 71746298,\n   \"period_threshold\": 7037437,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"consectetur ipsum\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"mollit\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"aliqua e\",\n  \"alias\": \"dolor ex ad in\"\n },\n \"trace_id\": \"dolor Excepteur ad\",\n \"page\": {\n  \"type\": \"amet Excepteur incididunt tempor\",\n  \"size\": 63475678,\n  \"current\": 96644386,\n  \"has_next\": true,\n  \"item_total\": -91408049,\n  \"next_id\": \"aliqua exercitation id reprehenderit\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "efda3b20-dfd6-4e0e-a41a-47a3204c68af",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "0829dc91-2f1a-4607-80f9-268160360288",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1997-06-09T10:55:44.887Z\",\n \"status\": -99606931,\n \"error\": \"Ut minim enim occaecat magna\",\n \"exception\": \"non Duis\",\n \"message\": \"irure veniam deserunt incididunt\",\n \"total_time_taken_in_millis\": 40876147,\n \"http_status\": \"200 OK\",\n \"items\": [\n  {\n   \"company_id\": -6075630,\n   \"integration_data\": {},\n   \"company_name\": \"Duis adipisicing dolore\",\n   \"task_details\": {\n    \"type\": -35349121,\n    \"group_list\": [\n     {\n      \"text\": \"ex tempor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"incididunt voluptate veniam labore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -71004236.73799172,\n    \"safe_stock\": 19513653,\n    \"period_threshold\": 9795348,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"voluptate et aliqu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"pariatur do Duis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"minim ullamco esse\",\n   \"alias\": \"ad sint\"\n  },\n  {\n   \"company_id\": -84320603,\n   \"integration_data\": {},\n   \"company_name\": \"ut proident\",\n   \"task_details\": {\n    \"type\": -69142644,\n    \"group_list\": [\n     {\n      \"text\": \"esse irure\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nostrud consectetur non Ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -43334501.486909404,\n    \"safe_stock\": -70329084,\n    \"period_threshold\": 20756494,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"mollit magna\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nostrud dolor amet\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ulla\",\n   \"alias\": \"dolore mollit\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 59152135,\n   \"integration_data\": {},\n   \"company_name\": \"pariatur esse\",\n   \"task_details\": {\n    \"type\": -53893206,\n    \"group_list\": [\n     {\n      \"text\": \"sit tempor dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laborum ipsum in in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 99437554.49166363,\n    \"safe_stock\": 21815321,\n    \"period_threshold\": -16636937,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sed Lorem qui\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sit in enim sint ex\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"qui aliqua nulla\",\n   \"alias\": \"ex laboris Excepteur \"\n  },\n  {\n   \"company_id\": 63847955,\n   \"integration_data\": {},\n   \"company_name\": \"labore Duis aute et\",\n   \"task_details\": {\n    \"type\": -60073182,\n    \"group_list\": [\n     {\n      \"text\": \"voluptate\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ea est\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -44524498.99702797,\n    \"safe_stock\": -98654287,\n    \"period_threshold\": 43075024,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"Ut reprehenderit aliqua nostrud i\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"magna dolore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"cillum fugiat aliquip laborum\",\n   \"alias\": \"mollit quis et\"\n  }\n ],\n \"trace_id\": \"ut laborum nisi\",\n \"page\": {\n  \"type\": \"Lorem commodo Ut\",\n  \"size\": -3389600,\n  \"current\": -81416923,\n  \"has_next\": true,\n  \"item_total\": 98016268,\n  \"next_id\": \"sunt dolore aliquip occaecat amet\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "dada9947-fc06-40fc-bac4-0d94eef0b833",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1997-02-08T04:13:14.643Z\",\n \"status\": -69718418,\n \"error\": \"do voluptate non est in\",\n \"exception\": \"quis sed dolor esse veniam\",\n \"message\": \"voluptate magna cupidatat pari\",\n \"total_time_taken_in_millis\": -24808234,\n \"http_status\": \"200 OK\",\n \"items\": [\n  {\n   \"company_id\": 97636171,\n   \"integration_data\": {},\n   \"company_name\": \"proident consequat pariatur aute\",\n   \"task_details\": {\n    \"type\": 88997717,\n    \"group_list\": [\n     {\n      \"text\": \"anim dolore aute id\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliqua Ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -64025331.11499245,\n    \"safe_stock\": 89903713,\n    \"period_threshold\": -97921006,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"reprehenderit labore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sed ad aliquip\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"laborum anim irure t\",\n   \"alias\": \"id qui adipisicing dolor\"\n  },\n  {\n   \"company_id\": 63777807,\n   \"integration_data\": {},\n   \"company_name\": \"ipsum tempor aliqua\",\n   \"task_details\": {\n    \"type\": 1936832,\n    \"group_list\": [\n     {\n      \"text\": \"officia\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"voluptate Duis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -27121434.08212602,\n    \"safe_stock\": -67920805,\n    \"period_threshold\": -64322298,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"laborum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nulla exercitation\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"cillum quis dolore mollit\",\n   \"alias\": \"aliqua ex aute consequat culpa\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -78886420,\n   \"integration_data\": {},\n   \"company_name\": \"ipsum Ut culpa irure\",\n   \"task_details\": {\n    \"type\": -23863061,\n    \"group_list\": [\n     {\n      \"text\": \"deserunt voluptate mollit minim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sed Lorem sit sunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -55576687.15114037,\n    \"safe_stock\": 28962299,\n    \"period_threshold\": -89549796,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolor id consequat magna et\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"qui amet velit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in deserunt culpa lab\",\n   \"alias\": \"id sed sint sunt\"\n  },\n  {\n   \"company_id\": 16718972,\n   \"integration_data\": {},\n   \"company_name\": \"dolor Duis elit dolore\",\n   \"task_details\": {\n    \"type\": 72417650,\n    \"group_list\": [\n     {\n      \"text\": \"do aliqua ullamco ipsum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Lorem Ut aute eiusmod\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 29858653.356393903,\n    \"safe_stock\": -32206184,\n    \"period_threshold\": -22254277,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"in ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sint\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"laborum et ad id eiusmod\",\n   \"alias\": \"exercitation elit id ex cupidatat\"\n  }\n ],\n \"trace_id\": \"commodo deserunt\",\n \"page\": {\n  \"type\": \"proident\",\n  \"size\": 98877150,\n  \"current\": -15313563,\n  \"has_next\": false,\n  \"item_total\": -91942950,\n  \"next_id\": \"amet enim\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "87a31836-77c1-4d33-af66-2c60acf5a81a",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1997-02-08T04:13:14.643Z\",\n \"status\": -69718418,\n \"error\": \"do voluptate non est in\",\n \"exception\": \"quis sed dolor esse veniam\",\n \"message\": \"voluptate magna cupidatat pari\",\n \"total_time_taken_in_millis\": -24808234,\n \"http_status\": \"200 OK\",\n \"items\": [\n  {\n   \"company_id\": 97636171,\n   \"integration_data\": {},\n   \"company_name\": \"proident consequat pariatur aute\",\n   \"task_details\": {\n    \"type\": 88997717,\n    \"group_list\": [\n     {\n      \"text\": \"anim dolore aute id\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliqua Ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -64025331.11499245,\n    \"safe_stock\": 89903713,\n    \"period_threshold\": -97921006,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"reprehenderit labore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sed ad aliquip\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"laborum anim irure t\",\n   \"alias\": \"id qui adipisicing dolor\"\n  },\n  {\n   \"company_id\": 63777807,\n   \"integration_data\": {},\n   \"company_name\": \"ipsum tempor aliqua\",\n   \"task_details\": {\n    \"type\": 1936832,\n    \"group_list\": [\n     {\n      \"text\": \"officia\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"voluptate Duis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -27121434.08212602,\n    \"safe_stock\": -67920805,\n    \"period_threshold\": -64322298,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"laborum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nulla exercitation\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"cillum quis dolore mollit\",\n   \"alias\": \"aliqua ex aute consequat culpa\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -78886420,\n   \"integration_data\": {},\n   \"company_name\": \"ipsum Ut culpa irure\",\n   \"task_details\": {\n    \"type\": -23863061,\n    \"group_list\": [\n     {\n      \"text\": \"deserunt voluptate mollit minim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sed Lorem sit sunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -55576687.15114037,\n    \"safe_stock\": 28962299,\n    \"period_threshold\": -89549796,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolor id consequat magna et\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"qui amet velit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in deserunt culpa lab\",\n   \"alias\": \"id sed sint sunt\"\n  },\n  {\n   \"company_id\": 16718972,\n   \"integration_data\": {},\n   \"company_name\": \"dolor Duis elit dolore\",\n   \"task_details\": {\n    \"type\": 72417650,\n    \"group_list\": [\n     {\n      \"text\": \"do aliqua ullamco ipsum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Lorem Ut aute eiusmod\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 29858653.356393903,\n    \"safe_stock\": -32206184,\n    \"period_threshold\": -22254277,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"in ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sint\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"laborum et ad id eiusmod\",\n   \"alias\": \"exercitation elit id ex cupidatat\"\n  }\n ],\n \"trace_id\": \"commodo deserunt\",\n \"page\": {\n  \"type\": \"proident\",\n  \"size\": 98877150,\n  \"current\": -15313563,\n  \"has_next\": false,\n  \"item_total\": -91942950,\n  \"next_id\": \"amet enim\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "91aeb15e-bcac-4166-a4ef-94f912633a01",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "dba1dc56-2041-4987-86c6-7aa1ef97d33c",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1997-09-09T06:41:05.759Z\",\n \"status\": -45262973,\n \"error\": \"enim in magna eiusmod minim\",\n \"exception\": \"tempor velit aliqu\",\n \"message\": \"proident dolor qui\",\n \"total_time_taken_in_millis\": -46317223,\n \"http_status\": \"102 PROCESSING\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"et id incididunt\",\n \"page\": {\n  \"type\": \"ea proident Excepteur\",\n  \"size\": 66978221,\n  \"current\": -40667945,\n  \"has_next\": true,\n  \"item_total\": 98597067,\n  \"next_id\": \"nostrud magna pro\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1536810d-3b65-44b1-93ca-a5d812cbe286",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1997-09-09T06:41:05.759Z\",\n \"status\": -45262973,\n \"error\": \"enim in magna eiusmod minim\",\n \"exception\": \"tempor velit aliqu\",\n \"message\": \"proident dolor qui\",\n \"total_time_taken_in_millis\": -46317223,\n \"http_status\": \"102 PROCESSING\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"et id incididunt\",\n \"page\": {\n  \"type\": \"ea proident Excepteur\",\n  \"size\": 66978221,\n  \"current\": -40667945,\n  \"has_next\": true,\n  \"item_total\": 98597067,\n  \"next_id\": \"nostrud magna pro\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b780d646-2f2f-4192-9667-fd46111c0d29",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1997-09-09T06:41:05.759Z\",\n \"status\": -45262973,\n \"error\": \"enim in magna eiusmod minim\",\n \"exception\": \"tempor velit aliqu\",\n \"message\": \"proident dolor qui\",\n \"total_time_taken_in_millis\": -46317223,\n \"http_status\": \"102 PROCESSING\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"et id incididunt\",\n \"page\": {\n  \"type\": \"ea proident Excepteur\",\n  \"size\": 66978221,\n  \"current\": -40667945,\n  \"has_next\": true,\n  \"item_total\": 98597067,\n  \"next_id\": \"nostrud magna pro\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "1173799b-93cd-417f-982a-637db32c5523",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "a23ee589-0a93-4a94-829a-b7c1988b5ad3",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1961-11-10T03:17:59.615Z\",\n \"status\": -54611897,\n \"error\": \"ut deserunt\",\n \"exception\": \"cillum esse exercitation elit\",\n \"message\": \"reprehenderit exercitation\",\n \"total_time_taken_in_millis\": 51485400,\n \"http_status\": \"305 USE_PROXY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"laborum sed\",\n \"page\": {\n  \"type\": \"dolor qui esse consectetur\",\n  \"size\": -40995186,\n  \"current\": 31580372,\n  \"has_next\": false,\n  \"item_total\": -88839398,\n  \"next_id\": \"id veniam enim\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "0e1e1153-ecad-4940-9581-10fa4712e202",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1961-11-10T03:17:59.615Z\",\n \"status\": -54611897,\n \"error\": \"ut deserunt\",\n \"exception\": \"cillum esse exercitation elit\",\n \"message\": \"reprehenderit exercitation\",\n \"total_time_taken_in_millis\": 51485400,\n \"http_status\": \"305 USE_PROXY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"laborum sed\",\n \"page\": {\n  \"type\": \"dolor qui esse consectetur\",\n  \"size\": -40995186,\n  \"current\": 31580372,\n  \"has_next\": false,\n  \"item_total\": -88839398,\n  \"next_id\": \"id veniam enim\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "60ebea36-a3d2-4290-ae41-ad385903baef",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1961-11-10T03:17:59.615Z\",\n \"status\": -54611897,\n \"error\": \"ut deserunt\",\n \"exception\": \"cillum esse exercitation elit\",\n \"message\": \"reprehenderit exercitation\",\n \"total_time_taken_in_millis\": 51485400,\n \"http_status\": \"305 USE_PROXY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"laborum sed\",\n \"page\": {\n  \"type\": \"dolor qui esse consectetur\",\n  \"size\": -40995186,\n  \"current\": 31580372,\n  \"has_next\": false,\n  \"item_total\": -88839398,\n  \"next_id\": \"id veniam enim\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d708b8fa-05d8-4ec4-929a-0238b527e1e2",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1961-11-10T03:17:59.615Z\",\n \"status\": -54611897,\n \"error\": \"ut deserunt\",\n \"exception\": \"cillum esse exercitation elit\",\n \"message\": \"reprehenderit exercitation\",\n \"total_time_taken_in_millis\": 51485400,\n \"http_status\": \"305 USE_PROXY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"laborum sed\",\n \"page\": {\n  \"type\": \"dolor qui esse consectetur\",\n  \"size\": -40995186,\n  \"current\": 31580372,\n  \"has_next\": false,\n  \"item_total\": -88839398,\n  \"next_id\": \"id veniam enim\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ffa0103e-4338-4424-b5bb-9506d12ba6b5",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1961-11-10T03:17:59.615Z\",\n \"status\": -54611897,\n \"error\": \"ut deserunt\",\n \"exception\": \"cillum esse exercitation elit\",\n \"message\": \"reprehenderit exercitation\",\n \"total_time_taken_in_millis\": 51485400,\n \"http_status\": \"305 USE_PROXY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"laborum sed\",\n \"page\": {\n  \"type\": \"dolor qui esse consectetur\",\n  \"size\": -40995186,\n  \"current\": 31580372,\n  \"has_next\": false,\n  \"item_total\": -88839398,\n  \"next_id\": \"id veniam enim\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.jmpx2.de"
    }
  ],
  "info": {
    "_postman_id": "64cc5117-5f92-4a4b-a3d5-d5900192dd7c",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
