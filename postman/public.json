{
  "item": [
    {
      "id": "fa2ab695-8843-4959-a626-0d9169f7e024",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "c3e356c5-d6b9-4050-bd16-b92ad5a1051f",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "290b33ab-3669-4605-a697-a0bec1e95e05",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "mollit exe",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "acf614af-c4a1-4be2-8ad5-3ea4058858fc",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "mollit exe",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "be33600e-b418-4f04-9ffc-bffbd8b97016",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "mollit exe",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "a965bec2-c4a4-4f64-b34f-b2d43c081774",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "b36425cd-2095-424d-99d8-e8fdd5dbae45",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "81abe404-ec49-4160-9463-44c1578a9b34",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "bca10489-5dc1-43c9-93ef-2b3b55a022ad",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "3128d885-b5ce-496a-a1b4-28d967ce6209",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -16879447,\n   \"event_name\": \"culpa sunt irure\",\n   \"event_type\": \"Ut aliquip in\",\n   \"event_category\": \"Ut veniam qui ut\",\n   \"version\": \"consectetur nisi cupidatat commodo\",\n   \"display_name\": \"Excepteur\",\n   \"description\": \"laborum occaecat\",\n   \"created_on\": \"occaecat Duis\"\n  },\n  {\n   \"id\": -91377153,\n   \"event_name\": \"et dolore\",\n   \"event_type\": \"anim irure Excepteur ex\",\n   \"event_category\": \"velit exercitation sunt\",\n   \"version\": \"nisi dolor sit sint\",\n   \"display_name\": \"deserunt Duis nulla\",\n   \"description\": \"id magna esse culpa\",\n   \"created_on\": \"labore Excepteur\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "3cfb5295-3fab-4355-b8f1-7780c69e65eb",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "2ec45918-e2e8-45de-9b50-a334d0706af2",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 69340739,\n   \"event_name\": \"Lorem enim eiusmod\",\n   \"event_type\": \"aliqua Duis\",\n   \"event_category\": \"consequa\",\n   \"version\": \"ut exercitation qu\",\n   \"display_name\": \"deserunt\",\n   \"description\": \"in ullamco\",\n   \"created_on\": \"eu labore\"\n  },\n  {\n   \"id\": -41975716,\n   \"event_name\": \"nisi incididunt commodo sit quis\",\n   \"event_type\": \"officia\",\n   \"event_category\": \"amet ullamco ad\",\n   \"version\": \"cillum sed amet mollit\",\n   \"display_name\": \"tempor esse nisi Excepteur commodo\",\n   \"description\": \"ad minim anim magna\",\n   \"created_on\": \"voluptate cillum dolor in\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "f51874e6-ea33-439a-a236-560c8b9c0416",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "feaef49e-20db-4eb0-9712-390dedfe71e9",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "7fde946a-2684-4faf-9ea6-15404bda216e",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1974-03-02T05:59:20.139Z\",\n \"status\": -96125561,\n \"error\": \"sit enim in ipsum occaecat\",\n \"exception\": \"sit laboris proident\",\n \"message\": \"Lorem\",\n \"total_time_taken_in_millis\": 6980260,\n \"http_status\": \"423 LOCKED\",\n \"items\": {\n  \"company_id\": -78795500,\n  \"integration_data\": {},\n  \"company_name\": \"culpa veniam cupidatat in\",\n  \"task_details\": {\n   \"type\": -15247706,\n   \"group_list\": [\n    {\n     \"text\": \"laboris\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"nisi nulla\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -27061029.91972825,\n   \"safe_stock\": 52779068,\n   \"period_threshold\": 81697230,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"anim Excepteur\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"cupidatat laborum id nulla elit\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"eiusmod tempor si\",\n  \"alias\": \"consequat dolore mollit aliquip\"\n },\n \"payload\": {\n  \"company_id\": -86222724,\n  \"integration_data\": {},\n  \"company_name\": \"irure nostrud\",\n  \"task_details\": {\n   \"type\": -74209386,\n   \"group_list\": [\n    {\n     \"text\": \"ea quis reprehenderit\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"est nulla ul\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 20789645.016810626,\n   \"safe_stock\": -19089543,\n   \"period_threshold\": 45598954,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"aliquip consequat sed\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"in laboris consequat aute sit\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"velit exercitation occaecat cillum\",\n  \"alias\": \"est consequat\"\n },\n \"trace_id\": \"ullamco veniam nostrud\",\n \"page\": {\n  \"type\": \"consectetur minim Ut\",\n  \"size\": -59062194,\n  \"current\": 48519910,\n  \"has_next\": true,\n  \"item_total\": -63934215,\n  \"next_id\": \"esse\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "adb5f60a-0de8-4f96-adc0-2d90e02a0ae9",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1974-03-02T05:59:20.139Z\",\n \"status\": -96125561,\n \"error\": \"sit enim in ipsum occaecat\",\n \"exception\": \"sit laboris proident\",\n \"message\": \"Lorem\",\n \"total_time_taken_in_millis\": 6980260,\n \"http_status\": \"423 LOCKED\",\n \"items\": {\n  \"company_id\": -78795500,\n  \"integration_data\": {},\n  \"company_name\": \"culpa veniam cupidatat in\",\n  \"task_details\": {\n   \"type\": -15247706,\n   \"group_list\": [\n    {\n     \"text\": \"laboris\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"nisi nulla\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -27061029.91972825,\n   \"safe_stock\": 52779068,\n   \"period_threshold\": 81697230,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"anim Excepteur\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"cupidatat laborum id nulla elit\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"eiusmod tempor si\",\n  \"alias\": \"consequat dolore mollit aliquip\"\n },\n \"payload\": {\n  \"company_id\": -86222724,\n  \"integration_data\": {},\n  \"company_name\": \"irure nostrud\",\n  \"task_details\": {\n   \"type\": -74209386,\n   \"group_list\": [\n    {\n     \"text\": \"ea quis reprehenderit\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"est nulla ul\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 20789645.016810626,\n   \"safe_stock\": -19089543,\n   \"period_threshold\": 45598954,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"aliquip consequat sed\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"in laboris consequat aute sit\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"velit exercitation occaecat cillum\",\n  \"alias\": \"est consequat\"\n },\n \"trace_id\": \"ullamco veniam nostrud\",\n \"page\": {\n  \"type\": \"consectetur minim Ut\",\n  \"size\": -59062194,\n  \"current\": 48519910,\n  \"has_next\": true,\n  \"item_total\": -63934215,\n  \"next_id\": \"esse\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "73cbdc11-5ac0-46d6-9bda-9ec35724c9dd",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1974-03-02T05:59:20.139Z\",\n \"status\": -96125561,\n \"error\": \"sit enim in ipsum occaecat\",\n \"exception\": \"sit laboris proident\",\n \"message\": \"Lorem\",\n \"total_time_taken_in_millis\": 6980260,\n \"http_status\": \"423 LOCKED\",\n \"items\": {\n  \"company_id\": -78795500,\n  \"integration_data\": {},\n  \"company_name\": \"culpa veniam cupidatat in\",\n  \"task_details\": {\n   \"type\": -15247706,\n   \"group_list\": [\n    {\n     \"text\": \"laboris\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"nisi nulla\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -27061029.91972825,\n   \"safe_stock\": 52779068,\n   \"period_threshold\": 81697230,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"anim Excepteur\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"cupidatat laborum id nulla elit\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"eiusmod tempor si\",\n  \"alias\": \"consequat dolore mollit aliquip\"\n },\n \"payload\": {\n  \"company_id\": -86222724,\n  \"integration_data\": {},\n  \"company_name\": \"irure nostrud\",\n  \"task_details\": {\n   \"type\": -74209386,\n   \"group_list\": [\n    {\n     \"text\": \"ea quis reprehenderit\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"est nulla ul\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 20789645.016810626,\n   \"safe_stock\": -19089543,\n   \"period_threshold\": 45598954,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"aliquip consequat sed\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"in laboris consequat aute sit\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"velit exercitation occaecat cillum\",\n  \"alias\": \"est consequat\"\n },\n \"trace_id\": \"ullamco veniam nostrud\",\n \"page\": {\n  \"type\": \"consectetur minim Ut\",\n  \"size\": -59062194,\n  \"current\": 48519910,\n  \"has_next\": true,\n  \"item_total\": -63934215,\n  \"next_id\": \"esse\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "0c52132e-ff32-425c-81a4-a46d4b31f5e1",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "1a6514d4-7b5a-462c-89e8-02a6d4c7a07c",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1975-08-14T11:49:07.659Z\",\n \"status\": -38700495,\n \"error\": \"magna\",\n \"exception\": \"irure pariatur id\",\n \"message\": \"consequat anim\",\n \"total_time_taken_in_millis\": 94939242,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": [\n  {\n   \"company_id\": 76819951,\n   \"integration_data\": {},\n   \"company_name\": \"qui\",\n   \"task_details\": {\n    \"type\": 63841732,\n    \"group_list\": [\n     {\n      \"text\": \"adipisicing\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"officia\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 36718690.52836847,\n    \"safe_stock\": 71785046,\n    \"period_threshold\": -78037129,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"deserunt officia magna\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"quis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"occaecat ad in\",\n   \"alias\": \"incididunt adipisicing\"\n  },\n  {\n   \"company_id\": 98647416,\n   \"integration_data\": {},\n   \"company_name\": \"esse consequat ex non\",\n   \"task_details\": {\n    \"type\": 19661750,\n    \"group_list\": [\n     {\n      \"text\": \"pr\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nulla ex labore veniam\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 48910767.84759295,\n    \"safe_stock\": -80959542,\n    \"period_threshold\": 28156046,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"adipisicing nostrud ve\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"velit sint\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"dolor dolor exercitation\",\n   \"alias\": \"enim pariatur\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -15548841,\n   \"integration_data\": {},\n   \"company_name\": \"sit tempor occaecat ut\",\n   \"task_details\": {\n    \"type\": 98661565,\n    \"group_list\": [\n     {\n      \"text\": \"sunt pariatur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eiusmod ex\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -19647669.542199835,\n    \"safe_stock\": 29266306,\n    \"period_threshold\": 95496213,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"eiusmod\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"pariatur ullamco\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"dolore\",\n   \"alias\": \"reprehenderit est\"\n  },\n  {\n   \"company_id\": -59458043,\n   \"integration_data\": {},\n   \"company_name\": \"sed aliquip exercitation\",\n   \"task_details\": {\n    \"type\": 22195430,\n    \"group_list\": [\n     {\n      \"text\": \"mollit magna fugiat cupidatat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cillum non\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -78238105.38985914,\n    \"safe_stock\": 64458170,\n    \"period_threshold\": 27423357,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sint conseq\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ex consectetur in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"quis sint\",\n   \"alias\": \"eiusmod\"\n  }\n ],\n \"trace_id\": \"dolore consectetur irure sunt\",\n \"page\": {\n  \"type\": \"do id consectetur Excepteur labore\",\n  \"size\": 92520696,\n  \"current\": 27311111,\n  \"has_next\": true,\n  \"item_total\": 33054829,\n  \"next_id\": \"exercitation labore \",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5e212cf9-05af-4a74-95a2-ffe35b797f31",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1976-12-21T01:44:04.189Z\",\n \"status\": -50019543,\n \"error\": \"dolore magna\",\n \"exception\": \"non c\",\n \"message\": \"occaecat deserunt officia dolor\",\n \"total_time_taken_in_millis\": -88099952,\n \"http_status\": \"413 REQUEST_ENTITY_TOO_LARGE\",\n \"items\": [\n  {\n   \"company_id\": -21323141,\n   \"integration_data\": {},\n   \"company_name\": \"aliqua velit irure\",\n   \"task_details\": {\n    \"type\": -25679974,\n    \"group_list\": [\n     {\n      \"text\": \"adipisicing eiusmod ad\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"anim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -42665345.956754,\n    \"safe_stock\": 75001228,\n    \"period_threshold\": -77099360,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"aliqua commodo dolor non\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor sed laborum ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Lore\",\n   \"alias\": \"minim exercitation sit anim\"\n  },\n  {\n   \"company_id\": -18914026,\n   \"integration_data\": {},\n   \"company_name\": \"ex velit aute\",\n   \"task_details\": {\n    \"type\": -54000742,\n    \"group_list\": [\n     {\n      \"text\": \"veniam et ad elit anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eiusmod dolor aute labore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -59557039.487644345,\n    \"safe_stock\": -43072941,\n    \"period_threshold\": 93458873,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"deserunt amet\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"id minim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"esse\",\n   \"alias\": \"Ut nisi\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 7431549,\n   \"integration_data\": {},\n   \"company_name\": \"Ut\",\n   \"task_details\": {\n    \"type\": -83518470,\n    \"group_list\": [\n     {\n      \"text\": \"aute lab\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ea\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -81521679.59233806,\n    \"safe_stock\": -2607710,\n    \"period_threshold\": 32912767,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"cillum id ullamco dolo\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"esse cupidatat quis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in\",\n   \"alias\": \"labore amet dolor\"\n  },\n  {\n   \"company_id\": -36467661,\n   \"integration_data\": {},\n   \"company_name\": \"ut commod\",\n   \"task_details\": {\n    \"type\": -89356295,\n    \"group_list\": [\n     {\n      \"text\": \"reprehenderit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"exercitation nulla\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -73907738.40877132,\n    \"safe_stock\": -48811721,\n    \"period_threshold\": 98229569,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"aute minim dolor fugiat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"enim consequat consectetur reprehenderit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"eiusmod ut laboris tempor\",\n   \"alias\": \"nostrud\"\n  }\n ],\n \"trace_id\": \"amet\",\n \"page\": {\n  \"type\": \"tempor eiusmod\",\n  \"size\": -64354390,\n  \"current\": 44051554,\n  \"has_next\": true,\n  \"item_total\": 38401194,\n  \"next_id\": \"id esse\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "914fcf3e-828e-44a2-ab84-77a502327ba5",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1976-12-21T01:44:04.189Z\",\n \"status\": -50019543,\n \"error\": \"dolore magna\",\n \"exception\": \"non c\",\n \"message\": \"occaecat deserunt officia dolor\",\n \"total_time_taken_in_millis\": -88099952,\n \"http_status\": \"413 REQUEST_ENTITY_TOO_LARGE\",\n \"items\": [\n  {\n   \"company_id\": -21323141,\n   \"integration_data\": {},\n   \"company_name\": \"aliqua velit irure\",\n   \"task_details\": {\n    \"type\": -25679974,\n    \"group_list\": [\n     {\n      \"text\": \"adipisicing eiusmod ad\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"anim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -42665345.956754,\n    \"safe_stock\": 75001228,\n    \"period_threshold\": -77099360,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"aliqua commodo dolor non\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor sed laborum ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Lore\",\n   \"alias\": \"minim exercitation sit anim\"\n  },\n  {\n   \"company_id\": -18914026,\n   \"integration_data\": {},\n   \"company_name\": \"ex velit aute\",\n   \"task_details\": {\n    \"type\": -54000742,\n    \"group_list\": [\n     {\n      \"text\": \"veniam et ad elit anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eiusmod dolor aute labore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -59557039.487644345,\n    \"safe_stock\": -43072941,\n    \"period_threshold\": 93458873,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"deserunt amet\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"id minim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"esse\",\n   \"alias\": \"Ut nisi\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 7431549,\n   \"integration_data\": {},\n   \"company_name\": \"Ut\",\n   \"task_details\": {\n    \"type\": -83518470,\n    \"group_list\": [\n     {\n      \"text\": \"aute lab\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ea\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -81521679.59233806,\n    \"safe_stock\": -2607710,\n    \"period_threshold\": 32912767,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"cillum id ullamco dolo\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"esse cupidatat quis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in\",\n   \"alias\": \"labore amet dolor\"\n  },\n  {\n   \"company_id\": -36467661,\n   \"integration_data\": {},\n   \"company_name\": \"ut commod\",\n   \"task_details\": {\n    \"type\": -89356295,\n    \"group_list\": [\n     {\n      \"text\": \"reprehenderit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"exercitation nulla\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -73907738.40877132,\n    \"safe_stock\": -48811721,\n    \"period_threshold\": 98229569,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"aute minim dolor fugiat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"enim consequat consectetur reprehenderit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"eiusmod ut laboris tempor\",\n   \"alias\": \"nostrud\"\n  }\n ],\n \"trace_id\": \"amet\",\n \"page\": {\n  \"type\": \"tempor eiusmod\",\n  \"size\": -64354390,\n  \"current\": 44051554,\n  \"has_next\": true,\n  \"item_total\": 38401194,\n  \"next_id\": \"id esse\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "f7951d5c-33aa-4f11-8d14-1900583e3ab5",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "7719b3b6-3693-4aca-aaf1-c99c2a14f224",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1964-08-09T18:12:54.599Z\",\n \"status\": -82731755,\n \"error\": \"voluptate in eiusmod sit\",\n \"exception\": \"occaecat in fu\",\n \"message\": \"esse ex\",\n \"total_time_taken_in_millis\": -65692053,\n \"http_status\": \"101 SWITCHING_PROTOCOLS\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"in mollit\",\n \"page\": {\n  \"type\": \"anim culpa proident cillum\",\n  \"size\": 41699567,\n  \"current\": 59711549,\n  \"has_next\": true,\n  \"item_total\": -13480341,\n  \"next_id\": \"Ut sint eu p\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2e8e94e6-264d-4273-8aeb-093dd19b81b4",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1964-08-09T18:12:54.599Z\",\n \"status\": -82731755,\n \"error\": \"voluptate in eiusmod sit\",\n \"exception\": \"occaecat in fu\",\n \"message\": \"esse ex\",\n \"total_time_taken_in_millis\": -65692053,\n \"http_status\": \"101 SWITCHING_PROTOCOLS\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"in mollit\",\n \"page\": {\n  \"type\": \"anim culpa proident cillum\",\n  \"size\": 41699567,\n  \"current\": 59711549,\n  \"has_next\": true,\n  \"item_total\": -13480341,\n  \"next_id\": \"Ut sint eu p\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e40c8fdc-c0de-401d-ac88-2adfe1b6b754",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1964-08-09T18:12:54.599Z\",\n \"status\": -82731755,\n \"error\": \"voluptate in eiusmod sit\",\n \"exception\": \"occaecat in fu\",\n \"message\": \"esse ex\",\n \"total_time_taken_in_millis\": -65692053,\n \"http_status\": \"101 SWITCHING_PROTOCOLS\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"in mollit\",\n \"page\": {\n  \"type\": \"anim culpa proident cillum\",\n  \"size\": 41699567,\n  \"current\": 59711549,\n  \"has_next\": true,\n  \"item_total\": -13480341,\n  \"next_id\": \"Ut sint eu p\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "1ac3f56d-bfe7-451a-b6dc-639de7edff8d",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "1b912a13-12ad-49e4-ae24-c7b1efd1e647",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1966-05-17T22:30:35.670Z\",\n \"status\": 93055808,\n \"error\": \"nisi et irure enim\",\n \"exception\": \"dolore\",\n \"message\": \"aliquip qui ipsum\",\n \"total_time_taken_in_millis\": -83978366,\n \"http_status\": \"428 PRECONDITION_REQUIRED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"dolo\",\n \"page\": {\n  \"type\": \"ad cillum v\",\n  \"size\": -2300006,\n  \"current\": -26350519,\n  \"has_next\": false,\n  \"item_total\": 61648335,\n  \"next_id\": \"elit deserunt irure\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9706ed80-88da-44da-b66d-9c6cefb99709",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1966-05-17T22:30:35.670Z\",\n \"status\": 93055808,\n \"error\": \"nisi et irure enim\",\n \"exception\": \"dolore\",\n \"message\": \"aliquip qui ipsum\",\n \"total_time_taken_in_millis\": -83978366,\n \"http_status\": \"428 PRECONDITION_REQUIRED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"dolo\",\n \"page\": {\n  \"type\": \"ad cillum v\",\n  \"size\": -2300006,\n  \"current\": -26350519,\n  \"has_next\": false,\n  \"item_total\": 61648335,\n  \"next_id\": \"elit deserunt irure\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "0dbec7ed-2f45-42ed-8185-c9a5e1ec77d5",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1966-05-17T22:30:35.670Z\",\n \"status\": 93055808,\n \"error\": \"nisi et irure enim\",\n \"exception\": \"dolore\",\n \"message\": \"aliquip qui ipsum\",\n \"total_time_taken_in_millis\": -83978366,\n \"http_status\": \"428 PRECONDITION_REQUIRED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"dolo\",\n \"page\": {\n  \"type\": \"ad cillum v\",\n  \"size\": -2300006,\n  \"current\": -26350519,\n  \"has_next\": false,\n  \"item_total\": 61648335,\n  \"next_id\": \"elit deserunt irure\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5ee388d5-0408-4c7e-beba-df036e11fc9f",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1966-05-17T22:30:35.670Z\",\n \"status\": 93055808,\n \"error\": \"nisi et irure enim\",\n \"exception\": \"dolore\",\n \"message\": \"aliquip qui ipsum\",\n \"total_time_taken_in_millis\": -83978366,\n \"http_status\": \"428 PRECONDITION_REQUIRED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"dolo\",\n \"page\": {\n  \"type\": \"ad cillum v\",\n  \"size\": -2300006,\n  \"current\": -26350519,\n  \"has_next\": false,\n  \"item_total\": 61648335,\n  \"next_id\": \"elit deserunt irure\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "6bcaafff-e85d-4454-820d-c9e61716b834",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1966-05-17T22:30:35.670Z\",\n \"status\": 93055808,\n \"error\": \"nisi et irure enim\",\n \"exception\": \"dolore\",\n \"message\": \"aliquip qui ipsum\",\n \"total_time_taken_in_millis\": -83978366,\n \"http_status\": \"428 PRECONDITION_REQUIRED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"dolo\",\n \"page\": {\n  \"type\": \"ad cillum v\",\n  \"size\": -2300006,\n  \"current\": -26350519,\n  \"has_next\": false,\n  \"item_total\": 61648335,\n  \"next_id\": \"elit deserunt irure\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fynd.com"
    }
  ],
  "info": {
    "_postman_id": "8d2cf757-762b-43cb-ac6e-790033fbd92a",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
