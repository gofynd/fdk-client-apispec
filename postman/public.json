{
  "item": [
    {
      "id": "8b4935a9-910a-4338-b61a-6c9a26b97025",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "4a50379c-4f7d-40e9-853f-a986792b6bba",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "838d5476-0c6b-4e83-83b8-39ed547c7a09",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "consectetur ipsum nisi",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "963de666-f50d-4360-86ee-58ae02ab15fc",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "consectetur ipsum nisi",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "48610d31-f10e-410b-bbd4-f181c3f9ec09",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "consectetur ipsum nisi",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "24686c1c-09e9-4e2e-a9e5-c0a85627c10a",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "96bfe9a9-78e7-42a6-a120-f47294020c3f",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "b8c699f6-7be6-41d9-936a-ba0f358bc269",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "34814076-77d0-4d2b-8ecf-666ecb7d895a",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "3a210290-bd28-4806-8496-df522c3ded14",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -21414008,\n   \"event_name\": \"incididunt cupidatat velit\",\n   \"event_type\": \"fugiat minim sint elit\",\n   \"event_category\": \"dolor ve\",\n   \"version\": \"pariatur fugiat est ipsum\",\n   \"display_name\": \"occaecat incididunt amet\",\n   \"description\": \"reprehenderit quis adipisicing\",\n   \"created_on\": \"eu nisi in Lorem labore\"\n  },\n  {\n   \"id\": 27919613,\n   \"event_name\": \"occaeca\",\n   \"event_type\": \"sunt cupidatat aliqua qui\",\n   \"event_category\": \"aliqua Lorem\",\n   \"version\": \"aliqua pariatur magna id\",\n   \"display_name\": \"consequat mol\",\n   \"description\": \"minim et elit culpa\",\n   \"created_on\": \"magna eu\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "094e7480-d352-48aa-bdaa-35dda5bac418",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "341ce321-a297-4e85-9028-c78baad9458e",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 12031800,\n   \"event_name\": \"deserunt velit\",\n   \"event_type\": \"officia Excepteur dolore deserunt labore\",\n   \"event_category\": \"in dolor\",\n   \"version\": \"minim id dolor esse commodo\",\n   \"display_name\": \"nostrud exercitation non sunt aliquip\",\n   \"description\": \"ut culpa pariatur deserunt\",\n   \"created_on\": \"Excepteur magna nulla\"\n  },\n  {\n   \"id\": 91375573,\n   \"event_name\": \"fugiat magna laboris labore ipsum\",\n   \"event_type\": \"occaecat cupidatat tempor\",\n   \"event_category\": \"commodo pariatu\",\n   \"version\": \"nulla ea\",\n   \"display_name\": \"in dolor\",\n   \"description\": \"adipisicing Lorem eiusmod\",\n   \"created_on\": \"esse est\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "5214f4a8-cf73-4c58-aeab-bcf41505973d",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "d1e70775-9c0f-4deb-9f4f-18231de20b0a",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "f5b66045-f4e6-485d-95f8-594c0912087c",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1977-02-02T19:29:46.530Z\",\n \"status\": -83352666,\n \"error\": \"ut\",\n \"exception\": \"dolor officia magna\",\n \"message\": \"ut ex aliqua\",\n \"total_time_taken_in_millis\": 65570400,\n \"http_status\": \"407 PROXY_AUTHENTICATION_REQUIRED\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"pariatur proident do reprehenderit\",\n   \"description\": \"cillum in amet qui\",\n   \"name\": \"sunt commodo consectetur tempor\",\n   \"slug\": \"ipsum id cupidatat dolor\",\n   \"meta\": [\n    {\n     \"_id\": \"minim deserunt sed Excepteur\",\n     \"name\": \"anim\",\n     \"value\": \"voluptate enim in quis tempor\"\n    },\n    {\n     \"_id\": \"dolore enim est\",\n     \"name\": \"ipsum sed\",\n     \"value\": \"eu do occaecat\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"sit ut Excepteur\",\n    \"integration\": \"exercitation ad\",\n    \"level\": \"pariatur commodo eu\",\n    \"uid\": -9311665,\n    \"opted\": true,\n    \"permissions\": [\n     \"est in tempor\",\n     \"culpa velit occaecat minim fugia\"\n    ],\n    \"token\": \"ullamco do consequat\",\n    \"name\": \"eu Lorem occaecat\",\n    \"stores\": [\n     {\n      \"_id\": \"ipsum consequat cupidatat labore\",\n      \"integration\": \"consequat sunt culpa \",\n      \"level\": \"proident id deserunt occaecat\",\n      \"uid\": -16392428,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolore voluptate in occaecat enim\",\n      \"code\": \"occaecat in reprehenderit\",\n      \"name\": \"commodo do amet Lorem sed\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"Excepteur\",\n      \"integration\": \"in amet minim magna\",\n      \"level\": \"aliqua est sit dolor\",\n      \"uid\": 77626533,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"consectetur eu qui id\",\n      \"code\": \"Excepteur esse in ut\",\n      \"name\": \"amet cil\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"magna eiusmod\",\n      \"integration\": \"officia ad nisi in elit\",\n      \"level\": \"ullamco aute\",\n      \"uid\": 77620472,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Duis Ut et\",\n      \"code\": \"aliquip anim in\",\n      \"name\": \"Excepteur pariatur\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"enim\",\n      \"integration\": \"ex pariatur anim irure\",\n      \"level\": \"in Excepteur culpa eiusmod sint\",\n      \"uid\": -89276970,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in aliquip\",\n      \"code\": \"officia dolore voluptate\",\n      \"name\": \"quis velit veniam commodo\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"laboris anim aliquip ullamco\",\n    \"integration\": \"eu labore sun\",\n    \"level\": \"aute consequat fugiat\",\n    \"uid\": -55254823,\n    \"opted\": false,\n    \"permissions\": [\n     \"quis nulla cillum\",\n     \"quis dolor cupidatat aliqua dolore\"\n    ],\n    \"token\": \"reprehender\",\n    \"name\": \"eiusmod aliquip consectetur incididunt\",\n    \"stores\": [\n     {\n      \"_id\": \"aliquip quis\",\n      \"integration\": \"v\",\n      \"level\": \"Duis minim Excepteur\",\n      \"uid\": 40636257,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"et consectetur consequat\",\n      \"code\": \"velit dolor consequat ex\",\n      \"name\": \"dolor ea\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"officia dolore cupidatat\",\n      \"integration\": \"incididunt\",\n      \"level\": \"aliquip veniam Excepteur irure labore\",\n      \"uid\": 10699523,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolore pariatur\",\n      \"code\": \"id sit reprehenderi\",\n      \"name\": \"aute minim\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"esse anim ipsum commodo\",\n      \"integration\": \"nulla\",\n      \"level\": \"non\",\n      \"uid\": 21787338,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"quis pariatur sint in\",\n      \"code\": \"nostrud esse dolore\",\n      \"name\": \"pariatur in eu deserunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"tempor amet\",\n      \"integration\": \"ad veniam\",\n      \"level\": \"reprehenderit nulla ut tempor\",\n      \"uid\": -76004729,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"cupidatat do ex qui\",\n      \"code\": \"ullamco exercitation\",\n      \"name\": \"ad dolore\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"laborum Lorem dolor\",\n   \"description\": \"veniam est sed ad Duis\",\n   \"name\": \"velit non ex\",\n   \"slug\": \"sunt in enim incididunt\",\n   \"meta\": [\n    {\n     \"_id\": \"eiusmod consectetur\",\n     \"name\": \"aliqua culpa ad non\",\n     \"value\": \"anim Lorem et\"\n    },\n    {\n     \"_id\": \"veniam\",\n     \"name\": \"ut nostrud velit\",\n     \"value\": \"Ut\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"Lorem sit aute sunt\",\n    \"integration\": \"dolore in cupidatat\",\n    \"level\": \"laborum in\",\n    \"uid\": -25470335,\n    \"opted\": true,\n    \"permissions\": [\n     \"mollit Duis do d\",\n     \"Ut occaecat aliquip eu\"\n    ],\n    \"token\": \"ipsum\",\n    \"name\": \"ullamco reprehenderit Lorem id\",\n    \"stores\": [\n     {\n      \"_id\": \"laborum enim nulla\",\n      \"integration\": \"exercitation sit velit fugiat consectetu\",\n      \"level\": \"elit\",\n      \"uid\": 36390039,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"irure reprehenderit Duis\",\n      \"code\": \"mollit commodo officia deserunt\",\n      \"name\": \"aute dolor incididunt et id\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"Duis est fugiat Excepteur\",\n      \"integration\": \"fugiat ut\",\n      \"level\": \"exercitation qui\",\n      \"uid\": -11233817,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"tempor minim \",\n      \"code\": \"irure deserunt Excepteur sit eu\",\n      \"name\": \"dolore Ut adipisicing\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"veniam\",\n      \"integration\": \"do\",\n      \"level\": \"ipsum do nisi\",\n      \"uid\": -38680087,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"occaecat incididunt ipsum\",\n      \"code\": \"ullamco elit exercita\",\n      \"name\": \"tempor fugiat non pariatur commodo\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"adipisicing\",\n      \"integration\": \"enim cupidatat consequat ad\",\n      \"level\": \"consequat qui dolore\",\n      \"uid\": 79918840,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ut ea Lorem labore\",\n      \"code\": \"ad non\",\n      \"name\": \"eu in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"sit anim Ut ad nostrud\",\n    \"integration\": \"exercitation eu fugiat consectetur\",\n    \"level\": \"adipisicing sed dolore ea\",\n    \"uid\": 77595532,\n    \"opted\": true,\n    \"permissions\": [\n     \"non ea magna culpa\",\n     \"est ad aliquip\"\n    ],\n    \"token\": \"non velit reprehenderit id in\",\n    \"name\": \"proident Duis\",\n    \"stores\": [\n     {\n      \"_id\": \"in fugiat non\",\n      \"integration\": \"aute\",\n      \"level\": \"quis et in esse cillum\",\n      \"uid\": 19142012,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"fugiat dolor ipsum ut\",\n      \"code\": \"Lorem ut\",\n      \"name\": \"elit aliquip ipsum dolore\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"sed consequat enim anim nisi\",\n      \"integration\": \"esse elit\",\n      \"level\": \"labore consequat occaecat\",\n      \"uid\": 1441980,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"amet eiusmod consequat\",\n      \"code\": \"esse non\",\n      \"name\": \"id exercitation dolor adipisicing veniam\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"irure elit Duis sunt\",\n      \"integration\": \"sed officia fugia\",\n      \"level\": \"quis ex laboris tempor\",\n      \"uid\": 5296441,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sint aliqua enim\",\n      \"code\": \"aliquip dolore sunt\",\n      \"name\": \"est laboris aliquip nulla\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"adipisicing et\",\n      \"integration\": \"sint tempor dolor\",\n      \"level\": \"nulla minim sit irure fugiat\",\n      \"uid\": -39901035,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Duis anim\",\n      \"code\": \"officia adipisicing amet incididunt\",\n      \"name\": \"qui ad sint\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"Lorem voluptate\",\n \"page\": {\n  \"type\": \"consect\",\n  \"size\": 19794162,\n  \"current\": -36078487,\n  \"has_next\": true,\n  \"item_total\": -86379237,\n  \"next_id\": \"nulla sunt\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c85e65ef-2e52-4c20-bd00-22b55ac4904a",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1977-02-02T19:29:46.530Z\",\n \"status\": -83352666,\n \"error\": \"ut\",\n \"exception\": \"dolor officia magna\",\n \"message\": \"ut ex aliqua\",\n \"total_time_taken_in_millis\": 65570400,\n \"http_status\": \"407 PROXY_AUTHENTICATION_REQUIRED\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"pariatur proident do reprehenderit\",\n   \"description\": \"cillum in amet qui\",\n   \"name\": \"sunt commodo consectetur tempor\",\n   \"slug\": \"ipsum id cupidatat dolor\",\n   \"meta\": [\n    {\n     \"_id\": \"minim deserunt sed Excepteur\",\n     \"name\": \"anim\",\n     \"value\": \"voluptate enim in quis tempor\"\n    },\n    {\n     \"_id\": \"dolore enim est\",\n     \"name\": \"ipsum sed\",\n     \"value\": \"eu do occaecat\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"sit ut Excepteur\",\n    \"integration\": \"exercitation ad\",\n    \"level\": \"pariatur commodo eu\",\n    \"uid\": -9311665,\n    \"opted\": true,\n    \"permissions\": [\n     \"est in tempor\",\n     \"culpa velit occaecat minim fugia\"\n    ],\n    \"token\": \"ullamco do consequat\",\n    \"name\": \"eu Lorem occaecat\",\n    \"stores\": [\n     {\n      \"_id\": \"ipsum consequat cupidatat labore\",\n      \"integration\": \"consequat sunt culpa \",\n      \"level\": \"proident id deserunt occaecat\",\n      \"uid\": -16392428,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolore voluptate in occaecat enim\",\n      \"code\": \"occaecat in reprehenderit\",\n      \"name\": \"commodo do amet Lorem sed\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"Excepteur\",\n      \"integration\": \"in amet minim magna\",\n      \"level\": \"aliqua est sit dolor\",\n      \"uid\": 77626533,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"consectetur eu qui id\",\n      \"code\": \"Excepteur esse in ut\",\n      \"name\": \"amet cil\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"magna eiusmod\",\n      \"integration\": \"officia ad nisi in elit\",\n      \"level\": \"ullamco aute\",\n      \"uid\": 77620472,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Duis Ut et\",\n      \"code\": \"aliquip anim in\",\n      \"name\": \"Excepteur pariatur\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"enim\",\n      \"integration\": \"ex pariatur anim irure\",\n      \"level\": \"in Excepteur culpa eiusmod sint\",\n      \"uid\": -89276970,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in aliquip\",\n      \"code\": \"officia dolore voluptate\",\n      \"name\": \"quis velit veniam commodo\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"laboris anim aliquip ullamco\",\n    \"integration\": \"eu labore sun\",\n    \"level\": \"aute consequat fugiat\",\n    \"uid\": -55254823,\n    \"opted\": false,\n    \"permissions\": [\n     \"quis nulla cillum\",\n     \"quis dolor cupidatat aliqua dolore\"\n    ],\n    \"token\": \"reprehender\",\n    \"name\": \"eiusmod aliquip consectetur incididunt\",\n    \"stores\": [\n     {\n      \"_id\": \"aliquip quis\",\n      \"integration\": \"v\",\n      \"level\": \"Duis minim Excepteur\",\n      \"uid\": 40636257,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"et consectetur consequat\",\n      \"code\": \"velit dolor consequat ex\",\n      \"name\": \"dolor ea\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"officia dolore cupidatat\",\n      \"integration\": \"incididunt\",\n      \"level\": \"aliquip veniam Excepteur irure labore\",\n      \"uid\": 10699523,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolore pariatur\",\n      \"code\": \"id sit reprehenderi\",\n      \"name\": \"aute minim\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"esse anim ipsum commodo\",\n      \"integration\": \"nulla\",\n      \"level\": \"non\",\n      \"uid\": 21787338,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"quis pariatur sint in\",\n      \"code\": \"nostrud esse dolore\",\n      \"name\": \"pariatur in eu deserunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"tempor amet\",\n      \"integration\": \"ad veniam\",\n      \"level\": \"reprehenderit nulla ut tempor\",\n      \"uid\": -76004729,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"cupidatat do ex qui\",\n      \"code\": \"ullamco exercitation\",\n      \"name\": \"ad dolore\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"laborum Lorem dolor\",\n   \"description\": \"veniam est sed ad Duis\",\n   \"name\": \"velit non ex\",\n   \"slug\": \"sunt in enim incididunt\",\n   \"meta\": [\n    {\n     \"_id\": \"eiusmod consectetur\",\n     \"name\": \"aliqua culpa ad non\",\n     \"value\": \"anim Lorem et\"\n    },\n    {\n     \"_id\": \"veniam\",\n     \"name\": \"ut nostrud velit\",\n     \"value\": \"Ut\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"Lorem sit aute sunt\",\n    \"integration\": \"dolore in cupidatat\",\n    \"level\": \"laborum in\",\n    \"uid\": -25470335,\n    \"opted\": true,\n    \"permissions\": [\n     \"mollit Duis do d\",\n     \"Ut occaecat aliquip eu\"\n    ],\n    \"token\": \"ipsum\",\n    \"name\": \"ullamco reprehenderit Lorem id\",\n    \"stores\": [\n     {\n      \"_id\": \"laborum enim nulla\",\n      \"integration\": \"exercitation sit velit fugiat consectetu\",\n      \"level\": \"elit\",\n      \"uid\": 36390039,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"irure reprehenderit Duis\",\n      \"code\": \"mollit commodo officia deserunt\",\n      \"name\": \"aute dolor incididunt et id\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"Duis est fugiat Excepteur\",\n      \"integration\": \"fugiat ut\",\n      \"level\": \"exercitation qui\",\n      \"uid\": -11233817,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"tempor minim \",\n      \"code\": \"irure deserunt Excepteur sit eu\",\n      \"name\": \"dolore Ut adipisicing\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"veniam\",\n      \"integration\": \"do\",\n      \"level\": \"ipsum do nisi\",\n      \"uid\": -38680087,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"occaecat incididunt ipsum\",\n      \"code\": \"ullamco elit exercita\",\n      \"name\": \"tempor fugiat non pariatur commodo\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"adipisicing\",\n      \"integration\": \"enim cupidatat consequat ad\",\n      \"level\": \"consequat qui dolore\",\n      \"uid\": 79918840,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ut ea Lorem labore\",\n      \"code\": \"ad non\",\n      \"name\": \"eu in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"sit anim Ut ad nostrud\",\n    \"integration\": \"exercitation eu fugiat consectetur\",\n    \"level\": \"adipisicing sed dolore ea\",\n    \"uid\": 77595532,\n    \"opted\": true,\n    \"permissions\": [\n     \"non ea magna culpa\",\n     \"est ad aliquip\"\n    ],\n    \"token\": \"non velit reprehenderit id in\",\n    \"name\": \"proident Duis\",\n    \"stores\": [\n     {\n      \"_id\": \"in fugiat non\",\n      \"integration\": \"aute\",\n      \"level\": \"quis et in esse cillum\",\n      \"uid\": 19142012,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"fugiat dolor ipsum ut\",\n      \"code\": \"Lorem ut\",\n      \"name\": \"elit aliquip ipsum dolore\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"sed consequat enim anim nisi\",\n      \"integration\": \"esse elit\",\n      \"level\": \"labore consequat occaecat\",\n      \"uid\": 1441980,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"amet eiusmod consequat\",\n      \"code\": \"esse non\",\n      \"name\": \"id exercitation dolor adipisicing veniam\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"irure elit Duis sunt\",\n      \"integration\": \"sed officia fugia\",\n      \"level\": \"quis ex laboris tempor\",\n      \"uid\": 5296441,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sint aliqua enim\",\n      \"code\": \"aliquip dolore sunt\",\n      \"name\": \"est laboris aliquip nulla\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"adipisicing et\",\n      \"integration\": \"sint tempor dolor\",\n      \"level\": \"nulla minim sit irure fugiat\",\n      \"uid\": -39901035,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Duis anim\",\n      \"code\": \"officia adipisicing amet incididunt\",\n      \"name\": \"qui ad sint\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"Lorem voluptate\",\n \"page\": {\n  \"type\": \"consect\",\n  \"size\": 19794162,\n  \"current\": -36078487,\n  \"has_next\": true,\n  \"item_total\": -86379237,\n  \"next_id\": \"nulla sunt\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "101852a2-8e7c-4cd1-8246-e95200471f79",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1977-02-02T19:29:46.530Z\",\n \"status\": -83352666,\n \"error\": \"ut\",\n \"exception\": \"dolor officia magna\",\n \"message\": \"ut ex aliqua\",\n \"total_time_taken_in_millis\": 65570400,\n \"http_status\": \"407 PROXY_AUTHENTICATION_REQUIRED\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"pariatur proident do reprehenderit\",\n   \"description\": \"cillum in amet qui\",\n   \"name\": \"sunt commodo consectetur tempor\",\n   \"slug\": \"ipsum id cupidatat dolor\",\n   \"meta\": [\n    {\n     \"_id\": \"minim deserunt sed Excepteur\",\n     \"name\": \"anim\",\n     \"value\": \"voluptate enim in quis tempor\"\n    },\n    {\n     \"_id\": \"dolore enim est\",\n     \"name\": \"ipsum sed\",\n     \"value\": \"eu do occaecat\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"sit ut Excepteur\",\n    \"integration\": \"exercitation ad\",\n    \"level\": \"pariatur commodo eu\",\n    \"uid\": -9311665,\n    \"opted\": true,\n    \"permissions\": [\n     \"est in tempor\",\n     \"culpa velit occaecat minim fugia\"\n    ],\n    \"token\": \"ullamco do consequat\",\n    \"name\": \"eu Lorem occaecat\",\n    \"stores\": [\n     {\n      \"_id\": \"ipsum consequat cupidatat labore\",\n      \"integration\": \"consequat sunt culpa \",\n      \"level\": \"proident id deserunt occaecat\",\n      \"uid\": -16392428,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolore voluptate in occaecat enim\",\n      \"code\": \"occaecat in reprehenderit\",\n      \"name\": \"commodo do amet Lorem sed\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"Excepteur\",\n      \"integration\": \"in amet minim magna\",\n      \"level\": \"aliqua est sit dolor\",\n      \"uid\": 77626533,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"consectetur eu qui id\",\n      \"code\": \"Excepteur esse in ut\",\n      \"name\": \"amet cil\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"magna eiusmod\",\n      \"integration\": \"officia ad nisi in elit\",\n      \"level\": \"ullamco aute\",\n      \"uid\": 77620472,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Duis Ut et\",\n      \"code\": \"aliquip anim in\",\n      \"name\": \"Excepteur pariatur\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"enim\",\n      \"integration\": \"ex pariatur anim irure\",\n      \"level\": \"in Excepteur culpa eiusmod sint\",\n      \"uid\": -89276970,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in aliquip\",\n      \"code\": \"officia dolore voluptate\",\n      \"name\": \"quis velit veniam commodo\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"laboris anim aliquip ullamco\",\n    \"integration\": \"eu labore sun\",\n    \"level\": \"aute consequat fugiat\",\n    \"uid\": -55254823,\n    \"opted\": false,\n    \"permissions\": [\n     \"quis nulla cillum\",\n     \"quis dolor cupidatat aliqua dolore\"\n    ],\n    \"token\": \"reprehender\",\n    \"name\": \"eiusmod aliquip consectetur incididunt\",\n    \"stores\": [\n     {\n      \"_id\": \"aliquip quis\",\n      \"integration\": \"v\",\n      \"level\": \"Duis minim Excepteur\",\n      \"uid\": 40636257,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"et consectetur consequat\",\n      \"code\": \"velit dolor consequat ex\",\n      \"name\": \"dolor ea\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"officia dolore cupidatat\",\n      \"integration\": \"incididunt\",\n      \"level\": \"aliquip veniam Excepteur irure labore\",\n      \"uid\": 10699523,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolore pariatur\",\n      \"code\": \"id sit reprehenderi\",\n      \"name\": \"aute minim\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"esse anim ipsum commodo\",\n      \"integration\": \"nulla\",\n      \"level\": \"non\",\n      \"uid\": 21787338,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"quis pariatur sint in\",\n      \"code\": \"nostrud esse dolore\",\n      \"name\": \"pariatur in eu deserunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"tempor amet\",\n      \"integration\": \"ad veniam\",\n      \"level\": \"reprehenderit nulla ut tempor\",\n      \"uid\": -76004729,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"cupidatat do ex qui\",\n      \"code\": \"ullamco exercitation\",\n      \"name\": \"ad dolore\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"laborum Lorem dolor\",\n   \"description\": \"veniam est sed ad Duis\",\n   \"name\": \"velit non ex\",\n   \"slug\": \"sunt in enim incididunt\",\n   \"meta\": [\n    {\n     \"_id\": \"eiusmod consectetur\",\n     \"name\": \"aliqua culpa ad non\",\n     \"value\": \"anim Lorem et\"\n    },\n    {\n     \"_id\": \"veniam\",\n     \"name\": \"ut nostrud velit\",\n     \"value\": \"Ut\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"Lorem sit aute sunt\",\n    \"integration\": \"dolore in cupidatat\",\n    \"level\": \"laborum in\",\n    \"uid\": -25470335,\n    \"opted\": true,\n    \"permissions\": [\n     \"mollit Duis do d\",\n     \"Ut occaecat aliquip eu\"\n    ],\n    \"token\": \"ipsum\",\n    \"name\": \"ullamco reprehenderit Lorem id\",\n    \"stores\": [\n     {\n      \"_id\": \"laborum enim nulla\",\n      \"integration\": \"exercitation sit velit fugiat consectetu\",\n      \"level\": \"elit\",\n      \"uid\": 36390039,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"irure reprehenderit Duis\",\n      \"code\": \"mollit commodo officia deserunt\",\n      \"name\": \"aute dolor incididunt et id\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"Duis est fugiat Excepteur\",\n      \"integration\": \"fugiat ut\",\n      \"level\": \"exercitation qui\",\n      \"uid\": -11233817,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"tempor minim \",\n      \"code\": \"irure deserunt Excepteur sit eu\",\n      \"name\": \"dolore Ut adipisicing\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"veniam\",\n      \"integration\": \"do\",\n      \"level\": \"ipsum do nisi\",\n      \"uid\": -38680087,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"occaecat incididunt ipsum\",\n      \"code\": \"ullamco elit exercita\",\n      \"name\": \"tempor fugiat non pariatur commodo\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"adipisicing\",\n      \"integration\": \"enim cupidatat consequat ad\",\n      \"level\": \"consequat qui dolore\",\n      \"uid\": 79918840,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ut ea Lorem labore\",\n      \"code\": \"ad non\",\n      \"name\": \"eu in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"sit anim Ut ad nostrud\",\n    \"integration\": \"exercitation eu fugiat consectetur\",\n    \"level\": \"adipisicing sed dolore ea\",\n    \"uid\": 77595532,\n    \"opted\": true,\n    \"permissions\": [\n     \"non ea magna culpa\",\n     \"est ad aliquip\"\n    ],\n    \"token\": \"non velit reprehenderit id in\",\n    \"name\": \"proident Duis\",\n    \"stores\": [\n     {\n      \"_id\": \"in fugiat non\",\n      \"integration\": \"aute\",\n      \"level\": \"quis et in esse cillum\",\n      \"uid\": 19142012,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"fugiat dolor ipsum ut\",\n      \"code\": \"Lorem ut\",\n      \"name\": \"elit aliquip ipsum dolore\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"sed consequat enim anim nisi\",\n      \"integration\": \"esse elit\",\n      \"level\": \"labore consequat occaecat\",\n      \"uid\": 1441980,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"amet eiusmod consequat\",\n      \"code\": \"esse non\",\n      \"name\": \"id exercitation dolor adipisicing veniam\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"irure elit Duis sunt\",\n      \"integration\": \"sed officia fugia\",\n      \"level\": \"quis ex laboris tempor\",\n      \"uid\": 5296441,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sint aliqua enim\",\n      \"code\": \"aliquip dolore sunt\",\n      \"name\": \"est laboris aliquip nulla\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"adipisicing et\",\n      \"integration\": \"sint tempor dolor\",\n      \"level\": \"nulla minim sit irure fugiat\",\n      \"uid\": -39901035,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Duis anim\",\n      \"code\": \"officia adipisicing amet incididunt\",\n      \"name\": \"qui ad sint\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"Lorem voluptate\",\n \"page\": {\n  \"type\": \"consect\",\n  \"size\": 19794162,\n  \"current\": -36078487,\n  \"has_next\": true,\n  \"item_total\": -86379237,\n  \"next_id\": \"nulla sunt\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "9aced6ff-9d7e-4b04-a5ff-ed9243dd25e7",
          "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
          "request": {
            "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "6590ca5c-8dc6-4353-9534-098ff10b7ea3",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1995-06-21T18:12:09.559Z\",\n \"status\": -70399217,\n \"error\": \"irure quis voluptate\",\n \"exception\": \"eu tempor dolore qu\",\n \"message\": \"consectetur eiusmod\",\n \"total_time_taken_in_millis\": 34894382,\n \"http_status\": \"431 REQUEST_HEADER_FIELDS_TOO_LARGE\",\n \"items\": {\n  \"session_id\": \"do consectetur sed dolor\",\n  \"error_message\": \"commodo amet\"\n },\n \"payload\": {\n  \"session_id\": \"Dui\",\n  \"error_message\": \"veniam eiusmod ea consequat qui\"\n },\n \"trace_id\": \"sint sed\",\n \"page\": {\n  \"type\": \"ad id proident velit dolor\",\n  \"size\": -16609477,\n  \"current\": -36499628,\n  \"has_next\": false,\n  \"item_total\": 90106855,\n  \"next_id\": \"consectetur nostrud\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "7116643f-9ab1-432c-bcdf-acd2f1fb72bb",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1995-06-21T18:12:09.559Z\",\n \"status\": -70399217,\n \"error\": \"irure quis voluptate\",\n \"exception\": \"eu tempor dolore qu\",\n \"message\": \"consectetur eiusmod\",\n \"total_time_taken_in_millis\": 34894382,\n \"http_status\": \"431 REQUEST_HEADER_FIELDS_TOO_LARGE\",\n \"items\": {\n  \"session_id\": \"do consectetur sed dolor\",\n  \"error_message\": \"commodo amet\"\n },\n \"payload\": {\n  \"session_id\": \"Dui\",\n  \"error_message\": \"veniam eiusmod ea consequat qui\"\n },\n \"trace_id\": \"sint sed\",\n \"page\": {\n  \"type\": \"ad id proident velit dolor\",\n  \"size\": -16609477,\n  \"current\": -36499628,\n  \"has_next\": false,\n  \"item_total\": 90106855,\n  \"next_id\": \"consectetur nostrud\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "4179d897-50f9-4fa6-832f-d265efd62331",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1995-06-21T18:12:09.559Z\",\n \"status\": -70399217,\n \"error\": \"irure quis voluptate\",\n \"exception\": \"eu tempor dolore qu\",\n \"message\": \"consectetur eiusmod\",\n \"total_time_taken_in_millis\": 34894382,\n \"http_status\": \"431 REQUEST_HEADER_FIELDS_TOO_LARGE\",\n \"items\": {\n  \"session_id\": \"do consectetur sed dolor\",\n  \"error_message\": \"commodo amet\"\n },\n \"payload\": {\n  \"session_id\": \"Dui\",\n  \"error_message\": \"veniam eiusmod ea consequat qui\"\n },\n \"trace_id\": \"sint sed\",\n \"page\": {\n  \"type\": \"ad id proident velit dolor\",\n  \"size\": -16609477,\n  \"current\": -36499628,\n  \"has_next\": false,\n  \"item_total\": 90106855,\n  \"next_id\": \"consectetur nostrud\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "b7807fcf-f355-45ed-9df1-763b59f2457f",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "ca101902-11c1-49f3-9b5d-daaaddb93f7e",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2012-07-24T15:10:54.478Z\",\n \"status\": 62022767,\n \"error\": \"cillum consequat\",\n \"exception\": \"dolor in adipisicing ullamco\",\n \"message\": \"dolore ut\",\n \"total_time_taken_in_millis\": -30014645,\n \"http_status\": \"413 REQUEST_ENTITY_TOO_LARGE\",\n \"items\": {\n  \"company_id\": -45967688,\n  \"integration_data\": {},\n  \"company_name\": \"do el\",\n  \"task_details\": {\n   \"type\": 20329609,\n   \"group_list\": [\n    {\n     \"text\": \"cillum ut ex nulla non\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"culpa velit sed aliquip exercitation\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 69109152.80737466,\n   \"safe_stock\": -78122728,\n   \"period_threshold\": 66807129,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"Duis\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ut elit cupidatat\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"velit ad ipsum\",\n  \"alias\": \"ut sunt commodo Duis\"\n },\n \"payload\": {\n  \"company_id\": -19777768,\n  \"integration_data\": {},\n  \"company_name\": \"fugiat\",\n  \"task_details\": {\n   \"type\": 10004133,\n   \"group_list\": [\n    {\n     \"text\": \"minim\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"exercitation aute dolore sunt id\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -74598769.20272581,\n   \"safe_stock\": -29945606,\n   \"period_threshold\": -55449823,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"dolor sed irure dolor\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"Duis\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"voluptate eu\",\n  \"alias\": \"cupidatat dol\"\n },\n \"trace_id\": \"ad exercitation\",\n \"page\": {\n  \"type\": \"eiusmod\",\n  \"size\": -17662535,\n  \"current\": 63568456,\n  \"has_next\": false,\n  \"item_total\": 36701485,\n  \"next_id\": \"sint aliqua\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5681c19c-1518-4b5a-aee7-86692b1a1d37",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2012-07-24T15:10:54.478Z\",\n \"status\": 62022767,\n \"error\": \"cillum consequat\",\n \"exception\": \"dolor in adipisicing ullamco\",\n \"message\": \"dolore ut\",\n \"total_time_taken_in_millis\": -30014645,\n \"http_status\": \"413 REQUEST_ENTITY_TOO_LARGE\",\n \"items\": {\n  \"company_id\": -45967688,\n  \"integration_data\": {},\n  \"company_name\": \"do el\",\n  \"task_details\": {\n   \"type\": 20329609,\n   \"group_list\": [\n    {\n     \"text\": \"cillum ut ex nulla non\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"culpa velit sed aliquip exercitation\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 69109152.80737466,\n   \"safe_stock\": -78122728,\n   \"period_threshold\": 66807129,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"Duis\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ut elit cupidatat\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"velit ad ipsum\",\n  \"alias\": \"ut sunt commodo Duis\"\n },\n \"payload\": {\n  \"company_id\": -19777768,\n  \"integration_data\": {},\n  \"company_name\": \"fugiat\",\n  \"task_details\": {\n   \"type\": 10004133,\n   \"group_list\": [\n    {\n     \"text\": \"minim\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"exercitation aute dolore sunt id\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -74598769.20272581,\n   \"safe_stock\": -29945606,\n   \"period_threshold\": -55449823,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"dolor sed irure dolor\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"Duis\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"voluptate eu\",\n  \"alias\": \"cupidatat dol\"\n },\n \"trace_id\": \"ad exercitation\",\n \"page\": {\n  \"type\": \"eiusmod\",\n  \"size\": -17662535,\n  \"current\": 63568456,\n  \"has_next\": false,\n  \"item_total\": 36701485,\n  \"next_id\": \"sint aliqua\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "95d92985-df13-49f1-b374-02e5f7327863",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2012-07-24T15:10:54.478Z\",\n \"status\": 62022767,\n \"error\": \"cillum consequat\",\n \"exception\": \"dolor in adipisicing ullamco\",\n \"message\": \"dolore ut\",\n \"total_time_taken_in_millis\": -30014645,\n \"http_status\": \"413 REQUEST_ENTITY_TOO_LARGE\",\n \"items\": {\n  \"company_id\": -45967688,\n  \"integration_data\": {},\n  \"company_name\": \"do el\",\n  \"task_details\": {\n   \"type\": 20329609,\n   \"group_list\": [\n    {\n     \"text\": \"cillum ut ex nulla non\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"culpa velit sed aliquip exercitation\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 69109152.80737466,\n   \"safe_stock\": -78122728,\n   \"period_threshold\": 66807129,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"Duis\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ut elit cupidatat\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"velit ad ipsum\",\n  \"alias\": \"ut sunt commodo Duis\"\n },\n \"payload\": {\n  \"company_id\": -19777768,\n  \"integration_data\": {},\n  \"company_name\": \"fugiat\",\n  \"task_details\": {\n   \"type\": 10004133,\n   \"group_list\": [\n    {\n     \"text\": \"minim\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"exercitation aute dolore sunt id\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -74598769.20272581,\n   \"safe_stock\": -29945606,\n   \"period_threshold\": -55449823,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"dolor sed irure dolor\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"Duis\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"voluptate eu\",\n  \"alias\": \"cupidatat dol\"\n },\n \"trace_id\": \"ad exercitation\",\n \"page\": {\n  \"type\": \"eiusmod\",\n  \"size\": -17662535,\n  \"current\": 63568456,\n  \"has_next\": false,\n  \"item_total\": 36701485,\n  \"next_id\": \"sint aliqua\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "1f779b05-b544-4b37-b60e-cb35e578f222",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "bbdd2ec5-5934-4f75-bb3d-432ffdbdb662",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1960-01-29T10:49:28.541Z\",\n \"status\": -95262102,\n \"error\": \"aliquip elit amet deserunt l\",\n \"exception\": \"aliqua non et\",\n \"message\": \"magna ess\",\n \"total_time_taken_in_millis\": 30446015,\n \"http_status\": \"409 CONFLICT\",\n \"items\": [\n  {\n   \"company_id\": -85839767,\n   \"integration_data\": {},\n   \"company_name\": \"reprehenderit Lorem dolore\",\n   \"task_details\": {\n    \"type\": -44226691,\n    \"group_list\": [\n     {\n      \"text\": \"magna in labore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor dolore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 75826005.21960029,\n    \"safe_stock\": 81205177,\n    \"period_threshold\": -13752551,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"exercitation e\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"pariatur dolor Ut ex esse\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sed culpa minim\",\n   \"alias\": \"dolor est\"\n  },\n  {\n   \"company_id\": -6586326,\n   \"integration_data\": {},\n   \"company_name\": \"nostrud ex in minim magna\",\n   \"task_details\": {\n    \"type\": -31414874,\n    \"group_list\": [\n     {\n      \"text\": \"aliquip sed\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in dolor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -50882867.884492055,\n    \"safe_stock\": -72490937,\n    \"period_threshold\": 1715985,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"commodo incididunt qui ipsum dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nulla laboris nisi occaecat non\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"consequat qui\",\n   \"alias\": \"enim do ut et\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 37072000,\n   \"integration_data\": {},\n   \"company_name\": \"sit non sunt enim proident\",\n   \"task_details\": {\n    \"type\": -3974162,\n    \"group_list\": [\n     {\n      \"text\": \"ad incididunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliqua\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -71879787.9081194,\n    \"safe_stock\": 94706862,\n    \"period_threshold\": 97476721,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ipsum est ad\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"culpa sunt magna minim in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"dolore \",\n   \"alias\": \"nisi voluptate aliquip ullamco\"\n  },\n  {\n   \"company_id\": -79493147,\n   \"integration_data\": {},\n   \"company_name\": \"Duis eu id consequat labore\",\n   \"task_details\": {\n    \"type\": 3886265,\n    \"group_list\": [\n     {\n      \"text\": \"dolor aliquip Excepteur sunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consequat fugiat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -53001469.710033745,\n    \"safe_stock\": -12489671,\n    \"period_threshold\": -44110077,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"amet velit aliqua\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut elit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"labore minim exercitation et\",\n   \"alias\": \"incididunt sed quis\"\n  }\n ],\n \"trace_id\": \"aute\",\n \"page\": {\n  \"type\": \"eiusmod in nostrud est dolore\",\n  \"size\": 53888007,\n  \"current\": 86780457,\n  \"has_next\": true,\n  \"item_total\": -17730728,\n  \"next_id\": \"consectetur do qui elit\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "0fb0e0cc-4542-49d8-91d9-08e9a733d792",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2006-03-13T07:03:51.170Z\",\n \"status\": -78719357,\n \"error\": \"exercitation sed\",\n \"exception\": \"sed no\",\n \"message\": \"ex exercitation esse velit\",\n \"total_time_taken_in_millis\": -86070461,\n \"http_status\": \"201 CREATED\",\n \"items\": [\n  {\n   \"company_id\": -78331678,\n   \"integration_data\": {},\n   \"company_name\": \"nostrud cillum ipsum volupta\",\n   \"task_details\": {\n    \"type\": 42824723,\n    \"group_list\": [\n     {\n      \"text\": \"id quis enim proident\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor irure\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 90177786.72522306,\n    \"safe_stock\": -43665744,\n    \"period_threshold\": -38413330,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"laboris\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliqua sit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"laboris id cillum nulla\",\n   \"alias\": \"sed\"\n  },\n  {\n   \"company_id\": -68654356,\n   \"integration_data\": {},\n   \"company_name\": \"laborum dolor officia\",\n   \"task_details\": {\n    \"type\": -80292818,\n    \"group_list\": [\n     {\n      \"text\": \"sit ipsum velit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore eiusmod\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -93310095.14971353,\n    \"safe_stock\": -70889235,\n    \"period_threshold\": -6535331,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"in amet\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laboris nostrud ea nisi\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in proident\",\n   \"alias\": \"dolor aliquip Excepteur\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -12602739,\n   \"integration_data\": {},\n   \"company_name\": \"incididunt est ut reprehenderit\",\n   \"task_details\": {\n    \"type\": -83449987,\n    \"group_list\": [\n     {\n      \"text\": \"Ut reprehenderit irure veniam dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consectetur cupidatat qui adipisicing\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 35107141.89855847,\n    \"safe_stock\": -66742452,\n    \"period_threshold\": -50843719,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"in sit minim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"deserunt veniam aute\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"culpa officia\",\n   \"alias\": \"sint enim\"\n  },\n  {\n   \"company_id\": -23276204,\n   \"integration_data\": {},\n   \"company_name\": \"et tempor\",\n   \"task_details\": {\n    \"type\": -70587612,\n    \"group_list\": [\n     {\n      \"text\": \"veniam tempor dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"id ea do\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -47236564.18319191,\n    \"safe_stock\": -1574673,\n    \"period_threshold\": 65821529,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"laboris occaecat sint reprehenderit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sunt voluptate aliqua ipsum in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"id enim\",\n   \"alias\": \"culpa ut reprehenderit occaecat\"\n  }\n ],\n \"trace_id\": \"elit proident dolor\",\n \"page\": {\n  \"type\": \"Lorem ut pariatur eu\",\n  \"size\": -66421590,\n  \"current\": 67407407,\n  \"has_next\": false,\n  \"item_total\": -74669301,\n  \"next_id\": \"commodo reprehenderit\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "efaecbb2-30bb-4081-9d60-24b04272101f",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2006-03-13T07:03:51.170Z\",\n \"status\": -78719357,\n \"error\": \"exercitation sed\",\n \"exception\": \"sed no\",\n \"message\": \"ex exercitation esse velit\",\n \"total_time_taken_in_millis\": -86070461,\n \"http_status\": \"201 CREATED\",\n \"items\": [\n  {\n   \"company_id\": -78331678,\n   \"integration_data\": {},\n   \"company_name\": \"nostrud cillum ipsum volupta\",\n   \"task_details\": {\n    \"type\": 42824723,\n    \"group_list\": [\n     {\n      \"text\": \"id quis enim proident\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor irure\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 90177786.72522306,\n    \"safe_stock\": -43665744,\n    \"period_threshold\": -38413330,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"laboris\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliqua sit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"laboris id cillum nulla\",\n   \"alias\": \"sed\"\n  },\n  {\n   \"company_id\": -68654356,\n   \"integration_data\": {},\n   \"company_name\": \"laborum dolor officia\",\n   \"task_details\": {\n    \"type\": -80292818,\n    \"group_list\": [\n     {\n      \"text\": \"sit ipsum velit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore eiusmod\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -93310095.14971353,\n    \"safe_stock\": -70889235,\n    \"period_threshold\": -6535331,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"in amet\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laboris nostrud ea nisi\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in proident\",\n   \"alias\": \"dolor aliquip Excepteur\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -12602739,\n   \"integration_data\": {},\n   \"company_name\": \"incididunt est ut reprehenderit\",\n   \"task_details\": {\n    \"type\": -83449987,\n    \"group_list\": [\n     {\n      \"text\": \"Ut reprehenderit irure veniam dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consectetur cupidatat qui adipisicing\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 35107141.89855847,\n    \"safe_stock\": -66742452,\n    \"period_threshold\": -50843719,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"in sit minim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"deserunt veniam aute\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"culpa officia\",\n   \"alias\": \"sint enim\"\n  },\n  {\n   \"company_id\": -23276204,\n   \"integration_data\": {},\n   \"company_name\": \"et tempor\",\n   \"task_details\": {\n    \"type\": -70587612,\n    \"group_list\": [\n     {\n      \"text\": \"veniam tempor dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"id ea do\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -47236564.18319191,\n    \"safe_stock\": -1574673,\n    \"period_threshold\": 65821529,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"laboris occaecat sint reprehenderit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sunt voluptate aliqua ipsum in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"id enim\",\n   \"alias\": \"culpa ut reprehenderit occaecat\"\n  }\n ],\n \"trace_id\": \"elit proident dolor\",\n \"page\": {\n  \"type\": \"Lorem ut pariatur eu\",\n  \"size\": -66421590,\n  \"current\": 67407407,\n  \"has_next\": false,\n  \"item_total\": -74669301,\n  \"next_id\": \"commodo reprehenderit\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "42d10c89-31a6-4900-bb6b-6b8b7235d63d",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "f050b77c-14c9-482d-9683-7dff6a61e4fe",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1956-12-30T00:11:11.679Z\",\n \"status\": 85686483,\n \"error\": \"dolore v\",\n \"exception\": \"elit anim\",\n \"message\": \"enim veniam ut culpa\",\n \"total_time_taken_in_millis\": -49199355,\n \"http_status\": \"420 METHOD_FAILURE\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"laborum nostrud aute\",\n \"page\": {\n  \"type\": \"aliquip eiusmod dolore sint nostrud\",\n  \"size\": 86136039,\n  \"current\": -23972388,\n  \"has_next\": false,\n  \"item_total\": 29004693,\n  \"next_id\": \"fugiat \",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "03fe0ae6-98de-4010-8ed4-9737025dd1b3",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1956-12-30T00:11:11.679Z\",\n \"status\": 85686483,\n \"error\": \"dolore v\",\n \"exception\": \"elit anim\",\n \"message\": \"enim veniam ut culpa\",\n \"total_time_taken_in_millis\": -49199355,\n \"http_status\": \"420 METHOD_FAILURE\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"laborum nostrud aute\",\n \"page\": {\n  \"type\": \"aliquip eiusmod dolore sint nostrud\",\n  \"size\": 86136039,\n  \"current\": -23972388,\n  \"has_next\": false,\n  \"item_total\": 29004693,\n  \"next_id\": \"fugiat \",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e69dbf87-4e4e-40c2-afd1-77ef2da23c32",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1956-12-30T00:11:11.679Z\",\n \"status\": 85686483,\n \"error\": \"dolore v\",\n \"exception\": \"elit anim\",\n \"message\": \"enim veniam ut culpa\",\n \"total_time_taken_in_millis\": -49199355,\n \"http_status\": \"420 METHOD_FAILURE\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"laborum nostrud aute\",\n \"page\": {\n  \"type\": \"aliquip eiusmod dolore sint nostrud\",\n  \"size\": 86136039,\n  \"current\": -23972388,\n  \"has_next\": false,\n  \"item_total\": 29004693,\n  \"next_id\": \"fugiat \",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "89990a6c-8778-479d-af03-7ed6258b71e4",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "8b86681e-5e2a-43ec-a260-7de796dce490",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1949-07-07T01:12:17.264Z\",\n \"status\": 44139740,\n \"error\": \"tempor enim non occaecat\",\n \"exception\": \"amet voluptate Excepteur ullamco\",\n \"message\": \"exercitation enim\",\n \"total_time_taken_in_millis\": -76487723,\n \"http_status\": \"100 CONTINUE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"dolor mollit\",\n \"page\": {\n  \"type\": \"dolor magna\",\n  \"size\": -91447588,\n  \"current\": -3387240,\n  \"has_next\": true,\n  \"item_total\": 52616200,\n  \"next_id\": \"minim dolore anim sunt officia\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "4e1959b4-0ec2-47c7-8baa-3ff457b17920",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1949-07-07T01:12:17.264Z\",\n \"status\": 44139740,\n \"error\": \"tempor enim non occaecat\",\n \"exception\": \"amet voluptate Excepteur ullamco\",\n \"message\": \"exercitation enim\",\n \"total_time_taken_in_millis\": -76487723,\n \"http_status\": \"100 CONTINUE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"dolor mollit\",\n \"page\": {\n  \"type\": \"dolor magna\",\n  \"size\": -91447588,\n  \"current\": -3387240,\n  \"has_next\": true,\n  \"item_total\": 52616200,\n  \"next_id\": \"minim dolore anim sunt officia\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "7d1a596b-f4d8-4fec-ab93-3d6d3e854ae9",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1949-07-07T01:12:17.264Z\",\n \"status\": 44139740,\n \"error\": \"tempor enim non occaecat\",\n \"exception\": \"amet voluptate Excepteur ullamco\",\n \"message\": \"exercitation enim\",\n \"total_time_taken_in_millis\": -76487723,\n \"http_status\": \"100 CONTINUE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"dolor mollit\",\n \"page\": {\n  \"type\": \"dolor magna\",\n  \"size\": -91447588,\n  \"current\": -3387240,\n  \"has_next\": true,\n  \"item_total\": 52616200,\n  \"next_id\": \"minim dolore anim sunt officia\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "db35e2e8-cc1a-4117-90d0-63e33be0cffc",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1949-07-07T01:12:17.264Z\",\n \"status\": 44139740,\n \"error\": \"tempor enim non occaecat\",\n \"exception\": \"amet voluptate Excepteur ullamco\",\n \"message\": \"exercitation enim\",\n \"total_time_taken_in_millis\": -76487723,\n \"http_status\": \"100 CONTINUE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"dolor mollit\",\n \"page\": {\n  \"type\": \"dolor magna\",\n  \"size\": -91447588,\n  \"current\": -3387240,\n  \"has_next\": true,\n  \"item_total\": 52616200,\n  \"next_id\": \"minim dolore anim sunt officia\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9bde5da4-f8be-4201-8901-6a70d41827cf",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1949-07-07T01:12:17.264Z\",\n \"status\": 44139740,\n \"error\": \"tempor enim non occaecat\",\n \"exception\": \"amet voluptate Excepteur ullamco\",\n \"message\": \"exercitation enim\",\n \"total_time_taken_in_millis\": -76487723,\n \"http_status\": \"100 CONTINUE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"dolor mollit\",\n \"page\": {\n  \"type\": \"dolor magna\",\n  \"size\": -91447588,\n  \"current\": -3387240,\n  \"has_next\": true,\n  \"item_total\": 52616200,\n  \"next_id\": \"minim dolore anim sunt officia\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.jiox0.de"
    }
  ],
  "info": {
    "_postman_id": "1e4519d7-065f-4eaa-8ffd-e01a0ae568d5",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
