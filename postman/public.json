{
  "item": [
    {
      "id": "33b046d6-bc4d-489c-9510-5ed8794a0d68",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "d0a8a4d0-aeca-4099-83a5-bcebc3f42324",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "62e64849-c8d5-4dc5-a573-cadece281c9c",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "sed cupidatat Duis sunt minim",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ad421662-2730-4679-aeae-9905228d7b5e",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "sed cupidatat Duis sunt minim",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "c15871ed-6e72-46a2-bb27-4f3fba94c5ea",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "sed cupidatat Duis sunt minim",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "d44e0421-fae4-4fce-b2d0-a7d7b9d9839f",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "85b55ed3-b42c-4dc8-a34c-3c8a375217bb",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "b35ccdfb-6825-4402-9e2c-9fbf6def7fcf",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "f9635f60-cc2f-4575-bb2c-a4ee5b30bff4",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "be964dac-71f6-4595-b854-983eb9a96b2f",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 53487276,\n   \"event_name\": \"qui ex\",\n   \"event_type\": \"Ut\",\n   \"event_category\": \"ipsum et\",\n   \"version\": \"incidi\",\n   \"display_name\": \"sint\",\n   \"description\": \"esse sint incididunt\",\n   \"created_on\": \"officia esse sint\"\n  },\n  {\n   \"id\": -42252822,\n   \"event_name\": \"laboris nulla anim\",\n   \"event_type\": \"mollit occaecat labore elit\",\n   \"event_category\": \"elit magna\",\n   \"version\": \"dolore sed\",\n   \"display_name\": \"fugiat i\",\n   \"description\": \"ut\",\n   \"created_on\": \"dolore qui\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "33980804-b7a4-4b0b-b9d0-3010a5e1f49e",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "488aebb3-5558-4f42-a19f-524300b6f1c9",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -26930857,\n   \"event_name\": \"nostrud id\",\n   \"event_type\": \"veniam aute ex\",\n   \"event_category\": \"fugiat cupidatat do ipsum\",\n   \"version\": \"esse velit\",\n   \"display_name\": \"pariatur laborum\",\n   \"description\": \"dolor reprehenderit minim Excepteur u\",\n   \"created_on\": \"Excepteur do id culpa in\"\n  },\n  {\n   \"id\": -93764322,\n   \"event_name\": \"ipsum proident\",\n   \"event_type\": \"consectetur veniam voluptate\",\n   \"event_category\": \"veniam labore Duis\",\n   \"version\": \"labore tempor\",\n   \"display_name\": \"mollit cupidatat anim id enim\",\n   \"description\": \"in cupidatat\",\n   \"created_on\": \"ut labore ipsum incididunt\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "79a42c9f-782b-48d2-9536-163253c99ca1",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "f1f0a257-cb5b-43e4-b6a0-3c7420f99e77",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "1a87f7dd-0c29-4611-9d10-b672fd53e432",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1994-02-08T18:46:21.100Z\",\n \"status\": 23539135,\n \"error\": \"nisi\",\n \"exception\": \"ad\",\n \"message\": \"ea ad mollit\",\n \"total_time_taken_in_millis\": -44642351,\n \"http_status\": \"508 LOOP_DETECTED\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"Lorem mollit\",\n   \"description\": \"sit deserunt quis ut nisi\",\n   \"name\": \"laboris deserunt ut eu\",\n   \"slug\": \"consectetur dolore exercitation\",\n   \"meta\": [\n    {\n     \"_id\": \"nisi proident nulla nostrud\",\n     \"name\": \"sunt\",\n     \"value\": \"adipisicing Duis\"\n    },\n    {\n     \"_id\": \"sunt qui\",\n     \"name\": \"cupidatat dolor\",\n     \"value\": \"id ullamco qui exercitation ut\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"est reprehenderit non cupidatat dolor\",\n    \"integration\": \"est mollit Excepteur nisi\",\n    \"level\": \"dolor incididunt\",\n    \"uid\": 91783646,\n    \"opted\": false,\n    \"permissions\": [\n     \"incididunt voluptate velit\",\n     \"elit nostrud id\"\n    ],\n    \"token\": \"consequat dolor ullamco\",\n    \"name\": \"do consectetur officia nisi\",\n    \"stores\": [\n     {\n      \"_id\": \"elit Exce\",\n      \"integration\": \"quis do veniam con\",\n      \"level\": \"dolore esse nulla ut\",\n      \"uid\": -14666188,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ipsum dolor\",\n      \"code\": \"proident nulla\",\n      \"name\": \"adipisicing\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"id ullamco commodo tempor\",\n      \"integration\": \"ullamco sint ut voluptate\",\n      \"level\": \"cupidatat Ut\",\n      \"uid\": -3578166,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolor nisi cillum deserunt\",\n      \"code\": \"in ad consectetur nostrud\",\n      \"name\": \"commodo nisi\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"eiusmod dolore minim sit\",\n      \"integration\": \"reprehenderit in sunt\",\n      \"level\": \"sit in\",\n      \"uid\": 54959612,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Lorem esse reprehenderi\",\n      \"code\": \"quis\",\n      \"name\": \"est veniam tempor\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"ut in in minim reprehenderit\",\n      \"integration\": \"nisi ea exercitation pariatur\",\n      \"level\": \"adipisicing sunt\",\n      \"uid\": 24292204,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sit mollit in\",\n      \"code\": \"magna\",\n      \"name\": \"dolore Ut non \",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"nostrud su\",\n    \"integration\": \"et proident\",\n    \"level\": \"dolore ex\",\n    \"uid\": -15947145,\n    \"opted\": false,\n    \"permissions\": [\n     \"occaecat elit consectetur\",\n     \"non voluptate\"\n    ],\n    \"token\": \"sint\",\n    \"name\": \"pariatur eu incididunt\",\n    \"stores\": [\n     {\n      \"_id\": \"in sunt\",\n      \"integration\": \"laboris velit incididunt\",\n      \"level\": \"voluptate aliqua\",\n      \"uid\": -84364031,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"magna enim id nulla\",\n      \"code\": \"eu in eiusmod\",\n      \"name\": \"fugiat sit\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"cillum est\",\n      \"integration\": \"non esse nostrud laboris et\",\n      \"level\": \"sunt Ut in veniam\",\n      \"uid\": -24597465,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"veniam ullamco laboris pariatur laborum\",\n      \"code\": \"ex in\",\n      \"name\": \"nostrud\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"enim dolore\",\n      \"integration\": \"consectetur sint\",\n      \"level\": \"ad anim elit ullamco nul\",\n      \"uid\": 98691661,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"culpa fugiat\",\n      \"code\": \"reprehenderit eiusmod aliqua aute in\",\n      \"name\": \"esse\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"quis id minim\",\n      \"integration\": \"eu dolor velit\",\n      \"level\": \"aute quis aliqua in\",\n      \"uid\": 44198200,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"fugiat tempor ex\",\n      \"code\": \"exercitation\",\n      \"name\": \"in deserunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"consectetur ex aute laborum ut\",\n   \"description\": \"incididunt ut\",\n   \"name\": \"enim ipsum eiusmod ut\",\n   \"slug\": \"reprehenderit magna\",\n   \"meta\": [\n    {\n     \"_id\": \"in dolore\",\n     \"name\": \"dolor irure voluptate consequat deserunt\",\n     \"value\": \"sed Duis velit sit\"\n    },\n    {\n     \"_id\": \"sit voluptate exercitation\",\n     \"name\": \"occaecat cupidatat sint Excepteur\",\n     \"value\": \"irure consectetur\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"sint Lorem dolore\",\n    \"integration\": \"cillum\",\n    \"level\": \"anim minim nostrud\",\n    \"uid\": 72425786,\n    \"opted\": false,\n    \"permissions\": [\n     \"exercitation enim\",\n     \"ex sed esse adipisicing\"\n    ],\n    \"token\": \"ipsum\",\n    \"name\": \"exercitation cillum consequat eiusmod esse\",\n    \"stores\": [\n     {\n      \"_id\": \"aliquip exercitation\",\n      \"integration\": \"officia est\",\n      \"level\": \"magna sed nulla dol\",\n      \"uid\": 98829399,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ullamco sint deserunt sit tem\",\n      \"code\": \"aute\",\n      \"name\": \"fugiat \",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"ipsum et\",\n      \"integration\": \"et aliquip\",\n      \"level\": \"tempor et\",\n      \"uid\": -6734444,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"tempor officia ex dolo\",\n      \"code\": \"in consequat elit ut dolore\",\n      \"name\": \"culpa sed et ut\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"eu ex mollit\",\n      \"integration\": \"deserunt irure id\",\n      \"level\": \"enim ut irure\",\n      \"uid\": -69032340,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"commodo ut in\",\n      \"code\": \"irure anim dolore ut sunt\",\n      \"name\": \"irure amet exercitation\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"incididunt ipsum mollit in\",\n      \"integration\": \"elit et\",\n      \"level\": \"est cupidatat Duis fugiat ea\",\n      \"uid\": -59319348,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ex\",\n      \"code\": \"ut ipsum qui\",\n      \"name\": \"quis dolor eiusmod do labore\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"et ut dolor dolor\",\n    \"integration\": \"sint consequat do\",\n    \"level\": \"Lorem incididunt ipsum quis\",\n    \"uid\": -12106712,\n    \"opted\": true,\n    \"permissions\": [\n     \"Ut reprehenderit nulla\",\n     \"Lorem ea ullamco\"\n    ],\n    \"token\": \"est laborum\",\n    \"name\": \"ea sunt incididunt aliquip sit\",\n    \"stores\": [\n     {\n      \"_id\": \"eiu\",\n      \"integration\": \"aliquip qui Excepteur\",\n      \"level\": \"sit laboris ipsum reprehenderit\",\n      \"uid\": -25614430,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"tempor pariatur\",\n      \"code\": \"magna minim proident\",\n      \"name\": \"proident minim Lorem nostrud\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"dolor quis Duis\",\n      \"integration\": \"amet sit ut\",\n      \"level\": \"do ut\",\n      \"uid\": 50819112,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolor cillum pariatur occaecat\",\n      \"code\": \"fugiat aute\",\n      \"name\": \"Ut qui\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"esse ex elit Lorem\",\n      \"integration\": \"qui elit aute laboris ad\",\n      \"level\": \"ad tempor commodo\",\n      \"uid\": -79953681,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"voluptate veniam\",\n      \"code\": \"dolor sunt enim\",\n      \"name\": \"elit ipsum reprehenderit eu sed\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"voluptate officia qui\",\n      \"integration\": \"ut sint\",\n      \"level\": \"Lorem dolore sed\",\n      \"uid\": -29441747,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"reprehenderit ut id\",\n      \"code\": \"sed cillum consectetur\",\n      \"name\": \"adipisicing ullamco eu nostrud\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"velit proident commodo adipi\",\n \"page\": {\n  \"type\": \"dolor laboris enim Lorem\",\n  \"size\": -82554107,\n  \"current\": 13021479,\n  \"has_next\": false,\n  \"item_total\": 42634223,\n  \"next_id\": \"eu qui eiusmod\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a280d72e-d24d-47c5-95c9-0fcac976d370",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1994-02-08T18:46:21.100Z\",\n \"status\": 23539135,\n \"error\": \"nisi\",\n \"exception\": \"ad\",\n \"message\": \"ea ad mollit\",\n \"total_time_taken_in_millis\": -44642351,\n \"http_status\": \"508 LOOP_DETECTED\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"Lorem mollit\",\n   \"description\": \"sit deserunt quis ut nisi\",\n   \"name\": \"laboris deserunt ut eu\",\n   \"slug\": \"consectetur dolore exercitation\",\n   \"meta\": [\n    {\n     \"_id\": \"nisi proident nulla nostrud\",\n     \"name\": \"sunt\",\n     \"value\": \"adipisicing Duis\"\n    },\n    {\n     \"_id\": \"sunt qui\",\n     \"name\": \"cupidatat dolor\",\n     \"value\": \"id ullamco qui exercitation ut\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"est reprehenderit non cupidatat dolor\",\n    \"integration\": \"est mollit Excepteur nisi\",\n    \"level\": \"dolor incididunt\",\n    \"uid\": 91783646,\n    \"opted\": false,\n    \"permissions\": [\n     \"incididunt voluptate velit\",\n     \"elit nostrud id\"\n    ],\n    \"token\": \"consequat dolor ullamco\",\n    \"name\": \"do consectetur officia nisi\",\n    \"stores\": [\n     {\n      \"_id\": \"elit Exce\",\n      \"integration\": \"quis do veniam con\",\n      \"level\": \"dolore esse nulla ut\",\n      \"uid\": -14666188,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ipsum dolor\",\n      \"code\": \"proident nulla\",\n      \"name\": \"adipisicing\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"id ullamco commodo tempor\",\n      \"integration\": \"ullamco sint ut voluptate\",\n      \"level\": \"cupidatat Ut\",\n      \"uid\": -3578166,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolor nisi cillum deserunt\",\n      \"code\": \"in ad consectetur nostrud\",\n      \"name\": \"commodo nisi\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"eiusmod dolore minim sit\",\n      \"integration\": \"reprehenderit in sunt\",\n      \"level\": \"sit in\",\n      \"uid\": 54959612,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Lorem esse reprehenderi\",\n      \"code\": \"quis\",\n      \"name\": \"est veniam tempor\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"ut in in minim reprehenderit\",\n      \"integration\": \"nisi ea exercitation pariatur\",\n      \"level\": \"adipisicing sunt\",\n      \"uid\": 24292204,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sit mollit in\",\n      \"code\": \"magna\",\n      \"name\": \"dolore Ut non \",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"nostrud su\",\n    \"integration\": \"et proident\",\n    \"level\": \"dolore ex\",\n    \"uid\": -15947145,\n    \"opted\": false,\n    \"permissions\": [\n     \"occaecat elit consectetur\",\n     \"non voluptate\"\n    ],\n    \"token\": \"sint\",\n    \"name\": \"pariatur eu incididunt\",\n    \"stores\": [\n     {\n      \"_id\": \"in sunt\",\n      \"integration\": \"laboris velit incididunt\",\n      \"level\": \"voluptate aliqua\",\n      \"uid\": -84364031,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"magna enim id nulla\",\n      \"code\": \"eu in eiusmod\",\n      \"name\": \"fugiat sit\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"cillum est\",\n      \"integration\": \"non esse nostrud laboris et\",\n      \"level\": \"sunt Ut in veniam\",\n      \"uid\": -24597465,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"veniam ullamco laboris pariatur laborum\",\n      \"code\": \"ex in\",\n      \"name\": \"nostrud\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"enim dolore\",\n      \"integration\": \"consectetur sint\",\n      \"level\": \"ad anim elit ullamco nul\",\n      \"uid\": 98691661,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"culpa fugiat\",\n      \"code\": \"reprehenderit eiusmod aliqua aute in\",\n      \"name\": \"esse\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"quis id minim\",\n      \"integration\": \"eu dolor velit\",\n      \"level\": \"aute quis aliqua in\",\n      \"uid\": 44198200,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"fugiat tempor ex\",\n      \"code\": \"exercitation\",\n      \"name\": \"in deserunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"consectetur ex aute laborum ut\",\n   \"description\": \"incididunt ut\",\n   \"name\": \"enim ipsum eiusmod ut\",\n   \"slug\": \"reprehenderit magna\",\n   \"meta\": [\n    {\n     \"_id\": \"in dolore\",\n     \"name\": \"dolor irure voluptate consequat deserunt\",\n     \"value\": \"sed Duis velit sit\"\n    },\n    {\n     \"_id\": \"sit voluptate exercitation\",\n     \"name\": \"occaecat cupidatat sint Excepteur\",\n     \"value\": \"irure consectetur\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"sint Lorem dolore\",\n    \"integration\": \"cillum\",\n    \"level\": \"anim minim nostrud\",\n    \"uid\": 72425786,\n    \"opted\": false,\n    \"permissions\": [\n     \"exercitation enim\",\n     \"ex sed esse adipisicing\"\n    ],\n    \"token\": \"ipsum\",\n    \"name\": \"exercitation cillum consequat eiusmod esse\",\n    \"stores\": [\n     {\n      \"_id\": \"aliquip exercitation\",\n      \"integration\": \"officia est\",\n      \"level\": \"magna sed nulla dol\",\n      \"uid\": 98829399,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ullamco sint deserunt sit tem\",\n      \"code\": \"aute\",\n      \"name\": \"fugiat \",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"ipsum et\",\n      \"integration\": \"et aliquip\",\n      \"level\": \"tempor et\",\n      \"uid\": -6734444,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"tempor officia ex dolo\",\n      \"code\": \"in consequat elit ut dolore\",\n      \"name\": \"culpa sed et ut\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"eu ex mollit\",\n      \"integration\": \"deserunt irure id\",\n      \"level\": \"enim ut irure\",\n      \"uid\": -69032340,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"commodo ut in\",\n      \"code\": \"irure anim dolore ut sunt\",\n      \"name\": \"irure amet exercitation\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"incididunt ipsum mollit in\",\n      \"integration\": \"elit et\",\n      \"level\": \"est cupidatat Duis fugiat ea\",\n      \"uid\": -59319348,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ex\",\n      \"code\": \"ut ipsum qui\",\n      \"name\": \"quis dolor eiusmod do labore\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"et ut dolor dolor\",\n    \"integration\": \"sint consequat do\",\n    \"level\": \"Lorem incididunt ipsum quis\",\n    \"uid\": -12106712,\n    \"opted\": true,\n    \"permissions\": [\n     \"Ut reprehenderit nulla\",\n     \"Lorem ea ullamco\"\n    ],\n    \"token\": \"est laborum\",\n    \"name\": \"ea sunt incididunt aliquip sit\",\n    \"stores\": [\n     {\n      \"_id\": \"eiu\",\n      \"integration\": \"aliquip qui Excepteur\",\n      \"level\": \"sit laboris ipsum reprehenderit\",\n      \"uid\": -25614430,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"tempor pariatur\",\n      \"code\": \"magna minim proident\",\n      \"name\": \"proident minim Lorem nostrud\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"dolor quis Duis\",\n      \"integration\": \"amet sit ut\",\n      \"level\": \"do ut\",\n      \"uid\": 50819112,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolor cillum pariatur occaecat\",\n      \"code\": \"fugiat aute\",\n      \"name\": \"Ut qui\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"esse ex elit Lorem\",\n      \"integration\": \"qui elit aute laboris ad\",\n      \"level\": \"ad tempor commodo\",\n      \"uid\": -79953681,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"voluptate veniam\",\n      \"code\": \"dolor sunt enim\",\n      \"name\": \"elit ipsum reprehenderit eu sed\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"voluptate officia qui\",\n      \"integration\": \"ut sint\",\n      \"level\": \"Lorem dolore sed\",\n      \"uid\": -29441747,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"reprehenderit ut id\",\n      \"code\": \"sed cillum consectetur\",\n      \"name\": \"adipisicing ullamco eu nostrud\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"velit proident commodo adipi\",\n \"page\": {\n  \"type\": \"dolor laboris enim Lorem\",\n  \"size\": -82554107,\n  \"current\": 13021479,\n  \"has_next\": false,\n  \"item_total\": 42634223,\n  \"next_id\": \"eu qui eiusmod\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "6199d548-53cb-4d51-9c17-9ebb30ed09f3",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1994-02-08T18:46:21.100Z\",\n \"status\": 23539135,\n \"error\": \"nisi\",\n \"exception\": \"ad\",\n \"message\": \"ea ad mollit\",\n \"total_time_taken_in_millis\": -44642351,\n \"http_status\": \"508 LOOP_DETECTED\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"Lorem mollit\",\n   \"description\": \"sit deserunt quis ut nisi\",\n   \"name\": \"laboris deserunt ut eu\",\n   \"slug\": \"consectetur dolore exercitation\",\n   \"meta\": [\n    {\n     \"_id\": \"nisi proident nulla nostrud\",\n     \"name\": \"sunt\",\n     \"value\": \"adipisicing Duis\"\n    },\n    {\n     \"_id\": \"sunt qui\",\n     \"name\": \"cupidatat dolor\",\n     \"value\": \"id ullamco qui exercitation ut\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"est reprehenderit non cupidatat dolor\",\n    \"integration\": \"est mollit Excepteur nisi\",\n    \"level\": \"dolor incididunt\",\n    \"uid\": 91783646,\n    \"opted\": false,\n    \"permissions\": [\n     \"incididunt voluptate velit\",\n     \"elit nostrud id\"\n    ],\n    \"token\": \"consequat dolor ullamco\",\n    \"name\": \"do consectetur officia nisi\",\n    \"stores\": [\n     {\n      \"_id\": \"elit Exce\",\n      \"integration\": \"quis do veniam con\",\n      \"level\": \"dolore esse nulla ut\",\n      \"uid\": -14666188,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ipsum dolor\",\n      \"code\": \"proident nulla\",\n      \"name\": \"adipisicing\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"id ullamco commodo tempor\",\n      \"integration\": \"ullamco sint ut voluptate\",\n      \"level\": \"cupidatat Ut\",\n      \"uid\": -3578166,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolor nisi cillum deserunt\",\n      \"code\": \"in ad consectetur nostrud\",\n      \"name\": \"commodo nisi\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"eiusmod dolore minim sit\",\n      \"integration\": \"reprehenderit in sunt\",\n      \"level\": \"sit in\",\n      \"uid\": 54959612,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Lorem esse reprehenderi\",\n      \"code\": \"quis\",\n      \"name\": \"est veniam tempor\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"ut in in minim reprehenderit\",\n      \"integration\": \"nisi ea exercitation pariatur\",\n      \"level\": \"adipisicing sunt\",\n      \"uid\": 24292204,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sit mollit in\",\n      \"code\": \"magna\",\n      \"name\": \"dolore Ut non \",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"nostrud su\",\n    \"integration\": \"et proident\",\n    \"level\": \"dolore ex\",\n    \"uid\": -15947145,\n    \"opted\": false,\n    \"permissions\": [\n     \"occaecat elit consectetur\",\n     \"non voluptate\"\n    ],\n    \"token\": \"sint\",\n    \"name\": \"pariatur eu incididunt\",\n    \"stores\": [\n     {\n      \"_id\": \"in sunt\",\n      \"integration\": \"laboris velit incididunt\",\n      \"level\": \"voluptate aliqua\",\n      \"uid\": -84364031,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"magna enim id nulla\",\n      \"code\": \"eu in eiusmod\",\n      \"name\": \"fugiat sit\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"cillum est\",\n      \"integration\": \"non esse nostrud laboris et\",\n      \"level\": \"sunt Ut in veniam\",\n      \"uid\": -24597465,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"veniam ullamco laboris pariatur laborum\",\n      \"code\": \"ex in\",\n      \"name\": \"nostrud\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"enim dolore\",\n      \"integration\": \"consectetur sint\",\n      \"level\": \"ad anim elit ullamco nul\",\n      \"uid\": 98691661,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"culpa fugiat\",\n      \"code\": \"reprehenderit eiusmod aliqua aute in\",\n      \"name\": \"esse\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"quis id minim\",\n      \"integration\": \"eu dolor velit\",\n      \"level\": \"aute quis aliqua in\",\n      \"uid\": 44198200,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"fugiat tempor ex\",\n      \"code\": \"exercitation\",\n      \"name\": \"in deserunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"consectetur ex aute laborum ut\",\n   \"description\": \"incididunt ut\",\n   \"name\": \"enim ipsum eiusmod ut\",\n   \"slug\": \"reprehenderit magna\",\n   \"meta\": [\n    {\n     \"_id\": \"in dolore\",\n     \"name\": \"dolor irure voluptate consequat deserunt\",\n     \"value\": \"sed Duis velit sit\"\n    },\n    {\n     \"_id\": \"sit voluptate exercitation\",\n     \"name\": \"occaecat cupidatat sint Excepteur\",\n     \"value\": \"irure consectetur\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"sint Lorem dolore\",\n    \"integration\": \"cillum\",\n    \"level\": \"anim minim nostrud\",\n    \"uid\": 72425786,\n    \"opted\": false,\n    \"permissions\": [\n     \"exercitation enim\",\n     \"ex sed esse adipisicing\"\n    ],\n    \"token\": \"ipsum\",\n    \"name\": \"exercitation cillum consequat eiusmod esse\",\n    \"stores\": [\n     {\n      \"_id\": \"aliquip exercitation\",\n      \"integration\": \"officia est\",\n      \"level\": \"magna sed nulla dol\",\n      \"uid\": 98829399,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ullamco sint deserunt sit tem\",\n      \"code\": \"aute\",\n      \"name\": \"fugiat \",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"ipsum et\",\n      \"integration\": \"et aliquip\",\n      \"level\": \"tempor et\",\n      \"uid\": -6734444,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"tempor officia ex dolo\",\n      \"code\": \"in consequat elit ut dolore\",\n      \"name\": \"culpa sed et ut\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"eu ex mollit\",\n      \"integration\": \"deserunt irure id\",\n      \"level\": \"enim ut irure\",\n      \"uid\": -69032340,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"commodo ut in\",\n      \"code\": \"irure anim dolore ut sunt\",\n      \"name\": \"irure amet exercitation\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"incididunt ipsum mollit in\",\n      \"integration\": \"elit et\",\n      \"level\": \"est cupidatat Duis fugiat ea\",\n      \"uid\": -59319348,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ex\",\n      \"code\": \"ut ipsum qui\",\n      \"name\": \"quis dolor eiusmod do labore\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"et ut dolor dolor\",\n    \"integration\": \"sint consequat do\",\n    \"level\": \"Lorem incididunt ipsum quis\",\n    \"uid\": -12106712,\n    \"opted\": true,\n    \"permissions\": [\n     \"Ut reprehenderit nulla\",\n     \"Lorem ea ullamco\"\n    ],\n    \"token\": \"est laborum\",\n    \"name\": \"ea sunt incididunt aliquip sit\",\n    \"stores\": [\n     {\n      \"_id\": \"eiu\",\n      \"integration\": \"aliquip qui Excepteur\",\n      \"level\": \"sit laboris ipsum reprehenderit\",\n      \"uid\": -25614430,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"tempor pariatur\",\n      \"code\": \"magna minim proident\",\n      \"name\": \"proident minim Lorem nostrud\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"dolor quis Duis\",\n      \"integration\": \"amet sit ut\",\n      \"level\": \"do ut\",\n      \"uid\": 50819112,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolor cillum pariatur occaecat\",\n      \"code\": \"fugiat aute\",\n      \"name\": \"Ut qui\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"esse ex elit Lorem\",\n      \"integration\": \"qui elit aute laboris ad\",\n      \"level\": \"ad tempor commodo\",\n      \"uid\": -79953681,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"voluptate veniam\",\n      \"code\": \"dolor sunt enim\",\n      \"name\": \"elit ipsum reprehenderit eu sed\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"voluptate officia qui\",\n      \"integration\": \"ut sint\",\n      \"level\": \"Lorem dolore sed\",\n      \"uid\": -29441747,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"reprehenderit ut id\",\n      \"code\": \"sed cillum consectetur\",\n      \"name\": \"adipisicing ullamco eu nostrud\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"velit proident commodo adipi\",\n \"page\": {\n  \"type\": \"dolor laboris enim Lorem\",\n  \"size\": -82554107,\n  \"current\": 13021479,\n  \"has_next\": false,\n  \"item_total\": 42634223,\n  \"next_id\": \"eu qui eiusmod\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "45c4ebe9-7c25-4557-a524-26f3d83cb4a1",
          "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
          "request": {
            "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "d4981c42-1565-4292-83be-3367c099f016",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1995-11-03T16:43:48.786Z\",\n \"status\": 53570049,\n \"error\": \"reprehenderit sed tempor ut\",\n \"exception\": \"reprehenderit laborum\",\n \"message\": \"elit non in\",\n \"total_time_taken_in_millis\": -90201390,\n \"http_status\": \"419 INSUFFICIENT_SPACE_ON_RESOURCE\",\n \"items\": {\n  \"session_id\": \"culpa nisi\",\n  \"error_message\": \"eu\"\n },\n \"payload\": {\n  \"session_id\": \"labore non consectetur\",\n  \"error_message\": \"incididunt sed\"\n },\n \"trace_id\": \"laborum eiusmod\",\n \"page\": {\n  \"type\": \"in occaecat ea ut\",\n  \"size\": -23835333,\n  \"current\": -18276749,\n  \"has_next\": false,\n  \"item_total\": -96555486,\n  \"next_id\": \"non aliquip id Ut\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e13c8aaf-be42-4205-83d8-470f773755f8",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1995-11-03T16:43:48.786Z\",\n \"status\": 53570049,\n \"error\": \"reprehenderit sed tempor ut\",\n \"exception\": \"reprehenderit laborum\",\n \"message\": \"elit non in\",\n \"total_time_taken_in_millis\": -90201390,\n \"http_status\": \"419 INSUFFICIENT_SPACE_ON_RESOURCE\",\n \"items\": {\n  \"session_id\": \"culpa nisi\",\n  \"error_message\": \"eu\"\n },\n \"payload\": {\n  \"session_id\": \"labore non consectetur\",\n  \"error_message\": \"incididunt sed\"\n },\n \"trace_id\": \"laborum eiusmod\",\n \"page\": {\n  \"type\": \"in occaecat ea ut\",\n  \"size\": -23835333,\n  \"current\": -18276749,\n  \"has_next\": false,\n  \"item_total\": -96555486,\n  \"next_id\": \"non aliquip id Ut\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3e72d699-bc64-41f8-95ac-573935701d98",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1995-11-03T16:43:48.786Z\",\n \"status\": 53570049,\n \"error\": \"reprehenderit sed tempor ut\",\n \"exception\": \"reprehenderit laborum\",\n \"message\": \"elit non in\",\n \"total_time_taken_in_millis\": -90201390,\n \"http_status\": \"419 INSUFFICIENT_SPACE_ON_RESOURCE\",\n \"items\": {\n  \"session_id\": \"culpa nisi\",\n  \"error_message\": \"eu\"\n },\n \"payload\": {\n  \"session_id\": \"labore non consectetur\",\n  \"error_message\": \"incididunt sed\"\n },\n \"trace_id\": \"laborum eiusmod\",\n \"page\": {\n  \"type\": \"in occaecat ea ut\",\n  \"size\": -23835333,\n  \"current\": -18276749,\n  \"has_next\": false,\n  \"item_total\": -96555486,\n  \"next_id\": \"non aliquip id Ut\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "7e891d32-f146-4fc0-a6a0-eed451ae6b52",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "f80e77be-24fd-432a-b9cd-d18a75e0cb11",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2006-12-30T14:14:04.445Z\",\n \"status\": 55629511,\n \"error\": \"ea\",\n \"exception\": \"officia nostrud voluptate\",\n \"message\": \"occaecat Lorem officia veniam Excepteur\",\n \"total_time_taken_in_millis\": -43922756,\n \"http_status\": \"411 LENGTH_REQUIRED\",\n \"items\": {\n  \"company_id\": 43282753,\n  \"integration_data\": {},\n  \"company_name\": \"nostrud\",\n  \"task_details\": {\n   \"type\": -22427159,\n   \"group_list\": [\n    {\n     \"text\": \"in\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"sed Duis fugiat\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 97955646.68860272,\n   \"safe_stock\": 95343184,\n   \"period_threshold\": 97008659,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"Excepteur\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"sed id reprehenderit\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"Lorem et elit velit\",\n  \"alias\": \"Ut dolore mollit\"\n },\n \"payload\": {\n  \"company_id\": 13672212,\n  \"integration_data\": {},\n  \"company_name\": \"dolor voluptate\",\n  \"task_details\": {\n   \"type\": 77845899,\n   \"group_list\": [\n    {\n     \"text\": \"do Ut est dolor enim\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"anim aute minim\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -56625083.798870035,\n   \"safe_stock\": -1593590,\n   \"period_threshold\": -55373923,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"deserunt commodo laborum\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"tempor nostrud sint\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"anim elit est veniam\",\n  \"alias\": \"nisi aliqua consequat sit\"\n },\n \"trace_id\": \"ut laboris elit incididunt\",\n \"page\": {\n  \"type\": \"do tempor esse repr\",\n  \"size\": -15362782,\n  \"current\": 21309980,\n  \"has_next\": true,\n  \"item_total\": 85942811,\n  \"next_id\": \"non\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9971c016-e1f0-4735-a795-b2d0c06cdd9b",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2006-12-30T14:14:04.445Z\",\n \"status\": 55629511,\n \"error\": \"ea\",\n \"exception\": \"officia nostrud voluptate\",\n \"message\": \"occaecat Lorem officia veniam Excepteur\",\n \"total_time_taken_in_millis\": -43922756,\n \"http_status\": \"411 LENGTH_REQUIRED\",\n \"items\": {\n  \"company_id\": 43282753,\n  \"integration_data\": {},\n  \"company_name\": \"nostrud\",\n  \"task_details\": {\n   \"type\": -22427159,\n   \"group_list\": [\n    {\n     \"text\": \"in\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"sed Duis fugiat\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 97955646.68860272,\n   \"safe_stock\": 95343184,\n   \"period_threshold\": 97008659,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"Excepteur\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"sed id reprehenderit\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"Lorem et elit velit\",\n  \"alias\": \"Ut dolore mollit\"\n },\n \"payload\": {\n  \"company_id\": 13672212,\n  \"integration_data\": {},\n  \"company_name\": \"dolor voluptate\",\n  \"task_details\": {\n   \"type\": 77845899,\n   \"group_list\": [\n    {\n     \"text\": \"do Ut est dolor enim\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"anim aute minim\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -56625083.798870035,\n   \"safe_stock\": -1593590,\n   \"period_threshold\": -55373923,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"deserunt commodo laborum\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"tempor nostrud sint\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"anim elit est veniam\",\n  \"alias\": \"nisi aliqua consequat sit\"\n },\n \"trace_id\": \"ut laboris elit incididunt\",\n \"page\": {\n  \"type\": \"do tempor esse repr\",\n  \"size\": -15362782,\n  \"current\": 21309980,\n  \"has_next\": true,\n  \"item_total\": 85942811,\n  \"next_id\": \"non\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "dc17bc96-9534-4bd5-9ba2-1927d4365e9e",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2006-12-30T14:14:04.445Z\",\n \"status\": 55629511,\n \"error\": \"ea\",\n \"exception\": \"officia nostrud voluptate\",\n \"message\": \"occaecat Lorem officia veniam Excepteur\",\n \"total_time_taken_in_millis\": -43922756,\n \"http_status\": \"411 LENGTH_REQUIRED\",\n \"items\": {\n  \"company_id\": 43282753,\n  \"integration_data\": {},\n  \"company_name\": \"nostrud\",\n  \"task_details\": {\n   \"type\": -22427159,\n   \"group_list\": [\n    {\n     \"text\": \"in\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"sed Duis fugiat\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 97955646.68860272,\n   \"safe_stock\": 95343184,\n   \"period_threshold\": 97008659,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"Excepteur\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"sed id reprehenderit\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"Lorem et elit velit\",\n  \"alias\": \"Ut dolore mollit\"\n },\n \"payload\": {\n  \"company_id\": 13672212,\n  \"integration_data\": {},\n  \"company_name\": \"dolor voluptate\",\n  \"task_details\": {\n   \"type\": 77845899,\n   \"group_list\": [\n    {\n     \"text\": \"do Ut est dolor enim\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"anim aute minim\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -56625083.798870035,\n   \"safe_stock\": -1593590,\n   \"period_threshold\": -55373923,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"deserunt commodo laborum\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"tempor nostrud sint\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"anim elit est veniam\",\n  \"alias\": \"nisi aliqua consequat sit\"\n },\n \"trace_id\": \"ut laboris elit incididunt\",\n \"page\": {\n  \"type\": \"do tempor esse repr\",\n  \"size\": -15362782,\n  \"current\": 21309980,\n  \"has_next\": true,\n  \"item_total\": 85942811,\n  \"next_id\": \"non\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "6f8b4429-c048-4af8-a7ca-43ba68fa11b2",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "830ea1fb-fd78-4ed2-877d-47567fc292d9",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2002-05-03T15:27:10.871Z\",\n \"status\": -77070097,\n \"error\": \"adipisicing proident aliquip\",\n \"exception\": \"deserunt qui cupidatat tempor id\",\n \"message\": \"exercitation non quis proident\",\n \"total_time_taken_in_millis\": -64540645,\n \"http_status\": \"421 DESTINATION_LOCKED\",\n \"items\": [\n  {\n   \"company_id\": 51013452,\n   \"integration_data\": {},\n   \"company_name\": \"in nulla ea qui\",\n   \"task_details\": {\n    \"type\": -51063191,\n    \"group_list\": [\n     {\n      \"text\": \"consequat minim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laborum sed et\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -39119465.561765,\n    \"safe_stock\": 62438013,\n    \"period_threshold\": -70623508,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"amet non ut laboris\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"reprehenderit nostrud in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"consequat occaecat labore\",\n   \"alias\": \"officia ea velit\"\n  },\n  {\n   \"company_id\": 28444236,\n   \"integration_data\": {},\n   \"company_name\": \"et enim\",\n   \"task_details\": {\n    \"type\": 42624596,\n    \"group_list\": [\n     {\n      \"text\": \"et sunt reprehenderit est\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cupidatat mollit reprehenderit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 94077101.54854348,\n    \"safe_stock\": 2964065,\n    \"period_threshold\": 56759107,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ex \",\n      \"value\": {}\n     },\n     {\n      \"text\": \"voluptate cupidatat elit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"esse dolore\",\n   \"alias\": \"eiusmod dolore ut\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -64477953,\n   \"integration_data\": {},\n   \"company_name\": \"commodo do aliquip est\",\n   \"task_details\": {\n    \"type\": 27673176,\n    \"group_list\": [\n     {\n      \"text\": \"d\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"exercitati\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -2344483.0771523565,\n    \"safe_stock\": -42926834,\n    \"period_threshold\": 52839559,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"in ut esse dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"fugiat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"vol\",\n   \"alias\": \"aliquip culpa laboris esse\"\n  },\n  {\n   \"company_id\": -28609160,\n   \"integration_data\": {},\n   \"company_name\": \"voluptate aliqua labore incididunt\",\n   \"task_details\": {\n    \"type\": 45090215,\n    \"group_list\": [\n     {\n      \"text\": \"cillum ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ipsum ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 61815814.573872805,\n    \"safe_stock\": -18886918,\n    \"period_threshold\": 48637542,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"in mollit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"quis non\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"et \",\n   \"alias\": \"ut occaecat\"\n  }\n ],\n \"trace_id\": \"deserunt voluptate\",\n \"page\": {\n  \"type\": \"et velit voluptate ipsum commodo\",\n  \"size\": 35435664,\n  \"current\": 84952961,\n  \"has_next\": true,\n  \"item_total\": -70140332,\n  \"next_id\": \"velit sunt\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "efbd2419-63b4-4411-b7eb-97c04d593667",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1971-01-14T03:20:15.095Z\",\n \"status\": -48716012,\n \"error\": \"irure est consectetur in Ut\",\n \"exception\": \"aute ullamco\",\n \"message\": \"sint qui id voluptate\",\n \"total_time_taken_in_millis\": -1594244,\n \"http_status\": \"419 INSUFFICIENT_SPACE_ON_RESOURCE\",\n \"items\": [\n  {\n   \"company_id\": 67020630,\n   \"integration_data\": {},\n   \"company_name\": \"et reprehenderit\",\n   \"task_details\": {\n    \"type\": -24212991,\n    \"group_list\": [\n     {\n      \"text\": \"anim quis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eu fugiat in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 83213905.55150625,\n    \"safe_stock\": -56753771,\n    \"period_threshold\": 3255046,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolor nisi in id\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor veniam es\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ad reprehenderit\",\n   \"alias\": \"mollit reprehenderit cupidatat\"\n  },\n  {\n   \"company_id\": -90563308,\n   \"integration_data\": {},\n   \"company_name\": \"laborum cupidatat in ut\",\n   \"task_details\": {\n    \"type\": 32719474,\n    \"group_list\": [\n     {\n      \"text\": \"sed magna dolore elit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"velit Excepteur Lorem\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -88454871.33146727,\n    \"safe_stock\": -35941668,\n    \"period_threshold\": 16728574,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolore ullamco proident\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Ut ni\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"incididunt veniam\",\n   \"alias\": \"aute reprehenderit\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 63574519,\n   \"integration_data\": {},\n   \"company_name\": \"Duis veniam laborum elit\",\n   \"task_details\": {\n    \"type\": -58235299,\n    \"group_list\": [\n     {\n      \"text\": \"magna ut exercitation\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"minim fugiat commodo id\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 48463666.589817226,\n    \"safe_stock\": 22795281,\n    \"period_threshold\": 57359174,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolore ad quis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute dolor eu aliquip\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"culpa non deserunt magna\",\n   \"alias\": \"sed nostrud\"\n  },\n  {\n   \"company_id\": 5084032,\n   \"integration_data\": {},\n   \"company_name\": \"ipsum consectetur\",\n   \"task_details\": {\n    \"type\": -41815402,\n    \"group_list\": [\n     {\n      \"text\": \"commodo dolor et labore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"commodo id\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -14897743.136137187,\n    \"safe_stock\": 35402797,\n    \"period_threshold\": -20051046,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"deserunt in nulla ipsum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sunt ad\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sit magna\",\n   \"alias\": \"fugiat\"\n  }\n ],\n \"trace_id\": \"do quis laborum sed\",\n \"page\": {\n  \"type\": \"fugiat Duis quis\",\n  \"size\": 27104269,\n  \"current\": 37588433,\n  \"has_next\": true,\n  \"item_total\": 50303604,\n  \"next_id\": \"sunt quis comm\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b66634e6-5aa3-4786-9860-a2d3c5508ca7",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1971-01-14T03:20:15.095Z\",\n \"status\": -48716012,\n \"error\": \"irure est consectetur in Ut\",\n \"exception\": \"aute ullamco\",\n \"message\": \"sint qui id voluptate\",\n \"total_time_taken_in_millis\": -1594244,\n \"http_status\": \"419 INSUFFICIENT_SPACE_ON_RESOURCE\",\n \"items\": [\n  {\n   \"company_id\": 67020630,\n   \"integration_data\": {},\n   \"company_name\": \"et reprehenderit\",\n   \"task_details\": {\n    \"type\": -24212991,\n    \"group_list\": [\n     {\n      \"text\": \"anim quis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eu fugiat in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 83213905.55150625,\n    \"safe_stock\": -56753771,\n    \"period_threshold\": 3255046,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolor nisi in id\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor veniam es\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ad reprehenderit\",\n   \"alias\": \"mollit reprehenderit cupidatat\"\n  },\n  {\n   \"company_id\": -90563308,\n   \"integration_data\": {},\n   \"company_name\": \"laborum cupidatat in ut\",\n   \"task_details\": {\n    \"type\": 32719474,\n    \"group_list\": [\n     {\n      \"text\": \"sed magna dolore elit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"velit Excepteur Lorem\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -88454871.33146727,\n    \"safe_stock\": -35941668,\n    \"period_threshold\": 16728574,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolore ullamco proident\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Ut ni\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"incididunt veniam\",\n   \"alias\": \"aute reprehenderit\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 63574519,\n   \"integration_data\": {},\n   \"company_name\": \"Duis veniam laborum elit\",\n   \"task_details\": {\n    \"type\": -58235299,\n    \"group_list\": [\n     {\n      \"text\": \"magna ut exercitation\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"minim fugiat commodo id\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 48463666.589817226,\n    \"safe_stock\": 22795281,\n    \"period_threshold\": 57359174,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolore ad quis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute dolor eu aliquip\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"culpa non deserunt magna\",\n   \"alias\": \"sed nostrud\"\n  },\n  {\n   \"company_id\": 5084032,\n   \"integration_data\": {},\n   \"company_name\": \"ipsum consectetur\",\n   \"task_details\": {\n    \"type\": -41815402,\n    \"group_list\": [\n     {\n      \"text\": \"commodo dolor et labore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"commodo id\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -14897743.136137187,\n    \"safe_stock\": 35402797,\n    \"period_threshold\": -20051046,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"deserunt in nulla ipsum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sunt ad\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sit magna\",\n   \"alias\": \"fugiat\"\n  }\n ],\n \"trace_id\": \"do quis laborum sed\",\n \"page\": {\n  \"type\": \"fugiat Duis quis\",\n  \"size\": 27104269,\n  \"current\": 37588433,\n  \"has_next\": true,\n  \"item_total\": 50303604,\n  \"next_id\": \"sunt quis comm\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "d1e2a95a-30cb-4fc3-bde4-bd12eaeb32d5",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "6b4a8a72-a712-41cd-9d60-a3f0ef4e5d39",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1944-06-23T16:18:41.252Z\",\n \"status\": -19704070,\n \"error\": \"minim\",\n \"exception\": \"aliqua anim\",\n \"message\": \"cillum eiusmod nulla\",\n \"total_time_taken_in_millis\": 48358804,\n \"http_status\": \"203 NON_AUTHORITATIVE_INFORMATION\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"ipsum est irure aliquip Lorem\",\n \"page\": {\n  \"type\": \"aliqua dolor velit\",\n  \"size\": -48767737,\n  \"current\": -69753661,\n  \"has_next\": false,\n  \"item_total\": -59464774,\n  \"next_id\": \"amet sunt dolore\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "69316f91-9551-4530-9f62-8b815cc6d005",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1944-06-23T16:18:41.252Z\",\n \"status\": -19704070,\n \"error\": \"minim\",\n \"exception\": \"aliqua anim\",\n \"message\": \"cillum eiusmod nulla\",\n \"total_time_taken_in_millis\": 48358804,\n \"http_status\": \"203 NON_AUTHORITATIVE_INFORMATION\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"ipsum est irure aliquip Lorem\",\n \"page\": {\n  \"type\": \"aliqua dolor velit\",\n  \"size\": -48767737,\n  \"current\": -69753661,\n  \"has_next\": false,\n  \"item_total\": -59464774,\n  \"next_id\": \"amet sunt dolore\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "7a3917de-2216-49f4-b550-03f20bbd9013",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1944-06-23T16:18:41.252Z\",\n \"status\": -19704070,\n \"error\": \"minim\",\n \"exception\": \"aliqua anim\",\n \"message\": \"cillum eiusmod nulla\",\n \"total_time_taken_in_millis\": 48358804,\n \"http_status\": \"203 NON_AUTHORITATIVE_INFORMATION\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"ipsum est irure aliquip Lorem\",\n \"page\": {\n  \"type\": \"aliqua dolor velit\",\n  \"size\": -48767737,\n  \"current\": -69753661,\n  \"has_next\": false,\n  \"item_total\": -59464774,\n  \"next_id\": \"amet sunt dolore\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "05820867-e9d5-4db0-b6cc-b66055b7952b",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "ba9b4ecd-902f-46c4-81df-1e3ba2a7b678",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1966-05-05T20:34:06.656Z\",\n \"status\": -37807593,\n \"error\": \"labore\",\n \"exception\": \"ad non\",\n \"message\": \"nostrud incididunt nisi\",\n \"total_time_taken_in_millis\": 77049016,\n \"http_status\": \"408 REQUEST_TIMEOUT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"est dolor\",\n \"page\": {\n  \"type\": \"proident minim cillum\",\n  \"size\": 3815591,\n  \"current\": -38097731,\n  \"has_next\": false,\n  \"item_total\": 32470330,\n  \"next_id\": \"id cillum amet\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a94d1271-0ffb-4ede-bbc2-f40a2b833aba",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1966-05-05T20:34:06.656Z\",\n \"status\": -37807593,\n \"error\": \"labore\",\n \"exception\": \"ad non\",\n \"message\": \"nostrud incididunt nisi\",\n \"total_time_taken_in_millis\": 77049016,\n \"http_status\": \"408 REQUEST_TIMEOUT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"est dolor\",\n \"page\": {\n  \"type\": \"proident minim cillum\",\n  \"size\": 3815591,\n  \"current\": -38097731,\n  \"has_next\": false,\n  \"item_total\": 32470330,\n  \"next_id\": \"id cillum amet\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e35af99f-5cb2-4fcd-a823-6ed281f36069",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1966-05-05T20:34:06.656Z\",\n \"status\": -37807593,\n \"error\": \"labore\",\n \"exception\": \"ad non\",\n \"message\": \"nostrud incididunt nisi\",\n \"total_time_taken_in_millis\": 77049016,\n \"http_status\": \"408 REQUEST_TIMEOUT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"est dolor\",\n \"page\": {\n  \"type\": \"proident minim cillum\",\n  \"size\": 3815591,\n  \"current\": -38097731,\n  \"has_next\": false,\n  \"item_total\": 32470330,\n  \"next_id\": \"id cillum amet\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "20ff37d6-563a-460b-91d8-ffb37d08110d",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1966-05-05T20:34:06.656Z\",\n \"status\": -37807593,\n \"error\": \"labore\",\n \"exception\": \"ad non\",\n \"message\": \"nostrud incididunt nisi\",\n \"total_time_taken_in_millis\": 77049016,\n \"http_status\": \"408 REQUEST_TIMEOUT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"est dolor\",\n \"page\": {\n  \"type\": \"proident minim cillum\",\n  \"size\": 3815591,\n  \"current\": -38097731,\n  \"has_next\": false,\n  \"item_total\": 32470330,\n  \"next_id\": \"id cillum amet\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "44eedfb3-de3d-4333-94b4-1e2575852c9b",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1966-05-05T20:34:06.656Z\",\n \"status\": -37807593,\n \"error\": \"labore\",\n \"exception\": \"ad non\",\n \"message\": \"nostrud incididunt nisi\",\n \"total_time_taken_in_millis\": 77049016,\n \"http_status\": \"408 REQUEST_TIMEOUT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"est dolor\",\n \"page\": {\n  \"type\": \"proident minim cillum\",\n  \"size\": 3815591,\n  \"current\": -38097731,\n  \"has_next\": false,\n  \"item_total\": 32470330,\n  \"next_id\": \"id cillum amet\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.jmpx2.de"
    }
  ],
  "info": {
    "_postman_id": "7ffb1772-1720-4af7-98b5-a69c2fb1f333",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
