{
  "item": [
    {
      "id": "1826ef63-8585-4dc4-a5ae-8dc651670a18",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "f59433ef-d9b2-4332-ab2d-c0cf3a9caa99",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "b88bba4f-172d-496c-a497-fb8f2270b118",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "consectetur",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "242df202-5a9d-45f1-b5be-83cc3ee43937",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "consectetur",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"Invalid application domain or id.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a261e56b-8308-4004-ad6f-5b0e482d2491",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "consectetur",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "0e2de790-7256-41c7-9577-bea8a6e20d49",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "aee160fa-c3fe-4255-aeb8-5e1be5c01d99",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "50a6a95e-38e5-4ce7-87ab-17215be5a9d8",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "d004cb37-8d84-431b-ad7e-dee22d226a3a",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "4436c8d8-241b-497d-b7b1-d7e99420fa4d",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -65968169,\n   \"event_name\": \"dolor do veniam\",\n   \"event_type\": \"Excepteur sunt ullamco qui\",\n   \"event_category\": \"anim ex deserunt magna\",\n   \"version\": \"nulla cillum aliqua\",\n   \"display_name\": \"deserunt cillum velit Lorem\",\n   \"description\": \"nostrud in ea adipisicing\",\n   \"created_on\": \"sunt magna in elit\"\n  },\n  {\n   \"id\": -79410752,\n   \"event_name\": \"irure qui\",\n   \"event_type\": \"a\",\n   \"event_category\": \"labore Duis id aliquip\",\n   \"version\": \"irure exercitation dolor magna culpa\",\n   \"display_name\": \"commodo ex ullamco\",\n   \"description\": \"ea Excepteur\",\n   \"created_on\": \"ad minim mollit incididunt est\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "d2992714-e266-498a-abc2-714ef60f2bc2",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "e8f32ee9-9edc-4133-bc8a-86ccd0dd4883",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -17004353,\n   \"event_name\": \"nulla in cupidatat ut\",\n   \"event_type\": \"proident in\",\n   \"event_category\": \"id nisi Excepteur sit\",\n   \"version\": \"Lorem\",\n   \"display_name\": \"labore sed\",\n   \"description\": \"commodo in\",\n   \"created_on\": \"dolor exercitation do\"\n  },\n  {\n   \"id\": -95998954,\n   \"event_name\": \"voluptate anim\",\n   \"event_type\": \"nostrud nisi dolore\",\n   \"event_category\": \"incididun\",\n   \"version\": \"nostrud minim eiusmod nulla\",\n   \"display_name\": \"ut\",\n   \"description\": \"quis pari\",\n   \"created_on\": \"Excepteur Duis sint ullamco\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "f81e6726-30d6-4e84-b977-2cf20f0be240",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "1f12428e-1a0f-4e23-9a5c-f1bd7239dd22",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "a593b809-637e-4253-bfa7-846d999f0222",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2021-01-01T08:06:32.913Z\",\n \"status\": 44890679,\n \"error\": \"ut laborum Lorem deserunt\",\n \"exception\": \"proident sit\",\n \"message\": \"tempor ea anim Duis\",\n \"total_time_taken_in_millis\": -44564469,\n \"http_status\": \"451 UNAVAILABLE_FOR_LEGAL_REASONS\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"mollit\",\n   \"description\": \"eu consequat nulla ipsum aliqua\",\n   \"name\": \"officia\",\n   \"slug\": \"aute commodo aliquip id\",\n   \"meta\": [\n    {\n     \"_id\": \"ut laboris\",\n     \"name\": \"nulla sed\",\n     \"value\": \"dolore sunt dolore\"\n    },\n    {\n     \"_id\": \"dolore voluptate ea quis\",\n     \"name\": \"commodo sint irure culpa nisi\",\n     \"value\": \"labore non aliquip et\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"aliqua Ut dolore in\",\n    \"integration\": \"reprehenderit officia sint labore\",\n    \"level\": \"in eiusmod reprehenderit eu consequat\",\n    \"uid\": 98872846,\n    \"opted\": false,\n    \"permissions\": [\n     \"mollit aliquip\",\n     \"voluptate anim\"\n    ],\n    \"token\": \"amet commodo\",\n    \"name\": \"consectetur ut veniam\",\n    \"stores\": [\n     {\n      \"_id\": \"comm\",\n      \"integration\": \"qui adip\",\n      \"level\": \"anim laborum\",\n      \"uid\": 683903,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolor cupidatat Lorem\",\n      \"code\": \"non est dolor\",\n      \"name\": \"nisi ut irure\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"laboris dolore\",\n      \"integration\": \"consectetur pariatur\",\n      \"level\": \"dol\",\n      \"uid\": -94001536,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"labore fugiat sit cupidatat\",\n      \"code\": \"nostrud do eu\",\n      \"name\": \"ullamco officia Excepteur id\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"dolore proident\",\n      \"integration\": \"dolore ullamco\",\n      \"level\": \"Ut fugiat qu\",\n      \"uid\": 73761722,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ex minim laboris\",\n      \"code\": \"quis culpa id\",\n      \"name\": \"culpa ipsum\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"proident magna no\",\n      \"integration\": \"laborum aliquip in dolore aute\",\n      \"level\": \"sit cupidatat\",\n      \"uid\": -74386404,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"enim dolor commodo aute\",\n      \"code\": \"tempor in ullamco dol\",\n      \"name\": \"ut mollit veniam aute commodo\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"ullamco\",\n    \"integration\": \"mollit\",\n    \"level\": \"laboris dolor elit Duis\",\n    \"uid\": -258693,\n    \"opted\": true,\n    \"permissions\": [\n     \"ullamco Excepteur\",\n     \"mollit laboris\"\n    ],\n    \"token\": \"ad magna laboris\",\n    \"name\": \"nostrud\",\n    \"stores\": [\n     {\n      \"_id\": \"officia\",\n      \"integration\": \"consequat irure\",\n      \"level\": \"nostrud ullamco aute in eu\",\n      \"uid\": -59730743,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"id dolore quis\",\n      \"code\": \"adipisicing quis fugiat qui et\",\n      \"name\": \"veniam ut in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"commodo non \",\n      \"integration\": \"laboris\",\n      \"level\": \"ex ea quis commodo\",\n      \"uid\": -21352104,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Excepteur amet\",\n      \"code\": \"deserunt Excepteur dolor Duis\",\n      \"name\": \"elit ullamco sunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"enim minim officia\",\n      \"integration\": \"labore nostrud\",\n      \"level\": \"et aute aliqua esse eiusmod\",\n      \"uid\": 13323226,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"labore ipsum ea est\",\n      \"code\": \"pariatur dolore qui adipisicing anim\",\n      \"name\": \"proident culpa Ut\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"esse labore \",\n      \"integration\": \"irur\",\n      \"level\": \"ad velit in\",\n      \"uid\": -37387067,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"incididunt\",\n      \"code\": \"nostrud sed\",\n      \"name\": \"ad velit reprehenderit ullamco aliqua\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"aliqua\",\n   \"description\": \"consectetur\",\n   \"name\": \"\",\n   \"slug\": \"ipsum sed in\",\n   \"meta\": [\n    {\n     \"_id\": \"sunt amet id minim\",\n     \"name\": \"magna sint eu sunt\",\n     \"value\": \"elit\"\n    },\n    {\n     \"_id\": \"dolor sed reprehenderit do\",\n     \"name\": \"consequat ut\",\n     \"value\": \"cupidatat do est\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"aute nulla\",\n    \"integration\": \"ea pariatur\",\n    \"level\": \"velit officia voluptate aute\",\n    \"uid\": -76217719,\n    \"opted\": true,\n    \"permissions\": [\n     \"eu\",\n     \"elit aliquip\"\n    ],\n    \"token\": \"Duis deseru\",\n    \"name\": \"do Lorem fugiat\",\n    \"stores\": [\n     {\n      \"_id\": \"nulla nisi pariatur dolor labore\",\n      \"integration\": \"dolor Duis est velit qui\",\n      \"level\": \"fugiat Ut sed amet\",\n      \"uid\": -14263005,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"mollit amet sed dolore anim\",\n      \"code\": \"non irure id\",\n      \"name\": \"deserunt consectetur commodo dolor eiusmod\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"minim labore esse in laborum\",\n      \"integration\": \"consequat magna ullamco de\",\n      \"level\": \"cillum ut pariatur\",\n      \"uid\": 60439093,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ullamco nulla culpa adipisicing\",\n      \"code\": \"in elit dolore culpa\",\n      \"name\": \"et velit\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"ullamco incididunt in aliqua\",\n      \"integration\": \"aliqua nostrud\",\n      \"level\": \"commodo veniam\",\n      \"uid\": -45695539,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Lorem quis irure labore aliquip\",\n      \"code\": \"ut\",\n      \"name\": \"c\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"voluptate \",\n      \"integration\": \"enim ea\",\n      \"level\": \"culpa non sit i\",\n      \"uid\": 85717623,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ea voluptate et\",\n      \"code\": \"amet consequat\",\n      \"name\": \"elit adipisicing\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"incididunt \",\n    \"integration\": \"ut reprehenderit dolore aliquip\",\n    \"level\": \"consectetur sint\",\n    \"uid\": 84152158,\n    \"opted\": false,\n    \"permissions\": [\n     \"ut Excepteur ut\",\n     \"eu fug\"\n    ],\n    \"token\": \"dolore ex deserunt cupidatat\",\n    \"name\": \"cul\",\n    \"stores\": [\n     {\n      \"_id\": \"ut magna\",\n      \"integration\": \"deserunt exercitation Lorem fugiat\",\n      \"level\": \"dolore ut eiusmod qui\",\n      \"uid\": 596911,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"labore esse\",\n      \"code\": \"officia dolor nulla\",\n      \"name\": \"deserunt laborum do\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"dolor adipisicing do dolore qui\",\n      \"integration\": \"elit ex qui deserunt ad\",\n      \"level\": \"pariatur\",\n      \"uid\": 69710547,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in minim sed tempor commodo\",\n      \"code\": \"in ad\",\n      \"name\": \"dolore amet pariatur\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"aute ad nostrud\",\n      \"integration\": \"est Ut commodo minim\",\n      \"level\": \"reprehenderit magna exercitation laborum\",\n      \"uid\": 1154072,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolore qui\",\n      \"code\": \"ut sunt\",\n      \"name\": \"do sint\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"deserunt\",\n      \"integration\": \"sunt nulla ipsum\",\n      \"level\": \"et enim\",\n      \"uid\": 47211286,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"exercitation cillum incididunt elit\",\n      \"code\": \"occaecat nisi exercitation velit\",\n      \"name\": \"eiusmod Excepteur reprehenderit aliqua\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"nisi Ut\",\n \"page\": {\n  \"type\": \"dolore fugiat quis non\",\n  \"size\": -93816294,\n  \"current\": -66693399,\n  \"has_next\": true,\n  \"item_total\": 64770782,\n  \"next_id\": \"officia\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a9f36e23-9f45-4ccc-8c4e-5cc795dab2f9",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2021-01-01T08:06:32.913Z\",\n \"status\": 44890679,\n \"error\": \"ut laborum Lorem deserunt\",\n \"exception\": \"proident sit\",\n \"message\": \"tempor ea anim Duis\",\n \"total_time_taken_in_millis\": -44564469,\n \"http_status\": \"451 UNAVAILABLE_FOR_LEGAL_REASONS\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"mollit\",\n   \"description\": \"eu consequat nulla ipsum aliqua\",\n   \"name\": \"officia\",\n   \"slug\": \"aute commodo aliquip id\",\n   \"meta\": [\n    {\n     \"_id\": \"ut laboris\",\n     \"name\": \"nulla sed\",\n     \"value\": \"dolore sunt dolore\"\n    },\n    {\n     \"_id\": \"dolore voluptate ea quis\",\n     \"name\": \"commodo sint irure culpa nisi\",\n     \"value\": \"labore non aliquip et\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"aliqua Ut dolore in\",\n    \"integration\": \"reprehenderit officia sint labore\",\n    \"level\": \"in eiusmod reprehenderit eu consequat\",\n    \"uid\": 98872846,\n    \"opted\": false,\n    \"permissions\": [\n     \"mollit aliquip\",\n     \"voluptate anim\"\n    ],\n    \"token\": \"amet commodo\",\n    \"name\": \"consectetur ut veniam\",\n    \"stores\": [\n     {\n      \"_id\": \"comm\",\n      \"integration\": \"qui adip\",\n      \"level\": \"anim laborum\",\n      \"uid\": 683903,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolor cupidatat Lorem\",\n      \"code\": \"non est dolor\",\n      \"name\": \"nisi ut irure\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"laboris dolore\",\n      \"integration\": \"consectetur pariatur\",\n      \"level\": \"dol\",\n      \"uid\": -94001536,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"labore fugiat sit cupidatat\",\n      \"code\": \"nostrud do eu\",\n      \"name\": \"ullamco officia Excepteur id\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"dolore proident\",\n      \"integration\": \"dolore ullamco\",\n      \"level\": \"Ut fugiat qu\",\n      \"uid\": 73761722,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ex minim laboris\",\n      \"code\": \"quis culpa id\",\n      \"name\": \"culpa ipsum\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"proident magna no\",\n      \"integration\": \"laborum aliquip in dolore aute\",\n      \"level\": \"sit cupidatat\",\n      \"uid\": -74386404,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"enim dolor commodo aute\",\n      \"code\": \"tempor in ullamco dol\",\n      \"name\": \"ut mollit veniam aute commodo\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"ullamco\",\n    \"integration\": \"mollit\",\n    \"level\": \"laboris dolor elit Duis\",\n    \"uid\": -258693,\n    \"opted\": true,\n    \"permissions\": [\n     \"ullamco Excepteur\",\n     \"mollit laboris\"\n    ],\n    \"token\": \"ad magna laboris\",\n    \"name\": \"nostrud\",\n    \"stores\": [\n     {\n      \"_id\": \"officia\",\n      \"integration\": \"consequat irure\",\n      \"level\": \"nostrud ullamco aute in eu\",\n      \"uid\": -59730743,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"id dolore quis\",\n      \"code\": \"adipisicing quis fugiat qui et\",\n      \"name\": \"veniam ut in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"commodo non \",\n      \"integration\": \"laboris\",\n      \"level\": \"ex ea quis commodo\",\n      \"uid\": -21352104,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Excepteur amet\",\n      \"code\": \"deserunt Excepteur dolor Duis\",\n      \"name\": \"elit ullamco sunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"enim minim officia\",\n      \"integration\": \"labore nostrud\",\n      \"level\": \"et aute aliqua esse eiusmod\",\n      \"uid\": 13323226,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"labore ipsum ea est\",\n      \"code\": \"pariatur dolore qui adipisicing anim\",\n      \"name\": \"proident culpa Ut\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"esse labore \",\n      \"integration\": \"irur\",\n      \"level\": \"ad velit in\",\n      \"uid\": -37387067,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"incididunt\",\n      \"code\": \"nostrud sed\",\n      \"name\": \"ad velit reprehenderit ullamco aliqua\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"aliqua\",\n   \"description\": \"consectetur\",\n   \"name\": \"\",\n   \"slug\": \"ipsum sed in\",\n   \"meta\": [\n    {\n     \"_id\": \"sunt amet id minim\",\n     \"name\": \"magna sint eu sunt\",\n     \"value\": \"elit\"\n    },\n    {\n     \"_id\": \"dolor sed reprehenderit do\",\n     \"name\": \"consequat ut\",\n     \"value\": \"cupidatat do est\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"aute nulla\",\n    \"integration\": \"ea pariatur\",\n    \"level\": \"velit officia voluptate aute\",\n    \"uid\": -76217719,\n    \"opted\": true,\n    \"permissions\": [\n     \"eu\",\n     \"elit aliquip\"\n    ],\n    \"token\": \"Duis deseru\",\n    \"name\": \"do Lorem fugiat\",\n    \"stores\": [\n     {\n      \"_id\": \"nulla nisi pariatur dolor labore\",\n      \"integration\": \"dolor Duis est velit qui\",\n      \"level\": \"fugiat Ut sed amet\",\n      \"uid\": -14263005,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"mollit amet sed dolore anim\",\n      \"code\": \"non irure id\",\n      \"name\": \"deserunt consectetur commodo dolor eiusmod\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"minim labore esse in laborum\",\n      \"integration\": \"consequat magna ullamco de\",\n      \"level\": \"cillum ut pariatur\",\n      \"uid\": 60439093,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ullamco nulla culpa adipisicing\",\n      \"code\": \"in elit dolore culpa\",\n      \"name\": \"et velit\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"ullamco incididunt in aliqua\",\n      \"integration\": \"aliqua nostrud\",\n      \"level\": \"commodo veniam\",\n      \"uid\": -45695539,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Lorem quis irure labore aliquip\",\n      \"code\": \"ut\",\n      \"name\": \"c\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"voluptate \",\n      \"integration\": \"enim ea\",\n      \"level\": \"culpa non sit i\",\n      \"uid\": 85717623,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ea voluptate et\",\n      \"code\": \"amet consequat\",\n      \"name\": \"elit adipisicing\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"incididunt \",\n    \"integration\": \"ut reprehenderit dolore aliquip\",\n    \"level\": \"consectetur sint\",\n    \"uid\": 84152158,\n    \"opted\": false,\n    \"permissions\": [\n     \"ut Excepteur ut\",\n     \"eu fug\"\n    ],\n    \"token\": \"dolore ex deserunt cupidatat\",\n    \"name\": \"cul\",\n    \"stores\": [\n     {\n      \"_id\": \"ut magna\",\n      \"integration\": \"deserunt exercitation Lorem fugiat\",\n      \"level\": \"dolore ut eiusmod qui\",\n      \"uid\": 596911,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"labore esse\",\n      \"code\": \"officia dolor nulla\",\n      \"name\": \"deserunt laborum do\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"dolor adipisicing do dolore qui\",\n      \"integration\": \"elit ex qui deserunt ad\",\n      \"level\": \"pariatur\",\n      \"uid\": 69710547,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in minim sed tempor commodo\",\n      \"code\": \"in ad\",\n      \"name\": \"dolore amet pariatur\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"aute ad nostrud\",\n      \"integration\": \"est Ut commodo minim\",\n      \"level\": \"reprehenderit magna exercitation laborum\",\n      \"uid\": 1154072,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolore qui\",\n      \"code\": \"ut sunt\",\n      \"name\": \"do sint\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"deserunt\",\n      \"integration\": \"sunt nulla ipsum\",\n      \"level\": \"et enim\",\n      \"uid\": 47211286,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"exercitation cillum incididunt elit\",\n      \"code\": \"occaecat nisi exercitation velit\",\n      \"name\": \"eiusmod Excepteur reprehenderit aliqua\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"nisi Ut\",\n \"page\": {\n  \"type\": \"dolore fugiat quis non\",\n  \"size\": -93816294,\n  \"current\": -66693399,\n  \"has_next\": true,\n  \"item_total\": 64770782,\n  \"next_id\": \"officia\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d3d8013c-bd37-45da-a7ff-371389f4058d",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2021-01-01T08:06:32.913Z\",\n \"status\": 44890679,\n \"error\": \"ut laborum Lorem deserunt\",\n \"exception\": \"proident sit\",\n \"message\": \"tempor ea anim Duis\",\n \"total_time_taken_in_millis\": -44564469,\n \"http_status\": \"451 UNAVAILABLE_FOR_LEGAL_REASONS\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"mollit\",\n   \"description\": \"eu consequat nulla ipsum aliqua\",\n   \"name\": \"officia\",\n   \"slug\": \"aute commodo aliquip id\",\n   \"meta\": [\n    {\n     \"_id\": \"ut laboris\",\n     \"name\": \"nulla sed\",\n     \"value\": \"dolore sunt dolore\"\n    },\n    {\n     \"_id\": \"dolore voluptate ea quis\",\n     \"name\": \"commodo sint irure culpa nisi\",\n     \"value\": \"labore non aliquip et\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"aliqua Ut dolore in\",\n    \"integration\": \"reprehenderit officia sint labore\",\n    \"level\": \"in eiusmod reprehenderit eu consequat\",\n    \"uid\": 98872846,\n    \"opted\": false,\n    \"permissions\": [\n     \"mollit aliquip\",\n     \"voluptate anim\"\n    ],\n    \"token\": \"amet commodo\",\n    \"name\": \"consectetur ut veniam\",\n    \"stores\": [\n     {\n      \"_id\": \"comm\",\n      \"integration\": \"qui adip\",\n      \"level\": \"anim laborum\",\n      \"uid\": 683903,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolor cupidatat Lorem\",\n      \"code\": \"non est dolor\",\n      \"name\": \"nisi ut irure\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"laboris dolore\",\n      \"integration\": \"consectetur pariatur\",\n      \"level\": \"dol\",\n      \"uid\": -94001536,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"labore fugiat sit cupidatat\",\n      \"code\": \"nostrud do eu\",\n      \"name\": \"ullamco officia Excepteur id\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"dolore proident\",\n      \"integration\": \"dolore ullamco\",\n      \"level\": \"Ut fugiat qu\",\n      \"uid\": 73761722,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ex minim laboris\",\n      \"code\": \"quis culpa id\",\n      \"name\": \"culpa ipsum\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"proident magna no\",\n      \"integration\": \"laborum aliquip in dolore aute\",\n      \"level\": \"sit cupidatat\",\n      \"uid\": -74386404,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"enim dolor commodo aute\",\n      \"code\": \"tempor in ullamco dol\",\n      \"name\": \"ut mollit veniam aute commodo\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"ullamco\",\n    \"integration\": \"mollit\",\n    \"level\": \"laboris dolor elit Duis\",\n    \"uid\": -258693,\n    \"opted\": true,\n    \"permissions\": [\n     \"ullamco Excepteur\",\n     \"mollit laboris\"\n    ],\n    \"token\": \"ad magna laboris\",\n    \"name\": \"nostrud\",\n    \"stores\": [\n     {\n      \"_id\": \"officia\",\n      \"integration\": \"consequat irure\",\n      \"level\": \"nostrud ullamco aute in eu\",\n      \"uid\": -59730743,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"id dolore quis\",\n      \"code\": \"adipisicing quis fugiat qui et\",\n      \"name\": \"veniam ut in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"commodo non \",\n      \"integration\": \"laboris\",\n      \"level\": \"ex ea quis commodo\",\n      \"uid\": -21352104,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Excepteur amet\",\n      \"code\": \"deserunt Excepteur dolor Duis\",\n      \"name\": \"elit ullamco sunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"enim minim officia\",\n      \"integration\": \"labore nostrud\",\n      \"level\": \"et aute aliqua esse eiusmod\",\n      \"uid\": 13323226,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"labore ipsum ea est\",\n      \"code\": \"pariatur dolore qui adipisicing anim\",\n      \"name\": \"proident culpa Ut\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"esse labore \",\n      \"integration\": \"irur\",\n      \"level\": \"ad velit in\",\n      \"uid\": -37387067,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"incididunt\",\n      \"code\": \"nostrud sed\",\n      \"name\": \"ad velit reprehenderit ullamco aliqua\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"aliqua\",\n   \"description\": \"consectetur\",\n   \"name\": \"\",\n   \"slug\": \"ipsum sed in\",\n   \"meta\": [\n    {\n     \"_id\": \"sunt amet id minim\",\n     \"name\": \"magna sint eu sunt\",\n     \"value\": \"elit\"\n    },\n    {\n     \"_id\": \"dolor sed reprehenderit do\",\n     \"name\": \"consequat ut\",\n     \"value\": \"cupidatat do est\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"aute nulla\",\n    \"integration\": \"ea pariatur\",\n    \"level\": \"velit officia voluptate aute\",\n    \"uid\": -76217719,\n    \"opted\": true,\n    \"permissions\": [\n     \"eu\",\n     \"elit aliquip\"\n    ],\n    \"token\": \"Duis deseru\",\n    \"name\": \"do Lorem fugiat\",\n    \"stores\": [\n     {\n      \"_id\": \"nulla nisi pariatur dolor labore\",\n      \"integration\": \"dolor Duis est velit qui\",\n      \"level\": \"fugiat Ut sed amet\",\n      \"uid\": -14263005,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"mollit amet sed dolore anim\",\n      \"code\": \"non irure id\",\n      \"name\": \"deserunt consectetur commodo dolor eiusmod\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"minim labore esse in laborum\",\n      \"integration\": \"consequat magna ullamco de\",\n      \"level\": \"cillum ut pariatur\",\n      \"uid\": 60439093,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ullamco nulla culpa adipisicing\",\n      \"code\": \"in elit dolore culpa\",\n      \"name\": \"et velit\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"ullamco incididunt in aliqua\",\n      \"integration\": \"aliqua nostrud\",\n      \"level\": \"commodo veniam\",\n      \"uid\": -45695539,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Lorem quis irure labore aliquip\",\n      \"code\": \"ut\",\n      \"name\": \"c\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"voluptate \",\n      \"integration\": \"enim ea\",\n      \"level\": \"culpa non sit i\",\n      \"uid\": 85717623,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ea voluptate et\",\n      \"code\": \"amet consequat\",\n      \"name\": \"elit adipisicing\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"incididunt \",\n    \"integration\": \"ut reprehenderit dolore aliquip\",\n    \"level\": \"consectetur sint\",\n    \"uid\": 84152158,\n    \"opted\": false,\n    \"permissions\": [\n     \"ut Excepteur ut\",\n     \"eu fug\"\n    ],\n    \"token\": \"dolore ex deserunt cupidatat\",\n    \"name\": \"cul\",\n    \"stores\": [\n     {\n      \"_id\": \"ut magna\",\n      \"integration\": \"deserunt exercitation Lorem fugiat\",\n      \"level\": \"dolore ut eiusmod qui\",\n      \"uid\": 596911,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"labore esse\",\n      \"code\": \"officia dolor nulla\",\n      \"name\": \"deserunt laborum do\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"dolor adipisicing do dolore qui\",\n      \"integration\": \"elit ex qui deserunt ad\",\n      \"level\": \"pariatur\",\n      \"uid\": 69710547,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in minim sed tempor commodo\",\n      \"code\": \"in ad\",\n      \"name\": \"dolore amet pariatur\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"aute ad nostrud\",\n      \"integration\": \"est Ut commodo minim\",\n      \"level\": \"reprehenderit magna exercitation laborum\",\n      \"uid\": 1154072,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolore qui\",\n      \"code\": \"ut sunt\",\n      \"name\": \"do sint\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"deserunt\",\n      \"integration\": \"sunt nulla ipsum\",\n      \"level\": \"et enim\",\n      \"uid\": 47211286,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"exercitation cillum incididunt elit\",\n      \"code\": \"occaecat nisi exercitation velit\",\n      \"name\": \"eiusmod Excepteur reprehenderit aliqua\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"nisi Ut\",\n \"page\": {\n  \"type\": \"dolore fugiat quis non\",\n  \"size\": -93816294,\n  \"current\": -66693399,\n  \"has_next\": true,\n  \"item_total\": 64770782,\n  \"next_id\": \"officia\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "8babe466-5f66-4ce7-b11f-522cba5c8110",
          "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
          "request": {
            "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "5aef4fc6-3275-49f9-b0c6-f42ce909fde4",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2017-01-29T15:59:21.945Z\",\n \"status\": -98592310,\n \"error\": \"aliquip laborum commodo culpa Ut\",\n \"exception\": \"aliqua\",\n \"message\": \"elit\",\n \"total_time_taken_in_millis\": 88471100,\n \"http_status\": \"411 LENGTH_REQUIRED\",\n \"items\": {\n  \"session_id\": \"ex cupidatat nostrud aliqua\",\n  \"error_message\": \"nostrud in eu aute minim\"\n },\n \"payload\": {\n  \"session_id\": \"dolor laborum magna\",\n  \"error_message\": \"minim cillum\"\n },\n \"trace_id\": \"est dolore fugiat reprehenderit\",\n \"page\": {\n  \"type\": \"laborum cillum qui\",\n  \"size\": 28764051,\n  \"current\": -14800672,\n  \"has_next\": true,\n  \"item_total\": 56208268,\n  \"next_id\": \"in ea\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "04e0f03f-2f19-47d5-911e-9b42ece7c78b",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2017-01-29T15:59:21.945Z\",\n \"status\": -98592310,\n \"error\": \"aliquip laborum commodo culpa Ut\",\n \"exception\": \"aliqua\",\n \"message\": \"elit\",\n \"total_time_taken_in_millis\": 88471100,\n \"http_status\": \"411 LENGTH_REQUIRED\",\n \"items\": {\n  \"session_id\": \"ex cupidatat nostrud aliqua\",\n  \"error_message\": \"nostrud in eu aute minim\"\n },\n \"payload\": {\n  \"session_id\": \"dolor laborum magna\",\n  \"error_message\": \"minim cillum\"\n },\n \"trace_id\": \"est dolore fugiat reprehenderit\",\n \"page\": {\n  \"type\": \"laborum cillum qui\",\n  \"size\": 28764051,\n  \"current\": -14800672,\n  \"has_next\": true,\n  \"item_total\": 56208268,\n  \"next_id\": \"in ea\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c556a03f-7b1c-4d63-9398-d63299d3ade1",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2017-01-29T15:59:21.945Z\",\n \"status\": -98592310,\n \"error\": \"aliquip laborum commodo culpa Ut\",\n \"exception\": \"aliqua\",\n \"message\": \"elit\",\n \"total_time_taken_in_millis\": 88471100,\n \"http_status\": \"411 LENGTH_REQUIRED\",\n \"items\": {\n  \"session_id\": \"ex cupidatat nostrud aliqua\",\n  \"error_message\": \"nostrud in eu aute minim\"\n },\n \"payload\": {\n  \"session_id\": \"dolor laborum magna\",\n  \"error_message\": \"minim cillum\"\n },\n \"trace_id\": \"est dolore fugiat reprehenderit\",\n \"page\": {\n  \"type\": \"laborum cillum qui\",\n  \"size\": 28764051,\n  \"current\": -14800672,\n  \"has_next\": true,\n  \"item_total\": 56208268,\n  \"next_id\": \"in ea\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "70fb3ce3-ac64-4170-b9cb-e256f6e473f8",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "69329f36-e402-4ea2-9aa8-1a1c8763f3e9",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1965-10-31T05:24:31.975Z\",\n \"status\": -4146780,\n \"error\": \"nisi velit\",\n \"exception\": \"nos\",\n \"message\": \"minim irure velit consectetur labore\",\n \"total_time_taken_in_millis\": 43622072,\n \"http_status\": \"500 INTERNAL_SERVER_ERROR\",\n \"items\": {\n  \"company_id\": 44034863,\n  \"integration_data\": {},\n  \"company_name\": \"velit dolore\",\n  \"task_details\": {\n   \"type\": -48833420,\n   \"group_list\": [\n    {\n     \"text\": \"pariatur deserunt\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ut cupidatat\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -63489931.72549839,\n   \"safe_stock\": -92776848,\n   \"period_threshold\": 82532624,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"officia laboris in non aliqua\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"laborum deserunt Lorem irure\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"ut deserunt aliquip nisi occaecat\",\n  \"alias\": \"velit tempor non Duis nisi\"\n },\n \"payload\": {\n  \"company_id\": -15105254,\n  \"integration_data\": {},\n  \"company_name\": \"enim ea veniam\",\n  \"task_details\": {\n   \"type\": -76305882,\n   \"group_list\": [\n    {\n     \"text\": \"dolo\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -67335441.99446495,\n   \"safe_stock\": -66800978,\n   \"period_threshold\": 95244026,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"irure est esse\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"exercitation sed repre\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"commodo consectetur aliquip nulla qui\",\n  \"alias\": \"sit cupidatat\"\n },\n \"trace_id\": \"voluptate ut dolor in non\",\n \"page\": {\n  \"type\": \"nisi dolore\",\n  \"size\": -50638484,\n  \"current\": -35852519,\n  \"has_next\": false,\n  \"item_total\": -41241634,\n  \"next_id\": \"dolor Lorem ipsum eu\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "82878de1-c65f-4e19-91b3-a30cb2ebae14",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1965-10-31T05:24:31.975Z\",\n \"status\": -4146780,\n \"error\": \"nisi velit\",\n \"exception\": \"nos\",\n \"message\": \"minim irure velit consectetur labore\",\n \"total_time_taken_in_millis\": 43622072,\n \"http_status\": \"500 INTERNAL_SERVER_ERROR\",\n \"items\": {\n  \"company_id\": 44034863,\n  \"integration_data\": {},\n  \"company_name\": \"velit dolore\",\n  \"task_details\": {\n   \"type\": -48833420,\n   \"group_list\": [\n    {\n     \"text\": \"pariatur deserunt\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ut cupidatat\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -63489931.72549839,\n   \"safe_stock\": -92776848,\n   \"period_threshold\": 82532624,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"officia laboris in non aliqua\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"laborum deserunt Lorem irure\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"ut deserunt aliquip nisi occaecat\",\n  \"alias\": \"velit tempor non Duis nisi\"\n },\n \"payload\": {\n  \"company_id\": -15105254,\n  \"integration_data\": {},\n  \"company_name\": \"enim ea veniam\",\n  \"task_details\": {\n   \"type\": -76305882,\n   \"group_list\": [\n    {\n     \"text\": \"dolo\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -67335441.99446495,\n   \"safe_stock\": -66800978,\n   \"period_threshold\": 95244026,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"irure est esse\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"exercitation sed repre\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"commodo consectetur aliquip nulla qui\",\n  \"alias\": \"sit cupidatat\"\n },\n \"trace_id\": \"voluptate ut dolor in non\",\n \"page\": {\n  \"type\": \"nisi dolore\",\n  \"size\": -50638484,\n  \"current\": -35852519,\n  \"has_next\": false,\n  \"item_total\": -41241634,\n  \"next_id\": \"dolor Lorem ipsum eu\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9d1e0648-3e9f-4044-916c-415575bc57ac",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1965-10-31T05:24:31.975Z\",\n \"status\": -4146780,\n \"error\": \"nisi velit\",\n \"exception\": \"nos\",\n \"message\": \"minim irure velit consectetur labore\",\n \"total_time_taken_in_millis\": 43622072,\n \"http_status\": \"500 INTERNAL_SERVER_ERROR\",\n \"items\": {\n  \"company_id\": 44034863,\n  \"integration_data\": {},\n  \"company_name\": \"velit dolore\",\n  \"task_details\": {\n   \"type\": -48833420,\n   \"group_list\": [\n    {\n     \"text\": \"pariatur deserunt\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ut cupidatat\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -63489931.72549839,\n   \"safe_stock\": -92776848,\n   \"period_threshold\": 82532624,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"officia laboris in non aliqua\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"laborum deserunt Lorem irure\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"ut deserunt aliquip nisi occaecat\",\n  \"alias\": \"velit tempor non Duis nisi\"\n },\n \"payload\": {\n  \"company_id\": -15105254,\n  \"integration_data\": {},\n  \"company_name\": \"enim ea veniam\",\n  \"task_details\": {\n   \"type\": -76305882,\n   \"group_list\": [\n    {\n     \"text\": \"dolo\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -67335441.99446495,\n   \"safe_stock\": -66800978,\n   \"period_threshold\": 95244026,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"irure est esse\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"exercitation sed repre\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"commodo consectetur aliquip nulla qui\",\n  \"alias\": \"sit cupidatat\"\n },\n \"trace_id\": \"voluptate ut dolor in non\",\n \"page\": {\n  \"type\": \"nisi dolore\",\n  \"size\": -50638484,\n  \"current\": -35852519,\n  \"has_next\": false,\n  \"item_total\": -41241634,\n  \"next_id\": \"dolor Lorem ipsum eu\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "0e515dc9-a04b-4c6f-8ae6-134e64bd10b5",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "c2c5fe26-378e-48ac-a4ae-3dd054846f65",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1957-03-13T13:34:58.747Z\",\n \"status\": -67414535,\n \"error\": \"adipisicing proident non ut\",\n \"exception\": \"cupidatat nulla velit\",\n \"message\": \"in\",\n \"total_time_taken_in_millis\": -89969145,\n \"http_status\": \"507 INSUFFICIENT_STORAGE\",\n \"items\": [\n  {\n   \"company_id\": -44587233,\n   \"integration_data\": {},\n   \"company_name\": \"cupidatat et est Duis\",\n   \"task_details\": {\n    \"type\": 27821582,\n    \"group_list\": [\n     {\n      \"text\": \"labore dolor ipsum enim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"adipisicing Excepteur enim mollit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 75167292.31057835,\n    \"safe_stock\": -19361432,\n    \"period_threshold\": -18646282,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"nisi reprehenderit amet\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eu tempor pariatur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"pariatur elit\",\n   \"alias\": \"non tempor culpa minim\"\n  },\n  {\n   \"company_id\": 33071625,\n   \"integration_data\": {},\n   \"company_name\": \"id \",\n   \"task_details\": {\n    \"type\": -42713067,\n    \"group_list\": [\n     {\n      \"text\": \"ullamco sed\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proident\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 81325804.39883167,\n    \"safe_stock\": -18856214,\n    \"period_threshold\": -35326516,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"Ut cupidatat tempor nisi\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"elit minim id\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"cupidatat cillum\",\n   \"alias\": \"cupidatat Ut ut anim dolore\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 5910914,\n   \"integration_data\": {},\n   \"company_name\": \"dolor deserunt consectetur veniam\",\n   \"task_details\": {\n    \"type\": 35185603,\n    \"group_list\": [\n     {\n      \"text\": \"officia\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cupidatat nostrud\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 31256604.443609253,\n    \"safe_stock\": -29834581,\n    \"period_threshold\": -27295347,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"velit in et\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sit sunt deserunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"anim ullamco quis proident\",\n   \"alias\": \"magna et dolore tempor\"\n  },\n  {\n   \"company_id\": -45056701,\n   \"integration_data\": {},\n   \"company_name\": \"id ea\",\n   \"task_details\": {\n    \"type\": -25027664,\n    \"group_list\": [\n     {\n      \"text\": \"exercitation Duis elit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"occaecat culpa est veniam\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 44859000.568095595,\n    \"safe_stock\": -84154267,\n    \"period_threshold\": -94270266,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"laborum exercitation\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"mollit dolore id amet\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sed est\",\n   \"alias\": \"nostrud\"\n  }\n ],\n \"trace_id\": \"dolor non\",\n \"page\": {\n  \"type\": \"sunt Duis\",\n  \"size\": -45135005,\n  \"current\": -62328532,\n  \"has_next\": true,\n  \"item_total\": -43067300,\n  \"next_id\": \"enim non\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1946dfea-e879-4312-96a5-d102fb015b16",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1963-04-06T07:42:00.316Z\",\n \"status\": 61790620,\n \"error\": \"incididunt cupidatat velit officia aliqua\",\n \"exception\": \"magna enim\",\n \"message\": \"pariatur et sunt con\",\n \"total_time_taken_in_millis\": 34924299,\n \"http_status\": \"101 SWITCHING_PROTOCOLS\",\n \"items\": [\n  {\n   \"company_id\": -10100018,\n   \"integration_data\": {},\n   \"company_name\": \"ex pariatur dolore\",\n   \"task_details\": {\n    \"type\": -17676976,\n    \"group_list\": [\n     {\n      \"text\": \"ut nulla\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sit elit sed eiusm\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 95160680.32700905,\n    \"safe_stock\": 18892409,\n    \"period_threshold\": 88815321,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"tempor nostrud reprehenderit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ipsum Excepteur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in ad et quis\",\n   \"alias\": \"cillum\"\n  },\n  {\n   \"company_id\": 6084854,\n   \"integration_data\": {},\n   \"company_name\": \"consequat sed consectetur\",\n   \"task_details\": {\n    \"type\": -18409072,\n    \"group_list\": [\n     {\n      \"text\": \"ad nulla\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"et\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -96908247.17235063,\n    \"safe_stock\": -944133,\n    \"period_threshold\": -32261381,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"Duis quis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"te\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"occaecat dolor sunt veniam aliquip\",\n   \"alias\": \"do adipisicing\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -16661801,\n   \"integration_data\": {},\n   \"company_name\": \"ad id dolore Duis nulla\",\n   \"task_details\": {\n    \"type\": -67015288,\n    \"group_list\": [\n     {\n      \"text\": \"aute veniam elit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ex dolore fugiat voluptate\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -55046096.92896962,\n    \"safe_stock\": 53063333,\n    \"period_threshold\": 9309209,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"irure sit \",\n      \"value\": {}\n     },\n     {\n      \"text\": \"culpa\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sit ut dolor\",\n   \"alias\": \"mollit consectetur\"\n  },\n  {\n   \"company_id\": 17528830,\n   \"integration_data\": {},\n   \"company_name\": \"aliqua ipsum ut qui\",\n   \"task_details\": {\n    \"type\": 14091017,\n    \"group_list\": [\n     {\n      \"text\": \"reprehenderit occaecat deserunt do\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"do\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -92141114.08669683,\n    \"safe_stock\": -57698220,\n    \"period_threshold\": 72368772,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"qui in nulla veniam\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sed qui amet\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in dolore deserunt Ex\",\n   \"alias\": \"in aliquip consectetur in\"\n  }\n ],\n \"trace_id\": \"incididunt non labore\",\n \"page\": {\n  \"type\": \"do velit sint fugiat\",\n  \"size\": -46053396,\n  \"current\": -9537775,\n  \"has_next\": false,\n  \"item_total\": 52307183,\n  \"next_id\": \"dolor irure adipisicing\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5fb814e5-d9c0-434f-bfbb-9e8f93766585",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1963-04-06T07:42:00.316Z\",\n \"status\": 61790620,\n \"error\": \"incididunt cupidatat velit officia aliqua\",\n \"exception\": \"magna enim\",\n \"message\": \"pariatur et sunt con\",\n \"total_time_taken_in_millis\": 34924299,\n \"http_status\": \"101 SWITCHING_PROTOCOLS\",\n \"items\": [\n  {\n   \"company_id\": -10100018,\n   \"integration_data\": {},\n   \"company_name\": \"ex pariatur dolore\",\n   \"task_details\": {\n    \"type\": -17676976,\n    \"group_list\": [\n     {\n      \"text\": \"ut nulla\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sit elit sed eiusm\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 95160680.32700905,\n    \"safe_stock\": 18892409,\n    \"period_threshold\": 88815321,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"tempor nostrud reprehenderit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ipsum Excepteur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in ad et quis\",\n   \"alias\": \"cillum\"\n  },\n  {\n   \"company_id\": 6084854,\n   \"integration_data\": {},\n   \"company_name\": \"consequat sed consectetur\",\n   \"task_details\": {\n    \"type\": -18409072,\n    \"group_list\": [\n     {\n      \"text\": \"ad nulla\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"et\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -96908247.17235063,\n    \"safe_stock\": -944133,\n    \"period_threshold\": -32261381,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"Duis quis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"te\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"occaecat dolor sunt veniam aliquip\",\n   \"alias\": \"do adipisicing\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -16661801,\n   \"integration_data\": {},\n   \"company_name\": \"ad id dolore Duis nulla\",\n   \"task_details\": {\n    \"type\": -67015288,\n    \"group_list\": [\n     {\n      \"text\": \"aute veniam elit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ex dolore fugiat voluptate\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -55046096.92896962,\n    \"safe_stock\": 53063333,\n    \"period_threshold\": 9309209,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"irure sit \",\n      \"value\": {}\n     },\n     {\n      \"text\": \"culpa\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sit ut dolor\",\n   \"alias\": \"mollit consectetur\"\n  },\n  {\n   \"company_id\": 17528830,\n   \"integration_data\": {},\n   \"company_name\": \"aliqua ipsum ut qui\",\n   \"task_details\": {\n    \"type\": 14091017,\n    \"group_list\": [\n     {\n      \"text\": \"reprehenderit occaecat deserunt do\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"do\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -92141114.08669683,\n    \"safe_stock\": -57698220,\n    \"period_threshold\": 72368772,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"qui in nulla veniam\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sed qui amet\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in dolore deserunt Ex\",\n   \"alias\": \"in aliquip consectetur in\"\n  }\n ],\n \"trace_id\": \"incididunt non labore\",\n \"page\": {\n  \"type\": \"do velit sint fugiat\",\n  \"size\": -46053396,\n  \"current\": -9537775,\n  \"has_next\": false,\n  \"item_total\": 52307183,\n  \"next_id\": \"dolor irure adipisicing\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "5331d7d6-9521-429b-9e17-52804a8375df",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "bb3b2d8c-c2c5-4b58-bed0-2850e5ecb7be",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1999-07-27T03:01:33.846Z\",\n \"status\": 90698730,\n \"error\": \"ex aute enim i\",\n \"exception\": \"qui nulla\",\n \"message\": \"esse veniam voluptate\",\n \"total_time_taken_in_millis\": -85794869,\n \"http_status\": \"301 MOVED_PERMANENTLY\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"ut quis dolor ad volup\",\n \"page\": {\n  \"type\": \"amet quis\",\n  \"size\": -37603659,\n  \"current\": -52531163,\n  \"has_next\": false,\n  \"item_total\": -10858184,\n  \"next_id\": \"deserunt\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c10d112a-2247-4cfd-bce1-8d533fa9c87b",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1999-07-27T03:01:33.846Z\",\n \"status\": 90698730,\n \"error\": \"ex aute enim i\",\n \"exception\": \"qui nulla\",\n \"message\": \"esse veniam voluptate\",\n \"total_time_taken_in_millis\": -85794869,\n \"http_status\": \"301 MOVED_PERMANENTLY\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"ut quis dolor ad volup\",\n \"page\": {\n  \"type\": \"amet quis\",\n  \"size\": -37603659,\n  \"current\": -52531163,\n  \"has_next\": false,\n  \"item_total\": -10858184,\n  \"next_id\": \"deserunt\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e4035c28-d482-44ab-95c7-4dc31e7fc367",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1999-07-27T03:01:33.846Z\",\n \"status\": 90698730,\n \"error\": \"ex aute enim i\",\n \"exception\": \"qui nulla\",\n \"message\": \"esse veniam voluptate\",\n \"total_time_taken_in_millis\": -85794869,\n \"http_status\": \"301 MOVED_PERMANENTLY\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"ut quis dolor ad volup\",\n \"page\": {\n  \"type\": \"amet quis\",\n  \"size\": -37603659,\n  \"current\": -52531163,\n  \"has_next\": false,\n  \"item_total\": -10858184,\n  \"next_id\": \"deserunt\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "6133901f-1bf4-4aa4-8d5e-70e2e6ecc3c5",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "fa8ced61-91c4-47f4-9a4f-2a356dec8129",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1991-12-27T09:50:32.750Z\",\n \"status\": -96095185,\n \"error\": \"qui in\",\n \"exception\": \"enim dolore eu\",\n \"message\": \"eiusmod sunt commodo officia\",\n \"total_time_taken_in_millis\": -80501016,\n \"http_status\": \"511 NETWORK_AUTHENTICATION_REQUIRED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ad deserunt\",\n \"page\": {\n  \"type\": \"magna ipsum\",\n  \"size\": -46684760,\n  \"current\": -50592162,\n  \"has_next\": false,\n  \"item_total\": 7379850,\n  \"next_id\": \"non qui amet\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a92eb607-9948-4d69-b6d4-0e2176e07f8b",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1991-12-27T09:50:32.750Z\",\n \"status\": -96095185,\n \"error\": \"qui in\",\n \"exception\": \"enim dolore eu\",\n \"message\": \"eiusmod sunt commodo officia\",\n \"total_time_taken_in_millis\": -80501016,\n \"http_status\": \"511 NETWORK_AUTHENTICATION_REQUIRED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ad deserunt\",\n \"page\": {\n  \"type\": \"magna ipsum\",\n  \"size\": -46684760,\n  \"current\": -50592162,\n  \"has_next\": false,\n  \"item_total\": 7379850,\n  \"next_id\": \"non qui amet\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "6c6fc821-9adc-48f5-b1da-fe2289cf8144",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1991-12-27T09:50:32.750Z\",\n \"status\": -96095185,\n \"error\": \"qui in\",\n \"exception\": \"enim dolore eu\",\n \"message\": \"eiusmod sunt commodo officia\",\n \"total_time_taken_in_millis\": -80501016,\n \"http_status\": \"511 NETWORK_AUTHENTICATION_REQUIRED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ad deserunt\",\n \"page\": {\n  \"type\": \"magna ipsum\",\n  \"size\": -46684760,\n  \"current\": -50592162,\n  \"has_next\": false,\n  \"item_total\": 7379850,\n  \"next_id\": \"non qui amet\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "eb2fd155-ef2b-4231-b82e-49c3109f0e29",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1991-12-27T09:50:32.750Z\",\n \"status\": -96095185,\n \"error\": \"qui in\",\n \"exception\": \"enim dolore eu\",\n \"message\": \"eiusmod sunt commodo officia\",\n \"total_time_taken_in_millis\": -80501016,\n \"http_status\": \"511 NETWORK_AUTHENTICATION_REQUIRED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ad deserunt\",\n \"page\": {\n  \"type\": \"magna ipsum\",\n  \"size\": -46684760,\n  \"current\": -50592162,\n  \"has_next\": false,\n  \"item_total\": 7379850,\n  \"next_id\": \"non qui amet\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "6bbfe28d-97a3-44ab-9adc-25c7961cecfe",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1991-12-27T09:50:32.750Z\",\n \"status\": -96095185,\n \"error\": \"qui in\",\n \"exception\": \"enim dolore eu\",\n \"message\": \"eiusmod sunt commodo officia\",\n \"total_time_taken_in_millis\": -80501016,\n \"http_status\": \"511 NETWORK_AUTHENTICATION_REQUIRED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ad deserunt\",\n \"page\": {\n  \"type\": \"magna ipsum\",\n  \"size\": -46684760,\n  \"current\": -50592162,\n  \"has_next\": false,\n  \"item_total\": 7379850,\n  \"next_id\": \"non qui amet\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx1.de"
    }
  ],
  "info": {
    "_postman_id": "c8e1ef1d-24c0-450d-8800-3b84a51acd62",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
