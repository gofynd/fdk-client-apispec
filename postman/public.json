{
  "item": [
    {
      "id": "c4c9311f-6663-4c10-a608-7497df28badb",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "be6aa782-eda8-4f28-91b6-787e56e981cb",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "242b6859-c5c8-4d4f-b1d8-c8c986127f8b",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "occaecat eu",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "727daef1-cdbf-4d75-a51d-e1a3a5a08a8f",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "occaecat eu",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "3bba4826-bcbf-42aa-9e29-8b4e1647b3dc",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "occaecat eu",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "a4019bf2-8bcb-4615-ad55-152ede7b41f8",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "96f4edf7-eb4f-44dc-8a5c-adfb9e8fc206",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "02bc064f-4d2d-4d30-8284-6bb9cea26366",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "99ac1612-2a07-4f54-a6f1-132df7a07c14",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "17a8b876-aa6b-43c6-a951-633dd6b24fc2",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -66832533,\n   \"event_name\": \"eu irure minim cupidatat\",\n   \"event_type\": \"laboris\",\n   \"event_category\": \"consectetur aute\",\n   \"version\": \"magna mollit incididunt anim\",\n   \"display_name\": \"ipsum\",\n   \"description\": \"ut fugiat reprehenderit\",\n   \"created_on\": \"tempor Duis\"\n  },\n  {\n   \"id\": 1404286,\n   \"event_name\": \"proident ipsum aliquip\",\n   \"event_type\": \"cillum ea\",\n   \"event_category\": \"culpa\",\n   \"version\": \"consectetur sunt consequat\",\n   \"display_name\": \"in reprehenderit do\",\n   \"description\": \"do aliquip sit\",\n   \"created_on\": \"eu\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "fee588c3-0970-4d34-8485-47e01189e126",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "9b5ea60e-806b-48e0-8a56-2417029333b5",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 79472245,\n   \"event_name\": \"est fugiat non\",\n   \"event_type\": \"eiusmod Ut\",\n   \"event_category\": \"proident fugiat pariatur\",\n   \"version\": \"commodo\",\n   \"display_name\": \"deserunt adipisicing do reprehenderit magna\",\n   \"description\": \"incididunt\",\n   \"created_on\": \"amet\"\n  },\n  {\n   \"id\": 2254474,\n   \"event_name\": \"deserunt\",\n   \"event_type\": \"ad\",\n   \"event_category\": \"ipsum sint culpa aliqua mollit\",\n   \"version\": \"incididunt velit\",\n   \"display_name\": \"Ut ad labore fugiat\",\n   \"description\": \"dolore occaecat nostrud\",\n   \"created_on\": \"in ullamco deserunt Excepteur\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "e587821a-084d-4497-b363-1bb72ad0e4e8",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "149fb2c6-a46c-43c6-94c9-508d7604e73d",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "3b18f389-de75-4578-ac7b-1056e8e3fe85",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2008-08-09T21:33:53.764Z\",\n \"status\": -82741529,\n \"error\": \"esse \",\n \"exception\": \"est\",\n \"message\": \"occaecat\",\n \"total_time_taken_in_millis\": -64058336,\n \"http_status\": \"500 INTERNAL_SERVER_ERROR\",\n \"items\": [\n  {\n   \"company_id\": -79700410,\n   \"integration_data\": {},\n   \"company_name\": \"eiusmod\",\n   \"task_details\": {\n    \"type\": -13395772,\n    \"group_list\": [\n     {\n      \"text\": \"nostrud esse in adipisicing officia\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"mollit tempor id\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 49265057.33718532,\n    \"safe_stock\": 61178468,\n    \"period_threshold\": 34682792,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"adipisicing amet pariatur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"do officia cillum Duis dolore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"reprehenderit\",\n   \"alias\": \"magna\"\n  },\n  {\n   \"company_id\": -10623220,\n   \"integration_data\": {},\n   \"company_name\": \"a\",\n   \"task_details\": {\n    \"type\": 18137362,\n    \"group_list\": [\n     {\n      \"text\": \"sed reprehenderit ut pariatur consectetur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut adipisicing amet\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -98768791.96477781,\n    \"safe_stock\": -5387506,\n    \"period_threshold\": -96280169,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"mollit eu elit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ullamco fugiat cupidatat consectetur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"nulla enim dolor laborum nostrud\",\n   \"alias\": \"deserunt dolore\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -55181880,\n   \"integration_data\": {},\n   \"company_name\": \"nisi veniam\",\n   \"task_details\": {\n    \"type\": 82117187,\n    \"group_list\": [\n     {\n      \"text\": \"non in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"est dolore ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 57995131.89255583,\n    \"safe_stock\": -90812066,\n    \"period_threshold\": -53734821,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"in Duis sint\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ipsum Ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sed in Lorem quis labore\",\n   \"alias\": \"culpa sit occaecat\"\n  },\n  {\n   \"company_id\": -37153557,\n   \"integration_data\": {},\n   \"company_name\": \"eiusmod in cupidatat occaecat\",\n   \"task_details\": {\n    \"type\": -33023192,\n    \"group_list\": [\n     {\n      \"text\": \"in eiusmod est labore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"velit sint\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -75299328.09626287,\n    \"safe_stock\": 30564586,\n    \"period_threshold\": 62141933,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"esse\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"id Duis consectetur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in commodo\",\n   \"alias\": \"culpa deserunt\"\n  }\n ],\n \"trace_id\": \"Lorem\",\n \"page\": {\n  \"type\": \"et sit\",\n  \"size\": -23766631,\n  \"current\": -4835502,\n  \"has_next\": false,\n  \"item_total\": 37668724,\n  \"next_id\": \"qui veniam dolor elit\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "64e81441-81aa-4be5-91e1-b0343aa28a4e",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2005-08-13T00:08:35.954Z\",\n \"status\": -69049531,\n \"error\": \"id quis in ad do\",\n \"exception\": \"\",\n \"message\": \"culpa incididunt mollit aliquip aliqua\",\n \"total_time_taken_in_millis\": -91267064,\n \"http_status\": \"226 IM_USED\",\n \"items\": [\n  {\n   \"company_id\": 64878643,\n   \"integration_data\": {},\n   \"company_name\": \"dolore\",\n   \"task_details\": {\n    \"type\": -30216219,\n    \"group_list\": [\n     {\n      \"text\": \"sit consequat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -48457185.580373354,\n    \"safe_stock\": -58574860,\n    \"period_threshold\": -26408969,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"Excepteur veniam consectetur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sit aliqua consectetur in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ut consectetur exercitation\",\n   \"alias\": \"quis nulla\"\n  },\n  {\n   \"company_id\": 5558489,\n   \"integration_data\": {},\n   \"company_name\": \"sunt eiusmod cillum\",\n   \"task_details\": {\n    \"type\": 28928252,\n    \"group_list\": [\n     {\n      \"text\": \"esse ullamco sunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ex esse in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 43332248.17298812,\n    \"safe_stock\": 14688139,\n    \"period_threshold\": -3146276,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"deserunt magna\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consequat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"pariatur cillum aliquip\",\n   \"alias\": \"qui\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -40876655,\n   \"integration_data\": {},\n   \"company_name\": \"velit dolore cupidatat consequat\",\n   \"task_details\": {\n    \"type\": -34130719,\n    \"group_list\": [\n     {\n      \"text\": \"deserunt v\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eiusmod labore esse cupidatat ea\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 22263847.918626875,\n    \"safe_stock\": -91820747,\n    \"period_threshold\": -15812410,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"labore nostrud eu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"exercitation nisi\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sunt cupidatat do\",\n   \"alias\": \"cupidatat\"\n  },\n  {\n   \"company_id\": 34664592,\n   \"integration_data\": {},\n   \"company_name\": \"anim ea commodo aute ipsum\",\n   \"task_details\": {\n    \"type\": -29602636,\n    \"group_list\": [\n     {\n      \"text\": \"aliqua ut dolor et\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Duis ven\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -60856444.797681995,\n    \"safe_stock\": 55371853,\n    \"period_threshold\": -28120021,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"labore do incididunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore laborum sit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aute enim\",\n   \"alias\": \"enim\"\n  }\n ],\n \"trace_id\": \"Lorem in incididunt\",\n \"page\": {\n  \"type\": \"sit dolore anim deserunt\",\n  \"size\": -1890495,\n  \"current\": -32905639,\n  \"has_next\": false,\n  \"item_total\": 34539425,\n  \"next_id\": \"sed in dolor voluptate\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "231786d9-91ad-40d1-bc99-b9f444c609a0",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2005-08-13T00:08:35.954Z\",\n \"status\": -69049531,\n \"error\": \"id quis in ad do\",\n \"exception\": \"\",\n \"message\": \"culpa incididunt mollit aliquip aliqua\",\n \"total_time_taken_in_millis\": -91267064,\n \"http_status\": \"226 IM_USED\",\n \"items\": [\n  {\n   \"company_id\": 64878643,\n   \"integration_data\": {},\n   \"company_name\": \"dolore\",\n   \"task_details\": {\n    \"type\": -30216219,\n    \"group_list\": [\n     {\n      \"text\": \"sit consequat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -48457185.580373354,\n    \"safe_stock\": -58574860,\n    \"period_threshold\": -26408969,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"Excepteur veniam consectetur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sit aliqua consectetur in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ut consectetur exercitation\",\n   \"alias\": \"quis nulla\"\n  },\n  {\n   \"company_id\": 5558489,\n   \"integration_data\": {},\n   \"company_name\": \"sunt eiusmod cillum\",\n   \"task_details\": {\n    \"type\": 28928252,\n    \"group_list\": [\n     {\n      \"text\": \"esse ullamco sunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ex esse in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 43332248.17298812,\n    \"safe_stock\": 14688139,\n    \"period_threshold\": -3146276,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"deserunt magna\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consequat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"pariatur cillum aliquip\",\n   \"alias\": \"qui\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -40876655,\n   \"integration_data\": {},\n   \"company_name\": \"velit dolore cupidatat consequat\",\n   \"task_details\": {\n    \"type\": -34130719,\n    \"group_list\": [\n     {\n      \"text\": \"deserunt v\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eiusmod labore esse cupidatat ea\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 22263847.918626875,\n    \"safe_stock\": -91820747,\n    \"period_threshold\": -15812410,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"labore nostrud eu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"exercitation nisi\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sunt cupidatat do\",\n   \"alias\": \"cupidatat\"\n  },\n  {\n   \"company_id\": 34664592,\n   \"integration_data\": {},\n   \"company_name\": \"anim ea commodo aute ipsum\",\n   \"task_details\": {\n    \"type\": -29602636,\n    \"group_list\": [\n     {\n      \"text\": \"aliqua ut dolor et\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Duis ven\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -60856444.797681995,\n    \"safe_stock\": 55371853,\n    \"period_threshold\": -28120021,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"labore do incididunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore laborum sit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aute enim\",\n   \"alias\": \"enim\"\n  }\n ],\n \"trace_id\": \"Lorem in incididunt\",\n \"page\": {\n  \"type\": \"sit dolore anim deserunt\",\n  \"size\": -1890495,\n  \"current\": -32905639,\n  \"has_next\": false,\n  \"item_total\": 34539425,\n  \"next_id\": \"sed in dolor voluptate\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "b74d3774-8852-44e0-8ed4-c4eea5cb5138",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "acfae0eb-3761-4b2f-92e6-340e2d864ff4",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1959-01-31T07:40:29.139Z\",\n \"status\": 74912445,\n \"error\": \"laboris dolore ex do\",\n \"exception\": \"nulla\",\n \"message\": \"commodo enim\",\n \"total_time_taken_in_millis\": -82582389,\n \"http_status\": \"204 NO_CONTENT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"exercitation nisi pariatur dolore\",\n \"page\": {\n  \"type\": \"ut dolor\",\n  \"size\": -5060124,\n  \"current\": -76463931,\n  \"has_next\": false,\n  \"item_total\": 84299530,\n  \"next_id\": \"qui\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "446b49b1-c61e-4a5b-ac20-6af9859ae066",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1959-01-31T07:40:29.139Z\",\n \"status\": 74912445,\n \"error\": \"laboris dolore ex do\",\n \"exception\": \"nulla\",\n \"message\": \"commodo enim\",\n \"total_time_taken_in_millis\": -82582389,\n \"http_status\": \"204 NO_CONTENT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"exercitation nisi pariatur dolore\",\n \"page\": {\n  \"type\": \"ut dolor\",\n  \"size\": -5060124,\n  \"current\": -76463931,\n  \"has_next\": false,\n  \"item_total\": 84299530,\n  \"next_id\": \"qui\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3f9e499e-db43-4c6e-86ca-30f3d8f55258",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1959-01-31T07:40:29.139Z\",\n \"status\": 74912445,\n \"error\": \"laboris dolore ex do\",\n \"exception\": \"nulla\",\n \"message\": \"commodo enim\",\n \"total_time_taken_in_millis\": -82582389,\n \"http_status\": \"204 NO_CONTENT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"exercitation nisi pariatur dolore\",\n \"page\": {\n  \"type\": \"ut dolor\",\n  \"size\": -5060124,\n  \"current\": -76463931,\n  \"has_next\": false,\n  \"item_total\": 84299530,\n  \"next_id\": \"qui\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "6724cef0-9252-42cc-a6b6-7aaafa1269f4",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "005e1f46-ecc9-415d-9d71-9b01f480f6d5",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1989-03-10T20:52:55.344Z\",\n \"status\": 11604294,\n \"error\": \"Duis ut proident\",\n \"exception\": \"eu fugiat ullamco cillum\",\n \"message\": \"cillum irure dolore aliqua\",\n \"total_time_taken_in_millis\": 3265293,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"aute sit exercitation ut sed\",\n \"page\": {\n  \"type\": \"mollit dolor veniam quis\",\n  \"size\": 98673966,\n  \"current\": 47106143,\n  \"has_next\": false,\n  \"item_total\": 33640844,\n  \"next_id\": \"nulla consequat \",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "64a4588b-c72f-4b03-8be3-6f4d9b09a3cd",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1989-03-10T20:52:55.344Z\",\n \"status\": 11604294,\n \"error\": \"Duis ut proident\",\n \"exception\": \"eu fugiat ullamco cillum\",\n \"message\": \"cillum irure dolore aliqua\",\n \"total_time_taken_in_millis\": 3265293,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"aute sit exercitation ut sed\",\n \"page\": {\n  \"type\": \"mollit dolor veniam quis\",\n  \"size\": 98673966,\n  \"current\": 47106143,\n  \"has_next\": false,\n  \"item_total\": 33640844,\n  \"next_id\": \"nulla consequat \",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "8001ad9a-2b21-4638-86d6-03124e561892",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1989-03-10T20:52:55.344Z\",\n \"status\": 11604294,\n \"error\": \"Duis ut proident\",\n \"exception\": \"eu fugiat ullamco cillum\",\n \"message\": \"cillum irure dolore aliqua\",\n \"total_time_taken_in_millis\": 3265293,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"aute sit exercitation ut sed\",\n \"page\": {\n  \"type\": \"mollit dolor veniam quis\",\n  \"size\": 98673966,\n  \"current\": 47106143,\n  \"has_next\": false,\n  \"item_total\": 33640844,\n  \"next_id\": \"nulla consequat \",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ae8fd00e-4bcb-4940-a383-9b48dca427bf",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1989-03-10T20:52:55.344Z\",\n \"status\": 11604294,\n \"error\": \"Duis ut proident\",\n \"exception\": \"eu fugiat ullamco cillum\",\n \"message\": \"cillum irure dolore aliqua\",\n \"total_time_taken_in_millis\": 3265293,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"aute sit exercitation ut sed\",\n \"page\": {\n  \"type\": \"mollit dolor veniam quis\",\n  \"size\": 98673966,\n  \"current\": 47106143,\n  \"has_next\": false,\n  \"item_total\": 33640844,\n  \"next_id\": \"nulla consequat \",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "04c22999-3365-42fe-b9be-23fd0cbcad77",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1989-03-10T20:52:55.344Z\",\n \"status\": 11604294,\n \"error\": \"Duis ut proident\",\n \"exception\": \"eu fugiat ullamco cillum\",\n \"message\": \"cillum irure dolore aliqua\",\n \"total_time_taken_in_millis\": 3265293,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"aute sit exercitation ut sed\",\n \"page\": {\n  \"type\": \"mollit dolor veniam quis\",\n  \"size\": 98673966,\n  \"current\": 47106143,\n  \"has_next\": false,\n  \"item_total\": 33640844,\n  \"next_id\": \"nulla consequat \",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx0.de"
    }
  ],
  "info": {
    "_postman_id": "f18dc8c5-ffbe-4cec-9602-9da0c2612e22",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
