{
  "item": [
    {
      "id": "425dab0f-a9f8-48b5-90d3-d9546216e472",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "8f75fbd8-0586-47fa-973f-ad2b4ec076b8",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "63005c27-09f5-4fec-95ca-24c6c095b8f6",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "consequat enim cillum aute v",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f65c0acf-8b19-45c9-b391-0a45acf54e2a",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "consequat enim cillum aute v",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "0abc3952-6ac1-4b41-98db-f31db0dad639",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "consequat enim cillum aute v",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "8f118eac-046b-4503-a5ec-294da0c699ae",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "0d06b669-ae3c-4e44-92e9-11c946665edf",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "769c7a8d-6dfb-4da2-8a01-c16cacc131a9",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "a59b0a73-d482-4362-ad14-4fcede34231f",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "00347361-d7fc-4980-bb74-5911086d2a3d",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -49506100,\n   \"event_name\": \"ipsum aliquip ut commodo ea\",\n   \"event_type\": \"laborum sint sunt\",\n   \"event_category\": \"esse amet ullamco\",\n   \"version\": \"est officia ut proident\",\n   \"display_name\": \"in occaecat cons\",\n   \"description\": \"qui quis culpa\",\n   \"created_on\": \"nostrud\"\n  },\n  {\n   \"id\": 39970728,\n   \"event_name\": \"eiusmod id adipisicing dolor irure\",\n   \"event_type\": \"dolore adipisicing au\",\n   \"event_category\": \"dolor adipisicing occaecat\",\n   \"version\": \"id exercitation voluptate adipisicing\",\n   \"display_name\": \"minim aliqua dolor do mollit\",\n   \"description\": \"nisi sint reprehenderit mollit\",\n   \"created_on\": \"Ut minim incididunt dolore\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "cd1649ce-4034-41a3-838a-9ea032a0ba74",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "6d8c352b-cec5-4597-8f0d-ce6bc94e8002",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 76319648,\n   \"event_name\": \"ea qui Excepteur irure deserunt\",\n   \"event_type\": \"veniam in\",\n   \"event_category\": \"eiusmod elit incididunt\",\n   \"version\": \"occaecat ullamco non irure\",\n   \"display_name\": \"aliqua consectetur velit ipsum\",\n   \"description\": \"nostrud in \",\n   \"created_on\": \"dolore irure esse\"\n  },\n  {\n   \"id\": -42551014,\n   \"event_name\": \"t\",\n   \"event_type\": \"in nostrud\",\n   \"event_category\": \"ullamco mollit sit in\",\n   \"version\": \"dolore Excepteur magna\",\n   \"display_name\": \"cupidatat in voluptate minim\",\n   \"description\": \"ut\",\n   \"created_on\": \"laborum sunt\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "0e1e8eec-67e4-4a60-9dc3-4a0475385fb0",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "9e90a97a-51f9-46d0-a131-0d47c0068512",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "c50909ab-4682-4895-a056-44aa9b17a24c",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2015-08-07T16:53:54.622Z\",\n \"status\": -11934240,\n \"error\": \"ullamco veniam irure in qui\",\n \"exception\": \"pariatur\",\n \"message\": \"qui tempor\",\n \"total_time_taken_in_millis\": -28942500,\n \"http_status\": \"411 LENGTH_REQUIRED\",\n \"items\": [\n  {\n   \"company_id\": -22326825,\n   \"integration_data\": {},\n   \"company_name\": \"quis aliqua in qui ex\",\n   \"task_details\": {\n    \"type\": 46134125,\n    \"group_list\": [\n     {\n      \"text\": \"culpa quis labore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"enim officia pariatur in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -84708288.50887981,\n    \"safe_stock\": -78981185,\n    \"period_threshold\": -62208682,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"labore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"quis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Ut deserunt Ex\",\n   \"alias\": \"Lorem consequat Duis ipsum\"\n  },\n  {\n   \"company_id\": -6111609,\n   \"integration_data\": {},\n   \"company_name\": \"ipsum esse sunt officia\",\n   \"task_details\": {\n    \"type\": -89851055,\n    \"group_list\": [\n     {\n      \"text\": \"commodo elit Ut dolore adipisicing\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute adipisic\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 49555355.609156996,\n    \"safe_stock\": 63951231,\n    \"period_threshold\": -63708369,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"in ut est\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"exercitation minim pariatur eu\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"occaecat Lorem magna velit do\",\n   \"alias\": \"do proident aliquip dolor\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 32145081,\n   \"integration_data\": {},\n   \"company_name\": \"tempor eu\",\n   \"task_details\": {\n    \"type\": -73147642,\n    \"group_list\": [\n     {\n      \"text\": \"culpa incididunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"officia exercitation irure\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 68336687.01941562,\n    \"safe_stock\": -17872129,\n    \"period_threshold\": -96040528,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"officia\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"fugiat consectetur Excepteur ex eiusmod\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"anim\",\n   \"alias\": \"culpa laborum adipisicing\"\n  },\n  {\n   \"company_id\": 67913888,\n   \"integration_data\": {},\n   \"company_name\": \"occaecat dolore esse Duis ex\",\n   \"task_details\": {\n    \"type\": -26177884,\n    \"group_list\": [\n     {\n      \"text\": \"eiusmod incididunt do commodo\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut fugiat in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -39625631.18503497,\n    \"safe_stock\": -51477887,\n    \"period_threshold\": 30007812,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"proident anim laboris cillum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nulla Ut minim cu\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"occaecat laboris nisi\",\n   \"alias\": \"dolore officia ad ea\"\n  }\n ],\n \"trace_id\": \"cillum eiusmod\",\n \"page\": {\n  \"type\": \"nostrud ea\",\n  \"size\": 57606342,\n  \"current\": 62669292,\n  \"has_next\": true,\n  \"item_total\": -48933412,\n  \"next_id\": \"ullamco pariatur ex Duis\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "4e016755-355e-4f1f-b653-501c621e43e6",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1970-06-22T02:21:12.210Z\",\n \"status\": -49181484,\n \"error\": \"eu veniam cillum\",\n \"exception\": \"ipsum aliqua\",\n \"message\": \"laboris sit reprehenderit in nulla\",\n \"total_time_taken_in_millis\": 64237231,\n \"http_status\": \"407 PROXY_AUTHENTICATION_REQUIRED\",\n \"items\": [\n  {\n   \"company_id\": -9139744,\n   \"integration_data\": {},\n   \"company_name\": \"sit id\",\n   \"task_details\": {\n    \"type\": -61158725,\n    \"group_list\": [\n     {\n      \"text\": \"dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Excepteur labore do\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -70408790.34736602,\n    \"safe_stock\": -59376460,\n    \"period_threshold\": 58803651,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolore in dolor eu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliquip incididunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"nostrud culpa dolore\",\n   \"alias\": \"aute minim proident\"\n  },\n  {\n   \"company_id\": 49023379,\n   \"integration_data\": {},\n   \"company_name\": \"aliqua non sunt laboris\",\n   \"task_details\": {\n    \"type\": -93032585,\n    \"group_list\": [\n     {\n      \"text\": \"minim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"id anim sunt in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 97411376.18200994,\n    \"safe_stock\": 51619120,\n    \"period_threshold\": -75769236,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"cillum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ea ad aliquip nostrud magna\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"adipisicing magna\",\n   \"alias\": \"voluptate veniam et dolore velit\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -77714258,\n   \"integration_data\": {},\n   \"company_name\": \"velit cupidatat reprehenderit Excepteur\",\n   \"task_details\": {\n    \"type\": -18505253,\n    \"group_list\": [\n     {\n      \"text\": \"veniam deserunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proident in tempor eu incididunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 47458839.650057435,\n    \"safe_stock\": 95340966,\n    \"period_threshold\": -51115773,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"qui cupidatat amet\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"labore aute sed quis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ipsum aliquip\",\n   \"alias\": \"in nulla\"\n  },\n  {\n   \"company_id\": 29869726,\n   \"integration_data\": {},\n   \"company_name\": \"pariatur\",\n   \"task_details\": {\n    \"type\": 97493564,\n    \"group_list\": [\n     {\n      \"text\": \"velit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"do amet\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -4678656.5964960605,\n    \"safe_stock\": 47313011,\n    \"period_threshold\": -63063585,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"aliqua incididunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Excepteur ut voluptate\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ut aliqua officia do minim\",\n   \"alias\": \"labo\"\n  }\n ],\n \"trace_id\": \"laborum Ut cillum esse\",\n \"page\": {\n  \"type\": \"officia proident incididunt dolor\",\n  \"size\": -19591887,\n  \"current\": -85137428,\n  \"has_next\": true,\n  \"item_total\": 25323041,\n  \"next_id\": \"ea Lorem\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b56d3f69-27df-4a5d-9c09-f2d256a459ea",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1970-06-22T02:21:12.210Z\",\n \"status\": -49181484,\n \"error\": \"eu veniam cillum\",\n \"exception\": \"ipsum aliqua\",\n \"message\": \"laboris sit reprehenderit in nulla\",\n \"total_time_taken_in_millis\": 64237231,\n \"http_status\": \"407 PROXY_AUTHENTICATION_REQUIRED\",\n \"items\": [\n  {\n   \"company_id\": -9139744,\n   \"integration_data\": {},\n   \"company_name\": \"sit id\",\n   \"task_details\": {\n    \"type\": -61158725,\n    \"group_list\": [\n     {\n      \"text\": \"dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Excepteur labore do\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -70408790.34736602,\n    \"safe_stock\": -59376460,\n    \"period_threshold\": 58803651,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolore in dolor eu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliquip incididunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"nostrud culpa dolore\",\n   \"alias\": \"aute minim proident\"\n  },\n  {\n   \"company_id\": 49023379,\n   \"integration_data\": {},\n   \"company_name\": \"aliqua non sunt laboris\",\n   \"task_details\": {\n    \"type\": -93032585,\n    \"group_list\": [\n     {\n      \"text\": \"minim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"id anim sunt in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 97411376.18200994,\n    \"safe_stock\": 51619120,\n    \"period_threshold\": -75769236,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"cillum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ea ad aliquip nostrud magna\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"adipisicing magna\",\n   \"alias\": \"voluptate veniam et dolore velit\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -77714258,\n   \"integration_data\": {},\n   \"company_name\": \"velit cupidatat reprehenderit Excepteur\",\n   \"task_details\": {\n    \"type\": -18505253,\n    \"group_list\": [\n     {\n      \"text\": \"veniam deserunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proident in tempor eu incididunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 47458839.650057435,\n    \"safe_stock\": 95340966,\n    \"period_threshold\": -51115773,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"qui cupidatat amet\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"labore aute sed quis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ipsum aliquip\",\n   \"alias\": \"in nulla\"\n  },\n  {\n   \"company_id\": 29869726,\n   \"integration_data\": {},\n   \"company_name\": \"pariatur\",\n   \"task_details\": {\n    \"type\": 97493564,\n    \"group_list\": [\n     {\n      \"text\": \"velit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"do amet\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -4678656.5964960605,\n    \"safe_stock\": 47313011,\n    \"period_threshold\": -63063585,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"aliqua incididunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Excepteur ut voluptate\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ut aliqua officia do minim\",\n   \"alias\": \"labo\"\n  }\n ],\n \"trace_id\": \"laborum Ut cillum esse\",\n \"page\": {\n  \"type\": \"officia proident incididunt dolor\",\n  \"size\": -19591887,\n  \"current\": -85137428,\n  \"has_next\": true,\n  \"item_total\": 25323041,\n  \"next_id\": \"ea Lorem\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "181bbea3-9918-4b31-b7a8-d13fc3711d74",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "2139d84e-a693-43dc-a304-f0e5351fa9e4",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1992-09-18T12:45:33.124Z\",\n \"status\": 92437837,\n \"error\": \"nisi ullamco dolore\",\n \"exception\": \"dolore non Lorem\",\n \"message\": \"laboris elit\",\n \"total_time_taken_in_millis\": -63261644,\n \"http_status\": \"508 LOOP_DETECTED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"nulla\",\n \"page\": {\n  \"type\": \"sit aliquip\",\n  \"size\": -2528636,\n  \"current\": -18968882,\n  \"has_next\": false,\n  \"item_total\": -2763807,\n  \"next_id\": \"adipisicing cillum anim l\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b78ab742-db70-4672-8d03-51941c307bdb",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1992-09-18T12:45:33.124Z\",\n \"status\": 92437837,\n \"error\": \"nisi ullamco dolore\",\n \"exception\": \"dolore non Lorem\",\n \"message\": \"laboris elit\",\n \"total_time_taken_in_millis\": -63261644,\n \"http_status\": \"508 LOOP_DETECTED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"nulla\",\n \"page\": {\n  \"type\": \"sit aliquip\",\n  \"size\": -2528636,\n  \"current\": -18968882,\n  \"has_next\": false,\n  \"item_total\": -2763807,\n  \"next_id\": \"adipisicing cillum anim l\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "48f80c1f-03d5-421d-8685-538905924c5c",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1992-09-18T12:45:33.124Z\",\n \"status\": 92437837,\n \"error\": \"nisi ullamco dolore\",\n \"exception\": \"dolore non Lorem\",\n \"message\": \"laboris elit\",\n \"total_time_taken_in_millis\": -63261644,\n \"http_status\": \"508 LOOP_DETECTED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"nulla\",\n \"page\": {\n  \"type\": \"sit aliquip\",\n  \"size\": -2528636,\n  \"current\": -18968882,\n  \"has_next\": false,\n  \"item_total\": -2763807,\n  \"next_id\": \"adipisicing cillum anim l\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "20b5c311-fe2e-4a7e-81fb-bb899af35f8a",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "83ea6726-2e78-4e18-b3b5-b390a4167c6f",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1987-03-05T10:42:37.861Z\",\n \"status\": 99803830,\n \"error\": \"irure\",\n \"exception\": \"ut mollit dolor veniam qui\",\n \"message\": \"in cillum\",\n \"total_time_taken_in_millis\": -31662391,\n \"http_status\": \"429 TOO_MANY_REQUESTS\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ad incididunt\",\n \"page\": {\n  \"type\": \"adipisicing tempor pariatur consectetur\",\n  \"size\": 88002954,\n  \"current\": -72816128,\n  \"has_next\": false,\n  \"item_total\": 98823449,\n  \"next_id\": \"Lorem paria\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1022f391-85b9-4271-a323-331227ab95c5",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1987-03-05T10:42:37.861Z\",\n \"status\": 99803830,\n \"error\": \"irure\",\n \"exception\": \"ut mollit dolor veniam qui\",\n \"message\": \"in cillum\",\n \"total_time_taken_in_millis\": -31662391,\n \"http_status\": \"429 TOO_MANY_REQUESTS\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ad incididunt\",\n \"page\": {\n  \"type\": \"adipisicing tempor pariatur consectetur\",\n  \"size\": 88002954,\n  \"current\": -72816128,\n  \"has_next\": false,\n  \"item_total\": 98823449,\n  \"next_id\": \"Lorem paria\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3fd50b4f-491d-4e9d-841c-c57ba1679705",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1987-03-05T10:42:37.861Z\",\n \"status\": 99803830,\n \"error\": \"irure\",\n \"exception\": \"ut mollit dolor veniam qui\",\n \"message\": \"in cillum\",\n \"total_time_taken_in_millis\": -31662391,\n \"http_status\": \"429 TOO_MANY_REQUESTS\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ad incididunt\",\n \"page\": {\n  \"type\": \"adipisicing tempor pariatur consectetur\",\n  \"size\": 88002954,\n  \"current\": -72816128,\n  \"has_next\": false,\n  \"item_total\": 98823449,\n  \"next_id\": \"Lorem paria\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1eeca18c-afe0-451e-8f5d-4d65c069d08f",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1987-03-05T10:42:37.861Z\",\n \"status\": 99803830,\n \"error\": \"irure\",\n \"exception\": \"ut mollit dolor veniam qui\",\n \"message\": \"in cillum\",\n \"total_time_taken_in_millis\": -31662391,\n \"http_status\": \"429 TOO_MANY_REQUESTS\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ad incididunt\",\n \"page\": {\n  \"type\": \"adipisicing tempor pariatur consectetur\",\n  \"size\": 88002954,\n  \"current\": -72816128,\n  \"has_next\": false,\n  \"item_total\": 98823449,\n  \"next_id\": \"Lorem paria\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9a931948-7af9-4d48-a694-73746154e41d",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1987-03-05T10:42:37.861Z\",\n \"status\": 99803830,\n \"error\": \"irure\",\n \"exception\": \"ut mollit dolor veniam qui\",\n \"message\": \"in cillum\",\n \"total_time_taken_in_millis\": -31662391,\n \"http_status\": \"429 TOO_MANY_REQUESTS\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ad incididunt\",\n \"page\": {\n  \"type\": \"adipisicing tempor pariatur consectetur\",\n  \"size\": 88002954,\n  \"current\": -72816128,\n  \"has_next\": false,\n  \"item_total\": 98823449,\n  \"next_id\": \"Lorem paria\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx0.de"
    }
  ],
  "info": {
    "_postman_id": "be7242c7-ed21-477d-9192-f1546b605d3f",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
