{
  "item": [
    {
      "id": "f29fc370-cf8c-4286-87ce-3a8bc9b71499",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "729e652c-4302-4846-95a9-134f8d897577",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "3b98386d-fa2e-4d78-9d18-b5fbf4b885e6",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "aliqua ullamco",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"application\": {\n    \"website\": {\n      \"enabled\": true,\n      \"basepath\": \"/\"\n    },\n    \"cors\": {\n      \"domains\": []\n    },\n    \"auth\": {\n      \"enabled\": true\n    },\n    \"description\": \"test\",\n    \"channel_type\": \"store\",\n    \"cache_ttl\": -1,\n    \"internal\": false,\n    \"is_active\": true,\n    \"mode\": \"live\",\n    \"_id\": \"620b931ee7bfb11f910bf4a3\",\n    \"company_id\": 2,\n    \"name\": \"test\",\n    \"owner\": \"5b9b98150df588546aaea6d2\",\n    \"logo\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"favicon\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"banner\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n    },\n    \"token\": \"tPQv0nc23\",\n    \"tokens\": [\n      {\n        \"token\": \"tPQv0nc23\",\n        \"created_at\": \"2022-02-15T11:48:46.909Z\"\n      }\n    ],\n    \"domains\": [\n      {\n        \"verified\": true,\n        \"is_primary\": true,\n        \"is_shortlink\": true,\n        \"_id\": \"620b931ee7bfb11f910bf4a4\",\n        \"name\": \"qckvv5lhp.hostfynd.dev\"\n      }\n    ],\n    \"redirections\": [],\n    \"meta\": [],\n    \"created_at\": \"2022-02-15T11:48:46.909Z\",\n    \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n    \"__v\": 0,\n    \"domain\": {\n      \"verified\": true,\n      \"is_primary\": true,\n      \"is_shortlink\": true,\n      \"_id\": \"620b931ee7bfb11f910bf4a4\",\n      \"name\": \"qckvv5lhp.hostfynd.dev\"\n    },\n    \"id\": \"620b931ee7bfb11f910bf4a3\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "508f592a-c623-46a3-aee0-be48322ffccb",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "aliqua ullamco",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"Invalid application domain or id.\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1894c67f-67ed-45cc-ab1e-5d9979763bd3",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "aliqua ullamco",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"No application found\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "c62354ff-2430-43f0-8bb3-fadab1ffb3bb",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "0b3a913c-3a8a-4a70-8c50-4069541d1249",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "b2b47861-e9f7-4a3d-877e-1becacec2593",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "fdbce209-a0d3-4238-bff5-c4628181c2ea",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "3871aacd-e43d-4f43-971e-33c55e5eec83",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1959-03-25T13:17:03.498Z\",\n  \"status\": -5160518,\n  \"error\": \"nisi\",\n  \"exception\": \"proident\",\n  \"message\": \"quis et\",\n  \"total_time_taken_in_millis\": -81164749,\n  \"http_status\": \"302 MOVED_TEMPORARILY\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"commodo reprehenderit\",\n  \"page\": {\n    \"type\": \"non consectetur laboris proident\",\n    \"item_total\": 18766283,\n    \"next_id\": \"nulla mollit labore ut in\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 79738073,\n    \"size\": 82134803\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5f4d976e-708c-45ce-9288-93683daa7ed4",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1959-03-25T13:17:03.498Z\",\n  \"status\": -5160518,\n  \"error\": \"nisi\",\n  \"exception\": \"proident\",\n  \"message\": \"quis et\",\n  \"total_time_taken_in_millis\": -81164749,\n  \"http_status\": \"302 MOVED_TEMPORARILY\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"commodo reprehenderit\",\n  \"page\": {\n    \"type\": \"non consectetur laboris proident\",\n    \"item_total\": 18766283,\n    \"next_id\": \"nulla mollit labore ut in\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 79738073,\n    \"size\": 82134803\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b15bc870-e5bd-4584-8f92-3128eead29f5",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1959-03-25T13:17:03.498Z\",\n  \"status\": -5160518,\n  \"error\": \"nisi\",\n  \"exception\": \"proident\",\n  \"message\": \"quis et\",\n  \"total_time_taken_in_millis\": -81164749,\n  \"http_status\": \"302 MOVED_TEMPORARILY\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"commodo reprehenderit\",\n  \"page\": {\n    \"type\": \"non consectetur laboris proident\",\n    \"item_total\": 18766283,\n    \"next_id\": \"nulla mollit labore ut in\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 79738073,\n    \"size\": 82134803\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "7f62987d-4e57-4bdd-9319-eec61864bf54",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "e0b45f30-32fe-450e-8cbb-58eebb8bb687",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1956-02-04T00:14:25.418Z\",\n  \"status\": 42716899,\n  \"error\": \"laborum anim nulla\",\n  \"exception\": \"Duis dolore reprehenderit\",\n  \"message\": \"officia dolor ex fugiat sit\",\n  \"total_time_taken_in_millis\": -39743459,\n  \"http_status\": \"205 RESET_CONTENT\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"id non tempor nostrud labore\",\n  \"page\": {\n    \"type\": \"sed aliquip nisi aute\",\n    \"item_total\": 96796922,\n    \"next_id\": \"irure et aute quis\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": -92775191,\n    \"size\": 91800140\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9ff02857-024c-4a64-8e00-fcab9fd17e20",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1956-02-04T00:14:25.418Z\",\n  \"status\": 42716899,\n  \"error\": \"laborum anim nulla\",\n  \"exception\": \"Duis dolore reprehenderit\",\n  \"message\": \"officia dolor ex fugiat sit\",\n  \"total_time_taken_in_millis\": -39743459,\n  \"http_status\": \"205 RESET_CONTENT\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"id non tempor nostrud labore\",\n  \"page\": {\n    \"type\": \"sed aliquip nisi aute\",\n    \"item_total\": 96796922,\n    \"next_id\": \"irure et aute quis\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": -92775191,\n    \"size\": 91800140\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a0cee237-7b08-465a-aaf8-f6ff72b97a92",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1956-02-04T00:14:25.418Z\",\n  \"status\": 42716899,\n  \"error\": \"laborum anim nulla\",\n  \"exception\": \"Duis dolore reprehenderit\",\n  \"message\": \"officia dolor ex fugiat sit\",\n  \"total_time_taken_in_millis\": -39743459,\n  \"http_status\": \"205 RESET_CONTENT\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"id non tempor nostrud labore\",\n  \"page\": {\n    \"type\": \"sed aliquip nisi aute\",\n    \"item_total\": 96796922,\n    \"next_id\": \"irure et aute quis\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": -92775191,\n    \"size\": 91800140\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "656f8c51-8b3f-4c8c-a9cb-996a45ca7e92",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1956-02-04T00:14:25.418Z\",\n  \"status\": 42716899,\n  \"error\": \"laborum anim nulla\",\n  \"exception\": \"Duis dolore reprehenderit\",\n  \"message\": \"officia dolor ex fugiat sit\",\n  \"total_time_taken_in_millis\": -39743459,\n  \"http_status\": \"205 RESET_CONTENT\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"id non tempor nostrud labore\",\n  \"page\": {\n    \"type\": \"sed aliquip nisi aute\",\n    \"item_total\": 96796922,\n    \"next_id\": \"irure et aute quis\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": -92775191,\n    \"size\": 91800140\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c21f6edb-9bc1-41c4-aac0-e57c9e2a2419",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1956-02-04T00:14:25.418Z\",\n  \"status\": 42716899,\n  \"error\": \"laborum anim nulla\",\n  \"exception\": \"Duis dolore reprehenderit\",\n  \"message\": \"officia dolor ex fugiat sit\",\n  \"total_time_taken_in_millis\": -39743459,\n  \"http_status\": \"205 RESET_CONTENT\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"id non tempor nostrud labore\",\n  \"page\": {\n    \"type\": \"sed aliquip nisi aute\",\n    \"item_total\": 96796922,\n    \"next_id\": \"irure et aute quis\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": -92775191,\n    \"size\": 91800140\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "40f8cb9d-7bda-47f2-a041-e0d2397efb7b",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "11cb478e-756f-42d7-a098-37baafa67402",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2003-06-09T08:35:37.511Z\",\n  \"status\": -56956236,\n  \"error\": \"cillum commodo ad amet\",\n  \"exception\": \"mollit aliqua nostrud\",\n  \"message\": \"irure\",\n  \"total_time_taken_in_millis\": 14159768,\n  \"http_status\": \"416 REQUESTED_RANGE_NOT_SATISFIABLE\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"consectetur quis\",\n      \"description\": \"veniam do sunt id\",\n      \"name\": \"fugiat\",\n      \"slug\": \"irure\",\n      \"meta\": [\n        {\n          \"_id\": \"non\",\n          \"name\": \"ad non Ut reprehenderit\",\n          \"value\": \"aliquip Excepteur nisi aute voluptate\"\n        },\n        {\n          \"_id\": \"dolo\",\n          \"name\": \"ea eni\",\n          \"value\": \"ut ad elit veniam\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"in\",\n        \"integration\": \"magna in\",\n        \"level\": \"et quis\",\n        \"uid\": -72038705,\n        \"opted\": true,\n        \"permissions\": [\n          \"aliquip ut\",\n          \"ut eu est ut\"\n        ],\n        \"token\": \"in tempor es\",\n        \"name\": \"et sint in eli\",\n        \"stores\": [\n          {\n            \"_id\": \"velit aliqua elit pariatur\",\n            \"integration\": \"exercitation aliquip\",\n            \"level\": \"occaecat consectetur\",\n            \"uid\": 35384472,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"adipisicin\",\n            \"code\": \"occaecat id ut nostrud\",\n            \"name\": \"nulla ad\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"Ut ea eu\",\n            \"integration\": \"sed in Duis labo\",\n            \"level\": \"anim ad magna et\",\n            \"uid\": -99336875,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ad tempor consequat\",\n            \"code\": \"esse Duis pariatur\",\n            \"name\": \"consectetur sunt qui\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"ex\",\n        \"integration\": \"ut qui\",\n        \"level\": \"dolor enim\",\n        \"uid\": 28141263,\n        \"opted\": false,\n        \"permissions\": [\n          \"laboris irure nulla dolore\",\n          \"veniam ad Excepteur\"\n        ],\n        \"token\": \"eu est Excepteur Lorem\",\n        \"name\": \"culpa u\",\n        \"stores\": [\n          {\n            \"_id\": \"reprehenderit ut aute nisi\",\n            \"integration\": \"tempor sed incididunt culpa est\",\n            \"level\": \"conse\",\n            \"uid\": 76069720,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"quis\",\n            \"code\": \"enim aliquip dolor ea\",\n            \"name\": \"nisi \",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"esse ipsum amet\",\n            \"integration\": \"proident anim cillum sit\",\n            \"level\": \"laboris elit anim\",\n            \"uid\": 88766292,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"eiusmod cillum i\",\n            \"code\": \"est\",\n            \"name\": \"proident consequat dolor aute\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"esse proident incididunt\",\n      \"description\": \"esse Lorem\",\n      \"name\": \"qui laborum veniam\",\n      \"slug\": \"do\",\n      \"meta\": [\n        {\n          \"_id\": \"ex voluptate\",\n          \"name\": \"dolore pariatur\",\n          \"value\": \"sit\"\n        },\n        {\n          \"_id\": \"aute ut fugiat\",\n          \"name\": \"adipisicing ea\",\n          \"value\": \"et consequat incididunt velit nisi\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"anim mollit\",\n        \"integration\": \"culpa irure qui deserunt ut\",\n        \"level\": \"sunt fugiat ex\",\n        \"uid\": 9571438,\n        \"opted\": true,\n        \"permissions\": [\n          \"amet voluptate mollit\",\n          \"fugiat aliquip\"\n        ],\n        \"token\": \"incididunt tempor\",\n        \"name\": \"veniam quis enim dolore\",\n        \"stores\": [\n          {\n            \"_id\": \"Duis in id sit\",\n            \"integration\": \"ex\",\n            \"level\": \"tempor aute dolor sunt\",\n            \"uid\": 5004210,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"Ut velit voluptate est\",\n            \"code\": \"dolore dolore sed cupidatat\",\n            \"name\": \"deserunt aliquip\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"enim non velit culpa\",\n            \"integration\": \"mollit esse in veniam\",\n            \"level\": \"officia dolor enim\",\n            \"uid\": 34668159,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"voluptate anim\",\n            \"code\": \"esse eiusmod consectetur\",\n            \"name\": \"exercitation ipsum minim eiusm\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"nisi laboris Excepteur nulla\",\n        \"integration\": \"nisi eiusmod\",\n        \"level\": \"aliqua aute ut\",\n        \"uid\": -5369565,\n        \"opted\": false,\n        \"permissions\": [\n          \"sed velit in\",\n          \"occaecat culpa dolore\"\n        ],\n        \"token\": \"amet sit pariatur fugiat sint\",\n        \"name\": \"mollit fugiat eu\",\n        \"stores\": [\n          {\n            \"_id\": \"Excepteur est cupidatat in\",\n            \"integration\": \"exercitation elit adipisicing\",\n            \"level\": \"laboris commodo amet eiusmod\",\n            \"uid\": -86953635,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"id Ut qui culpa\",\n            \"code\": \"pariatur e\",\n            \"name\": \"ad veniam reprehe\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"velit sed enim\",\n            \"integration\": \"minim et\",\n            \"level\": \"veniam sit quis voluptate tempor\",\n            \"uid\": 53313659,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"dolor sunt adipisicing dolor ut\",\n            \"code\": \"eiusmod dolore culpa cillum\",\n            \"name\": \"Ut sit nisi ullamco dolore\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"commodo dolor\",\n  \"page\": {\n    \"type\": \"Ut sunt sed\",\n    \"item_total\": -2272732,\n    \"next_id\": \"dolore\",\n    \"has_previous\": false,\n    \"has_next\": true,\n    \"current\": -8039992,\n    \"size\": 8519987\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f78ab708-494a-467d-963c-e3a6aa17a5d5",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2009-08-11T21:51:20.932Z\",\n  \"status\": -17390442,\n  \"error\": \"adipisicing\",\n  \"exception\": \"occaecat sed\",\n  \"message\": \"fugiat in ex\",\n  \"total_time_taken_in_millis\": 89180683,\n  \"http_status\": \"429 TOO_MANY_REQUESTS\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"laborum in\",\n      \"description\": \"irure dolore\",\n      \"name\": \"pariatur commodo eiusmod Excepteur velit\",\n      \"slug\": \"sint\",\n      \"meta\": [\n        {\n          \"_id\": \"commodo\",\n          \"name\": \"nostrud ullamco tempor sit fugiat\",\n          \"value\": \"aute el\"\n        },\n        {\n          \"_id\": \"eu Duis sit in\",\n          \"name\": \"dolore Excepteur sint aliqua\",\n          \"value\": \"incididunt nulla tempor et\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"enim deserunt in\",\n        \"integration\": \"fugiat adipisicing anim\",\n        \"level\": \"sed officia ad in\",\n        \"uid\": 8501953,\n        \"opted\": true,\n        \"permissions\": [\n          \"veniam reprehenderit laboris\",\n          \"Excepteur laborum\"\n        ],\n        \"token\": \"eiusmod nulla non consequat\",\n        \"name\": \"velit\",\n        \"stores\": [\n          {\n            \"_id\": \"eiusmod dolore ullamco dolor\",\n            \"integration\": \"exercitation\",\n            \"level\": \"deserunt aliquip\",\n            \"uid\": -22999144,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"esse Ut anim\",\n            \"code\": \"non proident sit\",\n            \"name\": \"Ut fugiat minim do\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"ullamco\",\n            \"integration\": \"est dolor\",\n            \"level\": \"magna irure aliquip do sint\",\n            \"uid\": -60360860,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ullamco occaecat sunt adipisicing\",\n            \"code\": \"elit in velit\",\n            \"name\": \"nostrud voluptate veniam sed\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"esse cupidatat officia\",\n        \"integration\": \"Duis ex nisi\",\n        \"level\": \"velit exercitation\",\n        \"uid\": -15687453,\n        \"opted\": false,\n        \"permissions\": [\n          \"aute eu elit laborum\",\n          \"enim Ut eiusmod\"\n        ],\n        \"token\": \"id mollit enim\",\n        \"name\": \"dolor ut incididunt\",\n        \"stores\": [\n          {\n            \"_id\": \"cillum e\",\n            \"integration\": \"cillum minim et consequat\",\n            \"level\": \"ullamco sint commodo\",\n            \"uid\": -22833811,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"aliqua\",\n            \"code\": \"nisi Ut\",\n            \"name\": \"culpa esse\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"tempor mollit do minim\",\n            \"integration\": \"labore ullamco magna reprehenderit commodo\",\n            \"level\": \"est adipisicing id cillum\",\n            \"uid\": -31651716,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"pariatur\",\n            \"code\": \"nulla ea adipis\",\n            \"name\": \"velit ea qui\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"ad dolor\",\n      \"description\": \"in ea laboris dolore\",\n      \"name\": \"Ut Lorem\",\n      \"slug\": \"irure non pariatur\",\n      \"meta\": [\n        {\n          \"_id\": \"eu incididunt\",\n          \"name\": \"sed nulla\",\n          \"value\": \"id eiusmod ipsum non\"\n        },\n        {\n          \"_id\": \"id in sed Lorem\",\n          \"name\": \"in ut aliqua ullamco minim\",\n          \"value\": \"Duis laboris nostrud veniam\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"amet ad\",\n        \"integration\": \"laborum sed exercitation\",\n        \"level\": \"dolore ipsum ullamco\",\n        \"uid\": -62660673,\n        \"opted\": true,\n        \"permissions\": [\n          \"laborum dolore do officia qui\",\n          \"fugiat consectetur ex Lorem in\"\n        ],\n        \"token\": \"tempor dolor in commodo Lorem\",\n        \"name\": \"in est minim\",\n        \"stores\": [\n          {\n            \"_id\": \"dolore proident incididunt adipisicing occaecat\",\n            \"integration\": \"laboris et Excepteur\",\n            \"level\": \"minim\",\n            \"uid\": 91704905,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"e\",\n            \"code\": \"ullamco deserunt ad cillum anim\",\n            \"name\": \"dolore incididunt labore\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"aliqua labore\",\n            \"integration\": \"incididunt aute\",\n            \"level\": \"quis ipsum tempor minim\",\n            \"uid\": 58950036,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"enim proident\",\n            \"code\": \"sint dolore velit\",\n            \"name\": \"dolore officia culpa qui et\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"Excepteur laborum nisi\",\n        \"integration\": \"sit consectetur\",\n        \"level\": \"adipisicing magna cupidatat\",\n        \"uid\": -61829640,\n        \"opted\": true,\n        \"permissions\": [\n          \"sunt l\",\n          \"aute reprehenderit ipsum ex\"\n        ],\n        \"token\": \"Lorem qui\",\n        \"name\": \"labore est adipisicing dolore dolore\",\n        \"stores\": [\n          {\n            \"_id\": \"anim\",\n            \"integration\": \"nulla ipsum tempor aliqua amet\",\n            \"level\": \"nisi sint ullamco incididunt\",\n            \"uid\": -18707422,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"do ullamco\",\n            \"code\": \"ut incididu\",\n            \"name\": \"proident mollit\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"adipisicing mollit sed ex anim\",\n            \"integration\": \"fugiat reprehenderit ut proident qui\",\n            \"level\": \"incididunt aute\",\n            \"uid\": -37284423,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"anim eiusmod magna ullamco\",\n            \"code\": \"aliquip sit Excepteur reprehenderit qui\",\n            \"name\": \"nulla occaecat quis enim\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"non mollit\",\n  \"page\": {\n    \"type\": \"culpa\",\n    \"item_total\": -15426717,\n    \"next_id\": \"ut\",\n    \"has_previous\": true,\n    \"has_next\": true,\n    \"current\": -80487876,\n    \"size\": -77221448\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f7bb7ff6-d60a-4990-8ba9-67189a7df37f",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2009-08-11T21:51:20.932Z\",\n  \"status\": -17390442,\n  \"error\": \"adipisicing\",\n  \"exception\": \"occaecat sed\",\n  \"message\": \"fugiat in ex\",\n  \"total_time_taken_in_millis\": 89180683,\n  \"http_status\": \"429 TOO_MANY_REQUESTS\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"laborum in\",\n      \"description\": \"irure dolore\",\n      \"name\": \"pariatur commodo eiusmod Excepteur velit\",\n      \"slug\": \"sint\",\n      \"meta\": [\n        {\n          \"_id\": \"commodo\",\n          \"name\": \"nostrud ullamco tempor sit fugiat\",\n          \"value\": \"aute el\"\n        },\n        {\n          \"_id\": \"eu Duis sit in\",\n          \"name\": \"dolore Excepteur sint aliqua\",\n          \"value\": \"incididunt nulla tempor et\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"enim deserunt in\",\n        \"integration\": \"fugiat adipisicing anim\",\n        \"level\": \"sed officia ad in\",\n        \"uid\": 8501953,\n        \"opted\": true,\n        \"permissions\": [\n          \"veniam reprehenderit laboris\",\n          \"Excepteur laborum\"\n        ],\n        \"token\": \"eiusmod nulla non consequat\",\n        \"name\": \"velit\",\n        \"stores\": [\n          {\n            \"_id\": \"eiusmod dolore ullamco dolor\",\n            \"integration\": \"exercitation\",\n            \"level\": \"deserunt aliquip\",\n            \"uid\": -22999144,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"esse Ut anim\",\n            \"code\": \"non proident sit\",\n            \"name\": \"Ut fugiat minim do\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"ullamco\",\n            \"integration\": \"est dolor\",\n            \"level\": \"magna irure aliquip do sint\",\n            \"uid\": -60360860,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ullamco occaecat sunt adipisicing\",\n            \"code\": \"elit in velit\",\n            \"name\": \"nostrud voluptate veniam sed\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"esse cupidatat officia\",\n        \"integration\": \"Duis ex nisi\",\n        \"level\": \"velit exercitation\",\n        \"uid\": -15687453,\n        \"opted\": false,\n        \"permissions\": [\n          \"aute eu elit laborum\",\n          \"enim Ut eiusmod\"\n        ],\n        \"token\": \"id mollit enim\",\n        \"name\": \"dolor ut incididunt\",\n        \"stores\": [\n          {\n            \"_id\": \"cillum e\",\n            \"integration\": \"cillum minim et consequat\",\n            \"level\": \"ullamco sint commodo\",\n            \"uid\": -22833811,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"aliqua\",\n            \"code\": \"nisi Ut\",\n            \"name\": \"culpa esse\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"tempor mollit do minim\",\n            \"integration\": \"labore ullamco magna reprehenderit commodo\",\n            \"level\": \"est adipisicing id cillum\",\n            \"uid\": -31651716,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"pariatur\",\n            \"code\": \"nulla ea adipis\",\n            \"name\": \"velit ea qui\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"ad dolor\",\n      \"description\": \"in ea laboris dolore\",\n      \"name\": \"Ut Lorem\",\n      \"slug\": \"irure non pariatur\",\n      \"meta\": [\n        {\n          \"_id\": \"eu incididunt\",\n          \"name\": \"sed nulla\",\n          \"value\": \"id eiusmod ipsum non\"\n        },\n        {\n          \"_id\": \"id in sed Lorem\",\n          \"name\": \"in ut aliqua ullamco minim\",\n          \"value\": \"Duis laboris nostrud veniam\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"amet ad\",\n        \"integration\": \"laborum sed exercitation\",\n        \"level\": \"dolore ipsum ullamco\",\n        \"uid\": -62660673,\n        \"opted\": true,\n        \"permissions\": [\n          \"laborum dolore do officia qui\",\n          \"fugiat consectetur ex Lorem in\"\n        ],\n        \"token\": \"tempor dolor in commodo Lorem\",\n        \"name\": \"in est minim\",\n        \"stores\": [\n          {\n            \"_id\": \"dolore proident incididunt adipisicing occaecat\",\n            \"integration\": \"laboris et Excepteur\",\n            \"level\": \"minim\",\n            \"uid\": 91704905,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"e\",\n            \"code\": \"ullamco deserunt ad cillum anim\",\n            \"name\": \"dolore incididunt labore\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"aliqua labore\",\n            \"integration\": \"incididunt aute\",\n            \"level\": \"quis ipsum tempor minim\",\n            \"uid\": 58950036,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"enim proident\",\n            \"code\": \"sint dolore velit\",\n            \"name\": \"dolore officia culpa qui et\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"Excepteur laborum nisi\",\n        \"integration\": \"sit consectetur\",\n        \"level\": \"adipisicing magna cupidatat\",\n        \"uid\": -61829640,\n        \"opted\": true,\n        \"permissions\": [\n          \"sunt l\",\n          \"aute reprehenderit ipsum ex\"\n        ],\n        \"token\": \"Lorem qui\",\n        \"name\": \"labore est adipisicing dolore dolore\",\n        \"stores\": [\n          {\n            \"_id\": \"anim\",\n            \"integration\": \"nulla ipsum tempor aliqua amet\",\n            \"level\": \"nisi sint ullamco incididunt\",\n            \"uid\": -18707422,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"do ullamco\",\n            \"code\": \"ut incididu\",\n            \"name\": \"proident mollit\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"adipisicing mollit sed ex anim\",\n            \"integration\": \"fugiat reprehenderit ut proident qui\",\n            \"level\": \"incididunt aute\",\n            \"uid\": -37284423,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"anim eiusmod magna ullamco\",\n            \"code\": \"aliquip sit Excepteur reprehenderit qui\",\n            \"name\": \"nulla occaecat quis enim\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"non mollit\",\n  \"page\": {\n    \"type\": \"culpa\",\n    \"item_total\": -15426717,\n    \"next_id\": \"ut\",\n    \"has_previous\": true,\n    \"has_next\": true,\n    \"current\": -80487876,\n    \"size\": -77221448\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "9ebb4beb-e641-49d7-b639-c1c249f1e3de",
          "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
          "request": {
            "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "1ac5b1b1-e133-4610-a6fd-af03b704c3d2",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2019-08-29T19:58:25.011Z\",\n  \"status\": -48682938,\n  \"error\": \"voluptate laborum eu\",\n  \"exception\": \"mollit ex culpa voluptate eu\",\n  \"message\": \"nisi d\",\n  \"total_time_taken_in_millis\": 65500183,\n  \"http_status\": \"420 METHOD_FAILURE\",\n  \"items\": {\n    \"session_id\": \"nostrud deserunt\",\n    \"error_message\": \"amet consequat aliquip\"\n  },\n  \"payload\": {\n    \"session_id\": \"Ut\",\n    \"error_message\": \"ipsum ut quis proident reprehenderit\"\n  },\n  \"trace_id\": \"sint Ut cillum\",\n  \"page\": {\n    \"type\": \"officia dolore aliquip mollit\",\n    \"item_total\": -17171147,\n    \"next_id\": \"quis nulla\",\n    \"has_previous\": false,\n    \"has_next\": false,\n    \"current\": 94078569,\n    \"size\": -73505540\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d5253ccb-5fe8-4c0e-a1bd-3253c3af9554",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2019-08-29T19:58:25.011Z\",\n  \"status\": -48682938,\n  \"error\": \"voluptate laborum eu\",\n  \"exception\": \"mollit ex culpa voluptate eu\",\n  \"message\": \"nisi d\",\n  \"total_time_taken_in_millis\": 65500183,\n  \"http_status\": \"420 METHOD_FAILURE\",\n  \"items\": {\n    \"session_id\": \"nostrud deserunt\",\n    \"error_message\": \"amet consequat aliquip\"\n  },\n  \"payload\": {\n    \"session_id\": \"Ut\",\n    \"error_message\": \"ipsum ut quis proident reprehenderit\"\n  },\n  \"trace_id\": \"sint Ut cillum\",\n  \"page\": {\n    \"type\": \"officia dolore aliquip mollit\",\n    \"item_total\": -17171147,\n    \"next_id\": \"quis nulla\",\n    \"has_previous\": false,\n    \"has_next\": false,\n    \"current\": 94078569,\n    \"size\": -73505540\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ca3786c5-9501-4f98-bdae-961a64d16edd",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2019-08-29T19:58:25.011Z\",\n  \"status\": -48682938,\n  \"error\": \"voluptate laborum eu\",\n  \"exception\": \"mollit ex culpa voluptate eu\",\n  \"message\": \"nisi d\",\n  \"total_time_taken_in_millis\": 65500183,\n  \"http_status\": \"420 METHOD_FAILURE\",\n  \"items\": {\n    \"session_id\": \"nostrud deserunt\",\n    \"error_message\": \"amet consequat aliquip\"\n  },\n  \"payload\": {\n    \"session_id\": \"Ut\",\n    \"error_message\": \"ipsum ut quis proident reprehenderit\"\n  },\n  \"trace_id\": \"sint Ut cillum\",\n  \"page\": {\n    \"type\": \"officia dolore aliquip mollit\",\n    \"item_total\": -17171147,\n    \"next_id\": \"quis nulla\",\n    \"has_previous\": false,\n    \"has_next\": false,\n    \"current\": 94078569,\n    \"size\": -73505540\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "195d92c0-5f9f-480e-97e1-0255d58dffa2",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "0a46fdf3-43d8-4d1c-859a-027624c4415a",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1997-10-18T10:45:49.514Z\",\n  \"status\": -39696732,\n  \"error\": \"non E\",\n  \"exception\": \"amet Lorem et\",\n  \"message\": \"laboris\",\n  \"total_time_taken_in_millis\": 63587925,\n  \"http_status\": \"226 IM_USED\",\n  \"items\": {\n    \"company_id\": 43182898,\n    \"integration_data\": {\n      \"auteb\": {}\n    },\n    \"company_name\": \"labore est\",\n    \"task_details\": {\n      \"type\": -44474682,\n      \"group_list\": [\n        {\n          \"text\": \"mollit quis\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"ad adipisicing\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 61833710.84172636,\n      \"safe_stock\": 54373975,\n      \"period_threshold\": -9140462,\n      \"period_threshold_type\": \"MONTHS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"irure in\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"voluptate aliquip qui\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"consequat sint nisi\",\n    \"alias\": \"consectetur dolore exercitation reprehenderit\"\n  },\n  \"payload\": {\n    \"company_id\": -67695469,\n    \"integration_data\": {\n      \"pariatur__\": {},\n      \"quis_f6e\": {},\n      \"fugiat_c\": {}\n    },\n    \"company_name\": \"est cillum deserunt aliqua\",\n    \"task_details\": {\n      \"type\": 41972069,\n      \"group_list\": [\n        {\n          \"text\": \"sunt irure\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"si\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 78128606.57847875,\n      \"safe_stock\": 32096862,\n      \"period_threshold\": -79579873,\n      \"period_threshold_type\": \"MONTHS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"ipsum\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"in in in\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"e\",\n    \"alias\": \"ex ut Duis voluptate\"\n  },\n  \"trace_id\": \"Ut cupidatat\",\n  \"page\": {\n    \"type\": \"enim\",\n    \"item_total\": 47829495,\n    \"next_id\": \"Excepteur eu\",\n    \"has_previous\": false,\n    \"has_next\": true,\n    \"current\": 74461839,\n    \"size\": -34336379\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a414de7d-b040-45b9-9f04-243847e5ac06",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1962-03-03T13:01:00.808Z\",\n  \"status\": 80115687,\n  \"error\": \"nisi dolor reprehenderit cupidatat\",\n  \"exception\": \"sunt proident ea\",\n  \"message\": \"Lorem cillum laborum\",\n  \"total_time_taken_in_millis\": -19925794,\n  \"http_status\": \"401 UNAUTHORIZED\",\n  \"items\": {\n    \"company_id\": 66118477,\n    \"integration_data\": {\n      \"sed0\": {}\n    },\n    \"company_name\": \"incidid\",\n    \"task_details\": {\n      \"type\": 58425988,\n      \"group_list\": [\n        {\n          \"text\": \"in incididunt minim deserunt\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"nulla\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 90348925.79260543,\n      \"safe_stock\": 94245409,\n      \"period_threshold\": -61663432,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"do Ut sunt Duis\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"do\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"cillum proid\",\n    \"alias\": \"sit nisi aute cillum\"\n  },\n  \"payload\": {\n    \"company_id\": -56175229,\n    \"integration_data\": {\n      \"culpa_9\": {},\n      \"magnaf8a\": {}\n    },\n    \"company_name\": \"laborum\",\n    \"task_details\": {\n      \"type\": -9361883,\n      \"group_list\": [\n        {\n          \"text\": \"cillum nostrud voluptate\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"consequat dolor\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 26862389.96600601,\n      \"safe_stock\": -45547921,\n      \"period_threshold\": -73642921,\n      \"period_threshold_type\": \"HOURS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"exercitation deserunt sint proident aliqua\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"commodo Duis officia ut\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"magna ut officia incididunt\",\n    \"alias\": \"enim anim\"\n  },\n  \"trace_id\": \"incididunt in\",\n  \"page\": {\n    \"type\": \"non\",\n    \"item_total\": 96484642,\n    \"next_id\": \"laborum\",\n    \"has_previous\": true,\n    \"has_next\": true,\n    \"current\": -20326795,\n    \"size\": 94877739\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c74d2ff0-114b-4b42-b8bd-fcf0c06e1a8c",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1962-03-03T13:01:00.808Z\",\n  \"status\": 80115687,\n  \"error\": \"nisi dolor reprehenderit cupidatat\",\n  \"exception\": \"sunt proident ea\",\n  \"message\": \"Lorem cillum laborum\",\n  \"total_time_taken_in_millis\": -19925794,\n  \"http_status\": \"401 UNAUTHORIZED\",\n  \"items\": {\n    \"company_id\": 66118477,\n    \"integration_data\": {\n      \"sed0\": {}\n    },\n    \"company_name\": \"incidid\",\n    \"task_details\": {\n      \"type\": 58425988,\n      \"group_list\": [\n        {\n          \"text\": \"in incididunt minim deserunt\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"nulla\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 90348925.79260543,\n      \"safe_stock\": 94245409,\n      \"period_threshold\": -61663432,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"do Ut sunt Duis\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"do\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"cillum proid\",\n    \"alias\": \"sit nisi aute cillum\"\n  },\n  \"payload\": {\n    \"company_id\": -56175229,\n    \"integration_data\": {\n      \"culpa_9\": {},\n      \"magnaf8a\": {}\n    },\n    \"company_name\": \"laborum\",\n    \"task_details\": {\n      \"type\": -9361883,\n      \"group_list\": [\n        {\n          \"text\": \"cillum nostrud voluptate\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"consequat dolor\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 26862389.96600601,\n      \"safe_stock\": -45547921,\n      \"period_threshold\": -73642921,\n      \"period_threshold_type\": \"HOURS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"exercitation deserunt sint proident aliqua\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"commodo Duis officia ut\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"magna ut officia incididunt\",\n    \"alias\": \"enim anim\"\n  },\n  \"trace_id\": \"incididunt in\",\n  \"page\": {\n    \"type\": \"non\",\n    \"item_total\": 96484642,\n    \"next_id\": \"laborum\",\n    \"has_previous\": true,\n    \"has_next\": true,\n    \"current\": -20326795,\n    \"size\": 94877739\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "d95d2ac1-0549-4c8c-b050-fb30c7e8d699",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "9e65fd4e-3c19-4814-9a89-0f9b7e0a8be4",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1974-02-14T07:21:20.624Z\",\n  \"status\": 48977729,\n  \"error\": \"veniam et cupidatat minim sint\",\n  \"exception\": \"consectetur nostrud nisi qui\",\n  \"message\": \"officia consequat\",\n  \"total_time_taken_in_millis\": 29251657,\n  \"http_status\": \"413 REQUEST_ENTITY_TOO_LARGE\",\n  \"items\": [\n    {\n      \"company_id\": -75062490,\n      \"integration_data\": {\n        \"id_057\": {},\n        \"commodo_89\": {},\n        \"consequat__f\": {}\n      },\n      \"company_name\": \"do commodo\",\n      \"task_details\": {\n        \"type\": -15024057,\n        \"group_list\": [\n          {\n            \"text\": \"Excepteur enim sit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"fugiat anim\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -82092802.50998065,\n        \"safe_stock\": -39470139,\n        \"period_threshold\": -18431701,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"dolor\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ea consectetur in\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"tempor\",\n      \"alias\": \"reprehenderit sed\"\n    },\n    {\n      \"company_id\": -39282677,\n      \"integration_data\": {\n        \"exe4\": {},\n        \"esse_538\": {},\n        \"aliquaa6_\": {},\n        \"labore62\": {}\n      },\n      \"company_name\": \"tempor in\",\n      \"task_details\": {\n        \"type\": 69184094,\n        \"group_list\": [\n          {\n            \"text\": \"laborum Duis ipsum deserunt\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"velit in elit voluptate laborum\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 57373011.06380731,\n        \"safe_stock\": 55344412,\n        \"period_threshold\": -60275028,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"fugiat do\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"eiusmod laborum aute\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"veniam in sit qui aute\",\n      \"alias\": \"ad enim\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": -29681516,\n      \"integration_data\": {\n        \"in8\": {},\n        \"Excepteur8\": {}\n      },\n      \"company_name\": \"dolore\",\n      \"task_details\": {\n        \"type\": 28694635,\n        \"group_list\": [\n          {\n            \"text\": \"est qui sunt\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"est Duis qui\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 7892662.400750309,\n        \"safe_stock\": 20662048,\n        \"period_threshold\": -94305767,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"eiusmod nulla labore\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"officia ea aliqua n\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"esse nisi dolor eu\",\n      \"alias\": \"consectetur velit\"\n    },\n    {\n      \"company_id\": 53005971,\n      \"integration_data\": {\n        \"velit7\": {}\n      },\n      \"company_name\": \"aute est ut\",\n      \"task_details\": {\n        \"type\": -9432194,\n        \"group_list\": [\n          {\n            \"text\": \"eu anim adipisicing\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"enim\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 16302396.588020727,\n        \"safe_stock\": -7088980,\n        \"period_threshold\": 49455311,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"incididunt adipisicing\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"quis sint\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"do nulla\",\n      \"alias\": \"est incididunt irure\"\n    }\n  ],\n  \"trace_id\": \"minim\",\n  \"page\": {\n    \"type\": \"magna\",\n    \"item_total\": 28858775,\n    \"next_id\": \"ex nisi mollit eiusmod sin\",\n    \"has_previous\": true,\n    \"has_next\": true,\n    \"current\": 19492252,\n    \"size\": -62637329\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e1c63112-d2ca-4b3b-a1ec-35082dd48d32",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1965-02-17T12:13:36.141Z\",\n  \"status\": -80720588,\n  \"error\": \"aliqua mollit dolore qui aute\",\n  \"exception\": \"sint nisi\",\n  \"message\": \"dolor cupidatat amet ullamco labore\",\n  \"total_time_taken_in_millis\": -63611942,\n  \"http_status\": \"402 PAYMENT_REQUIRED\",\n  \"items\": [\n    {\n      \"company_id\": 87136563,\n      \"integration_data\": {\n        \"officia1\": {}\n      },\n      \"company_name\": \"in ut incididunt\",\n      \"task_details\": {\n        \"type\": -73576401,\n        \"group_list\": [\n          {\n            \"text\": \"enim elit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"mollit proident labore eiusmod cillum\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -26066886.689277217,\n        \"safe_stock\": -43061439,\n        \"period_threshold\": -42645863,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"pariatu\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ullamco m\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"Excepteur dolor sed enim labore\",\n      \"alias\": \"nostrud\"\n    },\n    {\n      \"company_id\": 95760853,\n      \"integration_data\": {\n        \"in_e27\": {}\n      },\n      \"company_name\": \"sint deserunt\",\n      \"task_details\": {\n        \"type\": -24417424,\n        \"group_list\": [\n          {\n            \"text\": \"in nulla voluptate Excepteur\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"non laboris\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -99634589.94314802,\n        \"safe_stock\": -48079023,\n        \"period_threshold\": 50842589,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"dolore\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ea pariatur\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"Ut ex Duis\",\n      \"alias\": \"incididunt do\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": 76967614,\n      \"integration_data\": {\n        \"etd3\": {}\n      },\n      \"company_name\": \"ex in fugiat exercitation\",\n      \"task_details\": {\n        \"type\": -51627944,\n        \"group_list\": [\n          {\n            \"text\": \"occaecat mollit dolor\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"eu amet\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -17104768.13052337,\n        \"safe_stock\": 74434461,\n        \"period_threshold\": 9552067,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"aliquip\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"consectetur et culpa nostrud\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"in veniam incididunt non\",\n      \"alias\": \"nisi\"\n    },\n    {\n      \"company_id\": 38485276,\n      \"integration_data\": {\n        \"proident__\": {}\n      },\n      \"company_name\": \"dolore minim labore officia\",\n      \"task_details\": {\n        \"type\": 34971133,\n        \"group_list\": [\n          {\n            \"text\": \"dolor est velit fugiat\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ut qui dolor dolore\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -72187587.6867311,\n        \"safe_stock\": -9342528,\n        \"period_threshold\": 23284554,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"ut pariatur\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"eiusmod\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"consequat ea dolor\",\n      \"alias\": \"deserunt cupidatat eiusmod voluptate\"\n    }\n  ],\n  \"trace_id\": \"esse velit enim Lorem voluptate\",\n  \"page\": {\n    \"type\": \"laborum amet Lorem reprehenderit\",\n    \"item_total\": -85435826,\n    \"next_id\": \"ut quis velit tempor consectetur\",\n    \"has_previous\": true,\n    \"has_next\": true,\n    \"current\": -81546421,\n    \"size\": -56909666\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "87fa4716-81cc-47ee-8acb-6578af86d4bc",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1965-02-17T12:13:36.141Z\",\n  \"status\": -80720588,\n  \"error\": \"aliqua mollit dolore qui aute\",\n  \"exception\": \"sint nisi\",\n  \"message\": \"dolor cupidatat amet ullamco labore\",\n  \"total_time_taken_in_millis\": -63611942,\n  \"http_status\": \"402 PAYMENT_REQUIRED\",\n  \"items\": [\n    {\n      \"company_id\": 87136563,\n      \"integration_data\": {\n        \"officia1\": {}\n      },\n      \"company_name\": \"in ut incididunt\",\n      \"task_details\": {\n        \"type\": -73576401,\n        \"group_list\": [\n          {\n            \"text\": \"enim elit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"mollit proident labore eiusmod cillum\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -26066886.689277217,\n        \"safe_stock\": -43061439,\n        \"period_threshold\": -42645863,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"pariatu\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ullamco m\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"Excepteur dolor sed enim labore\",\n      \"alias\": \"nostrud\"\n    },\n    {\n      \"company_id\": 95760853,\n      \"integration_data\": {\n        \"in_e27\": {}\n      },\n      \"company_name\": \"sint deserunt\",\n      \"task_details\": {\n        \"type\": -24417424,\n        \"group_list\": [\n          {\n            \"text\": \"in nulla voluptate Excepteur\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"non laboris\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -99634589.94314802,\n        \"safe_stock\": -48079023,\n        \"period_threshold\": 50842589,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"dolore\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ea pariatur\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"Ut ex Duis\",\n      \"alias\": \"incididunt do\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": 76967614,\n      \"integration_data\": {\n        \"etd3\": {}\n      },\n      \"company_name\": \"ex in fugiat exercitation\",\n      \"task_details\": {\n        \"type\": -51627944,\n        \"group_list\": [\n          {\n            \"text\": \"occaecat mollit dolor\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"eu amet\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -17104768.13052337,\n        \"safe_stock\": 74434461,\n        \"period_threshold\": 9552067,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"aliquip\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"consectetur et culpa nostrud\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"in veniam incididunt non\",\n      \"alias\": \"nisi\"\n    },\n    {\n      \"company_id\": 38485276,\n      \"integration_data\": {\n        \"proident__\": {}\n      },\n      \"company_name\": \"dolore minim labore officia\",\n      \"task_details\": {\n        \"type\": 34971133,\n        \"group_list\": [\n          {\n            \"text\": \"dolor est velit fugiat\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ut qui dolor dolore\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -72187587.6867311,\n        \"safe_stock\": -9342528,\n        \"period_threshold\": 23284554,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"ut pariatur\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"eiusmod\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"consequat ea dolor\",\n      \"alias\": \"deserunt cupidatat eiusmod voluptate\"\n    }\n  ],\n  \"trace_id\": \"esse velit enim Lorem voluptate\",\n  \"page\": {\n    \"type\": \"laborum amet Lorem reprehenderit\",\n    \"item_total\": -85435826,\n    \"next_id\": \"ut quis velit tempor consectetur\",\n    \"has_previous\": true,\n    \"has_next\": true,\n    \"current\": -81546421,\n    \"size\": -56909666\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "d6f7b932-de61-41bd-aaef-224bfb18402b",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "697d0b9e-fefd-49f6-9be8-c85096656dc3",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "4fd5d1de-1e79-4249-94aa-b4b324639860",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 2715589,\n      \"event_name\": \"Duis\",\n      \"event_type\": \"esse officia dolor\",\n      \"event_category\": \"Ut velit\",\n      \"version\": \"non eu proident\",\n      \"display_name\": \"sint sit\",\n      \"description\": \"id sint officia incididunt qui\",\n      \"created_on\": \"ex voluptate veniam irure\"\n    },\n    {\n      \"id\": -80672937,\n      \"event_name\": \"non officia cupidatat tempor\",\n      \"event_type\": \"ad culpa\",\n      \"event_category\": \"adipisicing ea Ut\",\n      \"version\": \"est\",\n      \"display_name\": \"in reprehenderit officia do\",\n      \"description\": \"labore qui\",\n      \"created_on\": \"co\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "75a61f1b-a891-4543-90e2-85fe9b0c13ea",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "4d92dd75-b4de-4f38-995d-9788c4a8f3a1",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 34251649,\n      \"event_name\": \"dolor nisi laborum Lorem\",\n      \"event_type\": \"reprehenderit nulla et ex id\",\n      \"event_category\": \"esse tempor\",\n      \"version\": \"labore laborum\",\n      \"display_name\": \"fugiat reprehenderit id sunt\",\n      \"description\": \"do qui cillum aliquip\",\n      \"created_on\": \"nostrud la\"\n    },\n    {\n      \"id\": -50940987,\n      \"event_name\": \"anim\",\n      \"event_type\": \"cupidatat Lorem labore aliqua anim\",\n      \"event_category\": \"ut\",\n      \"version\": \"cillum labore occaecat ea ad\",\n      \"display_name\": \"aute dolore sit quis aliqua\",\n      \"description\": \"elit ut voluptate\",\n      \"created_on\": \"tempor in Lorem\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl"
    }
  ],
  "info": {
    "_postman_id": "1a212253-05a0-43e3-b6d5-e13dbfa51ab7",
    "name": "Fynd Platform's Public Side APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public Side APIs",
      "type": "text/plain"
    }
  }
}
