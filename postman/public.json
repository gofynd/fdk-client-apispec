{
  "item": [
    {
      "id": "5bae4f62-10d9-4bba-a32f-851c140d821e",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "a50b4112-4233-4d0a-b3c6-b6ab5ae9cf35",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "3a7b3879-c521-4780-a572-dd3c080349c1",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "consectetur Excepteur Ut quis",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3791f2ab-0da3-45aa-9d64-ecd8fbd0cc2a",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "consectetur Excepteur Ut quis",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "68b1a7c5-cabb-43c2-8ca6-4d4f77b9ab9b",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "consectetur Excepteur Ut quis",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "d29db68c-18d8-40fd-aa2f-e5c9899aecf6",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "d85a6ab3-17e5-46fd-9456-e2707aae977d",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "a49de9e5-88cd-4f36-ae54-c214ee7f2359",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "19c81442-2923-4b5a-b232-d4245b85f974",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "e71419a2-28f7-479c-9324-e9d1a4c7a4e4",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -81324672,\n   \"event_name\": \"fugiat esse ipsum minim\",\n   \"event_type\": \"deserunt\",\n   \"event_category\": \"cillum adipisicing tempor labore esse\",\n   \"version\": \"sunt\",\n   \"display_name\": \"laboris elit exercitation ipsum\",\n   \"description\": \"id proident\",\n   \"created_on\": \"proident enim\"\n  },\n  {\n   \"id\": -50437148,\n   \"event_name\": \"non Duis\",\n   \"event_type\": \"aute do irure magna voluptate\",\n   \"event_category\": \"in aliquip qui Lorem\",\n   \"version\": \"magna sunt labore\",\n   \"display_name\": \"laborum aliquip elit deserunt\",\n   \"description\": \"ea dolore pariatur\",\n   \"created_on\": \"dolor quis voluptate velit aute\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "6a7bee96-442b-4a35-bf6f-0c11ddaea1f7",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "530bb7c7-9968-4c8c-9eee-facae8bb4eb4",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 89459690,\n   \"event_name\": \"id sint\",\n   \"event_type\": \"in\",\n   \"event_category\": \"ex amet sed ut\",\n   \"version\": \"magna dolore minim\",\n   \"display_name\": \"reprehenderit\",\n   \"description\": \"ad enim Duis nulla magna\",\n   \"created_on\": \"ea veniam consequat quis sint\"\n  },\n  {\n   \"id\": -40814142,\n   \"event_name\": \"quis sit in esse Duis\",\n   \"event_type\": \"ea reprehenderit id dolore dolor\",\n   \"event_category\": \"deserunt culpa est tempor in\",\n   \"version\": \"id amet \",\n   \"display_name\": \"aliqua Excepteur ex\",\n   \"description\": \"occaecat\",\n   \"created_on\": \"laboris dolore nulla voluptate\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "11d034f3-fd20-44cb-85fe-3cdc3cd97afc",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "6f2e2465-cb40-4239-a75c-ef9253841e2d",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "7bbe62bc-3bb1-458c-8dd7-3c04b18a3c5b",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1959-12-05T08:59:30.831Z\",\n \"status\": -75129489,\n \"error\": \"commodo consectetur incididunt\",\n \"exception\": \"enim \",\n \"message\": \"sit in ir\",\n \"total_time_taken_in_millis\": 1673138,\n \"http_status\": \"507 INSUFFICIENT_STORAGE\",\n \"items\": [\n  {\n   \"company_id\": 46167807,\n   \"integration_data\": {},\n   \"company_name\": \"reprehenderit\",\n   \"task_details\": {\n    \"type\": -45424620,\n    \"group_list\": [\n     {\n      \"text\": \"consectetur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"anim velit qui sed\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -30083203.607814208,\n    \"safe_stock\": 37753445,\n    \"period_threshold\": 58915913,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"id dolore ad mollit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"pariatur proident\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ullamco officia dolor reprehenderit mollit\",\n   \"alias\": \"Excepteur consequat cupidatat\"\n  },\n  {\n   \"company_id\": 63432297,\n   \"integration_data\": {},\n   \"company_name\": \"enim aliqua culpa\",\n   \"task_details\": {\n    \"type\": 31391694,\n    \"group_list\": [\n     {\n      \"text\": \"ips\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laborum magna dolore officia\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 71353409.39768949,\n    \"safe_stock\": -82787017,\n    \"period_threshold\": 42069620,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"exercitation labore ipsum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut consectetur magna nisi voluptate\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aliqua\",\n   \"alias\": \"enim ut quis\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 61097994,\n   \"integration_data\": {},\n   \"company_name\": \"ea co\",\n   \"task_details\": {\n    \"type\": 68097597,\n    \"group_list\": [\n     {\n      \"text\": \"dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -76955114.0044034,\n    \"safe_stock\": -81685873,\n    \"period_threshold\": -70354438,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"mollit eu adipisicing\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Ut nostrud\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"fugia\",\n   \"alias\": \"sed dolor elit nostrud\"\n  },\n  {\n   \"company_id\": -72287680,\n   \"integration_data\": {},\n   \"company_name\": \"commodo\",\n   \"task_details\": {\n    \"type\": 19960785,\n    \"group_list\": [\n     {\n      \"text\": \"pariatur sit consectetur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nostrud adipisicing non id\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 34075129.21094029,\n    \"safe_stock\": 19981029,\n    \"period_threshold\": -31157259,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolor magna irure\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"pariatur culpa occaecat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"labore esse qui magna\",\n   \"alias\": \"nulla sint tempor c\"\n  }\n ],\n \"trace_id\": \"ad incididunt Excepteur ipsum do\",\n \"page\": {\n  \"type\": \"tempor\",\n  \"size\": -85075934,\n  \"current\": -12768770,\n  \"has_next\": false,\n  \"item_total\": -78217972,\n  \"next_id\": \"pariatur\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e342fdcd-3da7-48a1-8189-3b5574786d23",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2007-10-14T22:03:11.521Z\",\n \"status\": -63137476,\n \"error\": \"enim aute ut\",\n \"exception\": \"cupidatat ut incididunt cillum\",\n \"message\": \"elit nulla ad\",\n \"total_time_taken_in_millis\": 46063740,\n \"http_status\": \"304 NOT_MODIFIED\",\n \"items\": [\n  {\n   \"company_id\": 70892804,\n   \"integration_data\": {},\n   \"company_name\": \"dolore\",\n   \"task_details\": {\n    \"type\": -45931793,\n    \"group_list\": [\n     {\n      \"text\": \"sit eu consequat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nulla exercitation consequa\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 79974080.72099715,\n    \"safe_stock\": -21528885,\n    \"period_threshold\": 30437218,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sed sint pariatur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ipsum sint\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"qui in\",\n   \"alias\": \"occaecat sit in\"\n  },\n  {\n   \"company_id\": 58790263,\n   \"integration_data\": {},\n   \"company_name\": \"voluptate in ea\",\n   \"task_details\": {\n    \"type\": -72938415,\n    \"group_list\": [\n     {\n      \"text\": \"nulla irure voluptate\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"velit occaecat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 21689430.333552912,\n    \"safe_stock\": -98661101,\n    \"period_threshold\": -81082356,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ipsum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Lorem adipisicing cillum sed commodo\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"pariatur irure\",\n   \"alias\": \"est Ut sunt\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -7395442,\n   \"integration_data\": {},\n   \"company_name\": \"veniam laborum in\",\n   \"task_details\": {\n    \"type\": 6931730,\n    \"group_list\": [\n     {\n      \"text\": \"dolor fugiat ipsum ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliquip \",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 59668279.68178454,\n    \"safe_stock\": 42973491,\n    \"period_threshold\": -71193330,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"pariatur nisi culpa\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ex non\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"deserunt voluptate ipsum\",\n   \"alias\": \"est\"\n  },\n  {\n   \"company_id\": -29660958,\n   \"integration_data\": {},\n   \"company_name\": \"cillum ullamco\",\n   \"task_details\": {\n    \"type\": 63657729,\n    \"group_list\": [\n     {\n      \"text\": \"sint cillum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut exercitation dolore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -70832096.08475216,\n    \"safe_stock\": 36133610,\n    \"period_threshold\": 29067842,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"aliqua dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliqua exercitation amet\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ullamco est\",\n   \"alias\": \"sed esse ipsum minim cillum\"\n  }\n ],\n \"trace_id\": \"Duis consectetur ut in\",\n \"page\": {\n  \"type\": \"minim nostrud ea eu\",\n  \"size\": -56906628,\n  \"current\": -99737687,\n  \"has_next\": false,\n  \"item_total\": -55594512,\n  \"next_id\": \"ad deserunt fugiat\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "15b44dc4-a297-43cc-9cc5-e184f1150fa7",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2007-10-14T22:03:11.521Z\",\n \"status\": -63137476,\n \"error\": \"enim aute ut\",\n \"exception\": \"cupidatat ut incididunt cillum\",\n \"message\": \"elit nulla ad\",\n \"total_time_taken_in_millis\": 46063740,\n \"http_status\": \"304 NOT_MODIFIED\",\n \"items\": [\n  {\n   \"company_id\": 70892804,\n   \"integration_data\": {},\n   \"company_name\": \"dolore\",\n   \"task_details\": {\n    \"type\": -45931793,\n    \"group_list\": [\n     {\n      \"text\": \"sit eu consequat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nulla exercitation consequa\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 79974080.72099715,\n    \"safe_stock\": -21528885,\n    \"period_threshold\": 30437218,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sed sint pariatur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ipsum sint\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"qui in\",\n   \"alias\": \"occaecat sit in\"\n  },\n  {\n   \"company_id\": 58790263,\n   \"integration_data\": {},\n   \"company_name\": \"voluptate in ea\",\n   \"task_details\": {\n    \"type\": -72938415,\n    \"group_list\": [\n     {\n      \"text\": \"nulla irure voluptate\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"velit occaecat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 21689430.333552912,\n    \"safe_stock\": -98661101,\n    \"period_threshold\": -81082356,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ipsum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Lorem adipisicing cillum sed commodo\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"pariatur irure\",\n   \"alias\": \"est Ut sunt\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -7395442,\n   \"integration_data\": {},\n   \"company_name\": \"veniam laborum in\",\n   \"task_details\": {\n    \"type\": 6931730,\n    \"group_list\": [\n     {\n      \"text\": \"dolor fugiat ipsum ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliquip \",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 59668279.68178454,\n    \"safe_stock\": 42973491,\n    \"period_threshold\": -71193330,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"pariatur nisi culpa\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ex non\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"deserunt voluptate ipsum\",\n   \"alias\": \"est\"\n  },\n  {\n   \"company_id\": -29660958,\n   \"integration_data\": {},\n   \"company_name\": \"cillum ullamco\",\n   \"task_details\": {\n    \"type\": 63657729,\n    \"group_list\": [\n     {\n      \"text\": \"sint cillum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut exercitation dolore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -70832096.08475216,\n    \"safe_stock\": 36133610,\n    \"period_threshold\": 29067842,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"aliqua dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliqua exercitation amet\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ullamco est\",\n   \"alias\": \"sed esse ipsum minim cillum\"\n  }\n ],\n \"trace_id\": \"Duis consectetur ut in\",\n \"page\": {\n  \"type\": \"minim nostrud ea eu\",\n  \"size\": -56906628,\n  \"current\": -99737687,\n  \"has_next\": false,\n  \"item_total\": -55594512,\n  \"next_id\": \"ad deserunt fugiat\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "33f87c50-6a3e-4014-a5df-1ae472de9025",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "734b2f6e-d59b-4c36-9172-640501c0694e",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1970-07-18T02:45:44.306Z\",\n \"status\": 34462087,\n \"error\": \"cillum labore\",\n \"exception\": \"minim Duis adipisicing nisi pariatur\",\n \"message\": \"mollit aute minim aliqua\",\n \"total_time_taken_in_millis\": 92194205,\n \"http_status\": \"409 CONFLICT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"eu\",\n \"page\": {\n  \"type\": \"exercitation veniam aliq\",\n  \"size\": 27276236,\n  \"current\": -77870053,\n  \"has_next\": true,\n  \"item_total\": 99906755,\n  \"next_id\": \"anim qui\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "4ef3a7d5-3177-4e0f-b5f2-8bbfaf3b9f1d",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1970-07-18T02:45:44.306Z\",\n \"status\": 34462087,\n \"error\": \"cillum labore\",\n \"exception\": \"minim Duis adipisicing nisi pariatur\",\n \"message\": \"mollit aute minim aliqua\",\n \"total_time_taken_in_millis\": 92194205,\n \"http_status\": \"409 CONFLICT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"eu\",\n \"page\": {\n  \"type\": \"exercitation veniam aliq\",\n  \"size\": 27276236,\n  \"current\": -77870053,\n  \"has_next\": true,\n  \"item_total\": 99906755,\n  \"next_id\": \"anim qui\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "88929517-9930-4867-8531-0dbfb6a4ec20",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1970-07-18T02:45:44.306Z\",\n \"status\": 34462087,\n \"error\": \"cillum labore\",\n \"exception\": \"minim Duis adipisicing nisi pariatur\",\n \"message\": \"mollit aute minim aliqua\",\n \"total_time_taken_in_millis\": 92194205,\n \"http_status\": \"409 CONFLICT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"eu\",\n \"page\": {\n  \"type\": \"exercitation veniam aliq\",\n  \"size\": 27276236,\n  \"current\": -77870053,\n  \"has_next\": true,\n  \"item_total\": 99906755,\n  \"next_id\": \"anim qui\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "2cc2c52b-7b26-4d94-965e-2c42dab21648",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "7dbc4f30-26e3-4af1-af7d-926b60df0b5b",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2017-11-18T05:52:46.930Z\",\n \"status\": 59799992,\n \"error\": \"Excepteur magna sint\",\n \"exception\": \"commodo fugiat sint est\",\n \"message\": \"in ut laboris\",\n \"total_time_taken_in_millis\": 47783490,\n \"http_status\": \"410 GONE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"consectetur laboris ad Ut\",\n \"page\": {\n  \"type\": \"tempor sed dolor dolore\",\n  \"size\": 19339322,\n  \"current\": -22234527,\n  \"has_next\": false,\n  \"item_total\": 67128210,\n  \"next_id\": \"do\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3d19b40d-1550-49ed-9c67-21e36be385d8",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2017-11-18T05:52:46.930Z\",\n \"status\": 59799992,\n \"error\": \"Excepteur magna sint\",\n \"exception\": \"commodo fugiat sint est\",\n \"message\": \"in ut laboris\",\n \"total_time_taken_in_millis\": 47783490,\n \"http_status\": \"410 GONE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"consectetur laboris ad Ut\",\n \"page\": {\n  \"type\": \"tempor sed dolor dolore\",\n  \"size\": 19339322,\n  \"current\": -22234527,\n  \"has_next\": false,\n  \"item_total\": 67128210,\n  \"next_id\": \"do\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2938ae46-867a-4f47-8f9e-cb9da95c5266",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2017-11-18T05:52:46.930Z\",\n \"status\": 59799992,\n \"error\": \"Excepteur magna sint\",\n \"exception\": \"commodo fugiat sint est\",\n \"message\": \"in ut laboris\",\n \"total_time_taken_in_millis\": 47783490,\n \"http_status\": \"410 GONE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"consectetur laboris ad Ut\",\n \"page\": {\n  \"type\": \"tempor sed dolor dolore\",\n  \"size\": 19339322,\n  \"current\": -22234527,\n  \"has_next\": false,\n  \"item_total\": 67128210,\n  \"next_id\": \"do\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "15ea879b-7540-4d07-81e0-e86de9792129",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2017-11-18T05:52:46.930Z\",\n \"status\": 59799992,\n \"error\": \"Excepteur magna sint\",\n \"exception\": \"commodo fugiat sint est\",\n \"message\": \"in ut laboris\",\n \"total_time_taken_in_millis\": 47783490,\n \"http_status\": \"410 GONE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"consectetur laboris ad Ut\",\n \"page\": {\n  \"type\": \"tempor sed dolor dolore\",\n  \"size\": 19339322,\n  \"current\": -22234527,\n  \"has_next\": false,\n  \"item_total\": 67128210,\n  \"next_id\": \"do\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5b256da0-b416-43d4-a4ce-0861d534439c",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2017-11-18T05:52:46.930Z\",\n \"status\": 59799992,\n \"error\": \"Excepteur magna sint\",\n \"exception\": \"commodo fugiat sint est\",\n \"message\": \"in ut laboris\",\n \"total_time_taken_in_millis\": 47783490,\n \"http_status\": \"410 GONE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"consectetur laboris ad Ut\",\n \"page\": {\n  \"type\": \"tempor sed dolor dolore\",\n  \"size\": 19339322,\n  \"current\": -22234527,\n  \"has_next\": false,\n  \"item_total\": 67128210,\n  \"next_id\": \"do\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if(notInIgnoreHeader) {\n          let foundMatch = false;\n          for(let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if(notInIgnoreHeader) {\n          let foundMatch = false;\n          for(let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    \n    // So if there are non-reserved chars (and it's not already all % encoded), just encode them all\n    if (/[^0-9A-Za-z;,/?:@&=+$\\-_.!~*'()#%]/.test(path)) {\n      path = encodeURI(decodeURI(path))\n    }\n\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx0.de"
    }
  ],
  "info": {
    "_postman_id": "39eb799b-12bc-4f13-8d51-a163bbe4bb8a",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
