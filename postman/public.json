{
  "item": [
    {
      "id": "96fa9b92-2143-4d21-b933-ee53eff144a3",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "a49d2b05-7819-40af-99b5-eabf7a9086e7",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "64c1f37e-edd0-4771-b153-647e1546b4da",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "qui amet minim tempor",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "0e200392-3356-45d8-9cde-526a9ed76c64",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "qui amet minim tempor",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"Invalid application domain or id.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "0625cead-7ad6-4468-98c1-35829f6252c2",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "qui amet minim tempor",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "c4ddef47-775c-4221-be2b-2fd399a7448a",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "aee1f1e5-3883-4af3-b284-88a42474c600",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "c7d2c22b-60f2-46a9-be47-d699522d579e",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "4d156d3b-81de-48b3-877e-4a7451d83dbb",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "5b0a7578-729a-40ee-91f5-9f51f3e6ab5f",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 5030056,\n   \"event_name\": \"elit exercitation nostrud laborum\",\n   \"event_type\": \"labore e\",\n   \"event_category\": \"in eu\",\n   \"version\": \"cillum sint in mollit\",\n   \"display_name\": \"nulla cillum esse\",\n   \"description\": \"veniam consectetu\",\n   \"created_on\": \"occaecat ipsum nostrud nulla adipisicing\"\n  },\n  {\n   \"id\": 37130109,\n   \"event_name\": \"pariatur velit labore dolore\",\n   \"event_type\": \"i\",\n   \"event_category\": \"est ea Duis non\",\n   \"version\": \"enim eiusmod et sit\",\n   \"display_name\": \"Excepteur exercitation elit eu\",\n   \"description\": \"qui consectetur\",\n   \"created_on\": \"nulla deserunt nisi enim\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "6b1d2e49-c17a-452c-9b35-3d073a0ab74a",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "df543643-126c-4fa8-8f1d-b6a385d2f0a5",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 4109986,\n   \"event_name\": \"incididu\",\n   \"event_type\": \"Ut cillum elit\",\n   \"event_category\": \"nostrud ut in ut\",\n   \"version\": \"do ullamco\",\n   \"display_name\": \"eu\",\n   \"description\": \"officia\",\n   \"created_on\": \"consequat sed fugiat\"\n  },\n  {\n   \"id\": 9154965,\n   \"event_name\": \"non commodo occaecat laborum\",\n   \"event_type\": \"esse consequat laborum\",\n   \"event_category\": \"cupidatat\",\n   \"version\": \"in nisi\",\n   \"display_name\": \"nisi ut enim labore\",\n   \"description\": \"in\",\n   \"created_on\": \"non\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "4b50cee9-eecf-4b7c-ab50-5b27e8981c58",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "e52ff286-8369-4de6-9a29-d6991ef31f28",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "91555f06-9078-4a22-9831-f3388ec4571c",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2018-12-25T05:03:39.990Z\",\n \"status\": 10077862,\n \"error\": \"eu commodo\",\n \"exception\": \"off\",\n \"message\": \"eiusmod occaecat\",\n \"total_time_taken_in_millis\": 66105329,\n \"http_status\": \"208 ALREADY_REPORTED\",\n \"items\": [\n  {\n   \"company_id\": -2293630,\n   \"integration_data\": {},\n   \"company_name\": \"ipsum do Duis sunt\",\n   \"task_details\": {\n    \"type\": 21952825,\n    \"group_list\": [\n     {\n      \"text\": \"esse cupidatat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eu Lorem anim commodo Ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 89118374.52403954,\n    \"safe_stock\": 31927824,\n    \"period_threshold\": 21104777,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"officia voluptate\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eiusmod consequat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"enim in\",\n   \"alias\": \"cillum Excepteur dolore commodo magna\"\n  },\n  {\n   \"company_id\": 68250590,\n   \"integration_data\": {},\n   \"company_name\": \"aliqua anim\",\n   \"task_details\": {\n    \"type\": 33580191,\n    \"group_list\": [\n     {\n      \"text\": \"mollit enim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"enim anim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 95769668.02170226,\n    \"safe_stock\": -33611764,\n    \"period_threshold\": -74201602,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"voluptate commodo i\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"et id\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"qui Lorem\",\n   \"alias\": \"esse aute laboris non\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 99773179,\n   \"integration_data\": {},\n   \"company_name\": \"Ut tempor\",\n   \"task_details\": {\n    \"type\": 93694194,\n    \"group_list\": [\n     {\n      \"text\": \"laborum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"do\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 89197523.66276792,\n    \"safe_stock\": 36803730,\n    \"period_threshold\": -43377275,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"Ut elit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"est anim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in exercitation pariatur\",\n   \"alias\": \"Excepteur ipsum esse\"\n  },\n  {\n   \"company_id\": 86752899,\n   \"integration_data\": {},\n   \"company_name\": \"aliqua laborum anim reprehenderit ea\",\n   \"task_details\": {\n    \"type\": 73248540,\n    \"group_list\": [\n     {\n      \"text\": \"ad ut occaecat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut elit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -20236958.670157045,\n    \"safe_stock\": 8802052,\n    \"period_threshold\": -72252644,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"cupidatat aliqua\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nisi tempor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"dolore eiusmod aute officia ipsum\",\n   \"alias\": \"commodo et\"\n  }\n ],\n \"trace_id\": \"sit et \",\n \"page\": {\n  \"type\": \"sint\",\n  \"size\": 79573346,\n  \"current\": -33806333,\n  \"has_next\": true,\n  \"item_total\": 55175593,\n  \"next_id\": \"laboris minim amet\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f05e6f3e-de6f-43af-9535-ef91000803da",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1957-10-30T06:11:59.962Z\",\n \"status\": 77995194,\n \"error\": \"eiusmod sed\",\n \"exception\": \"voluptate\",\n \"message\": \"laborum elit Excepteur\",\n \"total_time_taken_in_millis\": -60863275,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": [\n  {\n   \"company_id\": 859119,\n   \"integration_data\": {},\n   \"company_name\": \"eu eiusmod\",\n   \"task_details\": {\n    \"type\": -48795636,\n    \"group_list\": [\n     {\n      \"text\": \"culpa\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"enim velit dolor nisi non\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -21496099.25011848,\n    \"safe_stock\": 39040765,\n    \"period_threshold\": -8293151,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"aute\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cupidatat culpa ex laborum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"quis tempor in Excepteur\",\n   \"alias\": \"Lorem quis tempor\"\n  },\n  {\n   \"company_id\": 73051446,\n   \"integration_data\": {},\n   \"company_name\": \"aliqua in do reprehenderit\",\n   \"task_details\": {\n    \"type\": -8233804,\n    \"group_list\": [\n     {\n      \"text\": \"exercitation esse nulla ull\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consequat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 82091157.88210255,\n    \"safe_stock\": 85589596,\n    \"period_threshold\": 72256051,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"magna\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sunt ea incididunt dolor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"laboris mollit consequat ea\",\n   \"alias\": \"nisi laborum\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -54003488,\n   \"integration_data\": {},\n   \"company_name\": \"nostrud\",\n   \"task_details\": {\n    \"type\": -39567075,\n    \"group_list\": [\n     {\n      \"text\": \"ea eiusmod nulla Duis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"mollit veniam Duis in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 56414780.9504087,\n    \"safe_stock\": 11347973,\n    \"period_threshold\": -33225809,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sunt ut occaecat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"tempor voluptate\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"do enim \",\n   \"alias\": \"sunt ut\"\n  },\n  {\n   \"company_id\": -51448234,\n   \"integration_data\": {},\n   \"company_name\": \"labore fugiat\",\n   \"task_details\": {\n    \"type\": 3335407,\n    \"group_list\": [\n     {\n      \"text\": \"nulla adipi\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sint occaecat id sed\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 5988110.8331349045,\n    \"safe_stock\": 27967994,\n    \"period_threshold\": -49408759,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"in labore proident\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"occaecat anim mollit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"velit ut\",\n   \"alias\": \"dolore culpa tempor ad\"\n  }\n ],\n \"trace_id\": \"occaecat irure\",\n \"page\": {\n  \"type\": \"amet laborum culpa commodo qui\",\n  \"size\": -29657575,\n  \"current\": 86579481,\n  \"has_next\": false,\n  \"item_total\": 76160156,\n  \"next_id\": \"eu quis\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "80434ce6-7daa-4dcc-9966-f8098e5eabc2",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1957-10-30T06:11:59.962Z\",\n \"status\": 77995194,\n \"error\": \"eiusmod sed\",\n \"exception\": \"voluptate\",\n \"message\": \"laborum elit Excepteur\",\n \"total_time_taken_in_millis\": -60863275,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": [\n  {\n   \"company_id\": 859119,\n   \"integration_data\": {},\n   \"company_name\": \"eu eiusmod\",\n   \"task_details\": {\n    \"type\": -48795636,\n    \"group_list\": [\n     {\n      \"text\": \"culpa\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"enim velit dolor nisi non\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -21496099.25011848,\n    \"safe_stock\": 39040765,\n    \"period_threshold\": -8293151,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"aute\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cupidatat culpa ex laborum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"quis tempor in Excepteur\",\n   \"alias\": \"Lorem quis tempor\"\n  },\n  {\n   \"company_id\": 73051446,\n   \"integration_data\": {},\n   \"company_name\": \"aliqua in do reprehenderit\",\n   \"task_details\": {\n    \"type\": -8233804,\n    \"group_list\": [\n     {\n      \"text\": \"exercitation esse nulla ull\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consequat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 82091157.88210255,\n    \"safe_stock\": 85589596,\n    \"period_threshold\": 72256051,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"magna\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sunt ea incididunt dolor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"laboris mollit consequat ea\",\n   \"alias\": \"nisi laborum\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -54003488,\n   \"integration_data\": {},\n   \"company_name\": \"nostrud\",\n   \"task_details\": {\n    \"type\": -39567075,\n    \"group_list\": [\n     {\n      \"text\": \"ea eiusmod nulla Duis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"mollit veniam Duis in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 56414780.9504087,\n    \"safe_stock\": 11347973,\n    \"period_threshold\": -33225809,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sunt ut occaecat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"tempor voluptate\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"do enim \",\n   \"alias\": \"sunt ut\"\n  },\n  {\n   \"company_id\": -51448234,\n   \"integration_data\": {},\n   \"company_name\": \"labore fugiat\",\n   \"task_details\": {\n    \"type\": 3335407,\n    \"group_list\": [\n     {\n      \"text\": \"nulla adipi\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sint occaecat id sed\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 5988110.8331349045,\n    \"safe_stock\": 27967994,\n    \"period_threshold\": -49408759,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"in labore proident\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"occaecat anim mollit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"velit ut\",\n   \"alias\": \"dolore culpa tempor ad\"\n  }\n ],\n \"trace_id\": \"occaecat irure\",\n \"page\": {\n  \"type\": \"amet laborum culpa commodo qui\",\n  \"size\": -29657575,\n  \"current\": 86579481,\n  \"has_next\": false,\n  \"item_total\": 76160156,\n  \"next_id\": \"eu quis\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "bce8d09d-04f2-4b48-8330-ef7ae88439af",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "055571f1-affe-4656-8597-c73c72be53a7",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2007-08-18T16:29:10.452Z\",\n \"status\": 54535852,\n \"error\": \"dolore id consequat nostrud\",\n \"exception\": \"in ex mollit magna aliqua\",\n \"message\": \"pariatur nisi\",\n \"total_time_taken_in_millis\": -15538,\n \"http_status\": \"307 TEMPORARY_REDIRECT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"magna \",\n \"page\": {\n  \"type\": \"sunt in est in\",\n  \"size\": 93154811,\n  \"current\": 28617711,\n  \"has_next\": true,\n  \"item_total\": -50390757,\n  \"next_id\": \"id nisi sed sint sit\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "58e57f37-7106-4c77-b268-dfa1a126ea36",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2007-08-18T16:29:10.452Z\",\n \"status\": 54535852,\n \"error\": \"dolore id consequat nostrud\",\n \"exception\": \"in ex mollit magna aliqua\",\n \"message\": \"pariatur nisi\",\n \"total_time_taken_in_millis\": -15538,\n \"http_status\": \"307 TEMPORARY_REDIRECT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"magna \",\n \"page\": {\n  \"type\": \"sunt in est in\",\n  \"size\": 93154811,\n  \"current\": 28617711,\n  \"has_next\": true,\n  \"item_total\": -50390757,\n  \"next_id\": \"id nisi sed sint sit\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2a3285e3-e81c-40fb-b7c3-5057f8ba7d00",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2007-08-18T16:29:10.452Z\",\n \"status\": 54535852,\n \"error\": \"dolore id consequat nostrud\",\n \"exception\": \"in ex mollit magna aliqua\",\n \"message\": \"pariatur nisi\",\n \"total_time_taken_in_millis\": -15538,\n \"http_status\": \"307 TEMPORARY_REDIRECT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"magna \",\n \"page\": {\n  \"type\": \"sunt in est in\",\n  \"size\": 93154811,\n  \"current\": 28617711,\n  \"has_next\": true,\n  \"item_total\": -50390757,\n  \"next_id\": \"id nisi sed sint sit\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "405bfa7f-8e47-409c-a456-c39815bba39b",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "601c77c7-28d2-4fd4-9923-2fde2b8d2158",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2013-08-23T13:37:17.908Z\",\n \"status\": 45450447,\n \"error\": \"qui tempor\",\n \"exception\": \"nostrud dolore ad anim\",\n \"message\": \"Excepteur exercitation laboris elit veniam\",\n \"total_time_taken_in_millis\": -69034028,\n \"http_status\": \"510 NOT_EXTENDED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"elit labore tempor pariatur nulla\",\n \"page\": {\n  \"type\": \"aute officia ad id\",\n  \"size\": 14632762,\n  \"current\": -55301888,\n  \"has_next\": true,\n  \"item_total\": 7917334,\n  \"next_id\": \"reprehenderit eu minim\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5be33358-897b-4b63-9248-5f72dcde9fbe",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2013-08-23T13:37:17.908Z\",\n \"status\": 45450447,\n \"error\": \"qui tempor\",\n \"exception\": \"nostrud dolore ad anim\",\n \"message\": \"Excepteur exercitation laboris elit veniam\",\n \"total_time_taken_in_millis\": -69034028,\n \"http_status\": \"510 NOT_EXTENDED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"elit labore tempor pariatur nulla\",\n \"page\": {\n  \"type\": \"aute officia ad id\",\n  \"size\": 14632762,\n  \"current\": -55301888,\n  \"has_next\": true,\n  \"item_total\": 7917334,\n  \"next_id\": \"reprehenderit eu minim\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f55ebede-d72e-4366-993b-f5356889c2cd",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2013-08-23T13:37:17.908Z\",\n \"status\": 45450447,\n \"error\": \"qui tempor\",\n \"exception\": \"nostrud dolore ad anim\",\n \"message\": \"Excepteur exercitation laboris elit veniam\",\n \"total_time_taken_in_millis\": -69034028,\n \"http_status\": \"510 NOT_EXTENDED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"elit labore tempor pariatur nulla\",\n \"page\": {\n  \"type\": \"aute officia ad id\",\n  \"size\": 14632762,\n  \"current\": -55301888,\n  \"has_next\": true,\n  \"item_total\": 7917334,\n  \"next_id\": \"reprehenderit eu minim\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "670a3d77-c2b9-4560-9c82-5edc1eb6d3ef",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2013-08-23T13:37:17.908Z\",\n \"status\": 45450447,\n \"error\": \"qui tempor\",\n \"exception\": \"nostrud dolore ad anim\",\n \"message\": \"Excepteur exercitation laboris elit veniam\",\n \"total_time_taken_in_millis\": -69034028,\n \"http_status\": \"510 NOT_EXTENDED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"elit labore tempor pariatur nulla\",\n \"page\": {\n  \"type\": \"aute officia ad id\",\n  \"size\": 14632762,\n  \"current\": -55301888,\n  \"has_next\": true,\n  \"item_total\": 7917334,\n  \"next_id\": \"reprehenderit eu minim\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a137bdfb-6e67-45dd-aed3-ed7a6c549b47",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2013-08-23T13:37:17.908Z\",\n \"status\": 45450447,\n \"error\": \"qui tempor\",\n \"exception\": \"nostrud dolore ad anim\",\n \"message\": \"Excepteur exercitation laboris elit veniam\",\n \"total_time_taken_in_millis\": -69034028,\n \"http_status\": \"510 NOT_EXTENDED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"elit labore tempor pariatur nulla\",\n \"page\": {\n  \"type\": \"aute officia ad id\",\n  \"size\": 14632762,\n  \"current\": -55301888,\n  \"has_next\": true,\n  \"item_total\": 7917334,\n  \"next_id\": \"reprehenderit eu minim\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx0.de"
    }
  ],
  "info": {
    "_postman_id": "56c29724-131e-4b60-b625-939fe7d48c86",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
