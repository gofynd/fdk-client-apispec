{
  "item": [
    {
      "id": "963ad3eb-a6e5-4cf4-84c4-6e75d369975e",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "b06a7ebb-74c9-4445-8d75-aac25b7b9925",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "756f26e0-4c73-4e16-b3a2-b1083a011155",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "veniam incididunt",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d8cc16af-89bd-4116-91b8-6da74371226e",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "veniam incididunt",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "c4faa451-2fef-466e-8a86-ae231fd6d055",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "veniam incididunt",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "edd276b8-5ead-4f4f-96f3-cf12f65aa845",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "ed700611-7e13-475f-b7f0-ceb96dbb8764",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "2d62741e-12cb-433d-a2c7-ecc0267ef2fe",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "5c5f9b03-24c8-4ac6-aacd-98c274d572b5",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "8feda01d-cdc6-4bee-9d5a-f45604cb1430",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 49596958,\n   \"event_name\": \"ut dolore cillum amet enim\",\n   \"event_type\": \"consequat Ut ea\",\n   \"event_category\": \"tempor ipsum nisi non\",\n   \"version\": \"elit Ut\",\n   \"display_name\": \"sunt dolore nisi\",\n   \"description\": \"culpa anim nulla\",\n   \"created_on\": \"proident minim\"\n  },\n  {\n   \"id\": 90990575,\n   \"event_name\": \"Lorem consectetur nisi mollit\",\n   \"event_type\": \"laborum sunt\",\n   \"event_category\": \"reprehenderit sit Excepteur\",\n   \"version\": \"voluptate labore nostrud\",\n   \"display_name\": \"elit sed Excepteur in\",\n   \"description\": \"in dolore ex\",\n   \"created_on\": \"dolor id reprehenderit\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "dffd9a8d-93d5-4717-b4da-a3dcef7afd2b",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "6f95c403-2b2b-4810-a890-7d14db44cc08",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 87638141,\n   \"event_name\": \"sit esse nulla ut amet\",\n   \"event_type\": \"dolor consequat aute velit\",\n   \"event_category\": \"do nostrud et magna quis\",\n   \"version\": \"Ut\",\n   \"display_name\": \"dolore\",\n   \"description\": \"aute anim aliqua\",\n   \"created_on\": \"ut ad et\"\n  },\n  {\n   \"id\": 86025456,\n   \"event_name\": \"do quis laborum ut\",\n   \"event_type\": \"cillum amet aute quis exercitation\",\n   \"event_category\": \"nisi\",\n   \"version\": \"amet Lorem reprehenderit in\",\n   \"display_name\": \"adipisicing\",\n   \"description\": \"magna qui est\",\n   \"created_on\": \"ex labore Ut qui\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "c080e5c8-f0e7-4457-ba5b-fbe75c8a43ca",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "c85615e5-8a7c-40d4-9c38-82c11f78fcfd",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "784ca6c3-9dda-4ae5-8477-4be9bec5b266",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2005-09-20T16:57:43.264Z\",\n \"status\": 9650369,\n \"error\": \"mollit\",\n \"exception\": \"cupidatat\",\n \"message\": \"dolore ea do\",\n \"total_time_taken_in_millis\": 73251513,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": [\n  {\n   \"company_id\": 66048983,\n   \"integration_data\": {},\n   \"company_name\": \"dolore est labore nul\",\n   \"task_details\": {\n    \"type\": 95830975,\n    \"group_list\": [\n     {\n      \"text\": \"non dolore reprehenderit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"incididunt laboris\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 83472087.98798874,\n    \"safe_stock\": -19545118,\n    \"period_threshold\": 55626691,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"adipisicing Ut quis dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Duis in enim null\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"eiusmod fugiat tempor\",\n   \"alias\": \"officia dolor occaecat\"\n  },\n  {\n   \"company_id\": 82390694,\n   \"integration_data\": {},\n   \"company_name\": \"ut ex\",\n   \"task_details\": {\n    \"type\": -5806299,\n    \"group_list\": [\n     {\n      \"text\": \"deserunt ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"est magna incididunt in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -53358184.63226207,\n    \"safe_stock\": 98315634,\n    \"period_threshold\": 1366524,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"officia ad\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliquip do nisi\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"qui dolor\",\n   \"alias\": \"minim laborum ut eiusmod\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -95209195,\n   \"integration_data\": {},\n   \"company_name\": \"dolor sit non\",\n   \"task_details\": {\n    \"type\": -32326695,\n    \"group_list\": [\n     {\n      \"text\": \"cillum voluptate ut in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"do\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -77920805.49703577,\n    \"safe_stock\": 95405906,\n    \"period_threshold\": 62408182,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"voluptate in fugiat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"incididunt do\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"non qui aute\",\n   \"alias\": \"dolore aliquip es\"\n  },\n  {\n   \"company_id\": -30114879,\n   \"integration_data\": {},\n   \"company_name\": \"qui aliqui\",\n   \"task_details\": {\n    \"type\": 12472594,\n    \"group_list\": [\n     {\n      \"text\": \"commodo sed\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ex veniam\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -97526019.58121519,\n    \"safe_stock\": 63798287,\n    \"period_threshold\": -43274149,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"consectetur enim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Excepteur Lo\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aliquip commodo cillum in\",\n   \"alias\": \"voluptate culpa do\"\n  }\n ],\n \"trace_id\": \"aute\",\n \"page\": {\n  \"type\": \"ut laboris\",\n  \"size\": -43946232,\n  \"current\": -3392960,\n  \"has_next\": false,\n  \"item_total\": -71123667,\n  \"next_id\": \"aliqua sed\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d994df8c-3986-42a8-8ef5-f33bb592d1df",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1985-08-26T02:46:12.095Z\",\n \"status\": 35266905,\n \"error\": \"exercitation aute in\",\n \"exception\": \"Excepteur magna sint adipisicing\",\n \"message\": \"id dolor\",\n \"total_time_taken_in_millis\": -8825741,\n \"http_status\": \"413 REQUEST_ENTITY_TOO_LARGE\",\n \"items\": [\n  {\n   \"company_id\": 92708960,\n   \"integration_data\": {},\n   \"company_name\": \"adipisicing\",\n   \"task_details\": {\n    \"type\": -71872749,\n    \"group_list\": [\n     {\n      \"text\": \"mollit nulla\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Excepteur id\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -10072782.476192236,\n    \"safe_stock\": 15920916,\n    \"period_threshold\": -6656133,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"quis officia reprehenderit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"deserunt consectetur ex eiusm\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"do sit nisi\",\n   \"alias\": \"nisi pariatur culpa fugiat\"\n  },\n  {\n   \"company_id\": -13858197,\n   \"integration_data\": {},\n   \"company_name\": \"occaecat Lorem \",\n   \"task_details\": {\n    \"type\": -80461683,\n    \"group_list\": [\n     {\n      \"text\": \"culpa fugiat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ipsum Lorem Ut Duis voluptate\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 83192698.86734274,\n    \"safe_stock\": 74544169,\n    \"period_threshold\": 3447223,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"nisi sit est pariatur laborum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consequat cupidatat aliqua voluptate\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"commodo sit laboris deserunt Lorem\",\n   \"alias\": \"voluptate mollit Excepteur ut\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -18827732,\n   \"integration_data\": {},\n   \"company_name\": \"nostrud non quis\",\n   \"task_details\": {\n    \"type\": 92376722,\n    \"group_list\": [\n     {\n      \"text\": \"qui ad\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 50235377.84371194,\n    \"safe_stock\": 25017875,\n    \"period_threshold\": -5635449,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"in dolore tempor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consectetur ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"eu consectetur\",\n   \"alias\": \"dolore laborum ea nostrud\"\n  },\n  {\n   \"company_id\": 3774991,\n   \"integration_data\": {},\n   \"company_name\": \"ut ut nisi\",\n   \"task_details\": {\n    \"type\": 27341127,\n    \"group_list\": [\n     {\n      \"text\": \"ea\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Ut ut quis irure\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 34420574.23984042,\n    \"safe_stock\": 63616252,\n    \"period_threshold\": -90874652,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolore minim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut Excepteur exercitation\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"consectetur\",\n   \"alias\": \"in ut eiusmod Duis\"\n  }\n ],\n \"trace_id\": \"sed non velit dolor\",\n \"page\": {\n  \"type\": \"ex aute ipsum magna Lorem\",\n  \"size\": 86736184,\n  \"current\": 17527135,\n  \"has_next\": false,\n  \"item_total\": 44638690,\n  \"next_id\": \"enim\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b2e8690e-2a6c-4518-9e90-99e11082503f",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1985-08-26T02:46:12.095Z\",\n \"status\": 35266905,\n \"error\": \"exercitation aute in\",\n \"exception\": \"Excepteur magna sint adipisicing\",\n \"message\": \"id dolor\",\n \"total_time_taken_in_millis\": -8825741,\n \"http_status\": \"413 REQUEST_ENTITY_TOO_LARGE\",\n \"items\": [\n  {\n   \"company_id\": 92708960,\n   \"integration_data\": {},\n   \"company_name\": \"adipisicing\",\n   \"task_details\": {\n    \"type\": -71872749,\n    \"group_list\": [\n     {\n      \"text\": \"mollit nulla\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Excepteur id\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -10072782.476192236,\n    \"safe_stock\": 15920916,\n    \"period_threshold\": -6656133,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"quis officia reprehenderit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"deserunt consectetur ex eiusm\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"do sit nisi\",\n   \"alias\": \"nisi pariatur culpa fugiat\"\n  },\n  {\n   \"company_id\": -13858197,\n   \"integration_data\": {},\n   \"company_name\": \"occaecat Lorem \",\n   \"task_details\": {\n    \"type\": -80461683,\n    \"group_list\": [\n     {\n      \"text\": \"culpa fugiat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ipsum Lorem Ut Duis voluptate\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 83192698.86734274,\n    \"safe_stock\": 74544169,\n    \"period_threshold\": 3447223,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"nisi sit est pariatur laborum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consequat cupidatat aliqua voluptate\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"commodo sit laboris deserunt Lorem\",\n   \"alias\": \"voluptate mollit Excepteur ut\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -18827732,\n   \"integration_data\": {},\n   \"company_name\": \"nostrud non quis\",\n   \"task_details\": {\n    \"type\": 92376722,\n    \"group_list\": [\n     {\n      \"text\": \"qui ad\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 50235377.84371194,\n    \"safe_stock\": 25017875,\n    \"period_threshold\": -5635449,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"in dolore tempor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consectetur ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"eu consectetur\",\n   \"alias\": \"dolore laborum ea nostrud\"\n  },\n  {\n   \"company_id\": 3774991,\n   \"integration_data\": {},\n   \"company_name\": \"ut ut nisi\",\n   \"task_details\": {\n    \"type\": 27341127,\n    \"group_list\": [\n     {\n      \"text\": \"ea\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Ut ut quis irure\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 34420574.23984042,\n    \"safe_stock\": 63616252,\n    \"period_threshold\": -90874652,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolore minim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut Excepteur exercitation\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"consectetur\",\n   \"alias\": \"in ut eiusmod Duis\"\n  }\n ],\n \"trace_id\": \"sed non velit dolor\",\n \"page\": {\n  \"type\": \"ex aute ipsum magna Lorem\",\n  \"size\": 86736184,\n  \"current\": 17527135,\n  \"has_next\": false,\n  \"item_total\": 44638690,\n  \"next_id\": \"enim\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "58f0fe46-f880-427a-aa80-39c3f6d3b42c",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "b59c2e44-f14e-4a5d-9a6d-6b1450d185ac",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1945-09-10T20:17:42.855Z\",\n \"status\": 59094513,\n \"error\": \"aute nulla eiusmod enim\",\n \"exception\": \"quis\",\n \"message\": \"labore Duis occaecat esse\",\n \"total_time_taken_in_millis\": -67957741,\n \"http_status\": \"302 FOUND\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"deserunt\",\n \"page\": {\n  \"type\": \"in pariatur ut laboris nisi\",\n  \"size\": 10778170,\n  \"current\": -20352896,\n  \"has_next\": false,\n  \"item_total\": 32234473,\n  \"next_id\": \"sint\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9f1c6a59-3396-42dd-8e4a-55625e17672e",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1945-09-10T20:17:42.855Z\",\n \"status\": 59094513,\n \"error\": \"aute nulla eiusmod enim\",\n \"exception\": \"quis\",\n \"message\": \"labore Duis occaecat esse\",\n \"total_time_taken_in_millis\": -67957741,\n \"http_status\": \"302 FOUND\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"deserunt\",\n \"page\": {\n  \"type\": \"in pariatur ut laboris nisi\",\n  \"size\": 10778170,\n  \"current\": -20352896,\n  \"has_next\": false,\n  \"item_total\": 32234473,\n  \"next_id\": \"sint\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "6eff009e-65dd-42ed-adb8-43017326cf8a",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1945-09-10T20:17:42.855Z\",\n \"status\": 59094513,\n \"error\": \"aute nulla eiusmod enim\",\n \"exception\": \"quis\",\n \"message\": \"labore Duis occaecat esse\",\n \"total_time_taken_in_millis\": -67957741,\n \"http_status\": \"302 FOUND\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"deserunt\",\n \"page\": {\n  \"type\": \"in pariatur ut laboris nisi\",\n  \"size\": 10778170,\n  \"current\": -20352896,\n  \"has_next\": false,\n  \"item_total\": 32234473,\n  \"next_id\": \"sint\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "7d13fddf-1ae2-4fb2-b1e6-7094b944045f",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "55c8169c-2d36-471c-9aa6-f68b01faeb9a",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1946-03-01T23:25:37.026Z\",\n \"status\": 3188114,\n \"error\": \"Duis\",\n \"exception\": \"Lorem qui\",\n \"message\": \"dolore irure nostrud aute veniam\",\n \"total_time_taken_in_millis\": 5350955,\n \"http_status\": \"303 SEE_OTHER\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"consequat in velit\",\n \"page\": {\n  \"type\": \"tempor esse\",\n  \"size\": 52194738,\n  \"current\": -66669548,\n  \"has_next\": true,\n  \"item_total\": -90762759,\n  \"next_id\": \"ut voluptate sit incididunt\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "58f2fcec-3fcd-44ca-a9b7-725f08ab1c62",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1946-03-01T23:25:37.026Z\",\n \"status\": 3188114,\n \"error\": \"Duis\",\n \"exception\": \"Lorem qui\",\n \"message\": \"dolore irure nostrud aute veniam\",\n \"total_time_taken_in_millis\": 5350955,\n \"http_status\": \"303 SEE_OTHER\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"consequat in velit\",\n \"page\": {\n  \"type\": \"tempor esse\",\n  \"size\": 52194738,\n  \"current\": -66669548,\n  \"has_next\": true,\n  \"item_total\": -90762759,\n  \"next_id\": \"ut voluptate sit incididunt\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "fb8282cd-fb43-4692-b042-114343f92c02",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1946-03-01T23:25:37.026Z\",\n \"status\": 3188114,\n \"error\": \"Duis\",\n \"exception\": \"Lorem qui\",\n \"message\": \"dolore irure nostrud aute veniam\",\n \"total_time_taken_in_millis\": 5350955,\n \"http_status\": \"303 SEE_OTHER\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"consequat in velit\",\n \"page\": {\n  \"type\": \"tempor esse\",\n  \"size\": 52194738,\n  \"current\": -66669548,\n  \"has_next\": true,\n  \"item_total\": -90762759,\n  \"next_id\": \"ut voluptate sit incididunt\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f57f0de0-5b34-453c-a7a3-86651ac2daea",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1946-03-01T23:25:37.026Z\",\n \"status\": 3188114,\n \"error\": \"Duis\",\n \"exception\": \"Lorem qui\",\n \"message\": \"dolore irure nostrud aute veniam\",\n \"total_time_taken_in_millis\": 5350955,\n \"http_status\": \"303 SEE_OTHER\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"consequat in velit\",\n \"page\": {\n  \"type\": \"tempor esse\",\n  \"size\": 52194738,\n  \"current\": -66669548,\n  \"has_next\": true,\n  \"item_total\": -90762759,\n  \"next_id\": \"ut voluptate sit incididunt\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d74b05fd-2f59-45d0-9590-1f8b20116ad6",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1946-03-01T23:25:37.026Z\",\n \"status\": 3188114,\n \"error\": \"Duis\",\n \"exception\": \"Lorem qui\",\n \"message\": \"dolore irure nostrud aute veniam\",\n \"total_time_taken_in_millis\": 5350955,\n \"http_status\": \"303 SEE_OTHER\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"consequat in velit\",\n \"page\": {\n  \"type\": \"tempor esse\",\n  \"size\": 52194738,\n  \"current\": -66669548,\n  \"has_next\": true,\n  \"item_total\": -90762759,\n  \"next_id\": \"ut voluptate sit incididunt\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx0.de"
    }
  ],
  "info": {
    "_postman_id": "c6f00686-d54b-47c7-aa47-f946aa6bd9bf",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
