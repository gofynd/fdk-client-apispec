{
  "item": [
    {
      "id": "a8059d35-738d-4014-a9c5-3ff1e42da27e",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "1ce26bfa-c22d-49a5-ab00-12dd198c9861",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "c106c45b-3986-4650-8307-3fb6917e90ed",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "ea Lorem non velit",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b4df946a-7d57-4853-98a5-136b816ec37d",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "ea Lorem non velit",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"Invalid application domain or id.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "776cbe64-3201-43aa-a3e6-2ae76fed12db",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "ea Lorem non velit",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "f39f0a55-d200-4f11-ad50-708f3de3a3c8",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "99e383ba-ba51-4b7b-b95b-cfdc4aff841a",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "c88f5102-ce16-4b0f-892a-144fb0fb8593",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "69603019-b944-407c-9c53-107d2b51a7b9",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "13408543-6510-4c51-b07a-dac60e981a90",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -9984032,\n   \"event_name\": \"incididunt\",\n   \"event_type\": \"laborum sunt esse\",\n   \"event_category\": \"dolor\",\n   \"version\": \"amet\",\n   \"display_name\": \"cillum\",\n   \"description\": \"ullamco adipisicing id\",\n   \"created_on\": \"mollit ut\"\n  },\n  {\n   \"id\": -97213715,\n   \"event_name\": \"laboris amet\",\n   \"event_type\": \"labore\",\n   \"event_category\": \"labore sunt commodo\",\n   \"version\": \"ea officia\",\n   \"display_name\": \"reprehenderit dolore\",\n   \"description\": \"id non et do\",\n   \"created_on\": \"Duis laboris\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "1380496e-30fe-4161-b264-f9698ba17ce5",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "c66dded3-cf43-44ff-b71c-0bd50141b634",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -69093721,\n   \"event_name\": \"non\",\n   \"event_type\": \"laboris consectetur aute\",\n   \"event_category\": \"veniam voluptate dolore nulla\",\n   \"version\": \"cillum irure\",\n   \"display_name\": \"Ut do sint\",\n   \"description\": \"do Excepteur dolor\",\n   \"created_on\": \"et elit do dolore u\"\n  },\n  {\n   \"id\": 17037345,\n   \"event_name\": \"velit esse dolore\",\n   \"event_type\": \"dolor voluptate ut\",\n   \"event_category\": \"quis in deserunt eiusmod velit\",\n   \"version\": \"exercitation ullamco aliqua\",\n   \"display_name\": \"pariatur laboris U\",\n   \"description\": \"nulla\",\n   \"created_on\": \"reprehenderit dolore officia Duis occaecat\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "da795986-de37-47d6-9b8a-bcbea227bc02",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "2a9749e5-f850-4f08-8205-56dd28631029",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "d54b4775-54c3-4f3f-a423-619be344167c",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2009-06-05T19:40:36.957Z\",\n \"status\": -66952947,\n \"error\": \"et in consectetur\",\n \"exception\": \"Duis incididunt p\",\n \"message\": \"minim enim\",\n \"total_time_taken_in_millis\": 15867457,\n \"http_status\": \"103 CHECKPOINT\",\n \"items\": [\n  {\n   \"company_id\": 30787510,\n   \"integration_data\": {},\n   \"company_name\": \"esse aute quis ea veniam\",\n   \"task_details\": {\n    \"type\": -33931588,\n    \"group_list\": [\n     {\n      \"text\": \"voluptate reprehenderi\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"enim eu adipisi\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 49555915.51882002,\n    \"safe_stock\": 31993281,\n    \"period_threshold\": 74785370,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"voluptate in sed\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"officia laboris enim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"amet nulla aute\",\n   \"alias\": \"nulla dolore\"\n  },\n  {\n   \"company_id\": 47728646,\n   \"integration_data\": {},\n   \"company_name\": \"in ullamco incididunt amet\",\n   \"task_details\": {\n    \"type\": -71663447,\n    \"group_list\": [\n     {\n      \"text\": \"consectetur id\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"elit f\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 95399265.31748441,\n    \"safe_stock\": 99866782,\n    \"period_threshold\": 84382106,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"aliquip dolor minim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ullamco enim officia dolore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"laborum adipisicing\",\n   \"alias\": \"et nisi\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -8072238,\n   \"integration_data\": {},\n   \"company_name\": \"dolor ut do in\",\n   \"task_details\": {\n    \"type\": -37664360,\n    \"group_list\": [\n     {\n      \"text\": \"nisi elit veniam occaecat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore ad cillum ex qui\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 42926417.25104952,\n    \"safe_stock\": -98417276,\n    \"period_threshold\": -35740995,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"nulla in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Duis of\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"cupidatat\",\n   \"alias\": \"anim amet qui\"\n  },\n  {\n   \"company_id\": -8957377,\n   \"integration_data\": {},\n   \"company_name\": \"esse id\",\n   \"task_details\": {\n    \"type\": 18215530,\n    \"group_list\": [\n     {\n      \"text\": \"ad voluptate reprehenderit fugiat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cupidatat sit culpa ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 52030322.57633135,\n    \"safe_stock\": -17444960,\n    \"period_threshold\": 3135150,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"in minim enim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consectetur velit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"id l\",\n   \"alias\": \"nulla minim\"\n  }\n ],\n \"trace_id\": \"enim\",\n \"page\": {\n  \"type\": \"enim\",\n  \"size\": -6668606,\n  \"current\": -45420381,\n  \"has_next\": true,\n  \"item_total\": -38984907,\n  \"next_id\": \"sit consequat Excepteur\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "765e6892-7816-4519-bf69-d2e49ad4ec8b",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1969-12-14T09:21:25.267Z\",\n \"status\": 61015973,\n \"error\": \"dolore\",\n \"exception\": \"quis pariatur est\",\n \"message\": \"sed in sunt officia\",\n \"total_time_taken_in_millis\": 26136285,\n \"http_status\": \"201 CREATED\",\n \"items\": [\n  {\n   \"company_id\": 12050568,\n   \"integration_data\": {},\n   \"company_name\": \"laboris reprehenderit esse\",\n   \"task_details\": {\n    \"type\": -35381080,\n    \"group_list\": [\n     {\n      \"text\": \"nisi dolore ut tempor fugiat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"enim id\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 79192774.35295221,\n    \"safe_stock\": -9274133,\n    \"period_threshold\": -29500110,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"commodo ali\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"cillum in\",\n   \"alias\": \"esse\"\n  },\n  {\n   \"company_id\": 6180577,\n   \"integration_data\": {},\n   \"company_name\": \"ut aliqua laborum dolor\",\n   \"task_details\": {\n    \"type\": 87107760,\n    \"group_list\": [\n     {\n      \"text\": \"sed quis in fugiat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"irure velit minim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -70056770.54532179,\n    \"safe_stock\": 60379360,\n    \"period_threshold\": 52324571,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"officia\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"labore ad laborum volup\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aute Lorem\",\n   \"alias\": \"minim velit ut dolore pariatur\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 9834019,\n   \"integration_data\": {},\n   \"company_name\": \"nisi consequat exercitation eu\",\n   \"task_details\": {\n    \"type\": -43040792,\n    \"group_list\": [\n     {\n      \"text\": \"officia tempor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"veniam pariatur Excepteur magna\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 98771633.48708457,\n    \"safe_stock\": -17294533,\n    \"period_threshold\": -98602145,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ullamco\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"occaecat sunt consequat qui\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"do magna anim\",\n   \"alias\": \"ut fugiat laborum ullamco mollit\"\n  },\n  {\n   \"company_id\": -15467798,\n   \"integration_data\": {},\n   \"company_name\": \"in laborum dolor cillum labore\",\n   \"task_details\": {\n    \"type\": 15270025,\n    \"group_list\": [\n     {\n      \"text\": \"non amet elit quis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sunt veniam mollit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -8365840.671176627,\n    \"safe_stock\": -93027829,\n    \"period_threshold\": -72586239,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"esse sed\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cupidatat consequat pariatur aliquip nostrud\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"eiusmod id laboris deserunt\",\n   \"alias\": \"ipsum nisi minim exercitation\"\n  }\n ],\n \"trace_id\": \"Lorem\",\n \"page\": {\n  \"type\": \"laboris nisi\",\n  \"size\": 38075941,\n  \"current\": 81440903,\n  \"has_next\": false,\n  \"item_total\": 32213435,\n  \"next_id\": \"aute\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "957ba904-0d90-41d8-9ee5-234ce44ee0c3",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1969-12-14T09:21:25.267Z\",\n \"status\": 61015973,\n \"error\": \"dolore\",\n \"exception\": \"quis pariatur est\",\n \"message\": \"sed in sunt officia\",\n \"total_time_taken_in_millis\": 26136285,\n \"http_status\": \"201 CREATED\",\n \"items\": [\n  {\n   \"company_id\": 12050568,\n   \"integration_data\": {},\n   \"company_name\": \"laboris reprehenderit esse\",\n   \"task_details\": {\n    \"type\": -35381080,\n    \"group_list\": [\n     {\n      \"text\": \"nisi dolore ut tempor fugiat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"enim id\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 79192774.35295221,\n    \"safe_stock\": -9274133,\n    \"period_threshold\": -29500110,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"commodo ali\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"cillum in\",\n   \"alias\": \"esse\"\n  },\n  {\n   \"company_id\": 6180577,\n   \"integration_data\": {},\n   \"company_name\": \"ut aliqua laborum dolor\",\n   \"task_details\": {\n    \"type\": 87107760,\n    \"group_list\": [\n     {\n      \"text\": \"sed quis in fugiat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"irure velit minim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -70056770.54532179,\n    \"safe_stock\": 60379360,\n    \"period_threshold\": 52324571,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"officia\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"labore ad laborum volup\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aute Lorem\",\n   \"alias\": \"minim velit ut dolore pariatur\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 9834019,\n   \"integration_data\": {},\n   \"company_name\": \"nisi consequat exercitation eu\",\n   \"task_details\": {\n    \"type\": -43040792,\n    \"group_list\": [\n     {\n      \"text\": \"officia tempor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"veniam pariatur Excepteur magna\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 98771633.48708457,\n    \"safe_stock\": -17294533,\n    \"period_threshold\": -98602145,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ullamco\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"occaecat sunt consequat qui\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"do magna anim\",\n   \"alias\": \"ut fugiat laborum ullamco mollit\"\n  },\n  {\n   \"company_id\": -15467798,\n   \"integration_data\": {},\n   \"company_name\": \"in laborum dolor cillum labore\",\n   \"task_details\": {\n    \"type\": 15270025,\n    \"group_list\": [\n     {\n      \"text\": \"non amet elit quis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sunt veniam mollit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -8365840.671176627,\n    \"safe_stock\": -93027829,\n    \"period_threshold\": -72586239,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"esse sed\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cupidatat consequat pariatur aliquip nostrud\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"eiusmod id laboris deserunt\",\n   \"alias\": \"ipsum nisi minim exercitation\"\n  }\n ],\n \"trace_id\": \"Lorem\",\n \"page\": {\n  \"type\": \"laboris nisi\",\n  \"size\": 38075941,\n  \"current\": 81440903,\n  \"has_next\": false,\n  \"item_total\": 32213435,\n  \"next_id\": \"aute\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "11f4ea0d-a1ab-42fb-b74b-06bd1f4efce4",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "64c732d9-5ab7-4396-8e3b-638543d426f4",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1946-03-13T00:26:06.539Z\",\n \"status\": 57703636,\n \"error\": \"dolor reprehenderit occaecat irure\",\n \"exception\": \"enim fugiat ut\",\n \"message\": \"in pariatur\",\n \"total_time_taken_in_millis\": 67601209,\n \"http_status\": \"203 NON_AUTHORITATIVE_INFORMATION\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"voluptate commodo\",\n \"page\": {\n  \"type\": \"deserunt labore elit anim\",\n  \"size\": 75599058,\n  \"current\": 77300240,\n  \"has_next\": true,\n  \"item_total\": 85333199,\n  \"next_id\": \"ad veniam\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "551912dc-c23b-4bea-8c60-47ee02c27b38",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1946-03-13T00:26:06.539Z\",\n \"status\": 57703636,\n \"error\": \"dolor reprehenderit occaecat irure\",\n \"exception\": \"enim fugiat ut\",\n \"message\": \"in pariatur\",\n \"total_time_taken_in_millis\": 67601209,\n \"http_status\": \"203 NON_AUTHORITATIVE_INFORMATION\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"voluptate commodo\",\n \"page\": {\n  \"type\": \"deserunt labore elit anim\",\n  \"size\": 75599058,\n  \"current\": 77300240,\n  \"has_next\": true,\n  \"item_total\": 85333199,\n  \"next_id\": \"ad veniam\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "19f646f8-1614-499d-a6b0-b2a5ffee90ee",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1946-03-13T00:26:06.539Z\",\n \"status\": 57703636,\n \"error\": \"dolor reprehenderit occaecat irure\",\n \"exception\": \"enim fugiat ut\",\n \"message\": \"in pariatur\",\n \"total_time_taken_in_millis\": 67601209,\n \"http_status\": \"203 NON_AUTHORITATIVE_INFORMATION\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"voluptate commodo\",\n \"page\": {\n  \"type\": \"deserunt labore elit anim\",\n  \"size\": 75599058,\n  \"current\": 77300240,\n  \"has_next\": true,\n  \"item_total\": 85333199,\n  \"next_id\": \"ad veniam\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "229720f4-c022-4d18-92a4-d5b362670998",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "0338b461-0b04-4409-ba8a-794cde854151",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1997-10-11T21:28:13.857Z\",\n \"status\": -71845064,\n \"error\": \"minim nisi\",\n \"exception\": \"tempor dolore proident\",\n \"message\": \"sint in dolor\",\n \"total_time_taken_in_millis\": 47619607,\n \"http_status\": \"204 NO_CONTENT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"elit\",\n \"page\": {\n  \"type\": \"dolor deserunt sunt occaecat\",\n  \"size\": 30486698,\n  \"current\": -48776974,\n  \"has_next\": true,\n  \"item_total\": 53228382,\n  \"next_id\": \"sint non\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "194e2bf1-0b79-4e81-b074-e327dead00b6",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1997-10-11T21:28:13.857Z\",\n \"status\": -71845064,\n \"error\": \"minim nisi\",\n \"exception\": \"tempor dolore proident\",\n \"message\": \"sint in dolor\",\n \"total_time_taken_in_millis\": 47619607,\n \"http_status\": \"204 NO_CONTENT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"elit\",\n \"page\": {\n  \"type\": \"dolor deserunt sunt occaecat\",\n  \"size\": 30486698,\n  \"current\": -48776974,\n  \"has_next\": true,\n  \"item_total\": 53228382,\n  \"next_id\": \"sint non\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1b51a53d-1f65-400b-8f3e-1c423f70dd62",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1997-10-11T21:28:13.857Z\",\n \"status\": -71845064,\n \"error\": \"minim nisi\",\n \"exception\": \"tempor dolore proident\",\n \"message\": \"sint in dolor\",\n \"total_time_taken_in_millis\": 47619607,\n \"http_status\": \"204 NO_CONTENT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"elit\",\n \"page\": {\n  \"type\": \"dolor deserunt sunt occaecat\",\n  \"size\": 30486698,\n  \"current\": -48776974,\n  \"has_next\": true,\n  \"item_total\": 53228382,\n  \"next_id\": \"sint non\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f7be94bc-71ee-475f-8bf7-faa2eafc4b39",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1997-10-11T21:28:13.857Z\",\n \"status\": -71845064,\n \"error\": \"minim nisi\",\n \"exception\": \"tempor dolore proident\",\n \"message\": \"sint in dolor\",\n \"total_time_taken_in_millis\": 47619607,\n \"http_status\": \"204 NO_CONTENT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"elit\",\n \"page\": {\n  \"type\": \"dolor deserunt sunt occaecat\",\n  \"size\": 30486698,\n  \"current\": -48776974,\n  \"has_next\": true,\n  \"item_total\": 53228382,\n  \"next_id\": \"sint non\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ff95068e-212b-48a0-8563-87af76d6daba",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1997-10-11T21:28:13.857Z\",\n \"status\": -71845064,\n \"error\": \"minim nisi\",\n \"exception\": \"tempor dolore proident\",\n \"message\": \"sint in dolor\",\n \"total_time_taken_in_millis\": 47619607,\n \"http_status\": \"204 NO_CONTENT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"elit\",\n \"page\": {\n  \"type\": \"dolor deserunt sunt occaecat\",\n  \"size\": 30486698,\n  \"current\": -48776974,\n  \"has_next\": true,\n  \"item_total\": 53228382,\n  \"next_id\": \"sint non\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx0.de"
    }
  ],
  "info": {
    "_postman_id": "a179fa57-be03-473e-b9d7-a27e5c3de333",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
