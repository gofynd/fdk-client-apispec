{
  "item": [
    {
      "id": "afa949df-4076-4db4-8261-9b68948d7112",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "6f6caf53-694a-45d1-a79b-b991a74d970c",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "de085c34-4897-45bb-84e9-8558f14db2c3",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "dolore pariatur ",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"application\": {\n    \"website\": {\n      \"enabled\": true,\n      \"basepath\": \"/\"\n    },\n    \"cors\": {\n      \"domains\": []\n    },\n    \"auth\": {\n      \"enabled\": true\n    },\n    \"description\": \"test\",\n    \"channel_type\": \"store\",\n    \"cache_ttl\": -1,\n    \"internal\": false,\n    \"is_active\": true,\n    \"mode\": \"live\",\n    \"_id\": \"620b931ee7bfb11f910bf4a3\",\n    \"company_id\": 2,\n    \"name\": \"test\",\n    \"owner\": \"5b9b98150df588546aaea6d2\",\n    \"logo\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"favicon\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"banner\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n    },\n    \"token\": \"tPQv0nc23\",\n    \"tokens\": [\n      {\n        \"token\": \"tPQv0nc23\",\n        \"created_at\": \"2022-02-15T11:48:46.909Z\"\n      }\n    ],\n    \"domains\": [\n      {\n        \"verified\": true,\n        \"is_primary\": true,\n        \"is_shortlink\": true,\n        \"_id\": \"620b931ee7bfb11f910bf4a4\",\n        \"name\": \"qckvv5lhp.hostfynd.dev\"\n      }\n    ],\n    \"redirections\": [],\n    \"meta\": [],\n    \"created_at\": \"2022-02-15T11:48:46.909Z\",\n    \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n    \"__v\": 0,\n    \"domain\": {\n      \"verified\": true,\n      \"is_primary\": true,\n      \"is_shortlink\": true,\n      \"_id\": \"620b931ee7bfb11f910bf4a4\",\n      \"name\": \"qckvv5lhp.hostfynd.dev\"\n    },\n    \"id\": \"620b931ee7bfb11f910bf4a3\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "535bcf52-fc3e-49a5-a4d8-6f7c89ea9313",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "dolore pariatur ",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"Invalid application domain or id.\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d91ef3be-1a9b-4cd2-8175-e6d0feb349c7",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "dolore pariatur ",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"No application found\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b24063e7-3dd4-40a0-a501-da093c167d50",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "aae63aee-a87a-44c5-b071-0a4a330df63a",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"items\": [\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"ad\",\n      \"phone_code\": \"fugiat quis laborum\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"laboris magna sit volupt\",\n      \"country_code\": \"sunt\",\n      \"latitude\": \"ad\",\n      \"longitude\": \"ut officia\"\n    },\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"ut\",\n      \"phone_code\": \"aute pariatu\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"quis irure culpa\",\n      \"country_code\": \"magna velit\",\n      \"latitude\": \"sint tempor Excepteur\",\n      \"longitude\": \"do elit esse in\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "839236f9-7ae0-4e5f-969a-54b80e4567ae",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "9fb6ee81-3707-4ca9-a11f-64abc89e219a",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "962d035f-f85b-4ccc-a29e-9a089e483679",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 68577393,\n      \"event_name\": \"esse Excepteur ad incididunt\",\n      \"event_type\": \"dolore magna elit\",\n      \"event_category\": \"eiusmod qui pariatur aliqua\",\n      \"version\": \"do dolore mollit\",\n      \"display_name\": \"non quis culpa reprehenderit\",\n      \"description\": \"aliqua aliqu\",\n      \"created_on\": \"minim sed exercitation\"\n    },\n    {\n      \"id\": 57745550,\n      \"event_name\": \"ea\",\n      \"event_type\": \"adipisicing nulla sunt\",\n      \"event_category\": \"occaecat elit enim Duis\",\n      \"version\": \"eu dolor\",\n      \"display_name\": \"sed eiusmod et\",\n      \"description\": \"eu\",\n      \"created_on\": \"ut voluptate ullamco dolore quis\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "563ce143-c7af-4785-a35c-8b3c90ab5272",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "575c9afd-4ff0-489b-93af-9ad129715153",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 37627256,\n      \"event_name\": \"labore quis dolor\",\n      \"event_type\": \"ullamco irure occaecat\",\n      \"event_category\": \"sint sit fugiat Ut\",\n      \"version\": \"tempor nostrud eiusmod voluptate incididunt\",\n      \"display_name\": \"amet elit sit officia\",\n      \"description\": \"exercitation deserunt ullamco sint\",\n      \"created_on\": \"culpa eiusmod\"\n    },\n    {\n      \"id\": -62307416,\n      \"event_name\": \"enim esse ipsum\",\n      \"event_type\": \"exercitation\",\n      \"event_category\": \"laboris est esse sint\",\n      \"version\": \"Excepteur cupidatat ea dolore\",\n      \"display_name\": \"dolor eu incididunt\",\n      \"description\": \"dolore nulla\",\n      \"created_on\": \"qui\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "0798e327-a8c8-4602-b250-dd0ba6f12267",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "c86c6571-a4a4-44d0-8367-daae1e2c5384",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "32e0886c-481e-450f-92f4-43e245691d76",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2022-02-13T00:00:21.912Z\",\n  \"status\": -34706612,\n  \"error\": \"aute non commodo\",\n  \"exception\": \"labore\",\n  \"message\": \"elit Ut pariatur\",\n  \"total_time_taken_in_millis\": 13988043,\n  \"http_status\": \"202 ACCEPTED\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"in\",\n  \"page\": {\n    \"type\": \"proident ea tempor ullamco do\",\n    \"size\": -78059414,\n    \"current\": -56383919,\n    \"has_next\": false,\n    \"item_total\": 40312584,\n    \"next_id\": \"qui dolore\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b3fbd769-2d0d-4bda-b6ff-763b21498582",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2022-02-13T00:00:21.912Z\",\n  \"status\": -34706612,\n  \"error\": \"aute non commodo\",\n  \"exception\": \"labore\",\n  \"message\": \"elit Ut pariatur\",\n  \"total_time_taken_in_millis\": 13988043,\n  \"http_status\": \"202 ACCEPTED\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"in\",\n  \"page\": {\n    \"type\": \"proident ea tempor ullamco do\",\n    \"size\": -78059414,\n    \"current\": -56383919,\n    \"has_next\": false,\n    \"item_total\": 40312584,\n    \"next_id\": \"qui dolore\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a12c5e1c-04f9-41d4-9525-59b786a8a5c3",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2022-02-13T00:00:21.912Z\",\n  \"status\": -34706612,\n  \"error\": \"aute non commodo\",\n  \"exception\": \"labore\",\n  \"message\": \"elit Ut pariatur\",\n  \"total_time_taken_in_millis\": 13988043,\n  \"http_status\": \"202 ACCEPTED\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"in\",\n  \"page\": {\n    \"type\": \"proident ea tempor ullamco do\",\n    \"size\": -78059414,\n    \"current\": -56383919,\n    \"has_next\": false,\n    \"item_total\": 40312584,\n    \"next_id\": \"qui dolore\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ed547272-d4fb-43e3-b3c5-4a5f8f1be3cc",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "d56b247c-c691-43b0-96aa-6745a020b892",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1946-10-25T01:34:59.470Z\",\n  \"status\": 39958449,\n  \"error\": \"culpa aliqua ad v\",\n  \"exception\": \"esse irure velit labore quis\",\n  \"message\": \"ut\",\n  \"total_time_taken_in_millis\": 95602656,\n  \"http_status\": \"413 REQUEST_ENTITY_TOO_LARGE\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"est consequat veniam\",\n  \"page\": {\n    \"type\": \"cillum Duis dolore ut\",\n    \"size\": 70648216,\n    \"current\": -19252010,\n    \"has_next\": false,\n    \"item_total\": 14197503,\n    \"next_id\": \"amet fugiat cupidatat veniam\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "97f10b3c-c288-4f24-ae35-9f8e4dfec987",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1946-10-25T01:34:59.470Z\",\n  \"status\": 39958449,\n  \"error\": \"culpa aliqua ad v\",\n  \"exception\": \"esse irure velit labore quis\",\n  \"message\": \"ut\",\n  \"total_time_taken_in_millis\": 95602656,\n  \"http_status\": \"413 REQUEST_ENTITY_TOO_LARGE\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"est consequat veniam\",\n  \"page\": {\n    \"type\": \"cillum Duis dolore ut\",\n    \"size\": 70648216,\n    \"current\": -19252010,\n    \"has_next\": false,\n    \"item_total\": 14197503,\n    \"next_id\": \"amet fugiat cupidatat veniam\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "6b3e9314-82f3-4aca-b80d-91619cba6bb7",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1946-10-25T01:34:59.470Z\",\n  \"status\": 39958449,\n  \"error\": \"culpa aliqua ad v\",\n  \"exception\": \"esse irure velit labore quis\",\n  \"message\": \"ut\",\n  \"total_time_taken_in_millis\": 95602656,\n  \"http_status\": \"413 REQUEST_ENTITY_TOO_LARGE\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"est consequat veniam\",\n  \"page\": {\n    \"type\": \"cillum Duis dolore ut\",\n    \"size\": 70648216,\n    \"current\": -19252010,\n    \"has_next\": false,\n    \"item_total\": 14197503,\n    \"next_id\": \"amet fugiat cupidatat veniam\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "641a9b69-ed1d-48e2-9b76-c956db952933",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1946-10-25T01:34:59.470Z\",\n  \"status\": 39958449,\n  \"error\": \"culpa aliqua ad v\",\n  \"exception\": \"esse irure velit labore quis\",\n  \"message\": \"ut\",\n  \"total_time_taken_in_millis\": 95602656,\n  \"http_status\": \"413 REQUEST_ENTITY_TOO_LARGE\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"est consequat veniam\",\n  \"page\": {\n    \"type\": \"cillum Duis dolore ut\",\n    \"size\": 70648216,\n    \"current\": -19252010,\n    \"has_next\": false,\n    \"item_total\": 14197503,\n    \"next_id\": \"amet fugiat cupidatat veniam\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e440ae86-056c-46ea-9ee1-665a664dabfd",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1946-10-25T01:34:59.470Z\",\n  \"status\": 39958449,\n  \"error\": \"culpa aliqua ad v\",\n  \"exception\": \"esse irure velit labore quis\",\n  \"message\": \"ut\",\n  \"total_time_taken_in_millis\": 95602656,\n  \"http_status\": \"413 REQUEST_ENTITY_TOO_LARGE\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"est consequat veniam\",\n  \"page\": {\n    \"type\": \"cillum Duis dolore ut\",\n    \"size\": 70648216,\n    \"current\": -19252010,\n    \"has_next\": false,\n    \"item_total\": 14197503,\n    \"next_id\": \"amet fugiat cupidatat veniam\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "2cf8102e-0099-4bcf-abc0-9aebe98aeee3",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "c1df6a39-faaa-4a11-9593-9236d9230ac7",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1968-02-07T05:04:10.939Z\",\n  \"status\": 846036,\n  \"error\": \"occaecat minim laborum\",\n  \"exception\": \"dolor nostrud reprehenderit aliquip nulla\",\n  \"message\": \"officia eu Excepteur\",\n  \"total_time_taken_in_millis\": -2271920,\n  \"http_status\": \"202 ACCEPTED\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"id laboris do deserunt occaecat\",\n      \"description\": \"do aute Ut anim\",\n      \"name\": \"do\",\n      \"slug\": \"Duis culpa\",\n      \"meta\": [\n        {\n          \"_id\": \"et Duis\",\n          \"name\": \"veniam incididunt ad nisi\",\n          \"value\": \"ipsum magna reprehenderit\"\n        },\n        {\n          \"_id\": \"veniam cupidatat\",\n          \"name\": \"esse culpa qui\",\n          \"value\": \"nulla non adipisicing\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"tempor mollit sed\",\n        \"integration\": \"aliqua exercitation deserunt\",\n        \"level\": \"et id cupidatat\",\n        \"uid\": -34020885,\n        \"opted\": true,\n        \"permissions\": [\n          \"ipsum commodo\",\n          \"commodo deserunt\"\n        ],\n        \"token\": \"sunt ad occaecat aliquip in\",\n        \"name\": \"tempor\",\n        \"stores\": [\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"Ut anim laborum proident \",\n        \"integration\": \"aliqua\",\n        \"level\": \"aliquip eu adipisicing ut\",\n        \"uid\": 22332411,\n        \"opted\": true,\n        \"permissions\": [\n          \"ullamco ex\",\n          \"exercitation\"\n        ],\n        \"token\": \"aliquip irure tempor id\",\n        \"name\": \"ut eiusmod laborum laboris est\",\n        \"stores\": [\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"sint irure\",\n      \"description\": \"eiusmod id consectetur ut \",\n      \"name\": \"ut laborum\",\n      \"slug\": \"sit adipisicing proident magna\",\n      \"meta\": [\n        {\n          \"_id\": \"anim Ut\",\n          \"name\": \"cupidatat sed sunt magna tempor\",\n          \"value\": \"adipisicing\"\n        },\n        {\n          \"_id\": \"id\",\n          \"name\": \"Duis in\",\n          \"value\": \"officia ullamco in\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"aute ipsum laboris\",\n        \"integration\": \"velit enim laboris\",\n        \"level\": \"non id ea veniam\",\n        \"uid\": -99937,\n        \"opted\": true,\n        \"permissions\": [\n          \"laborum dolor\",\n          \"in incididunt cillum in\"\n        ],\n        \"token\": \"Lorem deserunt fugiat non\",\n        \"name\": \"minim aliqua ut nostrud incididunt\",\n        \"stores\": [\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"minim dolore amet incididun\",\n        \"integration\": \"id eiusmod incididunt\",\n        \"level\": \"nulla minim Duis ex\",\n        \"uid\": -63271178,\n        \"opted\": true,\n        \"permissions\": [\n          \"eu esse irure\",\n          \"Duis et incididunt\"\n        ],\n        \"token\": \"tempor commodo\",\n        \"name\": \"deserunt adipisicing elit in\",\n        \"stores\": [\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"ad aliquip irure Ut velit\",\n  \"page\": {\n    \"type\": \"in minim quis consectetur\",\n    \"size\": -55481015,\n    \"current\": 93784093,\n    \"has_next\": false,\n    \"item_total\": -72675029,\n    \"next_id\": \"velit mollit labore consectetur est\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ba82c951-7c2a-4bb2-988e-b8d9c369868e",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2018-01-18T10:56:19.546Z\",\n  \"status\": 99021542,\n  \"error\": \"sed esse officia id\",\n  \"exception\": \"cupidatat et\",\n  \"message\": \"commodo Duis\",\n  \"total_time_taken_in_millis\": 14171030,\n  \"http_status\": \"102 PROCESSING\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"aliqua sit reprehenderit enim\",\n      \"description\": \"labore adipisicing cillum\",\n      \"name\": \"proident culpa et sed in\",\n      \"slug\": \"dolore consectetur ut\",\n      \"meta\": [\n        {\n          \"_id\": \"\",\n          \"name\": \"cupidatat\",\n          \"value\": \"mollit enim\"\n        },\n        {\n          \"_id\": \"qui eiusmod cupidatat voluptate\",\n          \"name\": \"velit deserunt ullamco aliquip\",\n          \"value\": \"veniam deserunt Lorem\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"sunt\",\n        \"integration\": \"tempor in aliqua consequat\",\n        \"level\": \"consequat\",\n        \"uid\": -40541009,\n        \"opted\": false,\n        \"permissions\": [\n          \"ve\",\n          \"c\"\n        ],\n        \"token\": \"et dolor Excepteur\",\n        \"name\": \"aliquip ullamco sed Lorem\",\n        \"stores\": [\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"Lorem dolor ad\",\n        \"integration\": \"eu cillum sit tempor ut\",\n        \"level\": \"cupidatat\",\n        \"uid\": -4082892,\n        \"opted\": false,\n        \"permissions\": [\n          \"amet ex do\",\n          \"aute officia commodo\"\n        ],\n        \"token\": \"dolore elit\",\n        \"name\": \"aute L\",\n        \"stores\": [\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"veniam dolore\",\n      \"description\": \"est in quis anim\",\n      \"name\": \"deserunt quis\",\n      \"slug\": \"ut ex\",\n      \"meta\": [\n        {\n          \"_id\": \"ullamco cupidatat dolore\",\n          \"name\": \"Lorem officia reprehenderit sit\",\n          \"value\": \"ali\"\n        },\n        {\n          \"_id\": \"amet tempor\",\n          \"name\": \"enim ipsum ad laborum\",\n          \"value\": \"laborum velit consequat\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"sunt\",\n        \"integration\": \"ea aliqua nostrud\",\n        \"level\": \"dolor quis eiusmod nisi\",\n        \"uid\": 23218151,\n        \"opted\": false,\n        \"permissions\": [\n          \"ad\",\n          \"in cillum\"\n        ],\n        \"token\": \"proident tempor\",\n        \"name\": \"officia dolore\",\n        \"stores\": [\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"cupidatat ir\",\n        \"integration\": \"in ut\",\n        \"level\": \"non sed ea commodo\",\n        \"uid\": 63176233,\n        \"opted\": true,\n        \"permissions\": [\n          \"consectetur amet commodo\",\n          \"commodo qui\"\n        ],\n        \"token\": \"dolore laboris\",\n        \"name\": \"minim magna\",\n        \"stores\": [\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"id\",\n  \"page\": {\n    \"type\": \"quis tempor occaecat\",\n    \"size\": -27054356,\n    \"current\": -6638431,\n    \"has_next\": true,\n    \"item_total\": 43307288,\n    \"next_id\": \"velit dolor\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "daab4654-d4fb-4399-9157-2fdfe80b25cc",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2018-01-18T10:56:19.546Z\",\n  \"status\": 99021542,\n  \"error\": \"sed esse officia id\",\n  \"exception\": \"cupidatat et\",\n  \"message\": \"commodo Duis\",\n  \"total_time_taken_in_millis\": 14171030,\n  \"http_status\": \"102 PROCESSING\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"aliqua sit reprehenderit enim\",\n      \"description\": \"labore adipisicing cillum\",\n      \"name\": \"proident culpa et sed in\",\n      \"slug\": \"dolore consectetur ut\",\n      \"meta\": [\n        {\n          \"_id\": \"\",\n          \"name\": \"cupidatat\",\n          \"value\": \"mollit enim\"\n        },\n        {\n          \"_id\": \"qui eiusmod cupidatat voluptate\",\n          \"name\": \"velit deserunt ullamco aliquip\",\n          \"value\": \"veniam deserunt Lorem\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"sunt\",\n        \"integration\": \"tempor in aliqua consequat\",\n        \"level\": \"consequat\",\n        \"uid\": -40541009,\n        \"opted\": false,\n        \"permissions\": [\n          \"ve\",\n          \"c\"\n        ],\n        \"token\": \"et dolor Excepteur\",\n        \"name\": \"aliquip ullamco sed Lorem\",\n        \"stores\": [\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"Lorem dolor ad\",\n        \"integration\": \"eu cillum sit tempor ut\",\n        \"level\": \"cupidatat\",\n        \"uid\": -4082892,\n        \"opted\": false,\n        \"permissions\": [\n          \"amet ex do\",\n          \"aute officia commodo\"\n        ],\n        \"token\": \"dolore elit\",\n        \"name\": \"aute L\",\n        \"stores\": [\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"veniam dolore\",\n      \"description\": \"est in quis anim\",\n      \"name\": \"deserunt quis\",\n      \"slug\": \"ut ex\",\n      \"meta\": [\n        {\n          \"_id\": \"ullamco cupidatat dolore\",\n          \"name\": \"Lorem officia reprehenderit sit\",\n          \"value\": \"ali\"\n        },\n        {\n          \"_id\": \"amet tempor\",\n          \"name\": \"enim ipsum ad laborum\",\n          \"value\": \"laborum velit consequat\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"sunt\",\n        \"integration\": \"ea aliqua nostrud\",\n        \"level\": \"dolor quis eiusmod nisi\",\n        \"uid\": 23218151,\n        \"opted\": false,\n        \"permissions\": [\n          \"ad\",\n          \"in cillum\"\n        ],\n        \"token\": \"proident tempor\",\n        \"name\": \"officia dolore\",\n        \"stores\": [\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"cupidatat ir\",\n        \"integration\": \"in ut\",\n        \"level\": \"non sed ea commodo\",\n        \"uid\": 63176233,\n        \"opted\": true,\n        \"permissions\": [\n          \"consectetur amet commodo\",\n          \"commodo qui\"\n        ],\n        \"token\": \"dolore laboris\",\n        \"name\": \"minim magna\",\n        \"stores\": [\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"integration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"opted\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"permissions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"id\",\n  \"page\": {\n    \"type\": \"quis tempor occaecat\",\n    \"size\": -27054356,\n    \"current\": -6638431,\n    \"has_next\": true,\n    \"item_total\": 43307288,\n    \"next_id\": \"velit dolor\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "94c45d3f-816d-4f49-913c-60af284001b6",
          "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
          "request": {
            "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "1b61e59e-eb88-4c23-89df-ca75451d6497",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2000-01-04T09:26:14.457Z\",\n  \"status\": 19162689,\n  \"error\": \"ex pro\",\n  \"exception\": \"minim irure ullamco mollit\",\n  \"message\": \"sunt pariatur\",\n  \"total_time_taken_in_millis\": -70121888,\n  \"http_status\": \"425 TOO_EARLY\",\n  \"items\": {\n    \"session_id\": \"do\",\n    \"error_message\": \"eiusmod Lorem proident fugiat aliq\"\n  },\n  \"payload\": {\n    \"session_id\": \"sit\",\n    \"error_message\": \"ad fugiat\"\n  },\n  \"trace_id\": \"consectetur Duis\",\n  \"page\": {\n    \"type\": \"officia occaecat reprehenderit in\",\n    \"size\": -34733455,\n    \"current\": 22115509,\n    \"has_next\": true,\n    \"item_total\": 92752275,\n    \"next_id\": \"veniam mollit occaecat\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "6731fedd-aa87-498c-9f7f-41220bb4e7f2",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2000-01-04T09:26:14.457Z\",\n  \"status\": 19162689,\n  \"error\": \"ex pro\",\n  \"exception\": \"minim irure ullamco mollit\",\n  \"message\": \"sunt pariatur\",\n  \"total_time_taken_in_millis\": -70121888,\n  \"http_status\": \"425 TOO_EARLY\",\n  \"items\": {\n    \"session_id\": \"do\",\n    \"error_message\": \"eiusmod Lorem proident fugiat aliq\"\n  },\n  \"payload\": {\n    \"session_id\": \"sit\",\n    \"error_message\": \"ad fugiat\"\n  },\n  \"trace_id\": \"consectetur Duis\",\n  \"page\": {\n    \"type\": \"officia occaecat reprehenderit in\",\n    \"size\": -34733455,\n    \"current\": 22115509,\n    \"has_next\": true,\n    \"item_total\": 92752275,\n    \"next_id\": \"veniam mollit occaecat\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "6400bf9b-451b-4dba-8e46-9332fd31d554",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2000-01-04T09:26:14.457Z\",\n  \"status\": 19162689,\n  \"error\": \"ex pro\",\n  \"exception\": \"minim irure ullamco mollit\",\n  \"message\": \"sunt pariatur\",\n  \"total_time_taken_in_millis\": -70121888,\n  \"http_status\": \"425 TOO_EARLY\",\n  \"items\": {\n    \"session_id\": \"do\",\n    \"error_message\": \"eiusmod Lorem proident fugiat aliq\"\n  },\n  \"payload\": {\n    \"session_id\": \"sit\",\n    \"error_message\": \"ad fugiat\"\n  },\n  \"trace_id\": \"consectetur Duis\",\n  \"page\": {\n    \"type\": \"officia occaecat reprehenderit in\",\n    \"size\": -34733455,\n    \"current\": 22115509,\n    \"has_next\": true,\n    \"item_total\": 92752275,\n    \"next_id\": \"veniam mollit occaecat\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "77cdb010-2d1d-4af2-a9a9-7aba59e7219d",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "ea010b7d-a9b7-4ebb-808e-2aa0303e62f2",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1987-06-07T08:22:07.382Z\",\n  \"status\": -36501395,\n  \"error\": \"laborum dolore deserunt\",\n  \"exception\": \"quis mollit\",\n  \"message\": \"minim fugiat\",\n  \"total_time_taken_in_millis\": 74851445,\n  \"http_status\": \"409 CONFLICT\",\n  \"items\": {\n    \"company_id\": -3967274,\n    \"integration_data\": {\n      \"Excepteur_c41\": {},\n      \"adipisicing7\": {}\n    },\n    \"company_name\": \"incididunt\",\n    \"task_details\": {\n      \"type\": -18311052,\n      \"group_list\": [\n        {\n          \"text\": \"non Lorem proident\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"labore consequat esse\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -65505959.72790272,\n      \"safe_stock\": 51059088,\n      \"period_threshold\": 88900765,\n      \"period_threshold_type\": \"DAYS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"minim sed non labore\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"inc\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"ut ex consequat \",\n    \"alias\": \"velit occaecat nostrud\"\n  },\n  \"payload\": {\n    \"company_id\": -87844982,\n    \"integration_data\": {\n      \"mollit5fd\": {}\n    },\n    \"company_name\": \"qui\",\n    \"task_details\": {\n      \"type\": -95176241,\n      \"group_list\": [\n        {\n          \"text\": \"in\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"sit enim culpa\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 11103289.717612654,\n      \"safe_stock\": 76076560,\n      \"period_threshold\": 58595098,\n      \"period_threshold_type\": \"MONTHS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"sint id officia mollit aute\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"elit consequat\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"dolor ea dolor cupidatat\",\n    \"alias\": \"nostrud nulla laboris proident\"\n  },\n  \"trace_id\": \"exercitation non sunt\",\n  \"page\": {\n    \"type\": \"sit Excepteur deserunt sint et\",\n    \"size\": -24240545,\n    \"current\": 44676043,\n    \"has_next\": false,\n    \"item_total\": -22974400,\n    \"next_id\": \"ad\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "325a7886-c374-4291-8604-73c6fea0dc3d",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1958-11-10T20:28:33.732Z\",\n  \"status\": -46506315,\n  \"error\": \"magna in Lorem\",\n  \"exception\": \"in ad veniam minim\",\n  \"message\": \"in occaecat in\",\n  \"total_time_taken_in_millis\": 50431268,\n  \"http_status\": \"507 INSUFFICIENT_STORAGE\",\n  \"items\": {\n    \"company_id\": -48323958,\n    \"integration_data\": {\n      \"ea_ff\": {}\n    },\n    \"company_name\": \"exercitation nisi ad veniam incididunt\",\n    \"task_details\": {\n      \"type\": -85422531,\n      \"group_list\": [\n        {\n          \"text\": \"velit in\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"su\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 77160561.59602422,\n      \"safe_stock\": -8035954,\n      \"period_threshold\": -67060843,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"Ut id ea\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"exercitation reprehenderit\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"ex sed\",\n    \"alias\": \"ullamco minim sed\"\n  },\n  \"payload\": {\n    \"company_id\": -12807334,\n    \"integration_data\": {\n      \"in_8\": {},\n      \"officia_91\": {}\n    },\n    \"company_name\": \"incididunt\",\n    \"task_details\": {\n      \"type\": 24574421,\n      \"group_list\": [\n        {\n          \"text\": \"dolore ex consectetur do\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"nisi mollit\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 95933521.06798193,\n      \"safe_stock\": 36966596,\n      \"period_threshold\": -47602240,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"Duis qui incididunt est\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"pariatur ullamco qui\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"sunt reprehenderit\",\n    \"alias\": \"occaecat Ut officia\"\n  },\n  \"trace_id\": \"cillum labore nostrud\",\n  \"page\": {\n    \"type\": \"fugiat tempor\",\n    \"size\": -20100491,\n    \"current\": -71135439,\n    \"has_next\": true,\n    \"item_total\": 468070,\n    \"next_id\": \"elit sed laborum\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2e82eb91-c037-4dad-85cf-9558f75f5bdb",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1958-11-10T20:28:33.732Z\",\n  \"status\": -46506315,\n  \"error\": \"magna in Lorem\",\n  \"exception\": \"in ad veniam minim\",\n  \"message\": \"in occaecat in\",\n  \"total_time_taken_in_millis\": 50431268,\n  \"http_status\": \"507 INSUFFICIENT_STORAGE\",\n  \"items\": {\n    \"company_id\": -48323958,\n    \"integration_data\": {\n      \"ea_ff\": {}\n    },\n    \"company_name\": \"exercitation nisi ad veniam incididunt\",\n    \"task_details\": {\n      \"type\": -85422531,\n      \"group_list\": [\n        {\n          \"text\": \"velit in\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"su\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 77160561.59602422,\n      \"safe_stock\": -8035954,\n      \"period_threshold\": -67060843,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"Ut id ea\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"exercitation reprehenderit\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"ex sed\",\n    \"alias\": \"ullamco minim sed\"\n  },\n  \"payload\": {\n    \"company_id\": -12807334,\n    \"integration_data\": {\n      \"in_8\": {},\n      \"officia_91\": {}\n    },\n    \"company_name\": \"incididunt\",\n    \"task_details\": {\n      \"type\": 24574421,\n      \"group_list\": [\n        {\n          \"text\": \"dolore ex consectetur do\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"nisi mollit\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 95933521.06798193,\n      \"safe_stock\": 36966596,\n      \"period_threshold\": -47602240,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"Duis qui incididunt est\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"pariatur ullamco qui\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"sunt reprehenderit\",\n    \"alias\": \"occaecat Ut officia\"\n  },\n  \"trace_id\": \"cillum labore nostrud\",\n  \"page\": {\n    \"type\": \"fugiat tempor\",\n    \"size\": -20100491,\n    \"current\": -71135439,\n    \"has_next\": true,\n    \"item_total\": 468070,\n    \"next_id\": \"elit sed laborum\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "a6235ff3-bc34-49e5-ba45-b82951f6bfec",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "431e4b80-8ec7-4770-9ae7-b4aebf581071",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1944-09-13T14:13:32.000Z\",\n  \"status\": -53026043,\n  \"error\": \"qui\",\n  \"exception\": \"labo\",\n  \"message\": \"nisi laborum\",\n  \"total_time_taken_in_millis\": 99281005,\n  \"http_status\": \"403 FORBIDDEN\",\n  \"items\": [\n    {\n      \"company_id\": 7682781,\n      \"integration_data\": {\n        \"magna_e6a\": {},\n        \"voluptate_998\": {}\n      },\n      \"company_name\": \"rep\",\n      \"task_details\": {\n        \"type\": -4547926,\n        \"group_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 14188478.26154548,\n        \"safe_stock\": 75101810,\n        \"period_threshold\": 98957261,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"job_code\": \"do voluptate\",\n      \"alias\": \"enim cupidatat Excepteur\"\n    },\n    {\n      \"company_id\": 32218382,\n      \"integration_data\": {\n        \"est3\": {},\n        \"Lorem_60\": {}\n      },\n      \"company_name\": \"magna cillum\",\n      \"task_details\": {\n        \"type\": -3251816,\n        \"group_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -64613514.55127886,\n        \"safe_stock\": -77715872,\n        \"period_threshold\": -22135868,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"job_code\": \"anim consectetur esse in\",\n      \"alias\": \"do nisi\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": 52085557,\n      \"integration_data\": {\n        \"dolored47\": {},\n        \"velitcc\": {}\n      },\n      \"company_name\": \"incididunt ex amet Duis\",\n      \"task_details\": {\n        \"type\": -72717823,\n        \"group_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 54733807.33122352,\n        \"safe_stock\": -63073132,\n        \"period_threshold\": -5097262,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"job_code\": \"Lorem amet occaecat anim voluptate\",\n      \"alias\": \"nulla ex culp\"\n    },\n    {\n      \"company_id\": 1176957,\n      \"integration_data\": {\n        \"in_c\": {},\n        \"tempor_c\": {}\n      },\n      \"company_name\": \"\",\n      \"task_details\": {\n        \"type\": 70949937,\n        \"group_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 59688247.06840104,\n        \"safe_stock\": -96837240,\n        \"period_threshold\": 55854718,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"job_code\": \"fugiat\",\n      \"alias\": \"ipsum amet voluptate cillum\"\n    }\n  ],\n  \"trace_id\": \"magna commodo\",\n  \"page\": {\n    \"type\": \"incididunt culpa\",\n    \"size\": 17735716,\n    \"current\": 10896738,\n    \"has_next\": false,\n    \"item_total\": 57339850,\n    \"next_id\": \"aliquip id adipisicing\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "05f18007-6225-4de5-aa86-1dd2b9b63861",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1964-10-22T14:35:38.643Z\",\n  \"status\": -66848047,\n  \"error\": \"sunt incididunt laborum nulla\",\n  \"exception\": \"labore sunt\",\n  \"message\": \"sint enim\",\n  \"total_time_taken_in_millis\": 35278961,\n  \"http_status\": \"501 NOT_IMPLEMENTED\",\n  \"items\": [\n    {\n      \"company_id\": 68014862,\n      \"integration_data\": {\n        \"qui98\": {}\n      },\n      \"company_name\": \"eiusmod ullamco magna\",\n      \"task_details\": {\n        \"type\": 23679413,\n        \"group_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -57749123.97118794,\n        \"safe_stock\": -48668764,\n        \"period_threshold\": 17792422,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"job_code\": \"enim commodo\",\n      \"alias\": \"dolor ad ea\"\n    },\n    {\n      \"company_id\": -86006665,\n      \"integration_data\": {\n        \"elit_e19\": {},\n        \"incididuntc\": {}\n      },\n      \"company_name\": \"eiusmod mollit\",\n      \"task_details\": {\n        \"type\": 62150892,\n        \"group_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 41744901.23859513,\n        \"safe_stock\": 28235785,\n        \"period_threshold\": 23265638,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"job_code\": \"occaecat in irure mollit aliqua\",\n      \"alias\": \"exercitation nostrud\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": 99687351,\n      \"integration_data\": {\n        \"culpa8b\": {}\n      },\n      \"company_name\": \"id ut ipsum incididunt\",\n      \"task_details\": {\n        \"type\": 44929047,\n        \"group_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -59305399.12772064,\n        \"safe_stock\": 68334664,\n        \"period_threshold\": 83250884,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"job_code\": \"voluptate ex eu esse laboris\",\n      \"alias\": \"est ullamco velit\"\n    },\n    {\n      \"company_id\": -14934684,\n      \"integration_data\": {\n        \"in_8\": {}\n      },\n      \"company_name\": \"ea cillum dolore\",\n      \"task_details\": {\n        \"type\": 64595636,\n        \"group_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 73441678.47206461,\n        \"safe_stock\": 12162138,\n        \"period_threshold\": -30598471,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"job_code\": \"labore amet in exercitation reprehenderit\",\n      \"alias\": \"do ex ut exercitation\"\n    }\n  ],\n  \"trace_id\": \"dolor Ut velit sed\",\n  \"page\": {\n    \"type\": \"magna ut\",\n    \"size\": -59385550,\n    \"current\": -42740501,\n    \"has_next\": false,\n    \"item_total\": -47576099,\n    \"next_id\": \"culpa cillum velit ex magna\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ab1c4f3f-41c6-4d2e-ac0a-bbcea8b32217",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1964-10-22T14:35:38.643Z\",\n  \"status\": -66848047,\n  \"error\": \"sunt incididunt laborum nulla\",\n  \"exception\": \"labore sunt\",\n  \"message\": \"sint enim\",\n  \"total_time_taken_in_millis\": 35278961,\n  \"http_status\": \"501 NOT_IMPLEMENTED\",\n  \"items\": [\n    {\n      \"company_id\": 68014862,\n      \"integration_data\": {\n        \"qui98\": {}\n      },\n      \"company_name\": \"eiusmod ullamco magna\",\n      \"task_details\": {\n        \"type\": 23679413,\n        \"group_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -57749123.97118794,\n        \"safe_stock\": -48668764,\n        \"period_threshold\": 17792422,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"job_code\": \"enim commodo\",\n      \"alias\": \"dolor ad ea\"\n    },\n    {\n      \"company_id\": -86006665,\n      \"integration_data\": {\n        \"elit_e19\": {},\n        \"incididuntc\": {}\n      },\n      \"company_name\": \"eiusmod mollit\",\n      \"task_details\": {\n        \"type\": 62150892,\n        \"group_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 41744901.23859513,\n        \"safe_stock\": 28235785,\n        \"period_threshold\": 23265638,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"job_code\": \"occaecat in irure mollit aliqua\",\n      \"alias\": \"exercitation nostrud\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": 99687351,\n      \"integration_data\": {\n        \"culpa8b\": {}\n      },\n      \"company_name\": \"id ut ipsum incididunt\",\n      \"task_details\": {\n        \"type\": 44929047,\n        \"group_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -59305399.12772064,\n        \"safe_stock\": 68334664,\n        \"period_threshold\": 83250884,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"job_code\": \"voluptate ex eu esse laboris\",\n      \"alias\": \"est ullamco velit\"\n    },\n    {\n      \"company_id\": -14934684,\n      \"integration_data\": {\n        \"in_8\": {}\n      },\n      \"company_name\": \"ea cillum dolore\",\n      \"task_details\": {\n        \"type\": 64595636,\n        \"group_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 73441678.47206461,\n        \"safe_stock\": 12162138,\n        \"period_threshold\": -30598471,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"text\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"job_code\": \"labore amet in exercitation reprehenderit\",\n      \"alias\": \"do ex ut exercitation\"\n    }\n  ],\n  \"trace_id\": \"dolor Ut velit sed\",\n  \"page\": {\n    \"type\": \"magna ut\",\n    \"size\": -59385550,\n    \"current\": -42740501,\n    \"has_next\": false,\n    \"item_total\": -47576099,\n    \"next_id\": \"culpa cillum velit ex magna\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx1.de"
    }
  ],
  "info": {
    "_postman_id": "be3a7a8e-89f9-414c-bdb0-62b6506ea421",
    "name": "Fynd Platform's Public Side APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public Side APIs",
      "type": "text/plain"
    }
  }
}
