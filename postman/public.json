{
  "item": [
    {
      "id": "ca85ff01-4663-4a65-a802-76ec9e521740",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "3e570fe1-a04f-4ed2-b74a-9b2a88d86893",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "e466051f-1d06-43a3-9ac0-522447146932",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "elit enim irure",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5d120fc9-f842-4e83-ae83-bdc787f24056",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "elit enim irure",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"Invalid application domain or id.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "317434c9-2e80-4e1c-820e-bc714e9516c8",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "elit enim irure",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "2dd1586c-d2c0-4f8a-a396-0aa049114426",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "9fa834ef-34d2-421a-8660-1b1f1a0750a4",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "f1ad7eea-5861-49b1-8aa1-f42b3efefc21",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "eb66f621-cb6c-4f1a-bdd9-ce6c1ab17cb3",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "17b3ad46-9e43-4c0f-8470-1e2f11e48252",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 98704211,\n   \"event_name\": \"dolore laborum\",\n   \"event_type\": \"aliquip\",\n   \"event_category\": \"elit nulla fugiat dolor\",\n   \"version\": \"sunt in fugiat\",\n   \"display_name\": \"dolor\",\n   \"description\": \"cupidatat\",\n   \"created_on\": \"aliqua culpa cupidatat voluptate\"\n  },\n  {\n   \"id\": 20863033,\n   \"event_name\": \"culpa dolore ipsum aute\",\n   \"event_type\": \"dolore enim aliqua nulla\",\n   \"event_category\": \"eu consequat qui tempor\",\n   \"version\": \"proident ad\",\n   \"display_name\": \"aliqua qui\",\n   \"description\": \"aute consectetur\",\n   \"created_on\": \"Ut ullamco nulla Duis est\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "87eac712-a871-4bbd-8406-1348076cd884",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "e613d1c8-5274-410c-be49-d82e9704bacf",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 42275000,\n   \"event_name\": \"est veniam ul\",\n   \"event_type\": \"in\",\n   \"event_category\": \"pariatur aliquip officia mollit in\",\n   \"version\": \"occaecat laboris cillum\",\n   \"display_name\": \"esse pariatur\",\n   \"description\": \"minim reprehend\",\n   \"created_on\": \"voluptate mollit adipisicing\"\n  },\n  {\n   \"id\": -10258629,\n   \"event_name\": \"do labore\",\n   \"event_type\": \"deserunt cillum sit ea elit\",\n   \"event_category\": \"aute\",\n   \"version\": \"aute Excepteur\",\n   \"display_name\": \"aute culpa elit\",\n   \"description\": \"dolor eu sint\",\n   \"created_on\": \"ea fugiat\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "ca7f35db-d7ae-4c82-88a4-d1b480bf8299",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "37b109e1-bbbe-4f87-8b1b-cba3be987805",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "1dd348ff-2c47-4129-89ae-5f9377eb5066",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1958-06-15T08:49:39.759Z\",\n \"status\": -98726901,\n \"error\": \"Ut quis veniam cupidatat\",\n \"exception\": \"adipisicing dolore cillum ea\",\n \"message\": \"elit nostrud\",\n \"total_time_taken_in_millis\": -3548246,\n \"http_status\": \"505 HTTP_VERSION_NOT_SUPPORTED\",\n \"items\": [\n  {\n   \"company_id\": 63292128,\n   \"integration_data\": {},\n   \"company_name\": \"ut deser\",\n   \"task_details\": {\n    \"type\": 19580875,\n    \"group_list\": [\n     {\n      \"text\": \"laborum officia\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"q\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 1768619.199391842,\n    \"safe_stock\": 44654168,\n    \"period_threshold\": 3056096,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"nulla officia mollit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cillum veniam culpa\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"id magna\",\n   \"alias\": \"magna\"\n  },\n  {\n   \"company_id\": -2632969,\n   \"integration_data\": {},\n   \"company_name\": \"cupidatat Ut\",\n   \"task_details\": {\n    \"type\": -58924964,\n    \"group_list\": [\n     {\n      \"text\": \"aliqua ipsum Ut officia\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nostrud Lorem id nulla\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -71301947.281773,\n    \"safe_stock\": 58429301,\n    \"period_threshold\": -46693672,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ullamco ea enim dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"occaecat sint quis mollit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aliquip eiusmod velit\",\n   \"alias\": \"sint Ut\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 28408957,\n   \"integration_data\": {},\n   \"company_name\": \"labore culpa eu\",\n   \"task_details\": {\n    \"type\": -3448040,\n    \"group_list\": [\n     {\n      \"text\": \"aute pariatur exercitation\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consectetur ut laboris\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 77864451.72552866,\n    \"safe_stock\": 56526850,\n    \"period_threshold\": -97341831,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"adipisicing consequat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sunt in tempor Ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"reprehenderit occaecat sint\",\n   \"alias\": \"proident consequat officia deserunt adipisicing\"\n  },\n  {\n   \"company_id\": 40801924,\n   \"integration_data\": {},\n   \"company_name\": \"ea laborum velit adipisicing\",\n   \"task_details\": {\n    \"type\": 33075446,\n    \"group_list\": [\n     {\n      \"text\": \"proident sunt labore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"non velit proident\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -37700582.23299713,\n    \"safe_stock\": 94489293,\n    \"period_threshold\": -67810505,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"velit laboris\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"pariatur laborum laboris\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"laborum sit eiusmod sint aliquip\",\n   \"alias\": \"consectetur elit sunt\"\n  }\n ],\n \"trace_id\": \"cillum qu\",\n \"page\": {\n  \"type\": \"Ut elit ut dolore eu\",\n  \"size\": -39384016,\n  \"current\": -73114413,\n  \"has_next\": false,\n  \"item_total\": -34849270,\n  \"next_id\": \"anim Excepteur\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "42e20f47-c4ee-4f99-a7aa-be3da7faf2a6",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1945-07-05T17:27:04.455Z\",\n \"status\": 61142955,\n \"error\": \"veniam ex\",\n \"exception\": \"in laboris magna quis\",\n \"message\": \"dol\",\n \"total_time_taken_in_millis\": 21751588,\n \"http_status\": \"419 INSUFFICIENT_SPACE_ON_RESOURCE\",\n \"items\": [\n  {\n   \"company_id\": 32411117,\n   \"integration_data\": {},\n   \"company_name\": \"ex sed aliquip\",\n   \"task_details\": {\n    \"type\": -61027904,\n    \"group_list\": [\n     {\n      \"text\": \"enim eiusmod sint\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sed sit ut eiusmod ci\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -90652886.8464132,\n    \"safe_stock\": 80579786,\n    \"period_threshold\": 16278279,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"mollit ad \",\n      \"value\": {}\n     },\n     {\n      \"text\": \"labore consectetur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Duis in fugia\",\n   \"alias\": \"Excepteur minim dolor consectetur\"\n  },\n  {\n   \"company_id\": -7930154,\n   \"integration_data\": {},\n   \"company_name\": \"elit adipis\",\n   \"task_details\": {\n    \"type\": -44288207,\n    \"group_list\": [\n     {\n      \"text\": \"occaecat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"enim ex\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 9350604.068466201,\n    \"safe_stock\": 62481783,\n    \"period_threshold\": -78496022,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"consequat tempor veniam dolor ea\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut aliquip aute magna minim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"est magna in dolore voluptate\",\n   \"alias\": \"anim minim irure\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 87186483,\n   \"integration_data\": {},\n   \"company_name\": \"Excepteur in\",\n   \"task_details\": {\n    \"type\": -38091350,\n    \"group_list\": [\n     {\n      \"text\": \"ad inc\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"qui cillum id ipsum dolor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -72587822.50474165,\n    \"safe_stock\": 19032209,\n    \"period_threshold\": 43456283,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolore nisi do\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proident anim elit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ut ex\",\n   \"alias\": \"in dolor sunt\"\n  },\n  {\n   \"company_id\": 37031470,\n   \"integration_data\": {},\n   \"company_name\": \"quis nisi cupidatat\",\n   \"task_details\": {\n    \"type\": 59160977,\n    \"group_list\": [\n     {\n      \"text\": \"voluptate dolore veli\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nostrud mollit eiusmod\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 54394358.756521225,\n    \"safe_stock\": -98812958,\n    \"period_threshold\": 78860276,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ipsum sed aliquip\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore Lorem est\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"exercitation aliquip est\",\n   \"alias\": \"sed qui Excepteur\"\n  }\n ],\n \"trace_id\": \"t\",\n \"page\": {\n  \"type\": \"in aliquip reprehenderit\",\n  \"size\": -20335323,\n  \"current\": -98411597,\n  \"has_next\": true,\n  \"item_total\": 18394711,\n  \"next_id\": \"sed\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "4451ff23-419b-418f-acc8-f5c92e98f74e",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1945-07-05T17:27:04.455Z\",\n \"status\": 61142955,\n \"error\": \"veniam ex\",\n \"exception\": \"in laboris magna quis\",\n \"message\": \"dol\",\n \"total_time_taken_in_millis\": 21751588,\n \"http_status\": \"419 INSUFFICIENT_SPACE_ON_RESOURCE\",\n \"items\": [\n  {\n   \"company_id\": 32411117,\n   \"integration_data\": {},\n   \"company_name\": \"ex sed aliquip\",\n   \"task_details\": {\n    \"type\": -61027904,\n    \"group_list\": [\n     {\n      \"text\": \"enim eiusmod sint\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sed sit ut eiusmod ci\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -90652886.8464132,\n    \"safe_stock\": 80579786,\n    \"period_threshold\": 16278279,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"mollit ad \",\n      \"value\": {}\n     },\n     {\n      \"text\": \"labore consectetur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Duis in fugia\",\n   \"alias\": \"Excepteur minim dolor consectetur\"\n  },\n  {\n   \"company_id\": -7930154,\n   \"integration_data\": {},\n   \"company_name\": \"elit adipis\",\n   \"task_details\": {\n    \"type\": -44288207,\n    \"group_list\": [\n     {\n      \"text\": \"occaecat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"enim ex\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 9350604.068466201,\n    \"safe_stock\": 62481783,\n    \"period_threshold\": -78496022,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"consequat tempor veniam dolor ea\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut aliquip aute magna minim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"est magna in dolore voluptate\",\n   \"alias\": \"anim minim irure\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 87186483,\n   \"integration_data\": {},\n   \"company_name\": \"Excepteur in\",\n   \"task_details\": {\n    \"type\": -38091350,\n    \"group_list\": [\n     {\n      \"text\": \"ad inc\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"qui cillum id ipsum dolor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -72587822.50474165,\n    \"safe_stock\": 19032209,\n    \"period_threshold\": 43456283,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolore nisi do\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proident anim elit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ut ex\",\n   \"alias\": \"in dolor sunt\"\n  },\n  {\n   \"company_id\": 37031470,\n   \"integration_data\": {},\n   \"company_name\": \"quis nisi cupidatat\",\n   \"task_details\": {\n    \"type\": 59160977,\n    \"group_list\": [\n     {\n      \"text\": \"voluptate dolore veli\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nostrud mollit eiusmod\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 54394358.756521225,\n    \"safe_stock\": -98812958,\n    \"period_threshold\": 78860276,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ipsum sed aliquip\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore Lorem est\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"exercitation aliquip est\",\n   \"alias\": \"sed qui Excepteur\"\n  }\n ],\n \"trace_id\": \"t\",\n \"page\": {\n  \"type\": \"in aliquip reprehenderit\",\n  \"size\": -20335323,\n  \"current\": -98411597,\n  \"has_next\": true,\n  \"item_total\": 18394711,\n  \"next_id\": \"sed\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "6ed42333-8585-444f-8290-3372e7be9bc5",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "f130b167-fe77-41d8-b916-cf968c15dec2",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1946-05-29T00:20:33.911Z\",\n \"status\": -47494618,\n \"error\": \"pariatur\",\n \"exception\": \"aliqua consectetur\",\n \"message\": \"ut fugia\",\n \"total_time_taken_in_millis\": 38565810,\n \"http_status\": \"400 BAD_REQUEST\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"dolore qui non enim Lorem\",\n \"page\": {\n  \"type\": \"irure occaecat proident\",\n  \"size\": -43714607,\n  \"current\": 96091381,\n  \"has_next\": false,\n  \"item_total\": 8306752,\n  \"next_id\": \"dolore Excepteur id\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "29c7db0f-cec4-47ba-8fe7-b7941c40b23c",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1946-05-29T00:20:33.911Z\",\n \"status\": -47494618,\n \"error\": \"pariatur\",\n \"exception\": \"aliqua consectetur\",\n \"message\": \"ut fugia\",\n \"total_time_taken_in_millis\": 38565810,\n \"http_status\": \"400 BAD_REQUEST\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"dolore qui non enim Lorem\",\n \"page\": {\n  \"type\": \"irure occaecat proident\",\n  \"size\": -43714607,\n  \"current\": 96091381,\n  \"has_next\": false,\n  \"item_total\": 8306752,\n  \"next_id\": \"dolore Excepteur id\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ebe58e85-f523-4b49-99f6-14da3e173175",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1946-05-29T00:20:33.911Z\",\n \"status\": -47494618,\n \"error\": \"pariatur\",\n \"exception\": \"aliqua consectetur\",\n \"message\": \"ut fugia\",\n \"total_time_taken_in_millis\": 38565810,\n \"http_status\": \"400 BAD_REQUEST\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"dolore qui non enim Lorem\",\n \"page\": {\n  \"type\": \"irure occaecat proident\",\n  \"size\": -43714607,\n  \"current\": 96091381,\n  \"has_next\": false,\n  \"item_total\": 8306752,\n  \"next_id\": \"dolore Excepteur id\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "c7eb860a-ddc3-40f8-90b0-5e330ae6e871",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "81d10411-8861-4e6c-8335-6fefdd686a91",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2020-05-13T05:07:52.303Z\",\n \"status\": 69251619,\n \"error\": \"ad id\",\n \"exception\": \"esse exercitation ullamco\",\n \"message\": \"c\",\n \"total_time_taken_in_millis\": 5896166,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"qui cupidatat\",\n \"page\": {\n  \"type\": \"ut r\",\n  \"size\": 37600114,\n  \"current\": -25348277,\n  \"has_next\": false,\n  \"item_total\": -41906174,\n  \"next_id\": \"pariatur\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f3de8739-535d-4ac0-bf7b-bd4250ce5662",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2020-05-13T05:07:52.303Z\",\n \"status\": 69251619,\n \"error\": \"ad id\",\n \"exception\": \"esse exercitation ullamco\",\n \"message\": \"c\",\n \"total_time_taken_in_millis\": 5896166,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"qui cupidatat\",\n \"page\": {\n  \"type\": \"ut r\",\n  \"size\": 37600114,\n  \"current\": -25348277,\n  \"has_next\": false,\n  \"item_total\": -41906174,\n  \"next_id\": \"pariatur\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "df9135af-aa5c-4509-953b-2b0f8bc82b7a",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2020-05-13T05:07:52.303Z\",\n \"status\": 69251619,\n \"error\": \"ad id\",\n \"exception\": \"esse exercitation ullamco\",\n \"message\": \"c\",\n \"total_time_taken_in_millis\": 5896166,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"qui cupidatat\",\n \"page\": {\n  \"type\": \"ut r\",\n  \"size\": 37600114,\n  \"current\": -25348277,\n  \"has_next\": false,\n  \"item_total\": -41906174,\n  \"next_id\": \"pariatur\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "514e2c20-4c39-4945-b4f1-2712b55ee445",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2020-05-13T05:07:52.303Z\",\n \"status\": 69251619,\n \"error\": \"ad id\",\n \"exception\": \"esse exercitation ullamco\",\n \"message\": \"c\",\n \"total_time_taken_in_millis\": 5896166,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"qui cupidatat\",\n \"page\": {\n  \"type\": \"ut r\",\n  \"size\": 37600114,\n  \"current\": -25348277,\n  \"has_next\": false,\n  \"item_total\": -41906174,\n  \"next_id\": \"pariatur\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9c731c49-a623-4102-8780-58d6f78767c4",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2020-05-13T05:07:52.303Z\",\n \"status\": 69251619,\n \"error\": \"ad id\",\n \"exception\": \"esse exercitation ullamco\",\n \"message\": \"c\",\n \"total_time_taken_in_millis\": 5896166,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"qui cupidatat\",\n \"page\": {\n  \"type\": \"ut r\",\n  \"size\": 37600114,\n  \"current\": -25348277,\n  \"has_next\": false,\n  \"item_total\": -41906174,\n  \"next_id\": \"pariatur\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx0.de"
    }
  ],
  "info": {
    "_postman_id": "c4672137-c8ff-4b30-bbf2-b6c6fe2b0372",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
