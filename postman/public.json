{
  "item": [
    {
      "id": "ce4a8f6c-784e-452e-acd4-58202a8ed256",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "f9d38947-322c-45e1-86e5-4c479899bb68",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "baa3bdaa-c525-464f-ad3d-805ccd837607",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "sunt eiusmod laboris",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "96161d61-9b01-48c8-a155-623e86db10e7",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "sunt eiusmod laboris",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"Invalid application domain or id.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "0174af7e-efff-4a00-b3b2-8cd7101c0bc0",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "sunt eiusmod laboris",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "e22527c6-bde8-4ee2-bb60-704c3edea2eb",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "1b478cba-3e2e-4a84-b904-fcb9a4743e44",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "51233fe2-3265-403f-b5fe-a3de83bc5a78",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "821f874d-27a0-4a14-bb4d-0b1ab40c3188",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "67dde74f-a872-45f0-b2ab-a2a49b49cc5f",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 47126334,\n   \"event_name\": \"aute quis commodo consectetur\",\n   \"event_type\": \"eiusmod Lorem\",\n   \"event_category\": \"est do dolore\",\n   \"version\": \"Excepteur dolore sed\",\n   \"display_name\": \"id nisi amet in\",\n   \"description\": \"sint quis et\",\n   \"created_on\": \"sint ad ut\"\n  },\n  {\n   \"id\": -45682871,\n   \"event_name\": \"irure est\",\n   \"event_type\": \"in id offi\",\n   \"event_category\": \"dolor minim sit\",\n   \"version\": \"incididunt dolor fugiat non\",\n   \"display_name\": \"ut sit officia\",\n   \"description\": \"ipsum veniam nisi\",\n   \"created_on\": \"dolor nulla ullamco nisi\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "8ff93701-9dcd-4a4b-ab55-2608c6d47f9d",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "0a958bf7-aeef-4ba2-a915-b8e8ee07400a",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 16872485,\n   \"event_name\": \"ut veniam\",\n   \"event_type\": \"anim id Excepteur eu\",\n   \"event_category\": \"nulla Excepteur labore exercitat\",\n   \"version\": \"ex\",\n   \"display_name\": \"consectetur sed et\",\n   \"description\": \"amet non magna mollit qui\",\n   \"created_on\": \"exercitation in est dolore magna\"\n  },\n  {\n   \"id\": 64136048,\n   \"event_name\": \"velit tempor consequat labore\",\n   \"event_type\": \"officia\",\n   \"event_category\": \"enim sint\",\n   \"version\": \"sit do\",\n   \"display_name\": \"irure ad magna\",\n   \"description\": \"dolore sed deserunt culpa\",\n   \"created_on\": \"velit ea anim\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "d7f80727-8bc5-4975-abbf-f68d0ca5f427",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "5278f6dc-bbbd-4d71-a75e-c8ffaab1397d",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "a4e6fa80-f269-4694-a4a5-b451f727f5d7",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1985-09-17T19:51:26.616Z\",\n \"status\": -55980635,\n \"error\": \"eiusmod adipisicing ad in in\",\n \"exception\": \"ex\",\n \"message\": \"proident Duis\",\n \"total_time_taken_in_millis\": 74697513,\n \"http_status\": \"404 NOT_FOUND\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"incididunt nostrud ut\",\n \"page\": {\n  \"type\": \"consectetur non et id\",\n  \"size\": 30541427,\n  \"current\": 23903673,\n  \"has_next\": false,\n  \"item_total\": -82258023,\n  \"next_id\": \"veniam\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "8b99095b-6e2d-4603-86df-0ccb4fff0cfa",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1985-09-17T19:51:26.616Z\",\n \"status\": -55980635,\n \"error\": \"eiusmod adipisicing ad in in\",\n \"exception\": \"ex\",\n \"message\": \"proident Duis\",\n \"total_time_taken_in_millis\": 74697513,\n \"http_status\": \"404 NOT_FOUND\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"incididunt nostrud ut\",\n \"page\": {\n  \"type\": \"consectetur non et id\",\n  \"size\": 30541427,\n  \"current\": 23903673,\n  \"has_next\": false,\n  \"item_total\": -82258023,\n  \"next_id\": \"veniam\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "0cc46a25-24aa-4fed-b61a-7003645e669d",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1985-09-17T19:51:26.616Z\",\n \"status\": -55980635,\n \"error\": \"eiusmod adipisicing ad in in\",\n \"exception\": \"ex\",\n \"message\": \"proident Duis\",\n \"total_time_taken_in_millis\": 74697513,\n \"http_status\": \"404 NOT_FOUND\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"incididunt nostrud ut\",\n \"page\": {\n  \"type\": \"consectetur non et id\",\n  \"size\": 30541427,\n  \"current\": 23903673,\n  \"has_next\": false,\n  \"item_total\": -82258023,\n  \"next_id\": \"veniam\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "0fe02cc8-2c20-448e-b972-2a37d22c3bc3",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "aeb1a723-235e-45eb-96a0-07ad790f0a7b",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1991-05-03T01:15:58.818Z\",\n \"status\": 7962513,\n \"error\": \"do voluptate sunt dolore\",\n \"exception\": \"elit id\",\n \"message\": \"dolor ut\",\n \"total_time_taken_in_millis\": 88795854,\n \"http_status\": \"304 NOT_MODIFIED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"eiusmod enim\",\n \"page\": {\n  \"type\": \"ex consequat proident incididunt deserunt\",\n  \"size\": -67375587,\n  \"current\": 24621896,\n  \"has_next\": true,\n  \"item_total\": -32981592,\n  \"next_id\": \"labore consectetur non\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ea585d37-79ae-43b5-b09a-743e4e2268a7",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1991-05-03T01:15:58.818Z\",\n \"status\": 7962513,\n \"error\": \"do voluptate sunt dolore\",\n \"exception\": \"elit id\",\n \"message\": \"dolor ut\",\n \"total_time_taken_in_millis\": 88795854,\n \"http_status\": \"304 NOT_MODIFIED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"eiusmod enim\",\n \"page\": {\n  \"type\": \"ex consequat proident incididunt deserunt\",\n  \"size\": -67375587,\n  \"current\": 24621896,\n  \"has_next\": true,\n  \"item_total\": -32981592,\n  \"next_id\": \"labore consectetur non\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "4e4e762a-3c91-4ed1-9eff-0398be9b6672",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1991-05-03T01:15:58.818Z\",\n \"status\": 7962513,\n \"error\": \"do voluptate sunt dolore\",\n \"exception\": \"elit id\",\n \"message\": \"dolor ut\",\n \"total_time_taken_in_millis\": 88795854,\n \"http_status\": \"304 NOT_MODIFIED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"eiusmod enim\",\n \"page\": {\n  \"type\": \"ex consequat proident incididunt deserunt\",\n  \"size\": -67375587,\n  \"current\": 24621896,\n  \"has_next\": true,\n  \"item_total\": -32981592,\n  \"next_id\": \"labore consectetur non\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d82e5553-637a-4cea-9d40-5741599914af",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1991-05-03T01:15:58.818Z\",\n \"status\": 7962513,\n \"error\": \"do voluptate sunt dolore\",\n \"exception\": \"elit id\",\n \"message\": \"dolor ut\",\n \"total_time_taken_in_millis\": 88795854,\n \"http_status\": \"304 NOT_MODIFIED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"eiusmod enim\",\n \"page\": {\n  \"type\": \"ex consequat proident incididunt deserunt\",\n  \"size\": -67375587,\n  \"current\": 24621896,\n  \"has_next\": true,\n  \"item_total\": -32981592,\n  \"next_id\": \"labore consectetur non\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "48c97d87-4e7c-4b83-9907-f99452ef7fe2",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1991-05-03T01:15:58.818Z\",\n \"status\": 7962513,\n \"error\": \"do voluptate sunt dolore\",\n \"exception\": \"elit id\",\n \"message\": \"dolor ut\",\n \"total_time_taken_in_millis\": 88795854,\n \"http_status\": \"304 NOT_MODIFIED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"eiusmod enim\",\n \"page\": {\n  \"type\": \"ex consequat proident incididunt deserunt\",\n  \"size\": -67375587,\n  \"current\": 24621896,\n  \"has_next\": true,\n  \"item_total\": -32981592,\n  \"next_id\": \"labore consectetur non\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "a2f098fc-ad00-4197-ad8f-d0297c4e2825",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "6089d66e-d126-4ec2-a68c-3c704bbc604d",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2014-04-06T05:38:53.327Z\",\n \"status\": -16836083,\n \"error\": \"dolore sed nisi\",\n \"exception\": \"dolor proident\",\n \"message\": \"commodo in\",\n \"total_time_taken_in_millis\": 58183883,\n \"http_status\": \"102 PROCESSING\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"ex\",\n   \"description\": \"deserunt dolor\",\n   \"name\": \"ad ex deserunt\",\n   \"slug\": \"magna ipsum commodo\",\n   \"meta\": [\n    {\n     \"_id\": \"dolore\",\n     \"name\": \"ut ad in reprehenderit fu\",\n     \"value\": \"ad\"\n    },\n    {\n     \"_id\": \"deserunt culpa\",\n     \"name\": \"esse \",\n     \"value\": \"consectetur Duis adipisicing\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"ipsum magna mollit\",\n    \"integration\": \"aliqua dolore\",\n    \"level\": \"aute velit pariatur irure magna\",\n    \"uid\": -96390837,\n    \"opted\": false,\n    \"permissions\": [\n     \"dolor\",\n     \"do nulla elit in dolor\"\n    ],\n    \"token\": \"ad n\",\n    \"name\": \"laborum minim\",\n    \"stores\": [\n     {\n      \"_id\": \"commodo Lo\",\n      \"integration\": \"nostrud minim Except\",\n      \"level\": \"sed sint labore\",\n      \"uid\": 14867627,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sint eu in\",\n      \"code\": \"velit Ut ut sint\",\n      \"name\": \"laborum Ut deserunt consequat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"incididunt id\",\n      \"integration\": \"enim Duis sunt\",\n      \"level\": \"aliquip\",\n      \"uid\": 19267470,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"incididunt\",\n      \"code\": \"esse ipsum\",\n      \"name\": \"consequat anim veniam ipsum non\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"est labore culpa\",\n    \"integration\": \"incididunt\",\n    \"level\": \"eu Duis\",\n    \"uid\": -3406215,\n    \"opted\": false,\n    \"permissions\": [\n     \"consectetur sit occaecat laborum dolor\",\n     \"incididunt occaecat consequat cupidatat\"\n    ],\n    \"token\": \"esse adipisicing\",\n    \"name\": \"sunt dolor aliqua exercitat\",\n    \"stores\": [\n     {\n      \"_id\": \"in labore anim in\",\n      \"integration\": \"labore nostrud reprehenderit eiusmod\",\n      \"level\": \"nostrud consectetur aute\",\n      \"uid\": -71511326,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"fugiat elit qui id ut\",\n      \"code\": \"ipsum minim Ut enim est\",\n      \"name\": \"enim\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"in esse\",\n      \"integration\": \"officia irure\",\n      \"level\": \"ut ad\",\n      \"uid\": 80332110,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Lorem nisi\",\n      \"code\": \"do\",\n      \"name\": \"nulla voluptate\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"fugiat\",\n   \"description\": \"officia fugiat proident\",\n   \"name\": \"id culpa\",\n   \"slug\": \"amet Du\",\n   \"meta\": [\n    {\n     \"_id\": \"do fugiat sed ipsum\",\n     \"name\": \"elit Excepteur irure aliquip reprehenderit\",\n     \"value\": \"velit\"\n    },\n    {\n     \"_id\": \"aliquip laboris deserunt et ipsum\",\n     \"name\": \"veniam labore commodo elit\",\n     \"value\": \"et occaecat quis\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"eiusmod mollit dolore\",\n    \"integration\": \"dolore mollit sunt\",\n    \"level\": \"voluptate occaecat nisi\",\n    \"uid\": -14125466,\n    \"opted\": false,\n    \"permissions\": [\n     \"aliquip in\",\n     \"tempor ea officia Duis\"\n    ],\n    \"token\": \"sunt\",\n    \"name\": \"q\",\n    \"stores\": [\n     {\n      \"_id\": \"labore dolore velit\",\n      \"integration\": \"Excepteur exercitation dolore nulla\",\n      \"level\": \"ex deserunt id\",\n      \"uid\": 40294035,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sed eiusmod mollit\",\n      \"code\": \"Duis fugiat nisi Excepteur\",\n      \"name\": \"elit Ut\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"do magna\",\n      \"integration\": \"et sit sint cillum\",\n      \"level\": \"incididunt dolore fugiat\",\n      \"uid\": 53315210,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"qui mol\",\n      \"code\": \"exercitation amet Ut ex\",\n      \"name\": \"ut veniam nostrud\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"dolor aliquip adipisicing cupidatat\",\n    \"integration\": \"culpa consectetur do\",\n    \"level\": \"id in Ut\",\n    \"uid\": -17399637,\n    \"opted\": false,\n    \"permissions\": [\n     \"eiusmod \",\n     \"culpa\"\n    ],\n    \"token\": \"aliquip Ut elit sit\",\n    \"name\": \"reprehenderit occaecat eu elit\",\n    \"stores\": [\n     {\n      \"_id\": \"mollit esse consectetur deserunt\",\n      \"integration\": \"anim laborum adipisicing labore voluptate\",\n      \"level\": \"sint culpa ad\",\n      \"uid\": -876282,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"elit\",\n      \"code\": \"adipisicing\",\n      \"name\": \"voluptate aliquip eu in in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"sint incididunt\",\n      \"integration\": \"nulla \",\n      \"level\": \"incididunt in\",\n      \"uid\": 57989181,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"magna et consectetur\",\n      \"code\": \"sit Excepteur\",\n      \"name\": \"Duis aute officia id incididunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"dolore dolore Excepteur\",\n \"page\": {\n  \"type\": \"occaecat dolor ut et\",\n  \"size\": -35344909,\n  \"current\": -76906200,\n  \"has_next\": true,\n  \"item_total\": -52667475,\n  \"next_id\": \"ex Duis\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "353be30d-78b5-4664-96a8-4b41eca0a8fd",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2014-04-06T05:38:53.327Z\",\n \"status\": -16836083,\n \"error\": \"dolore sed nisi\",\n \"exception\": \"dolor proident\",\n \"message\": \"commodo in\",\n \"total_time_taken_in_millis\": 58183883,\n \"http_status\": \"102 PROCESSING\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"ex\",\n   \"description\": \"deserunt dolor\",\n   \"name\": \"ad ex deserunt\",\n   \"slug\": \"magna ipsum commodo\",\n   \"meta\": [\n    {\n     \"_id\": \"dolore\",\n     \"name\": \"ut ad in reprehenderit fu\",\n     \"value\": \"ad\"\n    },\n    {\n     \"_id\": \"deserunt culpa\",\n     \"name\": \"esse \",\n     \"value\": \"consectetur Duis adipisicing\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"ipsum magna mollit\",\n    \"integration\": \"aliqua dolore\",\n    \"level\": \"aute velit pariatur irure magna\",\n    \"uid\": -96390837,\n    \"opted\": false,\n    \"permissions\": [\n     \"dolor\",\n     \"do nulla elit in dolor\"\n    ],\n    \"token\": \"ad n\",\n    \"name\": \"laborum minim\",\n    \"stores\": [\n     {\n      \"_id\": \"commodo Lo\",\n      \"integration\": \"nostrud minim Except\",\n      \"level\": \"sed sint labore\",\n      \"uid\": 14867627,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sint eu in\",\n      \"code\": \"velit Ut ut sint\",\n      \"name\": \"laborum Ut deserunt consequat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"incididunt id\",\n      \"integration\": \"enim Duis sunt\",\n      \"level\": \"aliquip\",\n      \"uid\": 19267470,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"incididunt\",\n      \"code\": \"esse ipsum\",\n      \"name\": \"consequat anim veniam ipsum non\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"est labore culpa\",\n    \"integration\": \"incididunt\",\n    \"level\": \"eu Duis\",\n    \"uid\": -3406215,\n    \"opted\": false,\n    \"permissions\": [\n     \"consectetur sit occaecat laborum dolor\",\n     \"incididunt occaecat consequat cupidatat\"\n    ],\n    \"token\": \"esse adipisicing\",\n    \"name\": \"sunt dolor aliqua exercitat\",\n    \"stores\": [\n     {\n      \"_id\": \"in labore anim in\",\n      \"integration\": \"labore nostrud reprehenderit eiusmod\",\n      \"level\": \"nostrud consectetur aute\",\n      \"uid\": -71511326,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"fugiat elit qui id ut\",\n      \"code\": \"ipsum minim Ut enim est\",\n      \"name\": \"enim\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"in esse\",\n      \"integration\": \"officia irure\",\n      \"level\": \"ut ad\",\n      \"uid\": 80332110,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Lorem nisi\",\n      \"code\": \"do\",\n      \"name\": \"nulla voluptate\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"fugiat\",\n   \"description\": \"officia fugiat proident\",\n   \"name\": \"id culpa\",\n   \"slug\": \"amet Du\",\n   \"meta\": [\n    {\n     \"_id\": \"do fugiat sed ipsum\",\n     \"name\": \"elit Excepteur irure aliquip reprehenderit\",\n     \"value\": \"velit\"\n    },\n    {\n     \"_id\": \"aliquip laboris deserunt et ipsum\",\n     \"name\": \"veniam labore commodo elit\",\n     \"value\": \"et occaecat quis\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"eiusmod mollit dolore\",\n    \"integration\": \"dolore mollit sunt\",\n    \"level\": \"voluptate occaecat nisi\",\n    \"uid\": -14125466,\n    \"opted\": false,\n    \"permissions\": [\n     \"aliquip in\",\n     \"tempor ea officia Duis\"\n    ],\n    \"token\": \"sunt\",\n    \"name\": \"q\",\n    \"stores\": [\n     {\n      \"_id\": \"labore dolore velit\",\n      \"integration\": \"Excepteur exercitation dolore nulla\",\n      \"level\": \"ex deserunt id\",\n      \"uid\": 40294035,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sed eiusmod mollit\",\n      \"code\": \"Duis fugiat nisi Excepteur\",\n      \"name\": \"elit Ut\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"do magna\",\n      \"integration\": \"et sit sint cillum\",\n      \"level\": \"incididunt dolore fugiat\",\n      \"uid\": 53315210,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"qui mol\",\n      \"code\": \"exercitation amet Ut ex\",\n      \"name\": \"ut veniam nostrud\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"dolor aliquip adipisicing cupidatat\",\n    \"integration\": \"culpa consectetur do\",\n    \"level\": \"id in Ut\",\n    \"uid\": -17399637,\n    \"opted\": false,\n    \"permissions\": [\n     \"eiusmod \",\n     \"culpa\"\n    ],\n    \"token\": \"aliquip Ut elit sit\",\n    \"name\": \"reprehenderit occaecat eu elit\",\n    \"stores\": [\n     {\n      \"_id\": \"mollit esse consectetur deserunt\",\n      \"integration\": \"anim laborum adipisicing labore voluptate\",\n      \"level\": \"sint culpa ad\",\n      \"uid\": -876282,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"elit\",\n      \"code\": \"adipisicing\",\n      \"name\": \"voluptate aliquip eu in in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"sint incididunt\",\n      \"integration\": \"nulla \",\n      \"level\": \"incididunt in\",\n      \"uid\": 57989181,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"magna et consectetur\",\n      \"code\": \"sit Excepteur\",\n      \"name\": \"Duis aute officia id incididunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"dolore dolore Excepteur\",\n \"page\": {\n  \"type\": \"occaecat dolor ut et\",\n  \"size\": -35344909,\n  \"current\": -76906200,\n  \"has_next\": true,\n  \"item_total\": -52667475,\n  \"next_id\": \"ex Duis\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5dab86d9-c82e-4407-a4e3-ca80a656e33e",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2014-04-06T05:38:53.327Z\",\n \"status\": -16836083,\n \"error\": \"dolore sed nisi\",\n \"exception\": \"dolor proident\",\n \"message\": \"commodo in\",\n \"total_time_taken_in_millis\": 58183883,\n \"http_status\": \"102 PROCESSING\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"ex\",\n   \"description\": \"deserunt dolor\",\n   \"name\": \"ad ex deserunt\",\n   \"slug\": \"magna ipsum commodo\",\n   \"meta\": [\n    {\n     \"_id\": \"dolore\",\n     \"name\": \"ut ad in reprehenderit fu\",\n     \"value\": \"ad\"\n    },\n    {\n     \"_id\": \"deserunt culpa\",\n     \"name\": \"esse \",\n     \"value\": \"consectetur Duis adipisicing\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"ipsum magna mollit\",\n    \"integration\": \"aliqua dolore\",\n    \"level\": \"aute velit pariatur irure magna\",\n    \"uid\": -96390837,\n    \"opted\": false,\n    \"permissions\": [\n     \"dolor\",\n     \"do nulla elit in dolor\"\n    ],\n    \"token\": \"ad n\",\n    \"name\": \"laborum minim\",\n    \"stores\": [\n     {\n      \"_id\": \"commodo Lo\",\n      \"integration\": \"nostrud minim Except\",\n      \"level\": \"sed sint labore\",\n      \"uid\": 14867627,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sint eu in\",\n      \"code\": \"velit Ut ut sint\",\n      \"name\": \"laborum Ut deserunt consequat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"incididunt id\",\n      \"integration\": \"enim Duis sunt\",\n      \"level\": \"aliquip\",\n      \"uid\": 19267470,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"incididunt\",\n      \"code\": \"esse ipsum\",\n      \"name\": \"consequat anim veniam ipsum non\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"est labore culpa\",\n    \"integration\": \"incididunt\",\n    \"level\": \"eu Duis\",\n    \"uid\": -3406215,\n    \"opted\": false,\n    \"permissions\": [\n     \"consectetur sit occaecat laborum dolor\",\n     \"incididunt occaecat consequat cupidatat\"\n    ],\n    \"token\": \"esse adipisicing\",\n    \"name\": \"sunt dolor aliqua exercitat\",\n    \"stores\": [\n     {\n      \"_id\": \"in labore anim in\",\n      \"integration\": \"labore nostrud reprehenderit eiusmod\",\n      \"level\": \"nostrud consectetur aute\",\n      \"uid\": -71511326,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"fugiat elit qui id ut\",\n      \"code\": \"ipsum minim Ut enim est\",\n      \"name\": \"enim\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"in esse\",\n      \"integration\": \"officia irure\",\n      \"level\": \"ut ad\",\n      \"uid\": 80332110,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Lorem nisi\",\n      \"code\": \"do\",\n      \"name\": \"nulla voluptate\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"fugiat\",\n   \"description\": \"officia fugiat proident\",\n   \"name\": \"id culpa\",\n   \"slug\": \"amet Du\",\n   \"meta\": [\n    {\n     \"_id\": \"do fugiat sed ipsum\",\n     \"name\": \"elit Excepteur irure aliquip reprehenderit\",\n     \"value\": \"velit\"\n    },\n    {\n     \"_id\": \"aliquip laboris deserunt et ipsum\",\n     \"name\": \"veniam labore commodo elit\",\n     \"value\": \"et occaecat quis\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"eiusmod mollit dolore\",\n    \"integration\": \"dolore mollit sunt\",\n    \"level\": \"voluptate occaecat nisi\",\n    \"uid\": -14125466,\n    \"opted\": false,\n    \"permissions\": [\n     \"aliquip in\",\n     \"tempor ea officia Duis\"\n    ],\n    \"token\": \"sunt\",\n    \"name\": \"q\",\n    \"stores\": [\n     {\n      \"_id\": \"labore dolore velit\",\n      \"integration\": \"Excepteur exercitation dolore nulla\",\n      \"level\": \"ex deserunt id\",\n      \"uid\": 40294035,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sed eiusmod mollit\",\n      \"code\": \"Duis fugiat nisi Excepteur\",\n      \"name\": \"elit Ut\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"do magna\",\n      \"integration\": \"et sit sint cillum\",\n      \"level\": \"incididunt dolore fugiat\",\n      \"uid\": 53315210,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"qui mol\",\n      \"code\": \"exercitation amet Ut ex\",\n      \"name\": \"ut veniam nostrud\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"dolor aliquip adipisicing cupidatat\",\n    \"integration\": \"culpa consectetur do\",\n    \"level\": \"id in Ut\",\n    \"uid\": -17399637,\n    \"opted\": false,\n    \"permissions\": [\n     \"eiusmod \",\n     \"culpa\"\n    ],\n    \"token\": \"aliquip Ut elit sit\",\n    \"name\": \"reprehenderit occaecat eu elit\",\n    \"stores\": [\n     {\n      \"_id\": \"mollit esse consectetur deserunt\",\n      \"integration\": \"anim laborum adipisicing labore voluptate\",\n      \"level\": \"sint culpa ad\",\n      \"uid\": -876282,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"elit\",\n      \"code\": \"adipisicing\",\n      \"name\": \"voluptate aliquip eu in in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"sint incididunt\",\n      \"integration\": \"nulla \",\n      \"level\": \"incididunt in\",\n      \"uid\": 57989181,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"magna et consectetur\",\n      \"code\": \"sit Excepteur\",\n      \"name\": \"Duis aute officia id incididunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"dolore dolore Excepteur\",\n \"page\": {\n  \"type\": \"occaecat dolor ut et\",\n  \"size\": -35344909,\n  \"current\": -76906200,\n  \"has_next\": true,\n  \"item_total\": -52667475,\n  \"next_id\": \"ex Duis\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "d3d5c59f-1119-4b38-9fb7-9c89524ecac9",
          "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
          "request": {
            "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "a4b0646c-27b9-4dd1-b3e0-f493f0d8db08",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1974-12-05T16:36:15.073Z\",\n \"status\": -24207093,\n \"error\": \"esse\",\n \"exception\": \"eiusmod laboris\",\n \"message\": \"quis ipsum ea Ut \",\n \"total_time_taken_in_millis\": -1860495,\n \"http_status\": \"101 SWITCHING_PROTOCOLS\",\n \"items\": {\n  \"session_id\": \"eiusmod id\",\n  \"error_message\": \"qui non aliquip\"\n },\n \"payload\": {\n  \"session_id\": \"incididunt anim sit aute\",\n  \"error_message\": \"in voluptate Ut\"\n },\n \"trace_id\": \"enim\",\n \"page\": {\n  \"type\": \"Excepteur cillum ipsum\",\n  \"size\": 3582109,\n  \"current\": -54221227,\n  \"has_next\": true,\n  \"item_total\": 25014250,\n  \"next_id\": \"co\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1eba2970-e9c0-4d0f-9d92-de4c1e9756a8",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1974-12-05T16:36:15.073Z\",\n \"status\": -24207093,\n \"error\": \"esse\",\n \"exception\": \"eiusmod laboris\",\n \"message\": \"quis ipsum ea Ut \",\n \"total_time_taken_in_millis\": -1860495,\n \"http_status\": \"101 SWITCHING_PROTOCOLS\",\n \"items\": {\n  \"session_id\": \"eiusmod id\",\n  \"error_message\": \"qui non aliquip\"\n },\n \"payload\": {\n  \"session_id\": \"incididunt anim sit aute\",\n  \"error_message\": \"in voluptate Ut\"\n },\n \"trace_id\": \"enim\",\n \"page\": {\n  \"type\": \"Excepteur cillum ipsum\",\n  \"size\": 3582109,\n  \"current\": -54221227,\n  \"has_next\": true,\n  \"item_total\": 25014250,\n  \"next_id\": \"co\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "52db9eb8-d6da-4788-aebc-732dd6197bf2",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1974-12-05T16:36:15.073Z\",\n \"status\": -24207093,\n \"error\": \"esse\",\n \"exception\": \"eiusmod laboris\",\n \"message\": \"quis ipsum ea Ut \",\n \"total_time_taken_in_millis\": -1860495,\n \"http_status\": \"101 SWITCHING_PROTOCOLS\",\n \"items\": {\n  \"session_id\": \"eiusmod id\",\n  \"error_message\": \"qui non aliquip\"\n },\n \"payload\": {\n  \"session_id\": \"incididunt anim sit aute\",\n  \"error_message\": \"in voluptate Ut\"\n },\n \"trace_id\": \"enim\",\n \"page\": {\n  \"type\": \"Excepteur cillum ipsum\",\n  \"size\": 3582109,\n  \"current\": -54221227,\n  \"has_next\": true,\n  \"item_total\": 25014250,\n  \"next_id\": \"co\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "17d3e8d1-3905-471b-8f7c-2c3f53201787",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "0929e27b-540b-42f8-bbbb-ee68d1a84b99",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1960-05-18T19:12:08.587Z\",\n \"status\": 25673000,\n \"error\": \"magna amet enim ea in\",\n \"exception\": \"mollit aute sit ipsum fugiat\",\n \"message\": \"esse Exc\",\n \"total_time_taken_in_millis\": -71760370,\n \"http_status\": \"102 PROCESSING\",\n \"items\": {\n  \"company_id\": -21473082,\n  \"integration_data\": {},\n  \"company_name\": \"mollit pariatur Duis reprehenderit\",\n  \"task_details\": {\n   \"type\": -61465780,\n   \"group_list\": [\n    {\n     \"text\": \"eu\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"eu amet\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 924949.6531072706,\n   \"safe_stock\": 37617124,\n   \"period_threshold\": 11347085,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"deserunt laborum Duis aliqua\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"Ut eu consectetur laborum esse\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"aute nulla magna sint\",\n  \"alias\": \"nostrud elit velit\"\n },\n \"payload\": {\n  \"company_id\": 54382504,\n  \"integration_data\": {},\n  \"company_name\": \"ut esse proident incididunt\",\n  \"task_details\": {\n   \"type\": 12748050,\n   \"group_list\": [\n    {\n     \"text\": \"laboris incididunt\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ut eiusmod est in\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 39366425.74442974,\n   \"safe_stock\": 55179281,\n   \"period_threshold\": 280189,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"dolor mollit incididunt\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"mollit aliquip proident\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"commodo fugiat eu laborum\",\n  \"alias\": \"anim nulla enim\"\n },\n \"trace_id\": \"sint ad dolor quis\",\n \"page\": {\n  \"type\": \"pariatur ea laboris\",\n  \"size\": 89517872,\n  \"current\": 53459134,\n  \"has_next\": true,\n  \"item_total\": -58737100,\n  \"next_id\": \"ut veniam aliqua\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9a3473dc-8eed-4242-955e-d86c2f537636",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1960-05-18T19:12:08.587Z\",\n \"status\": 25673000,\n \"error\": \"magna amet enim ea in\",\n \"exception\": \"mollit aute sit ipsum fugiat\",\n \"message\": \"esse Exc\",\n \"total_time_taken_in_millis\": -71760370,\n \"http_status\": \"102 PROCESSING\",\n \"items\": {\n  \"company_id\": -21473082,\n  \"integration_data\": {},\n  \"company_name\": \"mollit pariatur Duis reprehenderit\",\n  \"task_details\": {\n   \"type\": -61465780,\n   \"group_list\": [\n    {\n     \"text\": \"eu\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"eu amet\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 924949.6531072706,\n   \"safe_stock\": 37617124,\n   \"period_threshold\": 11347085,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"deserunt laborum Duis aliqua\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"Ut eu consectetur laborum esse\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"aute nulla magna sint\",\n  \"alias\": \"nostrud elit velit\"\n },\n \"payload\": {\n  \"company_id\": 54382504,\n  \"integration_data\": {},\n  \"company_name\": \"ut esse proident incididunt\",\n  \"task_details\": {\n   \"type\": 12748050,\n   \"group_list\": [\n    {\n     \"text\": \"laboris incididunt\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ut eiusmod est in\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 39366425.74442974,\n   \"safe_stock\": 55179281,\n   \"period_threshold\": 280189,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"dolor mollit incididunt\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"mollit aliquip proident\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"commodo fugiat eu laborum\",\n  \"alias\": \"anim nulla enim\"\n },\n \"trace_id\": \"sint ad dolor quis\",\n \"page\": {\n  \"type\": \"pariatur ea laboris\",\n  \"size\": 89517872,\n  \"current\": 53459134,\n  \"has_next\": true,\n  \"item_total\": -58737100,\n  \"next_id\": \"ut veniam aliqua\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "8cbaaccd-86e9-405f-a674-7f4deebc3837",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1960-05-18T19:12:08.587Z\",\n \"status\": 25673000,\n \"error\": \"magna amet enim ea in\",\n \"exception\": \"mollit aute sit ipsum fugiat\",\n \"message\": \"esse Exc\",\n \"total_time_taken_in_millis\": -71760370,\n \"http_status\": \"102 PROCESSING\",\n \"items\": {\n  \"company_id\": -21473082,\n  \"integration_data\": {},\n  \"company_name\": \"mollit pariatur Duis reprehenderit\",\n  \"task_details\": {\n   \"type\": -61465780,\n   \"group_list\": [\n    {\n     \"text\": \"eu\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"eu amet\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 924949.6531072706,\n   \"safe_stock\": 37617124,\n   \"period_threshold\": 11347085,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"deserunt laborum Duis aliqua\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"Ut eu consectetur laborum esse\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"aute nulla magna sint\",\n  \"alias\": \"nostrud elit velit\"\n },\n \"payload\": {\n  \"company_id\": 54382504,\n  \"integration_data\": {},\n  \"company_name\": \"ut esse proident incididunt\",\n  \"task_details\": {\n   \"type\": 12748050,\n   \"group_list\": [\n    {\n     \"text\": \"laboris incididunt\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ut eiusmod est in\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 39366425.74442974,\n   \"safe_stock\": 55179281,\n   \"period_threshold\": 280189,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"dolor mollit incididunt\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"mollit aliquip proident\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"commodo fugiat eu laborum\",\n  \"alias\": \"anim nulla enim\"\n },\n \"trace_id\": \"sint ad dolor quis\",\n \"page\": {\n  \"type\": \"pariatur ea laboris\",\n  \"size\": 89517872,\n  \"current\": 53459134,\n  \"has_next\": true,\n  \"item_total\": -58737100,\n  \"next_id\": \"ut veniam aliqua\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "d12fc08b-7736-4403-bc35-7896a4fa7c35",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "e178da07-678f-4734-8257-e391bb9799f7",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2014-02-14T05:44:51.962Z\",\n \"status\": -48642726,\n \"error\": \"Lorem occaecat ea\",\n \"exception\": \"ipsum ullamco\",\n \"message\": \"voluptate sed sunt esse eu\",\n \"total_time_taken_in_millis\": -61946080,\n \"http_status\": \"509 BANDWIDTH_LIMIT_EXCEEDED\",\n \"items\": [\n  {\n   \"company_id\": 57009545,\n   \"integration_data\": {},\n   \"company_name\": \"non Lorem \",\n   \"task_details\": {\n    \"type\": -27113299,\n    \"group_list\": [\n     {\n      \"text\": \"ut cillum occaecat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliquip dolore occaecat culpa cupidatat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 86266864.31463245,\n    \"safe_stock\": -37638949,\n    \"period_threshold\": -85426328,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"incididunt in ad con\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Duis elit ullamco\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"id\",\n   \"alias\": \"pariatur in veniam sunt\"\n  },\n  {\n   \"company_id\": 43395487,\n   \"integration_data\": {},\n   \"company_name\": \"anim ipsum id\",\n   \"task_details\": {\n    \"type\": 27699737,\n    \"group_list\": [\n     {\n      \"text\": \"magna ea\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"irure ex adipisicing\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -89029851.86465901,\n    \"safe_stock\": 99606014,\n    \"period_threshold\": 79871908,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ut ipsum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"magna ad reprehenderit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"mollit sed laboris adipisicing irure\",\n   \"alias\": \"nulla\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -85691207,\n   \"integration_data\": {},\n   \"company_name\": \"fugiat esse dolore\",\n   \"task_details\": {\n    \"type\": 42088861,\n    \"group_list\": [\n     {\n      \"text\": \"Lorem\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ipsum dolor officia\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 52365512.30106431,\n    \"safe_stock\": -79963029,\n    \"period_threshold\": -81717044,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"Duis in et aliquip incididunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"minim in aliqua\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"consectetur officia sed\",\n   \"alias\": \"aliquip ex dolor\"\n  },\n  {\n   \"company_id\": 40402818,\n   \"integration_data\": {},\n   \"company_name\": \"adipisicing culpa\",\n   \"task_details\": {\n    \"type\": 12955529,\n    \"group_list\": [\n     {\n      \"text\": \"aute\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ea Duis et consequat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -92031268.35558951,\n    \"safe_stock\": 73564910,\n    \"period_threshold\": -19874139,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolore proident nisi ullamco\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"enim exercitation fugiat pariatur\",\n   \"alias\": \"pariatur anim elit mollit ea\"\n  }\n ],\n \"trace_id\": \"Duis proident ut\",\n \"page\": {\n  \"type\": \"eiusmod fugiat eu Duis cillum\",\n  \"size\": -84557906,\n  \"current\": -8219115,\n  \"has_next\": true,\n  \"item_total\": -23916147,\n  \"next_id\": \"Lorem a\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "94f2dba8-9082-4bf7-af4b-6b888e762791",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1974-07-29T11:21:11.325Z\",\n \"status\": 19206325,\n \"error\": \"velit magna cupidatat ex\",\n \"exception\": \"aute cupidatat dolor\",\n \"message\": \"eiusmod ut dolor est\",\n \"total_time_taken_in_millis\": -48623088,\n \"http_status\": \"414 URI_TOO_LONG\",\n \"items\": [\n  {\n   \"company_id\": 88764778,\n   \"integration_data\": {},\n   \"company_name\": \"cupidatat id\",\n   \"task_details\": {\n    \"type\": -73207330,\n    \"group_list\": [\n     {\n      \"text\": \"aliqua dolor nulla\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sunt aliquip ipsum id\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -17846232.484412685,\n    \"safe_stock\": -743706,\n    \"period_threshold\": -95567720,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"deserunt Excepteur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"i\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"velit\",\n   \"alias\": \"cupida\"\n  },\n  {\n   \"company_id\": 65554245,\n   \"integration_data\": {},\n   \"company_name\": \"enim irur\",\n   \"task_details\": {\n    \"type\": -87483643,\n    \"group_list\": [\n     {\n      \"text\": \"Duis eu qui\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"adipisicing dolor amet laboris\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 60137982.157441884,\n    \"safe_stock\": -45925600,\n    \"period_threshold\": 81135439,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"officia\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ex\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"reprehenderit consectetur commodo\",\n   \"alias\": \"consequat Excepteur voluptate sun\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -17146570,\n   \"integration_data\": {},\n   \"company_name\": \"laboris anim ut commodo\",\n   \"task_details\": {\n    \"type\": 24857682,\n    \"group_list\": [\n     {\n      \"text\": \"mollit mi\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor velit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 46248564.23932767,\n    \"safe_stock\": 70486791,\n    \"period_threshold\": -86696338,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"adipisicing exercitation\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliqua ex\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Ut fugiat occaecat cillum\",\n   \"alias\": \"reprehenderit ad est\"\n  },\n  {\n   \"company_id\": 79701095,\n   \"integration_data\": {},\n   \"company_name\": \"velit voluptate irure dolor anim\",\n   \"task_details\": {\n    \"type\": 17891807,\n    \"group_list\": [\n     {\n      \"text\": \"adipisicin\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut anim velit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -54641558.583318785,\n    \"safe_stock\": -55226266,\n    \"period_threshold\": -17363787,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ad\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"adipisicing\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"consequat quis magna\",\n   \"alias\": \"co\"\n  }\n ],\n \"trace_id\": \"cillum \",\n \"page\": {\n  \"type\": \"laboris ut\",\n  \"size\": 47556453,\n  \"current\": 46370913,\n  \"has_next\": false,\n  \"item_total\": 38020837,\n  \"next_id\": \"id\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "80222ff4-90d2-4799-8d23-1bc5a2601014",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1974-07-29T11:21:11.325Z\",\n \"status\": 19206325,\n \"error\": \"velit magna cupidatat ex\",\n \"exception\": \"aute cupidatat dolor\",\n \"message\": \"eiusmod ut dolor est\",\n \"total_time_taken_in_millis\": -48623088,\n \"http_status\": \"414 URI_TOO_LONG\",\n \"items\": [\n  {\n   \"company_id\": 88764778,\n   \"integration_data\": {},\n   \"company_name\": \"cupidatat id\",\n   \"task_details\": {\n    \"type\": -73207330,\n    \"group_list\": [\n     {\n      \"text\": \"aliqua dolor nulla\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sunt aliquip ipsum id\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -17846232.484412685,\n    \"safe_stock\": -743706,\n    \"period_threshold\": -95567720,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"deserunt Excepteur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"i\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"velit\",\n   \"alias\": \"cupida\"\n  },\n  {\n   \"company_id\": 65554245,\n   \"integration_data\": {},\n   \"company_name\": \"enim irur\",\n   \"task_details\": {\n    \"type\": -87483643,\n    \"group_list\": [\n     {\n      \"text\": \"Duis eu qui\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"adipisicing dolor amet laboris\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 60137982.157441884,\n    \"safe_stock\": -45925600,\n    \"period_threshold\": 81135439,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"officia\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ex\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"reprehenderit consectetur commodo\",\n   \"alias\": \"consequat Excepteur voluptate sun\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -17146570,\n   \"integration_data\": {},\n   \"company_name\": \"laboris anim ut commodo\",\n   \"task_details\": {\n    \"type\": 24857682,\n    \"group_list\": [\n     {\n      \"text\": \"mollit mi\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor velit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 46248564.23932767,\n    \"safe_stock\": 70486791,\n    \"period_threshold\": -86696338,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"adipisicing exercitation\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliqua ex\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Ut fugiat occaecat cillum\",\n   \"alias\": \"reprehenderit ad est\"\n  },\n  {\n   \"company_id\": 79701095,\n   \"integration_data\": {},\n   \"company_name\": \"velit voluptate irure dolor anim\",\n   \"task_details\": {\n    \"type\": 17891807,\n    \"group_list\": [\n     {\n      \"text\": \"adipisicin\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut anim velit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -54641558.583318785,\n    \"safe_stock\": -55226266,\n    \"period_threshold\": -17363787,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ad\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"adipisicing\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"consequat quis magna\",\n   \"alias\": \"co\"\n  }\n ],\n \"trace_id\": \"cillum \",\n \"page\": {\n  \"type\": \"laboris ut\",\n  \"size\": 47556453,\n  \"current\": 46370913,\n  \"has_next\": false,\n  \"item_total\": 38020837,\n  \"next_id\": \"id\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fynd.com"
    }
  ],
  "info": {
    "_postman_id": "09577ee0-0824-4952-9fe1-082983c7015f",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
