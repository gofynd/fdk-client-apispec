{
  "item": [
    {
      "id": "3581b37f-c11d-4efc-8d9b-a025cfbdaa1d",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "010cdcf3-c709-4373-9757-894f812370c1",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "bb3abf28-37ee-47a9-ad0d-2b143e8721b5",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "s",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "05b06e0c-fe4d-43df-a6de-0f297eb5cda1",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "s",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"Invalid application domain or id.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "71086927-8ce2-4a9a-bbe2-1a325111883f",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "s",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "23c72a9a-8cbb-4e8c-b64b-918fb18bb3f2",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "8a34ae6b-219b-4d17-9708-0cf29b3ffcdf",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "954e72c5-4d3f-4a14-941a-f856eaef879a",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "393e3e7d-0d2e-40ef-9f1f-a331132eae5f",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "871d85ad-93c2-44ec-a0a9-5b56c78ab82a",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 87966836,\n   \"event_name\": \"nisi ea esse quis\",\n   \"event_type\": \"cupidatat do ad\",\n   \"event_category\": \"e\",\n   \"version\": \"ipsum cillum tempor\",\n   \"display_name\": \"officia consectetur\",\n   \"description\": \"anim quis incididunt\",\n   \"created_on\": \"dolor aliqua\"\n  },\n  {\n   \"id\": -1973450,\n   \"event_name\": \"consequat sed\",\n   \"event_type\": \"eu ut cupidatat\",\n   \"event_category\": \"aute id magna est\",\n   \"version\": \"consequat ut adipisicing\",\n   \"display_name\": \"dolor dolore ad\",\n   \"description\": \"adipisicing sunt Lorem dolor ipsum\",\n   \"created_on\": \"dolor minim\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "e8b5917a-9b96-4cdf-87e4-399d8c6acfc0",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "1fb5b64f-cba4-4397-938d-61e8d98857da",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -91081863,\n   \"event_name\": \"sint dolore Excepteur\",\n   \"event_type\": \"Duis amet nostrud dolore\",\n   \"event_category\": \"reprehenderit velit nulla ut\",\n   \"version\": \"ut do\",\n   \"display_name\": \"in quis mollit\",\n   \"description\": \"ea do dolore irure nostrud\",\n   \"created_on\": \"in dolore culpa\"\n  },\n  {\n   \"id\": -65631927,\n   \"event_name\": \"laborum\",\n   \"event_type\": \"aliquip ullamco dolore proident \",\n   \"event_category\": \"ut cup\",\n   \"version\": \"proident mollit eu voluptate\",\n   \"display_name\": \"amet non\",\n   \"description\": \"nulla\",\n   \"created_on\": \"sit occaecat ad\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "ec675806-b267-4174-9a51-15d77f5edc4b",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "af6d3654-f1a5-416f-a546-da9bde20f138",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "3a9f11d4-3763-47d8-911f-4bb609a44ba6",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1991-09-20T09:30:26.489Z\",\n \"status\": -16328926,\n \"error\": \"occaecat exercitation nulla aliquip voluptate\",\n \"exception\": \"consequat voluptate ea adipisicing anim\",\n \"message\": \"laboris\",\n \"total_time_taken_in_millis\": -77730663,\n \"http_status\": \"101 SWITCHING_PROTOCOLS\",\n \"items\": [\n  {\n   \"company_id\": 71985151,\n   \"integration_data\": {},\n   \"company_name\": \"elit est\",\n   \"task_details\": {\n    \"type\": 37737381,\n    \"group_list\": [\n     {\n      \"text\": \"irure ut Excepteur in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"qui officia Lorem\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -45927642.11980769,\n    \"safe_stock\": -68323449,\n    \"period_threshold\": -85607854,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ipsum id\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in cupidatat aute ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"commodo id ullamco\",\n   \"alias\": \"anim in tempor laborum labore\"\n  },\n  {\n   \"company_id\": -75445940,\n   \"integration_data\": {},\n   \"company_name\": \"cillum proident\",\n   \"task_details\": {\n    \"type\": -27252516,\n    \"group_list\": [\n     {\n      \"text\": \"fugiat adipisicing Lorem tempor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"labore n\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -32338634.496736154,\n    \"safe_stock\": -64905027,\n    \"period_threshold\": 51759782,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"velit in occaecat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"minim officia culpa\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"do nisi reprehenderit\",\n   \"alias\": \"in culpa ex\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -63517727,\n   \"integration_data\": {},\n   \"company_name\": \"elit laboris\",\n   \"task_details\": {\n    \"type\": 37309160,\n    \"group_list\": [\n     {\n      \"text\": \"ut dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"minim in nisi\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 31145906.48850499,\n    \"safe_stock\": 55297218,\n    \"period_threshold\": -48662415,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"in dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cupidat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"mollit ut eu\",\n   \"alias\": \"nulla in\"\n  },\n  {\n   \"company_id\": -63401705,\n   \"integration_data\": {},\n   \"company_name\": \"ut ex aliquip Ut\",\n   \"task_details\": {\n    \"type\": -19360781,\n    \"group_list\": [\n     {\n      \"text\": \"adipisicing cupidatat non\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"incididunt do veniam\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -75915136.45814252,\n    \"safe_stock\": 5281330,\n    \"period_threshold\": -66486221,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"officia nulla qui nostrud\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"veniam pariatur esse\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ut reprehenderit\",\n   \"alias\": \"culpa\"\n  }\n ],\n \"trace_id\": \"dolore est dolore\",\n \"page\": {\n  \"type\": \"voluptate Excepteur non proident velit\",\n  \"size\": 74727630,\n  \"current\": 75765449,\n  \"has_next\": true,\n  \"item_total\": 66406545,\n  \"next_id\": \"voluptate Excepteur aute\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "89bce459-f462-4298-9f1b-8484ca98067f",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1980-10-15T05:08:55.701Z\",\n \"status\": 65359425,\n \"error\": \"Lorem sed eu\",\n \"exception\": \"Excepteur amet velit\",\n \"message\": \"Ut dolore deserunt in sed\",\n \"total_time_taken_in_millis\": -84706687,\n \"http_status\": \"400 BAD_REQUEST\",\n \"items\": [\n  {\n   \"company_id\": 985888,\n   \"integration_data\": {},\n   \"company_name\": \"esse Duis nulla commodo\",\n   \"task_details\": {\n    \"type\": 85172550,\n    \"group_list\": [\n     {\n      \"text\": \"ad sunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor id dolor laborum ex\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 7630949.6420957,\n    \"safe_stock\": 75419345,\n    \"period_threshold\": -98651391,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"elit dolor cupidatat nisi anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sit occaecat ipsum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sunt veniam ut culpa\",\n   \"alias\": \"amet ut reprehenderit velit\"\n  },\n  {\n   \"company_id\": 48767823,\n   \"integration_data\": {},\n   \"company_name\": \"laborum sed consectetur\",\n   \"task_details\": {\n    \"type\": -6417928,\n    \"group_list\": [\n     {\n      \"text\": \"ad consectetur ipsum velit tempor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sit eu aliquip laboris Ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 9921203.530250326,\n    \"safe_stock\": -23219371,\n    \"period_threshold\": -72447727,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"aute laboris\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"magn\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"cupidatat\",\n   \"alias\": \"consectetur dolor\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 79293573,\n   \"integration_data\": {},\n   \"company_name\": \"pro\",\n   \"task_details\": {\n    \"type\": -73062957,\n    \"group_list\": [\n     {\n      \"text\": \"eu qui\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor consectetur ea nulla eiusmod\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 60522097.33198297,\n    \"safe_stock\": -5502084,\n    \"period_threshold\": 94404527,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"labore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in velit ut officia\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Lorem nisi aliqua\",\n   \"alias\": \"aute ex do\"\n  },\n  {\n   \"company_id\": -61567613,\n   \"integration_data\": {},\n   \"company_name\": \"si\",\n   \"task_details\": {\n    \"type\": 11114504,\n    \"group_list\": [\n     {\n      \"text\": \"ad mollit ut voluptate anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nostrud proident magna Ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -79018118.3094857,\n    \"safe_stock\": 95358205,\n    \"period_threshold\": 15073376,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"incididunt enim dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"commodo ea officia esse\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ipsum non\",\n   \"alias\": \"aute ut\"\n  }\n ],\n \"trace_id\": \"consequat\",\n \"page\": {\n  \"type\": \"do incididunt ea fugiat\",\n  \"size\": -32196285,\n  \"current\": 20332021,\n  \"has_next\": false,\n  \"item_total\": 59100850,\n  \"next_id\": \"eu minim in magna\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "7d2bbf79-9340-4de7-bb7a-c6a5f11d1b96",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1980-10-15T05:08:55.701Z\",\n \"status\": 65359425,\n \"error\": \"Lorem sed eu\",\n \"exception\": \"Excepteur amet velit\",\n \"message\": \"Ut dolore deserunt in sed\",\n \"total_time_taken_in_millis\": -84706687,\n \"http_status\": \"400 BAD_REQUEST\",\n \"items\": [\n  {\n   \"company_id\": 985888,\n   \"integration_data\": {},\n   \"company_name\": \"esse Duis nulla commodo\",\n   \"task_details\": {\n    \"type\": 85172550,\n    \"group_list\": [\n     {\n      \"text\": \"ad sunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor id dolor laborum ex\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 7630949.6420957,\n    \"safe_stock\": 75419345,\n    \"period_threshold\": -98651391,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"elit dolor cupidatat nisi anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sit occaecat ipsum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sunt veniam ut culpa\",\n   \"alias\": \"amet ut reprehenderit velit\"\n  },\n  {\n   \"company_id\": 48767823,\n   \"integration_data\": {},\n   \"company_name\": \"laborum sed consectetur\",\n   \"task_details\": {\n    \"type\": -6417928,\n    \"group_list\": [\n     {\n      \"text\": \"ad consectetur ipsum velit tempor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sit eu aliquip laboris Ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 9921203.530250326,\n    \"safe_stock\": -23219371,\n    \"period_threshold\": -72447727,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"aute laboris\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"magn\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"cupidatat\",\n   \"alias\": \"consectetur dolor\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 79293573,\n   \"integration_data\": {},\n   \"company_name\": \"pro\",\n   \"task_details\": {\n    \"type\": -73062957,\n    \"group_list\": [\n     {\n      \"text\": \"eu qui\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor consectetur ea nulla eiusmod\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 60522097.33198297,\n    \"safe_stock\": -5502084,\n    \"period_threshold\": 94404527,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"labore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in velit ut officia\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Lorem nisi aliqua\",\n   \"alias\": \"aute ex do\"\n  },\n  {\n   \"company_id\": -61567613,\n   \"integration_data\": {},\n   \"company_name\": \"si\",\n   \"task_details\": {\n    \"type\": 11114504,\n    \"group_list\": [\n     {\n      \"text\": \"ad mollit ut voluptate anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nostrud proident magna Ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -79018118.3094857,\n    \"safe_stock\": 95358205,\n    \"period_threshold\": 15073376,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"incididunt enim dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"commodo ea officia esse\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ipsum non\",\n   \"alias\": \"aute ut\"\n  }\n ],\n \"trace_id\": \"consequat\",\n \"page\": {\n  \"type\": \"do incididunt ea fugiat\",\n  \"size\": -32196285,\n  \"current\": 20332021,\n  \"has_next\": false,\n  \"item_total\": 59100850,\n  \"next_id\": \"eu minim in magna\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "2083a2a8-9d65-4c87-9c6d-e287f84ac16a",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "fc982f2a-0de3-4b56-963c-15c5dddb351d",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1964-12-08T23:37:28.684Z\",\n \"status\": 58706927,\n \"error\": \"Lorem sint in ut dolor\",\n \"exception\": \"nisi ullamco consectetur\",\n \"message\": \"proident exercitation\",\n \"total_time_taken_in_millis\": 16424345,\n \"http_status\": \"407 PROXY_AUTHENTICATION_REQUIRED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"tempor sed qui exercitation Excepte\",\n \"page\": {\n  \"type\": \"voluptate\",\n  \"size\": -57510313,\n  \"current\": -45390411,\n  \"has_next\": false,\n  \"item_total\": 38115596,\n  \"next_id\": \"adipisicing reprehenderit\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "25ee290c-91f3-4774-90c0-763a3afd74d3",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1964-12-08T23:37:28.684Z\",\n \"status\": 58706927,\n \"error\": \"Lorem sint in ut dolor\",\n \"exception\": \"nisi ullamco consectetur\",\n \"message\": \"proident exercitation\",\n \"total_time_taken_in_millis\": 16424345,\n \"http_status\": \"407 PROXY_AUTHENTICATION_REQUIRED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"tempor sed qui exercitation Excepte\",\n \"page\": {\n  \"type\": \"voluptate\",\n  \"size\": -57510313,\n  \"current\": -45390411,\n  \"has_next\": false,\n  \"item_total\": 38115596,\n  \"next_id\": \"adipisicing reprehenderit\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "8c4c5eeb-05a2-48a5-a57b-be77ec56af7f",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1964-12-08T23:37:28.684Z\",\n \"status\": 58706927,\n \"error\": \"Lorem sint in ut dolor\",\n \"exception\": \"nisi ullamco consectetur\",\n \"message\": \"proident exercitation\",\n \"total_time_taken_in_millis\": 16424345,\n \"http_status\": \"407 PROXY_AUTHENTICATION_REQUIRED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"tempor sed qui exercitation Excepte\",\n \"page\": {\n  \"type\": \"voluptate\",\n  \"size\": -57510313,\n  \"current\": -45390411,\n  \"has_next\": false,\n  \"item_total\": 38115596,\n  \"next_id\": \"adipisicing reprehenderit\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "2f378171-192e-45b4-a934-45fccaadcfe9",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "27e4aecc-8bea-4e50-bccf-2c9c73a15420",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2001-12-02T23:44:13.009Z\",\n \"status\": 88357255,\n \"error\": \"laborum aliqua\",\n \"exception\": \"est nostrud ut\",\n \"message\": \"veniam\",\n \"total_time_taken_in_millis\": -54962524,\n \"http_status\": \"504 GATEWAY_TIMEOUT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"mol\",\n \"page\": {\n  \"type\": \"sunt ullamco \",\n  \"size\": 40678610,\n  \"current\": 96792790,\n  \"has_next\": false,\n  \"item_total\": 33027810,\n  \"next_id\": \"eu est dolore consequat\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d3c44a1e-98f5-4b33-8d62-d4b9a0cbc7ee",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2001-12-02T23:44:13.009Z\",\n \"status\": 88357255,\n \"error\": \"laborum aliqua\",\n \"exception\": \"est nostrud ut\",\n \"message\": \"veniam\",\n \"total_time_taken_in_millis\": -54962524,\n \"http_status\": \"504 GATEWAY_TIMEOUT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"mol\",\n \"page\": {\n  \"type\": \"sunt ullamco \",\n  \"size\": 40678610,\n  \"current\": 96792790,\n  \"has_next\": false,\n  \"item_total\": 33027810,\n  \"next_id\": \"eu est dolore consequat\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "04589dc5-c649-4357-bd9d-89706f107652",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2001-12-02T23:44:13.009Z\",\n \"status\": 88357255,\n \"error\": \"laborum aliqua\",\n \"exception\": \"est nostrud ut\",\n \"message\": \"veniam\",\n \"total_time_taken_in_millis\": -54962524,\n \"http_status\": \"504 GATEWAY_TIMEOUT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"mol\",\n \"page\": {\n  \"type\": \"sunt ullamco \",\n  \"size\": 40678610,\n  \"current\": 96792790,\n  \"has_next\": false,\n  \"item_total\": 33027810,\n  \"next_id\": \"eu est dolore consequat\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f13d95ee-8afb-4331-8533-f10e986d3044",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2001-12-02T23:44:13.009Z\",\n \"status\": 88357255,\n \"error\": \"laborum aliqua\",\n \"exception\": \"est nostrud ut\",\n \"message\": \"veniam\",\n \"total_time_taken_in_millis\": -54962524,\n \"http_status\": \"504 GATEWAY_TIMEOUT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"mol\",\n \"page\": {\n  \"type\": \"sunt ullamco \",\n  \"size\": 40678610,\n  \"current\": 96792790,\n  \"has_next\": false,\n  \"item_total\": 33027810,\n  \"next_id\": \"eu est dolore consequat\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ce4bebaf-1a23-46fe-8f24-ac86c751ce3a",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2001-12-02T23:44:13.009Z\",\n \"status\": 88357255,\n \"error\": \"laborum aliqua\",\n \"exception\": \"est nostrud ut\",\n \"message\": \"veniam\",\n \"total_time_taken_in_millis\": -54962524,\n \"http_status\": \"504 GATEWAY_TIMEOUT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"mol\",\n \"page\": {\n  \"type\": \"sunt ullamco \",\n  \"size\": 40678610,\n  \"current\": 96792790,\n  \"has_next\": false,\n  \"item_total\": 33027810,\n  \"next_id\": \"eu est dolore consequat\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx0.de"
    }
  ],
  "info": {
    "_postman_id": "ae3f77a0-baa8-421c-8daa-f847de656da3",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
