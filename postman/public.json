{
  "item": [
    {
      "id": "f9edb701-6ee6-43b9-90e7-eafc5a26987c",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "fe6241fc-72b3-42db-bfc4-e08577027e5c",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "b08b1c1e-f59d-40f6-ad98-d52b9d925104",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "dolor in pariatur",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1adfbb75-b0a4-428d-9209-9d8ebe1a6fe0",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "dolor in pariatur",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"Invalid application domain or id.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "54489523-0cdc-4438-b95e-757be6e91296",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "dolor in pariatur",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "1701c142-bbb2-436c-a931-c3629d72abf8",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "9b54ed7b-689b-40df-b7eb-75d73e5aae33",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "d91bc060-dce2-402d-a26e-4089ee6f6fb6",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "e5f4e146-e356-4222-a023-3d2cb897e91e",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "bad4ae25-c820-423f-b07f-14ae36d3b77c",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 7794710,\n   \"event_name\": \"id reprehenderit aliqua\",\n   \"event_type\": \"nostrud laboris aliquip fugiat\",\n   \"event_category\": \"incididunt\",\n   \"version\": \"ea in consectetur deserunt\",\n   \"display_name\": \"ullamco\",\n   \"description\": \"culpa sunt Excepte\",\n   \"created_on\": \"exercitation officia\"\n  },\n  {\n   \"id\": 39356037,\n   \"event_name\": \"dolore aliquip nostrud Duis ipsum\",\n   \"event_type\": \"consequat nostrud ad velit\",\n   \"event_category\": \"elit anim nostrud esse id\",\n   \"version\": \"ipsum ut\",\n   \"display_name\": \"ullamco nulla\",\n   \"description\": \"do cillum nisi in esse\",\n   \"created_on\": \"eu esse do qui\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "62f614db-32e0-46c2-a12c-9078bfe19ad2",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "f5a8edfa-29ce-40e1-ab27-3667bc038d31",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -87285033,\n   \"event_name\": \"pariatur aliquip non nostrud\",\n   \"event_type\": \"cupidatat reprehenderit cillum sit deserunt\",\n   \"event_category\": \"esse proident in ad\",\n   \"version\": \"magna culpa exercitation qui Duis\",\n   \"display_name\": \"irure Ut ullamco laborum\",\n   \"description\": \"eiusmod ea\",\n   \"created_on\": \"officia dolore\"\n  },\n  {\n   \"id\": -13153045,\n   \"event_name\": \"\",\n   \"event_type\": \"Lorem dolor veniam\",\n   \"event_category\": \"reprehenderit tempor ipsum\",\n   \"version\": \"a\",\n   \"display_name\": \"ipsum\",\n   \"description\": \"Ut Duis\",\n   \"created_on\": \"est ipsum\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "ff9ef866-6bbd-4cb4-8cd1-b39bf1847d68",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "fc5c9162-af5d-49da-ab34-c624a6b7d220",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "e1ed55ca-57fa-456a-9e1a-e3833615c78a",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1953-03-29T06:35:49.065Z\",\n \"status\": -3159833,\n \"error\": \"voluptate in ipsum\",\n \"exception\": \"minim ex\",\n \"message\": \"Ut esse\",\n \"total_time_taken_in_millis\": 99817842,\n \"http_status\": \"405 METHOD_NOT_ALLOWED\",\n \"items\": [\n  {\n   \"company_id\": 3907400,\n   \"integration_data\": {},\n   \"company_name\": \"laborum consectetur ad\",\n   \"task_details\": {\n    \"type\": -3805967,\n    \"group_list\": [\n     {\n      \"text\": \"mollit anim minim do adipisicing\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ea\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 5702739.684181064,\n    \"safe_stock\": 90040136,\n    \"period_threshold\": 47493214,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Excepteur amet sunt culpa anim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"commodo\",\n   \"alias\": \"pariatur tempor\"\n  },\n  {\n   \"company_id\": -76837286,\n   \"integration_data\": {},\n   \"company_name\": \"ullamco nostrud\",\n   \"task_details\": {\n    \"type\": 16328478,\n    \"group_list\": [\n     {\n      \"text\": \"id dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor sunt cupidatat Duis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 40744213.51336518,\n    \"safe_stock\": -33713514,\n    \"period_threshold\": 46008791,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"adipisicing anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"quis dolo\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"occaecat Excepteur\",\n   \"alias\": \"aliquip fugiat dolore pariatur\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -64902283,\n   \"integration_data\": {},\n   \"company_name\": \"enim incididunt et\",\n   \"task_details\": {\n    \"type\": -10912201,\n    \"group_list\": [\n     {\n      \"text\": \"fugiat magna eni\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nisi incididunt nulla consequat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 93346721.11797836,\n    \"safe_stock\": -90660710,\n    \"period_threshold\": -86833812,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ea s\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliquip proident velit aliqua\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"amet Excepteur ut\",\n   \"alias\": \"in aliqua proident amet\"\n  },\n  {\n   \"company_id\": -25192221,\n   \"integration_data\": {},\n   \"company_name\": \"adipisicing\",\n   \"task_details\": {\n    \"type\": 92246337,\n    \"group_list\": [\n     {\n      \"text\": \"Duis ut aute est enim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"magna\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 69177762.9669447,\n    \"safe_stock\": -74587190,\n    \"period_threshold\": -21026665,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ad\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cillum eiusmod\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"et magna\",\n   \"alias\": \"nisi et in aliquip\"\n  }\n ],\n \"trace_id\": \"laboris pariatur non\",\n \"page\": {\n  \"type\": \"dolor nisi enim ut\",\n  \"size\": -34873277,\n  \"current\": 73327914,\n  \"has_next\": true,\n  \"item_total\": -9550966,\n  \"next_id\": \"elit occaecat qui\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ba2f58b7-1d2c-44c3-a2db-caae0ea00eed",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1994-07-21T22:57:42.109Z\",\n \"status\": 1451256,\n \"error\": \"cillum non\",\n \"exception\": \"esse sint dolore\",\n \"message\": \"commodo proident veniam\",\n \"total_time_taken_in_millis\": 22827857,\n \"http_status\": \"300 MULTIPLE_CHOICES\",\n \"items\": [\n  {\n   \"company_id\": -75256263,\n   \"integration_data\": {},\n   \"company_name\": \"Lorem nulla\",\n   \"task_details\": {\n    \"type\": 54473678,\n    \"group_list\": [\n     {\n      \"text\": \"aliquip aliqua\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laboris mollit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 36554886.4938252,\n    \"safe_stock\": 58750809,\n    \"period_threshold\": -42655241,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"culpa pariatur dolor aute\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"deserunt et reprehenderit pariatur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ad amet fugiat ut\",\n   \"alias\": \"officia ex quis ullamco pariatur\"\n  },\n  {\n   \"company_id\": -25295217,\n   \"integration_data\": {},\n   \"company_name\": \"ad sint\",\n   \"task_details\": {\n    \"type\": -42345471,\n    \"group_list\": [\n     {\n      \"text\": \"sed dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Excepteur eu\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 56600429.665496886,\n    \"safe_stock\": -76554787,\n    \"period_threshold\": 20240426,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"anim officia ipsum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute dolor est tempor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aute sit\",\n   \"alias\": \"et eiusmod ipsum adipisicing\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -5273251,\n   \"integration_data\": {},\n   \"company_name\": \"reprehenderit consectetur aute\",\n   \"task_details\": {\n    \"type\": -85053559,\n    \"group_list\": [\n     {\n      \"text\": \"eiusmod ipsum nostrud incididunt officia\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -18460396.06981024,\n    \"safe_stock\": 22723112,\n    \"period_threshold\": 45460478,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"eu aute cillum in reprehenderit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ex adipisicing officia\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aliqua Duis ullamco eiusmod\",\n   \"alias\": \"aliqua culpa incididunt consequat\"\n  },\n  {\n   \"company_id\": 57927487,\n   \"integration_data\": {},\n   \"company_name\": \"magna sed \",\n   \"task_details\": {\n    \"type\": 65751292,\n    \"group_list\": [\n     {\n      \"text\": \"consectetur est elit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"officia proident cupidatat voluptate Ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 83652474.33931988,\n    \"safe_stock\": 45000894,\n    \"period_threshold\": -42063174,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolore Excepteur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"officia enim nisi sint\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"irure esse proident\",\n   \"alias\": \"elit fugiat aute\"\n  }\n ],\n \"trace_id\": \"non aute sed aliqu\",\n \"page\": {\n  \"type\": \"esse elit eiusmod in culpa\",\n  \"size\": 45288133,\n  \"current\": 82693372,\n  \"has_next\": true,\n  \"item_total\": 19397104,\n  \"next_id\": \"consequat ex mollit irure\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1aee095a-5dfe-4421-9f8b-c9e34c3cbf80",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1994-07-21T22:57:42.109Z\",\n \"status\": 1451256,\n \"error\": \"cillum non\",\n \"exception\": \"esse sint dolore\",\n \"message\": \"commodo proident veniam\",\n \"total_time_taken_in_millis\": 22827857,\n \"http_status\": \"300 MULTIPLE_CHOICES\",\n \"items\": [\n  {\n   \"company_id\": -75256263,\n   \"integration_data\": {},\n   \"company_name\": \"Lorem nulla\",\n   \"task_details\": {\n    \"type\": 54473678,\n    \"group_list\": [\n     {\n      \"text\": \"aliquip aliqua\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laboris mollit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 36554886.4938252,\n    \"safe_stock\": 58750809,\n    \"period_threshold\": -42655241,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"culpa pariatur dolor aute\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"deserunt et reprehenderit pariatur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ad amet fugiat ut\",\n   \"alias\": \"officia ex quis ullamco pariatur\"\n  },\n  {\n   \"company_id\": -25295217,\n   \"integration_data\": {},\n   \"company_name\": \"ad sint\",\n   \"task_details\": {\n    \"type\": -42345471,\n    \"group_list\": [\n     {\n      \"text\": \"sed dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Excepteur eu\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 56600429.665496886,\n    \"safe_stock\": -76554787,\n    \"period_threshold\": 20240426,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"anim officia ipsum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute dolor est tempor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aute sit\",\n   \"alias\": \"et eiusmod ipsum adipisicing\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -5273251,\n   \"integration_data\": {},\n   \"company_name\": \"reprehenderit consectetur aute\",\n   \"task_details\": {\n    \"type\": -85053559,\n    \"group_list\": [\n     {\n      \"text\": \"eiusmod ipsum nostrud incididunt officia\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -18460396.06981024,\n    \"safe_stock\": 22723112,\n    \"period_threshold\": 45460478,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"eu aute cillum in reprehenderit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ex adipisicing officia\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aliqua Duis ullamco eiusmod\",\n   \"alias\": \"aliqua culpa incididunt consequat\"\n  },\n  {\n   \"company_id\": 57927487,\n   \"integration_data\": {},\n   \"company_name\": \"magna sed \",\n   \"task_details\": {\n    \"type\": 65751292,\n    \"group_list\": [\n     {\n      \"text\": \"consectetur est elit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"officia proident cupidatat voluptate Ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 83652474.33931988,\n    \"safe_stock\": 45000894,\n    \"period_threshold\": -42063174,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolore Excepteur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"officia enim nisi sint\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"irure esse proident\",\n   \"alias\": \"elit fugiat aute\"\n  }\n ],\n \"trace_id\": \"non aute sed aliqu\",\n \"page\": {\n  \"type\": \"esse elit eiusmod in culpa\",\n  \"size\": 45288133,\n  \"current\": 82693372,\n  \"has_next\": true,\n  \"item_total\": 19397104,\n  \"next_id\": \"consequat ex mollit irure\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "f3167eeb-89a6-422b-b61a-b5e8626a0a4c",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "8190c536-e166-44bf-9071-276060f89730",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1965-03-21T12:52:32.908Z\",\n \"status\": -18222665,\n \"error\": \"tempor deserunt\",\n \"exception\": \"cillum\",\n \"message\": \"tempor voluptate adipisicing exercitation\",\n \"total_time_taken_in_millis\": 19914238,\n \"http_status\": \"403 FORBIDDEN\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"magna adipisicing sint\",\n \"page\": {\n  \"type\": \"ut commodo\",\n  \"size\": 77014771,\n  \"current\": -47234228,\n  \"has_next\": false,\n  \"item_total\": 90178971,\n  \"next_id\": \"sed deserunt\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "dc04f383-841a-4d0a-9299-f6797074742c",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1965-03-21T12:52:32.908Z\",\n \"status\": -18222665,\n \"error\": \"tempor deserunt\",\n \"exception\": \"cillum\",\n \"message\": \"tempor voluptate adipisicing exercitation\",\n \"total_time_taken_in_millis\": 19914238,\n \"http_status\": \"403 FORBIDDEN\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"magna adipisicing sint\",\n \"page\": {\n  \"type\": \"ut commodo\",\n  \"size\": 77014771,\n  \"current\": -47234228,\n  \"has_next\": false,\n  \"item_total\": 90178971,\n  \"next_id\": \"sed deserunt\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e5a6daa4-5b29-4c77-9fc7-99d41217c82e",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1965-03-21T12:52:32.908Z\",\n \"status\": -18222665,\n \"error\": \"tempor deserunt\",\n \"exception\": \"cillum\",\n \"message\": \"tempor voluptate adipisicing exercitation\",\n \"total_time_taken_in_millis\": 19914238,\n \"http_status\": \"403 FORBIDDEN\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"magna adipisicing sint\",\n \"page\": {\n  \"type\": \"ut commodo\",\n  \"size\": 77014771,\n  \"current\": -47234228,\n  \"has_next\": false,\n  \"item_total\": 90178971,\n  \"next_id\": \"sed deserunt\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "fb4a3262-9f7f-4a46-8c0f-d1c9e95e0a6c",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "4f51f65c-0ef0-4b5e-8dd5-4f7bfcbf9944",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1968-01-13T18:02:53.655Z\",\n \"status\": -62436816,\n \"error\": \"veniam occaecat dolor cillum\",\n \"exception\": \"enim ut\",\n \"message\": \"veniam m\",\n \"total_time_taken_in_millis\": -19203546,\n \"http_status\": \"428 PRECONDITION_REQUIRED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ad consequat minim\",\n \"page\": {\n  \"type\": \"in\",\n  \"size\": 33343942,\n  \"current\": 55115832,\n  \"has_next\": false,\n  \"item_total\": 42418557,\n  \"next_id\": \"Ut ut laboris nostrud\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2a6b31ec-4fdd-4564-84fa-90edb2eb6b9e",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1968-01-13T18:02:53.655Z\",\n \"status\": -62436816,\n \"error\": \"veniam occaecat dolor cillum\",\n \"exception\": \"enim ut\",\n \"message\": \"veniam m\",\n \"total_time_taken_in_millis\": -19203546,\n \"http_status\": \"428 PRECONDITION_REQUIRED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ad consequat minim\",\n \"page\": {\n  \"type\": \"in\",\n  \"size\": 33343942,\n  \"current\": 55115832,\n  \"has_next\": false,\n  \"item_total\": 42418557,\n  \"next_id\": \"Ut ut laboris nostrud\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3df0f405-8c77-4f3b-b71b-b722b017c609",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1968-01-13T18:02:53.655Z\",\n \"status\": -62436816,\n \"error\": \"veniam occaecat dolor cillum\",\n \"exception\": \"enim ut\",\n \"message\": \"veniam m\",\n \"total_time_taken_in_millis\": -19203546,\n \"http_status\": \"428 PRECONDITION_REQUIRED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ad consequat minim\",\n \"page\": {\n  \"type\": \"in\",\n  \"size\": 33343942,\n  \"current\": 55115832,\n  \"has_next\": false,\n  \"item_total\": 42418557,\n  \"next_id\": \"Ut ut laboris nostrud\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "26fa6998-20fd-4ae1-8061-8147b6c55664",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1968-01-13T18:02:53.655Z\",\n \"status\": -62436816,\n \"error\": \"veniam occaecat dolor cillum\",\n \"exception\": \"enim ut\",\n \"message\": \"veniam m\",\n \"total_time_taken_in_millis\": -19203546,\n \"http_status\": \"428 PRECONDITION_REQUIRED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ad consequat minim\",\n \"page\": {\n  \"type\": \"in\",\n  \"size\": 33343942,\n  \"current\": 55115832,\n  \"has_next\": false,\n  \"item_total\": 42418557,\n  \"next_id\": \"Ut ut laboris nostrud\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "872cad3b-6e45-4f7f-b3e9-6329c1b62c8c",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1968-01-13T18:02:53.655Z\",\n \"status\": -62436816,\n \"error\": \"veniam occaecat dolor cillum\",\n \"exception\": \"enim ut\",\n \"message\": \"veniam m\",\n \"total_time_taken_in_millis\": -19203546,\n \"http_status\": \"428 PRECONDITION_REQUIRED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ad consequat minim\",\n \"page\": {\n  \"type\": \"in\",\n  \"size\": 33343942,\n  \"current\": 55115832,\n  \"has_next\": false,\n  \"item_total\": 42418557,\n  \"next_id\": \"Ut ut laboris nostrud\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx0.de"
    }
  ],
  "info": {
    "_postman_id": "8cde1a75-3307-46d0-960a-02b07fe8e6b0",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
