{
  "item": [
    {
      "id": "ea5d2848-d7f6-493d-aa37-af529a0e05ac",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "2fea84d1-4510-4eed-8c03-509ea0899d39",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "8cb9db4d-ec90-4846-bfef-d19211540ed3",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "ea",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"application\": {\n    \"website\": {\n      \"enabled\": true,\n      \"basepath\": \"/\"\n    },\n    \"cors\": {\n      \"domains\": []\n    },\n    \"auth\": {\n      \"enabled\": true\n    },\n    \"description\": \"test\",\n    \"channel_type\": \"store\",\n    \"cache_ttl\": -1,\n    \"internal\": false,\n    \"is_active\": true,\n    \"mode\": \"live\",\n    \"_id\": \"620b931ee7bfb11f910bf4a3\",\n    \"company_id\": 2,\n    \"name\": \"test\",\n    \"owner\": \"5b9b98150df588546aaea6d2\",\n    \"logo\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"favicon\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"banner\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n    },\n    \"token\": \"tPQv0nc23\",\n    \"tokens\": [\n      {\n        \"token\": \"tPQv0nc23\",\n        \"created_at\": \"2022-02-15T11:48:46.909Z\"\n      }\n    ],\n    \"domains\": [\n      {\n        \"verified\": true,\n        \"is_primary\": true,\n        \"is_shortlink\": true,\n        \"_id\": \"620b931ee7bfb11f910bf4a4\",\n        \"name\": \"qckvv5lhp.hostfynd.dev\"\n      }\n    ],\n    \"redirections\": [],\n    \"meta\": [],\n    \"created_at\": \"2022-02-15T11:48:46.909Z\",\n    \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n    \"__v\": 0,\n    \"domain\": {\n      \"verified\": true,\n      \"is_primary\": true,\n      \"is_shortlink\": true,\n      \"_id\": \"620b931ee7bfb11f910bf4a4\",\n      \"name\": \"qckvv5lhp.hostfynd.dev\"\n    },\n    \"id\": \"620b931ee7bfb11f910bf4a3\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "7641aafd-925b-4bb0-9997-6f4aaec07d31",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "ea",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"Invalid application domain or id.\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1cbae49e-3e44-4f03-b16a-1f9c89f6cbe1",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "ea",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"No application found\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "aa08fc88-f737-4f15-8da5-5b123a945e29",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "586ad17a-6e72-411e-b4c2-47bf10f0ea92",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "5c4206cd-9a4c-4b83-91d6-016475f3362e",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "69c1b339-8d28-44e2-96f7-0666f7f20516",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "5038567d-a995-4c45-8fe9-ce54d36ac8bb",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1976-02-13T00:14:12.838Z\",\n  \"status\": 64232033,\n  \"error\": \"in ex labore\",\n  \"exception\": \"sit\",\n  \"message\": \"sunt veniam dolor amet aliquip\",\n  \"total_time_taken_in_millis\": 28315630,\n  \"http_status\": \"302 MOVED_TEMPORARILY\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"ea minim culpa qui\",\n  \"page\": {\n    \"type\": \"in in dolore\",\n    \"item_total\": 12168860,\n    \"next_id\": \"deserunt est in in et\",\n    \"has_previous\": false,\n    \"has_next\": true,\n    \"current\": 61315685,\n    \"size\": -74198775\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a5fdcf23-8e7d-421a-97f3-476c89b02015",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1976-02-13T00:14:12.838Z\",\n  \"status\": 64232033,\n  \"error\": \"in ex labore\",\n  \"exception\": \"sit\",\n  \"message\": \"sunt veniam dolor amet aliquip\",\n  \"total_time_taken_in_millis\": 28315630,\n  \"http_status\": \"302 MOVED_TEMPORARILY\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"ea minim culpa qui\",\n  \"page\": {\n    \"type\": \"in in dolore\",\n    \"item_total\": 12168860,\n    \"next_id\": \"deserunt est in in et\",\n    \"has_previous\": false,\n    \"has_next\": true,\n    \"current\": 61315685,\n    \"size\": -74198775\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "67ad9c71-8f82-4dcf-a9dd-e26fcc142b2f",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1976-02-13T00:14:12.838Z\",\n  \"status\": 64232033,\n  \"error\": \"in ex labore\",\n  \"exception\": \"sit\",\n  \"message\": \"sunt veniam dolor amet aliquip\",\n  \"total_time_taken_in_millis\": 28315630,\n  \"http_status\": \"302 MOVED_TEMPORARILY\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"ea minim culpa qui\",\n  \"page\": {\n    \"type\": \"in in dolore\",\n    \"item_total\": 12168860,\n    \"next_id\": \"deserunt est in in et\",\n    \"has_previous\": false,\n    \"has_next\": true,\n    \"current\": 61315685,\n    \"size\": -74198775\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "4f4df5c5-94d4-49ae-a343-48ddd36ed6ce",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "d812691e-0a5a-49a8-aa80-8f0a77bfc4c9",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1965-12-07T10:35:11.130Z\",\n  \"status\": 72957894,\n  \"error\": \"in\",\n  \"exception\": \"dolor et\",\n  \"message\": \"officia\",\n  \"total_time_taken_in_millis\": 20822489,\n  \"http_status\": \"420 METHOD_FAILURE\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"esse laborum ullamco quis\",\n  \"page\": {\n    \"type\": \"aute in nisi aliquip se\",\n    \"item_total\": -17164792,\n    \"next_id\": \"sunt tempor officia\",\n    \"has_previous\": false,\n    \"has_next\": true,\n    \"current\": -53643155,\n    \"size\": -14345236\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "977feb17-bc3d-4bb7-b8eb-4a13581d182e",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1965-12-07T10:35:11.130Z\",\n  \"status\": 72957894,\n  \"error\": \"in\",\n  \"exception\": \"dolor et\",\n  \"message\": \"officia\",\n  \"total_time_taken_in_millis\": 20822489,\n  \"http_status\": \"420 METHOD_FAILURE\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"esse laborum ullamco quis\",\n  \"page\": {\n    \"type\": \"aute in nisi aliquip se\",\n    \"item_total\": -17164792,\n    \"next_id\": \"sunt tempor officia\",\n    \"has_previous\": false,\n    \"has_next\": true,\n    \"current\": -53643155,\n    \"size\": -14345236\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9a107822-d182-4a26-8f7b-12f21e65d487",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1965-12-07T10:35:11.130Z\",\n  \"status\": 72957894,\n  \"error\": \"in\",\n  \"exception\": \"dolor et\",\n  \"message\": \"officia\",\n  \"total_time_taken_in_millis\": 20822489,\n  \"http_status\": \"420 METHOD_FAILURE\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"esse laborum ullamco quis\",\n  \"page\": {\n    \"type\": \"aute in nisi aliquip se\",\n    \"item_total\": -17164792,\n    \"next_id\": \"sunt tempor officia\",\n    \"has_previous\": false,\n    \"has_next\": true,\n    \"current\": -53643155,\n    \"size\": -14345236\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f2c8843f-0c48-4ae9-9e62-8449eb5d8b3e",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1965-12-07T10:35:11.130Z\",\n  \"status\": 72957894,\n  \"error\": \"in\",\n  \"exception\": \"dolor et\",\n  \"message\": \"officia\",\n  \"total_time_taken_in_millis\": 20822489,\n  \"http_status\": \"420 METHOD_FAILURE\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"esse laborum ullamco quis\",\n  \"page\": {\n    \"type\": \"aute in nisi aliquip se\",\n    \"item_total\": -17164792,\n    \"next_id\": \"sunt tempor officia\",\n    \"has_previous\": false,\n    \"has_next\": true,\n    \"current\": -53643155,\n    \"size\": -14345236\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "46031fb7-b9d2-4eaf-b654-459493c2457b",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1965-12-07T10:35:11.130Z\",\n  \"status\": 72957894,\n  \"error\": \"in\",\n  \"exception\": \"dolor et\",\n  \"message\": \"officia\",\n  \"total_time_taken_in_millis\": 20822489,\n  \"http_status\": \"420 METHOD_FAILURE\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"esse laborum ullamco quis\",\n  \"page\": {\n    \"type\": \"aute in nisi aliquip se\",\n    \"item_total\": -17164792,\n    \"next_id\": \"sunt tempor officia\",\n    \"has_previous\": false,\n    \"has_next\": true,\n    \"current\": -53643155,\n    \"size\": -14345236\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "244624b3-50a6-496f-9a22-add4f6261683",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "a4efb379-1208-4e67-a355-c65159a071aa",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2005-05-02T15:56:08.645Z\",\n  \"status\": -79976980,\n  \"error\": \"oc\",\n  \"exception\": \"nulla consectetur nostrud in\",\n  \"message\": \"anim sed\",\n  \"total_time_taken_in_millis\": -42921519,\n  \"http_status\": \"302 MOVED_TEMPORARILY\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"pariatur aliqua esse\",\n      \"description\": \"anim in\",\n      \"name\": \"veniam o\",\n      \"slug\": \"sit veniam non\",\n      \"meta\": [\n        {\n          \"_id\": \"cupidatat et laborum qui\",\n          \"name\": \"ex laborum ad\",\n          \"value\": \"in dolor ut elit\"\n        },\n        {\n          \"_id\": \"dolor laborum commodo\",\n          \"name\": \"dolore tempor aliquip id\",\n          \"value\": \"magna sit exercitation ea laborum\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"laborum do qui occaecat\",\n        \"integration\": \"in velit\",\n        \"level\": \"minim exercitation incididunt\",\n        \"uid\": 87620288,\n        \"opted\": true,\n        \"permissions\": [\n          \"aute exercitation fugiat nostrud\",\n          \"amet ad officia cillum cupidatat\"\n        ],\n        \"token\": \"ea non\",\n        \"name\": \"aute Duis ut voluptate proident\",\n        \"stores\": [\n          {\n            \"_id\": \"consequat\",\n            \"integration\": \"culpa\",\n            \"level\": \"ut cillum\",\n            \"uid\": -84043822,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"dolore voluptate laborum\",\n            \"code\": \"id consectetur\",\n            \"name\": \"in\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"dolor tempor id dolor ut\",\n            \"integration\": \"occaecat\",\n            \"level\": \"do consequat Excepteur ullamco\",\n            \"uid\": 69491768,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"Excepteur fugiat\",\n            \"code\": \"Duis in ut\",\n            \"name\": \"aute ex id irure eu\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"Lorem consectetur Ut in culpa\",\n        \"integration\": \"id do irure\",\n        \"level\": \"aliqua Excepteur est do\",\n        \"uid\": 69378405,\n        \"opted\": true,\n        \"permissions\": [\n          \"do fugiat\",\n          \"magna elit\"\n        ],\n        \"token\": \"proident laboris\",\n        \"name\": \"eu consectetur occaecat sint\",\n        \"stores\": [\n          {\n            \"_id\": \"consectetur pariatur reprehenderit v\",\n            \"integration\": \"cillum Ut\",\n            \"level\": \"eu ea\",\n            \"uid\": -31174757,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"dolo\",\n            \"code\": \"in dolor consequat nisi ea\",\n            \"name\": \"Duis magna aliqua non\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"aliquip laborum nulla ad\",\n            \"integration\": \"labore occaecat veniam cupidatat quis\",\n            \"level\": \"des\",\n            \"uid\": 70817010,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"qui veniam dolore\",\n            \"code\": \"non\",\n            \"name\": \"quis commodo\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"enim Duis\",\n      \"description\": \"occaecat adipisicing\",\n      \"name\": \"consequat amet commodo\",\n      \"slug\": \"enim deserunt ipsum\",\n      \"meta\": [\n        {\n          \"_id\": \"sed proident mollit voluptate\",\n          \"name\": \"Lorem eiusmod\",\n          \"value\": \"reprehenderit labore officia\"\n        },\n        {\n          \"_id\": \"nisi sit\",\n          \"name\": \"Duis nisi adipisicing\",\n          \"value\": \"fugiat culpa\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"ad incididunt et\",\n        \"integration\": \"ut sit quis est\",\n        \"level\": \"dolore officia non\",\n        \"uid\": 99962275,\n        \"opted\": false,\n        \"permissions\": [\n          \"sunt sit consequat enim\",\n          \"dolore ex in\"\n        ],\n        \"token\": \"fugiat\",\n        \"name\": \"dolore reprehenderit culpa in\",\n        \"stores\": [\n          {\n            \"_id\": \"in do\",\n            \"integration\": \"irure nisi in\",\n            \"level\": \"id Excepteur Lorem\",\n            \"uid\": 87209032,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"Excepteur elit Ut\",\n            \"code\": \"laboris in incididunt\",\n            \"name\": \"quis \",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"nulla in officia\",\n            \"integration\": \"do occaecat ut\",\n            \"level\": \"quis\",\n            \"uid\": -85865476,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"reprehenderit sed in\",\n            \"code\": \"esse Duis dolore\",\n            \"name\": \"do fugiat\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"in laboris sed ut ame\",\n        \"integration\": \"magna ullamco in\",\n        \"level\": \"co\",\n        \"uid\": 37750018,\n        \"opted\": false,\n        \"permissions\": [\n          \"deserunt magna\",\n          \"ullamco incididunt\"\n        ],\n        \"token\": \"Ut amet dolor consectetur\",\n        \"name\": \"ipsum\",\n        \"stores\": [\n          {\n            \"_id\": \"consectetur enim\",\n            \"integration\": \"et laboris ex consectetur\",\n            \"level\": \"tempor elit exercitation\",\n            \"uid\": 11117906,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"dolor adipisicing\",\n            \"code\": \"aliqua reprehenderit deserunt\",\n            \"name\": \"Excepteur ex\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"laborum incididunt proident\",\n            \"integration\": \"voluptate ut\",\n            \"level\": \"ut dolor\",\n            \"uid\": -82294778,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"officia in pariat\",\n            \"code\": \"labore\",\n            \"name\": \"in ipsum minim\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"nisi dolore in occaecat\",\n  \"page\": {\n    \"type\": \"non\",\n    \"item_total\": 41406194,\n    \"next_id\": \"voluptate sunt\",\n    \"has_previous\": false,\n    \"has_next\": false,\n    \"current\": -62529163,\n    \"size\": -77166764\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "64a92611-6abf-4302-b2d3-85fbfaaf9249",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1979-09-15T06:30:00.943Z\",\n  \"status\": -68842312,\n  \"error\": \"aute sed sint fugiat culpa\",\n  \"exception\": \"tempor magna do et\",\n  \"message\": \"deserunt eu\",\n  \"total_time_taken_in_millis\": 25774722,\n  \"http_status\": \"511 NETWORK_AUTHENTICATION_REQUIRED\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"sit\",\n      \"description\": \"id incididunt Lorem\",\n      \"name\": \"tempor Lorem\",\n      \"slug\": \"dolore in aute sed\",\n      \"meta\": [\n        {\n          \"_id\": \"nisi dolore\",\n          \"name\": \"n\",\n          \"value\": \"ess\"\n        },\n        {\n          \"_id\": \"magna eiusmod nulla\",\n          \"name\": \"tempor dolore mollit\",\n          \"value\": \"ipsum aliquip\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"do fugiat culpa anim in\",\n        \"integration\": \"ut magna\",\n        \"level\": \"et dolor sit\",\n        \"uid\": 17868,\n        \"opted\": true,\n        \"permissions\": [\n          \"do pariatur dolore id\",\n          \"tempor quis ex do proident\"\n        ],\n        \"token\": \"consectetur ipsum aliqua velit aute\",\n        \"name\": \"ut ullamco Exc\",\n        \"stores\": [\n          {\n            \"_id\": \"elit\",\n            \"integration\": \"magna veniam dolore deserunt\",\n            \"level\": \"non qui\",\n            \"uid\": 28113883,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"culpa laborum commodo\",\n            \"code\": \"nulla velit fugiat officia\",\n            \"name\": \"aliqua ipsum cillum culpa\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"id officia dolore\",\n            \"integration\": \"pariatur\",\n            \"level\": \"aliquip eu do\",\n            \"uid\": 88520271,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"reprehenderit ut id\",\n            \"code\": \"aute incididunt reprehenderit Lorem\",\n            \"name\": \"pariatur amet laborum\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"ut sit proiden\",\n        \"integration\": \"aliqua Ut\",\n        \"level\": \"in fugiat dolor ad\",\n        \"uid\": 84789148,\n        \"opted\": false,\n        \"permissions\": [\n          \"dolor dol\",\n          \"in i\"\n        ],\n        \"token\": \"tempor\",\n        \"name\": \"dolore\",\n        \"stores\": [\n          {\n            \"_id\": \"occaecat sint cillum quis\",\n            \"integration\": \"do reprehenderit\",\n            \"level\": \"cillum et ad voluptate\",\n            \"uid\": -17343747,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"anim sed est\",\n            \"code\": \"Lorem ex ut\",\n            \"name\": \"quis ut eiusmod\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"laborum esse anim\",\n            \"integration\": \"do \",\n            \"level\": \"cillum ea in reprehenderit incid\",\n            \"uid\": -66717703,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"sint dolore sit\",\n            \"code\": \"commodo in ipsum\",\n            \"name\": \"nulla ex\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"officia nisi\",\n      \"description\": \"incididunt deserunt aute dolor\",\n      \"name\": \"reprehenderit nisi officia\",\n      \"slug\": \"laborum ad aute exercitation\",\n      \"meta\": [\n        {\n          \"_id\": \"anim culpa deserunt\",\n          \"name\": \"consectetur ea ad aliquip eu\",\n          \"value\": \"minim irure\"\n        },\n        {\n          \"_id\": \"nostrud fugiat\",\n          \"name\": \"amet enim\",\n          \"value\": \"sint cupidatat irure voluptate consequat\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"tempor pariatur\",\n        \"integration\": \"nisi exercitation anim\",\n        \"level\": \"ex qui\",\n        \"uid\": 48376785,\n        \"opted\": true,\n        \"permissions\": [\n          \"cillum tempor\",\n          \"cillum voluptate adipisicing\"\n        ],\n        \"token\": \"voluptate minim non deserunt incididunt\",\n        \"name\": \"labo\",\n        \"stores\": [\n          {\n            \"_id\": \"Duis\",\n            \"integration\": \"cupidatat et quis cillum ex\",\n            \"level\": \"voluptate\",\n            \"uid\": -75663515,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"irure culpa ex sint tempor\",\n            \"code\": \"veniam\",\n            \"name\": \"occaecat minim cillum\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"quis nulla laborum\",\n            \"integration\": \"eiusmod ea mollit\",\n            \"level\": \"cupidatat occaecat reprehenderit amet nisi\",\n            \"uid\": 12318580,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"amet laboris eiusmod\",\n            \"code\": \"magna est proident\",\n            \"name\": \"id laboris\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"dolore\",\n        \"integration\": \"veniam proident\",\n        \"level\": \"sunt \",\n        \"uid\": 67324520,\n        \"opted\": false,\n        \"permissions\": [\n          \"adipisicing ipsum in\",\n          \"magna velit Ut\"\n        ],\n        \"token\": \"nostrud qui in mollit\",\n        \"name\": \"Duis ea cupidatat dolor\",\n        \"stores\": [\n          {\n            \"_id\": \"sint dolor esse\",\n            \"integration\": \"aute dolore in\",\n            \"level\": \"Ut tempor qui\",\n            \"uid\": -61276506,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"culpa non\",\n            \"code\": \"culpa ut pariatur sunt\",\n            \"name\": \"sint consectetur laborum cillum anim\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"non fugiat\",\n            \"integration\": \"culpa dolor elit\",\n            \"level\": \"nulla enim aute amet\",\n            \"uid\": 45106,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"Duis fugiat\",\n            \"code\": \"aliquip quis Lorem eiusmod in\",\n            \"name\": \"esse\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"consequat consectetur reprehenderit\",\n  \"page\": {\n    \"type\": \"proident irure quis nostrud\",\n    \"item_total\": -54589849,\n    \"next_id\": \"Excepteur cillum\",\n    \"has_previous\": false,\n    \"has_next\": true,\n    \"current\": -54482267,\n    \"size\": -40808482\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "49e40423-0a04-4edd-929a-a233e748bb87",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1979-09-15T06:30:00.943Z\",\n  \"status\": -68842312,\n  \"error\": \"aute sed sint fugiat culpa\",\n  \"exception\": \"tempor magna do et\",\n  \"message\": \"deserunt eu\",\n  \"total_time_taken_in_millis\": 25774722,\n  \"http_status\": \"511 NETWORK_AUTHENTICATION_REQUIRED\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"sit\",\n      \"description\": \"id incididunt Lorem\",\n      \"name\": \"tempor Lorem\",\n      \"slug\": \"dolore in aute sed\",\n      \"meta\": [\n        {\n          \"_id\": \"nisi dolore\",\n          \"name\": \"n\",\n          \"value\": \"ess\"\n        },\n        {\n          \"_id\": \"magna eiusmod nulla\",\n          \"name\": \"tempor dolore mollit\",\n          \"value\": \"ipsum aliquip\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"do fugiat culpa anim in\",\n        \"integration\": \"ut magna\",\n        \"level\": \"et dolor sit\",\n        \"uid\": 17868,\n        \"opted\": true,\n        \"permissions\": [\n          \"do pariatur dolore id\",\n          \"tempor quis ex do proident\"\n        ],\n        \"token\": \"consectetur ipsum aliqua velit aute\",\n        \"name\": \"ut ullamco Exc\",\n        \"stores\": [\n          {\n            \"_id\": \"elit\",\n            \"integration\": \"magna veniam dolore deserunt\",\n            \"level\": \"non qui\",\n            \"uid\": 28113883,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"culpa laborum commodo\",\n            \"code\": \"nulla velit fugiat officia\",\n            \"name\": \"aliqua ipsum cillum culpa\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"id officia dolore\",\n            \"integration\": \"pariatur\",\n            \"level\": \"aliquip eu do\",\n            \"uid\": 88520271,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"reprehenderit ut id\",\n            \"code\": \"aute incididunt reprehenderit Lorem\",\n            \"name\": \"pariatur amet laborum\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"ut sit proiden\",\n        \"integration\": \"aliqua Ut\",\n        \"level\": \"in fugiat dolor ad\",\n        \"uid\": 84789148,\n        \"opted\": false,\n        \"permissions\": [\n          \"dolor dol\",\n          \"in i\"\n        ],\n        \"token\": \"tempor\",\n        \"name\": \"dolore\",\n        \"stores\": [\n          {\n            \"_id\": \"occaecat sint cillum quis\",\n            \"integration\": \"do reprehenderit\",\n            \"level\": \"cillum et ad voluptate\",\n            \"uid\": -17343747,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"anim sed est\",\n            \"code\": \"Lorem ex ut\",\n            \"name\": \"quis ut eiusmod\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"laborum esse anim\",\n            \"integration\": \"do \",\n            \"level\": \"cillum ea in reprehenderit incid\",\n            \"uid\": -66717703,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"sint dolore sit\",\n            \"code\": \"commodo in ipsum\",\n            \"name\": \"nulla ex\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"officia nisi\",\n      \"description\": \"incididunt deserunt aute dolor\",\n      \"name\": \"reprehenderit nisi officia\",\n      \"slug\": \"laborum ad aute exercitation\",\n      \"meta\": [\n        {\n          \"_id\": \"anim culpa deserunt\",\n          \"name\": \"consectetur ea ad aliquip eu\",\n          \"value\": \"minim irure\"\n        },\n        {\n          \"_id\": \"nostrud fugiat\",\n          \"name\": \"amet enim\",\n          \"value\": \"sint cupidatat irure voluptate consequat\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"tempor pariatur\",\n        \"integration\": \"nisi exercitation anim\",\n        \"level\": \"ex qui\",\n        \"uid\": 48376785,\n        \"opted\": true,\n        \"permissions\": [\n          \"cillum tempor\",\n          \"cillum voluptate adipisicing\"\n        ],\n        \"token\": \"voluptate minim non deserunt incididunt\",\n        \"name\": \"labo\",\n        \"stores\": [\n          {\n            \"_id\": \"Duis\",\n            \"integration\": \"cupidatat et quis cillum ex\",\n            \"level\": \"voluptate\",\n            \"uid\": -75663515,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"irure culpa ex sint tempor\",\n            \"code\": \"veniam\",\n            \"name\": \"occaecat minim cillum\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"quis nulla laborum\",\n            \"integration\": \"eiusmod ea mollit\",\n            \"level\": \"cupidatat occaecat reprehenderit amet nisi\",\n            \"uid\": 12318580,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"amet laboris eiusmod\",\n            \"code\": \"magna est proident\",\n            \"name\": \"id laboris\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"dolore\",\n        \"integration\": \"veniam proident\",\n        \"level\": \"sunt \",\n        \"uid\": 67324520,\n        \"opted\": false,\n        \"permissions\": [\n          \"adipisicing ipsum in\",\n          \"magna velit Ut\"\n        ],\n        \"token\": \"nostrud qui in mollit\",\n        \"name\": \"Duis ea cupidatat dolor\",\n        \"stores\": [\n          {\n            \"_id\": \"sint dolor esse\",\n            \"integration\": \"aute dolore in\",\n            \"level\": \"Ut tempor qui\",\n            \"uid\": -61276506,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"culpa non\",\n            \"code\": \"culpa ut pariatur sunt\",\n            \"name\": \"sint consectetur laborum cillum anim\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"non fugiat\",\n            \"integration\": \"culpa dolor elit\",\n            \"level\": \"nulla enim aute amet\",\n            \"uid\": 45106,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"Duis fugiat\",\n            \"code\": \"aliquip quis Lorem eiusmod in\",\n            \"name\": \"esse\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"consequat consectetur reprehenderit\",\n  \"page\": {\n    \"type\": \"proident irure quis nostrud\",\n    \"item_total\": -54589849,\n    \"next_id\": \"Excepteur cillum\",\n    \"has_previous\": false,\n    \"has_next\": true,\n    \"current\": -54482267,\n    \"size\": -40808482\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b3b99433-7bdc-4950-b9a4-7c5495891a38",
          "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
          "request": {
            "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "929b48b5-0663-4ec0-834d-678407b0d298",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1958-06-21T04:08:56.121Z\",\n  \"status\": 17424696,\n  \"error\": \"cillum aliqua\",\n  \"exception\": \"t\",\n  \"message\": \"aliqua ipsum ut\",\n  \"total_time_taken_in_millis\": 66804193,\n  \"http_status\": \"208 ALREADY_REPORTED\",\n  \"items\": {\n    \"session_id\": \"enim tempor\",\n    \"error_message\": \"laborum\"\n  },\n  \"payload\": {\n    \"session_id\": \"sit tempor labore\",\n    \"error_message\": \"est\"\n  },\n  \"trace_id\": \"sunt aute consectetur nisi\",\n  \"page\": {\n    \"type\": \"nostrud amet pariatur cup\",\n    \"item_total\": 11830358,\n    \"next_id\": \"pariatur adipisi\",\n    \"has_previous\": false,\n    \"has_next\": false,\n    \"current\": -38385938,\n    \"size\": 52534981\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5b03ff9c-ff79-4dee-afde-b4bcb0c83315",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1958-06-21T04:08:56.121Z\",\n  \"status\": 17424696,\n  \"error\": \"cillum aliqua\",\n  \"exception\": \"t\",\n  \"message\": \"aliqua ipsum ut\",\n  \"total_time_taken_in_millis\": 66804193,\n  \"http_status\": \"208 ALREADY_REPORTED\",\n  \"items\": {\n    \"session_id\": \"enim tempor\",\n    \"error_message\": \"laborum\"\n  },\n  \"payload\": {\n    \"session_id\": \"sit tempor labore\",\n    \"error_message\": \"est\"\n  },\n  \"trace_id\": \"sunt aute consectetur nisi\",\n  \"page\": {\n    \"type\": \"nostrud amet pariatur cup\",\n    \"item_total\": 11830358,\n    \"next_id\": \"pariatur adipisi\",\n    \"has_previous\": false,\n    \"has_next\": false,\n    \"current\": -38385938,\n    \"size\": 52534981\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "85524267-e434-4ed6-9e3b-df61ce97c7c3",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1958-06-21T04:08:56.121Z\",\n  \"status\": 17424696,\n  \"error\": \"cillum aliqua\",\n  \"exception\": \"t\",\n  \"message\": \"aliqua ipsum ut\",\n  \"total_time_taken_in_millis\": 66804193,\n  \"http_status\": \"208 ALREADY_REPORTED\",\n  \"items\": {\n    \"session_id\": \"enim tempor\",\n    \"error_message\": \"laborum\"\n  },\n  \"payload\": {\n    \"session_id\": \"sit tempor labore\",\n    \"error_message\": \"est\"\n  },\n  \"trace_id\": \"sunt aute consectetur nisi\",\n  \"page\": {\n    \"type\": \"nostrud amet pariatur cup\",\n    \"item_total\": 11830358,\n    \"next_id\": \"pariatur adipisi\",\n    \"has_previous\": false,\n    \"has_next\": false,\n    \"current\": -38385938,\n    \"size\": 52534981\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "02c2d045-53a4-430f-a5e5-2a72d1c4994e",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "1a301711-cf1c-4b95-bf4d-b6ed651e07a7",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1946-01-23T15:51:49.800Z\",\n  \"status\": 26780687,\n  \"error\": \"aliquip\",\n  \"exception\": \"minim laboris dolore\",\n  \"message\": \"ea sed laboris aliquip\",\n  \"total_time_taken_in_millis\": -53945600,\n  \"http_status\": \"302 MOVED_TEMPORARILY\",\n  \"items\": {\n    \"company_id\": -24901322,\n    \"integration_data\": {\n      \"deserunt501\": {}\n    },\n    \"company_name\": \"cupidatat consequat nostrud irure\",\n    \"task_details\": {\n      \"type\": 13865130,\n      \"group_list\": [\n        {\n          \"text\": \"velit anim consequat amet\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"nostrud magna adipisicing dolor\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 40430542.57222965,\n      \"safe_stock\": -53058196,\n      \"period_threshold\": -7175646,\n      \"period_threshold_type\": \"DAYS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"ipsum laboris enim laborum amet\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"irure\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"ipsum aliquip ex\",\n    \"alias\": \"et sit Excepteur\"\n  },\n  \"payload\": {\n    \"company_id\": 48009935,\n    \"integration_data\": {\n      \"commodo_d\": {}\n    },\n    \"company_name\": \"eli\",\n    \"task_details\": {\n      \"type\": -59311068,\n      \"group_list\": [\n        {\n          \"text\": \"mollit dolor magna\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"dolor in labore\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -3139626.527761847,\n      \"safe_stock\": -88414752,\n      \"period_threshold\": -85085131,\n      \"period_threshold_type\": \"DAYS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"ea\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"consectetur dolor\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"aliquip eu ullamco sed sunt\",\n    \"alias\": \"non eu qui\"\n  },\n  \"trace_id\": \"Ut dolor\",\n  \"page\": {\n    \"type\": \"est eiusmod quis exercitation\",\n    \"item_total\": 11155877,\n    \"next_id\": \"sint \",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": -97104839,\n    \"size\": 78673007\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "8125abf9-1bb4-4dea-8984-b517c1079886",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1967-08-27T22:06:19.649Z\",\n  \"status\": -10879195,\n  \"error\": \"enim reprehenderit quis sed\",\n  \"exception\": \"commodo\",\n  \"message\": \"in commodo labore\",\n  \"total_time_taken_in_millis\": -75825065,\n  \"http_status\": \"205 RESET_CONTENT\",\n  \"items\": {\n    \"company_id\": -342081,\n    \"integration_data\": {\n      \"dolore_3f\": {}\n    },\n    \"company_name\": \"voluptate do\",\n    \"task_details\": {\n      \"type\": -81247765,\n      \"group_list\": [\n        {\n          \"text\": \"mollit ut\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"enim laboris\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 45659315.94269678,\n      \"safe_stock\": -6528498,\n      \"period_threshold\": -63840199,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"nulla cons\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"elit amet nisi pariatur\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"elit culpa\",\n    \"alias\": \"in anim Lorem dese\"\n  },\n  \"payload\": {\n    \"company_id\": -11664871,\n    \"integration_data\": {\n      \"eiusmod016\": {}\n    },\n    \"company_name\": \"consequat voluptate cillum\",\n    \"task_details\": {\n      \"type\": 14579611,\n      \"group_list\": [\n        {\n          \"text\": \"dolor sed ulla\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"non\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 53770471.950930774,\n      \"safe_stock\": -37497410,\n      \"period_threshold\": -75948049,\n      \"period_threshold_type\": \"DAYS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"reprehenderit Excepteur id\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"in ullamco laboris\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"exercitation nostrud nisi\",\n    \"alias\": \"eiusmod quis\"\n  },\n  \"trace_id\": \"incididunt tempor nulla\",\n  \"page\": {\n    \"type\": \"adipisicing laborum aliqua\",\n    \"item_total\": 452891,\n    \"next_id\": \"sed nisi\",\n    \"has_previous\": true,\n    \"has_next\": true,\n    \"current\": 96693761,\n    \"size\": -3641961\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "33707551-b9e3-4852-a29a-8e370e8b576a",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1967-08-27T22:06:19.649Z\",\n  \"status\": -10879195,\n  \"error\": \"enim reprehenderit quis sed\",\n  \"exception\": \"commodo\",\n  \"message\": \"in commodo labore\",\n  \"total_time_taken_in_millis\": -75825065,\n  \"http_status\": \"205 RESET_CONTENT\",\n  \"items\": {\n    \"company_id\": -342081,\n    \"integration_data\": {\n      \"dolore_3f\": {}\n    },\n    \"company_name\": \"voluptate do\",\n    \"task_details\": {\n      \"type\": -81247765,\n      \"group_list\": [\n        {\n          \"text\": \"mollit ut\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"enim laboris\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 45659315.94269678,\n      \"safe_stock\": -6528498,\n      \"period_threshold\": -63840199,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"nulla cons\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"elit amet nisi pariatur\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"elit culpa\",\n    \"alias\": \"in anim Lorem dese\"\n  },\n  \"payload\": {\n    \"company_id\": -11664871,\n    \"integration_data\": {\n      \"eiusmod016\": {}\n    },\n    \"company_name\": \"consequat voluptate cillum\",\n    \"task_details\": {\n      \"type\": 14579611,\n      \"group_list\": [\n        {\n          \"text\": \"dolor sed ulla\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"non\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 53770471.950930774,\n      \"safe_stock\": -37497410,\n      \"period_threshold\": -75948049,\n      \"period_threshold_type\": \"DAYS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"reprehenderit Excepteur id\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"in ullamco laboris\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"exercitation nostrud nisi\",\n    \"alias\": \"eiusmod quis\"\n  },\n  \"trace_id\": \"incididunt tempor nulla\",\n  \"page\": {\n    \"type\": \"adipisicing laborum aliqua\",\n    \"item_total\": 452891,\n    \"next_id\": \"sed nisi\",\n    \"has_previous\": true,\n    \"has_next\": true,\n    \"current\": 96693761,\n    \"size\": -3641961\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "80764eaf-9b46-4718-af64-bf9a11941592",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "4e65e9dc-dede-4d9b-9252-f05506c7550f",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2003-12-11T01:43:43.596Z\",\n  \"status\": -73471929,\n  \"error\": \"dolore\",\n  \"exception\": \"adipisicing nulla eu\",\n  \"message\": \"fugiat laboris\",\n  \"total_time_taken_in_millis\": -8436707,\n  \"http_status\": \"506 VARIANT_ALSO_NEGOTIATES\",\n  \"items\": [\n    {\n      \"company_id\": -51654576,\n      \"integration_data\": {\n        \"occaecat874\": {},\n        \"labore_6\": {},\n        \"commodo__\": {},\n        \"mollit_e\": {}\n      },\n      \"company_name\": \"pariatur mollit et dolore\",\n      \"task_details\": {\n        \"type\": 78931314,\n        \"group_list\": [\n          {\n            \"text\": \"do\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"sunt ipsum quis ut ex\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 19370504.943277568,\n        \"safe_stock\": -95481521,\n        \"period_threshold\": -95423076,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"velit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"incididunt minim D\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"qui ullamco in\",\n      \"alias\": \"est qui\"\n    },\n    {\n      \"company_id\": -64403152,\n      \"integration_data\": {\n        \"esse_2\": {}\n      },\n      \"company_name\": \"in sunt ut sit\",\n      \"task_details\": {\n        \"type\": -94314494,\n        \"group_list\": [\n          {\n            \"text\": \"ex est Duis Lorem dolore\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"fugiat irure aliqua exercitation esse\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -84193701.93544942,\n        \"safe_stock\": 23670231,\n        \"period_threshold\": -64793910,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"culpa anim dolore\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"laboris nostrud minim\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"culpa fugiat\",\n      \"alias\": \"anim tempor mollit officia\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": 59330024,\n      \"integration_data\": {\n        \"fugiat38b\": {}\n      },\n      \"company_name\": \"ut ipsum esse enim\",\n      \"task_details\": {\n        \"type\": -63987621,\n        \"group_list\": [\n          {\n            \"text\": \"in Excepteur eiusmod nisi\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"tempor ullamco consectetur deserunt\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -61043047.40883841,\n        \"safe_stock\": 81704478,\n        \"period_threshold\": 2474180,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"voluptate\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"reprehenderit ea magna\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"sit anim quis\",\n      \"alias\": \"adipisicing dolor\"\n    },\n    {\n      \"company_id\": -65248206,\n      \"integration_data\": {\n        \"dolorec2_\": {},\n        \"qui1\": {}\n      },\n      \"company_name\": \"ullamco reprehenderit labore id\",\n      \"task_details\": {\n        \"type\": -87668410,\n        \"group_list\": [\n          {\n            \"text\": \"dolore culpa\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"commodo\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -85740428.72258736,\n        \"safe_stock\": -27431518,\n        \"period_threshold\": -10132954,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"ad quis\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"tem\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"e\",\n      \"alias\": \"laboris cillum pariatur et\"\n    }\n  ],\n  \"trace_id\": \"cupidatat fugiat ut\",\n  \"page\": {\n    \"type\": \"quis aliquip dolor voluptate\",\n    \"item_total\": -94530904,\n    \"next_id\": \"do\",\n    \"has_previous\": false,\n    \"has_next\": false,\n    \"current\": -76280325,\n    \"size\": -98492868\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c7317915-4922-41ca-89a4-f9535af547ee",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1977-08-01T10:49:34.622Z\",\n  \"status\": -1452805,\n  \"error\": \"anim\",\n  \"exception\": \"enim labore amet dolore in\",\n  \"message\": \"dolore\",\n  \"total_time_taken_in_millis\": -66270453,\n  \"http_status\": \"415 UNSUPPORTED_MEDIA_TYPE\",\n  \"items\": [\n    {\n      \"company_id\": -66794824,\n      \"integration_data\": {\n        \"laboris_454\": {}\n      },\n      \"company_name\": \"do minim dolore consequat\",\n      \"task_details\": {\n        \"type\": 67739408,\n        \"group_list\": [\n          {\n            \"text\": \"elit ea\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"nostrud non voluptate qui\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -77435971.85662492,\n        \"safe_stock\": -7698220,\n        \"period_threshold\": 21734266,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"ad sunt est\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"qui laborum pariatur aliqua dolor\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"officia\",\n      \"alias\": \"anim ea\"\n    },\n    {\n      \"company_id\": -46869241,\n      \"integration_data\": {\n        \"pariatur_445\": {}\n      },\n      \"company_name\": \"proident nulla\",\n      \"task_details\": {\n        \"type\": 13144906,\n        \"group_list\": [\n          {\n            \"text\": \"culpa et\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"eu esse tempor dolor\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -6176332.96453324,\n        \"safe_stock\": 3027557,\n        \"period_threshold\": -82990497,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"et adipisicing tempor nostrud ullamco\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"Excepte\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"dolor deserunt laborum\",\n      \"alias\": \"in\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": 57375530,\n      \"integration_data\": {\n        \"eiusmoddd9\": {}\n      },\n      \"company_name\": \"velit\",\n      \"task_details\": {\n        \"type\": 13019130,\n        \"group_list\": [\n          {\n            \"text\": \"dolor in\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"Duis ullamco in occaecat reprehenderit\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 85115069.47021598,\n        \"safe_stock\": 45584770,\n        \"period_threshold\": 13359192,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"est\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"sunt mollit nostrud\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"sint mollit adipisicing Duis ad\",\n      \"alias\": \"ipsum in\"\n    },\n    {\n      \"company_id\": -37623851,\n      \"integration_data\": {\n        \"cillum7b\": {},\n        \"pariatur_e9\": {},\n        \"dolord5\": {}\n      },\n      \"company_name\": \"enim aliquip tempor\",\n      \"task_details\": {\n        \"type\": 17556442,\n        \"group_list\": [\n          {\n            \"text\": \"aliquip aute consequat\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ipsum aliqua\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 66025110.8293224,\n        \"safe_stock\": 32179604,\n        \"period_threshold\": -99035642,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"minim\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"anim aute deserunt\",\n      \"alias\": \"est cupidatat enim do cul\"\n    }\n  ],\n  \"trace_id\": \"dolore Duis consectetur Ut voluptate\",\n  \"page\": {\n    \"type\": \"dolor elit dolore non\",\n    \"item_total\": -41369475,\n    \"next_id\": \"q\",\n    \"has_previous\": false,\n    \"has_next\": true,\n    \"current\": 86990130,\n    \"size\": -62876300\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9bcf4ed3-7863-472a-80d1-346ac1f44be1",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1977-08-01T10:49:34.622Z\",\n  \"status\": -1452805,\n  \"error\": \"anim\",\n  \"exception\": \"enim labore amet dolore in\",\n  \"message\": \"dolore\",\n  \"total_time_taken_in_millis\": -66270453,\n  \"http_status\": \"415 UNSUPPORTED_MEDIA_TYPE\",\n  \"items\": [\n    {\n      \"company_id\": -66794824,\n      \"integration_data\": {\n        \"laboris_454\": {}\n      },\n      \"company_name\": \"do minim dolore consequat\",\n      \"task_details\": {\n        \"type\": 67739408,\n        \"group_list\": [\n          {\n            \"text\": \"elit ea\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"nostrud non voluptate qui\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -77435971.85662492,\n        \"safe_stock\": -7698220,\n        \"period_threshold\": 21734266,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"ad sunt est\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"qui laborum pariatur aliqua dolor\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"officia\",\n      \"alias\": \"anim ea\"\n    },\n    {\n      \"company_id\": -46869241,\n      \"integration_data\": {\n        \"pariatur_445\": {}\n      },\n      \"company_name\": \"proident nulla\",\n      \"task_details\": {\n        \"type\": 13144906,\n        \"group_list\": [\n          {\n            \"text\": \"culpa et\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"eu esse tempor dolor\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -6176332.96453324,\n        \"safe_stock\": 3027557,\n        \"period_threshold\": -82990497,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"et adipisicing tempor nostrud ullamco\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"Excepte\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"dolor deserunt laborum\",\n      \"alias\": \"in\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": 57375530,\n      \"integration_data\": {\n        \"eiusmoddd9\": {}\n      },\n      \"company_name\": \"velit\",\n      \"task_details\": {\n        \"type\": 13019130,\n        \"group_list\": [\n          {\n            \"text\": \"dolor in\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"Duis ullamco in occaecat reprehenderit\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 85115069.47021598,\n        \"safe_stock\": 45584770,\n        \"period_threshold\": 13359192,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"est\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"sunt mollit nostrud\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"sint mollit adipisicing Duis ad\",\n      \"alias\": \"ipsum in\"\n    },\n    {\n      \"company_id\": -37623851,\n      \"integration_data\": {\n        \"cillum7b\": {},\n        \"pariatur_e9\": {},\n        \"dolord5\": {}\n      },\n      \"company_name\": \"enim aliquip tempor\",\n      \"task_details\": {\n        \"type\": 17556442,\n        \"group_list\": [\n          {\n            \"text\": \"aliquip aute consequat\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ipsum aliqua\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 66025110.8293224,\n        \"safe_stock\": 32179604,\n        \"period_threshold\": -99035642,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"minim\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"anim aute deserunt\",\n      \"alias\": \"est cupidatat enim do cul\"\n    }\n  ],\n  \"trace_id\": \"dolore Duis consectetur Ut voluptate\",\n  \"page\": {\n    \"type\": \"dolor elit dolore non\",\n    \"item_total\": -41369475,\n    \"next_id\": \"q\",\n    \"has_previous\": false,\n    \"has_next\": true,\n    \"current\": 86990130,\n    \"size\": -62876300\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "b7b898ec-a563-4a23-aa7b-fc76f50c4a2c",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "808a5209-4b06-4c69-ac50-4c3c99967b82",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "766dd922-cdda-4f6c-8837-ccb529357802",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": -73782987,\n      \"event_name\": \"sit Excepteur cupidatat ad\",\n      \"event_type\": \"pariatu\",\n      \"event_category\": \"ut consequat dolore\",\n      \"version\": \"nulla labore esse sed\",\n      \"display_name\": \"enim pariatur in\",\n      \"description\": \"adipisicing velit\",\n      \"created_on\": \"nulla cillum eiusmod in tempor\"\n    },\n    {\n      \"id\": 57531905,\n      \"event_name\": \"officia esse\",\n      \"event_type\": \"dolore\",\n      \"event_category\": \"tempor id ipsum cons\",\n      \"version\": \"dolor tempor irure sint\",\n      \"display_name\": \"eiusmod enim esse tempor irure\",\n      \"description\": \"velit\",\n      \"created_on\": \"laborum reprehender\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "0b46e2da-c98f-4e4a-abc0-8ea04cbddfe3",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "f6fa87bb-6055-4376-94c4-1a47f9736b5f",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 87169388,\n      \"event_name\": \"exerci\",\n      \"event_type\": \"consectetur in qui\",\n      \"event_category\": \"veniam esse dolo\",\n      \"version\": \"cupidatat \",\n      \"display_name\": \"reprehenderit id\",\n      \"description\": \"consequat commodo dolor\",\n      \"created_on\": \"deserunt eu quis\"\n    },\n    {\n      \"id\": -52510010,\n      \"event_name\": \"consectetur sit\",\n      \"event_type\": \"in \",\n      \"event_category\": \"moll\",\n      \"version\": \"culpa aliquip in\",\n      \"display_name\": \"elit amet commodo\",\n      \"description\": \"ullamco\",\n      \"created_on\": \"Excepteur dolor esse\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl"
    }
  ],
  "info": {
    "_postman_id": "18e8ff26-0bc5-453f-aceb-0c75dacae875",
    "name": "Fynd Platform's Public Side APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public Side APIs",
      "type": "text/plain"
    }
  }
}
