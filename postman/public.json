{
  "item": [
    {
      "id": "0fa970ff-51b1-4d2e-86ca-ab8e5fe966f2",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "45a39a58-479b-4c81-8ecf-434b773c9a64",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "6434b3d4-2292-43b8-aceb-ab9c2aac223b",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "irure",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "04c7c8e6-7905-4d3b-939b-e447583ac1d7",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "irure",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"Invalid application domain or id.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5629376c-ba21-4dd4-91aa-7a83c3c8e2c0",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "irure",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "ec7a082b-619c-448c-816a-51040ab31d11",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "e419e568-81db-401a-bbe0-aa7501471da1",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "ef26477d-e6b8-4710-a8a6-539af5d8980c",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "d4613585-cf6d-4496-9fc5-e4e19d0c6ef4",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "c7db7070-a1a4-4cb4-953d-93b05d01602b",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 89203413,\n   \"event_name\": \"dolore labore veniam\",\n   \"event_type\": \"eu culpa\",\n   \"event_category\": \"commodo aliquip Lorem\",\n   \"version\": \"nostrud ad commodo enim\",\n   \"display_name\": \"veniam velit\",\n   \"description\": \"ut est qui\",\n   \"created_on\": \"qui no\"\n  },\n  {\n   \"id\": 60728213,\n   \"event_name\": \"nisi officia minim cupidatat\",\n   \"event_type\": \"dolor occaecat ex\",\n   \"event_category\": \"dolore ullamco Duis sint irure\",\n   \"version\": \"id Excepteur aliqua enim\",\n   \"display_name\": \"qui incididunt ullamco Excepteur occaecat\",\n   \"description\": \"nulla pariatur sit labo\",\n   \"created_on\": \"officia Excepteur Lorem consequat elit\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "7b03a8a4-de0b-4212-af94-042ea2894586",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "07e3d355-fc7a-4659-b681-02216f9fddfe",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 12870701,\n   \"event_name\": \"Duis magna\",\n   \"event_type\": \"est\",\n   \"event_category\": \"elit commodo\",\n   \"version\": \"aliquip velit\",\n   \"display_name\": \"nostrud Lorem aliquip incidi\",\n   \"description\": \"anim eiusmod non\",\n   \"created_on\": \"incididunt conse\"\n  },\n  {\n   \"id\": 57901753,\n   \"event_name\": \"nostrud aliqua labore mollit\",\n   \"event_type\": \"ad volupt\",\n   \"event_category\": \"ea irure amet\",\n   \"version\": \"adipisicing\",\n   \"display_name\": \"cillum reprehenderit amet\",\n   \"description\": \"tempor ut\",\n   \"created_on\": \"commodo incididunt culpa adipisicing aliqua\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "49c7ab84-eebc-4a35-b4ba-dd7d51667727",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "5f4686d6-a9a5-4dad-bff4-623ed1446d88",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "e60035f3-8fd1-4658-ab0c-bb0d33d52075",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1970-12-27T04:56:45.992Z\",\n \"status\": 80867726,\n \"error\": \"dolo\",\n \"exception\": \"sunt cillum veniam in\",\n \"message\": \"dolor eiusmod culpa incididunt\",\n \"total_time_taken_in_millis\": 20146828,\n \"http_status\": \"419 INSUFFICIENT_SPACE_ON_RESOURCE\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"amet fugia\",\n   \"description\": \"eu Duis ut qui enim\",\n   \"name\": \"consequat laborum ullamco laboris\",\n   \"slug\": \"labore officia et proident\",\n   \"meta\": [\n    {\n     \"_id\": \"in laborum eiusmod irure ex\",\n     \"name\": \"exercitation dolor\",\n     \"value\": \"dolore nostrud anim irure sit\"\n    },\n    {\n     \"_id\": \"ex cillum quis\",\n     \"name\": \"non sit pariatur in\",\n     \"value\": \"sint voluptate\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"eiusmod in occaecat sunt laborum\",\n    \"integration\": \"eiusmod ex consequat aliqua\",\n    \"level\": \"dolor dolor\",\n    \"uid\": 99238072,\n    \"opted\": false,\n    \"permissions\": [\n     \"sed adipisicing qui minim\",\n     \"fugiat sed amet\"\n    ],\n    \"token\": \"ex dolore ipsum aute sint\",\n    \"name\": \"offici\",\n    \"stores\": [\n     {\n      \"_id\": \"occaecat labore dolor adipisicing\",\n      \"integration\": \"reprehenderit sunt tempor\",\n      \"level\": \"amet minim dolore\",\n      \"uid\": 67491158,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"amet dolore\",\n      \"code\": \"sed dolore\",\n      \"name\": \"aliqua laboris cupidatat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"laboris Ut\",\n      \"integration\": \"pariatur\",\n      \"level\": \"sit proident cillum nostrud non\",\n      \"uid\": 72003407,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"laboris eu\",\n      \"code\": \"sit velit commodo reprehenderit\",\n      \"name\": \"voluptate culpa nulla aliquip\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"sed cillum\",\n      \"integration\": \"laboris ex sit tempor\",\n      \"level\": \"ex non\",\n      \"uid\": 20338130,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Ut elit ut proident\",\n      \"code\": \"minim ad esse dolor\",\n      \"name\": \"ipsum exercitation et commodo ad\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"aliquip anim dolore\",\n      \"integration\": \"amet in\",\n      \"level\": \"enim nostrud sit\",\n      \"uid\": -44016800,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"nulla voluptate Lorem\",\n      \"code\": \"dolore laborum veniam in\",\n      \"name\": \"Ut est occaecat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"voluptate commodo in\",\n    \"integration\": \"officia Lorem r\",\n    \"level\": \"do deserunt ad sint reprehen\",\n    \"uid\": 28528397,\n    \"opted\": false,\n    \"permissions\": [\n     \"laborum\",\n     \"do eu\"\n    ],\n    \"token\": \"amet dolore\",\n    \"name\": \"nisi\",\n    \"stores\": [\n     {\n      \"_id\": \"dolore\",\n      \"integration\": \"est dolor veniam\",\n      \"level\": \"sed officia ex\",\n      \"uid\": -17967367,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"laboris cillum\",\n      \"code\": \"nisi\",\n      \"name\": \"dolor\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"Duis fu\",\n      \"integration\": \"qui anim id\",\n      \"level\": \"magna pariatur\",\n      \"uid\": 88310357,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sint aliqua\",\n      \"code\": \"sunt in dolore\",\n      \"name\": \"reprehenderit est\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"ullamco\",\n      \"integration\": \"consec\",\n      \"level\": \"enim ad voluptate aliqua\",\n      \"uid\": -98499609,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"fugiat aute magna id\",\n      \"code\": \"magna\",\n      \"name\": \"culpa\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"nulla magna ex\",\n      \"integration\": \"culpa veniam voluptate laboris\",\n      \"level\": \"dolor\",\n      \"uid\": -99384614,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"reprehenderit\",\n      \"code\": \"mollit aute\",\n      \"name\": \"occaecat mollit magna adipisicing Duis\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"reprehenderit tempo\",\n   \"description\": \"culpa\",\n   \"name\": \"ex esse\",\n   \"slug\": \"Ut irure dolor fugiat\",\n   \"meta\": [\n    {\n     \"_id\": \"ipsum exercitation in in\",\n     \"name\": \"cupidatat non cillum\",\n     \"value\": \"incididunt exercitation dolore\"\n    },\n    {\n     \"_id\": \"Ut consequat enim\",\n     \"name\": \"proident nostrud\",\n     \"value\": \"dolore amet\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"dolore Duis laborum\",\n    \"integration\": \"in\",\n    \"level\": \"dolore\",\n    \"uid\": -57857352,\n    \"opted\": false,\n    \"permissions\": [\n     \"commodo consectetur irure laborum do\",\n     \"ut\"\n    ],\n    \"token\": \"commodo ut in\",\n    \"name\": \"non incididunt id aliquip\",\n    \"stores\": [\n     {\n      \"_id\": \"eu cupidatat aliqua\",\n      \"integration\": \"reprehenderit ut incididunt in\",\n      \"level\": \"ut enim\",\n      \"uid\": 44361885,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"velit elit in irure\",\n      \"code\": \"ut\",\n      \"name\": \"amet nulla proident elit\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"esse pariatur in\",\n      \"integration\": \"elit do exercitation\",\n      \"level\": \"minim id Excepteur nostrud pariatur\",\n      \"uid\": 38970946,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"incididunt eu Lorem in\",\n      \"code\": \"nulla cupidatat irure sed\",\n      \"name\": \"sunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"eu ipsum id Lorem dolor\",\n      \"integration\": \"magna aliqua\",\n      \"level\": \"dolore esse magna\",\n      \"uid\": -20226663,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"est tempor culpa magna\",\n      \"code\": \"ipsum enim non cupidatat\",\n      \"name\": \"Ut labore nostrud\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"deserunt proident\",\n      \"integration\": \"sunt mollit\",\n      \"level\": \"id aliquip mollit non\",\n      \"uid\": -87310002,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"veniam laborum laboris\",\n      \"code\": \"labore qui commodo se\",\n      \"name\": \"culpa occaecat non\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"ullamco\",\n    \"integration\": \"eu\",\n    \"level\": \"exercitation cupidat\",\n    \"uid\": -1107838,\n    \"opted\": false,\n    \"permissions\": [\n     \"sint non ut\",\n     \"ad consequat nostrud mollit\"\n    ],\n    \"token\": \"ea ad id\",\n    \"name\": \"voluptate cupidatat aute nisi\",\n    \"stores\": [\n     {\n      \"_id\": \"nulla eiusmod aliqua\",\n      \"integration\": \"dolor ex ullamco deserunt la\",\n      \"level\": \"aute non irure pr\",\n      \"uid\": 2582426,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"reprehenderit consequat esse anim est\",\n      \"code\": \"nulla in\",\n      \"name\": \"anim in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"eu ad aliquip cupidatat\",\n      \"integration\": \"officia enim pariatur\",\n      \"level\": \"dolor id\",\n      \"uid\": 41191563,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"pariatur enim magna in laboris\",\n      \"code\": \"sunt\",\n      \"name\": \"culpa id consectetur dolore\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"incididunt ut ipsum\",\n      \"integration\": \"Excepteur cupidatat sunt\",\n      \"level\": \"id exercitation Duis adipisicing labore\",\n      \"uid\": 5394285,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sunt sed Lorem\",\n      \"code\": \"reprehenderit labore\",\n      \"name\": \"non occaeca\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"in sun\",\n      \"integration\": \"commodo aliqua eu quis\",\n      \"level\": \"aute eiusmod eu \",\n      \"uid\": -42995086,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"proident\",\n      \"code\": \"ea pariatur consequat\",\n      \"name\": \"in elit esse\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"labore ut cupidatat\",\n \"page\": {\n  \"type\": \"elit\",\n  \"size\": 2572947,\n  \"current\": 56983843,\n  \"has_next\": false,\n  \"item_total\": 91807077,\n  \"next_id\": \"reprehenderit\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "52ec3f3a-fdf9-43b0-b780-0a3bec63db95",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1970-12-27T04:56:45.992Z\",\n \"status\": 80867726,\n \"error\": \"dolo\",\n \"exception\": \"sunt cillum veniam in\",\n \"message\": \"dolor eiusmod culpa incididunt\",\n \"total_time_taken_in_millis\": 20146828,\n \"http_status\": \"419 INSUFFICIENT_SPACE_ON_RESOURCE\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"amet fugia\",\n   \"description\": \"eu Duis ut qui enim\",\n   \"name\": \"consequat laborum ullamco laboris\",\n   \"slug\": \"labore officia et proident\",\n   \"meta\": [\n    {\n     \"_id\": \"in laborum eiusmod irure ex\",\n     \"name\": \"exercitation dolor\",\n     \"value\": \"dolore nostrud anim irure sit\"\n    },\n    {\n     \"_id\": \"ex cillum quis\",\n     \"name\": \"non sit pariatur in\",\n     \"value\": \"sint voluptate\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"eiusmod in occaecat sunt laborum\",\n    \"integration\": \"eiusmod ex consequat aliqua\",\n    \"level\": \"dolor dolor\",\n    \"uid\": 99238072,\n    \"opted\": false,\n    \"permissions\": [\n     \"sed adipisicing qui minim\",\n     \"fugiat sed amet\"\n    ],\n    \"token\": \"ex dolore ipsum aute sint\",\n    \"name\": \"offici\",\n    \"stores\": [\n     {\n      \"_id\": \"occaecat labore dolor adipisicing\",\n      \"integration\": \"reprehenderit sunt tempor\",\n      \"level\": \"amet minim dolore\",\n      \"uid\": 67491158,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"amet dolore\",\n      \"code\": \"sed dolore\",\n      \"name\": \"aliqua laboris cupidatat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"laboris Ut\",\n      \"integration\": \"pariatur\",\n      \"level\": \"sit proident cillum nostrud non\",\n      \"uid\": 72003407,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"laboris eu\",\n      \"code\": \"sit velit commodo reprehenderit\",\n      \"name\": \"voluptate culpa nulla aliquip\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"sed cillum\",\n      \"integration\": \"laboris ex sit tempor\",\n      \"level\": \"ex non\",\n      \"uid\": 20338130,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Ut elit ut proident\",\n      \"code\": \"minim ad esse dolor\",\n      \"name\": \"ipsum exercitation et commodo ad\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"aliquip anim dolore\",\n      \"integration\": \"amet in\",\n      \"level\": \"enim nostrud sit\",\n      \"uid\": -44016800,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"nulla voluptate Lorem\",\n      \"code\": \"dolore laborum veniam in\",\n      \"name\": \"Ut est occaecat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"voluptate commodo in\",\n    \"integration\": \"officia Lorem r\",\n    \"level\": \"do deserunt ad sint reprehen\",\n    \"uid\": 28528397,\n    \"opted\": false,\n    \"permissions\": [\n     \"laborum\",\n     \"do eu\"\n    ],\n    \"token\": \"amet dolore\",\n    \"name\": \"nisi\",\n    \"stores\": [\n     {\n      \"_id\": \"dolore\",\n      \"integration\": \"est dolor veniam\",\n      \"level\": \"sed officia ex\",\n      \"uid\": -17967367,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"laboris cillum\",\n      \"code\": \"nisi\",\n      \"name\": \"dolor\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"Duis fu\",\n      \"integration\": \"qui anim id\",\n      \"level\": \"magna pariatur\",\n      \"uid\": 88310357,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sint aliqua\",\n      \"code\": \"sunt in dolore\",\n      \"name\": \"reprehenderit est\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"ullamco\",\n      \"integration\": \"consec\",\n      \"level\": \"enim ad voluptate aliqua\",\n      \"uid\": -98499609,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"fugiat aute magna id\",\n      \"code\": \"magna\",\n      \"name\": \"culpa\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"nulla magna ex\",\n      \"integration\": \"culpa veniam voluptate laboris\",\n      \"level\": \"dolor\",\n      \"uid\": -99384614,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"reprehenderit\",\n      \"code\": \"mollit aute\",\n      \"name\": \"occaecat mollit magna adipisicing Duis\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"reprehenderit tempo\",\n   \"description\": \"culpa\",\n   \"name\": \"ex esse\",\n   \"slug\": \"Ut irure dolor fugiat\",\n   \"meta\": [\n    {\n     \"_id\": \"ipsum exercitation in in\",\n     \"name\": \"cupidatat non cillum\",\n     \"value\": \"incididunt exercitation dolore\"\n    },\n    {\n     \"_id\": \"Ut consequat enim\",\n     \"name\": \"proident nostrud\",\n     \"value\": \"dolore amet\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"dolore Duis laborum\",\n    \"integration\": \"in\",\n    \"level\": \"dolore\",\n    \"uid\": -57857352,\n    \"opted\": false,\n    \"permissions\": [\n     \"commodo consectetur irure laborum do\",\n     \"ut\"\n    ],\n    \"token\": \"commodo ut in\",\n    \"name\": \"non incididunt id aliquip\",\n    \"stores\": [\n     {\n      \"_id\": \"eu cupidatat aliqua\",\n      \"integration\": \"reprehenderit ut incididunt in\",\n      \"level\": \"ut enim\",\n      \"uid\": 44361885,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"velit elit in irure\",\n      \"code\": \"ut\",\n      \"name\": \"amet nulla proident elit\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"esse pariatur in\",\n      \"integration\": \"elit do exercitation\",\n      \"level\": \"minim id Excepteur nostrud pariatur\",\n      \"uid\": 38970946,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"incididunt eu Lorem in\",\n      \"code\": \"nulla cupidatat irure sed\",\n      \"name\": \"sunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"eu ipsum id Lorem dolor\",\n      \"integration\": \"magna aliqua\",\n      \"level\": \"dolore esse magna\",\n      \"uid\": -20226663,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"est tempor culpa magna\",\n      \"code\": \"ipsum enim non cupidatat\",\n      \"name\": \"Ut labore nostrud\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"deserunt proident\",\n      \"integration\": \"sunt mollit\",\n      \"level\": \"id aliquip mollit non\",\n      \"uid\": -87310002,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"veniam laborum laboris\",\n      \"code\": \"labore qui commodo se\",\n      \"name\": \"culpa occaecat non\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"ullamco\",\n    \"integration\": \"eu\",\n    \"level\": \"exercitation cupidat\",\n    \"uid\": -1107838,\n    \"opted\": false,\n    \"permissions\": [\n     \"sint non ut\",\n     \"ad consequat nostrud mollit\"\n    ],\n    \"token\": \"ea ad id\",\n    \"name\": \"voluptate cupidatat aute nisi\",\n    \"stores\": [\n     {\n      \"_id\": \"nulla eiusmod aliqua\",\n      \"integration\": \"dolor ex ullamco deserunt la\",\n      \"level\": \"aute non irure pr\",\n      \"uid\": 2582426,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"reprehenderit consequat esse anim est\",\n      \"code\": \"nulla in\",\n      \"name\": \"anim in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"eu ad aliquip cupidatat\",\n      \"integration\": \"officia enim pariatur\",\n      \"level\": \"dolor id\",\n      \"uid\": 41191563,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"pariatur enim magna in laboris\",\n      \"code\": \"sunt\",\n      \"name\": \"culpa id consectetur dolore\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"incididunt ut ipsum\",\n      \"integration\": \"Excepteur cupidatat sunt\",\n      \"level\": \"id exercitation Duis adipisicing labore\",\n      \"uid\": 5394285,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sunt sed Lorem\",\n      \"code\": \"reprehenderit labore\",\n      \"name\": \"non occaeca\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"in sun\",\n      \"integration\": \"commodo aliqua eu quis\",\n      \"level\": \"aute eiusmod eu \",\n      \"uid\": -42995086,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"proident\",\n      \"code\": \"ea pariatur consequat\",\n      \"name\": \"in elit esse\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"labore ut cupidatat\",\n \"page\": {\n  \"type\": \"elit\",\n  \"size\": 2572947,\n  \"current\": 56983843,\n  \"has_next\": false,\n  \"item_total\": 91807077,\n  \"next_id\": \"reprehenderit\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "8f33b6b5-e55b-49f0-8ea5-5bff58c176c4",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1970-12-27T04:56:45.992Z\",\n \"status\": 80867726,\n \"error\": \"dolo\",\n \"exception\": \"sunt cillum veniam in\",\n \"message\": \"dolor eiusmod culpa incididunt\",\n \"total_time_taken_in_millis\": 20146828,\n \"http_status\": \"419 INSUFFICIENT_SPACE_ON_RESOURCE\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"amet fugia\",\n   \"description\": \"eu Duis ut qui enim\",\n   \"name\": \"consequat laborum ullamco laboris\",\n   \"slug\": \"labore officia et proident\",\n   \"meta\": [\n    {\n     \"_id\": \"in laborum eiusmod irure ex\",\n     \"name\": \"exercitation dolor\",\n     \"value\": \"dolore nostrud anim irure sit\"\n    },\n    {\n     \"_id\": \"ex cillum quis\",\n     \"name\": \"non sit pariatur in\",\n     \"value\": \"sint voluptate\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"eiusmod in occaecat sunt laborum\",\n    \"integration\": \"eiusmod ex consequat aliqua\",\n    \"level\": \"dolor dolor\",\n    \"uid\": 99238072,\n    \"opted\": false,\n    \"permissions\": [\n     \"sed adipisicing qui minim\",\n     \"fugiat sed amet\"\n    ],\n    \"token\": \"ex dolore ipsum aute sint\",\n    \"name\": \"offici\",\n    \"stores\": [\n     {\n      \"_id\": \"occaecat labore dolor adipisicing\",\n      \"integration\": \"reprehenderit sunt tempor\",\n      \"level\": \"amet minim dolore\",\n      \"uid\": 67491158,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"amet dolore\",\n      \"code\": \"sed dolore\",\n      \"name\": \"aliqua laboris cupidatat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"laboris Ut\",\n      \"integration\": \"pariatur\",\n      \"level\": \"sit proident cillum nostrud non\",\n      \"uid\": 72003407,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"laboris eu\",\n      \"code\": \"sit velit commodo reprehenderit\",\n      \"name\": \"voluptate culpa nulla aliquip\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"sed cillum\",\n      \"integration\": \"laboris ex sit tempor\",\n      \"level\": \"ex non\",\n      \"uid\": 20338130,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Ut elit ut proident\",\n      \"code\": \"minim ad esse dolor\",\n      \"name\": \"ipsum exercitation et commodo ad\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"aliquip anim dolore\",\n      \"integration\": \"amet in\",\n      \"level\": \"enim nostrud sit\",\n      \"uid\": -44016800,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"nulla voluptate Lorem\",\n      \"code\": \"dolore laborum veniam in\",\n      \"name\": \"Ut est occaecat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"voluptate commodo in\",\n    \"integration\": \"officia Lorem r\",\n    \"level\": \"do deserunt ad sint reprehen\",\n    \"uid\": 28528397,\n    \"opted\": false,\n    \"permissions\": [\n     \"laborum\",\n     \"do eu\"\n    ],\n    \"token\": \"amet dolore\",\n    \"name\": \"nisi\",\n    \"stores\": [\n     {\n      \"_id\": \"dolore\",\n      \"integration\": \"est dolor veniam\",\n      \"level\": \"sed officia ex\",\n      \"uid\": -17967367,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"laboris cillum\",\n      \"code\": \"nisi\",\n      \"name\": \"dolor\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"Duis fu\",\n      \"integration\": \"qui anim id\",\n      \"level\": \"magna pariatur\",\n      \"uid\": 88310357,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sint aliqua\",\n      \"code\": \"sunt in dolore\",\n      \"name\": \"reprehenderit est\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"ullamco\",\n      \"integration\": \"consec\",\n      \"level\": \"enim ad voluptate aliqua\",\n      \"uid\": -98499609,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"fugiat aute magna id\",\n      \"code\": \"magna\",\n      \"name\": \"culpa\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"nulla magna ex\",\n      \"integration\": \"culpa veniam voluptate laboris\",\n      \"level\": \"dolor\",\n      \"uid\": -99384614,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"reprehenderit\",\n      \"code\": \"mollit aute\",\n      \"name\": \"occaecat mollit magna adipisicing Duis\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"reprehenderit tempo\",\n   \"description\": \"culpa\",\n   \"name\": \"ex esse\",\n   \"slug\": \"Ut irure dolor fugiat\",\n   \"meta\": [\n    {\n     \"_id\": \"ipsum exercitation in in\",\n     \"name\": \"cupidatat non cillum\",\n     \"value\": \"incididunt exercitation dolore\"\n    },\n    {\n     \"_id\": \"Ut consequat enim\",\n     \"name\": \"proident nostrud\",\n     \"value\": \"dolore amet\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"dolore Duis laborum\",\n    \"integration\": \"in\",\n    \"level\": \"dolore\",\n    \"uid\": -57857352,\n    \"opted\": false,\n    \"permissions\": [\n     \"commodo consectetur irure laborum do\",\n     \"ut\"\n    ],\n    \"token\": \"commodo ut in\",\n    \"name\": \"non incididunt id aliquip\",\n    \"stores\": [\n     {\n      \"_id\": \"eu cupidatat aliqua\",\n      \"integration\": \"reprehenderit ut incididunt in\",\n      \"level\": \"ut enim\",\n      \"uid\": 44361885,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"velit elit in irure\",\n      \"code\": \"ut\",\n      \"name\": \"amet nulla proident elit\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"esse pariatur in\",\n      \"integration\": \"elit do exercitation\",\n      \"level\": \"minim id Excepteur nostrud pariatur\",\n      \"uid\": 38970946,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"incididunt eu Lorem in\",\n      \"code\": \"nulla cupidatat irure sed\",\n      \"name\": \"sunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"eu ipsum id Lorem dolor\",\n      \"integration\": \"magna aliqua\",\n      \"level\": \"dolore esse magna\",\n      \"uid\": -20226663,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"est tempor culpa magna\",\n      \"code\": \"ipsum enim non cupidatat\",\n      \"name\": \"Ut labore nostrud\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"deserunt proident\",\n      \"integration\": \"sunt mollit\",\n      \"level\": \"id aliquip mollit non\",\n      \"uid\": -87310002,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"veniam laborum laboris\",\n      \"code\": \"labore qui commodo se\",\n      \"name\": \"culpa occaecat non\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"ullamco\",\n    \"integration\": \"eu\",\n    \"level\": \"exercitation cupidat\",\n    \"uid\": -1107838,\n    \"opted\": false,\n    \"permissions\": [\n     \"sint non ut\",\n     \"ad consequat nostrud mollit\"\n    ],\n    \"token\": \"ea ad id\",\n    \"name\": \"voluptate cupidatat aute nisi\",\n    \"stores\": [\n     {\n      \"_id\": \"nulla eiusmod aliqua\",\n      \"integration\": \"dolor ex ullamco deserunt la\",\n      \"level\": \"aute non irure pr\",\n      \"uid\": 2582426,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"reprehenderit consequat esse anim est\",\n      \"code\": \"nulla in\",\n      \"name\": \"anim in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"eu ad aliquip cupidatat\",\n      \"integration\": \"officia enim pariatur\",\n      \"level\": \"dolor id\",\n      \"uid\": 41191563,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"pariatur enim magna in laboris\",\n      \"code\": \"sunt\",\n      \"name\": \"culpa id consectetur dolore\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"incididunt ut ipsum\",\n      \"integration\": \"Excepteur cupidatat sunt\",\n      \"level\": \"id exercitation Duis adipisicing labore\",\n      \"uid\": 5394285,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sunt sed Lorem\",\n      \"code\": \"reprehenderit labore\",\n      \"name\": \"non occaeca\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"in sun\",\n      \"integration\": \"commodo aliqua eu quis\",\n      \"level\": \"aute eiusmod eu \",\n      \"uid\": -42995086,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"proident\",\n      \"code\": \"ea pariatur consequat\",\n      \"name\": \"in elit esse\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"labore ut cupidatat\",\n \"page\": {\n  \"type\": \"elit\",\n  \"size\": 2572947,\n  \"current\": 56983843,\n  \"has_next\": false,\n  \"item_total\": 91807077,\n  \"next_id\": \"reprehenderit\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "eacb7cf0-480e-45d2-bc3b-e83b01235833",
          "name": "getApiKey | Get Slingshot Configuration Of  A Company",
          "request": {
            "name": "getApiKey | Get Slingshot Configuration Of  A Company",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "002412ae-f711-4cc8-8173-137f915fd625",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1962-12-02T16:52:47.820Z\",\n \"status\": -6109653,\n \"error\": \"sed veniam et amet incididunt\",\n \"exception\": \"dolor\",\n \"message\": \"cillum aliquip\",\n \"total_time_taken_in_millis\": 99399964,\n \"http_status\": \"102 PROCESSING\",\n \"items\": {\n  \"session_id\": \"enim cupidatat eu\",\n  \"error_message\": \"ad Lorem incididunt veniam\"\n },\n \"payload\": {\n  \"session_id\": \"e\",\n  \"error_message\": \"in enim ad \"\n },\n \"trace_id\": \"consequat proident id\",\n \"page\": {\n  \"type\": \"nulla qui ea\",\n  \"size\": 65085860,\n  \"current\": 32849869,\n  \"has_next\": true,\n  \"item_total\": -87301853,\n  \"next_id\": \"tempor pariatur\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "8530f949-b528-4b03-ad88-62370d50c5b6",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1962-12-02T16:52:47.820Z\",\n \"status\": -6109653,\n \"error\": \"sed veniam et amet incididunt\",\n \"exception\": \"dolor\",\n \"message\": \"cillum aliquip\",\n \"total_time_taken_in_millis\": 99399964,\n \"http_status\": \"102 PROCESSING\",\n \"items\": {\n  \"session_id\": \"enim cupidatat eu\",\n  \"error_message\": \"ad Lorem incididunt veniam\"\n },\n \"payload\": {\n  \"session_id\": \"e\",\n  \"error_message\": \"in enim ad \"\n },\n \"trace_id\": \"consequat proident id\",\n \"page\": {\n  \"type\": \"nulla qui ea\",\n  \"size\": 65085860,\n  \"current\": 32849869,\n  \"has_next\": true,\n  \"item_total\": -87301853,\n  \"next_id\": \"tempor pariatur\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "14073c42-defa-4a96-ab42-aa23850284bd",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1962-12-02T16:52:47.820Z\",\n \"status\": -6109653,\n \"error\": \"sed veniam et amet incididunt\",\n \"exception\": \"dolor\",\n \"message\": \"cillum aliquip\",\n \"total_time_taken_in_millis\": 99399964,\n \"http_status\": \"102 PROCESSING\",\n \"items\": {\n  \"session_id\": \"enim cupidatat eu\",\n  \"error_message\": \"ad Lorem incididunt veniam\"\n },\n \"payload\": {\n  \"session_id\": \"e\",\n  \"error_message\": \"in enim ad \"\n },\n \"trace_id\": \"consequat proident id\",\n \"page\": {\n  \"type\": \"nulla qui ea\",\n  \"size\": 65085860,\n  \"current\": 32849869,\n  \"has_next\": true,\n  \"item_total\": -87301853,\n  \"next_id\": \"tempor pariatur\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "ef403836-37cd-4ef0-929d-0d762c3c9d19",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "7f2c3455-ba03-4c45-87ec-474b85ca60e0",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1989-04-11T01:00:01.255Z\",\n \"status\": 24982379,\n \"error\": \"ut sit\",\n \"exception\": \"Duis aliquip proident occaecat\",\n \"message\": \"minim ullamco commodo id\",\n \"total_time_taken_in_millis\": -12928619,\n \"http_status\": \"407 PROXY_AUTHENTICATION_REQUIRED\",\n \"items\": {\n  \"company_id\": -32064544,\n  \"integration_data\": {},\n  \"company_name\": \"qui consectetur mag\",\n  \"task_details\": {\n   \"type\": -41876865,\n   \"group_list\": [\n    {\n     \"text\": \"id nostrud occaecat\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"commodo\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -96980261.35064222,\n   \"safe_stock\": 24518346,\n   \"period_threshold\": -78493737,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"offici\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"quis elit\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"commodo in Excepteur labore\",\n  \"alias\": \"minim\"\n },\n \"payload\": {\n  \"company_id\": -97218875,\n  \"integration_data\": {},\n  \"company_name\": \"mollit magna\",\n  \"task_details\": {\n   \"type\": 19658409,\n   \"group_list\": [\n    {\n     \"text\": \"aliqua\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"dolore id adipisicing incididunt cillum\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -17882524.649091408,\n   \"safe_stock\": 94442613,\n   \"period_threshold\": -68294790,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"ut magna\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"aute occaecat esse quis\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"voluptate ut minim\",\n  \"alias\": \"do voluptate laborum consectetur aute\"\n },\n \"trace_id\": \"anim mollit consequat minim\",\n \"page\": {\n  \"type\": \"aute dolor adipisicing\",\n  \"size\": -9420624,\n  \"current\": -46234826,\n  \"has_next\": false,\n  \"item_total\": 35672530,\n  \"next_id\": \"sunt\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d204a873-7663-4528-ab84-8f7953098f76",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1989-04-11T01:00:01.255Z\",\n \"status\": 24982379,\n \"error\": \"ut sit\",\n \"exception\": \"Duis aliquip proident occaecat\",\n \"message\": \"minim ullamco commodo id\",\n \"total_time_taken_in_millis\": -12928619,\n \"http_status\": \"407 PROXY_AUTHENTICATION_REQUIRED\",\n \"items\": {\n  \"company_id\": -32064544,\n  \"integration_data\": {},\n  \"company_name\": \"qui consectetur mag\",\n  \"task_details\": {\n   \"type\": -41876865,\n   \"group_list\": [\n    {\n     \"text\": \"id nostrud occaecat\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"commodo\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -96980261.35064222,\n   \"safe_stock\": 24518346,\n   \"period_threshold\": -78493737,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"offici\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"quis elit\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"commodo in Excepteur labore\",\n  \"alias\": \"minim\"\n },\n \"payload\": {\n  \"company_id\": -97218875,\n  \"integration_data\": {},\n  \"company_name\": \"mollit magna\",\n  \"task_details\": {\n   \"type\": 19658409,\n   \"group_list\": [\n    {\n     \"text\": \"aliqua\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"dolore id adipisicing incididunt cillum\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -17882524.649091408,\n   \"safe_stock\": 94442613,\n   \"period_threshold\": -68294790,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"ut magna\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"aute occaecat esse quis\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"voluptate ut minim\",\n  \"alias\": \"do voluptate laborum consectetur aute\"\n },\n \"trace_id\": \"anim mollit consequat minim\",\n \"page\": {\n  \"type\": \"aute dolor adipisicing\",\n  \"size\": -9420624,\n  \"current\": -46234826,\n  \"has_next\": false,\n  \"item_total\": 35672530,\n  \"next_id\": \"sunt\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "26cd9438-7ca6-48c0-8fbb-5c799f621e56",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1989-04-11T01:00:01.255Z\",\n \"status\": 24982379,\n \"error\": \"ut sit\",\n \"exception\": \"Duis aliquip proident occaecat\",\n \"message\": \"minim ullamco commodo id\",\n \"total_time_taken_in_millis\": -12928619,\n \"http_status\": \"407 PROXY_AUTHENTICATION_REQUIRED\",\n \"items\": {\n  \"company_id\": -32064544,\n  \"integration_data\": {},\n  \"company_name\": \"qui consectetur mag\",\n  \"task_details\": {\n   \"type\": -41876865,\n   \"group_list\": [\n    {\n     \"text\": \"id nostrud occaecat\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"commodo\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -96980261.35064222,\n   \"safe_stock\": 24518346,\n   \"period_threshold\": -78493737,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"offici\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"quis elit\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"commodo in Excepteur labore\",\n  \"alias\": \"minim\"\n },\n \"payload\": {\n  \"company_id\": -97218875,\n  \"integration_data\": {},\n  \"company_name\": \"mollit magna\",\n  \"task_details\": {\n   \"type\": 19658409,\n   \"group_list\": [\n    {\n     \"text\": \"aliqua\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"dolore id adipisicing incididunt cillum\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -17882524.649091408,\n   \"safe_stock\": 94442613,\n   \"period_threshold\": -68294790,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"ut magna\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"aute occaecat esse quis\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"voluptate ut minim\",\n  \"alias\": \"do voluptate laborum consectetur aute\"\n },\n \"trace_id\": \"anim mollit consequat minim\",\n \"page\": {\n  \"type\": \"aute dolor adipisicing\",\n  \"size\": -9420624,\n  \"current\": -46234826,\n  \"has_next\": false,\n  \"item_total\": 35672530,\n  \"next_id\": \"sunt\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "585a727f-fda3-4f20-9b94-eb11ff3d4931",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "1263eab0-5886-4e55-bf91-08c200eaaf58",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2003-11-08T18:19:51.310Z\",\n \"status\": -35756520,\n \"error\": \"incididunt consectetur dolore aliquip\",\n \"exception\": \"ullamco culpa\",\n \"message\": \"qui velit c\",\n \"total_time_taken_in_millis\": -6347698,\n \"http_status\": \"226 IM_USED\",\n \"items\": [\n  {\n   \"company_id\": 91440018,\n   \"integration_data\": {},\n   \"company_name\": \"sed aute reprehenderit nisi\",\n   \"task_details\": {\n    \"type\": 97354509,\n    \"group_list\": [\n     {\n      \"text\": \"consectetur tempor Lorem esse\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ipsu\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -34918475.53022778,\n    \"safe_stock\": -57189975,\n    \"period_threshold\": 82642323,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"elit enim eu incidi\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in Lorem consequat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"magna ut Excepteur laborum dolore\",\n   \"alias\": \"ea exercitation incididunt velit\"\n  },\n  {\n   \"company_id\": -56491933,\n   \"integration_data\": {},\n   \"company_name\": \"do sed esse fugiat\",\n   \"task_details\": {\n    \"type\": -85534950,\n    \"group_list\": [\n     {\n      \"text\": \"occaecat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"anim velit tempor dolor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -30874467.38243398,\n    \"safe_stock\": -75056856,\n    \"period_threshold\": -44816520,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ut cupidatat aute\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nostrud \",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"minim nostrud et\",\n   \"alias\": \"mollit\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 32293990,\n   \"integration_data\": {},\n   \"company_name\": \"eiusmod in Lorem aliqua\",\n   \"task_details\": {\n    \"type\": 78949386,\n    \"group_list\": [\n     {\n      \"text\": \"ad officia\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ullamco in quis de\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -37919465.04323791,\n    \"safe_stock\": -28929083,\n    \"period_threshold\": -4568667,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"quis nostrud\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eiusmod qui enim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"qui exerci\",\n   \"alias\": \"eiusmod nostrud consectetur\"\n  },\n  {\n   \"company_id\": -75594935,\n   \"integration_data\": {},\n   \"company_name\": \"incididunt et\",\n   \"task_details\": {\n    \"type\": 55964391,\n    \"group_list\": [\n     {\n      \"text\": \"Duis consequat magna\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Duis eiusmod\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 45433770.53436339,\n    \"safe_stock\": -42796101,\n    \"period_threshold\": -9233540,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"aliqua eu fugiat mollit eiusmod\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"officia voluptate irure\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ea adipisicing\",\n   \"alias\": \"anim exercitat\"\n  }\n ],\n \"trace_id\": \"fugiat et id laboris ut\",\n \"page\": {\n  \"type\": \"labore\",\n  \"size\": 39483210,\n  \"current\": -11244181,\n  \"has_next\": false,\n  \"item_total\": 32652798,\n  \"next_id\": \"Ut fugiat\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "633a3431-6477-44e6-897e-f91fa45b82e5",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1952-03-13T01:22:12.547Z\",\n \"status\": 11881689,\n \"error\": \"enim consequat dolore culpa\",\n \"exception\": \"aliqua nisi\",\n \"message\": \"cillum magna irure sit\",\n \"total_time_taken_in_millis\": 42418186,\n \"http_status\": \"423 LOCKED\",\n \"items\": [\n  {\n   \"company_id\": -6739600,\n   \"integration_data\": {},\n   \"company_name\": \"in irure commodo\",\n   \"task_details\": {\n    \"type\": 12356572,\n    \"group_list\": [\n     {\n      \"text\": \"incididunt a\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"id ipsum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -3958505.453711331,\n    \"safe_stock\": -2255090,\n    \"period_threshold\": -10317713,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ea\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ullamco fugiat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"pariatur sed incididunt tempor mollit\",\n   \"alias\": \"non dolor cupidatat\"\n  },\n  {\n   \"company_id\": 44226090,\n   \"integration_data\": {},\n   \"company_name\": \"ipsum veniam tempor reprehenderit dolore\",\n   \"task_details\": {\n    \"type\": 6456101,\n    \"group_list\": [\n     {\n      \"text\": \"ullamco consequat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"anim aliqua nulla est\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -89879609.67627768,\n    \"safe_stock\": -35509953,\n    \"period_threshold\": -2903968,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"consectetur aliquip\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"commodo voluptate aliqua ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"esse cupidatat al\",\n   \"alias\": \"occaecat sit fugiat sunt Excepteur\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 85994876,\n   \"integration_data\": {},\n   \"company_name\": \"non irure ad\",\n   \"task_details\": {\n    \"type\": -7265533,\n    \"group_list\": [\n     {\n      \"text\": \"proident quis id\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consectetur sint Duis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -28972215.10881649,\n    \"safe_stock\": 99543195,\n    \"period_threshold\": 58868061,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"cillum quis Ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laborum culpa laboris\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ut sunt Ut\",\n   \"alias\": \"dolore Excepteur labore fugiat\"\n  },\n  {\n   \"company_id\": 9659077,\n   \"integration_data\": {},\n   \"company_name\": \"et occaecat sint enim\",\n   \"task_details\": {\n    \"type\": 39633655,\n    \"group_list\": [\n     {\n      \"text\": \"cupidatat anim tempor occaecat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nisi elit dolor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -8581840.793293789,\n    \"safe_stock\": 43032490,\n    \"period_threshold\": -95599987,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"proident\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ex id veniam\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"cupidatat tempor in\",\n   \"alias\": \"occaecat aute\"\n  }\n ],\n \"trace_id\": \"el\",\n \"page\": {\n  \"type\": \"officia ea cupidatat qui pariatu\",\n  \"size\": -51641246,\n  \"current\": 75781517,\n  \"has_next\": false,\n  \"item_total\": 4827914,\n  \"next_id\": \"in cupidatat\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d551eaf7-777b-4587-ba3e-f95466bcb17c",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1952-03-13T01:22:12.547Z\",\n \"status\": 11881689,\n \"error\": \"enim consequat dolore culpa\",\n \"exception\": \"aliqua nisi\",\n \"message\": \"cillum magna irure sit\",\n \"total_time_taken_in_millis\": 42418186,\n \"http_status\": \"423 LOCKED\",\n \"items\": [\n  {\n   \"company_id\": -6739600,\n   \"integration_data\": {},\n   \"company_name\": \"in irure commodo\",\n   \"task_details\": {\n    \"type\": 12356572,\n    \"group_list\": [\n     {\n      \"text\": \"incididunt a\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"id ipsum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -3958505.453711331,\n    \"safe_stock\": -2255090,\n    \"period_threshold\": -10317713,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ea\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ullamco fugiat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"pariatur sed incididunt tempor mollit\",\n   \"alias\": \"non dolor cupidatat\"\n  },\n  {\n   \"company_id\": 44226090,\n   \"integration_data\": {},\n   \"company_name\": \"ipsum veniam tempor reprehenderit dolore\",\n   \"task_details\": {\n    \"type\": 6456101,\n    \"group_list\": [\n     {\n      \"text\": \"ullamco consequat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"anim aliqua nulla est\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -89879609.67627768,\n    \"safe_stock\": -35509953,\n    \"period_threshold\": -2903968,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"consectetur aliquip\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"commodo voluptate aliqua ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"esse cupidatat al\",\n   \"alias\": \"occaecat sit fugiat sunt Excepteur\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 85994876,\n   \"integration_data\": {},\n   \"company_name\": \"non irure ad\",\n   \"task_details\": {\n    \"type\": -7265533,\n    \"group_list\": [\n     {\n      \"text\": \"proident quis id\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consectetur sint Duis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -28972215.10881649,\n    \"safe_stock\": 99543195,\n    \"period_threshold\": 58868061,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"cillum quis Ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laborum culpa laboris\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ut sunt Ut\",\n   \"alias\": \"dolore Excepteur labore fugiat\"\n  },\n  {\n   \"company_id\": 9659077,\n   \"integration_data\": {},\n   \"company_name\": \"et occaecat sint enim\",\n   \"task_details\": {\n    \"type\": 39633655,\n    \"group_list\": [\n     {\n      \"text\": \"cupidatat anim tempor occaecat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nisi elit dolor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -8581840.793293789,\n    \"safe_stock\": 43032490,\n    \"period_threshold\": -95599987,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"proident\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ex id veniam\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"cupidatat tempor in\",\n   \"alias\": \"occaecat aute\"\n  }\n ],\n \"trace_id\": \"el\",\n \"page\": {\n  \"type\": \"officia ea cupidatat qui pariatu\",\n  \"size\": -51641246,\n  \"current\": 75781517,\n  \"has_next\": false,\n  \"item_total\": 4827914,\n  \"next_id\": \"in cupidatat\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "0f0a9f79-462c-43e0-8de1-229d64124ce4",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "f5396c61-7752-472a-8cda-0e0a357d5409",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1977-05-10T22:51:02.283Z\",\n \"status\": 24015867,\n \"error\": \"en\",\n \"exception\": \"a\",\n \"message\": \"dolor dolore consequat ve\",\n \"total_time_taken_in_millis\": 35951380,\n \"http_status\": \"415 UNSUPPORTED_MEDIA_TYPE\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"eu ullamco\",\n \"page\": {\n  \"type\": \"Ut nulla reprehenderit cillum\",\n  \"size\": 41021104,\n  \"current\": 82577362,\n  \"has_next\": false,\n  \"item_total\": -2539654,\n  \"next_id\": \"anim fugiat tempor eiusmod\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3b8fb766-71e8-45a8-9235-ff5abf030cde",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1977-05-10T22:51:02.283Z\",\n \"status\": 24015867,\n \"error\": \"en\",\n \"exception\": \"a\",\n \"message\": \"dolor dolore consequat ve\",\n \"total_time_taken_in_millis\": 35951380,\n \"http_status\": \"415 UNSUPPORTED_MEDIA_TYPE\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"eu ullamco\",\n \"page\": {\n  \"type\": \"Ut nulla reprehenderit cillum\",\n  \"size\": 41021104,\n  \"current\": 82577362,\n  \"has_next\": false,\n  \"item_total\": -2539654,\n  \"next_id\": \"anim fugiat tempor eiusmod\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "7e89186d-c3cc-4666-bd86-22fae5b4df04",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1977-05-10T22:51:02.283Z\",\n \"status\": 24015867,\n \"error\": \"en\",\n \"exception\": \"a\",\n \"message\": \"dolor dolore consequat ve\",\n \"total_time_taken_in_millis\": 35951380,\n \"http_status\": \"415 UNSUPPORTED_MEDIA_TYPE\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"eu ullamco\",\n \"page\": {\n  \"type\": \"Ut nulla reprehenderit cillum\",\n  \"size\": 41021104,\n  \"current\": 82577362,\n  \"has_next\": false,\n  \"item_total\": -2539654,\n  \"next_id\": \"anim fugiat tempor eiusmod\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "582189ea-fde1-4f6b-97b3-728fe94a4aa0",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "d1ee04c5-ba45-4847-943e-35c74ad1382f",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1967-02-19T21:16:07.987Z\",\n \"status\": 46782612,\n \"error\": \"dolore elit incididunt\",\n \"exception\": \"est dolore\",\n \"message\": \"aute ut com\",\n \"total_time_taken_in_millis\": 29658232,\n \"http_status\": \"400 BAD_REQUEST\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"officia eiusmod \",\n \"page\": {\n  \"type\": \"anim cupidatat occaecat\",\n  \"size\": -69585263,\n  \"current\": 80715630,\n  \"has_next\": false,\n  \"item_total\": 97967787,\n  \"next_id\": \"occaecat ad cons\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e4ac8c0c-acfd-4592-a1c1-e4c208741e14",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1967-02-19T21:16:07.987Z\",\n \"status\": 46782612,\n \"error\": \"dolore elit incididunt\",\n \"exception\": \"est dolore\",\n \"message\": \"aute ut com\",\n \"total_time_taken_in_millis\": 29658232,\n \"http_status\": \"400 BAD_REQUEST\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"officia eiusmod \",\n \"page\": {\n  \"type\": \"anim cupidatat occaecat\",\n  \"size\": -69585263,\n  \"current\": 80715630,\n  \"has_next\": false,\n  \"item_total\": 97967787,\n  \"next_id\": \"occaecat ad cons\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f083ce88-2649-492b-a694-e766bc77792d",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1967-02-19T21:16:07.987Z\",\n \"status\": 46782612,\n \"error\": \"dolore elit incididunt\",\n \"exception\": \"est dolore\",\n \"message\": \"aute ut com\",\n \"total_time_taken_in_millis\": 29658232,\n \"http_status\": \"400 BAD_REQUEST\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"officia eiusmod \",\n \"page\": {\n  \"type\": \"anim cupidatat occaecat\",\n  \"size\": -69585263,\n  \"current\": 80715630,\n  \"has_next\": false,\n  \"item_total\": 97967787,\n  \"next_id\": \"occaecat ad cons\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ca830d1f-07bd-49ca-9e4f-818380e7b95a",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1967-02-19T21:16:07.987Z\",\n \"status\": 46782612,\n \"error\": \"dolore elit incididunt\",\n \"exception\": \"est dolore\",\n \"message\": \"aute ut com\",\n \"total_time_taken_in_millis\": 29658232,\n \"http_status\": \"400 BAD_REQUEST\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"officia eiusmod \",\n \"page\": {\n  \"type\": \"anim cupidatat occaecat\",\n  \"size\": -69585263,\n  \"current\": 80715630,\n  \"has_next\": false,\n  \"item_total\": 97967787,\n  \"next_id\": \"occaecat ad cons\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f0f21f46-c543-451e-b39a-a8de23fe69f5",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1967-02-19T21:16:07.987Z\",\n \"status\": 46782612,\n \"error\": \"dolore elit incididunt\",\n \"exception\": \"est dolore\",\n \"message\": \"aute ut com\",\n \"total_time_taken_in_millis\": 29658232,\n \"http_status\": \"400 BAD_REQUEST\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"officia eiusmod \",\n \"page\": {\n  \"type\": \"anim cupidatat occaecat\",\n  \"size\": -69585263,\n  \"current\": 80715630,\n  \"has_next\": false,\n  \"item_total\": 97967787,\n  \"next_id\": \"occaecat ad cons\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.jiomarketx0.de"
    }
  ],
  "info": {
    "_postman_id": "3544585b-c850-4db0-87ca-472253945693",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
