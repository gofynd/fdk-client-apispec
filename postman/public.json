{
  "item": [
    {
      "id": "9da63aff-fae2-441a-b8a1-5aa65b22d2bc",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "f3d7d840-747e-4e7d-a95d-748f5824646e",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "02ece595-b4bd-4513-a030-bd8589c30aa5",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "dolor Ut",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "06e462a5-ae7e-4fa0-b5f1-f034bc208ec8",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "dolor Ut",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "84343857-e328-4020-8c9c-e7b092a527bb",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "dolor Ut",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "52a25940-38a5-40b9-aabb-386ec1ca8724",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "c0ff8841-e683-4a51-9b0d-c337a36a13f5",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "1129ce34-5b34-468c-a434-0c1cf5d5cb0c",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "baa69327-7c14-45d0-a477-0ac9deea59cd",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "71b09aa2-19a3-410c-bbf2-00bc80143132",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 4379516,\n   \"event_name\": \"amet tempor commodo\",\n   \"event_type\": \"dolor mollit\",\n   \"event_category\": \"aliqua elit dolore\",\n   \"version\": \"est ipsum\",\n   \"display_name\": \"commodo exercitati\",\n   \"description\": \"quis cupidatat mollit\",\n   \"created_on\": \"aute\"\n  },\n  {\n   \"id\": -76975020,\n   \"event_name\": \"aliquip\",\n   \"event_type\": \"in ad ipsum anim\",\n   \"event_category\": \"ex Excepteur\",\n   \"version\": \"reprehenderit\",\n   \"display_name\": \"deserunt occaecat ex\",\n   \"description\": \"dolore\",\n   \"created_on\": \"ea\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "51a9fe9d-b4ea-4303-92c4-76ac740f2093",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "fc8fe882-0882-4429-a746-8da76647b85d",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 35200290,\n   \"event_name\": \"amet\",\n   \"event_type\": \"consectetur id ut ad\",\n   \"event_category\": \"esse id laborum eiusmo\",\n   \"version\": \"consequat ut Lorem eu Excepteur\",\n   \"display_name\": \"tempor aliqua\",\n   \"description\": \"ut do\",\n   \"created_on\": \"incididunt Duis ut et nulla\"\n  },\n  {\n   \"id\": -62263008,\n   \"event_name\": \"Duis\",\n   \"event_type\": \"incididunt consequat veniam dolor\",\n   \"event_category\": \"laborum anim\",\n   \"version\": \"consectetur do incididunt\",\n   \"display_name\": \"Lorem\",\n   \"description\": \"ad dolore proident\",\n   \"created_on\": \"in aliquip cupidatat Ut ipsum\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "0707eb32-7a06-48cd-80f3-9c854340e48c",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "5241c67e-42b3-47a5-9f37-fa3d4b7425d7",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "f7b180c0-f1e4-4e28-9cfb-c4603efe9224",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1950-08-25T04:23:20.425Z\",\n \"status\": 12449893,\n \"error\": \"officia in reprehenderit dolor\",\n \"exception\": \"deserunt velit consectetur\",\n \"message\": \"consectetur laborum\",\n \"total_time_taken_in_millis\": 4488544,\n \"http_status\": \"506 VARIANT_ALSO_NEGOTIATES\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"id\",\n   \"description\": \"deserunt aliqua\",\n   \"name\": \"dolore sit reprehenderit labore\",\n   \"slug\": \"in fugiat e\",\n   \"meta\": [\n    {\n     \"_id\": \"ulla\",\n     \"name\": \"ea\",\n     \"value\": \"pa\"\n    },\n    {\n     \"_id\": \"eiusmod culpa\",\n     \"name\": \"magna in aute quis est\",\n     \"value\": \"consequat proid\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"eu sunt\",\n    \"integration\": \"ad occaecat mollit\",\n    \"level\": \"labore id sit tempor\",\n    \"uid\": -4269135,\n    \"opted\": false,\n    \"permissions\": [\n     \"aliquip no\",\n     \"eu pariatur aliquip\"\n    ],\n    \"token\": \"aute\",\n    \"name\": \"cillum\",\n    \"stores\": [\n     {\n      \"_id\": \"magna veniam ad\",\n      \"integration\": \"nulla et aliqua ul\",\n      \"level\": \"deserunt aute magna esse fugiat\",\n      \"uid\": 43157543,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"laboris fugiat ex\",\n      \"code\": \"esse velit mollit\",\n      \"name\": \"aliquip Lorem Excepteur\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"et nostrud proident aute\",\n      \"integration\": \"ullamco dolore id\",\n      \"level\": \"consectetur cupidatat\",\n      \"uid\": 33243414,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"aliqua ut\",\n      \"code\": \"officia consequat reprehenderit\",\n      \"name\": \"et nisi sunt ipsum\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"commodo\",\n      \"integration\": \"laborum aute mollit occaecat labore\",\n      \"level\": \"aliquip magna dolore pariatur\",\n      \"uid\": -80428101,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sit est non officia nisi\",\n      \"code\": \"dolore eu Lorem\",\n      \"name\": \"consequat ut\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"commodo esse sint\",\n      \"integration\": \"labore ex dolor\",\n      \"level\": \"laboris voluptate\",\n      \"uid\": 87888061,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"minim\",\n      \"code\": \"sit consectetur\",\n      \"name\": \"dolor occaecat ex fugiat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"veniam sed\",\n    \"integration\": \"mollit quis in\",\n    \"level\": \"cupidatat sint voluptate amet\",\n    \"uid\": 9053350,\n    \"opted\": false,\n    \"permissions\": [\n     \"tempor sunt anim\",\n     \"aliquip ullamco elit dolor\"\n    ],\n    \"token\": \"enim voluptate sunt nostrud culpa\",\n    \"name\": \"dolor deserunt cillum dolo\",\n    \"stores\": [\n     {\n      \"_id\": \"Excepteur commodo\",\n      \"integration\": \"non amet\",\n      \"level\": \"laborum cillum dolor\",\n      \"uid\": -37486823,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"nulla cillum non occaecat\",\n      \"code\": \"eu ut in dolor\",\n      \"name\": \"commodo voluptate in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"commodo dolor fugiat\",\n      \"integration\": \"irure exercitation id\",\n      \"level\": \"adipisicing non laborum\",\n      \"uid\": 52067234,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"commodo laboris enim voluptate\",\n      \"code\": \"nisi dolor enim mollit\",\n      \"name\": \"eiusmod\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"magna quis\",\n      \"integration\": \"voluptate dolore laborum aliquip\",\n      \"level\": \"aliquip consequat minim\",\n      \"uid\": 62521959,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"reprehen\",\n      \"code\": \"Lorem nulla\",\n      \"name\": \"dolor enim nulla\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"proident non id elit\",\n      \"integration\": \"dolore consequat laboris enim\",\n      \"level\": \"in Ut proident\",\n      \"uid\": -21059733,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"irure ipsum proident\",\n      \"code\": \"irure Excepteur non\",\n      \"name\": \"dolore eu dolor non\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"enim\",\n   \"description\": \"non ut\",\n   \"name\": \"Du\",\n   \"slug\": \"velit tempor\",\n   \"meta\": [\n    {\n     \"_id\": \"est sit eiusmod\",\n     \"name\": \"labore magna\",\n     \"value\": \"minim officia commodo n\"\n    },\n    {\n     \"_id\": \"consequat incididunt id\",\n     \"name\": \"pariatur velit voluptate occaecat in\",\n     \"value\": \"sunt exercitation elit\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"magna labore sunt veniam quis\",\n    \"integration\": \"exercitation Excepteur nostrud ex\",\n    \"level\": \"exercitation laboris aliquip occaecat\",\n    \"uid\": -77088420,\n    \"opted\": true,\n    \"permissions\": [\n     \"cillum est quis\",\n     \"dolor in voluptate consequat\"\n    ],\n    \"token\": \"nostrud consequat\",\n    \"name\": \"nisi\",\n    \"stores\": [\n     {\n      \"_id\": \"ea mollit Lorem\",\n      \"integration\": \"Excepteur ea\",\n      \"level\": \"pariatur\",\n      \"uid\": -54542458,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"irure voluptate sint\",\n      \"code\": \"occaecat exercitation commodo\",\n      \"name\": \"enim aliquip ut dolore ullamco\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"officia ut occaecat ea\",\n      \"integration\": \"Lorem\",\n      \"level\": \"commodo Duis reprehenderit labore elit\",\n      \"uid\": 88481554,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"quis dolore magna ut\",\n      \"code\": \"enim amet Excepteur dolore\",\n      \"name\": \"veniam\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"nulla exercitation\",\n      \"integration\": \"fugiat sed Excepteur ea\",\n      \"level\": \"dolore veniam dolor amet\",\n      \"uid\": 95648570,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolor\",\n      \"code\": \"officia sed nostrud ad veniam\",\n      \"name\": \"nulla irure deserunt ullamco qui\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"est sin\",\n      \"integration\": \"minim\",\n      \"level\": \"occaecat Ut adipisicing et\",\n      \"uid\": -17207216,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"amet reprehenderit in\",\n      \"code\": \"eu enim sunt\",\n      \"name\": \"ut sit labore non\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"mollit irure dolore voluptate quis\",\n    \"integration\": \"sit exercitation\",\n    \"level\": \"eu pariatur labore ullamco sed\",\n    \"uid\": -3043960,\n    \"opted\": false,\n    \"permissions\": [\n     \"elit ipsum Excepteur\",\n     \"do cillum non exercitation et\"\n    ],\n    \"token\": \"voluptate \",\n    \"name\": \"ut\",\n    \"stores\": [\n     {\n      \"_id\": \"id magna Lorem dolor cillum\",\n      \"integration\": \"ullamco voluptate laborum nulla\",\n      \"level\": \"fugiat\",\n      \"uid\": -80188610,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"nisi minim non in mollit\",\n      \"code\": \"Lorem dolore\",\n      \"name\": \"adipi\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"nisi et aliquip reprehenderit laborum\",\n      \"integration\": \"occaecat aliqua\",\n      \"level\": \"culpa occaecat aliquip\",\n      \"uid\": -92636019,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"esse ea\",\n      \"code\": \"occaecat eiusmod qui aute\",\n      \"name\": \"aliquip id ad exercitation\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"ut deserunt tem\",\n      \"integration\": \"et magna\",\n      \"level\": \"adipisicing cillum\",\n      \"uid\": -70847611,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Duis non proident\",\n      \"code\": \"nostrud tempor\",\n      \"name\": \"in labore\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"dolore occaecat\",\n      \"integration\": \"adipisicing aute et sed\",\n      \"level\": \"minim eu\",\n      \"uid\": -36451361,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"aliquip officia deserunt\",\n      \"code\": \"deserunt ut\",\n      \"name\": \"irure\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"velit voluptate cillum\",\n \"page\": {\n  \"type\": \"irure qui\",\n  \"size\": 94330689,\n  \"current\": -87430368,\n  \"has_next\": true,\n  \"item_total\": -83015112,\n  \"next_id\": \"consectetur magna\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "62db135d-95e8-483a-9805-2d9cb15bffed",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1950-08-25T04:23:20.425Z\",\n \"status\": 12449893,\n \"error\": \"officia in reprehenderit dolor\",\n \"exception\": \"deserunt velit consectetur\",\n \"message\": \"consectetur laborum\",\n \"total_time_taken_in_millis\": 4488544,\n \"http_status\": \"506 VARIANT_ALSO_NEGOTIATES\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"id\",\n   \"description\": \"deserunt aliqua\",\n   \"name\": \"dolore sit reprehenderit labore\",\n   \"slug\": \"in fugiat e\",\n   \"meta\": [\n    {\n     \"_id\": \"ulla\",\n     \"name\": \"ea\",\n     \"value\": \"pa\"\n    },\n    {\n     \"_id\": \"eiusmod culpa\",\n     \"name\": \"magna in aute quis est\",\n     \"value\": \"consequat proid\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"eu sunt\",\n    \"integration\": \"ad occaecat mollit\",\n    \"level\": \"labore id sit tempor\",\n    \"uid\": -4269135,\n    \"opted\": false,\n    \"permissions\": [\n     \"aliquip no\",\n     \"eu pariatur aliquip\"\n    ],\n    \"token\": \"aute\",\n    \"name\": \"cillum\",\n    \"stores\": [\n     {\n      \"_id\": \"magna veniam ad\",\n      \"integration\": \"nulla et aliqua ul\",\n      \"level\": \"deserunt aute magna esse fugiat\",\n      \"uid\": 43157543,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"laboris fugiat ex\",\n      \"code\": \"esse velit mollit\",\n      \"name\": \"aliquip Lorem Excepteur\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"et nostrud proident aute\",\n      \"integration\": \"ullamco dolore id\",\n      \"level\": \"consectetur cupidatat\",\n      \"uid\": 33243414,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"aliqua ut\",\n      \"code\": \"officia consequat reprehenderit\",\n      \"name\": \"et nisi sunt ipsum\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"commodo\",\n      \"integration\": \"laborum aute mollit occaecat labore\",\n      \"level\": \"aliquip magna dolore pariatur\",\n      \"uid\": -80428101,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sit est non officia nisi\",\n      \"code\": \"dolore eu Lorem\",\n      \"name\": \"consequat ut\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"commodo esse sint\",\n      \"integration\": \"labore ex dolor\",\n      \"level\": \"laboris voluptate\",\n      \"uid\": 87888061,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"minim\",\n      \"code\": \"sit consectetur\",\n      \"name\": \"dolor occaecat ex fugiat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"veniam sed\",\n    \"integration\": \"mollit quis in\",\n    \"level\": \"cupidatat sint voluptate amet\",\n    \"uid\": 9053350,\n    \"opted\": false,\n    \"permissions\": [\n     \"tempor sunt anim\",\n     \"aliquip ullamco elit dolor\"\n    ],\n    \"token\": \"enim voluptate sunt nostrud culpa\",\n    \"name\": \"dolor deserunt cillum dolo\",\n    \"stores\": [\n     {\n      \"_id\": \"Excepteur commodo\",\n      \"integration\": \"non amet\",\n      \"level\": \"laborum cillum dolor\",\n      \"uid\": -37486823,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"nulla cillum non occaecat\",\n      \"code\": \"eu ut in dolor\",\n      \"name\": \"commodo voluptate in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"commodo dolor fugiat\",\n      \"integration\": \"irure exercitation id\",\n      \"level\": \"adipisicing non laborum\",\n      \"uid\": 52067234,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"commodo laboris enim voluptate\",\n      \"code\": \"nisi dolor enim mollit\",\n      \"name\": \"eiusmod\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"magna quis\",\n      \"integration\": \"voluptate dolore laborum aliquip\",\n      \"level\": \"aliquip consequat minim\",\n      \"uid\": 62521959,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"reprehen\",\n      \"code\": \"Lorem nulla\",\n      \"name\": \"dolor enim nulla\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"proident non id elit\",\n      \"integration\": \"dolore consequat laboris enim\",\n      \"level\": \"in Ut proident\",\n      \"uid\": -21059733,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"irure ipsum proident\",\n      \"code\": \"irure Excepteur non\",\n      \"name\": \"dolore eu dolor non\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"enim\",\n   \"description\": \"non ut\",\n   \"name\": \"Du\",\n   \"slug\": \"velit tempor\",\n   \"meta\": [\n    {\n     \"_id\": \"est sit eiusmod\",\n     \"name\": \"labore magna\",\n     \"value\": \"minim officia commodo n\"\n    },\n    {\n     \"_id\": \"consequat incididunt id\",\n     \"name\": \"pariatur velit voluptate occaecat in\",\n     \"value\": \"sunt exercitation elit\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"magna labore sunt veniam quis\",\n    \"integration\": \"exercitation Excepteur nostrud ex\",\n    \"level\": \"exercitation laboris aliquip occaecat\",\n    \"uid\": -77088420,\n    \"opted\": true,\n    \"permissions\": [\n     \"cillum est quis\",\n     \"dolor in voluptate consequat\"\n    ],\n    \"token\": \"nostrud consequat\",\n    \"name\": \"nisi\",\n    \"stores\": [\n     {\n      \"_id\": \"ea mollit Lorem\",\n      \"integration\": \"Excepteur ea\",\n      \"level\": \"pariatur\",\n      \"uid\": -54542458,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"irure voluptate sint\",\n      \"code\": \"occaecat exercitation commodo\",\n      \"name\": \"enim aliquip ut dolore ullamco\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"officia ut occaecat ea\",\n      \"integration\": \"Lorem\",\n      \"level\": \"commodo Duis reprehenderit labore elit\",\n      \"uid\": 88481554,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"quis dolore magna ut\",\n      \"code\": \"enim amet Excepteur dolore\",\n      \"name\": \"veniam\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"nulla exercitation\",\n      \"integration\": \"fugiat sed Excepteur ea\",\n      \"level\": \"dolore veniam dolor amet\",\n      \"uid\": 95648570,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolor\",\n      \"code\": \"officia sed nostrud ad veniam\",\n      \"name\": \"nulla irure deserunt ullamco qui\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"est sin\",\n      \"integration\": \"minim\",\n      \"level\": \"occaecat Ut adipisicing et\",\n      \"uid\": -17207216,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"amet reprehenderit in\",\n      \"code\": \"eu enim sunt\",\n      \"name\": \"ut sit labore non\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"mollit irure dolore voluptate quis\",\n    \"integration\": \"sit exercitation\",\n    \"level\": \"eu pariatur labore ullamco sed\",\n    \"uid\": -3043960,\n    \"opted\": false,\n    \"permissions\": [\n     \"elit ipsum Excepteur\",\n     \"do cillum non exercitation et\"\n    ],\n    \"token\": \"voluptate \",\n    \"name\": \"ut\",\n    \"stores\": [\n     {\n      \"_id\": \"id magna Lorem dolor cillum\",\n      \"integration\": \"ullamco voluptate laborum nulla\",\n      \"level\": \"fugiat\",\n      \"uid\": -80188610,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"nisi minim non in mollit\",\n      \"code\": \"Lorem dolore\",\n      \"name\": \"adipi\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"nisi et aliquip reprehenderit laborum\",\n      \"integration\": \"occaecat aliqua\",\n      \"level\": \"culpa occaecat aliquip\",\n      \"uid\": -92636019,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"esse ea\",\n      \"code\": \"occaecat eiusmod qui aute\",\n      \"name\": \"aliquip id ad exercitation\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"ut deserunt tem\",\n      \"integration\": \"et magna\",\n      \"level\": \"adipisicing cillum\",\n      \"uid\": -70847611,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Duis non proident\",\n      \"code\": \"nostrud tempor\",\n      \"name\": \"in labore\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"dolore occaecat\",\n      \"integration\": \"adipisicing aute et sed\",\n      \"level\": \"minim eu\",\n      \"uid\": -36451361,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"aliquip officia deserunt\",\n      \"code\": \"deserunt ut\",\n      \"name\": \"irure\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"velit voluptate cillum\",\n \"page\": {\n  \"type\": \"irure qui\",\n  \"size\": 94330689,\n  \"current\": -87430368,\n  \"has_next\": true,\n  \"item_total\": -83015112,\n  \"next_id\": \"consectetur magna\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9e966e5b-9de7-45e1-aab0-2b7551d80a1e",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1950-08-25T04:23:20.425Z\",\n \"status\": 12449893,\n \"error\": \"officia in reprehenderit dolor\",\n \"exception\": \"deserunt velit consectetur\",\n \"message\": \"consectetur laborum\",\n \"total_time_taken_in_millis\": 4488544,\n \"http_status\": \"506 VARIANT_ALSO_NEGOTIATES\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"id\",\n   \"description\": \"deserunt aliqua\",\n   \"name\": \"dolore sit reprehenderit labore\",\n   \"slug\": \"in fugiat e\",\n   \"meta\": [\n    {\n     \"_id\": \"ulla\",\n     \"name\": \"ea\",\n     \"value\": \"pa\"\n    },\n    {\n     \"_id\": \"eiusmod culpa\",\n     \"name\": \"magna in aute quis est\",\n     \"value\": \"consequat proid\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"eu sunt\",\n    \"integration\": \"ad occaecat mollit\",\n    \"level\": \"labore id sit tempor\",\n    \"uid\": -4269135,\n    \"opted\": false,\n    \"permissions\": [\n     \"aliquip no\",\n     \"eu pariatur aliquip\"\n    ],\n    \"token\": \"aute\",\n    \"name\": \"cillum\",\n    \"stores\": [\n     {\n      \"_id\": \"magna veniam ad\",\n      \"integration\": \"nulla et aliqua ul\",\n      \"level\": \"deserunt aute magna esse fugiat\",\n      \"uid\": 43157543,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"laboris fugiat ex\",\n      \"code\": \"esse velit mollit\",\n      \"name\": \"aliquip Lorem Excepteur\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"et nostrud proident aute\",\n      \"integration\": \"ullamco dolore id\",\n      \"level\": \"consectetur cupidatat\",\n      \"uid\": 33243414,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"aliqua ut\",\n      \"code\": \"officia consequat reprehenderit\",\n      \"name\": \"et nisi sunt ipsum\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"commodo\",\n      \"integration\": \"laborum aute mollit occaecat labore\",\n      \"level\": \"aliquip magna dolore pariatur\",\n      \"uid\": -80428101,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sit est non officia nisi\",\n      \"code\": \"dolore eu Lorem\",\n      \"name\": \"consequat ut\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"commodo esse sint\",\n      \"integration\": \"labore ex dolor\",\n      \"level\": \"laboris voluptate\",\n      \"uid\": 87888061,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"minim\",\n      \"code\": \"sit consectetur\",\n      \"name\": \"dolor occaecat ex fugiat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"veniam sed\",\n    \"integration\": \"mollit quis in\",\n    \"level\": \"cupidatat sint voluptate amet\",\n    \"uid\": 9053350,\n    \"opted\": false,\n    \"permissions\": [\n     \"tempor sunt anim\",\n     \"aliquip ullamco elit dolor\"\n    ],\n    \"token\": \"enim voluptate sunt nostrud culpa\",\n    \"name\": \"dolor deserunt cillum dolo\",\n    \"stores\": [\n     {\n      \"_id\": \"Excepteur commodo\",\n      \"integration\": \"non amet\",\n      \"level\": \"laborum cillum dolor\",\n      \"uid\": -37486823,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"nulla cillum non occaecat\",\n      \"code\": \"eu ut in dolor\",\n      \"name\": \"commodo voluptate in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"commodo dolor fugiat\",\n      \"integration\": \"irure exercitation id\",\n      \"level\": \"adipisicing non laborum\",\n      \"uid\": 52067234,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"commodo laboris enim voluptate\",\n      \"code\": \"nisi dolor enim mollit\",\n      \"name\": \"eiusmod\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"magna quis\",\n      \"integration\": \"voluptate dolore laborum aliquip\",\n      \"level\": \"aliquip consequat minim\",\n      \"uid\": 62521959,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"reprehen\",\n      \"code\": \"Lorem nulla\",\n      \"name\": \"dolor enim nulla\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"proident non id elit\",\n      \"integration\": \"dolore consequat laboris enim\",\n      \"level\": \"in Ut proident\",\n      \"uid\": -21059733,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"irure ipsum proident\",\n      \"code\": \"irure Excepteur non\",\n      \"name\": \"dolore eu dolor non\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"enim\",\n   \"description\": \"non ut\",\n   \"name\": \"Du\",\n   \"slug\": \"velit tempor\",\n   \"meta\": [\n    {\n     \"_id\": \"est sit eiusmod\",\n     \"name\": \"labore magna\",\n     \"value\": \"minim officia commodo n\"\n    },\n    {\n     \"_id\": \"consequat incididunt id\",\n     \"name\": \"pariatur velit voluptate occaecat in\",\n     \"value\": \"sunt exercitation elit\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"magna labore sunt veniam quis\",\n    \"integration\": \"exercitation Excepteur nostrud ex\",\n    \"level\": \"exercitation laboris aliquip occaecat\",\n    \"uid\": -77088420,\n    \"opted\": true,\n    \"permissions\": [\n     \"cillum est quis\",\n     \"dolor in voluptate consequat\"\n    ],\n    \"token\": \"nostrud consequat\",\n    \"name\": \"nisi\",\n    \"stores\": [\n     {\n      \"_id\": \"ea mollit Lorem\",\n      \"integration\": \"Excepteur ea\",\n      \"level\": \"pariatur\",\n      \"uid\": -54542458,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"irure voluptate sint\",\n      \"code\": \"occaecat exercitation commodo\",\n      \"name\": \"enim aliquip ut dolore ullamco\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"officia ut occaecat ea\",\n      \"integration\": \"Lorem\",\n      \"level\": \"commodo Duis reprehenderit labore elit\",\n      \"uid\": 88481554,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"quis dolore magna ut\",\n      \"code\": \"enim amet Excepteur dolore\",\n      \"name\": \"veniam\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"nulla exercitation\",\n      \"integration\": \"fugiat sed Excepteur ea\",\n      \"level\": \"dolore veniam dolor amet\",\n      \"uid\": 95648570,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolor\",\n      \"code\": \"officia sed nostrud ad veniam\",\n      \"name\": \"nulla irure deserunt ullamco qui\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"est sin\",\n      \"integration\": \"minim\",\n      \"level\": \"occaecat Ut adipisicing et\",\n      \"uid\": -17207216,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"amet reprehenderit in\",\n      \"code\": \"eu enim sunt\",\n      \"name\": \"ut sit labore non\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"mollit irure dolore voluptate quis\",\n    \"integration\": \"sit exercitation\",\n    \"level\": \"eu pariatur labore ullamco sed\",\n    \"uid\": -3043960,\n    \"opted\": false,\n    \"permissions\": [\n     \"elit ipsum Excepteur\",\n     \"do cillum non exercitation et\"\n    ],\n    \"token\": \"voluptate \",\n    \"name\": \"ut\",\n    \"stores\": [\n     {\n      \"_id\": \"id magna Lorem dolor cillum\",\n      \"integration\": \"ullamco voluptate laborum nulla\",\n      \"level\": \"fugiat\",\n      \"uid\": -80188610,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"nisi minim non in mollit\",\n      \"code\": \"Lorem dolore\",\n      \"name\": \"adipi\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"nisi et aliquip reprehenderit laborum\",\n      \"integration\": \"occaecat aliqua\",\n      \"level\": \"culpa occaecat aliquip\",\n      \"uid\": -92636019,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"esse ea\",\n      \"code\": \"occaecat eiusmod qui aute\",\n      \"name\": \"aliquip id ad exercitation\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"ut deserunt tem\",\n      \"integration\": \"et magna\",\n      \"level\": \"adipisicing cillum\",\n      \"uid\": -70847611,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Duis non proident\",\n      \"code\": \"nostrud tempor\",\n      \"name\": \"in labore\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"dolore occaecat\",\n      \"integration\": \"adipisicing aute et sed\",\n      \"level\": \"minim eu\",\n      \"uid\": -36451361,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"aliquip officia deserunt\",\n      \"code\": \"deserunt ut\",\n      \"name\": \"irure\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"velit voluptate cillum\",\n \"page\": {\n  \"type\": \"irure qui\",\n  \"size\": 94330689,\n  \"current\": -87430368,\n  \"has_next\": true,\n  \"item_total\": -83015112,\n  \"next_id\": \"consectetur magna\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "63304d0b-ac1c-4800-a2a8-f5bc820e5f4b",
          "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
          "request": {
            "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "ff7ba70e-d538-4433-a628-b6d77d5166b5",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2012-10-04T21:23:25.968Z\",\n \"status\": -28009107,\n \"error\": \"incididunt ea\",\n \"exception\": \"magna eu\",\n \"message\": \"exercitation veniam ad\",\n \"total_time_taken_in_millis\": -50765553,\n \"http_status\": \"507 INSUFFICIENT_STORAGE\",\n \"items\": {\n  \"session_id\": \"laboris nostrud occaecat cillum Lorem\",\n  \"error_message\": \"labore eu do\"\n },\n \"payload\": {\n  \"session_id\": \"velit\",\n  \"error_message\": \"ve\"\n },\n \"trace_id\": \"irure veniam minim\",\n \"page\": {\n  \"type\": \"laboris ut culpa magna\",\n  \"size\": 64446864,\n  \"current\": -48547882,\n  \"has_next\": true,\n  \"item_total\": 84140747,\n  \"next_id\": \"nulla sed do commodo\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3406a89c-60f7-4887-afaf-0640a9b06d0a",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2012-10-04T21:23:25.968Z\",\n \"status\": -28009107,\n \"error\": \"incididunt ea\",\n \"exception\": \"magna eu\",\n \"message\": \"exercitation veniam ad\",\n \"total_time_taken_in_millis\": -50765553,\n \"http_status\": \"507 INSUFFICIENT_STORAGE\",\n \"items\": {\n  \"session_id\": \"laboris nostrud occaecat cillum Lorem\",\n  \"error_message\": \"labore eu do\"\n },\n \"payload\": {\n  \"session_id\": \"velit\",\n  \"error_message\": \"ve\"\n },\n \"trace_id\": \"irure veniam minim\",\n \"page\": {\n  \"type\": \"laboris ut culpa magna\",\n  \"size\": 64446864,\n  \"current\": -48547882,\n  \"has_next\": true,\n  \"item_total\": 84140747,\n  \"next_id\": \"nulla sed do commodo\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "00b685a2-26f2-44a0-a5de-fe9cc018eb3e",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2012-10-04T21:23:25.968Z\",\n \"status\": -28009107,\n \"error\": \"incididunt ea\",\n \"exception\": \"magna eu\",\n \"message\": \"exercitation veniam ad\",\n \"total_time_taken_in_millis\": -50765553,\n \"http_status\": \"507 INSUFFICIENT_STORAGE\",\n \"items\": {\n  \"session_id\": \"laboris nostrud occaecat cillum Lorem\",\n  \"error_message\": \"labore eu do\"\n },\n \"payload\": {\n  \"session_id\": \"velit\",\n  \"error_message\": \"ve\"\n },\n \"trace_id\": \"irure veniam minim\",\n \"page\": {\n  \"type\": \"laboris ut culpa magna\",\n  \"size\": 64446864,\n  \"current\": -48547882,\n  \"has_next\": true,\n  \"item_total\": 84140747,\n  \"next_id\": \"nulla sed do commodo\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "53b77273-c376-4794-90ee-cffacf617d16",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "9b5232af-620d-4d0f-b028-66e699cd76cc",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1988-06-19T11:55:58.516Z\",\n \"status\": 29547052,\n \"error\": \"deserunt \",\n \"exception\": \"cillum Excepteur dolor\",\n \"message\": \"nostrud aliquip cillum\",\n \"total_time_taken_in_millis\": 15934446,\n \"http_status\": \"507 INSUFFICIENT_STORAGE\",\n \"items\": {\n  \"company_id\": -26678858,\n  \"integration_data\": {},\n  \"company_name\": \"reprehenderit mollit aliqua\",\n  \"task_details\": {\n   \"type\": -97217084,\n   \"group_list\": [\n    {\n     \"text\": \"cup\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"eiusmod in\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -18023482.868352756,\n   \"safe_stock\": 18686476,\n   \"period_threshold\": 43943137,\n   \"period_threshold_type\": \"WEEKS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"nulla officia pariatur\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"dolore ullamco lab\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"ut labore proident\",\n  \"alias\": \"in Ut Duis\"\n },\n \"payload\": {\n  \"company_id\": -66163376,\n  \"integration_data\": {},\n  \"company_name\": \"sunt fugiat\",\n  \"task_details\": {\n   \"type\": -35257242,\n   \"group_list\": [\n    {\n     \"text\": \"adipisicing ex\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"adipisicing consectetur\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 96256739.85822615,\n   \"safe_stock\": 93465190,\n   \"period_threshold\": -18322563,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"ex laboris mollit magna\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"commodo Duis\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"Duis anim irure ex Ut\",\n  \"alias\": \"cupidatat\"\n },\n \"trace_id\": \"magna ex est \",\n \"page\": {\n  \"type\": \"in consequat\",\n  \"size\": -82880590,\n  \"current\": 80741334,\n  \"has_next\": false,\n  \"item_total\": -27264560,\n  \"next_id\": \"o\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "71c6688a-f8fc-4326-8e0b-e2805013941a",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1988-06-19T11:55:58.516Z\",\n \"status\": 29547052,\n \"error\": \"deserunt \",\n \"exception\": \"cillum Excepteur dolor\",\n \"message\": \"nostrud aliquip cillum\",\n \"total_time_taken_in_millis\": 15934446,\n \"http_status\": \"507 INSUFFICIENT_STORAGE\",\n \"items\": {\n  \"company_id\": -26678858,\n  \"integration_data\": {},\n  \"company_name\": \"reprehenderit mollit aliqua\",\n  \"task_details\": {\n   \"type\": -97217084,\n   \"group_list\": [\n    {\n     \"text\": \"cup\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"eiusmod in\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -18023482.868352756,\n   \"safe_stock\": 18686476,\n   \"period_threshold\": 43943137,\n   \"period_threshold_type\": \"WEEKS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"nulla officia pariatur\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"dolore ullamco lab\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"ut labore proident\",\n  \"alias\": \"in Ut Duis\"\n },\n \"payload\": {\n  \"company_id\": -66163376,\n  \"integration_data\": {},\n  \"company_name\": \"sunt fugiat\",\n  \"task_details\": {\n   \"type\": -35257242,\n   \"group_list\": [\n    {\n     \"text\": \"adipisicing ex\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"adipisicing consectetur\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 96256739.85822615,\n   \"safe_stock\": 93465190,\n   \"period_threshold\": -18322563,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"ex laboris mollit magna\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"commodo Duis\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"Duis anim irure ex Ut\",\n  \"alias\": \"cupidatat\"\n },\n \"trace_id\": \"magna ex est \",\n \"page\": {\n  \"type\": \"in consequat\",\n  \"size\": -82880590,\n  \"current\": 80741334,\n  \"has_next\": false,\n  \"item_total\": -27264560,\n  \"next_id\": \"o\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d26b61f4-0a45-4934-94dc-093f68e17d8b",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1988-06-19T11:55:58.516Z\",\n \"status\": 29547052,\n \"error\": \"deserunt \",\n \"exception\": \"cillum Excepteur dolor\",\n \"message\": \"nostrud aliquip cillum\",\n \"total_time_taken_in_millis\": 15934446,\n \"http_status\": \"507 INSUFFICIENT_STORAGE\",\n \"items\": {\n  \"company_id\": -26678858,\n  \"integration_data\": {},\n  \"company_name\": \"reprehenderit mollit aliqua\",\n  \"task_details\": {\n   \"type\": -97217084,\n   \"group_list\": [\n    {\n     \"text\": \"cup\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"eiusmod in\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -18023482.868352756,\n   \"safe_stock\": 18686476,\n   \"period_threshold\": 43943137,\n   \"period_threshold_type\": \"WEEKS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"nulla officia pariatur\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"dolore ullamco lab\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"ut labore proident\",\n  \"alias\": \"in Ut Duis\"\n },\n \"payload\": {\n  \"company_id\": -66163376,\n  \"integration_data\": {},\n  \"company_name\": \"sunt fugiat\",\n  \"task_details\": {\n   \"type\": -35257242,\n   \"group_list\": [\n    {\n     \"text\": \"adipisicing ex\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"adipisicing consectetur\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 96256739.85822615,\n   \"safe_stock\": 93465190,\n   \"period_threshold\": -18322563,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"ex laboris mollit magna\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"commodo Duis\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"Duis anim irure ex Ut\",\n  \"alias\": \"cupidatat\"\n },\n \"trace_id\": \"magna ex est \",\n \"page\": {\n  \"type\": \"in consequat\",\n  \"size\": -82880590,\n  \"current\": 80741334,\n  \"has_next\": false,\n  \"item_total\": -27264560,\n  \"next_id\": \"o\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "04acf68d-c3e5-4a66-8177-802ccc837e4f",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "36b64e54-ede6-4ae1-a039-13c07b3a33e3",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2017-03-17T08:11:23.516Z\",\n \"status\": 54145969,\n \"error\": \"consecte\",\n \"exception\": \"dolor sit velit enim\",\n \"message\": \"eu Duis sed\",\n \"total_time_taken_in_millis\": 72376414,\n \"http_status\": \"408 REQUEST_TIMEOUT\",\n \"items\": [\n  {\n   \"company_id\": -20976952,\n   \"integration_data\": {},\n   \"company_name\": \"fugiat pariatur laboris\",\n   \"task_details\": {\n    \"type\": -61362482,\n    \"group_list\": [\n     {\n      \"text\": \"deserunt Lorem\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in quis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -34887034.41383634,\n    \"safe_stock\": -51007168,\n    \"period_threshold\": 18025221,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"incididunt qui\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"adipisicing\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"anim sit voluptate in\",\n   \"alias\": \"consequat quis dolore\"\n  },\n  {\n   \"company_id\": 27202999,\n   \"integration_data\": {},\n   \"company_name\": \"anim in\",\n   \"task_details\": {\n    \"type\": -13329410,\n    \"group_list\": [\n     {\n      \"text\": \"in quis laboris\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cupidatat Duis sunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -9332947.500627816,\n    \"safe_stock\": -48755538,\n    \"period_threshold\": -22142139,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"qui adipisicing est\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proident esse\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"magna\",\n   \"alias\": \"officia eu do\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -61121361,\n   \"integration_data\": {},\n   \"company_name\": \"deserunt\",\n   \"task_details\": {\n    \"type\": -38137962,\n    \"group_list\": [\n     {\n      \"text\": \"sit in do\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"enim non\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 52912894.77338123,\n    \"safe_stock\": -38446494,\n    \"period_threshold\": 82030328,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"tempor ullamco elit anim la\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut enim occaecat do\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"laboris magna voluptate\",\n   \"alias\": \"nulla sint\"\n  },\n  {\n   \"company_id\": 81742253,\n   \"integration_data\": {},\n   \"company_name\": \"quis dolore incididunt qui dolor\",\n   \"task_details\": {\n    \"type\": 41634834,\n    \"group_list\": [\n     {\n      \"text\": \"fugiat enim cillum pariatur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ex voluptate\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -63103093.69100149,\n    \"safe_stock\": -43763064,\n    \"period_threshold\": -74979183,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sunt n\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ex fugiat Ut anim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Lorem\",\n   \"alias\": \"enim est\"\n  }\n ],\n \"trace_id\": \"co\",\n \"page\": {\n  \"type\": \"enim dolore velit\",\n  \"size\": -20372362,\n  \"current\": -96166770,\n  \"has_next\": true,\n  \"item_total\": 86551564,\n  \"next_id\": \"tempor dolore qui aute cillum\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "815e7cf2-e44a-4dde-a6ce-6d666558c780",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2014-04-19T16:58:51.458Z\",\n \"status\": 44069198,\n \"error\": \"consequat est adipisicing commodo\",\n \"exception\": \"ex sit mollit dolore\",\n \"message\": \"in eu\",\n \"total_time_taken_in_millis\": 67707194,\n \"http_status\": \"511 NETWORK_AUTHENTICATION_REQUIRED\",\n \"items\": [\n  {\n   \"company_id\": -48872915,\n   \"integration_data\": {},\n   \"company_name\": \"do in in sunt\",\n   \"task_details\": {\n    \"type\": 81476974,\n    \"group_list\": [\n     {\n      \"text\": \"Ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute fugiat non ullamco\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 50617184.84626049,\n    \"safe_stock\": -78114788,\n    \"period_threshold\": 51081163,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"velit ullamco\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laboris in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"adipisicing reprehenderit laborum elit\",\n   \"alias\": \"enim pariatur quis cillum\"\n  },\n  {\n   \"company_id\": -88589352,\n   \"integration_data\": {},\n   \"company_name\": \"eiusmod dolor elit commodo incididunt\",\n   \"task_details\": {\n    \"type\": 42391495,\n    \"group_list\": [\n     {\n      \"text\": \"minim id sint eu dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"do cupidatat anim quis dolor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -34324128.59442069,\n    \"safe_stock\": -73449322,\n    \"period_threshold\": 42515349,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"et incididunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eu ut elit mollit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sint ad aliqua\",\n   \"alias\": \"et dolor pariatur\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -45336389,\n   \"integration_data\": {},\n   \"company_name\": \"nisi enim anim mollit\",\n   \"task_details\": {\n    \"type\": 84715052,\n    \"group_list\": [\n     {\n      \"text\": \"non quis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Exc\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -40583402.345678546,\n    \"safe_stock\": -41247954,\n    \"period_threshold\": 33191608,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"id irure\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proident deserunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ad sunt\",\n   \"alias\": \"in\"\n  },\n  {\n   \"company_id\": 64256258,\n   \"integration_data\": {},\n   \"company_name\": \"laboris laborum\",\n   \"task_details\": {\n    \"type\": -8690807,\n    \"group_list\": [\n     {\n      \"text\": \"occaecat exercitation\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"veniam qui exercit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -8331281.863661483,\n    \"safe_stock\": 30265763,\n    \"period_threshold\": -26079102,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"fugiat incididunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"non deserunt sit velit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"consectetur\",\n   \"alias\": \"et aliquip\"\n  }\n ],\n \"trace_id\": \"cillum Ut deserunt esse aute\",\n \"page\": {\n  \"type\": \"nisi Ut occaecat ad aute\",\n  \"size\": 44814077,\n  \"current\": 19989264,\n  \"has_next\": true,\n  \"item_total\": -47923219,\n  \"next_id\": \"Ut esse\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "4d1069f6-d5fb-47a5-b309-a049f2d8fb0c",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2014-04-19T16:58:51.458Z\",\n \"status\": 44069198,\n \"error\": \"consequat est adipisicing commodo\",\n \"exception\": \"ex sit mollit dolore\",\n \"message\": \"in eu\",\n \"total_time_taken_in_millis\": 67707194,\n \"http_status\": \"511 NETWORK_AUTHENTICATION_REQUIRED\",\n \"items\": [\n  {\n   \"company_id\": -48872915,\n   \"integration_data\": {},\n   \"company_name\": \"do in in sunt\",\n   \"task_details\": {\n    \"type\": 81476974,\n    \"group_list\": [\n     {\n      \"text\": \"Ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute fugiat non ullamco\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 50617184.84626049,\n    \"safe_stock\": -78114788,\n    \"period_threshold\": 51081163,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"velit ullamco\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laboris in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"adipisicing reprehenderit laborum elit\",\n   \"alias\": \"enim pariatur quis cillum\"\n  },\n  {\n   \"company_id\": -88589352,\n   \"integration_data\": {},\n   \"company_name\": \"eiusmod dolor elit commodo incididunt\",\n   \"task_details\": {\n    \"type\": 42391495,\n    \"group_list\": [\n     {\n      \"text\": \"minim id sint eu dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"do cupidatat anim quis dolor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -34324128.59442069,\n    \"safe_stock\": -73449322,\n    \"period_threshold\": 42515349,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"et incididunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eu ut elit mollit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sint ad aliqua\",\n   \"alias\": \"et dolor pariatur\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -45336389,\n   \"integration_data\": {},\n   \"company_name\": \"nisi enim anim mollit\",\n   \"task_details\": {\n    \"type\": 84715052,\n    \"group_list\": [\n     {\n      \"text\": \"non quis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Exc\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -40583402.345678546,\n    \"safe_stock\": -41247954,\n    \"period_threshold\": 33191608,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"id irure\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proident deserunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ad sunt\",\n   \"alias\": \"in\"\n  },\n  {\n   \"company_id\": 64256258,\n   \"integration_data\": {},\n   \"company_name\": \"laboris laborum\",\n   \"task_details\": {\n    \"type\": -8690807,\n    \"group_list\": [\n     {\n      \"text\": \"occaecat exercitation\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"veniam qui exercit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -8331281.863661483,\n    \"safe_stock\": 30265763,\n    \"period_threshold\": -26079102,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"fugiat incididunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"non deserunt sit velit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"consectetur\",\n   \"alias\": \"et aliquip\"\n  }\n ],\n \"trace_id\": \"cillum Ut deserunt esse aute\",\n \"page\": {\n  \"type\": \"nisi Ut occaecat ad aute\",\n  \"size\": 44814077,\n  \"current\": 19989264,\n  \"has_next\": true,\n  \"item_total\": -47923219,\n  \"next_id\": \"Ut esse\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "e3ab05e5-5e7f-41be-899b-73efd88190b6",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "a537a085-12ac-4bf7-9bfd-db706050e6c9",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2006-05-24T21:22:40.888Z\",\n \"status\": 13583407,\n \"error\": \"exercitation enim laboris sunt cillum\",\n \"exception\": \"dolore tempor s\",\n \"message\": \"Lorem dolore laborum in\",\n \"total_time_taken_in_millis\": -63705685,\n \"http_status\": \"302 MOVED_TEMPORARILY\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"magna est irure nulla\",\n \"page\": {\n  \"type\": \"ad laborum aliqua dolore\",\n  \"size\": -46446326,\n  \"current\": -95758418,\n  \"has_next\": false,\n  \"item_total\": -61354771,\n  \"next_id\": \"cupidatat\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "41f3d5ba-af6f-48cc-8c75-bdb0a29a5902",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2006-05-24T21:22:40.888Z\",\n \"status\": 13583407,\n \"error\": \"exercitation enim laboris sunt cillum\",\n \"exception\": \"dolore tempor s\",\n \"message\": \"Lorem dolore laborum in\",\n \"total_time_taken_in_millis\": -63705685,\n \"http_status\": \"302 MOVED_TEMPORARILY\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"magna est irure nulla\",\n \"page\": {\n  \"type\": \"ad laborum aliqua dolore\",\n  \"size\": -46446326,\n  \"current\": -95758418,\n  \"has_next\": false,\n  \"item_total\": -61354771,\n  \"next_id\": \"cupidatat\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c98a18e5-c45c-4f51-8bac-dcceb9137bb7",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2006-05-24T21:22:40.888Z\",\n \"status\": 13583407,\n \"error\": \"exercitation enim laboris sunt cillum\",\n \"exception\": \"dolore tempor s\",\n \"message\": \"Lorem dolore laborum in\",\n \"total_time_taken_in_millis\": -63705685,\n \"http_status\": \"302 MOVED_TEMPORARILY\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"magna est irure nulla\",\n \"page\": {\n  \"type\": \"ad laborum aliqua dolore\",\n  \"size\": -46446326,\n  \"current\": -95758418,\n  \"has_next\": false,\n  \"item_total\": -61354771,\n  \"next_id\": \"cupidatat\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "1104d062-3ded-4798-b970-5de1146e4645",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "42bf4442-de69-460e-afca-1af0a2c93dcc",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1980-01-21T06:28:09.684Z\",\n \"status\": 81060727,\n \"error\": \"adipisicing est minim \",\n \"exception\": \"ipsum tempor Ut\",\n \"message\": \"elit\",\n \"total_time_taken_in_millis\": -76390631,\n \"http_status\": \"305 USE_PROXY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"cillum laborum pariatur\",\n \"page\": {\n  \"type\": \"officia deserunt cupidatat\",\n  \"size\": 31608454,\n  \"current\": -53079506,\n  \"has_next\": true,\n  \"item_total\": -88989362,\n  \"next_id\": \"sed magna\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c1bad23a-94a1-48da-acc8-9ce0ca2a7e7e",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1980-01-21T06:28:09.684Z\",\n \"status\": 81060727,\n \"error\": \"adipisicing est minim \",\n \"exception\": \"ipsum tempor Ut\",\n \"message\": \"elit\",\n \"total_time_taken_in_millis\": -76390631,\n \"http_status\": \"305 USE_PROXY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"cillum laborum pariatur\",\n \"page\": {\n  \"type\": \"officia deserunt cupidatat\",\n  \"size\": 31608454,\n  \"current\": -53079506,\n  \"has_next\": true,\n  \"item_total\": -88989362,\n  \"next_id\": \"sed magna\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c9670047-b11c-48eb-8d5e-ec25a9df7595",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1980-01-21T06:28:09.684Z\",\n \"status\": 81060727,\n \"error\": \"adipisicing est minim \",\n \"exception\": \"ipsum tempor Ut\",\n \"message\": \"elit\",\n \"total_time_taken_in_millis\": -76390631,\n \"http_status\": \"305 USE_PROXY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"cillum laborum pariatur\",\n \"page\": {\n  \"type\": \"officia deserunt cupidatat\",\n  \"size\": 31608454,\n  \"current\": -53079506,\n  \"has_next\": true,\n  \"item_total\": -88989362,\n  \"next_id\": \"sed magna\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2560403c-d724-4fa3-9b53-2ef28bb1f3fe",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1980-01-21T06:28:09.684Z\",\n \"status\": 81060727,\n \"error\": \"adipisicing est minim \",\n \"exception\": \"ipsum tempor Ut\",\n \"message\": \"elit\",\n \"total_time_taken_in_millis\": -76390631,\n \"http_status\": \"305 USE_PROXY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"cillum laborum pariatur\",\n \"page\": {\n  \"type\": \"officia deserunt cupidatat\",\n  \"size\": 31608454,\n  \"current\": -53079506,\n  \"has_next\": true,\n  \"item_total\": -88989362,\n  \"next_id\": \"sed magna\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3d751c3a-01ad-4d4e-9e13-267916264e33",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1980-01-21T06:28:09.684Z\",\n \"status\": 81060727,\n \"error\": \"adipisicing est minim \",\n \"exception\": \"ipsum tempor Ut\",\n \"message\": \"elit\",\n \"total_time_taken_in_millis\": -76390631,\n \"http_status\": \"305 USE_PROXY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"cillum laborum pariatur\",\n \"page\": {\n  \"type\": \"officia deserunt cupidatat\",\n  \"size\": 31608454,\n  \"current\": -53079506,\n  \"has_next\": true,\n  \"item_total\": -88989362,\n  \"next_id\": \"sed magna\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.tiraz5.de"
    }
  ],
  "info": {
    "_postman_id": "73a52fc5-7390-4452-82f7-be8bda77b512",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
