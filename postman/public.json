{
  "item": [
    {
      "id": "38db2c88-d40b-4e82-aa65-bae4d028c4f2",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "3e0c1c2d-970c-4d66-bdb9-425b5b702acf",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "22274e03-0911-413a-b040-b735043c09da",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "occaecat amet incididunt officia enim",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "8ae548a0-71e0-4a53-b1b9-e153659779cc",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "occaecat amet incididunt officia enim",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "0dd483f1-b9f6-4a0f-96e3-a28845997f4e",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "occaecat amet incididunt officia enim",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "0b9a13e9-6194-42e9-92a6-645631627cf7",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "79f11776-4a58-49d8-a4e4-5b355151929c",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "78607d0b-4790-43a7-90d2-4c42ec4b9d72",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "4196b3af-1332-416d-b1a6-f64b7431c580",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "6d807edd-6b37-4a8c-b18f-3f98a44b8206",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 59730792,\n   \"event_name\": \"qui sint nostrud\",\n   \"event_type\": \"do aute\",\n   \"event_category\": \"exercitation fugiat aliqua et\",\n   \"version\": \"id voluptate\",\n   \"display_name\": \"consectetur aliquip\",\n   \"description\": \"elit dolore aliquip\",\n   \"created_on\": \"et\"\n  },\n  {\n   \"id\": 27217612,\n   \"event_name\": \"anim\",\n   \"event_type\": \"magna quis enim aute\",\n   \"event_category\": \"elit pariatur do Lorem occaecat\",\n   \"version\": \"cupidatat laboris ut qui\",\n   \"display_name\": \"minim Lorem\",\n   \"description\": \"id sed esse dolore Ut\",\n   \"created_on\": \"aliqua aute ea\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "f990f5d4-bc6b-4ce9-811a-9df18bc6ab3c",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "b1aa8ba7-ff24-475d-a735-fb718f5472e6",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 48385453,\n   \"event_name\": \"ea amet nostrud quis\",\n   \"event_type\": \"dolor eiusmod et\",\n   \"event_category\": \"laboris irure\",\n   \"version\": \"labore fugiat exercitation incididunt ex\",\n   \"display_name\": \"nisi ut nostrud\",\n   \"description\": \"ut aute voluptate\",\n   \"created_on\": \"officia laborum\"\n  },\n  {\n   \"id\": -18603700,\n   \"event_name\": \"ad aliqua cillum qui\",\n   \"event_type\": \"ut incididunt ad\",\n   \"event_category\": \"culpa non exercitation laborum\",\n   \"version\": \"eu veniam\",\n   \"display_name\": \"eu aliquip nulla ut in\",\n   \"description\": \"in tempor do magna aute\",\n   \"created_on\": \"id sunt deserunt dolor\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "af600316-6149-4bca-aec0-01b979178900",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "cb38fe6e-380e-4d71-9cd3-c9585c9789d1",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "131b2193-213f-45a8-8b01-0fadec5e0fbc",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2016-11-10T07:45:44.111Z\",\n \"status\": 11557250,\n \"error\": \"sunt ullamco quis nulla irure\",\n \"exception\": \"esse consectetur fugiat sed cillum\",\n \"message\": \"dolor culpa laborum\",\n \"total_time_taken_in_millis\": 14482253,\n \"http_status\": \"402 PAYMENT_REQUIRED\",\n \"items\": [\n  {\n   \"company_id\": 88733928,\n   \"integration_data\": {},\n   \"company_name\": \"sit dolore commodo ex\",\n   \"task_details\": {\n    \"type\": -14358432,\n    \"group_list\": [\n     {\n      \"text\": \"sed irure incididunt deserunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in ullamco mollit aliqua cupidatat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 51548372.77688435,\n    \"safe_stock\": 82346586,\n    \"period_threshold\": -81704916,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"cupidatat sit sed eli\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut laborum ex aliquip quis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"pariatur exercitation reprehenderit Duis\",\n   \"alias\": \"Lorem magna mollit\"\n  },\n  {\n   \"company_id\": 13129040,\n   \"integration_data\": {},\n   \"company_name\": \"nulla dolore in sint\",\n   \"task_details\": {\n    \"type\": 75472876,\n    \"group_list\": [\n     {\n      \"text\": \"esse occaecat exercitation\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"commodo irure\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 40270630.7345539,\n    \"safe_stock\": 68936878,\n    \"period_threshold\": 10542974,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"amet dolore irure reprehenderit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cupidatat ex et fu\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ipsum eiusmod quis aute\",\n   \"alias\": \"magna commod\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 50926834,\n   \"integration_data\": {},\n   \"company_name\": \"dolore\",\n   \"task_details\": {\n    \"type\": -56099981,\n    \"group_list\": [\n     {\n      \"text\": \"ex dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -41848073.783391505,\n    \"safe_stock\": -16892222,\n    \"period_threshold\": 79877498,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ut labore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ea nostrud mollit dolor magna\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aliqui\",\n   \"alias\": \"ut\"\n  },\n  {\n   \"company_id\": 94553577,\n   \"integration_data\": {},\n   \"company_name\": \"exercitation ad laborum irure\",\n   \"task_details\": {\n    \"type\": -18367405,\n    \"group_list\": [\n     {\n      \"text\": \"ad officia\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ea commodo\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 51427814.13586405,\n    \"safe_stock\": -36230272,\n    \"period_threshold\": -229547,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"veniam enim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"minim in in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sit aute commodo\",\n   \"alias\": \"tempor ut aliquip eiusmod\"\n  }\n ],\n \"trace_id\": \"Lorem voluptate tempor\",\n \"page\": {\n  \"type\": \"esse labore nisi velit\",\n  \"size\": -18972260,\n  \"current\": 92478906,\n  \"has_next\": true,\n  \"item_total\": -26703800,\n  \"next_id\": \"minim\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "494e7301-e0b3-4d7f-8369-8a81b2d8202f",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1956-04-01T02:51:17.562Z\",\n \"status\": -1377988,\n \"error\": \"ullamco nisi in\",\n \"exception\": \"ipsum id\",\n \"message\": \"Ut laborum aute enim sint\",\n \"total_time_taken_in_millis\": 94506977,\n \"http_status\": \"205 RESET_CONTENT\",\n \"items\": [\n  {\n   \"company_id\": -86863164,\n   \"integration_data\": {},\n   \"company_name\": \"nulla elit aliqua irure qui\",\n   \"task_details\": {\n    \"type\": -98565290,\n    \"group_list\": [\n     {\n      \"text\": \"aliqua\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sunt sint\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -78759761.11346361,\n    \"safe_stock\": -46609701,\n    \"period_threshold\": 19957604,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"tempor anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"esse tempor veniam dolor anim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"consectetur esse laborum Lorem\",\n   \"alias\": \"elit aute dolor dol\"\n  },\n  {\n   \"company_id\": -38543091,\n   \"integration_data\": {},\n   \"company_name\": \"non quis dolor\",\n   \"task_details\": {\n    \"type\": -45644152,\n    \"group_list\": [\n     {\n      \"text\": \"pariatur dolore est in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"tempor ut ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -7609794.0661635995,\n    \"safe_stock\": -70573796,\n    \"period_threshold\": 25524030,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"exercitation sint laborum amet in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ipsum veniam qui\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"eu dolore enim\",\n   \"alias\": \"eiusmod tempor\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 4442409,\n   \"integration_data\": {},\n   \"company_name\": \"laborum c\",\n   \"task_details\": {\n    \"type\": -42407084,\n    \"group_list\": [\n     {\n      \"text\": \"dolore ad ex quis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Excepteur irure dolor ullamco\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 29030288.79728189,\n    \"safe_stock\": -79922984,\n    \"period_threshold\": 50520790,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"irure\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliquip eu enim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"quis sunt\",\n   \"alias\": \"aliqua adipisicing non do\"\n  },\n  {\n   \"company_id\": -70941911,\n   \"integration_data\": {},\n   \"company_name\": \"magna cupidatat\",\n   \"task_details\": {\n    \"type\": -61704092,\n    \"group_list\": [\n     {\n      \"text\": \"officia consequat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cupidatat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -82389381.13325483,\n    \"safe_stock\": -23197304,\n    \"period_threshold\": -64922065,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"velit dolor fu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"commodo Excepteur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"mollit eiusmod qui anim\",\n   \"alias\": \"sunt adipisicing ipsum dolor\"\n  }\n ],\n \"trace_id\": \"commodo Ut et\",\n \"page\": {\n  \"type\": \"cillum ex minim veniam\",\n  \"size\": -55512819,\n  \"current\": -67186344,\n  \"has_next\": true,\n  \"item_total\": -70798267,\n  \"next_id\": \"dolore laboris pariatur consectetur\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5a50f954-78ed-42fc-85bf-9b12e8b948ea",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1956-04-01T02:51:17.562Z\",\n \"status\": -1377988,\n \"error\": \"ullamco nisi in\",\n \"exception\": \"ipsum id\",\n \"message\": \"Ut laborum aute enim sint\",\n \"total_time_taken_in_millis\": 94506977,\n \"http_status\": \"205 RESET_CONTENT\",\n \"items\": [\n  {\n   \"company_id\": -86863164,\n   \"integration_data\": {},\n   \"company_name\": \"nulla elit aliqua irure qui\",\n   \"task_details\": {\n    \"type\": -98565290,\n    \"group_list\": [\n     {\n      \"text\": \"aliqua\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sunt sint\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -78759761.11346361,\n    \"safe_stock\": -46609701,\n    \"period_threshold\": 19957604,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"tempor anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"esse tempor veniam dolor anim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"consectetur esse laborum Lorem\",\n   \"alias\": \"elit aute dolor dol\"\n  },\n  {\n   \"company_id\": -38543091,\n   \"integration_data\": {},\n   \"company_name\": \"non quis dolor\",\n   \"task_details\": {\n    \"type\": -45644152,\n    \"group_list\": [\n     {\n      \"text\": \"pariatur dolore est in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"tempor ut ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -7609794.0661635995,\n    \"safe_stock\": -70573796,\n    \"period_threshold\": 25524030,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"exercitation sint laborum amet in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ipsum veniam qui\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"eu dolore enim\",\n   \"alias\": \"eiusmod tempor\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 4442409,\n   \"integration_data\": {},\n   \"company_name\": \"laborum c\",\n   \"task_details\": {\n    \"type\": -42407084,\n    \"group_list\": [\n     {\n      \"text\": \"dolore ad ex quis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Excepteur irure dolor ullamco\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 29030288.79728189,\n    \"safe_stock\": -79922984,\n    \"period_threshold\": 50520790,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"irure\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliquip eu enim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"quis sunt\",\n   \"alias\": \"aliqua adipisicing non do\"\n  },\n  {\n   \"company_id\": -70941911,\n   \"integration_data\": {},\n   \"company_name\": \"magna cupidatat\",\n   \"task_details\": {\n    \"type\": -61704092,\n    \"group_list\": [\n     {\n      \"text\": \"officia consequat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cupidatat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -82389381.13325483,\n    \"safe_stock\": -23197304,\n    \"period_threshold\": -64922065,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"velit dolor fu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"commodo Excepteur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"mollit eiusmod qui anim\",\n   \"alias\": \"sunt adipisicing ipsum dolor\"\n  }\n ],\n \"trace_id\": \"commodo Ut et\",\n \"page\": {\n  \"type\": \"cillum ex minim veniam\",\n  \"size\": -55512819,\n  \"current\": -67186344,\n  \"has_next\": true,\n  \"item_total\": -70798267,\n  \"next_id\": \"dolore laboris pariatur consectetur\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "e83509e3-de92-4442-8d96-2a6f38932ea5",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "43db826f-075e-4e2d-ab76-ca223cecf021",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1964-08-13T19:53:14.624Z\",\n \"status\": 69654248,\n \"error\": \"ea nisi\",\n \"exception\": \"aliqua\",\n \"message\": \"elit quis anim\",\n \"total_time_taken_in_millis\": 66761791,\n \"http_status\": \"406 NOT_ACCEPTABLE\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"in elit nostrud occaecat\",\n \"page\": {\n  \"type\": \"est dolore eiusmod\",\n  \"size\": -14082728,\n  \"current\": 29098539,\n  \"has_next\": true,\n  \"item_total\": -34583066,\n  \"next_id\": \"consectetur\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "74205b48-c6ea-4358-a0d4-40f254f4369e",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1964-08-13T19:53:14.624Z\",\n \"status\": 69654248,\n \"error\": \"ea nisi\",\n \"exception\": \"aliqua\",\n \"message\": \"elit quis anim\",\n \"total_time_taken_in_millis\": 66761791,\n \"http_status\": \"406 NOT_ACCEPTABLE\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"in elit nostrud occaecat\",\n \"page\": {\n  \"type\": \"est dolore eiusmod\",\n  \"size\": -14082728,\n  \"current\": 29098539,\n  \"has_next\": true,\n  \"item_total\": -34583066,\n  \"next_id\": \"consectetur\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "67213c8d-8c33-415f-8182-55b501e37f75",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1964-08-13T19:53:14.624Z\",\n \"status\": 69654248,\n \"error\": \"ea nisi\",\n \"exception\": \"aliqua\",\n \"message\": \"elit quis anim\",\n \"total_time_taken_in_millis\": 66761791,\n \"http_status\": \"406 NOT_ACCEPTABLE\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"in elit nostrud occaecat\",\n \"page\": {\n  \"type\": \"est dolore eiusmod\",\n  \"size\": -14082728,\n  \"current\": 29098539,\n  \"has_next\": true,\n  \"item_total\": -34583066,\n  \"next_id\": \"consectetur\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "d11c59d3-6d53-4c21-a5d4-df5467485bb8",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "a4cf837c-9bc2-47c9-8f70-843f5c155fb0",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1974-01-08T11:45:46.321Z\",\n \"status\": 16354472,\n \"error\": \"mol\",\n \"exception\": \"paria\",\n \"message\": \"irure in\",\n \"total_time_taken_in_millis\": 20971811,\n \"http_status\": \"401 UNAUTHORIZED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"aliquip id\",\n \"page\": {\n  \"type\": \"do commodo cillum in qui\",\n  \"size\": -41171996,\n  \"current\": 35043215,\n  \"has_next\": true,\n  \"item_total\": -87949423,\n  \"next_id\": \"consectetur pariatur\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a025f5b6-57af-4080-950d-f9c7fd63a922",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1974-01-08T11:45:46.321Z\",\n \"status\": 16354472,\n \"error\": \"mol\",\n \"exception\": \"paria\",\n \"message\": \"irure in\",\n \"total_time_taken_in_millis\": 20971811,\n \"http_status\": \"401 UNAUTHORIZED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"aliquip id\",\n \"page\": {\n  \"type\": \"do commodo cillum in qui\",\n  \"size\": -41171996,\n  \"current\": 35043215,\n  \"has_next\": true,\n  \"item_total\": -87949423,\n  \"next_id\": \"consectetur pariatur\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e8948874-f82b-4a53-b521-62accf700ea8",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1974-01-08T11:45:46.321Z\",\n \"status\": 16354472,\n \"error\": \"mol\",\n \"exception\": \"paria\",\n \"message\": \"irure in\",\n \"total_time_taken_in_millis\": 20971811,\n \"http_status\": \"401 UNAUTHORIZED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"aliquip id\",\n \"page\": {\n  \"type\": \"do commodo cillum in qui\",\n  \"size\": -41171996,\n  \"current\": 35043215,\n  \"has_next\": true,\n  \"item_total\": -87949423,\n  \"next_id\": \"consectetur pariatur\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9e681b6f-16ee-487e-81f0-0123e3ea9115",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1974-01-08T11:45:46.321Z\",\n \"status\": 16354472,\n \"error\": \"mol\",\n \"exception\": \"paria\",\n \"message\": \"irure in\",\n \"total_time_taken_in_millis\": 20971811,\n \"http_status\": \"401 UNAUTHORIZED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"aliquip id\",\n \"page\": {\n  \"type\": \"do commodo cillum in qui\",\n  \"size\": -41171996,\n  \"current\": 35043215,\n  \"has_next\": true,\n  \"item_total\": -87949423,\n  \"next_id\": \"consectetur pariatur\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b5f51003-cf6b-4493-b24a-2114c46579f4",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1974-01-08T11:45:46.321Z\",\n \"status\": 16354472,\n \"error\": \"mol\",\n \"exception\": \"paria\",\n \"message\": \"irure in\",\n \"total_time_taken_in_millis\": 20971811,\n \"http_status\": \"401 UNAUTHORIZED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"aliquip id\",\n \"page\": {\n  \"type\": \"do commodo cillum in qui\",\n  \"size\": -41171996,\n  \"current\": 35043215,\n  \"has_next\": true,\n  \"item_total\": -87949423,\n  \"next_id\": \"consectetur pariatur\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx0.de"
    }
  ],
  "info": {
    "_postman_id": "5a8719a5-0eb2-4d1e-a216-5aa02fc0c027",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
