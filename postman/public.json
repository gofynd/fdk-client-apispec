{
  "item": [
    {
      "id": "b8a9f5af-f49c-44f0-b069-5808ae77cda5",
      "name": "Billing",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "878dbc8c-a8e2-4a4a-88d4-dd9dfa719e1f",
          "name": "getStandardPlans | Get Standard/Public Plans",
          "request": {
            "name": "getStandardPlans | Get Standard/Public Plans",
            "description": {
              "content": "Get Standard/Public Plans.\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "public",
                "billing",
                "v1.0",
                "plan",
                "detailed-list"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "platform",
                  "value": "<string>",
                  "description": "(Required) The type of platform for which plans are requested."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "5a192f78-ac61-4b36-aa31-3f31c3720002",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform",
                      "value": "mobile/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"plans\": [\n    {\n      \"recurring\": {\n        \"interval\": \"month\",\n        \"interval_count\": 3\n      },\n      \"is_trial_plan\": true,\n      \"plan_group\": \"default\",\n      \"tag_lines\": [\n        \"This is 2020won trial plan\",\n        \"This is 2020won trial plan\"\n      ],\n      \"currency\": \"INR\",\n      \"is_active\": true,\n      \"is_visible\": false,\n      \"trial_period\": 30,\n      \"addons\": [\n        \"dolore Ut\",\n        \"pariatur do veniam magna\"\n      ],\n      \"tags\": [\n        \"dolor tempor non Excepteur es\",\n        \"sit pariatur quis\"\n      ],\n      \"type\": \"public\",\n      \"country\": \"IN\",\n      \"_id\": \"5f0dcd866173cb003706098f\",\n      \"name\": \"30 day Trial\",\n      \"description\": \"30 day Trial\",\n      \"amount\": 0,\n      \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n      \"created_at\": \"2020-07-14T15:21:42.959Z\",\n      \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n    },\n    {\n      \"recurring\": {\n        \"interval\": \"month\",\n        \"interval_count\": 3\n      },\n      \"is_trial_plan\": true,\n      \"plan_group\": \"default\",\n      \"tag_lines\": [\n        \"This is 2020won trial plan\",\n        \"This is 2020won trial plan\"\n      ],\n      \"currency\": \"INR\",\n      \"is_active\": true,\n      \"is_visible\": false,\n      \"trial_period\": 30,\n      \"addons\": [\n        \"non proident\",\n        \"ullamco aliquip aliqua\"\n      ],\n      \"tags\": [\n        \"non ull\",\n        \"amet nisi\"\n      ],\n      \"type\": \"public\",\n      \"country\": \"IN\",\n      \"_id\": \"5f0dcd866173cb003706098f\",\n      \"name\": \"30 day Trial\",\n      \"description\": \"30 day Trial\",\n      \"amount\": 0,\n      \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n      \"created_at\": \"2020-07-14T15:21:42.959Z\",\n      \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n    }\n  ],\n  \"trial_plan\": {\n    \"recurring\": {\n      \"interval\": \"month\",\n      \"interval_count\": 3\n    },\n    \"is_trial_plan\": true,\n    \"plan_group\": \"default\",\n    \"tag_lines\": [\n      \"This is 2020won trial plan\",\n      \"This is 2020won trial plan\"\n    ],\n    \"currency\": \"INR\",\n    \"is_active\": true,\n    \"is_visible\": false,\n    \"trial_period\": 30,\n    \"addons\": [\n      \"Duis cupidatat ex pariatur\",\n      \"enim commodo\"\n    ],\n    \"tags\": [\n      \"\",\n      \"deserunt commodo\"\n    ],\n    \"type\": \"public\",\n    \"country\": \"IN\",\n    \"_id\": \"5f0dcd866173cb003706098f\",\n    \"name\": \"30 day Trial\",\n    \"description\": \"30 day Trial\",\n    \"amount\": 0,\n    \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n    \"created_at\": \"2020-07-14T15:21:42.959Z\",\n    \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n  },\n  \"component_groups\": [\n    \"Key Features\",\n    \"Key Features\"\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a75e220e-4a9b-4ee3-b8f9-0711b473a61c",
              "name": "Resource not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform",
                      "value": "mobile/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Reason is required\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3fb5ebfa-4a67-4645-8e09-cafd7e5b30bd",
              "name": "Internal server error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform",
                      "value": "mobile/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Opps something went wrong !!\",\n  \"code\": \"INTERNAL_SERVER_ERROR\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "e9a5ead6-21f3-41f4-bcb5-0884e32341f8",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "25831253-bacf-4a2f-9024-33c360945714",
          "name": "searchApplication | Search application",
          "request": {
            "name": "searchApplication | Search application",
            "description": {
              "content": "Provide application name or domain url.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "fad8e841-6018-4ecb-9529-9a3c0731ef70",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "est aute lab",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"application\": {\n    \"website\": {\n      \"enabled\": true,\n      \"basepath\": \"/\"\n    },\n    \"cors\": {\n      \"domains\": []\n    },\n    \"auth\": {\n      \"enabled\": true\n    },\n    \"description\": \"test\",\n    \"channel_type\": \"store\",\n    \"cache_ttl\": -1,\n    \"internal\": false,\n    \"is_active\": true,\n    \"mode\": \"live\",\n    \"_id\": \"620b931ee7bfb11f910bf4a3\",\n    \"company_id\": 2,\n    \"name\": \"test\",\n    \"owner\": \"5b9b98150df588546aaea6d2\",\n    \"logo\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"favicon\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"banner\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n    },\n    \"token\": \"tPQv0nc23\",\n    \"tokens\": [\n      {\n        \"token\": \"tPQv0nc23\",\n        \"created_at\": \"2022-02-15T11:48:46.909Z\"\n      }\n    ],\n    \"domains\": [\n      {\n        \"verified\": true,\n        \"is_primary\": true,\n        \"is_shortlink\": true,\n        \"_id\": \"620b931ee7bfb11f910bf4a4\",\n        \"name\": \"qckvv5lhp.hostfynd.dev\"\n      }\n    ],\n    \"redirections\": [],\n    \"meta\": [],\n    \"created_at\": \"2022-02-15T11:48:46.909Z\",\n    \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n    \"__v\": 0,\n    \"domain\": {\n      \"verified\": true,\n      \"is_primary\": true,\n      \"is_shortlink\": true,\n      \"_id\": \"620b931ee7bfb11f910bf4a4\",\n      \"name\": \"qckvv5lhp.hostfynd.dev\"\n    },\n    \"id\": \"620b931ee7bfb11f910bf4a3\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9f98d73a-12a6-4bb7-84d1-8d226a668c7a",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "est aute lab",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"Invalid application domain or id.\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ee878e93-3889-4225-9e52-1b4035fabe48",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "est aute lab",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"No application found\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "83ec13a6-0863-44a0-b80e-0472f4c94730",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {
              "content": "Get Location configuration",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "c0a353a0-a3b8-4a33-8f0b-3538218b11f1",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"items\": [\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"ipsum\",\n      \"phone_code\": \"990999092\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"aliquip minim\",\n      \"country_code\": \"quis reprehenderit Excepteur minim\",\n      \"latitude\": \"et enim\",\n      \"longitude\": \"ad in\"\n    },\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"dolor Lorem id\",\n      \"phone_code\": \"990999092\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"cupidatat ea\",\n      \"country_code\": \"reprehenderit occaecat\",\n      \"latitude\": \"irure laboris ullamco\",\n      \"longitude\": \"quis aliqua\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "a3eff56b-e11e-4f51-8fda-72192f006db1",
      "name": "Content",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "ad4a7858-1c47-4bdb-9cd2-726c90f5cbdf",
          "name": "getCredentialsByEntity | Get credentials to power chat support systems",
          "request": {
            "name": "getCredentialsByEntity | Get credentials to power chat support systems",
            "description": {
              "content": "Get credentials for support system",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "public",
                "content",
                "credentials",
                ":entity"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "entity",
                  "description": "(Required) Server Type"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "3cdafaee-8f5c-42ea-bbe1-3e3b566eabbd",
              "name": "Success. Refer `CredentialsSchema` for more details.",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "content",
                    "credentials",
                    ":entity"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "entity",
                      "description": "(Required) Server Type"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"entity_type\": \"partner\",\n  \"type\": \"freshchat\",\n  \"is_enable\": true,\n  \"configuration\": {\n    \"token\": \"a3e4gf20b-d11g-4512-n3zq-03b9aa7e1yxz\",\n    \"siteId\": \"a3e8f20b-d97f-452f-bd72-03b9aa7e1bf0\",\n    \"host\": \"https://wchat.freshchat.com\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "573d13e6-e5b3-4c3c-82e0-cf5eb1cd7574",
              "name": "Bad Request. See the error object in the response body to know the exact reason.",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "content",
                    "credentials",
                    ":entity"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "entity",
                      "description": "(Required) Server Type"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Oops! Something went wrong. Please try later\",\n  \"status\": 400,\n  \"code\": \"CX-1003\",\n  \"exception\": \"\",\n  \"info\": \"\",\n  \"request_id\": \"\",\n  \"stack_trace\": \"\",\n  \"meta\": {}\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "7183e632-4f64-4311-bbf8-6739dc880e09",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "a9b393a3-5425-433e-a125-0c1943223cf4",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "243ab7d5-b68d-49e8-9b36-7c4569f607a1",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1977-12-31T03:29:32.569Z\",\n  \"status\": -16607832,\n  \"error\": \"qui magna\",\n  \"exception\": \"quis dolor eu proident\",\n  \"message\": \"culpa labore\",\n  \"total_time_taken_in_millis\": -1186822,\n  \"http_status\": \"408 REQUEST_TIMEOUT\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"adipisicing pariatur\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "80550be1-d0a9-4cef-a85b-abc4362eddda",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1977-12-31T03:29:32.569Z\",\n  \"status\": -16607832,\n  \"error\": \"qui magna\",\n  \"exception\": \"quis dolor eu proident\",\n  \"message\": \"culpa labore\",\n  \"total_time_taken_in_millis\": -1186822,\n  \"http_status\": \"408 REQUEST_TIMEOUT\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"adipisicing pariatur\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d257796c-d980-427d-b0a1-70f753219513",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1977-12-31T03:29:32.569Z\",\n  \"status\": -16607832,\n  \"error\": \"qui magna\",\n  \"exception\": \"quis dolor eu proident\",\n  \"message\": \"culpa labore\",\n  \"total_time_taken_in_millis\": -1186822,\n  \"http_status\": \"408 REQUEST_TIMEOUT\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"adipisicing pariatur\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "0e5974d3-25db-4721-935b-23671d0b1dfc",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "04719011-0c4d-4325-8002-f9c87d7d46a8",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1983-07-18T21:55:56.933Z\",\n  \"status\": 63195049,\n  \"error\": \"cupidatat mollit irure sit veniam\",\n  \"exception\": \"ipsum proident\",\n  \"message\": \"elit ut id \",\n  \"total_time_taken_in_millis\": -62241436,\n  \"http_status\": \"500 INTERNAL_SERVER_ERROR\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"fugiat esse ut\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "285a7683-96fc-4111-9c32-1219908ee0ba",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1983-07-18T21:55:56.933Z\",\n  \"status\": 63195049,\n  \"error\": \"cupidatat mollit irure sit veniam\",\n  \"exception\": \"ipsum proident\",\n  \"message\": \"elit ut id \",\n  \"total_time_taken_in_millis\": -62241436,\n  \"http_status\": \"500 INTERNAL_SERVER_ERROR\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"fugiat esse ut\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d0828358-bea0-40dd-aaae-3d317382f1e3",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1983-07-18T21:55:56.933Z\",\n  \"status\": 63195049,\n  \"error\": \"cupidatat mollit irure sit veniam\",\n  \"exception\": \"ipsum proident\",\n  \"message\": \"elit ut id \",\n  \"total_time_taken_in_millis\": -62241436,\n  \"http_status\": \"500 INTERNAL_SERVER_ERROR\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"fugiat esse ut\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5f34eb1e-8d28-4cb0-8f23-6b0894b2299c",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1983-07-18T21:55:56.933Z\",\n  \"status\": 63195049,\n  \"error\": \"cupidatat mollit irure sit veniam\",\n  \"exception\": \"ipsum proident\",\n  \"message\": \"elit ut id \",\n  \"total_time_taken_in_millis\": -62241436,\n  \"http_status\": \"500 INTERNAL_SERVER_ERROR\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"fugiat esse ut\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "852237d3-3a3b-40ca-86b9-f64508b70faa",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1983-07-18T21:55:56.933Z\",\n  \"status\": 63195049,\n  \"error\": \"cupidatat mollit irure sit veniam\",\n  \"exception\": \"ipsum proident\",\n  \"message\": \"elit ut id \",\n  \"total_time_taken_in_millis\": -62241436,\n  \"http_status\": \"500 INTERNAL_SERVER_ERROR\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"fugiat esse ut\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "45675c2e-d181-45fe-a309-b36695fde7d2",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "3e4b2df4-921e-46d3-aba8-9da43dfbe0cf",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2006-06-30T19:39:54.373Z\",\n  \"status\": 87570837,\n  \"error\": \"labore Duis\",\n  \"exception\": \"tempor mollit minim Ut irure\",\n  \"message\": \"elit\",\n  \"total_time_taken_in_millis\": -41415760,\n  \"http_status\": \"425 TOO_EARLY\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"consequat Duis tempor in\",\n      \"description\": \"tempor esse elit\",\n      \"name\": \"ut mollit deserunt\",\n      \"slug\": \"dolor \",\n      \"meta\": [\n        {\n          \"_id\": \"sed Duis consequat fugiat\",\n          \"name\": \"cupidatat consectetur\",\n          \"value\": \"id consectetur irure\"\n        },\n        {\n          \"_id\": \"labore nostrud in\",\n          \"name\": \"sed sunt\",\n          \"value\": \"aliquip consectetur tempor\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"in fugiat Ut id ut\",\n        \"integration\": \"tempor elit\",\n        \"level\": \"reprehenderit fugiat amet cill\",\n        \"uid\": 78375583,\n        \"opted\": false,\n        \"permissions\": [\n          \"dolore Duis\",\n          \"ea dolor Excepteur\"\n        ],\n        \"token\": \"laborum labore\",\n        \"name\": \"consectetur\",\n        \"stores\": [\n          {\n            \"_id\": \"qui eu aute\",\n            \"integration\": \"consequat ea\",\n            \"level\": \"commodo\",\n            \"uid\": 36374625,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ut \",\n            \"code\": \"Lorem\",\n            \"name\": \"exercitation minim incididunt nulla\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"in\",\n            \"integration\": \"eu ullamco sunt amet\",\n            \"level\": \"Ut occaecat\",\n            \"uid\": 12185865,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"Lore\",\n            \"code\": \"cillum magna ullamco ad\",\n            \"name\": \"in voluptate labore\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"dolor cupidatat culpa\",\n        \"integration\": \"sit elit fugiat culpa\",\n        \"level\": \"ullam\",\n        \"uid\": -94364559,\n        \"opted\": true,\n        \"permissions\": [\n          \"in eu veniam volup\",\n          \"tempor\"\n        ],\n        \"token\": \"anim cupidatat labore\",\n        \"name\": \"occaecat voluptate in anim laborum\",\n        \"stores\": [\n          {\n            \"_id\": \"elit mollit\",\n            \"integration\": \"Ut pariatur amet ea\",\n            \"level\": \"occaecat et cupidatat incididunt dolor\",\n            \"uid\": 51335629,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"dolor culpa Lorem minim\",\n            \"code\": \"non ipsum fugiat consectetur\",\n            \"name\": \"do\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"non adipisicing sit consectetur nisi\",\n            \"integration\": \"consequat cupidatat\",\n            \"level\": \"ad\",\n            \"uid\": -3715715,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"irure\",\n            \"code\": \"aliquip in commodo ex\",\n            \"name\": \"officia eu laboris sunt ex\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"nisi elit\",\n      \"description\": \"Excepteur ad\",\n      \"name\": \"in ex do anim\",\n      \"slug\": \"minim l\",\n      \"meta\": [\n        {\n          \"_id\": \"officia\",\n          \"name\": \"Duis aliqua proident eiusmod\",\n          \"value\": \"aliqua esse qui aliquip\"\n        },\n        {\n          \"_id\": \"sunt aute\",\n          \"name\": \"velit amet pr\",\n          \"value\": \"ve\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"adipisicing est u\",\n        \"integration\": \"exercitation sint\",\n        \"level\": \"consequat deserunt\",\n        \"uid\": -93874111,\n        \"opted\": false,\n        \"permissions\": [\n          \"laborum sint cillum\",\n          \"voluptate nisi dolor occaecat exercitation\"\n        ],\n        \"token\": \"ad dolore aute\",\n        \"name\": \"deserunt consequat\",\n        \"stores\": [\n          {\n            \"_id\": \"nisi\",\n            \"integration\": \"ea aliquip magna anim elit\",\n            \"level\": \"amet minim exercitatio\",\n            \"uid\": 61382982,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"dolor Ut est incididunt\",\n            \"code\": \"ea\",\n            \"name\": \"minim fugiat et esse dolor\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"do Duis ea\",\n            \"integration\": \"qu\",\n            \"level\": \"eiusmod Ut culpa\",\n            \"uid\": 84786355,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"laboris de\",\n            \"code\": \"dolore adipisicing esse sed\",\n            \"name\": \"sit aute\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"proident do\",\n        \"integration\": \"sit enim laborum\",\n        \"level\": \"sit non dolor\",\n        \"uid\": -49264914,\n        \"opted\": true,\n        \"permissions\": [\n          \"esse dolore labore velit dolor\",\n          \"pariatur ad reprehenderit lab\"\n        ],\n        \"token\": \"dolore pariatur reprehenderit\",\n        \"name\": \"proident\",\n        \"stores\": [\n          {\n            \"_id\": \"in laboris ut minim\",\n            \"integration\": \"amet labore\",\n            \"level\": \"elit cupidatat dolore\",\n            \"uid\": 14146018,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"incididunt\",\n            \"code\": \"voluptate \",\n            \"name\": \"dolore mollit esse\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"mollit dolore\",\n            \"integration\": \"tempor elit amet cillum Lorem\",\n            \"level\": \"qui eiusmod cons\",\n            \"uid\": -52400100,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"quis mollit ad ex aliqua\",\n            \"code\": \"eiusmod esse deserunt aliquip\",\n            \"name\": \"labore do irure mollit\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"sit in dolor\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e1128b63-80ff-4ab8-9673-af3946afebad",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2015-12-17T21:30:32.326Z\",\n  \"status\": -93361820,\n  \"error\": \"\",\n  \"exception\": \"sunt ad irure\",\n  \"message\": \"laborum ali\",\n  \"total_time_taken_in_millis\": 18023047,\n  \"http_status\": \"414 URI_TOO_LONG\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"proident\",\n      \"description\": \"ut voluptate pariatur\",\n      \"name\": \"officia et dolore occaecat sunt\",\n      \"slug\": \"occaecat dolor Duis nisi\",\n      \"meta\": [\n        {\n          \"_id\": \"dolor\",\n          \"name\": \"aliqua\",\n          \"value\": \"labore anim\"\n        },\n        {\n          \"_id\": \"enim commodo Ut\",\n          \"name\": \"officia culpa in mollit\",\n          \"value\": \"sed in\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"quis dolor in labore\",\n        \"integration\": \"fugiat cupidatat nisi velit pariatur\",\n        \"level\": \"ad sed\",\n        \"uid\": 47689987,\n        \"opted\": true,\n        \"permissions\": [\n          \"ex cupidatat sed\",\n          \"consequat\"\n        ],\n        \"token\": \"sit eiusmod Excepteur commodo\",\n        \"name\": \"fugiat exercitation\",\n        \"stores\": [\n          {\n            \"_id\": \"voluptate amet min\",\n            \"integration\": \"pariatur magna fugiat mollit\",\n            \"level\": \"tempor ani\",\n            \"uid\": 90757394,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"mollit nostrud\",\n            \"code\": \"occaecat\",\n            \"name\": \"sint nulla\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"esse in fugiat\",\n            \"integration\": \"adipisicing ut labore\",\n            \"level\": \"ipsum dolor aliquip minim anim\",\n            \"uid\": 85212872,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ea laborum dolore ex cillum\",\n            \"code\": \"eiusmod magna c\",\n            \"name\": \"nostrud eiusmod in fugiat\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"cupidatat cons\",\n        \"integration\": \"et tempor quis est\",\n        \"level\": \"commodo dolor\",\n        \"uid\": -23056998,\n        \"opted\": true,\n        \"permissions\": [\n          \"incididunt\",\n          \"commodo sed et\"\n        ],\n        \"token\": \"ut dolore\",\n        \"name\": \"consequat\",\n        \"stores\": [\n          {\n            \"_id\": \"commodo nulla\",\n            \"integration\": \"esse\",\n            \"level\": \"enim tempor sint adipisicing in\",\n            \"uid\": 22375810,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"minim exercitation amet veniam laborum\",\n            \"code\": \"ullamco\",\n            \"name\": \"Lorem veniam ea\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"in\",\n            \"integration\": \"anim commodo minim non Lorem\",\n            \"level\": \"nisi commodo eiusmod\",\n            \"uid\": 20444946,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"culpa ea et consectetur\",\n            \"code\": \"enim \",\n            \"name\": \"voluptate do\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"eu dolore officia voluptate\",\n      \"description\": \"enim commodo elit\",\n      \"name\": \"eiusmod consequat adipisicing laborum Excepteur\",\n      \"slug\": \"qui labore l\",\n      \"meta\": [\n        {\n          \"_id\": \"a\",\n          \"name\": \"velit ut in dolor consequat\",\n          \"value\": \"consequat laboris minim\"\n        },\n        {\n          \"_id\": \"ex dolore proident\",\n          \"name\": \"culpa adipisicing Duis est\",\n          \"value\": \"i\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"aute e\",\n        \"integration\": \"dolor est culpa\",\n        \"level\": \"sunt\",\n        \"uid\": 52041830,\n        \"opted\": true,\n        \"permissions\": [\n          \"dolore ex\",\n          \"pariatur ut esse Lorem veniam\"\n        ],\n        \"token\": \"occaec\",\n        \"name\": \"sed sit\",\n        \"stores\": [\n          {\n            \"_id\": \"fugiat pariatur\",\n            \"integration\": \"sit\",\n            \"level\": \"aliqua id commodo ullamco sit\",\n            \"uid\": -68011430,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"elit in non\",\n            \"code\": \"ex\",\n            \"name\": \"aliqua Excepteur com\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"dolor aute est\",\n            \"integration\": \"\",\n            \"level\": \"occaecat culpa es\",\n            \"uid\": 14010359,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"aute et nostrud qui\",\n            \"code\": \"proident\",\n            \"name\": \"labore\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"ipsum Duis consectetur pariatur\",\n        \"integration\": \"est anim commodo sit in\",\n        \"level\": \"es\",\n        \"uid\": 62140179,\n        \"opted\": false,\n        \"permissions\": [\n          \"aute\",\n          \"dolore\"\n        ],\n        \"token\": \"adipisicing\",\n        \"name\": \"anim magna velit proident \",\n        \"stores\": [\n          {\n            \"_id\": \"minim anim in ea\",\n            \"integration\": \"cupidatat aliquip nisi\",\n            \"level\": \"minim do enim\",\n            \"uid\": 86897000,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"exercitation eu ipsum dolore\",\n            \"code\": \"ipsum est nostrud esse in\",\n            \"name\": \"proident in\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"officia ut\",\n            \"integration\": \"ullamco reprehenderit\",\n            \"level\": \"deserunt ut\",\n            \"uid\": 4919634,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"eiusmod laboris a\",\n            \"code\": \"dolor nostrud voluptate\",\n            \"name\": \"sed nulla\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"et\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "8d5faa37-3ef6-4fd6-bdb3-beebf1f53eab",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2015-12-17T21:30:32.326Z\",\n  \"status\": -93361820,\n  \"error\": \"\",\n  \"exception\": \"sunt ad irure\",\n  \"message\": \"laborum ali\",\n  \"total_time_taken_in_millis\": 18023047,\n  \"http_status\": \"414 URI_TOO_LONG\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"proident\",\n      \"description\": \"ut voluptate pariatur\",\n      \"name\": \"officia et dolore occaecat sunt\",\n      \"slug\": \"occaecat dolor Duis nisi\",\n      \"meta\": [\n        {\n          \"_id\": \"dolor\",\n          \"name\": \"aliqua\",\n          \"value\": \"labore anim\"\n        },\n        {\n          \"_id\": \"enim commodo Ut\",\n          \"name\": \"officia culpa in mollit\",\n          \"value\": \"sed in\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"quis dolor in labore\",\n        \"integration\": \"fugiat cupidatat nisi velit pariatur\",\n        \"level\": \"ad sed\",\n        \"uid\": 47689987,\n        \"opted\": true,\n        \"permissions\": [\n          \"ex cupidatat sed\",\n          \"consequat\"\n        ],\n        \"token\": \"sit eiusmod Excepteur commodo\",\n        \"name\": \"fugiat exercitation\",\n        \"stores\": [\n          {\n            \"_id\": \"voluptate amet min\",\n            \"integration\": \"pariatur magna fugiat mollit\",\n            \"level\": \"tempor ani\",\n            \"uid\": 90757394,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"mollit nostrud\",\n            \"code\": \"occaecat\",\n            \"name\": \"sint nulla\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"esse in fugiat\",\n            \"integration\": \"adipisicing ut labore\",\n            \"level\": \"ipsum dolor aliquip minim anim\",\n            \"uid\": 85212872,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ea laborum dolore ex cillum\",\n            \"code\": \"eiusmod magna c\",\n            \"name\": \"nostrud eiusmod in fugiat\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"cupidatat cons\",\n        \"integration\": \"et tempor quis est\",\n        \"level\": \"commodo dolor\",\n        \"uid\": -23056998,\n        \"opted\": true,\n        \"permissions\": [\n          \"incididunt\",\n          \"commodo sed et\"\n        ],\n        \"token\": \"ut dolore\",\n        \"name\": \"consequat\",\n        \"stores\": [\n          {\n            \"_id\": \"commodo nulla\",\n            \"integration\": \"esse\",\n            \"level\": \"enim tempor sint adipisicing in\",\n            \"uid\": 22375810,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"minim exercitation amet veniam laborum\",\n            \"code\": \"ullamco\",\n            \"name\": \"Lorem veniam ea\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"in\",\n            \"integration\": \"anim commodo minim non Lorem\",\n            \"level\": \"nisi commodo eiusmod\",\n            \"uid\": 20444946,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"culpa ea et consectetur\",\n            \"code\": \"enim \",\n            \"name\": \"voluptate do\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"eu dolore officia voluptate\",\n      \"description\": \"enim commodo elit\",\n      \"name\": \"eiusmod consequat adipisicing laborum Excepteur\",\n      \"slug\": \"qui labore l\",\n      \"meta\": [\n        {\n          \"_id\": \"a\",\n          \"name\": \"velit ut in dolor consequat\",\n          \"value\": \"consequat laboris minim\"\n        },\n        {\n          \"_id\": \"ex dolore proident\",\n          \"name\": \"culpa adipisicing Duis est\",\n          \"value\": \"i\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"aute e\",\n        \"integration\": \"dolor est culpa\",\n        \"level\": \"sunt\",\n        \"uid\": 52041830,\n        \"opted\": true,\n        \"permissions\": [\n          \"dolore ex\",\n          \"pariatur ut esse Lorem veniam\"\n        ],\n        \"token\": \"occaec\",\n        \"name\": \"sed sit\",\n        \"stores\": [\n          {\n            \"_id\": \"fugiat pariatur\",\n            \"integration\": \"sit\",\n            \"level\": \"aliqua id commodo ullamco sit\",\n            \"uid\": -68011430,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"elit in non\",\n            \"code\": \"ex\",\n            \"name\": \"aliqua Excepteur com\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"dolor aute est\",\n            \"integration\": \"\",\n            \"level\": \"occaecat culpa es\",\n            \"uid\": 14010359,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"aute et nostrud qui\",\n            \"code\": \"proident\",\n            \"name\": \"labore\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"ipsum Duis consectetur pariatur\",\n        \"integration\": \"est anim commodo sit in\",\n        \"level\": \"es\",\n        \"uid\": 62140179,\n        \"opted\": false,\n        \"permissions\": [\n          \"aute\",\n          \"dolore\"\n        ],\n        \"token\": \"adipisicing\",\n        \"name\": \"anim magna velit proident \",\n        \"stores\": [\n          {\n            \"_id\": \"minim anim in ea\",\n            \"integration\": \"cupidatat aliquip nisi\",\n            \"level\": \"minim do enim\",\n            \"uid\": 86897000,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"exercitation eu ipsum dolore\",\n            \"code\": \"ipsum est nostrud esse in\",\n            \"name\": \"proident in\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"officia ut\",\n            \"integration\": \"ullamco reprehenderit\",\n            \"level\": \"deserunt ut\",\n            \"uid\": 4919634,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"eiusmod laboris a\",\n            \"code\": \"dolor nostrud voluptate\",\n            \"name\": \"sed nulla\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"et\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "63f1275e-6c6c-444e-b823-c993958f1fc2",
          "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
          "request": {
            "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "9d891464-90f4-4b0f-b9e1-d473455284d4",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2017-01-22T14:13:05.640Z\",\n  \"status\": 14475465,\n  \"error\": \"pariatur nulla\",\n  \"exception\": \"enim dolore in velit\",\n  \"message\": \"in qui laboris\",\n  \"total_time_taken_in_millis\": -27746799,\n  \"http_status\": \"201 CREATED\",\n  \"items\": {\n    \"session_id\": \"magna nostrud Excepteur quis\",\n    \"error_message\": \"ex voluptate dolore dolor\"\n  },\n  \"payload\": {\n    \"session_id\": \"sit anim\",\n    \"error_message\": \"occaecat anim\"\n  },\n  \"trace_id\": \"in id elit ex\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "902467b4-f5ca-413d-bf6f-59a37c6b31e0",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2017-01-22T14:13:05.640Z\",\n  \"status\": 14475465,\n  \"error\": \"pariatur nulla\",\n  \"exception\": \"enim dolore in velit\",\n  \"message\": \"in qui laboris\",\n  \"total_time_taken_in_millis\": -27746799,\n  \"http_status\": \"201 CREATED\",\n  \"items\": {\n    \"session_id\": \"magna nostrud Excepteur quis\",\n    \"error_message\": \"ex voluptate dolore dolor\"\n  },\n  \"payload\": {\n    \"session_id\": \"sit anim\",\n    \"error_message\": \"occaecat anim\"\n  },\n  \"trace_id\": \"in id elit ex\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5aa6250f-f5aa-4c57-989e-b9f1d67605d3",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2017-01-22T14:13:05.640Z\",\n  \"status\": 14475465,\n  \"error\": \"pariatur nulla\",\n  \"exception\": \"enim dolore in velit\",\n  \"message\": \"in qui laboris\",\n  \"total_time_taken_in_millis\": -27746799,\n  \"http_status\": \"201 CREATED\",\n  \"items\": {\n    \"session_id\": \"magna nostrud Excepteur quis\",\n    \"error_message\": \"ex voluptate dolore dolor\"\n  },\n  \"payload\": {\n    \"session_id\": \"sit anim\",\n    \"error_message\": \"occaecat anim\"\n  },\n  \"trace_id\": \"in id elit ex\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "8b33fa3a-dc91-46fd-af63-eb06cb7ec414",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "83314aeb-2b37-44df-8b97-d981c23572bb",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1978-04-11T14:04:31.664Z\",\n  \"status\": 12445783,\n  \"error\": \"sunt dolor\",\n  \"exception\": \"irure Duis\",\n  \"message\": \"commodo mollit Ut sint\",\n  \"total_time_taken_in_millis\": -3935369,\n  \"http_status\": \"503 SERVICE_UNAVAILABLE\",\n  \"items\": {\n    \"company_id\": 26856095,\n    \"integration_data\": {\n      \"aliquip_7ee\": {}\n    },\n    \"company_name\": \"voluptate tempor\",\n    \"task_details\": {\n      \"type\": 76931881,\n      \"group_list\": [\n        {\n          \"text\": \"culpa eu magna\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"voluptate\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 34207793.88227855,\n      \"safe_stock\": 33380959,\n      \"period_threshold\": 56011702,\n      \"period_threshold_type\": \"HOURS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"es\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"aliquip eu\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"aliqua ullamco enim\",\n    \"alias\": \"sunt enim dolor\"\n  },\n  \"payload\": {\n    \"company_id\": -96432480,\n    \"integration_data\": {\n      \"Lorem_3\": {}\n    },\n    \"company_name\": \"qui adipisicing\",\n    \"task_details\": {\n      \"type\": 46644229,\n      \"group_list\": [\n        {\n          \"text\": \"id Duis\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"fugiat laborum ut\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 86737536.62479103,\n      \"safe_stock\": 56330629,\n      \"period_threshold\": 7907547,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"deserunt nulla\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"aliqua dolor elit culpa nostrud\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"mollit\",\n    \"alias\": \"eiusmod sunt\"\n  },\n  \"trace_id\": \"eu\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b47273f6-dab8-4ccd-96e1-1d933aa185bc",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2010-03-01T23:54:45.422Z\",\n  \"status\": 65016423,\n  \"error\": \"Duis labore\",\n  \"exception\": \"reprehenderit tempor proident mollit dolor\",\n  \"message\": \"irure incididunt\",\n  \"total_time_taken_in_millis\": 31325645,\n  \"http_status\": \"510 NOT_EXTENDED\",\n  \"items\": {\n    \"company_id\": 41945988,\n    \"integration_data\": {\n      \"ipsum48\": {},\n      \"ipsumc\": {}\n    },\n    \"company_name\": \"aliquip consequat culpa mollit\",\n    \"task_details\": {\n      \"type\": -56561795,\n      \"group_list\": [\n        {\n          \"text\": \"ex\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"proident culpa\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -26485188.292632118,\n      \"safe_stock\": 25398698,\n      \"period_threshold\": 90955759,\n      \"period_threshold_type\": \"HOURS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"aliquip magna ut\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"minim quis magna ut\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"in veniam\",\n    \"alias\": \"dolor ullamco nulla culpa\"\n  },\n  \"payload\": {\n    \"company_id\": -13523064,\n    \"integration_data\": {\n      \"irure_e7d\": {}\n    },\n    \"company_name\": \"do\",\n    \"task_details\": {\n      \"type\": 24896946,\n      \"group_list\": [\n        {\n          \"text\": \"sunt l\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"in\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 81666691.69519788,\n      \"safe_stock\": -77537223,\n      \"period_threshold\": -4296895,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"labore ut incididunt commodo consectetur\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"enim quis dolor\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"incididunt consequat enim\",\n    \"alias\": \"magna anim veniam aute ipsum\"\n  },\n  \"trace_id\": \"officia pariatur velit\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e52fd69c-4744-4ebc-a5c1-382e0c0bb6a3",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2010-03-01T23:54:45.422Z\",\n  \"status\": 65016423,\n  \"error\": \"Duis labore\",\n  \"exception\": \"reprehenderit tempor proident mollit dolor\",\n  \"message\": \"irure incididunt\",\n  \"total_time_taken_in_millis\": 31325645,\n  \"http_status\": \"510 NOT_EXTENDED\",\n  \"items\": {\n    \"company_id\": 41945988,\n    \"integration_data\": {\n      \"ipsum48\": {},\n      \"ipsumc\": {}\n    },\n    \"company_name\": \"aliquip consequat culpa mollit\",\n    \"task_details\": {\n      \"type\": -56561795,\n      \"group_list\": [\n        {\n          \"text\": \"ex\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"proident culpa\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -26485188.292632118,\n      \"safe_stock\": 25398698,\n      \"period_threshold\": 90955759,\n      \"period_threshold_type\": \"HOURS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"aliquip magna ut\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"minim quis magna ut\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"in veniam\",\n    \"alias\": \"dolor ullamco nulla culpa\"\n  },\n  \"payload\": {\n    \"company_id\": -13523064,\n    \"integration_data\": {\n      \"irure_e7d\": {}\n    },\n    \"company_name\": \"do\",\n    \"task_details\": {\n      \"type\": 24896946,\n      \"group_list\": [\n        {\n          \"text\": \"sunt l\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"in\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 81666691.69519788,\n      \"safe_stock\": -77537223,\n      \"period_threshold\": -4296895,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"labore ut incididunt commodo consectetur\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"enim quis dolor\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"incididunt consequat enim\",\n    \"alias\": \"magna anim veniam aute ipsum\"\n  },\n  \"trace_id\": \"officia pariatur velit\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "a9766dca-9cac-45b9-935f-52c79b1fceba",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "aee195f8-38f2-4a91-b33e-66aa86fa6af2",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1980-09-06T07:21:23.096Z\",\n  \"status\": -73284153,\n  \"error\": \"dolore tempor ex\",\n  \"exception\": \"e\",\n  \"message\": \"Lorem i\",\n  \"total_time_taken_in_millis\": 76487683,\n  \"http_status\": \"428 PRECONDITION_REQUIRED\",\n  \"items\": [\n    {\n      \"company_id\": 62341852,\n      \"integration_data\": {\n        \"dolored\": {},\n        \"commodo_4\": {},\n        \"magna_57\": {}\n      },\n      \"company_name\": \"officia\",\n      \"task_details\": {\n        \"type\": 50943267,\n        \"group_list\": [\n          {\n            \"text\": \"sint \",\n            \"value\": {}\n          },\n          {\n            \"text\": \"laboris reprehenderit aute\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -52503952.05572946,\n        \"safe_stock\": 19654374,\n        \"period_threshold\": -42942220,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"amet ullamco\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ut laborum\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"dolor\",\n      \"alias\": \"Excepteur enim non\"\n    },\n    {\n      \"company_id\": 23312773,\n      \"integration_data\": {\n        \"eu_8\": {}\n      },\n      \"company_name\": \"magna rep\",\n      \"task_details\": {\n        \"type\": -35463005,\n        \"group_list\": [\n          {\n            \"text\": \"occaecat et deserunt quis\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ea dolor\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 7608825.813176215,\n        \"safe_stock\": 32793439,\n        \"period_threshold\": 9087546,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"nisi officia elit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"veniam do\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"sit laborum\",\n      \"alias\": \"nostrud aliqua veniam\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": -16443521,\n      \"integration_data\": {\n        \"officia_4\": {},\n        \"esse_6\": {},\n        \"sunt_e5\": {},\n        \"aliquipd0a\": {},\n        \"officiaa\": {}\n      },\n      \"company_name\": \"non incididunt ut\",\n      \"task_details\": {\n        \"type\": 52818384,\n        \"group_list\": [\n          {\n            \"text\": \"ea irure Lorem\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"con\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -3115511.5796297938,\n        \"safe_stock\": -82898095,\n        \"period_threshold\": -88614671,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"est\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"aliquip Ut\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"exercitation minim anim cupidatat ullamco\",\n      \"alias\": \"consectetur aliqua cupidatat mollit\"\n    },\n    {\n      \"company_id\": 57354484,\n      \"integration_data\": {\n        \"irure_81b\": {}\n      },\n      \"company_name\": \"veniam ex\",\n      \"task_details\": {\n        \"type\": -72976896,\n        \"group_list\": [\n          {\n            \"text\": \"Ut anim in nulla\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"sint dolore ea nulla reprehenderit\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -31054278.067222983,\n        \"safe_stock\": 81398886,\n        \"period_threshold\": -99983039,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"occaecat amet laboris\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"consequat in est\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"Lorem Excepteur irure ea\",\n      \"alias\": \"veniam Ut do in\"\n    }\n  ],\n  \"trace_id\": \"aliquip ex adipisicing enim amet\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ddf2d12f-4ef0-4de4-8c90-5831aa3a7305",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1945-01-25T08:41:23.107Z\",\n  \"status\": -21971713,\n  \"error\": \"sunt voluptate\",\n  \"exception\": \"ex magna consequat\",\n  \"message\": \"et amet\",\n  \"total_time_taken_in_millis\": 56245848,\n  \"http_status\": \"501 NOT_IMPLEMENTED\",\n  \"items\": [\n    {\n      \"company_id\": -47020578,\n      \"integration_data\": {\n        \"sed3\": {},\n        \"dolore_40\": {}\n      },\n      \"company_name\": \"labore\",\n      \"task_details\": {\n        \"type\": -87213848,\n        \"group_list\": [\n          {\n            \"text\": \"nostrud consequat\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"aliqua laboris\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 26014182.109010473,\n        \"safe_stock\": 22740826,\n        \"period_threshold\": 97855137,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"occaecat amet velit quis\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"officia eiusmod ipsum elit est\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"in officia nulla laboris\",\n      \"alias\": \"adipisicing\"\n    },\n    {\n      \"company_id\": 27963128,\n      \"integration_data\": {\n        \"enim_55\": {}\n      },\n      \"company_name\": \"ut ut est dolore\",\n      \"task_details\": {\n        \"type\": 32008668,\n        \"group_list\": [\n          {\n            \"text\": \"sed tempor Duis\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"nulla fugiat laboris nisi\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -60095.18082809448,\n        \"safe_stock\": 34248885,\n        \"period_threshold\": 54455707,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"pariatur consequat \",\n            \"value\": {}\n          },\n          {\n            \"text\": \"dolore magna laboris nisi\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"cillum pariatur dolore ut irure\",\n      \"alias\": \"quis ad\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": -63413257,\n      \"integration_data\": {\n        \"nostrudd\": {},\n        \"elit_69_\": {},\n        \"estdfb\": {}\n      },\n      \"company_name\": \"in enim id ea dolore\",\n      \"task_details\": {\n        \"type\": -29632615,\n        \"group_list\": [\n          {\n            \"text\": \"in consectetur\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"aliqua irure in culpa\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -82836619.92389914,\n        \"safe_stock\": -8373074,\n        \"period_threshold\": -54907361,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"dolore ea\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"laborum cupidatat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"dese\",\n      \"alias\": \"commodo magna do quis sint\"\n    },\n    {\n      \"company_id\": -39911539,\n      \"integration_data\": {\n        \"sed_e9\": {}\n      },\n      \"company_name\": \"adipisicing\",\n      \"task_details\": {\n        \"type\": -18035771,\n        \"group_list\": [\n          {\n            \"text\": \"aliqua incididunt ut cupidatat eiusmod\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"fugiat enim eiusmod\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 9264982.317199782,\n        \"safe_stock\": 98561524,\n        \"period_threshold\": -61995813,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"in culpa minim ex\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"tempor ullamco Excepteur cillum consequat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"qui consequat cillum se\",\n      \"alias\": \"ullamco elit dolor\"\n    }\n  ],\n  \"trace_id\": \"aliquip culpa do\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "4112af83-65e7-4304-9ddc-aa9960ab83c2",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1945-01-25T08:41:23.107Z\",\n  \"status\": -21971713,\n  \"error\": \"sunt voluptate\",\n  \"exception\": \"ex magna consequat\",\n  \"message\": \"et amet\",\n  \"total_time_taken_in_millis\": 56245848,\n  \"http_status\": \"501 NOT_IMPLEMENTED\",\n  \"items\": [\n    {\n      \"company_id\": -47020578,\n      \"integration_data\": {\n        \"sed3\": {},\n        \"dolore_40\": {}\n      },\n      \"company_name\": \"labore\",\n      \"task_details\": {\n        \"type\": -87213848,\n        \"group_list\": [\n          {\n            \"text\": \"nostrud consequat\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"aliqua laboris\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 26014182.109010473,\n        \"safe_stock\": 22740826,\n        \"period_threshold\": 97855137,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"occaecat amet velit quis\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"officia eiusmod ipsum elit est\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"in officia nulla laboris\",\n      \"alias\": \"adipisicing\"\n    },\n    {\n      \"company_id\": 27963128,\n      \"integration_data\": {\n        \"enim_55\": {}\n      },\n      \"company_name\": \"ut ut est dolore\",\n      \"task_details\": {\n        \"type\": 32008668,\n        \"group_list\": [\n          {\n            \"text\": \"sed tempor Duis\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"nulla fugiat laboris nisi\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -60095.18082809448,\n        \"safe_stock\": 34248885,\n        \"period_threshold\": 54455707,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"pariatur consequat \",\n            \"value\": {}\n          },\n          {\n            \"text\": \"dolore magna laboris nisi\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"cillum pariatur dolore ut irure\",\n      \"alias\": \"quis ad\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": -63413257,\n      \"integration_data\": {\n        \"nostrudd\": {},\n        \"elit_69_\": {},\n        \"estdfb\": {}\n      },\n      \"company_name\": \"in enim id ea dolore\",\n      \"task_details\": {\n        \"type\": -29632615,\n        \"group_list\": [\n          {\n            \"text\": \"in consectetur\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"aliqua irure in culpa\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -82836619.92389914,\n        \"safe_stock\": -8373074,\n        \"period_threshold\": -54907361,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"dolore ea\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"laborum cupidatat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"dese\",\n      \"alias\": \"commodo magna do quis sint\"\n    },\n    {\n      \"company_id\": -39911539,\n      \"integration_data\": {\n        \"sed_e9\": {}\n      },\n      \"company_name\": \"adipisicing\",\n      \"task_details\": {\n        \"type\": -18035771,\n        \"group_list\": [\n          {\n            \"text\": \"aliqua incididunt ut cupidatat eiusmod\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"fugiat enim eiusmod\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 9264982.317199782,\n        \"safe_stock\": 98561524,\n        \"period_threshold\": -61995813,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"in culpa minim ex\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"tempor ullamco Excepteur cillum consequat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"qui consequat cillum se\",\n      \"alias\": \"ullamco elit dolor\"\n    }\n  ],\n  \"trace_id\": \"aliquip culpa do\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "f0740b24-4f22-4187-8d62-832df6145e1b",
      "name": "Partner",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "f028cf55-09b6-4682-a1d3-efc5a0682c8b",
          "name": "getPanelExtensionDetails | Get panel extension details",
          "request": {
            "name": "getPanelExtensionDetails | Get panel extension details",
            "description": {
              "content": "Retrieve detailed information about panel extensions in the public server setup.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "panel",
                "partners",
                "v1.0",
                "extensions",
                ":slug"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "slug",
                  "description": "(Required) pass the slug of the extension"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "3e82e898-6038-4d26-a1a4-fe7c57c2c8a5",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "panel",
                    "partners",
                    "v1.0",
                    "extensions",
                    ":slug"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "slug",
                      "description": "(Required) pass the slug of the extension"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"_id\": \"633ab5cb635a41fdde9fb648\",\n  \"organization_id\": \"6333fef3b1d85e44e738c138\",\n  \"extension_id\": \"633425ebb1d85e44e738c2ab\",\n  \"slug\": \"example-extension-1\",\n  \"scope\": [\n    \"company/profile\",\n    \"company/saleschannel\",\n    \"company/product\",\n    \"company/order\",\n    \"company/application/customer\",\n    \"company/application/analytics\",\n    \"company/application/storage\",\n    \"company/application/marketing\",\n    \"company/application/catalogue\",\n    \"company/application/communication\",\n    \"company/application/support\",\n    \"company/application/order\",\n    \"company/application/settings\"\n  ],\n  \"category\": {\n    \"categories_l1\": [],\n    \"categories_l2\": []\n  },\n  \"listing_info\": {\n    \"name\": \"ujjawal-example-extension-1\",\n    \"keywords\": [],\n    \"tagline\": \"test-extension for test how extensions look and work and how to create them\",\n    \"icon\": \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/AMwIEOw0U-logo.png\"\n  },\n  \"details\": {\n    \"benefits\": [\n      {\n        \"title\": \"Works fast\",\n        \"description\": \"works fast\",\n        \"_id\": \"633ab5cb635a41fdde9fb649\"\n      }\n    ],\n    \"screenshots\": {\n      \"desktop\": [\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/g95yHXkou-1024x576.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/IKdHxP2fN-1024x576.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/_auq1yvEp-1024x576.png\"\n      ],\n      \"mobile\": [\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/E_YAHM9cU-600x900.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/vEnXw9cCg-600x900.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/O3Wng4Rqn-600x900.png\"\n      ]\n    },\n    \"description\": \"Sample public extension\",\n    \"demo_url\": \"\",\n    \"video_url\": [\n      {\n        \"type\": \"video\",\n        \"url\": \"https://hdn-1.addsale.com/x0/products/videos/item/free/original/kizLVNWyS-video-sc-1.mp4\"\n      }\n    ],\n    \"integrations\": []\n  },\n  \"plan_type\": \"free\",\n  \"plans\": [\n    {\n      \"name\": \"Custom Free\",\n      \"features\": \"provides ease\",\n      \"type\": \"free\",\n      \"price\": {\n        \"amount\": 0,\n        \"currency\": \"INR\"\n      },\n      \"trial_days\": 0,\n      \"additional_charges\": \"\"\n    }\n  ],\n  \"plans_url\": \"\",\n  \"contact_info\": {\n    \"support\": {\n      \"email\": \"ujjawaltaleja@gofynd.com\",\n      \"phone\": \"7988169279\",\n      \"website_url\": \"\",\n      \"faq_url\": \"\",\n      \"privacy_policy_url\": \"\"\n    }\n  },\n  \"current_status\": \"active\",\n  \"coming_soon\": {\n    \"is_coming_soon\": false,\n    \"upvote_count\": 0\n  },\n  \"created_at\": \"2022-10-03T10:13:31.607Z\",\n  \"modified_at\": \"2022-10-03T10:13:31.607Z\",\n  \"organization\": {\n    \"name\": \"ujjawal-partners-fashion\",\n    \"slug\": \"ujjawa-w7t-68\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "4fe34622-dd16-4450-af09-c2a45087e8d3",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "b09d9994-0cbe-417a-8c12-16613f495eea",
          "name": "fetchAllWebhookEvents | Fetch all webhook events",
          "request": {
            "name": "fetchAllWebhookEvents | Fetch all webhook events",
            "description": {
              "content": "Retrieve a list of all webhook events in the public server setup.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "9963f40d-2103-48a5-a8ff-793a25e91175",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "e7f338a3-4671-40ff-a224-d49751893042",
          "name": "queryWebhookEventDetails | Query webhook event details",
          "request": {
            "name": "queryWebhookEventDetails | Query webhook event details",
            "description": {
              "content": "Query and obtain detailed information about webhook events in the public server configurations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "89f26723-0860-4751-9841-e8ee48a6d71d",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"event_name\": \"article\",\n    \"event_type\": \"update\",\n    \"event_category\": \"company\",\n    \"version\": \"1\"\n  }\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "8fe4e65f-6444-4018-bce5-08394b01949f",
          "name": "notifyDepricatedEvent | Notifies all the events that are going to depricate",
          "request": {
            "name": "notifyDepricatedEvent | Notifies all the events that are going to depricate",
            "description": {
              "content": "Notifies all the events that are subscribed and are going to deprecate or new version is available for those events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "depricated-event-notifier"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "7ab26a16-d873-4586-a646-c03dff15809f",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "depricated-event-notifier"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "5843b2e1-d3ea-4fe9-b0a4-5a950fb0cfa2",
          "name": "testHandlerTransformation | Test transformation of handler",
          "request": {
            "name": "testHandlerTransformation | Test transformation of handler",
            "description": {
              "content": "Test transformation of handler",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "transform-event"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event_name\": \"<string>\",\n  \"event_type\": \"<string>\",\n  \"event_category\": \"<string>\",\n  \"event_version\": \"<string>\",\n  \"event\": {\n    \"payload\": {\n      \"quif\": -10178586.783326477\n    },\n    \"meta\": {\n      \"proident_a4b\": -7091572,\n      \"Ut_3b_\": 16197310.33310461\n    }\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "6648db31-153a-4f9d-b150-150b1cbae17d",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "transform-event"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"event_name\": \"location\",\n  \"event_type\": \"create\",\n  \"event_category\": \"company\",\n  \"event_version\": \"1\",\n  \"event\": {\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450Z\",\n        \"modified_on\": \"2023-10-24T01:41:44.450Z\"\n      }\n    },\n    \"meta\": {\n      \"event\": {\n        \"type\": \"create\",\n        \"name\": \"location\",\n        \"version\": \"1\"\n      },\n      \"company_id\": 6086,\n      \"service\": {\n        \"name\": \"WheelJack\"\n      },\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"created_timestamp\": 1698111704725\n    }\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_trace_id\": [\n    \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n  ],\n  \"data\": {\n    \"event\": {\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"name\": \"location\",\n      \"type\": \"create\",\n      \"version\": \"1\",\n      \"created_timestamp\": 1698111704725\n    },\n    \"company_id\": 6086,\n    \"contains\": [\n      \"location\"\n    ],\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450Z\",\n        \"modified_on\": \"2023-10-24T01:41:44.450Z\"\n      }\n    }\n  },\n  \"event_name\": \"location\",\n  \"version\": \"1\",\n  \"status\": false,\n  \"event_type\": \"create\",\n  \"service_meta\": {\n    \"name\": \"WheelJack\"\n  },\n  \"association\": {\n    \"company_id\": 6086\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1d05e15d-95a0-4823-b05f-cf7e395702d7",
          "name": "validateSchema | Validate Schema for an event",
          "request": {
            "name": "validateSchema | Validate Schema for an event",
            "description": {
              "content": "Validate Schema for an event",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "validate-event-schema"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event_name\": \"<string>\",\n  \"event_type\": \"<string>\",\n  \"event_category\": \"<string>\",\n  \"event_version\": \"<string>\",\n  \"event\": {\n    \"payload\": {\n      \"adipisicing_88f\": -20784075\n    },\n    \"meta\": {\n      \"euf\": -73622608,\n      \"laboris2\": true\n    }\n  },\n  \"event_schema\": {\n    \"occaecat9e5\": -36898063\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "57748931-6161-4386-b716-b1edef83de65",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "validate-event-schema"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"event_name\": \"location\",\n  \"event_type\": \"create\",\n  \"event_category\": \"company\",\n  \"event_version\": \"1\",\n  \"event\": {\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450Z\",\n        \"modified_on\": \"2023-10-24T01:41:44.450Z\"\n      }\n    },\n    \"meta\": {\n      \"event\": {\n        \"type\": \"create\",\n        \"name\": \"location\",\n        \"version\": \"1\"\n      },\n      \"company_id\": 6086,\n      \"service\": {\n        \"name\": \"WheelJack\"\n      },\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"created_timestamp\": 1698111704725\n    }\n  },\n  \"event_schema\": {}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": true,\n  \"message\": \"Valid schema for this event\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fynd.com"
    }
  ],
  "info": {
    "_postman_id": "26b3da80-6433-4b92-80f7-304c4fba710c",
    "name": "Fynd Platform's Public Side APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public Side APIs",
      "type": "text/plain"
    }
  }
}
