{
  "item": [
    {
      "id": "845eac53-d0ca-4cc9-8fa7-20bd97ffced4",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "96b849e2-8d29-44d1-860e-8fbe3b02611c",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "af9f36ab-6635-4f25-ae6d-11314177f195",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "sint adipisicing mollit",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "92c7d29b-5501-4889-b3bb-20c6ba9c82cd",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "sint adipisicing mollit",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"Invalid application domain or id.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "8fca9e3a-b809-43a4-bd1c-585c85bcd828",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "sint adipisicing mollit",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "ab0fe12d-1421-46e0-8edd-fd07a5a78379",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "aa641268-8bc8-4b4a-a89c-92bb7a7a887e",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "7da3618d-f488-42a9-989f-aba807b7343d",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "46d91710-d8a9-4f68-81b0-0b6b82f9e693",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "985e767a-d855-4011-b7fa-26d7441bfc29",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -35988105,\n   \"event_name\": \"elit\",\n   \"event_type\": \"culpa am\",\n   \"event_category\": \"tempor mollit proident\",\n   \"version\": \"sit Duis\",\n   \"display_name\": \"consequat voluptate esse\",\n   \"description\": \"incididunt id aliquip\",\n   \"created_on\": \"nulla Duis et\"\n  },\n  {\n   \"id\": 67641910,\n   \"event_name\": \"in dolor Ut\",\n   \"event_type\": \"in Excepteur fugiat pariatur\",\n   \"event_category\": \"eiusmod ex\",\n   \"version\": \"sunt in Duis\",\n   \"display_name\": \"labore et nostrud in aute\",\n   \"description\": \"sint anim\",\n   \"created_on\": \"quis proident\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "5ca6ee52-7528-4016-9c7d-a0805d71d4da",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "aefbf4a8-6f74-44da-b120-0397a8d5d2ee",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -93787632,\n   \"event_name\": \"dolor eu\",\n   \"event_type\": \"sint aliqua\",\n   \"event_category\": \"Lorem commodo\",\n   \"version\": \"proident ex officia do\",\n   \"display_name\": \"eu elit incididunt Lorem velit\",\n   \"description\": \"dolore sint\",\n   \"created_on\": \"ipsum sed voluptate\"\n  },\n  {\n   \"id\": -53725797,\n   \"event_name\": \"non in ullamco dolor ex\",\n   \"event_type\": \"occaecat laborum deserunt adipisicing\",\n   \"event_category\": \"occaecat do amet proident id\",\n   \"version\": \"et cillum\",\n   \"display_name\": \"sit fugiat\",\n   \"description\": \"ullamco dolor laboris pariatur\",\n   \"created_on\": \"ea \"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "cc6b403b-265c-4475-8c49-334064102783",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "e316220b-0cb4-4822-9f75-92623de672f0",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "737ea888-d738-4e43-89a9-2c68d9268b88",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1979-03-04T01:50:38.004Z\",\n \"status\": -82494708,\n \"error\": \"Lorem ad\",\n \"exception\": \"dolore aute nulla e\",\n \"message\": \"velit adipisicing dol\",\n \"total_time_taken_in_millis\": 23242611,\n \"http_status\": \"304 NOT_MODIFIED\",\n \"items\": [\n  {\n   \"company_id\": -62249789,\n   \"integration_data\": {},\n   \"company_name\": \"enim laborum \",\n   \"task_details\": {\n    \"type\": -72602700,\n    \"group_list\": [\n     {\n      \"text\": \"dolore ex minim voluptate\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in nulla \",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 14979617.331532687,\n    \"safe_stock\": -51992528,\n    \"period_threshold\": 56895292,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"in in incididunt commodo\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sint laboris\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ea Excepteur nisi\",\n   \"alias\": \"laborum fugiat\"\n  },\n  {\n   \"company_id\": -39652664,\n   \"integration_data\": {},\n   \"company_name\": \"anim commodo ut\",\n   \"task_details\": {\n    \"type\": -51978840,\n    \"group_list\": [\n     {\n      \"text\": \"in eiusmod in dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore incididunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -58269431.37290774,\n    \"safe_stock\": -18299763,\n    \"period_threshold\": 62109829,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"consequat aliquip\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"incididu\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ut dolor quis\",\n   \"alias\": \"ullamco ea in\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 33296680,\n   \"integration_data\": {},\n   \"company_name\": \"Ut consequat dolore culpa officia\",\n   \"task_details\": {\n    \"type\": 27179303,\n    \"group_list\": [\n     {\n      \"text\": \"reprehenderit dolore velit amet incididunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ad\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 56038010.246299654,\n    \"safe_stock\": -88248554,\n    \"period_threshold\": -36152219,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"fugiat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"voluptate aliqua\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"nulla sit do in\",\n   \"alias\": \"in quis nisi\"\n  },\n  {\n   \"company_id\": 91593111,\n   \"integration_data\": {},\n   \"company_name\": \"amet sit qui Ut\",\n   \"task_details\": {\n    \"type\": 83114095,\n    \"group_list\": [\n     {\n      \"text\": \"minim dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proident ut Lorem magna dolore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -16223403.233759508,\n    \"safe_stock\": 26620863,\n    \"period_threshold\": -2716749,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"irure dolor voluptate veniam\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"culpa amet eu id\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"eiusmod mollit dolor\",\n   \"alias\": \"exercitation\"\n  }\n ],\n \"trace_id\": \"magna Lorem Ut elit\",\n \"page\": {\n  \"type\": \"minim quis labore eiusmod\",\n  \"size\": 43122590,\n  \"current\": 46383163,\n  \"has_next\": false,\n  \"item_total\": -71546763,\n  \"next_id\": \"anim ad amet officia\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f35e5e85-0dfc-4c9e-9213-572439996f66",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1983-11-14T05:29:11.807Z\",\n \"status\": -32973773,\n \"error\": \"ipsum est aliquip\",\n \"exception\": \"amet nulla tempor\",\n \"message\": \"ex dolore\",\n \"total_time_taken_in_millis\": 51989454,\n \"http_status\": \"202 ACCEPTED\",\n \"items\": [\n  {\n   \"company_id\": 31120368,\n   \"integration_data\": {},\n   \"company_name\": \"pariatur deser\",\n   \"task_details\": {\n    \"type\": -54763687,\n    \"group_list\": [\n     {\n      \"text\": \"anim ullamco\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"voluptate reprehenderit Duis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -52228657.13525806,\n    \"safe_stock\": 86522902,\n    \"period_threshold\": 85237199,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sit magna minim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute aliqua\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"eiusmod cillum ullamco\",\n   \"alias\": \"irure enim\"\n  },\n  {\n   \"company_id\": -99304268,\n   \"integration_data\": {},\n   \"company_name\": \"Ut officia consectetur ipsum\",\n   \"task_details\": {\n    \"type\": 64069242,\n    \"group_list\": [\n     {\n      \"text\": \"laboris \",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ea in consequat fugiat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -14081246.440969333,\n    \"safe_stock\": 19109318,\n    \"period_threshold\": -89310680,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"cillum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in dolor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"magna cillum in\",\n   \"alias\": \"veniam esse laborum qui\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 80695476,\n   \"integration_data\": {},\n   \"company_name\": \"inci\",\n   \"task_details\": {\n    \"type\": -1458251,\n    \"group_list\": [\n     {\n      \"text\": \"Excepteur laboris irure\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"velit in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -5348753.180058628,\n    \"safe_stock\": -45137470,\n    \"period_threshold\": -13182737,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"est consectetur non Ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"reprehenderit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"dolore dolor veniam\",\n   \"alias\": \"ex labore\"\n  },\n  {\n   \"company_id\": -73135900,\n   \"integration_data\": {},\n   \"company_name\": \"esse ullamco sunt dolore\",\n   \"task_details\": {\n    \"type\": -96474645,\n    \"group_list\": [\n     {\n      \"text\": \"tempor est sint consectetu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore amet\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 93790715.04685915,\n    \"safe_stock\": -97065549,\n    \"period_threshold\": 72724660,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"esse dolore laboris pariatur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"velit ad sit nisi\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ad magna ipsum cupidatat aliqua\",\n   \"alias\": \"do ad id\"\n  }\n ],\n \"trace_id\": \"reprehenderit Duis\",\n \"page\": {\n  \"type\": \"proident dolor\",\n  \"size\": -28347317,\n  \"current\": -80837058,\n  \"has_next\": true,\n  \"item_total\": 7830730,\n  \"next_id\": \"consequat fugiat in Ut reprehenderit\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "202981a5-b27f-48e8-99b5-dd128236ee37",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1983-11-14T05:29:11.807Z\",\n \"status\": -32973773,\n \"error\": \"ipsum est aliquip\",\n \"exception\": \"amet nulla tempor\",\n \"message\": \"ex dolore\",\n \"total_time_taken_in_millis\": 51989454,\n \"http_status\": \"202 ACCEPTED\",\n \"items\": [\n  {\n   \"company_id\": 31120368,\n   \"integration_data\": {},\n   \"company_name\": \"pariatur deser\",\n   \"task_details\": {\n    \"type\": -54763687,\n    \"group_list\": [\n     {\n      \"text\": \"anim ullamco\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"voluptate reprehenderit Duis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -52228657.13525806,\n    \"safe_stock\": 86522902,\n    \"period_threshold\": 85237199,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sit magna minim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute aliqua\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"eiusmod cillum ullamco\",\n   \"alias\": \"irure enim\"\n  },\n  {\n   \"company_id\": -99304268,\n   \"integration_data\": {},\n   \"company_name\": \"Ut officia consectetur ipsum\",\n   \"task_details\": {\n    \"type\": 64069242,\n    \"group_list\": [\n     {\n      \"text\": \"laboris \",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ea in consequat fugiat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -14081246.440969333,\n    \"safe_stock\": 19109318,\n    \"period_threshold\": -89310680,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"cillum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in dolor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"magna cillum in\",\n   \"alias\": \"veniam esse laborum qui\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 80695476,\n   \"integration_data\": {},\n   \"company_name\": \"inci\",\n   \"task_details\": {\n    \"type\": -1458251,\n    \"group_list\": [\n     {\n      \"text\": \"Excepteur laboris irure\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"velit in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -5348753.180058628,\n    \"safe_stock\": -45137470,\n    \"period_threshold\": -13182737,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"est consectetur non Ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"reprehenderit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"dolore dolor veniam\",\n   \"alias\": \"ex labore\"\n  },\n  {\n   \"company_id\": -73135900,\n   \"integration_data\": {},\n   \"company_name\": \"esse ullamco sunt dolore\",\n   \"task_details\": {\n    \"type\": -96474645,\n    \"group_list\": [\n     {\n      \"text\": \"tempor est sint consectetu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore amet\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 93790715.04685915,\n    \"safe_stock\": -97065549,\n    \"period_threshold\": 72724660,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"esse dolore laboris pariatur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"velit ad sit nisi\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ad magna ipsum cupidatat aliqua\",\n   \"alias\": \"do ad id\"\n  }\n ],\n \"trace_id\": \"reprehenderit Duis\",\n \"page\": {\n  \"type\": \"proident dolor\",\n  \"size\": -28347317,\n  \"current\": -80837058,\n  \"has_next\": true,\n  \"item_total\": 7830730,\n  \"next_id\": \"consequat fugiat in Ut reprehenderit\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "6bd988e9-0e4e-41b5-ae6c-dbf4ca99640d",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "96ad4d06-f4cf-4834-a825-2cac4287a1c0",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2015-03-31T18:59:26.308Z\",\n \"status\": 46458332,\n \"error\": \"sint\",\n \"exception\": \"elit\",\n \"message\": \"nulla tempor labore\",\n \"total_time_taken_in_millis\": -27407049,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"consectetur eu\",\n \"page\": {\n  \"type\": \"nostrud\",\n  \"size\": -87223225,\n  \"current\": -76890514,\n  \"has_next\": true,\n  \"item_total\": 96715546,\n  \"next_id\": \"veniam in laborum\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e54bac14-0ec1-4912-b56c-71b2a71cc668",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2015-03-31T18:59:26.308Z\",\n \"status\": 46458332,\n \"error\": \"sint\",\n \"exception\": \"elit\",\n \"message\": \"nulla tempor labore\",\n \"total_time_taken_in_millis\": -27407049,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"consectetur eu\",\n \"page\": {\n  \"type\": \"nostrud\",\n  \"size\": -87223225,\n  \"current\": -76890514,\n  \"has_next\": true,\n  \"item_total\": 96715546,\n  \"next_id\": \"veniam in laborum\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "07e636de-5068-4910-bb01-14fe5b9e1402",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2015-03-31T18:59:26.308Z\",\n \"status\": 46458332,\n \"error\": \"sint\",\n \"exception\": \"elit\",\n \"message\": \"nulla tempor labore\",\n \"total_time_taken_in_millis\": -27407049,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"consectetur eu\",\n \"page\": {\n  \"type\": \"nostrud\",\n  \"size\": -87223225,\n  \"current\": -76890514,\n  \"has_next\": true,\n  \"item_total\": 96715546,\n  \"next_id\": \"veniam in laborum\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "d03211a6-d5ff-4a37-ba97-a6927b5f662a",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "11279acd-9497-4412-b47e-fb9193ede833",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1944-04-14T13:26:48.903Z\",\n \"status\": 91676195,\n \"error\": \"ea\",\n \"exception\": \"labore fugiat\",\n \"message\": \"in \",\n \"total_time_taken_in_millis\": -85454912,\n \"http_status\": \"408 REQUEST_TIMEOUT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"cupidatat sint minim ex\",\n \"page\": {\n  \"type\": \"tempor ullamco pariatur\",\n  \"size\": 48100252,\n  \"current\": -32895280,\n  \"has_next\": false,\n  \"item_total\": 70228283,\n  \"next_id\": \"laborum\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5855e1d6-6e71-4727-b9cd-6c68da046487",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1944-04-14T13:26:48.903Z\",\n \"status\": 91676195,\n \"error\": \"ea\",\n \"exception\": \"labore fugiat\",\n \"message\": \"in \",\n \"total_time_taken_in_millis\": -85454912,\n \"http_status\": \"408 REQUEST_TIMEOUT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"cupidatat sint minim ex\",\n \"page\": {\n  \"type\": \"tempor ullamco pariatur\",\n  \"size\": 48100252,\n  \"current\": -32895280,\n  \"has_next\": false,\n  \"item_total\": 70228283,\n  \"next_id\": \"laborum\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "393b6cbd-227f-4b59-9c4d-45575db433e3",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1944-04-14T13:26:48.903Z\",\n \"status\": 91676195,\n \"error\": \"ea\",\n \"exception\": \"labore fugiat\",\n \"message\": \"in \",\n \"total_time_taken_in_millis\": -85454912,\n \"http_status\": \"408 REQUEST_TIMEOUT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"cupidatat sint minim ex\",\n \"page\": {\n  \"type\": \"tempor ullamco pariatur\",\n  \"size\": 48100252,\n  \"current\": -32895280,\n  \"has_next\": false,\n  \"item_total\": 70228283,\n  \"next_id\": \"laborum\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "01748487-1726-402e-be24-fc361f31a6b9",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1944-04-14T13:26:48.903Z\",\n \"status\": 91676195,\n \"error\": \"ea\",\n \"exception\": \"labore fugiat\",\n \"message\": \"in \",\n \"total_time_taken_in_millis\": -85454912,\n \"http_status\": \"408 REQUEST_TIMEOUT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"cupidatat sint minim ex\",\n \"page\": {\n  \"type\": \"tempor ullamco pariatur\",\n  \"size\": 48100252,\n  \"current\": -32895280,\n  \"has_next\": false,\n  \"item_total\": 70228283,\n  \"next_id\": \"laborum\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "eb6eed0f-62a6-43b7-b202-889e7518881b",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1944-04-14T13:26:48.903Z\",\n \"status\": 91676195,\n \"error\": \"ea\",\n \"exception\": \"labore fugiat\",\n \"message\": \"in \",\n \"total_time_taken_in_millis\": -85454912,\n \"http_status\": \"408 REQUEST_TIMEOUT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"cupidatat sint minim ex\",\n \"page\": {\n  \"type\": \"tempor ullamco pariatur\",\n  \"size\": 48100252,\n  \"current\": -32895280,\n  \"has_next\": false,\n  \"item_total\": 70228283,\n  \"next_id\": \"laborum\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx0.de"
    }
  ],
  "info": {
    "_postman_id": "2c19bd65-42ef-44ff-9939-ee11e1f71184",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
