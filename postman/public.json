{
  "item": [
    {
      "id": "aae35b86-65c9-4a1e-a397-cbdaf006bb75",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "19eff221-4cf1-4edb-a818-a22fcb5c441a",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "32d948aa-9f2e-438a-bc2e-6de225504efe",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "dolor fugiat",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "df310137-7a71-4279-8afc-5537157ea2bf",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "dolor fugiat",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "7741e127-e807-4cc1-91a1-1834b135bf52",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "dolor fugiat",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "0a6586ab-0e71-4fa7-bf70-e9515daadc59",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "4259c45e-5953-4bf4-98cd-d5e104f6001f",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "b30f5047-a9cc-4598-b462-c002212b2ac3",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "858c9ce8-12d1-4660-b595-9982f1cd4009",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "ab938fdc-2f82-4166-aa7e-db69eb588077",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -8796135,\n   \"event_name\": \"in do irure la\",\n   \"event_type\": \"cupidatat\",\n   \"event_category\": \"est\",\n   \"version\": \"Excepteur ex amet elit culpa\",\n   \"display_name\": \"dolore non inc\",\n   \"description\": \"cupidatat est\",\n   \"created_on\": \"pariatur Excepteur anim\"\n  },\n  {\n   \"id\": 60372987,\n   \"event_name\": \"eiusmod non fugiat\",\n   \"event_type\": \"nostrud labore in pariatur\",\n   \"event_category\": \"consequat\",\n   \"version\": \"aliquip officia eu est fugiat\",\n   \"display_name\": \"Ut ea nisi elit\",\n   \"description\": \"sed ullamco eu nisi\",\n   \"created_on\": \"velit cupidatat dolore al\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "5b2ad4c0-dc48-440e-b233-6dd45608ba71",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "9b0106f6-0b99-4bb9-ac60-e1f92b10c842",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 97616627,\n   \"event_name\": \"ut\",\n   \"event_type\": \"non c\",\n   \"event_category\": \"Duis ad\",\n   \"version\": \"irure veniam aliqua in\",\n   \"display_name\": \"minim mollit\",\n   \"description\": \"quis tempor aute in\",\n   \"created_on\": \"do ex qui consectetur\"\n  },\n  {\n   \"id\": 30908921,\n   \"event_name\": \"proident fugiat incididunt dolor\",\n   \"event_type\": \"ea in incididunt Duis\",\n   \"event_category\": \"Excepteur incididunt\",\n   \"version\": \"labore nostrud\",\n   \"display_name\": \"minim aliquip\",\n   \"description\": \"fugiat proident in\",\n   \"created_on\": \"veniam Lore\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "104dff35-f643-44fc-b3c6-b1f96686890b",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "b32aed9c-3706-4eb3-8e3f-3c1c307cbeda",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "fede9b01-3fea-4786-8f13-7aed258bf1ce",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1961-10-21T02:31:51.536Z\",\n \"status\": 2226840,\n \"error\": \"qui dolore veni\",\n \"exception\": \"\",\n \"message\": \"Lorem non sit\",\n \"total_time_taken_in_millis\": -94746418,\n \"http_status\": \"202 ACCEPTED\",\n \"items\": [\n  {\n   \"company_id\": 52305901,\n   \"integration_data\": {},\n   \"company_name\": \"cillum nulla non\",\n   \"task_details\": {\n    \"type\": -36215009,\n    \"group_list\": [\n     {\n      \"text\": \"magna anim exercitation officia\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ex laborum labore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -64156160.81066013,\n    \"safe_stock\": -83726979,\n    \"period_threshold\": -9433513,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"commodo quis elit do\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laborum ut deserunt exercitation minim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"eu dolore Excepteur veniam\",\n   \"alias\": \"enim sunt sed\"\n  },\n  {\n   \"company_id\": -22693435,\n   \"integration_data\": {},\n   \"company_name\": \"ullamco cupidatat ut ut\",\n   \"task_details\": {\n    \"type\": 39318940,\n    \"group_list\": [\n     {\n      \"text\": \"dolore occae\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore Ut aute\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 53716812.094151676,\n    \"safe_stock\": -49767762,\n    \"period_threshold\": 46830181,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"magna voluptate proident anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor nulla fugiat nostrud sint\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"dolore quis Duis ullamco\",\n   \"alias\": \"voluptate proident aute et aliqua\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -12845008,\n   \"integration_data\": {},\n   \"company_name\": \"laboris enim\",\n   \"task_details\": {\n    \"type\": -56298558,\n    \"group_list\": [\n     {\n      \"text\": \"sunt Excepteur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"irure eu ipsum dolor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 20710624.013303176,\n    \"safe_stock\": 77346636,\n    \"period_threshold\": -92160410,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sunt voluptate\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nulla\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"proident occaecat\",\n   \"alias\": \"sunt\"\n  },\n  {\n   \"company_id\": -91900769,\n   \"integration_data\": {},\n   \"company_name\": \"eiusmod ullamco in culpa cillum\",\n   \"task_details\": {\n    \"type\": 84914450,\n    \"group_list\": [\n     {\n      \"text\": \"eu aute sint\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Excepteur adipisicing est et\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 60331007.26056287,\n    \"safe_stock\": 68962898,\n    \"period_threshold\": 42683558,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"veniam Lorem consectetur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"officia ullamco ad\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ex ipsum\",\n   \"alias\": \"laborum\"\n  }\n ],\n \"trace_id\": \"est non qui magna\",\n \"page\": {\n  \"type\": \"exercitation adipisicing voluptate Duis\",\n  \"size\": 13467793,\n  \"current\": 80789458,\n  \"has_next\": true,\n  \"item_total\": -31108836,\n  \"next_id\": \"Duis est aliquip\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "87243edd-bc70-4b9a-a3f2-f4c1736cb13a",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1955-09-14T07:14:01.236Z\",\n \"status\": -37798450,\n \"error\": \"in\",\n \"exception\": \"ipsum pariatur non dolore ut\",\n \"message\": \"elit consectetur eu \",\n \"total_time_taken_in_millis\": 94401231,\n \"http_status\": \"207 MULTI_STATUS\",\n \"items\": [\n  {\n   \"company_id\": 82742442,\n   \"integration_data\": {},\n   \"company_name\": \"pariatur\",\n   \"task_details\": {\n    \"type\": 66876205,\n    \"group_list\": [\n     {\n      \"text\": \"aliqua fugiat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -27726872.599550083,\n    \"safe_stock\": -78040755,\n    \"period_threshold\": -4350290,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"Lorem ad cupidatat exercitation elit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"mollit aliqua\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"cupidatat sint ipsum\",\n   \"alias\": \"ea\"\n  },\n  {\n   \"company_id\": 53831916,\n   \"integration_data\": {},\n   \"company_name\": \"pariatur L\",\n   \"task_details\": {\n    \"type\": -61693185,\n    \"group_list\": [\n     {\n      \"text\": \"ut dolore Lorem minim quis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"veniam in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -61341927.02290413,\n    \"safe_stock\": 33362752,\n    \"period_threshold\": -99391606,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"esse\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"amet cillum veniam\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ad sit qui aliqua\",\n   \"alias\": \"incid\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 56475197,\n   \"integration_data\": {},\n   \"company_name\": \"ullamco nisi dolor\",\n   \"task_details\": {\n    \"type\": -68009399,\n    \"group_list\": [\n     {\n      \"text\": \"nisi officia in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut dolore irure\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -51606255.28866691,\n    \"safe_stock\": -49189855,\n    \"period_threshold\": -5069075,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"incididunt adipisicing\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"reprehenderit in commodo occaecat\",\n   \"alias\": \"non anim quis\"\n  },\n  {\n   \"company_id\": -20689065,\n   \"integration_data\": {},\n   \"company_name\": \"id\",\n   \"task_details\": {\n    \"type\": 60764512,\n    \"group_list\": [\n     {\n      \"text\": \"mollit incididunt proident commodo\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliquip occaecat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 51241829.01799029,\n    \"safe_stock\": -31940339,\n    \"period_threshold\": 70787695,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ut culpa\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"veniam incididunt nostrud\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Lorem aliqua velit qui\",\n   \"alias\": \"eu exercitation\"\n  }\n ],\n \"trace_id\": \"eiusmod ea\",\n \"page\": {\n  \"type\": \"ame\",\n  \"size\": 72344476,\n  \"current\": 19227076,\n  \"has_next\": false,\n  \"item_total\": -32853941,\n  \"next_id\": \"nostrud Duis commodo in\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "899e952d-a597-412f-b2d1-f90842b8db68",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1955-09-14T07:14:01.236Z\",\n \"status\": -37798450,\n \"error\": \"in\",\n \"exception\": \"ipsum pariatur non dolore ut\",\n \"message\": \"elit consectetur eu \",\n \"total_time_taken_in_millis\": 94401231,\n \"http_status\": \"207 MULTI_STATUS\",\n \"items\": [\n  {\n   \"company_id\": 82742442,\n   \"integration_data\": {},\n   \"company_name\": \"pariatur\",\n   \"task_details\": {\n    \"type\": 66876205,\n    \"group_list\": [\n     {\n      \"text\": \"aliqua fugiat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -27726872.599550083,\n    \"safe_stock\": -78040755,\n    \"period_threshold\": -4350290,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"Lorem ad cupidatat exercitation elit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"mollit aliqua\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"cupidatat sint ipsum\",\n   \"alias\": \"ea\"\n  },\n  {\n   \"company_id\": 53831916,\n   \"integration_data\": {},\n   \"company_name\": \"pariatur L\",\n   \"task_details\": {\n    \"type\": -61693185,\n    \"group_list\": [\n     {\n      \"text\": \"ut dolore Lorem minim quis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"veniam in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -61341927.02290413,\n    \"safe_stock\": 33362752,\n    \"period_threshold\": -99391606,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"esse\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"amet cillum veniam\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ad sit qui aliqua\",\n   \"alias\": \"incid\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 56475197,\n   \"integration_data\": {},\n   \"company_name\": \"ullamco nisi dolor\",\n   \"task_details\": {\n    \"type\": -68009399,\n    \"group_list\": [\n     {\n      \"text\": \"nisi officia in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut dolore irure\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -51606255.28866691,\n    \"safe_stock\": -49189855,\n    \"period_threshold\": -5069075,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"incididunt adipisicing\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"reprehenderit in commodo occaecat\",\n   \"alias\": \"non anim quis\"\n  },\n  {\n   \"company_id\": -20689065,\n   \"integration_data\": {},\n   \"company_name\": \"id\",\n   \"task_details\": {\n    \"type\": 60764512,\n    \"group_list\": [\n     {\n      \"text\": \"mollit incididunt proident commodo\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliquip occaecat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 51241829.01799029,\n    \"safe_stock\": -31940339,\n    \"period_threshold\": 70787695,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ut culpa\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"veniam incididunt nostrud\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Lorem aliqua velit qui\",\n   \"alias\": \"eu exercitation\"\n  }\n ],\n \"trace_id\": \"eiusmod ea\",\n \"page\": {\n  \"type\": \"ame\",\n  \"size\": 72344476,\n  \"current\": 19227076,\n  \"has_next\": false,\n  \"item_total\": -32853941,\n  \"next_id\": \"nostrud Duis commodo in\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "a2618cad-99e9-4617-a180-dc9b88abd081",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "b94efc37-0f7d-4b4d-b5aa-6ca87a1f9102",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1954-08-09T21:24:48.256Z\",\n \"status\": -36836575,\n \"error\": \"\",\n \"exception\": \"reprehenderit non est cupidatat\",\n \"message\": \"et sit Excepteur consequat\",\n \"total_time_taken_in_millis\": -85959896,\n \"http_status\": \"419 INSUFFICIENT_SPACE_ON_RESOURCE\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"veniam in nulla id\",\n \"page\": {\n  \"type\": \"et\",\n  \"size\": -10451868,\n  \"current\": -61024067,\n  \"has_next\": true,\n  \"item_total\": 57098625,\n  \"next_id\": \"tempor amet nulla dolor\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "17a50d3d-ef8c-4590-9c72-cd36856ec787",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1954-08-09T21:24:48.256Z\",\n \"status\": -36836575,\n \"error\": \"\",\n \"exception\": \"reprehenderit non est cupidatat\",\n \"message\": \"et sit Excepteur consequat\",\n \"total_time_taken_in_millis\": -85959896,\n \"http_status\": \"419 INSUFFICIENT_SPACE_ON_RESOURCE\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"veniam in nulla id\",\n \"page\": {\n  \"type\": \"et\",\n  \"size\": -10451868,\n  \"current\": -61024067,\n  \"has_next\": true,\n  \"item_total\": 57098625,\n  \"next_id\": \"tempor amet nulla dolor\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3f0c8ce8-f798-46f9-85bf-7550557ded9d",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1954-08-09T21:24:48.256Z\",\n \"status\": -36836575,\n \"error\": \"\",\n \"exception\": \"reprehenderit non est cupidatat\",\n \"message\": \"et sit Excepteur consequat\",\n \"total_time_taken_in_millis\": -85959896,\n \"http_status\": \"419 INSUFFICIENT_SPACE_ON_RESOURCE\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"veniam in nulla id\",\n \"page\": {\n  \"type\": \"et\",\n  \"size\": -10451868,\n  \"current\": -61024067,\n  \"has_next\": true,\n  \"item_total\": 57098625,\n  \"next_id\": \"tempor amet nulla dolor\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "53fc644a-b502-4a15-9391-3dff51155761",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "d519e6c1-cc0b-4b52-9f28-e34219efa471",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1981-03-21T23:57:29.729Z\",\n \"status\": 98119269,\n \"error\": \"aute non dolore\",\n \"exception\": \"enim dolore labore\",\n \"message\": \"in commodo\",\n \"total_time_taken_in_millis\": -1317751,\n \"http_status\": \"422 UNPROCESSABLE_ENTITY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ex adipisicing sit\",\n \"page\": {\n  \"type\": \"occaecat \",\n  \"size\": 58040827,\n  \"current\": -43262998,\n  \"has_next\": false,\n  \"item_total\": 88836291,\n  \"next_id\": \"adipisicing in consectetur qui\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "0af78ac1-94c3-4588-b5e7-329d4a219700",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1981-03-21T23:57:29.729Z\",\n \"status\": 98119269,\n \"error\": \"aute non dolore\",\n \"exception\": \"enim dolore labore\",\n \"message\": \"in commodo\",\n \"total_time_taken_in_millis\": -1317751,\n \"http_status\": \"422 UNPROCESSABLE_ENTITY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ex adipisicing sit\",\n \"page\": {\n  \"type\": \"occaecat \",\n  \"size\": 58040827,\n  \"current\": -43262998,\n  \"has_next\": false,\n  \"item_total\": 88836291,\n  \"next_id\": \"adipisicing in consectetur qui\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "170a5553-4fad-4a97-bfb1-2adf1c0f4452",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1981-03-21T23:57:29.729Z\",\n \"status\": 98119269,\n \"error\": \"aute non dolore\",\n \"exception\": \"enim dolore labore\",\n \"message\": \"in commodo\",\n \"total_time_taken_in_millis\": -1317751,\n \"http_status\": \"422 UNPROCESSABLE_ENTITY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ex adipisicing sit\",\n \"page\": {\n  \"type\": \"occaecat \",\n  \"size\": 58040827,\n  \"current\": -43262998,\n  \"has_next\": false,\n  \"item_total\": 88836291,\n  \"next_id\": \"adipisicing in consectetur qui\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "886f6b37-39ca-4bfe-abeb-c006d24ae1bc",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1981-03-21T23:57:29.729Z\",\n \"status\": 98119269,\n \"error\": \"aute non dolore\",\n \"exception\": \"enim dolore labore\",\n \"message\": \"in commodo\",\n \"total_time_taken_in_millis\": -1317751,\n \"http_status\": \"422 UNPROCESSABLE_ENTITY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ex adipisicing sit\",\n \"page\": {\n  \"type\": \"occaecat \",\n  \"size\": 58040827,\n  \"current\": -43262998,\n  \"has_next\": false,\n  \"item_total\": 88836291,\n  \"next_id\": \"adipisicing in consectetur qui\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5ecfef8e-269d-482b-be98-f970731f3698",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1981-03-21T23:57:29.729Z\",\n \"status\": 98119269,\n \"error\": \"aute non dolore\",\n \"exception\": \"enim dolore labore\",\n \"message\": \"in commodo\",\n \"total_time_taken_in_millis\": -1317751,\n \"http_status\": \"422 UNPROCESSABLE_ENTITY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ex adipisicing sit\",\n \"page\": {\n  \"type\": \"occaecat \",\n  \"size\": 58040827,\n  \"current\": -43262998,\n  \"has_next\": false,\n  \"item_total\": 88836291,\n  \"next_id\": \"adipisicing in consectetur qui\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx0.de"
    }
  ],
  "info": {
    "_postman_id": "a46ed028-6d76-4a6b-9d90-a52a1d068c1a",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
