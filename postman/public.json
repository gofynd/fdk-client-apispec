{
  "item": [
    {
      "id": "dc0209dd-b3d7-4760-a6c6-9ad87fb8a4a2",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "b53611e8-f8e8-4ed9-b977-ae74d882ba5c",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "b429087c-f86f-4a74-8309-36ec1a9dde60",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "c",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d1b20a21-366d-4ebf-ad71-8373374b85b6",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "c",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"Invalid application domain or id.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "0da7f642-9084-47db-b82d-a754ae0085e2",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "c",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "382e81c9-a02b-4a7f-89c6-2fdeaa278329",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "07ddc5aa-1d48-40a5-9521-bd316846784d",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "02e90b07-e356-46b8-80b7-8f429cc308ef",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "73055588-91f2-488e-bf2a-39b0db0394a6",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "8ea46b41-c878-4153-933c-7298093f0091",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -89016596,\n   \"event_name\": \"non ex pariatur\",\n   \"event_type\": \"ullamco ea\",\n   \"event_category\": \"consequat eu nulla incididunt\",\n   \"version\": \"mollit enim consectetur\",\n   \"display_name\": \"anim irure sint\",\n   \"description\": \"ut proident in officia\",\n   \"created_on\": \"deserunt\"\n  },\n  {\n   \"id\": 71613623,\n   \"event_name\": \"nisi in id qui\",\n   \"event_type\": \"id exercitation commodo\",\n   \"event_category\": \"quis veniam id laborum consequat\",\n   \"version\": \"proident esse aute enim\",\n   \"display_name\": \"tempor ipsum deserunt occaecat\",\n   \"description\": \"exercitatio\",\n   \"created_on\": \"ea anim sunt mollit ipsum\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "7bc3d189-daed-4513-9494-ab337ce483d6",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "08a8481e-6fea-4ef3-a627-ab27d6872c73",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -37034129,\n   \"event_name\": \"non ullamco\",\n   \"event_type\": \"proident in consequat\",\n   \"event_category\": \"quis tempor sit\",\n   \"version\": \"dolore sed reprehenderit in\",\n   \"display_name\": \"Duis deserunt\",\n   \"description\": \"aliquip incididunt consectetur esse\",\n   \"created_on\": \"esse mollit\"\n  },\n  {\n   \"id\": -23993456,\n   \"event_name\": \"magna\",\n   \"event_type\": \"dolore id ullamco\",\n   \"event_category\": \"labore eu\",\n   \"version\": \"anim tempor commodo Lorem\",\n   \"display_name\": \"sunt veniam et laborum\",\n   \"description\": \"lab\",\n   \"created_on\": \"amet enim\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "681c370e-4d8b-4ef2-8911-bcf1f1aaab5b",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "69e7bca0-6112-4022-862c-0227af2fc5f5",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "aa7133a4-e415-4dab-b971-ea2b8645b136",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1979-02-19T15:41:17.150Z\",\n \"status\": 17818824,\n \"error\": \"ex tempor\",\n \"exception\": \"est commodo ad\",\n \"message\": \"in proident ut non\",\n \"total_time_taken_in_millis\": -26285491,\n \"http_status\": \"307 TEMPORARY_REDIRECT\",\n \"items\": [\n  {\n   \"company_id\": -10821307,\n   \"integration_data\": {},\n   \"company_name\": \"dolor irure\",\n   \"task_details\": {\n    \"type\": 87513781,\n    \"group_list\": [\n     {\n      \"text\": \"veniam velit dolor est\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ad\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 45101076.99341121,\n    \"safe_stock\": 89288562,\n    \"period_threshold\": 10476705,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ea ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laborum Ut ad laboris\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"esse Ut Excepteur\",\n   \"alias\": \"Exc\"\n  },\n  {\n   \"company_id\": 28829746,\n   \"integration_data\": {},\n   \"company_name\": \"ut sunt mollit\",\n   \"task_details\": {\n    \"type\": -29394484,\n    \"group_list\": [\n     {\n      \"text\": \"et tempor nisi nulla ea\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"qui ullamco\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 79029379.7848348,\n    \"safe_stock\": 15494331,\n    \"period_threshold\": 83308131,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ipsum veniam\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"amet\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ad deserunt ut fugiat sint\",\n   \"alias\": \"dolore exercitation sint aliquip\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 98568314,\n   \"integration_data\": {},\n   \"company_name\": \"veniam tempor a\",\n   \"task_details\": {\n    \"type\": 51673211,\n    \"group_list\": [\n     {\n      \"text\": \"commodo id\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"commodo ut nisi veniam\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 11338002.491874993,\n    \"safe_stock\": 89497932,\n    \"period_threshold\": -28397729,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"laborum incididunt offic\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"reprehenderit nisi nulla culpa\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"anim do laborum adipisicing sed\",\n   \"alias\": \"amet\"\n  },\n  {\n   \"company_id\": -36139571,\n   \"integration_data\": {},\n   \"company_name\": \"et proident\",\n   \"task_details\": {\n    \"type\": -65129413,\n    \"group_list\": [\n     {\n      \"text\": \"in laboris\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sunt Ut in enim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 41612309.56909084,\n    \"safe_stock\": 48881155,\n    \"period_threshold\": -94899039,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sed ipsum minim dolor veniam\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut culp\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in est pari\",\n   \"alias\": \"dolor sit aliquip\"\n  }\n ],\n \"trace_id\": \"in et\",\n \"page\": {\n  \"type\": \"do\",\n  \"size\": -17061810,\n  \"current\": 54997514,\n  \"has_next\": false,\n  \"item_total\": 82834850,\n  \"next_id\": \"commodo \",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f01c229f-bf4b-4854-9ffc-8a0bf9ae2007",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1974-03-29T14:01:03.350Z\",\n \"status\": -82363317,\n \"error\": \"consequat in\",\n \"exception\": \"ea nulla elit pariatur\",\n \"message\": \"labori\",\n \"total_time_taken_in_millis\": -14842619,\n \"http_status\": \"451 UNAVAILABLE_FOR_LEGAL_REASONS\",\n \"items\": [\n  {\n   \"company_id\": 91826063,\n   \"integration_data\": {},\n   \"company_name\": \"ut Ut reprehenderit pariatur culpa\",\n   \"task_details\": {\n    \"type\": -91262329,\n    \"group_list\": [\n     {\n      \"text\": \"veniam in incididunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"reprehenderit \",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -7472731.5113437325,\n    \"safe_stock\": 84413269,\n    \"period_threshold\": 6217362,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sunt eiusmod\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"culpa\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ipsum dolor tempor incididunt\",\n   \"alias\": \"ex quis\"\n  },\n  {\n   \"company_id\": 27049232,\n   \"integration_data\": {},\n   \"company_name\": \"exercitation consectetur i\",\n   \"task_details\": {\n    \"type\": -85994877,\n    \"group_list\": [\n     {\n      \"text\": \"ullamco qui irure\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"am\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -39651019.56055333,\n    \"safe_stock\": 39847204,\n    \"period_threshold\": -98149580,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"officia cillum voluptate nostrud\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Ut magna do mollit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ad nulla magna\",\n   \"alias\": \"dolore consectetur eiusmod\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -96439910,\n   \"integration_data\": {},\n   \"company_name\": \"\",\n   \"task_details\": {\n    \"type\": 10997162,\n    \"group_list\": [\n     {\n      \"text\": \"dolor irure\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sunt in non amet nostrud\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -20676108.800795883,\n    \"safe_stock\": 32394324,\n    \"period_threshold\": 52675957,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"exercitation consequat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"proident minim sunt\",\n   \"alias\": \"eiusmod laborum magna mollit\"\n  },\n  {\n   \"company_id\": 69348046,\n   \"integration_data\": {},\n   \"company_name\": \"nulla sint\",\n   \"task_details\": {\n    \"type\": -55767311,\n    \"group_list\": [\n     {\n      \"text\": \"nisi non dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor sunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 94062820.19101778,\n    \"safe_stock\": 87728472,\n    \"period_threshold\": 30716319,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"aliquip ea in voluptate\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consectetur aliquip ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Ut non sed m\",\n   \"alias\": \"labore ut et dolor\"\n  }\n ],\n \"trace_id\": \"Excepteur ut aliquip officia\",\n \"page\": {\n  \"type\": \"reprehenderit amet proident\",\n  \"size\": -88437723,\n  \"current\": 19757678,\n  \"has_next\": true,\n  \"item_total\": 28471222,\n  \"next_id\": \"est dolore\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "cf1912b2-12eb-4e63-aa0b-81e2799f89a6",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1974-03-29T14:01:03.350Z\",\n \"status\": -82363317,\n \"error\": \"consequat in\",\n \"exception\": \"ea nulla elit pariatur\",\n \"message\": \"labori\",\n \"total_time_taken_in_millis\": -14842619,\n \"http_status\": \"451 UNAVAILABLE_FOR_LEGAL_REASONS\",\n \"items\": [\n  {\n   \"company_id\": 91826063,\n   \"integration_data\": {},\n   \"company_name\": \"ut Ut reprehenderit pariatur culpa\",\n   \"task_details\": {\n    \"type\": -91262329,\n    \"group_list\": [\n     {\n      \"text\": \"veniam in incididunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"reprehenderit \",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -7472731.5113437325,\n    \"safe_stock\": 84413269,\n    \"period_threshold\": 6217362,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sunt eiusmod\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"culpa\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ipsum dolor tempor incididunt\",\n   \"alias\": \"ex quis\"\n  },\n  {\n   \"company_id\": 27049232,\n   \"integration_data\": {},\n   \"company_name\": \"exercitation consectetur i\",\n   \"task_details\": {\n    \"type\": -85994877,\n    \"group_list\": [\n     {\n      \"text\": \"ullamco qui irure\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"am\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -39651019.56055333,\n    \"safe_stock\": 39847204,\n    \"period_threshold\": -98149580,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"officia cillum voluptate nostrud\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Ut magna do mollit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ad nulla magna\",\n   \"alias\": \"dolore consectetur eiusmod\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -96439910,\n   \"integration_data\": {},\n   \"company_name\": \"\",\n   \"task_details\": {\n    \"type\": 10997162,\n    \"group_list\": [\n     {\n      \"text\": \"dolor irure\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sunt in non amet nostrud\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -20676108.800795883,\n    \"safe_stock\": 32394324,\n    \"period_threshold\": 52675957,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"exercitation consequat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"proident minim sunt\",\n   \"alias\": \"eiusmod laborum magna mollit\"\n  },\n  {\n   \"company_id\": 69348046,\n   \"integration_data\": {},\n   \"company_name\": \"nulla sint\",\n   \"task_details\": {\n    \"type\": -55767311,\n    \"group_list\": [\n     {\n      \"text\": \"nisi non dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor sunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 94062820.19101778,\n    \"safe_stock\": 87728472,\n    \"period_threshold\": 30716319,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"aliquip ea in voluptate\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consectetur aliquip ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Ut non sed m\",\n   \"alias\": \"labore ut et dolor\"\n  }\n ],\n \"trace_id\": \"Excepteur ut aliquip officia\",\n \"page\": {\n  \"type\": \"reprehenderit amet proident\",\n  \"size\": -88437723,\n  \"current\": 19757678,\n  \"has_next\": true,\n  \"item_total\": 28471222,\n  \"next_id\": \"est dolore\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "189bb138-415d-40d4-a74b-090a5e56e67c",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "0797e304-b5b5-4e2e-958a-02cec69c544a",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1967-07-03T21:27:47.992Z\",\n \"status\": 31899510,\n \"error\": \"amet ad tempor in quis\",\n \"exception\": \"adipisicing eiusmod sit\",\n \"message\": \"officia irure\",\n \"total_time_taken_in_millis\": 28416412,\n \"http_status\": \"204 NO_CONTENT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"veniam eu\",\n \"page\": {\n  \"type\": \"quis proident anim\",\n  \"size\": 23068676,\n  \"current\": -97836988,\n  \"has_next\": true,\n  \"item_total\": -65543806,\n  \"next_id\": \"quis ullamco aliqua ad\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1673e0e7-d1b1-4840-9df2-931f2633ee18",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1967-07-03T21:27:47.992Z\",\n \"status\": 31899510,\n \"error\": \"amet ad tempor in quis\",\n \"exception\": \"adipisicing eiusmod sit\",\n \"message\": \"officia irure\",\n \"total_time_taken_in_millis\": 28416412,\n \"http_status\": \"204 NO_CONTENT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"veniam eu\",\n \"page\": {\n  \"type\": \"quis proident anim\",\n  \"size\": 23068676,\n  \"current\": -97836988,\n  \"has_next\": true,\n  \"item_total\": -65543806,\n  \"next_id\": \"quis ullamco aliqua ad\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "75189d81-f54f-4a4c-a5ea-84f48be6689d",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1967-07-03T21:27:47.992Z\",\n \"status\": 31899510,\n \"error\": \"amet ad tempor in quis\",\n \"exception\": \"adipisicing eiusmod sit\",\n \"message\": \"officia irure\",\n \"total_time_taken_in_millis\": 28416412,\n \"http_status\": \"204 NO_CONTENT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"veniam eu\",\n \"page\": {\n  \"type\": \"quis proident anim\",\n  \"size\": 23068676,\n  \"current\": -97836988,\n  \"has_next\": true,\n  \"item_total\": -65543806,\n  \"next_id\": \"quis ullamco aliqua ad\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "fe799096-b939-4c1a-8c70-6f24a48419df",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "7ac1ab07-a182-4a51-87ac-8af612f0d43f",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1999-08-23T03:54:24.770Z\",\n \"status\": 46114442,\n \"error\": \"anim laboru\",\n \"exception\": \"sit\",\n \"message\": \"dolore sed dolore eiusmod\",\n \"total_time_taken_in_millis\": 80003298,\n \"http_status\": \"421 DESTINATION_LOCKED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"do ut ad\",\n \"page\": {\n  \"type\": \"Duis adipisicing exer\",\n  \"size\": -56018357,\n  \"current\": -72903127,\n  \"has_next\": false,\n  \"item_total\": -35085832,\n  \"next_id\": \"nisi ea in cillum\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a7173603-b04f-4dfc-8646-56468964f7d5",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1999-08-23T03:54:24.770Z\",\n \"status\": 46114442,\n \"error\": \"anim laboru\",\n \"exception\": \"sit\",\n \"message\": \"dolore sed dolore eiusmod\",\n \"total_time_taken_in_millis\": 80003298,\n \"http_status\": \"421 DESTINATION_LOCKED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"do ut ad\",\n \"page\": {\n  \"type\": \"Duis adipisicing exer\",\n  \"size\": -56018357,\n  \"current\": -72903127,\n  \"has_next\": false,\n  \"item_total\": -35085832,\n  \"next_id\": \"nisi ea in cillum\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e9256974-22bc-4b48-8cd9-9bab08db420a",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1999-08-23T03:54:24.770Z\",\n \"status\": 46114442,\n \"error\": \"anim laboru\",\n \"exception\": \"sit\",\n \"message\": \"dolore sed dolore eiusmod\",\n \"total_time_taken_in_millis\": 80003298,\n \"http_status\": \"421 DESTINATION_LOCKED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"do ut ad\",\n \"page\": {\n  \"type\": \"Duis adipisicing exer\",\n  \"size\": -56018357,\n  \"current\": -72903127,\n  \"has_next\": false,\n  \"item_total\": -35085832,\n  \"next_id\": \"nisi ea in cillum\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "44eb9004-ea78-4ae9-a21c-3f6c51e848a1",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1999-08-23T03:54:24.770Z\",\n \"status\": 46114442,\n \"error\": \"anim laboru\",\n \"exception\": \"sit\",\n \"message\": \"dolore sed dolore eiusmod\",\n \"total_time_taken_in_millis\": 80003298,\n \"http_status\": \"421 DESTINATION_LOCKED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"do ut ad\",\n \"page\": {\n  \"type\": \"Duis adipisicing exer\",\n  \"size\": -56018357,\n  \"current\": -72903127,\n  \"has_next\": false,\n  \"item_total\": -35085832,\n  \"next_id\": \"nisi ea in cillum\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "cb1573a6-35f3-46e8-8a22-758a2fb8525e",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1999-08-23T03:54:24.770Z\",\n \"status\": 46114442,\n \"error\": \"anim laboru\",\n \"exception\": \"sit\",\n \"message\": \"dolore sed dolore eiusmod\",\n \"total_time_taken_in_millis\": 80003298,\n \"http_status\": \"421 DESTINATION_LOCKED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"do ut ad\",\n \"page\": {\n  \"type\": \"Duis adipisicing exer\",\n  \"size\": -56018357,\n  \"current\": -72903127,\n  \"has_next\": false,\n  \"item_total\": -35085832,\n  \"next_id\": \"nisi ea in cillum\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx0.de"
    }
  ],
  "info": {
    "_postman_id": "3796177f-8d20-4057-b591-9e25cda9cacc",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
