{
  "item": [
    {
      "id": "16a96157-40b4-4106-9c53-d4d3c172ef10",
      "name": "Billing",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "377a9e86-dec5-4eac-bd46-04b7c5fafd1d",
          "name": "getStandardPlans | Get Standard/Public Plans",
          "request": {
            "name": "getStandardPlans | Get Standard/Public Plans",
            "description": {
              "content": "Get Standard/Public Plans.\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "public",
                "billing",
                "v1.0",
                "plan",
                "detailed-list"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "platform",
                  "value": "<string>",
                  "description": "(Required) The type of platform for which plans are requested."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "1550d8cc-82c9-40f2-b7bb-fd1bb0ec9729",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform",
                      "value": "mobile/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"plans\": [\n    {\n      \"recurring\": {\n        \"interval\": \"month\",\n        \"interval_count\": 3\n      },\n      \"is_trial_plan\": true,\n      \"plan_group\": \"default\",\n      \"tag_lines\": [\n        \"This is 2020won trial plan\",\n        \"This is 2020won trial plan\"\n      ],\n      \"currency\": \"INR\",\n      \"is_active\": true,\n      \"is_visible\": false,\n      \"trial_period\": 30,\n      \"addons\": [\n        \"consequ\",\n        \"deserunt voluptate ea elit cillum\"\n      ],\n      \"tags\": [\n        \"culpa eu ullamco nostrud\",\n        \"in occaeca\"\n      ],\n      \"type\": \"public\",\n      \"country\": \"IN\",\n      \"_id\": \"5f0dcd866173cb003706098f\",\n      \"name\": \"30 day Trial\",\n      \"description\": \"30 day Trial\",\n      \"amount\": 0,\n      \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n      \"created_at\": \"2020-07-14T15:21:42.959Z\",\n      \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n    },\n    {\n      \"recurring\": {\n        \"interval\": \"month\",\n        \"interval_count\": 3\n      },\n      \"is_trial_plan\": true,\n      \"plan_group\": \"default\",\n      \"tag_lines\": [\n        \"This is 2020won trial plan\",\n        \"This is 2020won trial plan\"\n      ],\n      \"currency\": \"INR\",\n      \"is_active\": true,\n      \"is_visible\": false,\n      \"trial_period\": 30,\n      \"addons\": [\n        \"commodo in\",\n        \"minim eu aliqua in\"\n      ],\n      \"tags\": [\n        \"ipsum reprehenderit sit\",\n        \"do nulla\"\n      ],\n      \"type\": \"public\",\n      \"country\": \"IN\",\n      \"_id\": \"5f0dcd866173cb003706098f\",\n      \"name\": \"30 day Trial\",\n      \"description\": \"30 day Trial\",\n      \"amount\": 0,\n      \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n      \"created_at\": \"2020-07-14T15:21:42.959Z\",\n      \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n    }\n  ],\n  \"trial_plan\": {\n    \"recurring\": {\n      \"interval\": \"month\",\n      \"interval_count\": 3\n    },\n    \"is_trial_plan\": true,\n    \"plan_group\": \"default\",\n    \"tag_lines\": [\n      \"This is 2020won trial plan\",\n      \"This is 2020won trial plan\"\n    ],\n    \"currency\": \"INR\",\n    \"is_active\": true,\n    \"is_visible\": false,\n    \"trial_period\": 30,\n    \"addons\": [\n      \"ut sed dolore\",\n      \"magna minim sit\"\n    ],\n    \"tags\": [\n      \"fugiat qui deserunt Duis\",\n      \"eu fugiat consectetur\"\n    ],\n    \"type\": \"public\",\n    \"country\": \"IN\",\n    \"_id\": \"5f0dcd866173cb003706098f\",\n    \"name\": \"30 day Trial\",\n    \"description\": \"30 day Trial\",\n    \"amount\": 0,\n    \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n    \"created_at\": \"2020-07-14T15:21:42.959Z\",\n    \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n  },\n  \"component_groups\": [\n    \"Key Features\",\n    \"Key Features\"\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "49d28c25-edee-4b8d-9253-4e8c67d899e9",
              "name": "Resource not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform",
                      "value": "mobile/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Reason is required\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "7595e64b-3275-453b-89aa-addb92b9aba8",
              "name": "Internal server error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform",
                      "value": "mobile/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Opps something went wrong !!\",\n  \"code\": \"INTERNAL_SERVER_ERROR\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "c7c6329e-378f-4b6e-9678-aa764c6de892",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "2d04ef6f-0b10-4de9-8e85-397af38ec077",
          "name": "searchApplication | Search application",
          "request": {
            "name": "searchApplication | Search application",
            "description": {
              "content": "Provide application name or domain url.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "c3c41076-8322-4603-80e1-a41ce24d38d6",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "cupidatat nisi",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"application\": {\n    \"website\": {\n      \"enabled\": true,\n      \"basepath\": \"/\"\n    },\n    \"cors\": {\n      \"domains\": []\n    },\n    \"auth\": {\n      \"enabled\": true\n    },\n    \"description\": \"test\",\n    \"channel_type\": \"store\",\n    \"cache_ttl\": -1,\n    \"internal\": false,\n    \"is_active\": true,\n    \"mode\": \"live\",\n    \"_id\": \"620b931ee7bfb11f910bf4a3\",\n    \"company_id\": 2,\n    \"name\": \"test\",\n    \"owner\": \"5b9b98150df588546aaea6d2\",\n    \"logo\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"favicon\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"banner\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n    },\n    \"token\": \"tPQv0nc23\",\n    \"tokens\": [\n      {\n        \"token\": \"tPQv0nc23\",\n        \"created_at\": \"2022-02-15T11:48:46.909Z\"\n      }\n    ],\n    \"domains\": [\n      {\n        \"verified\": true,\n        \"is_primary\": true,\n        \"is_shortlink\": true,\n        \"_id\": \"620b931ee7bfb11f910bf4a4\",\n        \"name\": \"qckvv5lhp.hostfynd.dev\"\n      }\n    ],\n    \"redirections\": [],\n    \"meta\": [],\n    \"created_at\": \"2022-02-15T11:48:46.909Z\",\n    \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n    \"__v\": 0,\n    \"domain\": {\n      \"verified\": true,\n      \"is_primary\": true,\n      \"is_shortlink\": true,\n      \"_id\": \"620b931ee7bfb11f910bf4a4\",\n      \"name\": \"qckvv5lhp.hostfynd.dev\"\n    },\n    \"id\": \"620b931ee7bfb11f910bf4a3\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "4c16026c-5275-4081-8d63-5041aafbf8e2",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "cupidatat nisi",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"Invalid application domain or id.\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2faf83c5-9a76-4f86-834d-2fb3fc78a204",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "cupidatat nisi",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"No application found\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "5707ea78-ba51-4c93-adf1-5b40ceec6bfe",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {
              "content": "Get Location configuration",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "62dca0a0-d647-474b-b217-b394b0c885d6",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"items\": [\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"cillum in exercitation quis adipisicing\",\n      \"phone_code\": \"990999092\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"cillum et qui\",\n      \"country_code\": \"incididunt eu pariatur\",\n      \"latitude\": \"consectetur irure ipsum eu\",\n      \"longitude\": \"dolore qui voluptate Ut\"\n    },\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"sed in do cupidatat\",\n      \"phone_code\": \"990999092\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"ipsum ullamco dolor\",\n      \"country_code\": \"fugiat ex Ut\",\n      \"latitude\": \"deserunt incididun\",\n      \"longitude\": \"nulla Lorem aliquip\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "d6f46b03-3335-4244-a1a9-980c67c3d4de",
      "name": "Content",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "4cc91bc7-f0c8-4d7a-81e0-75117b96c174",
          "name": "getCredentialsByEntity | Get credentials to power chat support systems",
          "request": {
            "name": "getCredentialsByEntity | Get credentials to power chat support systems",
            "description": {
              "content": "Get credentials for support system",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "public",
                "content",
                "credentials",
                ":entity"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "entity",
                  "description": "(Required) Server Type"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "6a5e1a87-d7aa-4ab4-8da0-04f4979a66d8",
              "name": "Success. Refer `CredentialsSchema` for more details.",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "content",
                    "credentials",
                    ":entity"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "entity",
                      "description": "(Required) Server Type"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"entity_type\": \"partner\",\n  \"type\": \"freshchat\",\n  \"is_enable\": true,\n  \"configuration\": {\n    \"token\": \"a3e4gf20b-d11g-4512-n3zq-03b9aa7e1yxz\",\n    \"siteId\": \"a3e8f20b-d97f-452f-bd72-03b9aa7e1bf0\",\n    \"host\": \"https://wchat.freshchat.com\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3aab3ff6-b06b-46da-9849-22b1c6f1ccad",
              "name": "Bad Request. See the error object in the response body to know the exact reason.",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "content",
                    "credentials",
                    ":entity"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "entity",
                      "description": "(Required) Server Type"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Oops! Something went wrong. Please try later\",\n  \"status\": 400,\n  \"code\": \"CX-1003\",\n  \"exception\": \"\",\n  \"info\": \"\",\n  \"request_id\": \"\",\n  \"stack_trace\": \"\",\n  \"meta\": {}\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "1c571012-6f72-41b0-9038-4b7bc9aa9fbb",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "024565b0-bf68-4489-8f29-844edfcaf719",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "1bc1152f-cbae-489e-88cb-3c375ce7b398",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2012-04-24T22:24:07.497Z\",\n  \"status\": -23230571,\n  \"error\": \"Lorem cupidatat\",\n  \"exception\": \"Excepteur eu esse\",\n  \"message\": \"officia irure commodo\",\n  \"total_time_taken_in_millis\": 18007161,\n  \"http_status\": \"206 PARTIAL_CONTENT\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"qui irure laborum dolore aliquip\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5a515449-8807-4471-9f48-231ac0bb3191",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2012-04-24T22:24:07.497Z\",\n  \"status\": -23230571,\n  \"error\": \"Lorem cupidatat\",\n  \"exception\": \"Excepteur eu esse\",\n  \"message\": \"officia irure commodo\",\n  \"total_time_taken_in_millis\": 18007161,\n  \"http_status\": \"206 PARTIAL_CONTENT\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"qui irure laborum dolore aliquip\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "291d2b88-a29b-43f5-beb2-74651f4e9dd3",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2012-04-24T22:24:07.497Z\",\n  \"status\": -23230571,\n  \"error\": \"Lorem cupidatat\",\n  \"exception\": \"Excepteur eu esse\",\n  \"message\": \"officia irure commodo\",\n  \"total_time_taken_in_millis\": 18007161,\n  \"http_status\": \"206 PARTIAL_CONTENT\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"qui irure laborum dolore aliquip\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "cf0ccbc2-a490-4e2c-8d6e-2b9f923da952",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "4a687279-7f8a-402c-af8b-e16cdffa241d",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1966-07-05T11:45:36.648Z\",\n  \"status\": -27436459,\n  \"error\": \"amet Duis ad fugiat veniam\",\n  \"exception\": \"consequat proi\",\n  \"message\": \"laborum veniam magna culpa amet\",\n  \"total_time_taken_in_millis\": 45745598,\n  \"http_status\": \"200 OK\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"pariatur exercitation commodo\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "0511caf3-d8db-45e4-a4b7-7751ed32d234",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1966-07-05T11:45:36.648Z\",\n  \"status\": -27436459,\n  \"error\": \"amet Duis ad fugiat veniam\",\n  \"exception\": \"consequat proi\",\n  \"message\": \"laborum veniam magna culpa amet\",\n  \"total_time_taken_in_millis\": 45745598,\n  \"http_status\": \"200 OK\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"pariatur exercitation commodo\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b23a4750-6bee-4602-83b5-0f917a9d9155",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1966-07-05T11:45:36.648Z\",\n  \"status\": -27436459,\n  \"error\": \"amet Duis ad fugiat veniam\",\n  \"exception\": \"consequat proi\",\n  \"message\": \"laborum veniam magna culpa amet\",\n  \"total_time_taken_in_millis\": 45745598,\n  \"http_status\": \"200 OK\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"pariatur exercitation commodo\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3e0ebd8f-eef2-4f74-bfa4-68269c1e7678",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1966-07-05T11:45:36.648Z\",\n  \"status\": -27436459,\n  \"error\": \"amet Duis ad fugiat veniam\",\n  \"exception\": \"consequat proi\",\n  \"message\": \"laborum veniam magna culpa amet\",\n  \"total_time_taken_in_millis\": 45745598,\n  \"http_status\": \"200 OK\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"pariatur exercitation commodo\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "246d9077-a247-4aaa-82da-dd2a40faabac",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1966-07-05T11:45:36.648Z\",\n  \"status\": -27436459,\n  \"error\": \"amet Duis ad fugiat veniam\",\n  \"exception\": \"consequat proi\",\n  \"message\": \"laborum veniam magna culpa amet\",\n  \"total_time_taken_in_millis\": 45745598,\n  \"http_status\": \"200 OK\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"pariatur exercitation commodo\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "5c3fc312-1e0d-43ba-b3c0-75e0ee76ac60",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "e47e35bd-1b0e-44e9-9c3b-8488ad7f1fe6",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2022-06-20T18:01:36.360Z\",\n  \"status\": -79697310,\n  \"error\": \"velit ullamco\",\n  \"exception\": \"esse ipsum veniam quis\",\n  \"message\": \"ipsum consectetur\",\n  \"total_time_taken_in_millis\": -61432909,\n  \"http_status\": \"304 NOT_MODIFIED\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"ea in\",\n      \"description\": \"ut la\",\n      \"name\": \"est nulla dolore Excepteur\",\n      \"slug\": \"qui non ullamco cillum\",\n      \"meta\": [\n        {\n          \"_id\": \"Excepteur enim esse labore\",\n          \"name\": \"quis proident occaecat\",\n          \"value\": \"et anim nostrud\"\n        },\n        {\n          \"_id\": \"enim et exercitation consequat\",\n          \"name\": \"\",\n          \"value\": \"ipsum eu incididunt Excepteur\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"esse et sunt\",\n        \"integration\": \"in\",\n        \"level\": \"cupidatat\",\n        \"uid\": 32278115,\n        \"opted\": false,\n        \"permissions\": [\n          \"dolore occaecat proident est voluptate\",\n          \"do\"\n        ],\n        \"token\": \"ut labore\",\n        \"name\": \"ad laborum deserunt\",\n        \"stores\": [\n          {\n            \"_id\": \"consectetur proident in deserunt\",\n            \"integration\": \"ullamco commodo\",\n            \"level\": \"officia Ut cupidatat id\",\n            \"uid\": 12996934,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ipsum do sint occaecat\",\n            \"code\": \"Ut in eiusmod\",\n            \"name\": \"anim eiusmod occaecat adipisicing mollit\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"fugiat ad minim eu\",\n            \"integration\": \"ipsum velit laboris quis\",\n            \"level\": \"ullamco dolore\",\n            \"uid\": -7183321,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"quis ipsum anim labore dolore\",\n            \"code\": \"in ut minim ea\",\n            \"name\": \"Excepteur et fugiat commodo\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"quis amet proident est consectetur\",\n        \"integration\": \"consectetur\",\n        \"level\": \"aute culpa pariatur\",\n        \"uid\": -38999463,\n        \"opted\": false,\n        \"permissions\": [\n          \"consec\",\n          \"cupidatat labore ipsum ea\"\n        ],\n        \"token\": \"Ut in proident\",\n        \"name\": \"in\",\n        \"stores\": [\n          {\n            \"_id\": \"cupidatat ipsum\",\n            \"integration\": \"sed amet sunt aute\",\n            \"level\": \"quis labore aliquip in \",\n            \"uid\": 76875194,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"laboris eu ad id\",\n            \"code\": \"tempor sint\",\n            \"name\": \"ut\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"dolor eiusmod Lorem Duis\",\n            \"integration\": \"nisi exercitation ex\",\n            \"level\": \"sit laboris amet magna\",\n            \"uid\": 70240413,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"Ut cupidatat dolore \",\n            \"code\": \"dolor voluptate ea\",\n            \"name\": \"cillum dolore ad adipisicing\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"cillum consequat reprehenderit anim eiusmod\",\n      \"description\": \"ea\",\n      \"name\": \"nulla sit\",\n      \"slug\": \"quis\",\n      \"meta\": [\n        {\n          \"_id\": \"co\",\n          \"name\": \"aute sunt\",\n          \"value\": \"consectetur do nulla laborum\"\n        },\n        {\n          \"_id\": \"amet ipsum adipisicing velit nulla\",\n          \"name\": \"adipisicing quis\",\n          \"value\": \"in adipisicing aliqua\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"mollit adipisicing\",\n        \"integration\": \"sed est eu\",\n        \"level\": \"in in\",\n        \"uid\": 41592328,\n        \"opted\": true,\n        \"permissions\": [\n          \"ea nisi do ad\",\n          \"pariatur in dolor adipisicing\"\n        ],\n        \"token\": \"commodo ut aliqua id\",\n        \"name\": \"cupidatat velit\",\n        \"stores\": [\n          {\n            \"_id\": \"magna consequat\",\n            \"integration\": \"dolore\",\n            \"level\": \"reprehend\",\n            \"uid\": -49865381,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"d\",\n            \"code\": \"ut sit\",\n            \"name\": \"exercitation ut\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"ut sunt Ut\",\n            \"integration\": \"aliquip exercitation in sit minim\",\n            \"level\": \"dolor\",\n            \"uid\": 42165012,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"occaecat ad dolore incidi\",\n            \"code\": \"sint dolor commodo\",\n            \"name\": \"magna proident in laborum\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"est officia tempor\",\n        \"integration\": \"ut\",\n        \"level\": \"eu pariatur fugiat sed\",\n        \"uid\": 91471910,\n        \"opted\": false,\n        \"permissions\": [\n          \"dolor Except\",\n          \"et proident venia\"\n        ],\n        \"token\": \"nostrud\",\n        \"name\": \"eiusmod dolore conseq\",\n        \"stores\": [\n          {\n            \"_id\": \"adipisicing\",\n            \"integration\": \"Duis in id consectetu\",\n            \"level\": \"incididunt velit\",\n            \"uid\": 80329163,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"nostrud sunt do\",\n            \"code\": \"reprehenderit nisi quis occaecat\",\n            \"name\": \"aliqua\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"nostrud dolore in id enim\",\n            \"integration\": \"ad enim Duis\",\n            \"level\": \"aliqua aliquip esse\",\n            \"uid\": 26612743,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"nostrud dolore\",\n            \"code\": \"officia\",\n            \"name\": \"aliqua cons\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"sint cupidatat magna ut tempor\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "42ca5ff7-7b2e-4b7b-a2e9-2147abcf9cc2",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2000-07-24T15:05:23.905Z\",\n  \"status\": -9355104,\n  \"error\": \"incididunt eiusmod Lorem eu fugiat\",\n  \"exception\": \"pariatur nisi reprehenderit\",\n  \"message\": \"in velit\",\n  \"total_time_taken_in_millis\": 55706853,\n  \"http_status\": \"501 NOT_IMPLEMENTED\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"sun\",\n      \"description\": \"laborum dolore minim\",\n      \"name\": \"dolore ea\",\n      \"slug\": \"aliquip magna culpa ut\",\n      \"meta\": [\n        {\n          \"_id\": \"minim sit\",\n          \"name\": \"proident\",\n          \"value\": \"Excepteur consectetur amet\"\n        },\n        {\n          \"_id\": \"in minim laborum commodo in\",\n          \"name\": \"non anim commodo\",\n          \"value\": \"exercitation veniam\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"in sed proident ad\",\n        \"integration\": \"do\",\n        \"level\": \"ut ad\",\n        \"uid\": -45310182,\n        \"opted\": false,\n        \"permissions\": [\n          \"consequat\",\n          \"voluptate\"\n        ],\n        \"token\": \"eiusmod dolor\",\n        \"name\": \"incididunt dolor\",\n        \"stores\": [\n          {\n            \"_id\": \"nulla\",\n            \"integration\": \"dolore sint consequat\",\n            \"level\": \"culpa\",\n            \"uid\": 96640714,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"do in officia Lorem aliqua\",\n            \"code\": \"in dolore deserunt\",\n            \"name\": \"aute\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"eiusmod enim ullamco\",\n            \"integration\": \"veniam dolore esse tempor sint\",\n            \"level\": \"veniam id\",\n            \"uid\": 12071389,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"mollit aliquip dolor a\",\n            \"code\": \"pariatur\",\n            \"name\": \"in pariatur\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"dolor minim aute\",\n        \"integration\": \"Excepteur dolor esse\",\n        \"level\": \"culpa\",\n        \"uid\": -90102811,\n        \"opted\": true,\n        \"permissions\": [\n          \"officia dolor\",\n          \"consectetur aute proident venia\"\n        ],\n        \"token\": \"pariatur non do\",\n        \"name\": \"nostrud officia enim consectetur\",\n        \"stores\": [\n          {\n            \"_id\": \"consequat proident velit magna dolore\",\n            \"integration\": \"nisi mollit\",\n            \"level\": \"aliquip aliqua commodo\",\n            \"uid\": 65336021,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"enim nisi dolore\",\n            \"code\": \"cillum labore esse do\",\n            \"name\": \"Ut anim ut veniam\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"ut reprehenderit\",\n            \"integration\": \"pariatur adipisicing elit sit sunt\",\n            \"level\": \"cupidatat ullamco sit\",\n            \"uid\": -61908017,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"dolor Lorem cillum\",\n            \"code\": \"dolore\",\n            \"name\": \"velit cupidatat enim\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"non laborum reprehenderit Duis\",\n      \"description\": \"exercitation Excepteur sit anim\",\n      \"name\": \"qui est sunt\",\n      \"slug\": \"ex adipisicing eu dolore labore\",\n      \"meta\": [\n        {\n          \"_id\": \"sed id U\",\n          \"name\": \"culpa in est dolore\",\n          \"value\": \"officia quis aliqua deserunt\"\n        },\n        {\n          \"_id\": \"nostrud aliqua sed\",\n          \"name\": \"irure proident incididunt ullamco\",\n          \"value\": \"sunt fugiat ut\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"reprehenderit exercitation\",\n        \"integration\": \"ut Duis irure\",\n        \"level\": \"amet adipisicing nulla sunt\",\n        \"uid\": 58575045,\n        \"opted\": false,\n        \"permissions\": [\n          \"quis\",\n          \"officia esse\"\n        ],\n        \"token\": \"aliqua cupidatat\",\n        \"name\": \"anim ut ullamco in\",\n        \"stores\": [\n          {\n            \"_id\": \"quis proide\",\n            \"integration\": \"\",\n            \"level\": \"proident in ad eu\",\n            \"uid\": 75596213,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"amet Duis exercitation cupidatat minim\",\n            \"code\": \"in minim aliqua\",\n            \"name\": \"exercitation mollit\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"Ut mollit\",\n            \"integration\": \"sint ut irure magna\",\n            \"level\": \"veniam voluptate\",\n            \"uid\": 70621748,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"sunt commodo culpa\",\n            \"code\": \"proident in veniam\",\n            \"name\": \"sunt ullamco adipisicing\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"tempor et sit ipsum\",\n        \"integration\": \"culpa ullamco labore\",\n        \"level\": \"ad\",\n        \"uid\": -92714149,\n        \"opted\": false,\n        \"permissions\": [\n          \"ullamco non\",\n          \"aute exercitation cillum dolor\"\n        ],\n        \"token\": \"reprehenderit nulla aliquip irure\",\n        \"name\": \"laborum adipisicing veniam\",\n        \"stores\": [\n          {\n            \"_id\": \"ipsum dolor \",\n            \"integration\": \"nisi elit incididunt\",\n            \"level\": \"occaecat proident mollit\",\n            \"uid\": 78054951,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"incididunt eu magna sed\",\n            \"code\": \"ex ea\",\n            \"name\": \"Excepteur anim aliquip\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"dolore ut\",\n            \"integration\": \"aliquip\",\n            \"level\": \"ex dolore do\",\n            \"uid\": -35543726,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"sunt elit\",\n            \"code\": \"irure proident eiusmod esse\",\n            \"name\": \"dolor dolore nulla elit\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"Ut esse\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "457b20a3-a6b2-4d33-a60f-c60777cbe95b",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2000-07-24T15:05:23.905Z\",\n  \"status\": -9355104,\n  \"error\": \"incididunt eiusmod Lorem eu fugiat\",\n  \"exception\": \"pariatur nisi reprehenderit\",\n  \"message\": \"in velit\",\n  \"total_time_taken_in_millis\": 55706853,\n  \"http_status\": \"501 NOT_IMPLEMENTED\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"sun\",\n      \"description\": \"laborum dolore minim\",\n      \"name\": \"dolore ea\",\n      \"slug\": \"aliquip magna culpa ut\",\n      \"meta\": [\n        {\n          \"_id\": \"minim sit\",\n          \"name\": \"proident\",\n          \"value\": \"Excepteur consectetur amet\"\n        },\n        {\n          \"_id\": \"in minim laborum commodo in\",\n          \"name\": \"non anim commodo\",\n          \"value\": \"exercitation veniam\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"in sed proident ad\",\n        \"integration\": \"do\",\n        \"level\": \"ut ad\",\n        \"uid\": -45310182,\n        \"opted\": false,\n        \"permissions\": [\n          \"consequat\",\n          \"voluptate\"\n        ],\n        \"token\": \"eiusmod dolor\",\n        \"name\": \"incididunt dolor\",\n        \"stores\": [\n          {\n            \"_id\": \"nulla\",\n            \"integration\": \"dolore sint consequat\",\n            \"level\": \"culpa\",\n            \"uid\": 96640714,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"do in officia Lorem aliqua\",\n            \"code\": \"in dolore deserunt\",\n            \"name\": \"aute\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"eiusmod enim ullamco\",\n            \"integration\": \"veniam dolore esse tempor sint\",\n            \"level\": \"veniam id\",\n            \"uid\": 12071389,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"mollit aliquip dolor a\",\n            \"code\": \"pariatur\",\n            \"name\": \"in pariatur\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"dolor minim aute\",\n        \"integration\": \"Excepteur dolor esse\",\n        \"level\": \"culpa\",\n        \"uid\": -90102811,\n        \"opted\": true,\n        \"permissions\": [\n          \"officia dolor\",\n          \"consectetur aute proident venia\"\n        ],\n        \"token\": \"pariatur non do\",\n        \"name\": \"nostrud officia enim consectetur\",\n        \"stores\": [\n          {\n            \"_id\": \"consequat proident velit magna dolore\",\n            \"integration\": \"nisi mollit\",\n            \"level\": \"aliquip aliqua commodo\",\n            \"uid\": 65336021,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"enim nisi dolore\",\n            \"code\": \"cillum labore esse do\",\n            \"name\": \"Ut anim ut veniam\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"ut reprehenderit\",\n            \"integration\": \"pariatur adipisicing elit sit sunt\",\n            \"level\": \"cupidatat ullamco sit\",\n            \"uid\": -61908017,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"dolor Lorem cillum\",\n            \"code\": \"dolore\",\n            \"name\": \"velit cupidatat enim\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"non laborum reprehenderit Duis\",\n      \"description\": \"exercitation Excepteur sit anim\",\n      \"name\": \"qui est sunt\",\n      \"slug\": \"ex adipisicing eu dolore labore\",\n      \"meta\": [\n        {\n          \"_id\": \"sed id U\",\n          \"name\": \"culpa in est dolore\",\n          \"value\": \"officia quis aliqua deserunt\"\n        },\n        {\n          \"_id\": \"nostrud aliqua sed\",\n          \"name\": \"irure proident incididunt ullamco\",\n          \"value\": \"sunt fugiat ut\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"reprehenderit exercitation\",\n        \"integration\": \"ut Duis irure\",\n        \"level\": \"amet adipisicing nulla sunt\",\n        \"uid\": 58575045,\n        \"opted\": false,\n        \"permissions\": [\n          \"quis\",\n          \"officia esse\"\n        ],\n        \"token\": \"aliqua cupidatat\",\n        \"name\": \"anim ut ullamco in\",\n        \"stores\": [\n          {\n            \"_id\": \"quis proide\",\n            \"integration\": \"\",\n            \"level\": \"proident in ad eu\",\n            \"uid\": 75596213,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"amet Duis exercitation cupidatat minim\",\n            \"code\": \"in minim aliqua\",\n            \"name\": \"exercitation mollit\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"Ut mollit\",\n            \"integration\": \"sint ut irure magna\",\n            \"level\": \"veniam voluptate\",\n            \"uid\": 70621748,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"sunt commodo culpa\",\n            \"code\": \"proident in veniam\",\n            \"name\": \"sunt ullamco adipisicing\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"tempor et sit ipsum\",\n        \"integration\": \"culpa ullamco labore\",\n        \"level\": \"ad\",\n        \"uid\": -92714149,\n        \"opted\": false,\n        \"permissions\": [\n          \"ullamco non\",\n          \"aute exercitation cillum dolor\"\n        ],\n        \"token\": \"reprehenderit nulla aliquip irure\",\n        \"name\": \"laborum adipisicing veniam\",\n        \"stores\": [\n          {\n            \"_id\": \"ipsum dolor \",\n            \"integration\": \"nisi elit incididunt\",\n            \"level\": \"occaecat proident mollit\",\n            \"uid\": 78054951,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"incididunt eu magna sed\",\n            \"code\": \"ex ea\",\n            \"name\": \"Excepteur anim aliquip\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"dolore ut\",\n            \"integration\": \"aliquip\",\n            \"level\": \"ex dolore do\",\n            \"uid\": -35543726,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"sunt elit\",\n            \"code\": \"irure proident eiusmod esse\",\n            \"name\": \"dolor dolore nulla elit\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"Ut esse\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "674fb872-e214-4318-9195-5ab16d6839b2",
          "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
          "request": {
            "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "c0b7dee6-27c4-4f49-9025-8165d666f249",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1951-09-02T07:37:07.451Z\",\n  \"status\": -4675439,\n  \"error\": \"cupidatat elit nostrud\",\n  \"exception\": \"eiusmod sunt ea minim\",\n  \"message\": \"aute eu\",\n  \"total_time_taken_in_millis\": -26431515,\n  \"http_status\": \"509 BANDWIDTH_LIMIT_EXCEEDED\",\n  \"items\": {\n    \"session_id\": \"id culpa dolore\",\n    \"error_message\": \"cupidatat consectetur exercitation sint anim\"\n  },\n  \"payload\": {\n    \"session_id\": \"incididunt deserunt et in\",\n    \"error_message\": \"officia aliqua quis et\"\n  },\n  \"trace_id\": \"aliquip proident ipsum in\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ce5d65dc-ced9-4b9d-bdcf-3ba0d3db656f",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1951-09-02T07:37:07.451Z\",\n  \"status\": -4675439,\n  \"error\": \"cupidatat elit nostrud\",\n  \"exception\": \"eiusmod sunt ea minim\",\n  \"message\": \"aute eu\",\n  \"total_time_taken_in_millis\": -26431515,\n  \"http_status\": \"509 BANDWIDTH_LIMIT_EXCEEDED\",\n  \"items\": {\n    \"session_id\": \"id culpa dolore\",\n    \"error_message\": \"cupidatat consectetur exercitation sint anim\"\n  },\n  \"payload\": {\n    \"session_id\": \"incididunt deserunt et in\",\n    \"error_message\": \"officia aliqua quis et\"\n  },\n  \"trace_id\": \"aliquip proident ipsum in\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e4f9eeb5-e78b-47ca-b759-756d0a159690",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1951-09-02T07:37:07.451Z\",\n  \"status\": -4675439,\n  \"error\": \"cupidatat elit nostrud\",\n  \"exception\": \"eiusmod sunt ea minim\",\n  \"message\": \"aute eu\",\n  \"total_time_taken_in_millis\": -26431515,\n  \"http_status\": \"509 BANDWIDTH_LIMIT_EXCEEDED\",\n  \"items\": {\n    \"session_id\": \"id culpa dolore\",\n    \"error_message\": \"cupidatat consectetur exercitation sint anim\"\n  },\n  \"payload\": {\n    \"session_id\": \"incididunt deserunt et in\",\n    \"error_message\": \"officia aliqua quis et\"\n  },\n  \"trace_id\": \"aliquip proident ipsum in\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "bc8a207a-9b0f-4f7b-86d2-368e3e56a943",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "d19a4c4c-6c20-4ddb-99ed-afa0c0d67c1b",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1975-09-27T09:41:22.309Z\",\n  \"status\": -20798724,\n  \"error\": \"id\",\n  \"exception\": \"Duis minim dolor enim Lorem\",\n  \"message\": \"irure cupidatat sunt esse ex\",\n  \"total_time_taken_in_millis\": -70986368,\n  \"http_status\": \"421 DESTINATION_LOCKED\",\n  \"items\": {\n    \"company_id\": -9860951,\n    \"integration_data\": {\n      \"dolore_94\": {},\n      \"eu_78\": {}\n    },\n    \"company_name\": \"tempor Excepteur sint mollit\",\n    \"task_details\": {\n      \"type\": 75429730,\n      \"group_list\": [\n        {\n          \"text\": \"amet sint a\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"ullamco culpa est aliqua\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 60515219.19181949,\n      \"safe_stock\": -72756801,\n      \"period_threshold\": -73799277,\n      \"period_threshold_type\": \"MONTHS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"Lorem cupidatat consequat\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"aliqua exercitation\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"tempor dolore aute\",\n    \"alias\": \"anim\"\n  },\n  \"payload\": {\n    \"company_id\": -38131458,\n    \"integration_data\": {\n      \"Uta\": {}\n    },\n    \"company_name\": \"minim cillum tempor aliquip\",\n    \"task_details\": {\n      \"type\": 28491608,\n      \"group_list\": [\n        {\n          \"text\": \"ut\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 65758484.90812281,\n      \"safe_stock\": 1701537,\n      \"period_threshold\": -66593942,\n      \"period_threshold_type\": \"DAYS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"ut laborum Ut\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"nostrud irure sunt aliquip\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"sed laborum irure\",\n    \"alias\": \"aute veniam do in voluptate\"\n  },\n  \"trace_id\": \"et\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f95c1359-3f98-4bf3-9956-82bbb4437f27",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1963-01-07T23:53:27.724Z\",\n  \"status\": 62442306,\n  \"error\": \"Ut occaecat labori\",\n  \"exception\": \"labore ullamco deserunt ex\",\n  \"message\": \"et amet velit\",\n  \"total_time_taken_in_millis\": 94162302,\n  \"http_status\": \"509 BANDWIDTH_LIMIT_EXCEEDED\",\n  \"items\": {\n    \"company_id\": 20288721,\n    \"integration_data\": {\n      \"sit_2\": {}\n    },\n    \"company_name\": \"sit Excepteur\",\n    \"task_details\": {\n      \"type\": -3686401,\n      \"group_list\": [\n        {\n          \"text\": \"id irure voluptate enim pariatur\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"consectetur anim dolore Duis dolor\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 83760401.83932948,\n      \"safe_stock\": 76025213,\n      \"period_threshold\": 22341992,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"enim minim ut\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"in incididunt\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"aute in\",\n    \"alias\": \"fugiat amet sed enim\"\n  },\n  \"payload\": {\n    \"company_id\": -71493949,\n    \"integration_data\": {\n      \"magna_b\": {},\n      \"quisc7\": {},\n      \"do_907\": {}\n    },\n    \"company_name\": \"in anim proident laboris\",\n    \"task_details\": {\n      \"type\": 33166259,\n      \"group_list\": [\n        {\n          \"text\": \"aute laborum\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"anim\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -75065677.23385063,\n      \"safe_stock\": 13965653,\n      \"period_threshold\": 41276082,\n      \"period_threshold_type\": \"HOURS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"Lorem labore incididunt\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"irure pariatur u\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"non sint\",\n    \"alias\": \"amet proident ullamco occaecat\"\n  },\n  \"trace_id\": \"tempor veniam occaecat\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2b31d86e-4277-4b42-8030-1e14a85b179e",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1963-01-07T23:53:27.724Z\",\n  \"status\": 62442306,\n  \"error\": \"Ut occaecat labori\",\n  \"exception\": \"labore ullamco deserunt ex\",\n  \"message\": \"et amet velit\",\n  \"total_time_taken_in_millis\": 94162302,\n  \"http_status\": \"509 BANDWIDTH_LIMIT_EXCEEDED\",\n  \"items\": {\n    \"company_id\": 20288721,\n    \"integration_data\": {\n      \"sit_2\": {}\n    },\n    \"company_name\": \"sit Excepteur\",\n    \"task_details\": {\n      \"type\": -3686401,\n      \"group_list\": [\n        {\n          \"text\": \"id irure voluptate enim pariatur\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"consectetur anim dolore Duis dolor\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 83760401.83932948,\n      \"safe_stock\": 76025213,\n      \"period_threshold\": 22341992,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"enim minim ut\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"in incididunt\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"aute in\",\n    \"alias\": \"fugiat amet sed enim\"\n  },\n  \"payload\": {\n    \"company_id\": -71493949,\n    \"integration_data\": {\n      \"magna_b\": {},\n      \"quisc7\": {},\n      \"do_907\": {}\n    },\n    \"company_name\": \"in anim proident laboris\",\n    \"task_details\": {\n      \"type\": 33166259,\n      \"group_list\": [\n        {\n          \"text\": \"aute laborum\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"anim\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -75065677.23385063,\n      \"safe_stock\": 13965653,\n      \"period_threshold\": 41276082,\n      \"period_threshold_type\": \"HOURS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"Lorem labore incididunt\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"irure pariatur u\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"non sint\",\n    \"alias\": \"amet proident ullamco occaecat\"\n  },\n  \"trace_id\": \"tempor veniam occaecat\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "653860e6-b10d-494e-838a-506e544d16fc",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "c9bf8211-fa61-427c-ac8b-920234beab00",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1985-03-03T23:44:55.432Z\",\n  \"status\": -62384416,\n  \"error\": \"dolore do adipisicing reprehenderit\",\n  \"exception\": \"non sed proident ea\",\n  \"message\": \"tempor voluptate sit ad\",\n  \"total_time_taken_in_millis\": 52459822,\n  \"http_status\": \"422 UNPROCESSABLE_ENTITY\",\n  \"items\": [\n    {\n      \"company_id\": -95011017,\n      \"integration_data\": {\n        \"labore8cc\": {},\n        \"officia7\": {}\n      },\n      \"company_name\": \"sed in\",\n      \"task_details\": {\n        \"type\": 995971,\n        \"group_list\": [\n          {\n            \"text\": \"in\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"amet ea Ut\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -9093457.56341508,\n        \"safe_stock\": -10075511,\n        \"period_threshold\": -77722018,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"et cillum ut\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"l\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"culpa irure cupidatat\",\n      \"alias\": \"in aute minim\"\n    },\n    {\n      \"company_id\": -53148109,\n      \"integration_data\": {\n        \"aliquip2ad\": {}\n      },\n      \"company_name\": \"volu\",\n      \"task_details\": {\n        \"type\": -27258331,\n        \"group_list\": [\n          {\n            \"text\": \"incididunt aliqua Ut\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"dolor veniam nostrud\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 3601876.5941184163,\n        \"safe_stock\": -37929854,\n        \"period_threshold\": -5945495,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"id dolor eu nostrud\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"cupidatat commodo\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"amet qui\",\n      \"alias\": \"Duis aliquip in\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": -67800824,\n      \"integration_data\": {\n        \"dolor48\": {},\n        \"laboris8\": {},\n        \"est148\": {}\n      },\n      \"company_name\": \"sint\",\n      \"task_details\": {\n        \"type\": 20735355,\n        \"group_list\": [\n          {\n            \"text\": \"ullamco officia pariatur\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"nostrud sed\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -75843736.39089757,\n        \"safe_stock\": 22313350,\n        \"period_threshold\": -75359655,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"adipisicing in tempor\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"exercitation\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"veniam\",\n      \"alias\": \"non nisi labore occaecat\"\n    },\n    {\n      \"company_id\": -58710399,\n      \"integration_data\": {\n        \"voluptate_c\": {}\n      },\n      \"company_name\": \"amet ullamco est dolore\",\n      \"task_details\": {\n        \"type\": 54447108,\n        \"group_list\": [\n          {\n            \"text\": \"ut est in culpa\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"sunt mollit\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -17899528.416132957,\n        \"safe_stock\": -23230946,\n        \"period_threshold\": 44269606,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"adipisicing laboris sint cillum\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"veniam in ad irure\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"id eu adipisicing ipsum\",\n      \"alias\": \"dolore qui nisi magna tempor\"\n    }\n  ],\n  \"trace_id\": \"aute sint m\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "395b0364-4cde-4ea9-b27a-c8b5e3854069",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1965-02-10T20:20:13.361Z\",\n  \"status\": 19852502,\n  \"error\": \"qui exercitation consectetur sint\",\n  \"exception\": \"nulla f\",\n  \"message\": \"non \",\n  \"total_time_taken_in_millis\": 32842234,\n  \"http_status\": \"428 PRECONDITION_REQUIRED\",\n  \"items\": [\n    {\n      \"company_id\": 5841821,\n      \"integration_data\": {\n        \"eu_fc\": {}\n      },\n      \"company_name\": \"deserunt eiusmod minim\",\n      \"task_details\": {\n        \"type\": 41575930,\n        \"group_list\": [\n          {\n            \"text\": \"q\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"enim in\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -7267566.314176619,\n        \"safe_stock\": -40108606,\n        \"period_threshold\": -75499567,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"minim\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"quis occaecat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"dolor\",\n      \"alias\": \"proident tempor dolore\"\n    },\n    {\n      \"company_id\": -22905595,\n      \"integration_data\": {\n        \"ut_0a\": {}\n      },\n      \"company_name\": \"dolore anim irur\",\n      \"task_details\": {\n        \"type\": -88234510,\n        \"group_list\": [\n          {\n            \"text\": \"Lorem tempor occaecat ut veniam\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"elit qui dolore consequat Ut\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 335434.4827954024,\n        \"safe_stock\": 85553216,\n        \"period_threshold\": 29002695,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"sint deserunt\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"voluptate Lorem\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"tempor\",\n      \"alias\": \"dolor esse enim nostrud magna\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": 69805876,\n      \"integration_data\": {\n        \"ea_afb\": {},\n        \"enim5b7\": {},\n        \"mollit28d\": {}\n      },\n      \"company_name\": \"Duis e\",\n      \"task_details\": {\n        \"type\": 23820316,\n        \"group_list\": [\n          {\n            \"text\": \"Lorem velit reprehenderit dolor Excepteur\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"in enim ea laboris\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 97651594.89567265,\n        \"safe_stock\": 70291126,\n        \"period_threshold\": 16737165,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"sed nostrud cupidatat officia\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ex in\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"magna p\",\n      \"alias\": \"esse incididunt cillum adipisicing fugiat\"\n    },\n    {\n      \"company_id\": -35649216,\n      \"integration_data\": {\n        \"exercitation24\": {},\n        \"labore_3e\": {}\n      },\n      \"company_name\": \"deserunt Lorem do cupidatat est\",\n      \"task_details\": {\n        \"type\": 36567328,\n        \"group_list\": [\n          {\n            \"text\": \"incididunt labore q\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"in commodo sunt anim nostrud\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -48371430.35784566,\n        \"safe_stock\": 9282715,\n        \"period_threshold\": -2082527,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"in enim tempor quis\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"quis aliquip ea dolor\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"minim sit cupidatat\",\n      \"alias\": \"Lorem\"\n    }\n  ],\n  \"trace_id\": \"consectetur Lorem nulla ea labore\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1f8f56ef-6625-49b7-9f41-d2055cc2e299",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1965-02-10T20:20:13.361Z\",\n  \"status\": 19852502,\n  \"error\": \"qui exercitation consectetur sint\",\n  \"exception\": \"nulla f\",\n  \"message\": \"non \",\n  \"total_time_taken_in_millis\": 32842234,\n  \"http_status\": \"428 PRECONDITION_REQUIRED\",\n  \"items\": [\n    {\n      \"company_id\": 5841821,\n      \"integration_data\": {\n        \"eu_fc\": {}\n      },\n      \"company_name\": \"deserunt eiusmod minim\",\n      \"task_details\": {\n        \"type\": 41575930,\n        \"group_list\": [\n          {\n            \"text\": \"q\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"enim in\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -7267566.314176619,\n        \"safe_stock\": -40108606,\n        \"period_threshold\": -75499567,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"minim\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"quis occaecat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"dolor\",\n      \"alias\": \"proident tempor dolore\"\n    },\n    {\n      \"company_id\": -22905595,\n      \"integration_data\": {\n        \"ut_0a\": {}\n      },\n      \"company_name\": \"dolore anim irur\",\n      \"task_details\": {\n        \"type\": -88234510,\n        \"group_list\": [\n          {\n            \"text\": \"Lorem tempor occaecat ut veniam\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"elit qui dolore consequat Ut\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 335434.4827954024,\n        \"safe_stock\": 85553216,\n        \"period_threshold\": 29002695,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"sint deserunt\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"voluptate Lorem\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"tempor\",\n      \"alias\": \"dolor esse enim nostrud magna\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": 69805876,\n      \"integration_data\": {\n        \"ea_afb\": {},\n        \"enim5b7\": {},\n        \"mollit28d\": {}\n      },\n      \"company_name\": \"Duis e\",\n      \"task_details\": {\n        \"type\": 23820316,\n        \"group_list\": [\n          {\n            \"text\": \"Lorem velit reprehenderit dolor Excepteur\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"in enim ea laboris\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 97651594.89567265,\n        \"safe_stock\": 70291126,\n        \"period_threshold\": 16737165,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"sed nostrud cupidatat officia\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ex in\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"magna p\",\n      \"alias\": \"esse incididunt cillum adipisicing fugiat\"\n    },\n    {\n      \"company_id\": -35649216,\n      \"integration_data\": {\n        \"exercitation24\": {},\n        \"labore_3e\": {}\n      },\n      \"company_name\": \"deserunt Lorem do cupidatat est\",\n      \"task_details\": {\n        \"type\": 36567328,\n        \"group_list\": [\n          {\n            \"text\": \"incididunt labore q\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"in commodo sunt anim nostrud\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -48371430.35784566,\n        \"safe_stock\": 9282715,\n        \"period_threshold\": -2082527,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"in enim tempor quis\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"quis aliquip ea dolor\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"minim sit cupidatat\",\n      \"alias\": \"Lorem\"\n    }\n  ],\n  \"trace_id\": \"consectetur Lorem nulla ea labore\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "6a4634cf-ddfe-4642-9bcc-5c65efd5dd7f",
      "name": "Partner",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "f04a6e72-6576-4867-8dea-5c9ec652b07d",
          "name": "getPanelExtensionDetails | Get panel extension details",
          "request": {
            "name": "getPanelExtensionDetails | Get panel extension details",
            "description": {
              "content": "Retrieve detailed information about panel extensions in the public server setup.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "panel",
                "partners",
                "v1.0",
                "extensions",
                ":slug"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "slug",
                  "description": "(Required) pass the slug of the extension"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "2bd25274-4979-4651-884e-5803a403d987",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "panel",
                    "partners",
                    "v1.0",
                    "extensions",
                    ":slug"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "slug",
                      "description": "(Required) pass the slug of the extension"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"_id\": \"633ab5cb635a41fdde9fb648\",\n  \"organization_id\": \"6333fef3b1d85e44e738c138\",\n  \"extension_id\": \"633425ebb1d85e44e738c2ab\",\n  \"slug\": \"example-extension-1\",\n  \"scope\": [\n    \"company/profile\",\n    \"company/saleschannel\",\n    \"company/product\",\n    \"company/order\",\n    \"company/application/customer\",\n    \"company/application/analytics\",\n    \"company/application/storage\",\n    \"company/application/marketing\",\n    \"company/application/catalogue\",\n    \"company/application/communication\",\n    \"company/application/support\",\n    \"company/application/order\",\n    \"company/application/settings\"\n  ],\n  \"category\": {\n    \"categories_l1\": [],\n    \"categories_l2\": []\n  },\n  \"listing_info\": {\n    \"name\": \"ujjawal-example-extension-1\",\n    \"keywords\": [],\n    \"tagline\": \"test-extension for test how extensions look and work and how to create them\",\n    \"icon\": \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/AMwIEOw0U-logo.png\"\n  },\n  \"details\": {\n    \"benefits\": [\n      {\n        \"title\": \"Works fast\",\n        \"description\": \"works fast\",\n        \"_id\": \"633ab5cb635a41fdde9fb649\"\n      }\n    ],\n    \"screenshots\": {\n      \"desktop\": [\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/g95yHXkou-1024x576.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/IKdHxP2fN-1024x576.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/_auq1yvEp-1024x576.png\"\n      ],\n      \"mobile\": [\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/E_YAHM9cU-600x900.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/vEnXw9cCg-600x900.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/O3Wng4Rqn-600x900.png\"\n      ]\n    },\n    \"description\": \"Sample public extension\",\n    \"demo_url\": \"\",\n    \"video_url\": [\n      {\n        \"type\": \"video\",\n        \"url\": \"https://hdn-1.addsale.com/x0/products/videos/item/free/original/kizLVNWyS-video-sc-1.mp4\"\n      }\n    ],\n    \"integrations\": []\n  },\n  \"plan_type\": \"free\",\n  \"plans\": [\n    {\n      \"name\": \"Custom Free\",\n      \"features\": \"provides ease\",\n      \"type\": \"free\",\n      \"price\": {\n        \"amount\": 0,\n        \"currency\": \"INR\"\n      },\n      \"trial_days\": 0,\n      \"additional_charges\": \"\"\n    }\n  ],\n  \"plans_url\": \"\",\n  \"contact_info\": {\n    \"support\": {\n      \"email\": \"ujjawaltaleja@gofynd.com\",\n      \"phone\": \"7988169279\",\n      \"website_url\": \"\",\n      \"faq_url\": \"\",\n      \"privacy_policy_url\": \"\"\n    }\n  },\n  \"current_status\": \"active\",\n  \"coming_soon\": {\n    \"is_coming_soon\": false,\n    \"upvote_count\": 0\n  },\n  \"created_at\": \"2022-10-03T10:13:31.607Z\",\n  \"modified_at\": \"2022-10-03T10:13:31.607Z\",\n  \"organization\": {\n    \"name\": \"ujjawal-partners-fashion\",\n    \"slug\": \"ujjawa-w7t-68\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "f354b52c-3e76-47c5-8aeb-b47ad951eff7",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "e3fbd11e-0d02-4eeb-ab2a-867f8008626e",
          "name": "fetchAllWebhookEvents | Fetch all webhook events.",
          "request": {
            "name": "fetchAllWebhookEvents | Fetch all webhook events.",
            "description": {
              "content": "Retrieve a list of all webhook events in the public server setup.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "448fa74c-ab07-4f67-8685-e754e62c7df2",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "14792265-0c69-4822-86b8-6f686675d5a5",
          "name": "queryWebhookEventDetails | Query webhook event details.",
          "request": {
            "name": "queryWebhookEventDetails | Query webhook event details.",
            "description": {
              "content": "Query and obtain detailed information about webhook events in the public server configurations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "7c83ae2f-6878-42b3-95d5-5dc167d7d55c",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"event_name\": \"article\",\n    \"event_type\": \"update\",\n    \"event_category\": \"company\",\n    \"version\": \"1\"\n  }\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "f47c02da-f66f-46be-83cd-cad0652b481c",
          "name": "notifyDepricatedEvent | Notifies all the events that are going to depricate",
          "request": {
            "name": "notifyDepricatedEvent | Notifies all the events that are going to depricate",
            "description": {
              "content": "Notifies all the events that are subscribed and are going to deprecate or new version is available for those events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "depricated-event-notifier"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "b9a8d170-2792-4bb4-9905-bd1129407ccd",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "depricated-event-notifier"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "d85c1045-b390-4517-b878-0ca55c2b44f0",
          "name": "testHandlerTransformation | Test transformation of handler",
          "request": {
            "name": "testHandlerTransformation | Test transformation of handler",
            "description": {
              "content": "Test transformation of handler",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "transform-event"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event_name\": \"<string>\",\n  \"event_type\": \"<string>\",\n  \"event_category\": \"<string>\",\n  \"event_version\": \"<string>\",\n  \"event\": {\n    \"payload\": {\n      \"Lorem__\": false\n    },\n    \"meta\": {\n      \"enim_841\": -66390687.94795917,\n      \"laborum_1\": 64977242.51261395\n    }\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "342aa877-b5af-4ec0-966f-020ad22ead62",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "transform-event"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"event_name\": \"location\",\n  \"event_type\": \"create\",\n  \"event_category\": \"company\",\n  \"event_version\": \"1\",\n  \"event\": {\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450Z\",\n        \"modified_on\": \"2023-10-24T01:41:44.450Z\"\n      }\n    },\n    \"meta\": {\n      \"event\": {\n        \"type\": \"create\",\n        \"name\": \"location\",\n        \"version\": \"1\"\n      },\n      \"company_id\": 6086,\n      \"service\": {\n        \"name\": \"WheelJack\"\n      },\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"created_timestamp\": 1698111704725\n    }\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_trace_id\": [\n    \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n  ],\n  \"data\": {\n    \"event\": {\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"name\": \"location\",\n      \"type\": \"create\",\n      \"version\": \"1\",\n      \"created_timestamp\": 1698111704725\n    },\n    \"company_id\": 6086,\n    \"contains\": [\n      \"location\"\n    ],\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450Z\",\n        \"modified_on\": \"2023-10-24T01:41:44.450Z\"\n      }\n    }\n  },\n  \"event_name\": \"location\",\n  \"version\": \"1\",\n  \"status\": false,\n  \"event_type\": \"create\",\n  \"service_meta\": {\n    \"name\": \"WheelJack\"\n  },\n  \"association\": {\n    \"company_id\": 6086\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "3f496849-7c9a-46ba-9902-da57aa305c91",
          "name": "validateSchema | Validate Schema for an event",
          "request": {
            "name": "validateSchema | Validate Schema for an event",
            "description": {
              "content": "Validate Schema for an event",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "validate-event-schema"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event_name\": \"<string>\",\n  \"event_type\": \"<string>\",\n  \"event_category\": \"<string>\",\n  \"event_version\": \"<string>\",\n  \"event\": {\n    \"payload\": {\n      \"nisi27\": false,\n      \"estdc3\": \"non nulla Duis anim\",\n      \"labore5b_\": 51193103.76498526\n    },\n    \"meta\": {\n      \"Duis_76\": -42902719\n    }\n  },\n  \"event_schema\": {\n    \"aliquip__\": true,\n    \"id0\": 28955824.614292875,\n    \"quisb8\": -89020870.28794092\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "341acae6-6682-4818-b78e-d89aa643e864",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "validate-event-schema"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"event_name\": \"location\",\n  \"event_type\": \"create\",\n  \"event_category\": \"company\",\n  \"event_version\": \"1\",\n  \"event\": {\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450Z\",\n        \"modified_on\": \"2023-10-24T01:41:44.450Z\"\n      }\n    },\n    \"meta\": {\n      \"event\": {\n        \"type\": \"create\",\n        \"name\": \"location\",\n        \"version\": \"1\"\n      },\n      \"company_id\": 6086,\n      \"service\": {\n        \"name\": \"WheelJack\"\n      },\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"created_timestamp\": 1698111704725\n    }\n  },\n  \"event_schema\": {}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": true,\n  \"message\": \"Valid schema for this event\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fynd.com"
    }
  ],
  "info": {
    "_postman_id": "138edb76-58cf-452b-908b-279f95b8ab2f",
    "name": "Fynd Platform's Public Side APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public Side APIs",
      "type": "text/plain"
    }
  }
}
