{
  "item": [
    {
      "id": "9397c7a3-4289-40b3-b927-3561ab172032",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "25fdea59-3055-40a3-b610-7ebaf53005ba",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "3b46c8c7-2cd8-492f-bc53-2c6235a2fe64",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "in Duis incididunt reprehenderit",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"application\": {\n    \"website\": {\n      \"enabled\": true,\n      \"basepath\": \"/\"\n    },\n    \"cors\": {\n      \"domains\": []\n    },\n    \"auth\": {\n      \"enabled\": true\n    },\n    \"description\": \"test\",\n    \"channel_type\": \"store\",\n    \"cache_ttl\": -1,\n    \"internal\": false,\n    \"is_active\": true,\n    \"mode\": \"live\",\n    \"_id\": \"620b931ee7bfb11f910bf4a3\",\n    \"company_id\": 2,\n    \"name\": \"test\",\n    \"owner\": \"5b9b98150df588546aaea6d2\",\n    \"logo\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"favicon\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"banner\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n    },\n    \"token\": \"tPQv0nc23\",\n    \"tokens\": [\n      {\n        \"token\": \"tPQv0nc23\",\n        \"created_at\": \"2022-02-15T11:48:46.909Z\"\n      }\n    ],\n    \"domains\": [\n      {\n        \"verified\": true,\n        \"is_primary\": true,\n        \"is_shortlink\": true,\n        \"_id\": \"620b931ee7bfb11f910bf4a4\",\n        \"name\": \"qckvv5lhp.hostfynd.dev\"\n      }\n    ],\n    \"redirections\": [],\n    \"meta\": [],\n    \"created_at\": \"2022-02-15T11:48:46.909Z\",\n    \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n    \"__v\": 0,\n    \"domain\": {\n      \"verified\": true,\n      \"is_primary\": true,\n      \"is_shortlink\": true,\n      \"_id\": \"620b931ee7bfb11f910bf4a4\",\n      \"name\": \"qckvv5lhp.hostfynd.dev\"\n    },\n    \"id\": \"620b931ee7bfb11f910bf4a3\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1162c2f2-dda5-4ad5-9a68-9f70d0544802",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "in Duis incididunt reprehenderit",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"Invalid application domain or id.\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "7fca1770-129f-4c4b-8c9d-ef58b2022943",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "in Duis incididunt reprehenderit",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"No application found\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1df17703-940a-4ce0-b538-ec3789849638",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {
              "content": "Get Location configuration",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "14e6cb7a-b929-42ab-81f5-d0fb9f96bb60",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"items\": [\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"ex dolore amet eu\",\n      \"phone_code\": \"990999092\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"dolor dol\",\n      \"country_code\": \"elit\",\n      \"latitude\": \"ea dolor minim enim\",\n      \"longitude\": \"Excepteur in\"\n    },\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"ullamco laborum enim\",\n      \"phone_code\": \"990999092\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"velit\",\n      \"country_code\": \"quis sit\",\n      \"latitude\": \"eiusmod nostrud do\",\n      \"longitude\": \"officia Lo\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "a3c72646-40f6-4b02-92e0-c12f7468e8bc",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "4c2812d6-dcdb-4dc9-97a4-2140afe297bc",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "96d48475-419d-44d3-8d6c-8ccb223c9761",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1947-06-24T04:20:14.569Z\",\n  \"status\": 99742264,\n  \"error\": \"aliqua ex commodo\",\n  \"exception\": \"magna Ut\",\n  \"message\": \"aliqua do ex minim culpa\",\n  \"total_time_taken_in_millis\": -39878142,\n  \"http_status\": \"406 NOT_ACCEPTABLE\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"non velit\",\n  \"page\": {\n    \"type\": \"veli\",\n    \"size\": -47488068,\n    \"current\": -88847618,\n    \"has_next\": false,\n    \"item_total\": 92736751,\n    \"next_id\": \"proident tempor dolor\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "36ab77a2-18be-416e-96f6-5ca424f07aef",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1947-06-24T04:20:14.569Z\",\n  \"status\": 99742264,\n  \"error\": \"aliqua ex commodo\",\n  \"exception\": \"magna Ut\",\n  \"message\": \"aliqua do ex minim culpa\",\n  \"total_time_taken_in_millis\": -39878142,\n  \"http_status\": \"406 NOT_ACCEPTABLE\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"non velit\",\n  \"page\": {\n    \"type\": \"veli\",\n    \"size\": -47488068,\n    \"current\": -88847618,\n    \"has_next\": false,\n    \"item_total\": 92736751,\n    \"next_id\": \"proident tempor dolor\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c7700a31-7226-48b1-9f7d-7a58d7e0c832",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1947-06-24T04:20:14.569Z\",\n  \"status\": 99742264,\n  \"error\": \"aliqua ex commodo\",\n  \"exception\": \"magna Ut\",\n  \"message\": \"aliqua do ex minim culpa\",\n  \"total_time_taken_in_millis\": -39878142,\n  \"http_status\": \"406 NOT_ACCEPTABLE\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"non velit\",\n  \"page\": {\n    \"type\": \"veli\",\n    \"size\": -47488068,\n    \"current\": -88847618,\n    \"has_next\": false,\n    \"item_total\": 92736751,\n    \"next_id\": \"proident tempor dolor\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ff1b8646-7fbe-4715-ba29-99d6522e0a68",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "96b2749e-f84f-42fb-b8bb-3f80c297873f",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1970-07-09T07:13:11.376Z\",\n  \"status\": -82000574,\n  \"error\": \"labore minim commodo cupidatat exercitation\",\n  \"exception\": \"aliqua magna tempor\",\n  \"message\": \"commodo ut adipisicing anim labore\",\n  \"total_time_taken_in_millis\": 19519054,\n  \"http_status\": \"420 METHOD_FAILURE\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"incididunt occaecat\",\n  \"page\": {\n    \"type\": \"irure Duis reprehenderit amet\",\n    \"size\": -10987698,\n    \"current\": -25852578,\n    \"has_next\": false,\n    \"item_total\": 21927457,\n    \"next_id\": \"quis ea ut sunt deserunt\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "bf067ed4-bece-4dac-8a4f-e58a6e832687",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1970-07-09T07:13:11.376Z\",\n  \"status\": -82000574,\n  \"error\": \"labore minim commodo cupidatat exercitation\",\n  \"exception\": \"aliqua magna tempor\",\n  \"message\": \"commodo ut adipisicing anim labore\",\n  \"total_time_taken_in_millis\": 19519054,\n  \"http_status\": \"420 METHOD_FAILURE\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"incididunt occaecat\",\n  \"page\": {\n    \"type\": \"irure Duis reprehenderit amet\",\n    \"size\": -10987698,\n    \"current\": -25852578,\n    \"has_next\": false,\n    \"item_total\": 21927457,\n    \"next_id\": \"quis ea ut sunt deserunt\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "41ad8e3e-558c-41c5-bf1f-500d3861790f",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1970-07-09T07:13:11.376Z\",\n  \"status\": -82000574,\n  \"error\": \"labore minim commodo cupidatat exercitation\",\n  \"exception\": \"aliqua magna tempor\",\n  \"message\": \"commodo ut adipisicing anim labore\",\n  \"total_time_taken_in_millis\": 19519054,\n  \"http_status\": \"420 METHOD_FAILURE\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"incididunt occaecat\",\n  \"page\": {\n    \"type\": \"irure Duis reprehenderit amet\",\n    \"size\": -10987698,\n    \"current\": -25852578,\n    \"has_next\": false,\n    \"item_total\": 21927457,\n    \"next_id\": \"quis ea ut sunt deserunt\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c31675af-f6b3-4bdd-9c71-c6a5d641a675",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1970-07-09T07:13:11.376Z\",\n  \"status\": -82000574,\n  \"error\": \"labore minim commodo cupidatat exercitation\",\n  \"exception\": \"aliqua magna tempor\",\n  \"message\": \"commodo ut adipisicing anim labore\",\n  \"total_time_taken_in_millis\": 19519054,\n  \"http_status\": \"420 METHOD_FAILURE\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"incididunt occaecat\",\n  \"page\": {\n    \"type\": \"irure Duis reprehenderit amet\",\n    \"size\": -10987698,\n    \"current\": -25852578,\n    \"has_next\": false,\n    \"item_total\": 21927457,\n    \"next_id\": \"quis ea ut sunt deserunt\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "cb277518-3330-4cd9-b026-b0ab08e2a6dc",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1970-07-09T07:13:11.376Z\",\n  \"status\": -82000574,\n  \"error\": \"labore minim commodo cupidatat exercitation\",\n  \"exception\": \"aliqua magna tempor\",\n  \"message\": \"commodo ut adipisicing anim labore\",\n  \"total_time_taken_in_millis\": 19519054,\n  \"http_status\": \"420 METHOD_FAILURE\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"incididunt occaecat\",\n  \"page\": {\n    \"type\": \"irure Duis reprehenderit amet\",\n    \"size\": -10987698,\n    \"current\": -25852578,\n    \"has_next\": false,\n    \"item_total\": 21927457,\n    \"next_id\": \"quis ea ut sunt deserunt\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "63f51713-64c6-4cac-8b2d-184e8b61cd82",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "ba228a16-0bf4-4e8d-b24f-d1ea14aa7686",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1945-08-25T07:02:19.579Z\",\n  \"status\": 54609181,\n  \"error\": \"laborum eu ea Excepteur\",\n  \"exception\": \"sed magna ullamco dolore\",\n  \"message\": \"consectetur officia sit\",\n  \"total_time_taken_in_millis\": 15816404,\n  \"http_status\": \"502 BAD_GATEWAY\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"minim ut ea non\",\n      \"description\": \"et cupidatat in pariatur dolore\",\n      \"name\": \"nulla ut\",\n      \"slug\": \"in dolore dolore consectetur\",\n      \"meta\": [\n        {\n          \"_id\": \"Ut sint\",\n          \"name\": \"laborum\",\n          \"value\": \"dolor\"\n        },\n        {\n          \"_id\": \"dol\",\n          \"name\": \"quis reprehenderit cupidatat\",\n          \"value\": \"commodo proident\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"eiusmod in mollit dolor\",\n        \"integration\": \"Excepteur ea et id\",\n        \"level\": \"Duis in exercitation aute\",\n        \"uid\": 29408699,\n        \"opted\": true,\n        \"permissions\": [\n          \"in fugiat\",\n          \"quis proident Duis\"\n        ],\n        \"token\": \"ullamco sint\",\n        \"name\": \"esse ea nisi in\",\n        \"stores\": [\n          {\n            \"_id\": \"Lorem ut dolor\",\n            \"integration\": \"ut Duis proident\",\n            \"level\": \"culpa aliqua quis ut\",\n            \"uid\": 44984445,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"en\",\n            \"code\": \"exercitation\",\n            \"name\": \"nisi laboris mollit\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"pariatur exercitation et esse\",\n            \"integration\": \"eiusmod incididunt ullamco\",\n            \"level\": \"veniam minim dolor Ut\",\n            \"uid\": 76240549,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"deserunt ipsum esse\",\n            \"code\": \"sit\",\n            \"name\": \"tempor\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"incididunt commodo est velit\",\n        \"integration\": \"velit laboris eiusmod officia dolor\",\n        \"level\": \"in anim incididunt nulla labore\",\n        \"uid\": 87692026,\n        \"opted\": false,\n        \"permissions\": [\n          \"Lorem\",\n          \"cupidatat\"\n        ],\n        \"token\": \"ut\",\n        \"name\": \"amet\",\n        \"stores\": [\n          {\n            \"_id\": \"incididunt\",\n            \"integration\": \"non enim\",\n            \"level\": \"irure laboris est ullamco\",\n            \"uid\": 19915831,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"magna et sint fugiat\",\n            \"code\": \"eu Duis nisi mollit\",\n            \"name\": \"cupidatat amet\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"in enim qui\",\n            \"integration\": \"dolore nulla\",\n            \"level\": \"qui quis cillum commodo n\",\n            \"uid\": -30777584,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"id eiusmod\",\n            \"code\": \"do Duis culpa dolor\",\n            \"name\": \"ut velit\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"culpa tempor\",\n      \"description\": \"consectetur\",\n      \"name\": \"amet adipisicing fugiat\",\n      \"slug\": \"minim esse elit dolor\",\n      \"meta\": [\n        {\n          \"_id\": \"incididunt\",\n          \"name\": \"sint laboris dolor adipisicing\",\n          \"value\": \"nulla\"\n        },\n        {\n          \"_id\": \"irure mollit id ut Duis\",\n          \"name\": \"voluptate ea ipsum ad\",\n          \"value\": \"sit reprehenderit\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"proident in quis enim\",\n        \"integration\": \"nulla exercitation nostrud dolor dolor\",\n        \"level\": \"dolor laborum\",\n        \"uid\": 51971013,\n        \"opted\": false,\n        \"permissions\": [\n          \"cupidatat\",\n          \"fugiat voluptate velit ut aute\"\n        ],\n        \"token\": \"Lorem\",\n        \"name\": \"magna adipisicing do enim\",\n        \"stores\": [\n          {\n            \"_id\": \"nisi voluptate laborum\",\n            \"integration\": \"sint Lorem consectetur velit\",\n            \"level\": \"irure velit\",\n            \"uid\": 65079968,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"Lorem nulla adipisicing\",\n            \"code\": \"proident incididunt nisi \",\n            \"name\": \"culpa\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"enim aliqua mollit anim p\",\n            \"integration\": \"mollit sit ut dolor et\",\n            \"level\": \"tempor proident esse\",\n            \"uid\": -10058980,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"i\",\n            \"code\": \"dolore ut non cupidatat reprehenderit\",\n            \"name\": \"do qui\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"mollit quis sed Excepteur\",\n        \"integration\": \"enim mollit fugiat sit\",\n        \"level\": \"au\",\n        \"uid\": -56788477,\n        \"opted\": true,\n        \"permissions\": [\n          \"ut nisi commodo magna\",\n          \"velit reprehe\"\n        ],\n        \"token\": \"Excepteur id aliqua dolor\",\n        \"name\": \"enim\",\n        \"stores\": [\n          {\n            \"_id\": \"fugiat qui ipsum labore Lorem\",\n            \"integration\": \"in sed sunt proident\",\n            \"level\": \"ut laboris\",\n            \"uid\": -94849637,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ipsum laborum qui reprehenderit\",\n            \"code\": \"non ad\",\n            \"name\": \"voluptate deserunt reprehenderit dolor Excepteur\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"fugiat qui tempor\",\n            \"integration\": \"cupidatat laborum\",\n            \"level\": \"mollit sint sunt nostrud\",\n            \"uid\": -33702453,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"enim qui\",\n            \"code\": \"Ut Lorem deserunt pariatur\",\n            \"name\": \"commodo\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"commodo sit amet proident Lorem\",\n  \"page\": {\n    \"type\": \"non amet conseq\",\n    \"size\": -65167198,\n    \"current\": 89404418,\n    \"has_next\": false,\n    \"item_total\": -11057115,\n    \"next_id\": \"veniam cupidatat tempor\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9a2e5f3b-54f9-4bba-9264-00bc9eff1810",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1988-06-16T15:55:15.328Z\",\n  \"status\": -25138054,\n  \"error\": \"quis non sunt\",\n  \"exception\": \"exercitation id culpa\",\n  \"message\": \"sit\",\n  \"total_time_taken_in_millis\": 84463292,\n  \"http_status\": \"414 URI_TOO_LONG\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"adipisicing officia minim\",\n      \"description\": \"do velit ullamco\",\n      \"name\": \"fugiat amet est magna ex\",\n      \"slug\": \"ad aliqua do deserunt\",\n      \"meta\": [\n        {\n          \"_id\": \"reprehenderit nisi est nostrud\",\n          \"name\": \"cupidatat proident reprehenderit do sed\",\n          \"value\": \"consequat est laborum\"\n        },\n        {\n          \"_id\": \"consectetur magna sed ullamco ut\",\n          \"name\": \"Ut et\",\n          \"value\": \"sit minim sint d\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"ex qui commodo\",\n        \"integration\": \"cupidatat officia id nostrud\",\n        \"level\": \"Excepteur culpa dolore fugiat velit\",\n        \"uid\": -30532474,\n        \"opted\": false,\n        \"permissions\": [\n          \"dolor\",\n          \"cillum in sed ut\"\n        ],\n        \"token\": \"laboris\",\n        \"name\": \"fugiat qui\",\n        \"stores\": [\n          {\n            \"_id\": \"laborum\",\n            \"integration\": \"reprehenderit dolore eiusmod ut enim\",\n            \"level\": \"in irure n\",\n            \"uid\": -4990498,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"aliquip\",\n            \"code\": \"elit veniam nulla sunt\",\n            \"name\": \"Duis laboris cillum adipisicing\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"consectetur elit dolore ea\",\n            \"integration\": \"esse laborum occaecat aliquip id\",\n            \"level\": \"sit ut ipsum\",\n            \"uid\": -23461030,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"Dui\",\n            \"code\": \"ut dolore esse dolor\",\n            \"name\": \"reprehenderit amet mollit cillum\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"\",\n        \"integration\": \"ullamco magna tempor irure\",\n        \"level\": \"consectetur Lorem\",\n        \"uid\": -54551605,\n        \"opted\": true,\n        \"permissions\": [\n          \"ea velit est elit\",\n          \"laboris\"\n        ],\n        \"token\": \"aliquip in aliqua occaecat dolore\",\n        \"name\": \"nulla\",\n        \"stores\": [\n          {\n            \"_id\": \"commodo consectetur eu\",\n            \"integration\": \"labore ipsum nostrud qui\",\n            \"level\": \"enim labore mollit repre\",\n            \"uid\": 48403201,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"culpa fugi\",\n            \"code\": \"dolor amet dolore id\",\n            \"name\": \"v\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"sed officia consectetur culpa occaecat\",\n            \"integration\": \"culpa qui anim\",\n            \"level\": \"in ut\",\n            \"uid\": 2485363,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"laboris non aliquip reprehenderit\",\n            \"code\": \"cupidatat non consequat\",\n            \"name\": \"officia do est minim\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"elit velit Excepteur esse\",\n      \"description\": \"in\",\n      \"name\": \"pariatur dolor enim nisi\",\n      \"slug\": \"tempor anim\",\n      \"meta\": [\n        {\n          \"_id\": \"ut ex a\",\n          \"name\": \"ullamco eu ea\",\n          \"value\": \"in voluptate\"\n        },\n        {\n          \"_id\": \"sed officia\",\n          \"name\": \"tempor\",\n          \"value\": \"amet Excepteur sit deserunt pariatur\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"fugiat reprehenderit\",\n        \"integration\": \"culpa velit\",\n        \"level\": \"nisi of\",\n        \"uid\": 27225737,\n        \"opted\": true,\n        \"permissions\": [\n          \"nisi ut minim\",\n          \"ex irure nostrud Excepteur dolor\"\n        ],\n        \"token\": \"in amet\",\n        \"name\": \"est aliquip dolore\",\n        \"stores\": [\n          {\n            \"_id\": \"labore consequat qui\",\n            \"integration\": \"id et ex\",\n            \"level\": \"esse aute ut tempor est\",\n            \"uid\": 8053729,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"enim aliqua non velit\",\n            \"code\": \"in elit\",\n            \"name\": \"et cupidatat\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"qui dolor\",\n            \"integration\": \"pariatur laborum\",\n            \"level\": \"anim\",\n            \"uid\": -37039734,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"id \",\n            \"code\": \"et do\",\n            \"name\": \"qui aliquip sunt\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"eiusmod exercitation\",\n        \"integration\": \"reprehenderit ullamco\",\n        \"level\": \"mollit minim eu\",\n        \"uid\": 46542269,\n        \"opted\": false,\n        \"permissions\": [\n          \"voluptate ea elit ex\",\n          \"cupidatat anim ea\"\n        ],\n        \"token\": \"in ex elit\",\n        \"name\": \"exercitation aliquip ad\",\n        \"stores\": [\n          {\n            \"_id\": \"ullamco ut \",\n            \"integration\": \"veniam voluptate\",\n            \"level\": \"fugiat consectetur irure\",\n            \"uid\": -98480044,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"laboris sunt ipsum\",\n            \"code\": \"ullamco Ut\",\n            \"name\": \"voluptate ex do Duis in\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"cil\",\n            \"integration\": \"eiusmod Lorem\",\n            \"level\": \"nostrud voluptate \",\n            \"uid\": -82598351,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"irure et labore elit id\",\n            \"code\": \"veniam ad\",\n            \"name\": \"do ad non labore\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"ut et Excepteur Duis\",\n  \"page\": {\n    \"type\": \"cillum dolore elit commodo\",\n    \"size\": 36884416,\n    \"current\": -10462591,\n    \"has_next\": true,\n    \"item_total\": 1324710,\n    \"next_id\": \"ea id est sit\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5a70e14c-44c6-4dbf-9c06-58304610d219",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1988-06-16T15:55:15.328Z\",\n  \"status\": -25138054,\n  \"error\": \"quis non sunt\",\n  \"exception\": \"exercitation id culpa\",\n  \"message\": \"sit\",\n  \"total_time_taken_in_millis\": 84463292,\n  \"http_status\": \"414 URI_TOO_LONG\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"adipisicing officia minim\",\n      \"description\": \"do velit ullamco\",\n      \"name\": \"fugiat amet est magna ex\",\n      \"slug\": \"ad aliqua do deserunt\",\n      \"meta\": [\n        {\n          \"_id\": \"reprehenderit nisi est nostrud\",\n          \"name\": \"cupidatat proident reprehenderit do sed\",\n          \"value\": \"consequat est laborum\"\n        },\n        {\n          \"_id\": \"consectetur magna sed ullamco ut\",\n          \"name\": \"Ut et\",\n          \"value\": \"sit minim sint d\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"ex qui commodo\",\n        \"integration\": \"cupidatat officia id nostrud\",\n        \"level\": \"Excepteur culpa dolore fugiat velit\",\n        \"uid\": -30532474,\n        \"opted\": false,\n        \"permissions\": [\n          \"dolor\",\n          \"cillum in sed ut\"\n        ],\n        \"token\": \"laboris\",\n        \"name\": \"fugiat qui\",\n        \"stores\": [\n          {\n            \"_id\": \"laborum\",\n            \"integration\": \"reprehenderit dolore eiusmod ut enim\",\n            \"level\": \"in irure n\",\n            \"uid\": -4990498,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"aliquip\",\n            \"code\": \"elit veniam nulla sunt\",\n            \"name\": \"Duis laboris cillum adipisicing\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"consectetur elit dolore ea\",\n            \"integration\": \"esse laborum occaecat aliquip id\",\n            \"level\": \"sit ut ipsum\",\n            \"uid\": -23461030,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"Dui\",\n            \"code\": \"ut dolore esse dolor\",\n            \"name\": \"reprehenderit amet mollit cillum\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"\",\n        \"integration\": \"ullamco magna tempor irure\",\n        \"level\": \"consectetur Lorem\",\n        \"uid\": -54551605,\n        \"opted\": true,\n        \"permissions\": [\n          \"ea velit est elit\",\n          \"laboris\"\n        ],\n        \"token\": \"aliquip in aliqua occaecat dolore\",\n        \"name\": \"nulla\",\n        \"stores\": [\n          {\n            \"_id\": \"commodo consectetur eu\",\n            \"integration\": \"labore ipsum nostrud qui\",\n            \"level\": \"enim labore mollit repre\",\n            \"uid\": 48403201,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"culpa fugi\",\n            \"code\": \"dolor amet dolore id\",\n            \"name\": \"v\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"sed officia consectetur culpa occaecat\",\n            \"integration\": \"culpa qui anim\",\n            \"level\": \"in ut\",\n            \"uid\": 2485363,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"laboris non aliquip reprehenderit\",\n            \"code\": \"cupidatat non consequat\",\n            \"name\": \"officia do est minim\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"elit velit Excepteur esse\",\n      \"description\": \"in\",\n      \"name\": \"pariatur dolor enim nisi\",\n      \"slug\": \"tempor anim\",\n      \"meta\": [\n        {\n          \"_id\": \"ut ex a\",\n          \"name\": \"ullamco eu ea\",\n          \"value\": \"in voluptate\"\n        },\n        {\n          \"_id\": \"sed officia\",\n          \"name\": \"tempor\",\n          \"value\": \"amet Excepteur sit deserunt pariatur\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"fugiat reprehenderit\",\n        \"integration\": \"culpa velit\",\n        \"level\": \"nisi of\",\n        \"uid\": 27225737,\n        \"opted\": true,\n        \"permissions\": [\n          \"nisi ut minim\",\n          \"ex irure nostrud Excepteur dolor\"\n        ],\n        \"token\": \"in amet\",\n        \"name\": \"est aliquip dolore\",\n        \"stores\": [\n          {\n            \"_id\": \"labore consequat qui\",\n            \"integration\": \"id et ex\",\n            \"level\": \"esse aute ut tempor est\",\n            \"uid\": 8053729,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"enim aliqua non velit\",\n            \"code\": \"in elit\",\n            \"name\": \"et cupidatat\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"qui dolor\",\n            \"integration\": \"pariatur laborum\",\n            \"level\": \"anim\",\n            \"uid\": -37039734,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"id \",\n            \"code\": \"et do\",\n            \"name\": \"qui aliquip sunt\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"eiusmod exercitation\",\n        \"integration\": \"reprehenderit ullamco\",\n        \"level\": \"mollit minim eu\",\n        \"uid\": 46542269,\n        \"opted\": false,\n        \"permissions\": [\n          \"voluptate ea elit ex\",\n          \"cupidatat anim ea\"\n        ],\n        \"token\": \"in ex elit\",\n        \"name\": \"exercitation aliquip ad\",\n        \"stores\": [\n          {\n            \"_id\": \"ullamco ut \",\n            \"integration\": \"veniam voluptate\",\n            \"level\": \"fugiat consectetur irure\",\n            \"uid\": -98480044,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"laboris sunt ipsum\",\n            \"code\": \"ullamco Ut\",\n            \"name\": \"voluptate ex do Duis in\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"cil\",\n            \"integration\": \"eiusmod Lorem\",\n            \"level\": \"nostrud voluptate \",\n            \"uid\": -82598351,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"irure et labore elit id\",\n            \"code\": \"veniam ad\",\n            \"name\": \"do ad non labore\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"ut et Excepteur Duis\",\n  \"page\": {\n    \"type\": \"cillum dolore elit commodo\",\n    \"size\": 36884416,\n    \"current\": -10462591,\n    \"has_next\": true,\n    \"item_total\": 1324710,\n    \"next_id\": \"ea id est sit\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1c87f553-b100-4600-98b4-3035f74011bb",
          "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
          "request": {
            "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "3ce8b440-deaa-4305-b675-659c5991a85d",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1980-04-27T05:20:25.906Z\",\n  \"status\": -53461989,\n  \"error\": \"ullamco\",\n  \"exception\": \"cillum enim laboris\",\n  \"message\": \"mollit anim dolore\",\n  \"total_time_taken_in_millis\": -26083578,\n  \"http_status\": \"207 MULTI_STATUS\",\n  \"items\": {\n    \"session_id\": \"incididunt laborum sed commo\",\n    \"error_message\": \"irure\"\n  },\n  \"payload\": {\n    \"session_id\": \"proiden\",\n    \"error_message\": \"dolore in et\"\n  },\n  \"trace_id\": \"nostrud\",\n  \"page\": {\n    \"type\": \"deserunt magna Duis labore occaecat\",\n    \"size\": 8102206,\n    \"current\": 83736412,\n    \"has_next\": true,\n    \"item_total\": 31487016,\n    \"next_id\": \"esse nisi ipsum ut\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e8b70bdc-c37f-458b-8dd9-00921f0fe77e",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1980-04-27T05:20:25.906Z\",\n  \"status\": -53461989,\n  \"error\": \"ullamco\",\n  \"exception\": \"cillum enim laboris\",\n  \"message\": \"mollit anim dolore\",\n  \"total_time_taken_in_millis\": -26083578,\n  \"http_status\": \"207 MULTI_STATUS\",\n  \"items\": {\n    \"session_id\": \"incididunt laborum sed commo\",\n    \"error_message\": \"irure\"\n  },\n  \"payload\": {\n    \"session_id\": \"proiden\",\n    \"error_message\": \"dolore in et\"\n  },\n  \"trace_id\": \"nostrud\",\n  \"page\": {\n    \"type\": \"deserunt magna Duis labore occaecat\",\n    \"size\": 8102206,\n    \"current\": 83736412,\n    \"has_next\": true,\n    \"item_total\": 31487016,\n    \"next_id\": \"esse nisi ipsum ut\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "6b59e26c-28c5-44ce-8ce6-a79113eb2898",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1980-04-27T05:20:25.906Z\",\n  \"status\": -53461989,\n  \"error\": \"ullamco\",\n  \"exception\": \"cillum enim laboris\",\n  \"message\": \"mollit anim dolore\",\n  \"total_time_taken_in_millis\": -26083578,\n  \"http_status\": \"207 MULTI_STATUS\",\n  \"items\": {\n    \"session_id\": \"incididunt laborum sed commo\",\n    \"error_message\": \"irure\"\n  },\n  \"payload\": {\n    \"session_id\": \"proiden\",\n    \"error_message\": \"dolore in et\"\n  },\n  \"trace_id\": \"nostrud\",\n  \"page\": {\n    \"type\": \"deserunt magna Duis labore occaecat\",\n    \"size\": 8102206,\n    \"current\": 83736412,\n    \"has_next\": true,\n    \"item_total\": 31487016,\n    \"next_id\": \"esse nisi ipsum ut\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "6ccad38c-9532-436a-b2eb-68a1f9e449b0",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "6c42fe62-f624-48ee-b028-e02002fd65ea",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1967-11-14T18:37:08.210Z\",\n  \"status\": -83162271,\n  \"error\": \"sed dolore in\",\n  \"exception\": \"ad aute consequat tempor\",\n  \"message\": \"veniam qui occaecat in aliquip\",\n  \"total_time_taken_in_millis\": 84014832,\n  \"http_status\": \"302 FOUND\",\n  \"items\": {\n    \"company_id\": 20113879,\n    \"integration_data\": {\n      \"cillum_0_3\": {},\n      \"aute_2\": {},\n      \"nulla_\": {}\n    },\n    \"company_name\": \"nisi adipisicing\",\n    \"task_details\": {\n      \"type\": 30780850,\n      \"group_list\": [\n        {\n          \"text\": \"ad ullamco veniam i\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"cillum aute exercitation\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 95812041.1870175,\n      \"safe_stock\": -57408776,\n      \"period_threshold\": 21404570,\n      \"period_threshold_type\": \"DAYS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"minim laborum\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"veniam sunt non minim\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"Ut id ullamco\",\n    \"alias\": \"officia magna pariatur minim\"\n  },\n  \"payload\": {\n    \"company_id\": 35086791,\n    \"integration_data\": {\n      \"proident_a9\": {}\n    },\n    \"company_name\": \"\",\n    \"task_details\": {\n      \"type\": -53616604,\n      \"group_list\": [\n        {\n          \"text\": \"ut in\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"velit\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 99081947.10228792,\n      \"safe_stock\": -65081706,\n      \"period_threshold\": 32332917,\n      \"period_threshold_type\": \"HOURS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"commodo cillum culpa\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"in anim \",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"mollit id et non anim\",\n    \"alias\": \"Ut\"\n  },\n  \"trace_id\": \"ullamco dolor occaecat Lorem\",\n  \"page\": {\n    \"type\": \"sunt aliquip nulla\",\n    \"size\": -34422964,\n    \"current\": -71222745,\n    \"has_next\": false,\n    \"item_total\": 24534883,\n    \"next_id\": \"aute eiusmod ullamco\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1de988ba-fa53-4c17-ba97-1469bcae8792",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1967-07-22T14:01:12.455Z\",\n  \"status\": -23080568,\n  \"error\": \"sit dolore ullamco labo\",\n  \"exception\": \"laboris ipsum quis\",\n  \"message\": \"consectetur non Lorem ex\",\n  \"total_time_taken_in_millis\": 69235498,\n  \"http_status\": \"415 UNSUPPORTED_MEDIA_TYPE\",\n  \"items\": {\n    \"company_id\": -60949049,\n    \"integration_data\": {\n      \"aliqua_5\": {},\n      \"sunt_5\": {}\n    },\n    \"company_name\": \"pariatur\",\n    \"task_details\": {\n      \"type\": 8249136,\n      \"group_list\": [\n        {\n          \"text\": \"irure minim culpa et magna\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"consectetur voluptate ad\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 19732530.45013669,\n      \"safe_stock\": -82004938,\n      \"period_threshold\": 1824668,\n      \"period_threshold_type\": \"DAYS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"voluptate Lorem\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"reprehenderit eiusmod enim Duis ul\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"deserunt dolore nisi laborum dolor\",\n    \"alias\": \"ipsum velit\"\n  },\n  \"payload\": {\n    \"company_id\": -95661124,\n    \"integration_data\": {\n      \"aliquip_47\": {},\n      \"elit__2c\": {}\n    },\n    \"company_name\": \"officia magna\",\n    \"task_details\": {\n      \"type\": 94734486,\n      \"group_list\": [\n        {\n          \"text\": \"Excepteur deserunt\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"dolore est\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 25723802.996719196,\n      \"safe_stock\": -20023569,\n      \"period_threshold\": 8063845,\n      \"period_threshold_type\": \"MONTHS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"dolor aliquip esse pariatur\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"in eu ut sunt\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"esse\",\n    \"alias\": \"exercitation ex nisi irure\"\n  },\n  \"trace_id\": \"Lorem nisi et dolore\",\n  \"page\": {\n    \"type\": \"in veniam exercitation ipsum irure\",\n    \"size\": -66005776,\n    \"current\": 89369462,\n    \"has_next\": false,\n    \"item_total\": -18503187,\n    \"next_id\": \"cillum ex\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5a5d4383-8c8b-4cad-88c6-7901dc075891",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1967-07-22T14:01:12.455Z\",\n  \"status\": -23080568,\n  \"error\": \"sit dolore ullamco labo\",\n  \"exception\": \"laboris ipsum quis\",\n  \"message\": \"consectetur non Lorem ex\",\n  \"total_time_taken_in_millis\": 69235498,\n  \"http_status\": \"415 UNSUPPORTED_MEDIA_TYPE\",\n  \"items\": {\n    \"company_id\": -60949049,\n    \"integration_data\": {\n      \"aliqua_5\": {},\n      \"sunt_5\": {}\n    },\n    \"company_name\": \"pariatur\",\n    \"task_details\": {\n      \"type\": 8249136,\n      \"group_list\": [\n        {\n          \"text\": \"irure minim culpa et magna\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"consectetur voluptate ad\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 19732530.45013669,\n      \"safe_stock\": -82004938,\n      \"period_threshold\": 1824668,\n      \"period_threshold_type\": \"DAYS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"voluptate Lorem\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"reprehenderit eiusmod enim Duis ul\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"deserunt dolore nisi laborum dolor\",\n    \"alias\": \"ipsum velit\"\n  },\n  \"payload\": {\n    \"company_id\": -95661124,\n    \"integration_data\": {\n      \"aliquip_47\": {},\n      \"elit__2c\": {}\n    },\n    \"company_name\": \"officia magna\",\n    \"task_details\": {\n      \"type\": 94734486,\n      \"group_list\": [\n        {\n          \"text\": \"Excepteur deserunt\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"dolore est\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 25723802.996719196,\n      \"safe_stock\": -20023569,\n      \"period_threshold\": 8063845,\n      \"period_threshold_type\": \"MONTHS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"dolor aliquip esse pariatur\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"in eu ut sunt\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"esse\",\n    \"alias\": \"exercitation ex nisi irure\"\n  },\n  \"trace_id\": \"Lorem nisi et dolore\",\n  \"page\": {\n    \"type\": \"in veniam exercitation ipsum irure\",\n    \"size\": -66005776,\n    \"current\": 89369462,\n    \"has_next\": false,\n    \"item_total\": -18503187,\n    \"next_id\": \"cillum ex\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "564c55bd-7df0-4112-888f-91b4a462b319",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "8ed8b7f0-3b50-45c1-a18b-77edd5681a46",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1994-02-02T07:58:27.218Z\",\n  \"status\": 49417030,\n  \"error\": \"ad aliquip occaecat\",\n  \"exception\": \"ullamco dolore enim quis\",\n  \"message\": \"eiusmod\",\n  \"total_time_taken_in_millis\": 58179811,\n  \"http_status\": \"421 DESTINATION_LOCKED\",\n  \"items\": [\n    {\n      \"company_id\": 73772580,\n      \"integration_data\": {\n        \"aliquip_d\": {},\n        \"velit20e\": {}\n      },\n      \"company_name\": \"minim culpa sit incididunt\",\n      \"task_details\": {\n        \"type\": -53216444,\n        \"group_list\": [\n          {\n            \"text\": \"amet nisi in enim\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"dolor eu sint anim qui\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 79649783.34824005,\n        \"safe_stock\": -68583811,\n        \"period_threshold\": -88791481,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"eiusmod occaecat id\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"tempor ex velit fugiat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"cupidatat ea ut in\",\n      \"alias\": \"fugiat deserun\"\n    },\n    {\n      \"company_id\": -80308786,\n      \"integration_data\": {\n        \"commodof8e\": {},\n        \"nostrud_40\": {}\n      },\n      \"company_name\": \"culpa\",\n      \"task_details\": {\n        \"type\": -11769795,\n        \"group_list\": [\n          {\n            \"text\": \"veniam eu in \",\n            \"value\": {}\n          },\n          {\n            \"text\": \"minim Ut ut\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 85087047.08561915,\n        \"safe_stock\": -67905478,\n        \"period_threshold\": 19780966,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"sint quis\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"enim commodo in Ut\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"officia incididunt nulla\",\n      \"alias\": \"Ut et\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": -71136662,\n      \"integration_data\": {\n        \"velita\": {},\n        \"sit_e\": {}\n      },\n      \"company_name\": \"in irure\",\n      \"task_details\": {\n        \"type\": -52610327,\n        \"group_list\": [\n          {\n            \"text\": \"Ut esse sit do\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ullamco exercitation aute\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -79699420.70679581,\n        \"safe_stock\": -42373706,\n        \"period_threshold\": -91928376,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"cupidatat tempor\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"consectetur labore\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"enim anim\",\n      \"alias\": \"ad amet ex voluptate\"\n    },\n    {\n      \"company_id\": -81158134,\n      \"integration_data\": {\n        \"dolore0\": {},\n        \"sed_7\": {}\n      },\n      \"company_name\": \"cillum et dolore dolore\",\n      \"task_details\": {\n        \"type\": -77938972,\n        \"group_list\": [\n          {\n            \"text\": \"consectetur irure sint in\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"deserunt commodo\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -16628835.308175832,\n        \"safe_stock\": 81843289,\n        \"period_threshold\": 98941861,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"incididunt aliquip\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"est Lorem ea\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"ad occaecat voluptate do\",\n      \"alias\": \"ut Ut\"\n    }\n  ],\n  \"trace_id\": \"exercitation cillum dolor laborum tempor\",\n  \"page\": {\n    \"type\": \"exercitation ipsum eu\",\n    \"size\": -49126509,\n    \"current\": 11653229,\n    \"has_next\": true,\n    \"item_total\": -95435373,\n    \"next_id\": \"deserunt mollit elit dolor\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e5e521a3-2168-41fa-8599-57526b5a6702",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1970-06-25T00:44:41.733Z\",\n  \"status\": -85227015,\n  \"error\": \"magna pariatur Excepteur\",\n  \"exception\": \"Excepteur laboris\",\n  \"message\": \"eu sed exercitation labore\",\n  \"total_time_taken_in_millis\": 20198353,\n  \"http_status\": \"413 REQUEST_ENTITY_TOO_LARGE\",\n  \"items\": [\n    {\n      \"company_id\": 96466272,\n      \"integration_data\": {\n        \"elit75\": {}\n      },\n      \"company_name\": \"irure reprehenderit eiusmod\",\n      \"task_details\": {\n        \"type\": 91877370,\n        \"group_list\": [\n          {\n            \"text\": \"dolore qui \",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ex deserunt dolore\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -7823313.140721396,\n        \"safe_stock\": -25278823,\n        \"period_threshold\": 23702450,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"dolore velit aliqua Lorem\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"est incididunt in aliq\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"ad nostrud sunt ullamco laborum\",\n      \"alias\": \"culpa consectetur occaecat cillum irure\"\n    },\n    {\n      \"company_id\": 29694819,\n      \"integration_data\": {\n        \"irure12\": {},\n        \"sint1b9\": {}\n      },\n      \"company_name\": \"consectetur off\",\n      \"task_details\": {\n        \"type\": 43117038,\n        \"group_list\": [\n          {\n            \"text\": \"id Duis aliqua\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"dolore minim eu\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 74800441.3840357,\n        \"safe_stock\": -82331169,\n        \"period_threshold\": 3794601,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"cons\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"eiusmod aliq\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"nostrud cupidatat\",\n      \"alias\": \"ut ut anim do\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": 42551551,\n      \"integration_data\": {\n        \"ine_\": {},\n        \"cillum_67\": {}\n      },\n      \"company_name\": \"culpa ullamco\",\n      \"task_details\": {\n        \"type\": 14934065,\n        \"group_list\": [\n          {\n            \"text\": \"est dolor Lorem anim\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ei\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -19520099.845571354,\n        \"safe_stock\": 16088228,\n        \"period_threshold\": 34112304,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"voluptate eu\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"minim eu\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"nulla irure dolor\",\n      \"alias\": \"adipisicing velit id eu\"\n    },\n    {\n      \"company_id\": -67282468,\n      \"integration_data\": {\n        \"sint81\": {},\n        \"incididunt0b7\": {}\n      },\n      \"company_name\": \"tempor quis Ut labore\",\n      \"task_details\": {\n        \"type\": 85199165,\n        \"group_list\": [\n          {\n            \"text\": \"voluptate in\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"aute labore consectetur\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -13333278.704118356,\n        \"safe_stock\": 43188879,\n        \"period_threshold\": 86716311,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"anim\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"null\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"aute nostrud eu officia\",\n      \"alias\": \"laborum ut\"\n    }\n  ],\n  \"trace_id\": \"aliqua proident veniam\",\n  \"page\": {\n    \"type\": \"fugiat labore r\",\n    \"size\": -88596543,\n    \"current\": -8203012,\n    \"has_next\": true,\n    \"item_total\": -99941915,\n    \"next_id\": \"sunt est\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "330afa09-1dd1-4794-8e7d-ce086b0d19b3",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1970-06-25T00:44:41.733Z\",\n  \"status\": -85227015,\n  \"error\": \"magna pariatur Excepteur\",\n  \"exception\": \"Excepteur laboris\",\n  \"message\": \"eu sed exercitation labore\",\n  \"total_time_taken_in_millis\": 20198353,\n  \"http_status\": \"413 REQUEST_ENTITY_TOO_LARGE\",\n  \"items\": [\n    {\n      \"company_id\": 96466272,\n      \"integration_data\": {\n        \"elit75\": {}\n      },\n      \"company_name\": \"irure reprehenderit eiusmod\",\n      \"task_details\": {\n        \"type\": 91877370,\n        \"group_list\": [\n          {\n            \"text\": \"dolore qui \",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ex deserunt dolore\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -7823313.140721396,\n        \"safe_stock\": -25278823,\n        \"period_threshold\": 23702450,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"dolore velit aliqua Lorem\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"est incididunt in aliq\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"ad nostrud sunt ullamco laborum\",\n      \"alias\": \"culpa consectetur occaecat cillum irure\"\n    },\n    {\n      \"company_id\": 29694819,\n      \"integration_data\": {\n        \"irure12\": {},\n        \"sint1b9\": {}\n      },\n      \"company_name\": \"consectetur off\",\n      \"task_details\": {\n        \"type\": 43117038,\n        \"group_list\": [\n          {\n            \"text\": \"id Duis aliqua\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"dolore minim eu\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 74800441.3840357,\n        \"safe_stock\": -82331169,\n        \"period_threshold\": 3794601,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"cons\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"eiusmod aliq\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"nostrud cupidatat\",\n      \"alias\": \"ut ut anim do\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": 42551551,\n      \"integration_data\": {\n        \"ine_\": {},\n        \"cillum_67\": {}\n      },\n      \"company_name\": \"culpa ullamco\",\n      \"task_details\": {\n        \"type\": 14934065,\n        \"group_list\": [\n          {\n            \"text\": \"est dolor Lorem anim\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ei\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -19520099.845571354,\n        \"safe_stock\": 16088228,\n        \"period_threshold\": 34112304,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"voluptate eu\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"minim eu\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"nulla irure dolor\",\n      \"alias\": \"adipisicing velit id eu\"\n    },\n    {\n      \"company_id\": -67282468,\n      \"integration_data\": {\n        \"sint81\": {},\n        \"incididunt0b7\": {}\n      },\n      \"company_name\": \"tempor quis Ut labore\",\n      \"task_details\": {\n        \"type\": 85199165,\n        \"group_list\": [\n          {\n            \"text\": \"voluptate in\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"aute labore consectetur\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -13333278.704118356,\n        \"safe_stock\": 43188879,\n        \"period_threshold\": 86716311,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"anim\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"null\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"aute nostrud eu officia\",\n      \"alias\": \"laborum ut\"\n    }\n  ],\n  \"trace_id\": \"aliqua proident veniam\",\n  \"page\": {\n    \"type\": \"fugiat labore r\",\n    \"size\": -88596543,\n    \"current\": -8203012,\n    \"has_next\": true,\n    \"item_total\": -99941915,\n    \"next_id\": \"sunt est\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "323b9135-4163-4a5e-8c71-35214b4ecc3a",
      "name": "Partner",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "03d40616-44e7-4b51-9c8b-ea3998a2b1cd",
          "name": "getPanelExtensionDetails | Get extension details",
          "request": {
            "name": "getPanelExtensionDetails | Get extension details",
            "description": {
              "content": "Use this API to get extension details",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "panel",
                "partners",
                "v1.0",
                "extensions",
                ":slug"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "slug",
                  "description": "(Required) pass the slug of the extension"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "82d9e26c-4c7b-4dbf-b5de-0638f2cf5681",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "panel",
                    "partners",
                    "v1.0",
                    "extensions",
                    ":slug"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "slug",
                      "description": "(Required) pass the slug of the extension"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"_id\": \"633ab5cb635a41fdde9fb648\",\n  \"organization_id\": \"6333fef3b1d85e44e738c138\",\n  \"extension_id\": \"633425ebb1d85e44e738c2ab\",\n  \"slug\": \"example-extension-1\",\n  \"scope\": [\n    \"company/profile\",\n    \"company/saleschannel\",\n    \"company/product\",\n    \"company/order\",\n    \"company/application/customer\",\n    \"company/application/analytics\",\n    \"company/application/storage\",\n    \"company/application/marketing\",\n    \"company/application/catalogue\",\n    \"company/application/communication\",\n    \"company/application/support\",\n    \"company/application/order\",\n    \"company/application/settings\"\n  ],\n  \"category\": {\n    \"categories_l1\": [],\n    \"categories_l2\": []\n  },\n  \"listing_info\": {\n    \"name\": \"ujjawal-example-extension-1\",\n    \"keywords\": [],\n    \"tagline\": \"test-extension for test how extensions look and work and how to create them\",\n    \"icon\": \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/AMwIEOw0U-logo.png\"\n  },\n  \"details\": {\n    \"benefits\": [\n      {\n        \"title\": \"Works fast\",\n        \"description\": \"works fast\",\n        \"_id\": \"633ab5cb635a41fdde9fb649\"\n      }\n    ],\n    \"screenshots\": {\n      \"desktop\": [\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/g95yHXkou-1024x576.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/IKdHxP2fN-1024x576.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/_auq1yvEp-1024x576.png\"\n      ],\n      \"mobile\": [\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/E_YAHM9cU-600x900.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/vEnXw9cCg-600x900.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/O3Wng4Rqn-600x900.png\"\n      ]\n    },\n    \"description\": \"Sample public extension\",\n    \"demo_url\": \"\",\n    \"video_url\": [\n      {\n        \"type\": \"video\",\n        \"url\": \"https://hdn-1.addsale.com/x0/products/videos/item/free/original/kizLVNWyS-video-sc-1.mp4\"\n      }\n    ],\n    \"integrations\": []\n  },\n  \"plan_type\": \"free\",\n  \"plans\": [\n    {\n      \"name\": \"Custom Free\",\n      \"features\": \"provides ease\",\n      \"type\": \"free\",\n      \"price\": {\n        \"amount\": 0,\n        \"currency\": \"INR\"\n      },\n      \"trial_days\": 0,\n      \"additional_charges\": \"\"\n    }\n  ],\n  \"plans_url\": \"\",\n  \"contact_info\": {\n    \"support\": {\n      \"email\": \"ujjawaltaleja@gofynd.com\",\n      \"phone\": \"7988169279\",\n      \"website_url\": \"\",\n      \"faq_url\": \"\",\n      \"privacy_policy_url\": \"\"\n    }\n  },\n  \"current_status\": \"active\",\n  \"coming_soon\": {\n    \"is_coming_soon\": false,\n    \"upvote_count\": 0\n  },\n  \"created_at\": \"2022-10-03T10:13:31.607Z\",\n  \"modified_at\": \"2022-10-03T10:13:31.607Z\",\n  \"organization\": {\n    \"name\": \"ujjawal-partners-fashion\",\n    \"slug\": \"ujjawa-w7t-68\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "bad639d1-d97d-4da9-ba38-a91f585663f2",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "2a6979c1-3063-4fd7-8822-dd013727bd91",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "92d1ef46-6667-4abe-a021-0e22823d50eb",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 94049873,\n      \"event_name\": \"et non adipisicing Lorem \",\n      \"event_type\": \"ex nulla sint\",\n      \"event_category\": \"eiusmod adipisicing esse nulla cillum\",\n      \"version\": \"do deser\",\n      \"display_name\": \"in\",\n      \"description\": \"laborum minim esse aute\",\n      \"created_on\": \"nostrud ullamco occaecat\"\n    },\n    {\n      \"id\": -65640344,\n      \"event_name\": \"irure sed Ut nostrud\",\n      \"event_type\": \"laboris dolor dolore velit\",\n      \"event_category\": \"magna consequat laborum\",\n      \"version\": \"pariatur\",\n      \"display_name\": \"id veniam cupidatat\",\n      \"description\": \"adipisicing pariatur occaecat\",\n      \"created_on\": \"et veniam sint\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ca12088f-aaa9-44b3-b071-762d98012149",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "be276d9c-b342-411d-883e-4351c94742dc",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 24000799,\n      \"event_name\": \"sed incididunt velit\",\n      \"event_type\": \"nulla aliquip elit aute laboris\",\n      \"event_category\": \"sed Ut\",\n      \"version\": \"reprehenderit eu\",\n      \"display_name\": \"incididunt et cillum\",\n      \"description\": \"q\",\n      \"created_on\": \"mollit dolore anim est\"\n    },\n    {\n      \"id\": 13404051,\n      \"event_name\": \"qu\",\n      \"event_type\": \"deserunt sunt\",\n      \"event_category\": \"laboris reprehenderit deserunt elit\",\n      \"version\": \"sed velit tempor\",\n      \"display_name\": \"eu mollit\",\n      \"description\": \"sint Ut sit dolor\",\n      \"created_on\": \"dolor\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fynd.com"
    }
  ],
  "info": {
    "_postman_id": "ee5ee60d-00a1-42ff-b85e-ac06fac6829e",
    "name": "Fynd Platform's Public Side APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public Side APIs",
      "type": "text/plain"
    }
  }
}
