{
  "item": [
    {
      "id": "78d429e2-4d52-4a3e-bd74-315b00ab3f5e",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "3a2d2e16-d33b-4949-910f-3f416b721a9f",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "4830254c-e2f8-4f97-967d-5489adacd7fd",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "ci",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "41e36dca-cfca-46f9-b4d0-8027a99228a8",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "ci",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"Bad request\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "dfd60fec-6a03-455b-834b-90be2ad5e15c",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "ci",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "1d3a04c3-5da7-480b-a934-fd6b20760738",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "a7313438-fabb-402d-b0f3-22e757c34790",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "b646e194-1fc8-401d-babb-7ee8fd066cf9",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "ece5df9e-533a-44c5-ab69-83d8b01e5669",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "d2ab7dae-635f-4500-a482-46bc3699078a",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 82168837,\n   \"event_name\": \"nulla exercitation velit\",\n   \"event_type\": \"dolore eiusmod nulla Duis in\",\n   \"event_category\": \"incididunt eiusmod sit\",\n   \"version\": \"magna anim do dolore non\",\n   \"display_name\": \"sunt \",\n   \"description\": \"non officia pariatur amet\",\n   \"created_on\": \"nostrud qui et\"\n  },\n  {\n   \"id\": 86542754,\n   \"event_name\": \"sunt anim elit dolor\",\n   \"event_type\": \"ad in cillu\",\n   \"event_category\": \"quis in magna minim\",\n   \"version\": \"nostrud cillum \",\n   \"display_name\": \"sint laboris\",\n   \"description\": \"consequat ad fugiat\",\n   \"created_on\": \"pariatur aute adipisicing cillum\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "c3ba273a-fecf-4d7f-9c35-d2aca62dfbed",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "4f122d8b-5616-4b26-a142-8c4f3d6359da",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -35102222,\n   \"event_name\": \"proident Duis sit ad in\",\n   \"event_type\": \"ipsum aliqua\",\n   \"event_category\": \"consequat nostrud dolore in\",\n   \"version\": \"consequat dolor\",\n   \"display_name\": \"esse sunt aute\",\n   \"description\": \"dolore officia non ullamco\",\n   \"created_on\": \"non qui quis ut\"\n  },\n  {\n   \"id\": 70516061,\n   \"event_name\": \"occaecat velit\",\n   \"event_type\": \"proident ex nostrud ullamco officia\",\n   \"event_category\": \"deserunt exercitation\",\n   \"version\": \"aliquip proident aliqua\",\n   \"display_name\": \"dolore qui\",\n   \"description\": \"velit enim in occaecat sint\",\n   \"created_on\": \"sit Excepteur\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "42ab3a75-c3e9-41f8-b665-b8f7a8cd3e12",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "cdc53fd7-3c13-488c-8089-6e3fcaa10ec7",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "5e7a5d98-7c9c-410f-b198-2faf1e33a66b",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1991-04-26T04:32:44.765Z\",\n \"status\": 10276481,\n \"error\": \"velit nulla\",\n \"exception\": \"non cillum in occaecat\",\n \"message\": \"Lorem dolor ipsum\",\n \"total_time_taken_in_millis\": -35510228,\n \"http_status\": \"207 MULTI_STATUS\",\n \"items\": [\n  {\n   \"company_id\": 76918427,\n   \"integration_data\": {},\n   \"company_name\": \"eiusmod mollit elit\",\n   \"task_details\": {\n    \"type\": -32121352,\n    \"group_list\": [\n     {\n      \"text\": \"officia occaecat ut elit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"c\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -80237162.97233637,\n    \"safe_stock\": 58725675,\n    \"period_threshold\": -32755901,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"aute nulla irure\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"tempor sint eiusmod mollit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"exercitation est nostrud\",\n   \"alias\": \"ipsum et\"\n  },\n  {\n   \"company_id\": -51337948,\n   \"integration_data\": {},\n   \"company_name\": \"sunt reprehenderit eu\",\n   \"task_details\": {\n    \"type\": 27723181,\n    \"group_list\": [\n     {\n      \"text\": \"esse incididunt in ex\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"tempor reprehenderit lab\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -63679957.06112537,\n    \"safe_stock\": 56517862,\n    \"period_threshold\": -94512047,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"nisi anim aute fugiat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ex enim sint in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ullamco sint amet\",\n   \"alias\": \"id exercitation magna Duis\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 51987057,\n   \"integration_data\": {},\n   \"company_name\": \"elit\",\n   \"task_details\": {\n    \"type\": -54131013,\n    \"group_list\": [\n     {\n      \"text\": \"tempor Lorem in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor ipsum ex Ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 63811537.13303295,\n    \"safe_stock\": -63923980,\n    \"period_threshold\": -34678574,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolor in nisi est\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ea elit reprehenderit irure do\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"reprehenderit\",\n   \"alias\": \"eiusmod occaecat\"\n  },\n  {\n   \"company_id\": 42769887,\n   \"integration_data\": {},\n   \"company_name\": \"anim consectetur\",\n   \"task_details\": {\n    \"type\": -91337441,\n    \"group_list\": [\n     {\n      \"text\": \"dolore do\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nisi\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -22289155.272180855,\n    \"safe_stock\": 96548226,\n    \"period_threshold\": -95522896,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"amet laboris eiusmod\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"elit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ut Lorem\",\n   \"alias\": \"sint labore\"\n  }\n ],\n \"trace_id\": \"ullamco id repr\",\n \"page\": {\n  \"type\": \"ea quis velit\",\n  \"size\": 66453379,\n  \"current\": -9151383,\n  \"has_next\": false,\n  \"item_total\": -25248754,\n  \"next_id\": \"sunt Duis\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "45ae16d5-397f-4b4d-a1c8-7b8218ec40bb",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1990-11-15T14:00:59.279Z\",\n \"status\": 80436579,\n \"error\": \"nulla in\",\n \"exception\": \"consectetur nisi ad ex\",\n \"message\": \"aliquip Ut culpa aliqua\",\n \"total_time_taken_in_millis\": 25064493,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": [\n  {\n   \"company_id\": 54161676,\n   \"integration_data\": {},\n   \"company_name\": \"irure\",\n   \"task_details\": {\n    \"type\": 49832747,\n    \"group_list\": [\n     {\n      \"text\": \"culpa aliqua pariatur Excepteur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"qui\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -66061054.27486857,\n    \"safe_stock\": -98101029,\n    \"period_threshold\": 62420874,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"elit Duis irure\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"est ullamco nostrud\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"deserunt id sunt ad in\",\n   \"alias\": \"consectetur amet pariatur non aliquip\"\n  },\n  {\n   \"company_id\": -94512525,\n   \"integration_data\": {},\n   \"company_name\": \"quis cupida\",\n   \"task_details\": {\n    \"type\": 7971405,\n    \"group_list\": [\n     {\n      \"text\": \"d\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consectetur minim cillum non ex\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -12025092.037567124,\n    \"safe_stock\": -44798880,\n    \"period_threshold\": 16420875,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"cupidatat laborum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"reprehenderit a\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"amet deserunt exercitation\",\n   \"alias\": \"aliqua\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 44989319,\n   \"integration_data\": {},\n   \"company_name\": \"proident ipsum\",\n   \"task_details\": {\n    \"type\": 57034856,\n    \"group_list\": [\n     {\n      \"text\": \"qui\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laboris nisi culpa non ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -34634277.97765681,\n    \"safe_stock\": 61604573,\n    \"period_threshold\": 94435007,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"elit Excepteur minim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in non occaecat aliquip\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"labore\",\n   \"alias\": \"ex sunt quis nisi enim\"\n  },\n  {\n   \"company_id\": 52599663,\n   \"integration_data\": {},\n   \"company_name\": \"et cupidatat velit exercitation voluptate\",\n   \"task_details\": {\n    \"type\": -97294542,\n    \"group_list\": [\n     {\n      \"text\": \"esse\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"mollit nostrud\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -61514068.51469341,\n    \"safe_stock\": -20362574,\n    \"period_threshold\": -94690968,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"anim Lorem sed id\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"veniam nulla esse commodo\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"mollit dolor\",\n   \"alias\": \"aute nisi incididunt commo\"\n  }\n ],\n \"trace_id\": \"aliqua elit\",\n \"page\": {\n  \"type\": \"in fugiat ut culpa\",\n  \"size\": 90190085,\n  \"current\": -61330870,\n  \"has_next\": true,\n  \"item_total\": -47115678,\n  \"next_id\": \"sint officia eu aliquip\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d6a75597-a7fb-4fc1-85ef-9e1c9649f49d",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1990-11-15T14:00:59.279Z\",\n \"status\": 80436579,\n \"error\": \"nulla in\",\n \"exception\": \"consectetur nisi ad ex\",\n \"message\": \"aliquip Ut culpa aliqua\",\n \"total_time_taken_in_millis\": 25064493,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": [\n  {\n   \"company_id\": 54161676,\n   \"integration_data\": {},\n   \"company_name\": \"irure\",\n   \"task_details\": {\n    \"type\": 49832747,\n    \"group_list\": [\n     {\n      \"text\": \"culpa aliqua pariatur Excepteur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"qui\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -66061054.27486857,\n    \"safe_stock\": -98101029,\n    \"period_threshold\": 62420874,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"elit Duis irure\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"est ullamco nostrud\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"deserunt id sunt ad in\",\n   \"alias\": \"consectetur amet pariatur non aliquip\"\n  },\n  {\n   \"company_id\": -94512525,\n   \"integration_data\": {},\n   \"company_name\": \"quis cupida\",\n   \"task_details\": {\n    \"type\": 7971405,\n    \"group_list\": [\n     {\n      \"text\": \"d\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consectetur minim cillum non ex\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -12025092.037567124,\n    \"safe_stock\": -44798880,\n    \"period_threshold\": 16420875,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"cupidatat laborum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"reprehenderit a\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"amet deserunt exercitation\",\n   \"alias\": \"aliqua\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 44989319,\n   \"integration_data\": {},\n   \"company_name\": \"proident ipsum\",\n   \"task_details\": {\n    \"type\": 57034856,\n    \"group_list\": [\n     {\n      \"text\": \"qui\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laboris nisi culpa non ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -34634277.97765681,\n    \"safe_stock\": 61604573,\n    \"period_threshold\": 94435007,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"elit Excepteur minim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in non occaecat aliquip\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"labore\",\n   \"alias\": \"ex sunt quis nisi enim\"\n  },\n  {\n   \"company_id\": 52599663,\n   \"integration_data\": {},\n   \"company_name\": \"et cupidatat velit exercitation voluptate\",\n   \"task_details\": {\n    \"type\": -97294542,\n    \"group_list\": [\n     {\n      \"text\": \"esse\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"mollit nostrud\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -61514068.51469341,\n    \"safe_stock\": -20362574,\n    \"period_threshold\": -94690968,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"anim Lorem sed id\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"veniam nulla esse commodo\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"mollit dolor\",\n   \"alias\": \"aute nisi incididunt commo\"\n  }\n ],\n \"trace_id\": \"aliqua elit\",\n \"page\": {\n  \"type\": \"in fugiat ut culpa\",\n  \"size\": 90190085,\n  \"current\": -61330870,\n  \"has_next\": true,\n  \"item_total\": -47115678,\n  \"next_id\": \"sint officia eu aliquip\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "bbbd924c-e468-4faa-9e9d-0d938ec2e860",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "208ad5b4-5639-4276-a688-c3d4527e4929",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1944-06-23T11:41:10.646Z\",\n \"status\": -42762433,\n \"error\": \"sit culpa\",\n \"exception\": \"sunt\",\n \"message\": \"occaecat in quis ullamco\",\n \"total_time_taken_in_millis\": -24746377,\n \"http_status\": \"308 PERMANENT_REDIRECT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"elit cillum dolore mollit\",\n \"page\": {\n  \"type\": \"esse do\",\n  \"size\": -44222613,\n  \"current\": -24309447,\n  \"has_next\": false,\n  \"item_total\": 48072095,\n  \"next_id\": \"ut commodo sed sint\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "677601a6-a5cc-430b-920c-781288b53175",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1944-06-23T11:41:10.646Z\",\n \"status\": -42762433,\n \"error\": \"sit culpa\",\n \"exception\": \"sunt\",\n \"message\": \"occaecat in quis ullamco\",\n \"total_time_taken_in_millis\": -24746377,\n \"http_status\": \"308 PERMANENT_REDIRECT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"elit cillum dolore mollit\",\n \"page\": {\n  \"type\": \"esse do\",\n  \"size\": -44222613,\n  \"current\": -24309447,\n  \"has_next\": false,\n  \"item_total\": 48072095,\n  \"next_id\": \"ut commodo sed sint\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "22cd46cb-55f8-456a-b560-3f5a15a443f7",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1944-06-23T11:41:10.646Z\",\n \"status\": -42762433,\n \"error\": \"sit culpa\",\n \"exception\": \"sunt\",\n \"message\": \"occaecat in quis ullamco\",\n \"total_time_taken_in_millis\": -24746377,\n \"http_status\": \"308 PERMANENT_REDIRECT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"elit cillum dolore mollit\",\n \"page\": {\n  \"type\": \"esse do\",\n  \"size\": -44222613,\n  \"current\": -24309447,\n  \"has_next\": false,\n  \"item_total\": 48072095,\n  \"next_id\": \"ut commodo sed sint\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "d4bf6812-335d-4bb9-b3ff-527b53df0a9e",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "3cdd951e-965b-4fac-abc6-dfaa4f5f3cd4",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1976-03-17T17:01:22.678Z\",\n \"status\": 6251589,\n \"error\": \"in consectetur dolor pariatur\",\n \"exception\": \"est laboris et eu\",\n \"message\": \"cupidatat ipsum\",\n \"total_time_taken_in_millis\": 28087012,\n \"http_status\": \"201 CREATED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"veniam ea occaecat\",\n \"page\": {\n  \"type\": \"sit nostrud qui elit\",\n  \"size\": -57365675,\n  \"current\": -58817781,\n  \"has_next\": true,\n  \"item_total\": -85493604,\n  \"next_id\": \"esse cillum mollit\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "0a1199df-a53e-40dc-9821-b3bab2bb2be9",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1976-03-17T17:01:22.678Z\",\n \"status\": 6251589,\n \"error\": \"in consectetur dolor pariatur\",\n \"exception\": \"est laboris et eu\",\n \"message\": \"cupidatat ipsum\",\n \"total_time_taken_in_millis\": 28087012,\n \"http_status\": \"201 CREATED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"veniam ea occaecat\",\n \"page\": {\n  \"type\": \"sit nostrud qui elit\",\n  \"size\": -57365675,\n  \"current\": -58817781,\n  \"has_next\": true,\n  \"item_total\": -85493604,\n  \"next_id\": \"esse cillum mollit\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "15ec63d4-0bd0-406c-b560-efc7846cb516",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1976-03-17T17:01:22.678Z\",\n \"status\": 6251589,\n \"error\": \"in consectetur dolor pariatur\",\n \"exception\": \"est laboris et eu\",\n \"message\": \"cupidatat ipsum\",\n \"total_time_taken_in_millis\": 28087012,\n \"http_status\": \"201 CREATED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"veniam ea occaecat\",\n \"page\": {\n  \"type\": \"sit nostrud qui elit\",\n  \"size\": -57365675,\n  \"current\": -58817781,\n  \"has_next\": true,\n  \"item_total\": -85493604,\n  \"next_id\": \"esse cillum mollit\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2a082cca-f365-4009-800f-93884b7ff572",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1976-03-17T17:01:22.678Z\",\n \"status\": 6251589,\n \"error\": \"in consectetur dolor pariatur\",\n \"exception\": \"est laboris et eu\",\n \"message\": \"cupidatat ipsum\",\n \"total_time_taken_in_millis\": 28087012,\n \"http_status\": \"201 CREATED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"veniam ea occaecat\",\n \"page\": {\n  \"type\": \"sit nostrud qui elit\",\n  \"size\": -57365675,\n  \"current\": -58817781,\n  \"has_next\": true,\n  \"item_total\": -85493604,\n  \"next_id\": \"esse cillum mollit\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "042cc087-8d2e-4957-87e5-87defa012e60",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1976-03-17T17:01:22.678Z\",\n \"status\": 6251589,\n \"error\": \"in consectetur dolor pariatur\",\n \"exception\": \"est laboris et eu\",\n \"message\": \"cupidatat ipsum\",\n \"total_time_taken_in_millis\": 28087012,\n \"http_status\": \"201 CREATED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"veniam ea occaecat\",\n \"page\": {\n  \"type\": \"sit nostrud qui elit\",\n  \"size\": -57365675,\n  \"current\": -58817781,\n  \"has_next\": true,\n  \"item_total\": -85493604,\n  \"next_id\": \"esse cillum mollit\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx0.de"
    }
  ],
  "info": {
    "_postman_id": "1e5d2c35-718d-4faf-9795-00e30aec029c",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
