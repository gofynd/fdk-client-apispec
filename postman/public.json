{
  "item": [
    {
      "id": "fb4ceb66-ed95-4f7b-af27-30faf70949d4",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "dc9080f3-e1e1-42cd-8439-2f777befca5b",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "d37259cd-f7a9-4ca5-9737-e451bd5c7e41",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "ullamco",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "4401543e-992d-4898-8c21-3d7c8a936ce5",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "ullamco",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "0b3f055a-61a7-49a9-9d43-27bf95475ff7",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "ullamco",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "990997d6-41a0-484f-add2-83a6bc044201",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "a6f9601f-156f-4be9-9671-fa6753987ef7",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "e4e26f53-7d6d-41f1-92f8-38ab98ac3a59",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "745b603a-257f-4744-870a-d4fd29954696",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "1e105201-f339-41d4-b893-59de1bb7592b",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -19931142,\n   \"event_name\": \"consequat esse\",\n   \"event_type\": \"anim dolor\",\n   \"event_category\": \"adipisicing labore\",\n   \"version\": \"occaecat Excepteur pariatur\",\n   \"display_name\": \"fugiat eu laboris adipisicing\",\n   \"description\": \"et Ut proident\",\n   \"created_on\": \"culpa Excepteur ad consequat\"\n  },\n  {\n   \"id\": 86783274,\n   \"event_name\": \"mollit pari\",\n   \"event_type\": \"quis cillum\",\n   \"event_category\": \"officia fugiat cillum velit dolore\",\n   \"version\": \"velit in\",\n   \"display_name\": \"laborum elit cillum occaecat\",\n   \"description\": \"ex nostrud proident in\",\n   \"created_on\": \"irure ea\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "e2e54bc3-3853-4f2f-9b1c-8febc8cfa5bf",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "8c33e469-a343-4c1e-b850-a9e57771ec99",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 93635542,\n   \"event_name\": \"proident magna qui\",\n   \"event_type\": \"voluptate laboris\",\n   \"event_category\": \"Excepteur ipsum i\",\n   \"version\": \"Ut cill\",\n   \"display_name\": \"eu Ut sed ex amet\",\n   \"description\": \"fugiat id est\",\n   \"created_on\": \"deserunt irure in\"\n  },\n  {\n   \"id\": -81409748,\n   \"event_name\": \"sit adipisicing consequat\",\n   \"event_type\": \"ad q\",\n   \"event_category\": \"\",\n   \"version\": \"aliquip in\",\n   \"display_name\": \"deserunt\",\n   \"description\": \"adipisicing aliqua est dolor\",\n   \"created_on\": \"voluptate elit ea mollit cupidatat\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "6d886acf-56e0-46e1-8691-a1baefb350f1",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "290ec0ec-df03-4727-8770-0c5c46f14f3f",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "cccaead3-6dea-4d6d-8e51-b5ff30ed1987",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1963-12-10T21:07:47.167Z\",\n \"status\": -42589735,\n \"error\": \"sunt ipsum Lorem enim\",\n \"exception\": \"minim in cillum dolor\",\n \"message\": \"esse ad ea\",\n \"total_time_taken_in_millis\": 64360069,\n \"http_status\": \"205 RESET_CONTENT\",\n \"items\": [\n  {\n   \"company_id\": -9377395,\n   \"integration_data\": {},\n   \"company_name\": \"ex velit magna nostrud\",\n   \"task_details\": {\n    \"type\": 3105270,\n    \"group_list\": [\n     {\n      \"text\": \"mollit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laborum anim velit tempor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -97243609.09521908,\n    \"safe_stock\": -66110531,\n    \"period_threshold\": 38280581,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"veniam consectetur voluptate\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"veniam dolore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"est eiusmod in\",\n   \"alias\": \"consequat ut in culpa\"\n  },\n  {\n   \"company_id\": -27849001,\n   \"integration_data\": {},\n   \"company_name\": \"Lorem\",\n   \"task_details\": {\n    \"type\": 70942114,\n    \"group_list\": [\n     {\n      \"text\": \"enim irure Duis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sint\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 68486725.55798116,\n    \"safe_stock\": 83153843,\n    \"period_threshold\": -83376484,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"aute\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cupidatat sed ipsum nostrud\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"adipisicing enim ad\",\n   \"alias\": \"est\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 30181778,\n   \"integration_data\": {},\n   \"company_name\": \"esse ut nostrud cillum\",\n   \"task_details\": {\n    \"type\": 63316938,\n    \"group_list\": [\n     {\n      \"text\": \"qui eiusmod minim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ipsum reprehenderit consectetur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 89998840.33276036,\n    \"safe_stock\": -99062142,\n    \"period_threshold\": 74012592,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"nostrud tempor ut aute\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sint\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"nisi in est\",\n   \"alias\": \"do al\"\n  },\n  {\n   \"company_id\": -66337211,\n   \"integration_data\": {},\n   \"company_name\": \"nostrud tempor\",\n   \"task_details\": {\n    \"type\": -8575484,\n    \"group_list\": [\n     {\n      \"text\": \"eu aute velit dolore laboris\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in deserunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -84709363.0029812,\n    \"safe_stock\": 48212771,\n    \"period_threshold\": -54427925,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"cillum dolor cupidatat eu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proident dolor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ut ut\",\n   \"alias\": \"officia Lorem\"\n  }\n ],\n \"trace_id\": \"minim in culpa eu ipsum\",\n \"page\": {\n  \"type\": \"esse sed\",\n  \"size\": 79492096,\n  \"current\": 58784878,\n  \"has_next\": true,\n  \"item_total\": -62106277,\n  \"next_id\": \"quis in sit eu\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5c19823c-e178-4074-958a-dba775aadc55",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1983-04-23T09:35:23.729Z\",\n \"status\": -23904953,\n \"error\": \"magna tempor do\",\n \"exception\": \"ut ulla\",\n \"message\": \"laboris dolor ut anim\",\n \"total_time_taken_in_millis\": -69899529,\n \"http_status\": \"408 REQUEST_TIMEOUT\",\n \"items\": [\n  {\n   \"company_id\": -73088981,\n   \"integration_data\": {},\n   \"company_name\": \"in sint\",\n   \"task_details\": {\n    \"type\": 59449358,\n    \"group_list\": [\n     {\n      \"text\": \"ex nulla\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"labor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -73923894.06831649,\n    \"safe_stock\": -29527971,\n    \"period_threshold\": 81014585,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"Duis et eu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute in deserunt est\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aliquip est elit eiusmod nisi\",\n   \"alias\": \"sint aliquip\"\n  },\n  {\n   \"company_id\": -47564990,\n   \"integration_data\": {},\n   \"company_name\": \"ut Lorem\",\n   \"task_details\": {\n    \"type\": 56567613,\n    \"group_list\": [\n     {\n      \"text\": \"nostrud veniam cillum \",\n      \"value\": {}\n     },\n     {\n      \"text\": \"occaecat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -90395974.24662809,\n    \"safe_stock\": 97280524,\n    \"period_threshold\": 32023520,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"do ut cupidatat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proident eu\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in ad veniam\",\n   \"alias\": \"consectetur magna elit\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -90894984,\n   \"integration_data\": {},\n   \"company_name\": \"consectetur sed cillum incididunt\",\n   \"task_details\": {\n    \"type\": -89882385,\n    \"group_list\": [\n     {\n      \"text\": \"ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"velit dolor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 10227807.007346973,\n    \"safe_stock\": -5715079,\n    \"period_threshold\": -27155822,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore deseru\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"et nis\",\n   \"alias\": \"sunt minim magna enim Lorem\"\n  },\n  {\n   \"company_id\": -67017087,\n   \"integration_data\": {},\n   \"company_name\": \"voluptate cu\",\n   \"task_details\": {\n    \"type\": 13668619,\n    \"group_list\": [\n     {\n      \"text\": \"occaecat in anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"minim officia\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -44012846.365043364,\n    \"safe_stock\": 22484494,\n    \"period_threshold\": -79489597,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ipsum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eiusmod adipisicing elit exercitation ea\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"irure dolor si\",\n   \"alias\": \"in\"\n  }\n ],\n \"trace_id\": \"labore minim\",\n \"page\": {\n  \"type\": \"qui commodo Duis dolor irure\",\n  \"size\": -60121353,\n  \"current\": 22547494,\n  \"has_next\": true,\n  \"item_total\": 30093166,\n  \"next_id\": \"Excepteur laborum\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "68de62ad-7ebf-4d21-bfd5-0e5623cc5200",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1983-04-23T09:35:23.729Z\",\n \"status\": -23904953,\n \"error\": \"magna tempor do\",\n \"exception\": \"ut ulla\",\n \"message\": \"laboris dolor ut anim\",\n \"total_time_taken_in_millis\": -69899529,\n \"http_status\": \"408 REQUEST_TIMEOUT\",\n \"items\": [\n  {\n   \"company_id\": -73088981,\n   \"integration_data\": {},\n   \"company_name\": \"in sint\",\n   \"task_details\": {\n    \"type\": 59449358,\n    \"group_list\": [\n     {\n      \"text\": \"ex nulla\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"labor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -73923894.06831649,\n    \"safe_stock\": -29527971,\n    \"period_threshold\": 81014585,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"Duis et eu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute in deserunt est\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aliquip est elit eiusmod nisi\",\n   \"alias\": \"sint aliquip\"\n  },\n  {\n   \"company_id\": -47564990,\n   \"integration_data\": {},\n   \"company_name\": \"ut Lorem\",\n   \"task_details\": {\n    \"type\": 56567613,\n    \"group_list\": [\n     {\n      \"text\": \"nostrud veniam cillum \",\n      \"value\": {}\n     },\n     {\n      \"text\": \"occaecat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -90395974.24662809,\n    \"safe_stock\": 97280524,\n    \"period_threshold\": 32023520,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"do ut cupidatat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proident eu\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in ad veniam\",\n   \"alias\": \"consectetur magna elit\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -90894984,\n   \"integration_data\": {},\n   \"company_name\": \"consectetur sed cillum incididunt\",\n   \"task_details\": {\n    \"type\": -89882385,\n    \"group_list\": [\n     {\n      \"text\": \"ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"velit dolor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 10227807.007346973,\n    \"safe_stock\": -5715079,\n    \"period_threshold\": -27155822,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore deseru\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"et nis\",\n   \"alias\": \"sunt minim magna enim Lorem\"\n  },\n  {\n   \"company_id\": -67017087,\n   \"integration_data\": {},\n   \"company_name\": \"voluptate cu\",\n   \"task_details\": {\n    \"type\": 13668619,\n    \"group_list\": [\n     {\n      \"text\": \"occaecat in anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"minim officia\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -44012846.365043364,\n    \"safe_stock\": 22484494,\n    \"period_threshold\": -79489597,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ipsum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eiusmod adipisicing elit exercitation ea\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"irure dolor si\",\n   \"alias\": \"in\"\n  }\n ],\n \"trace_id\": \"labore minim\",\n \"page\": {\n  \"type\": \"qui commodo Duis dolor irure\",\n  \"size\": -60121353,\n  \"current\": 22547494,\n  \"has_next\": true,\n  \"item_total\": 30093166,\n  \"next_id\": \"Excepteur laborum\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "6cc5b83e-3103-4bb9-bd3b-f99121e4d9e5",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "90631425-0c1c-46a4-b4d8-915ded4bfbc5",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1996-01-13T05:59:34.324Z\",\n \"status\": 42776614,\n \"error\": \"incididunt mollit deserunt\",\n \"exception\": \"ut\",\n \"message\": \"consectetur in fugiat ad\",\n \"total_time_taken_in_millis\": 50259471,\n \"http_status\": \"413 PAYLOAD_TOO_LARGE\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"exercitation ipsum\",\n \"page\": {\n  \"type\": \"molli\",\n  \"size\": -58564487,\n  \"current\": 94329505,\n  \"has_next\": true,\n  \"item_total\": 27255738,\n  \"next_id\": \"consequat elit laboris culpa\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b1892b0c-5992-4332-bb05-ea210dd3c91e",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1996-01-13T05:59:34.324Z\",\n \"status\": 42776614,\n \"error\": \"incididunt mollit deserunt\",\n \"exception\": \"ut\",\n \"message\": \"consectetur in fugiat ad\",\n \"total_time_taken_in_millis\": 50259471,\n \"http_status\": \"413 PAYLOAD_TOO_LARGE\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"exercitation ipsum\",\n \"page\": {\n  \"type\": \"molli\",\n  \"size\": -58564487,\n  \"current\": 94329505,\n  \"has_next\": true,\n  \"item_total\": 27255738,\n  \"next_id\": \"consequat elit laboris culpa\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e7637358-b39a-4485-926b-2e93d57d2684",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1996-01-13T05:59:34.324Z\",\n \"status\": 42776614,\n \"error\": \"incididunt mollit deserunt\",\n \"exception\": \"ut\",\n \"message\": \"consectetur in fugiat ad\",\n \"total_time_taken_in_millis\": 50259471,\n \"http_status\": \"413 PAYLOAD_TOO_LARGE\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"exercitation ipsum\",\n \"page\": {\n  \"type\": \"molli\",\n  \"size\": -58564487,\n  \"current\": 94329505,\n  \"has_next\": true,\n  \"item_total\": 27255738,\n  \"next_id\": \"consequat elit laboris culpa\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "f7a7b0ad-fb53-4335-9527-4edd962d2f42",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "4a799a20-7e80-42bb-b94f-ceb93c11a462",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1989-06-16T10:01:11.431Z\",\n \"status\": -13020730,\n \"error\": \"exercitation esse anim ipsum\",\n \"exception\": \"do aliquip tempor ullamco la\",\n \"message\": \"occaecat et amet in\",\n \"total_time_taken_in_millis\": 38037373,\n \"http_status\": \"302 FOUND\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"et ex in non\",\n \"page\": {\n  \"type\": \"ut commodo\",\n  \"size\": 16890727,\n  \"current\": 7044500,\n  \"has_next\": true,\n  \"item_total\": -34438940,\n  \"next_id\": \"quis dolore nostrud anim\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "02345fd9-cfc2-4139-9ad0-6e8518df9945",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1989-06-16T10:01:11.431Z\",\n \"status\": -13020730,\n \"error\": \"exercitation esse anim ipsum\",\n \"exception\": \"do aliquip tempor ullamco la\",\n \"message\": \"occaecat et amet in\",\n \"total_time_taken_in_millis\": 38037373,\n \"http_status\": \"302 FOUND\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"et ex in non\",\n \"page\": {\n  \"type\": \"ut commodo\",\n  \"size\": 16890727,\n  \"current\": 7044500,\n  \"has_next\": true,\n  \"item_total\": -34438940,\n  \"next_id\": \"quis dolore nostrud anim\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "94996868-e12e-458e-b439-2cea7161db74",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1989-06-16T10:01:11.431Z\",\n \"status\": -13020730,\n \"error\": \"exercitation esse anim ipsum\",\n \"exception\": \"do aliquip tempor ullamco la\",\n \"message\": \"occaecat et amet in\",\n \"total_time_taken_in_millis\": 38037373,\n \"http_status\": \"302 FOUND\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"et ex in non\",\n \"page\": {\n  \"type\": \"ut commodo\",\n  \"size\": 16890727,\n  \"current\": 7044500,\n  \"has_next\": true,\n  \"item_total\": -34438940,\n  \"next_id\": \"quis dolore nostrud anim\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f809e00b-6bf4-4a08-85e1-702571ea2214",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1989-06-16T10:01:11.431Z\",\n \"status\": -13020730,\n \"error\": \"exercitation esse anim ipsum\",\n \"exception\": \"do aliquip tempor ullamco la\",\n \"message\": \"occaecat et amet in\",\n \"total_time_taken_in_millis\": 38037373,\n \"http_status\": \"302 FOUND\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"et ex in non\",\n \"page\": {\n  \"type\": \"ut commodo\",\n  \"size\": 16890727,\n  \"current\": 7044500,\n  \"has_next\": true,\n  \"item_total\": -34438940,\n  \"next_id\": \"quis dolore nostrud anim\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ad93da9a-65a7-48c8-9141-93b9fbe6de41",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1989-06-16T10:01:11.431Z\",\n \"status\": -13020730,\n \"error\": \"exercitation esse anim ipsum\",\n \"exception\": \"do aliquip tempor ullamco la\",\n \"message\": \"occaecat et amet in\",\n \"total_time_taken_in_millis\": 38037373,\n \"http_status\": \"302 FOUND\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"et ex in non\",\n \"page\": {\n  \"type\": \"ut commodo\",\n  \"size\": 16890727,\n  \"current\": 7044500,\n  \"has_next\": true,\n  \"item_total\": -34438940,\n  \"next_id\": \"quis dolore nostrud anim\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx0.de"
    }
  ],
  "info": {
    "_postman_id": "886e6d0b-e5a0-43f8-a4ff-c3c7af524c45",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
