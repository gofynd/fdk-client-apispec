{
  "item": [
    {
      "id": "70ccdeea-666f-42d6-93e5-90c8256ebf93",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "45afaeed-1049-4d57-91d3-e7dc2367e9c5",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "66284168-89f4-46ad-94cf-3cc39afe6636",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "et fugiat culpa nisi qui",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "75b11afa-0b59-4faa-9bac-008b524790a6",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "et fugiat culpa nisi qui",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"Invalid application domain or id.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f2fdb4ea-97d9-462b-b7ae-8c6e1a181bfa",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "et fugiat culpa nisi qui",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "0e0597de-9023-490f-82d8-98a5ec9b6443",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "3a5a4db9-6089-498a-ba2a-08bbc1bf9f77",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "6b44da50-f138-4b11-bce9-f20e67dd5d03",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "4a203205-b256-45c8-9360-40f5424453dc",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "5d6bc417-233a-4c59-bf30-68ddea9361c6",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -98752912,\n   \"event_name\": \"in dolor aliquip elit eiusmod\",\n   \"event_type\": \"c\",\n   \"event_category\": \"anim\",\n   \"version\": \"cillum minim\",\n   \"display_name\": \"commodo consectetur ipsum fugiat irure\",\n   \"description\": \"labore dolor consequat adipisicing\",\n   \"created_on\": \"eiusmod\"\n  },\n  {\n   \"id\": 61470084,\n   \"event_name\": \"consequat Duis voluptate\",\n   \"event_type\": \"aliqua id minim ut\",\n   \"event_category\": \"dolore ea eiusmod Lorem cupidatat\",\n   \"version\": \"fugiat tempor cons\",\n   \"display_name\": \"laboris\",\n   \"description\": \"sint labore\",\n   \"created_on\": \"eu occaecat elit consectetur\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "4a691620-4ae3-4428-a24c-447e6ea8da7e",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "db233f2e-ff28-42ef-977a-97aa7f179fc5",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 87170304,\n   \"event_name\": \"elit esse aute officia\",\n   \"event_type\": \"tempor ad\",\n   \"event_category\": \"sint Duis\",\n   \"version\": \"ut ut et\",\n   \"display_name\": \"sed fugiat\",\n   \"description\": \"est dolor Duis qui\",\n   \"created_on\": \"mollit dolore ea pariatur\"\n  },\n  {\n   \"id\": 77303853,\n   \"event_name\": \"Lorem commodo\",\n   \"event_type\": \"Lorem in\",\n   \"event_category\": \"Excep\",\n   \"version\": \"consequat\",\n   \"display_name\": \"ut nulla\",\n   \"description\": \"cillum aliquip anim\",\n   \"created_on\": \"quis non ex Duis\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "bb228e70-2636-4276-a994-913029604062",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "1e56452a-c746-44a6-a7f0-65f708771edd",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "d39e9a18-8fbf-402f-a272-974e8c796b42",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1995-01-05T13:41:48.912Z\",\n \"status\": 16418680,\n \"error\": \"aliquip commodo mollit s\",\n \"exception\": \"amet adipisicing anim culp\",\n \"message\": \"adipisicing\",\n \"total_time_taken_in_millis\": 79181867,\n \"http_status\": \"413 PAYLOAD_TOO_LARGE\",\n \"items\": [\n  {\n   \"company_id\": -23359185,\n   \"integration_data\": {},\n   \"company_name\": \"ea velit Duis\",\n   \"task_details\": {\n    \"type\": 53305813,\n    \"group_list\": [\n     {\n      \"text\": \"minim sit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cupidatat commodo exercitation\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -24336445.669718027,\n    \"safe_stock\": -55672123,\n    \"period_threshold\": -18073534,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"aliquip Duis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"veniam laborum ullamco\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sed do et\",\n   \"alias\": \"ea laboris magna veniam dolore\"\n  },\n  {\n   \"company_id\": 74914984,\n   \"integration_data\": {},\n   \"company_name\": \"Excepteur cillum adipisicing\",\n   \"task_details\": {\n    \"type\": 2293703,\n    \"group_list\": [\n     {\n      \"text\": \"Excepteur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"incididunt cupidatat quis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 46340239.95922831,\n    \"safe_stock\": -64147042,\n    \"period_threshold\": 5410739,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"in sunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in Excepteur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"occaecat ullamco Duis proident ad\",\n   \"alias\": \"dolor occaecat exercitation\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 63448096,\n   \"integration_data\": {},\n   \"company_name\": \"ad in pariatur amet tempor\",\n   \"task_details\": {\n    \"type\": -21289311,\n    \"group_list\": [\n     {\n      \"text\": \"velit nul\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nisi esse ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -83319577.64241898,\n    \"safe_stock\": 5033072,\n    \"period_threshold\": -23886813,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"exercitation cupidatat nulla\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute voluptate amet\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"esse ex proident\",\n   \"alias\": \"dolore ea amet\"\n  },\n  {\n   \"company_id\": 59935192,\n   \"integration_data\": {},\n   \"company_name\": \"commodo\",\n   \"task_details\": {\n    \"type\": -40868723,\n    \"group_list\": [\n     {\n      \"text\": \"eu cupidatat quis dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nulla aliqua\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -9229377.808145717,\n    \"safe_stock\": -47879066,\n    \"period_threshold\": -83966969,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ipsum sint minim mollit enim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proident anim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"labore pariatur exercitation sit\",\n   \"alias\": \"qui sunt\"\n  }\n ],\n \"trace_id\": \"e\",\n \"page\": {\n  \"type\": \"ven\",\n  \"size\": 46948972,\n  \"current\": -80528848,\n  \"has_next\": false,\n  \"item_total\": -15506840,\n  \"next_id\": \"do anim\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f77553fb-d223-4582-b984-846c029e3f0e",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1972-03-23T15:23:35.395Z\",\n \"status\": 41801112,\n \"error\": \"adipisicing minim reprehenderit ad\",\n \"exception\": \"commodo\",\n \"message\": \"ut dolore\",\n \"total_time_taken_in_millis\": 51757827,\n \"http_status\": \"426 UPGRADE_REQUIRED\",\n \"items\": [\n  {\n   \"company_id\": -89132947,\n   \"integration_data\": {},\n   \"company_name\": \"cupidatat ad velit sunt\",\n   \"task_details\": {\n    \"type\": -85498194,\n    \"group_list\": [\n     {\n      \"text\": \"cupidatat reprehenderit anim id\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nisi voluptate\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 54184446.245099634,\n    \"safe_stock\": 48353391,\n    \"period_threshold\": -39563935,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"anim exercitation id officia sint\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eiusmod reprehenderit deserunt est\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"cupidatat ad\",\n   \"alias\": \"nostrud in\"\n  },\n  {\n   \"company_id\": -22831546,\n   \"integration_data\": {},\n   \"company_name\": \"occaecat dolore\",\n   \"task_details\": {\n    \"type\": -98444109,\n    \"group_list\": [\n     {\n      \"text\": \"incididunt aliquip velit dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ipsum eiusmod\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 9053855.43340236,\n    \"safe_stock\": 16343178,\n    \"period_threshold\": 67949251,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"do\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"adipisicing\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"dolore\",\n   \"alias\": \"cillum Excepteur\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 43782375,\n   \"integration_data\": {},\n   \"company_name\": \"in ut nisi\",\n   \"task_details\": {\n    \"type\": 74192531,\n    \"group_list\": [\n     {\n      \"text\": \"ea incididunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"id exercitation in ad\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 62983138.54695508,\n    \"safe_stock\": 3363172,\n    \"period_threshold\": 70806726,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"eu et\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"et dolor fugiat cillum dolor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"non elit id Ut dolore\",\n   \"alias\": \"magna et ad\"\n  },\n  {\n   \"company_id\": -83576595,\n   \"integration_data\": {},\n   \"company_name\": \"quis\",\n   \"task_details\": {\n    \"type\": -65029436,\n    \"group_list\": [\n     {\n      \"text\": \"amet tempor id eu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"qui velit cillum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -35558929.156709015,\n    \"safe_stock\": -4389071,\n    \"period_threshold\": -23190665,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"amet aliquip\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proident\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Lorem labore sint\",\n   \"alias\": \"ut laborum Duis\"\n  }\n ],\n \"trace_id\": \"dolor irure pariatur\",\n \"page\": {\n  \"type\": \"commodo consequat id irure\",\n  \"size\": -5743304,\n  \"current\": 97361861,\n  \"has_next\": true,\n  \"item_total\": 71175052,\n  \"next_id\": \"laborum cillum occaecat\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "380cb261-e226-45dd-b640-754a51dd56c1",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1972-03-23T15:23:35.395Z\",\n \"status\": 41801112,\n \"error\": \"adipisicing minim reprehenderit ad\",\n \"exception\": \"commodo\",\n \"message\": \"ut dolore\",\n \"total_time_taken_in_millis\": 51757827,\n \"http_status\": \"426 UPGRADE_REQUIRED\",\n \"items\": [\n  {\n   \"company_id\": -89132947,\n   \"integration_data\": {},\n   \"company_name\": \"cupidatat ad velit sunt\",\n   \"task_details\": {\n    \"type\": -85498194,\n    \"group_list\": [\n     {\n      \"text\": \"cupidatat reprehenderit anim id\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nisi voluptate\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 54184446.245099634,\n    \"safe_stock\": 48353391,\n    \"period_threshold\": -39563935,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"anim exercitation id officia sint\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eiusmod reprehenderit deserunt est\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"cupidatat ad\",\n   \"alias\": \"nostrud in\"\n  },\n  {\n   \"company_id\": -22831546,\n   \"integration_data\": {},\n   \"company_name\": \"occaecat dolore\",\n   \"task_details\": {\n    \"type\": -98444109,\n    \"group_list\": [\n     {\n      \"text\": \"incididunt aliquip velit dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ipsum eiusmod\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 9053855.43340236,\n    \"safe_stock\": 16343178,\n    \"period_threshold\": 67949251,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"do\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"adipisicing\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"dolore\",\n   \"alias\": \"cillum Excepteur\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 43782375,\n   \"integration_data\": {},\n   \"company_name\": \"in ut nisi\",\n   \"task_details\": {\n    \"type\": 74192531,\n    \"group_list\": [\n     {\n      \"text\": \"ea incididunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"id exercitation in ad\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 62983138.54695508,\n    \"safe_stock\": 3363172,\n    \"period_threshold\": 70806726,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"eu et\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"et dolor fugiat cillum dolor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"non elit id Ut dolore\",\n   \"alias\": \"magna et ad\"\n  },\n  {\n   \"company_id\": -83576595,\n   \"integration_data\": {},\n   \"company_name\": \"quis\",\n   \"task_details\": {\n    \"type\": -65029436,\n    \"group_list\": [\n     {\n      \"text\": \"amet tempor id eu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"qui velit cillum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -35558929.156709015,\n    \"safe_stock\": -4389071,\n    \"period_threshold\": -23190665,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"amet aliquip\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proident\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Lorem labore sint\",\n   \"alias\": \"ut laborum Duis\"\n  }\n ],\n \"trace_id\": \"dolor irure pariatur\",\n \"page\": {\n  \"type\": \"commodo consequat id irure\",\n  \"size\": -5743304,\n  \"current\": 97361861,\n  \"has_next\": true,\n  \"item_total\": 71175052,\n  \"next_id\": \"laborum cillum occaecat\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "ca593273-7e80-4a41-80a7-7e16e651428b",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "65dfd7b1-68b4-4915-8043-496859df8d29",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1979-06-11T10:48:53.092Z\",\n \"status\": 75285189,\n \"error\": \"consequat cillum velit\",\n \"exception\": \"tempor ut anim ulla\",\n \"message\": \"Lorem sed in mollit\",\n \"total_time_taken_in_millis\": 19415331,\n \"http_status\": \"417 EXPECTATION_FAILED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"aliqua reprehenderit nulla nostrud in\",\n \"page\": {\n  \"type\": \"ullamco laborum dolor\",\n  \"size\": 49857221,\n  \"current\": 18436661,\n  \"has_next\": false,\n  \"item_total\": -5171909,\n  \"next_id\": \"cupidatat voluptate qui veniam velit\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "8f03c39f-a080-486e-9b26-f02d308ce7f5",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1979-06-11T10:48:53.092Z\",\n \"status\": 75285189,\n \"error\": \"consequat cillum velit\",\n \"exception\": \"tempor ut anim ulla\",\n \"message\": \"Lorem sed in mollit\",\n \"total_time_taken_in_millis\": 19415331,\n \"http_status\": \"417 EXPECTATION_FAILED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"aliqua reprehenderit nulla nostrud in\",\n \"page\": {\n  \"type\": \"ullamco laborum dolor\",\n  \"size\": 49857221,\n  \"current\": 18436661,\n  \"has_next\": false,\n  \"item_total\": -5171909,\n  \"next_id\": \"cupidatat voluptate qui veniam velit\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ef0d73b0-6615-45f6-8e9c-72839a190d11",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1979-06-11T10:48:53.092Z\",\n \"status\": 75285189,\n \"error\": \"consequat cillum velit\",\n \"exception\": \"tempor ut anim ulla\",\n \"message\": \"Lorem sed in mollit\",\n \"total_time_taken_in_millis\": 19415331,\n \"http_status\": \"417 EXPECTATION_FAILED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"aliqua reprehenderit nulla nostrud in\",\n \"page\": {\n  \"type\": \"ullamco laborum dolor\",\n  \"size\": 49857221,\n  \"current\": 18436661,\n  \"has_next\": false,\n  \"item_total\": -5171909,\n  \"next_id\": \"cupidatat voluptate qui veniam velit\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "c082cadc-ae16-46b7-b968-6e81debb7884",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "51a71636-32e9-437a-8427-e191112ee0e3",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2010-03-06T14:10:27.373Z\",\n \"status\": 13310458,\n \"error\": \"velit dolore\",\n \"exception\": \"in irure qui eiusmod\",\n \"message\": \"sed Lorem sint velit quis\",\n \"total_time_taken_in_millis\": -13188473,\n \"http_status\": \"504 GATEWAY_TIMEOUT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"rep\",\n \"page\": {\n  \"type\": \"labore consectetur Lorem ullamco ea\",\n  \"size\": -82956820,\n  \"current\": -22548078,\n  \"has_next\": false,\n  \"item_total\": 33987637,\n  \"next_id\": \"mollit Duis\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "77ce014a-eda8-4fd6-88c9-f6943d2b9828",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2010-03-06T14:10:27.373Z\",\n \"status\": 13310458,\n \"error\": \"velit dolore\",\n \"exception\": \"in irure qui eiusmod\",\n \"message\": \"sed Lorem sint velit quis\",\n \"total_time_taken_in_millis\": -13188473,\n \"http_status\": \"504 GATEWAY_TIMEOUT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"rep\",\n \"page\": {\n  \"type\": \"labore consectetur Lorem ullamco ea\",\n  \"size\": -82956820,\n  \"current\": -22548078,\n  \"has_next\": false,\n  \"item_total\": 33987637,\n  \"next_id\": \"mollit Duis\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "72ee062a-758d-4aa8-8c49-c805a7e7f084",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2010-03-06T14:10:27.373Z\",\n \"status\": 13310458,\n \"error\": \"velit dolore\",\n \"exception\": \"in irure qui eiusmod\",\n \"message\": \"sed Lorem sint velit quis\",\n \"total_time_taken_in_millis\": -13188473,\n \"http_status\": \"504 GATEWAY_TIMEOUT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"rep\",\n \"page\": {\n  \"type\": \"labore consectetur Lorem ullamco ea\",\n  \"size\": -82956820,\n  \"current\": -22548078,\n  \"has_next\": false,\n  \"item_total\": 33987637,\n  \"next_id\": \"mollit Duis\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2e1b6abc-3cb2-4d68-8ad4-681981346e37",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2010-03-06T14:10:27.373Z\",\n \"status\": 13310458,\n \"error\": \"velit dolore\",\n \"exception\": \"in irure qui eiusmod\",\n \"message\": \"sed Lorem sint velit quis\",\n \"total_time_taken_in_millis\": -13188473,\n \"http_status\": \"504 GATEWAY_TIMEOUT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"rep\",\n \"page\": {\n  \"type\": \"labore consectetur Lorem ullamco ea\",\n  \"size\": -82956820,\n  \"current\": -22548078,\n  \"has_next\": false,\n  \"item_total\": 33987637,\n  \"next_id\": \"mollit Duis\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "127be8ae-c10e-429b-9825-46188eb2e10c",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2010-03-06T14:10:27.373Z\",\n \"status\": 13310458,\n \"error\": \"velit dolore\",\n \"exception\": \"in irure qui eiusmod\",\n \"message\": \"sed Lorem sint velit quis\",\n \"total_time_taken_in_millis\": -13188473,\n \"http_status\": \"504 GATEWAY_TIMEOUT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"rep\",\n \"page\": {\n  \"type\": \"labore consectetur Lorem ullamco ea\",\n  \"size\": -82956820,\n  \"current\": -22548078,\n  \"has_next\": false,\n  \"item_total\": 33987637,\n  \"next_id\": \"mollit Duis\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx0.de"
    }
  ],
  "info": {
    "_postman_id": "c42684ee-1efe-4d59-8bc5-0ed04f8e11e9",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
