{
  "item": [
    {
      "id": "8608c1b9-5be6-4e07-bb87-7fb2b1eb94f0",
      "name": "Billing",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "d9b71721-3b03-4800-a9d0-367019641430",
          "name": "getStandardPlans | Get Standard/Public Plans",
          "request": {
            "name": "getStandardPlans | Get Standard/Public Plans",
            "description": {
              "content": "Get Standard/Public Plans.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "public",
                "billing",
                "v1.0",
                "plan",
                "detailed-list",
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "platform",
                  "value": "<string>",
                  "description": "The type of platform for which plans are requested."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "7cb1994a-e4d6-453c-8e98-8ea5743f600f",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list",
                    ""
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform",
                      "value": "mobile"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"plans\": [\n    {\n      \"recurring\": {\n        \"interval\": \"year\",\n        \"interval_count\": 1\n      },\n      \"taxation\": {\n        \"gst\": 0.18\n      },\n      \"one_time_fees\": {\n        \"developement\": 0,\n        \"marketing\": 0\n      },\n      \"credit_line\": {\n        \"is_active\": false\n      },\n      \"_id\": \"65f7d861030cfe1140064cbe\",\n      \"product_suite_id\": \"65f7d861030cfe1140064c51\",\n      \"is_trial_plan\": false,\n      \"name\": \"Ultra Premium Yearly\",\n      \"description\": \"Ultra Premium Yearly\",\n      \"plan_group\": \"default\",\n      \"tag_lines\": [],\n      \"currency\": \"INR\",\n      \"amount\": 10999,\n      \"is_active\": true,\n      \"is_visible\": true,\n      \"trial_period\": 0,\n      \"addons\": [],\n      \"tags\": [],\n      \"type\": \"public\",\n      \"country\": \"IN\",\n      \"company_ids\": [],\n      \"current_status\": \"active\",\n      \"channel_type\": \"ecomm\",\n      \"platform\": \"all\",\n      \"created_at\": \"2024-03-18T06:00:01.914Z\",\n      \"modified_at\": \"2024-03-18T06:00:01.914Z\",\n      \"components\": [\n        {\n          \"name\": \"Abandoned Cart\",\n          \"slug\": \"abandoned-cart\",\n          \"description\": \"Automatically send emailers to customers who have left their carts to increase conversion\",\n          \"group\": \"General\",\n          \"icon\": \"\",\n          \"links\": {},\n          \"config\": {\n            \"_id\": \"65f7d861030cfe1140064cce\",\n            \"feature_config\": {\n              \"enabled\": true\n            },\n            \"component_id\": \"65f7d861030cfe1140064c9f\",\n            \"display_text\": \"Yes\",\n            \"is_default\": false,\n            \"is_active\": true,\n            \"processing_type\": \"feature_config\",\n            \"tags\": [],\n            \"created_at\": \"2024-03-18T06:00:01.920Z\",\n            \"modified_at\": \"2024-03-18T06:00:01.920Z\",\n            \"__v\": 0\n          },\n          \"is_active\": true,\n          \"display_text\": \"Yes\"\n        },\n        {\n          \"name\": \"Email\",\n          \"slug\": \"email-campagin\",\n          \"description\": \"Send emails to your customers. Choose from pre-defined emailers or create your own.\",\n          \"group\": \"Marketing\",\n          \"icon\": \"\",\n          \"links\": {},\n          \"config\": {\n            \"recurring\": {\n              \"aggregate_usage\": \"sum\",\n              \"usage_type\": \"metered\",\n              \"interval\": \"month\",\n              \"interval_count\": 1\n            },\n            \"transform_quantity\": {\n              \"divide_by\": 1,\n              \"round\": \"up\"\n            },\n            \"free_tier\": {\n              \"type\": \"TIME_BASED\",\n              \"value\": 0\n            },\n            \"_id\": \"65f7d861030cfe1140064cdb\",\n            \"currency\": \"INR\",\n            \"unit_amount\": 0,\n            \"quantity\": 50,\n            \"price_ui_type\": \"standard\",\n            \"price_type\": \"static\",\n            \"bill_type\": \"recurring\",\n            \"billing_scheme\": \"per_unit\",\n            \"component_id\": \"65f7d861030cfe1140064c93\",\n            \"display_text\": \"\",\n            \"is_default\": false,\n            \"is_active\": true,\n            \"processing_type\": \"revenue\",\n            \"tags\": [],\n            \"tiers\": [],\n            \"created_at\": \"2024-03-18T06:00:01.920Z\",\n            \"modified_at\": \"2024-03-18T06:00:01.920Z\",\n            \"__v\": 0\n          },\n          \"is_active\": true,\n          \"display_text\": \"\"\n        },\n        {\n          \"name\": \"Themes\",\n          \"slug\": \"themes\",\n          \"description\": \"Fynd Platform partner themes available on extra charges\",\n          \"group\": \"General\",\n          \"icon\": \"\",\n          \"links\": {},\n          \"config\": {\n            \"recurring\": {\n              \"aggregate_usage\": \"sum\",\n              \"usage_type\": \"licensed\",\n              \"interval_count\": 1\n            },\n            \"transform_quantity\": {\n              \"divide_by\": 1,\n              \"round\": \"up\"\n            },\n            \"free_tier\": {\n              \"type\": \"TIME_BASED\",\n              \"value\": 0\n            },\n            \"_id\": \"65f7d861030cfe1140064cd9\",\n            \"currency\": \"INR\",\n            \"unit_amount\": 0,\n            \"quantity\": 50,\n            \"price_ui_type\": \"standard\",\n            \"price_type\": \"dynamic\",\n            \"bill_type\": \"one_time\",\n            \"billing_scheme\": \"per_unit\",\n            \"component_id\": \"65f7d861030cfe1140064c75\",\n            \"display_text\": \"Premium Themes\",\n            \"is_default\": false,\n            \"is_active\": true,\n            \"processing_type\": \"revenue\",\n            \"tags\": [],\n            \"tiers\": [],\n            \"created_at\": \"2024-03-18T06:00:01.920Z\",\n            \"modified_at\": \"2024-03-18T06:00:01.920Z\",\n            \"__v\": 0\n          },\n          \"is_active\": true,\n          \"display_text\": \"Premium Themes\"\n        },\n        {\n          \"name\": \"Transaction Fees\",\n          \"slug\": \"transaction-fee\",\n          \"description\": \"Transaction fees is inclusive of Payment Gateway\",\n          \"group\": \"Key Features\",\n          \"icon\": \"\",\n          \"links\": {},\n          \"config\": {\n            \"_id\": \"65f7d861030cfe1140064cd2\",\n            \"component_id\": \"65f7d861030cfe1140064c85\",\n            \"display_text\": \"Customizable\",\n            \"is_default\": false,\n            \"is_active\": true,\n            \"processing_type\": \"display\",\n            \"tags\": [],\n            \"created_at\": \"2024-03-18T06:00:01.920Z\",\n            \"modified_at\": \"2024-03-18T06:00:01.920Z\",\n            \"__v\": 0\n          },\n          \"is_active\": true,\n          \"display_text\": \"Customizable\"\n        }\n      ]\n    }\n  ],\n  \"trialPlan\": {\n    \"recurring\": {\n      \"interval\": \"month\",\n      \"interval_count\": 1\n    },\n    \"taxation\": {\n      \"gst\": 0.18\n    },\n    \"one_time_fees\": {\n      \"developement\": 0,\n      \"marketing\": 0\n    },\n    \"credit_line\": {\n      \"is_active\": false\n    },\n    \"_id\": \"65f7d861030cfe1140064cbc\",\n    \"product_suite_id\": \"65f7d861030cfe1140064c51\",\n    \"is_trial_plan\": true,\n    \"name\": \"30 day Trial\",\n    \"description\": \"30 day Trial\",\n    \"plan_group\": \"default\",\n    \"tag_lines\": [],\n    \"currency\": \"INR\",\n    \"amount\": 0,\n    \"is_active\": true,\n    \"is_visible\": false,\n    \"trial_period\": 30,\n    \"addons\": [],\n    \"tags\": [],\n    \"type\": \"public\",\n    \"country\": \"IN\",\n    \"company_ids\": [],\n    \"current_status\": \"active\",\n    \"channel_type\": \"ecomm\",\n    \"platform\": \"all\",\n    \"created_at\": \"2024-03-18T06:00:01.914Z\",\n    \"modified_at\": \"2024-03-18T06:00:01.914Z\"\n  },\n  \"component_groups\": [\n    \"General\",\n    \"Key Features\",\n    \"Marketing\",\n    \"Sales Channel\",\n    \"Support\"\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "3c7ebe6c-d6c6-468a-bafd-179a3ad0c925",
          "name": "getPlanDetails | Get plan details",
          "request": {
            "name": "getPlanDetails | Get plan details",
            "description": {
              "content": "Get plan details.\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "public",
                "billing",
                "v1.0",
                "plan",
                "details",
                ":plan_id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "plan_id",
                  "description": "(Required) Plan unique id."
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "0eb1e948-3971-4483-a55b-568177398295",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "details",
                    ":plan_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "plan_id",
                      "description": "(Required) Plan unique id."
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"recurring\": {\n    \"interval\": \"month\",\n    \"interval_count\": 1\n  },\n  \"is_trial_plan\": false,\n  \"plan_group\": \"default\",\n  \"tag_lines\": [],\n  \"currency\": \"INR\",\n  \"is_active\": true,\n  \"is_visible\": true,\n  \"trial_period\": 0,\n  \"addons\": [],\n  \"tags\": [],\n  \"type\": \"public\",\n  \"country\": \"IN\",\n  \"_id\": \"610d03f02decb20043dac5ab\",\n  \"name\": \"Ultra Premium\",\n  \"description\": \"Ultra Premium\",\n  \"amount\": 2999,\n  \"created_at\": \"2021-08-06T09:42:08.877Z\",\n  \"modified_at\": \"2021-08-06T09:42:08.877Z\",\n  \"taxation\": {\n    \"gst\": 0.18\n  },\n  \"current_status\": \"active\",\n  \"components\": []\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1a4893ae-7d05-490c-a4a1-c84ef40db776",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "details",
                    ":plan_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "plan_id",
                      "description": "(Required) Plan unique id."
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Not Found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "be170ad7-6772-449f-894b-e4705847c3ef",
              "name": "Internal server error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "details",
                    ":plan_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "plan_id",
                      "description": "(Required) Plan unique id."
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Not Found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "19704211-84e5-4b80-bc48-ca0c8a9d146a",
          "name": "planList | Get List of all plans",
          "request": {
            "name": "planList | Get List of all plans",
            "description": {
              "content": "Get List of all plans",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "public",
                "billing",
                "v1.0",
                "plan",
                "list"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "ec17c66a-ffb1-4e1d-8397-a7aea634a92d",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n  {\n    \"recurring\": {\n      \"interval\": \"month\",\n      \"interval_count\": 1\n    },\n    \"taxation\": {\n      \"gst\": 0.18\n    },\n    \"one_time_fees\": {\n      \"developement\": null,\n      \"marketing\": 0\n    },\n    \"credit_line\": {\n      \"is_active\": false\n    },\n    \"_id\": \"6603b119aaccdd01e4841150\",\n    \"product_suite_id\": \"6603b116aaccdd01e4841146\",\n    \"is_trial_plan\": false,\n    \"name\": \"FX12345\",\n    \"description\": \"Ecommerce\",\n    \"plan_group\": \"default\",\n    \"tag_lines\": [],\n    \"currency\": \"INR\",\n    \"amount\": 500,\n    \"is_active\": true,\n    \"is_visible\": true,\n    \"trial_period\": 0,\n    \"addons\": [],\n    \"tags\": [],\n    \"type\": \"public\",\n    \"meta\": {\n      \"plan_platform_display_name\": \"Both Mobile & Web\"\n    },\n    \"country\": \"IN\",\n    \"company_ids\": [],\n    \"created_by\": \"000000000000000016841367\",\n    \"current_status\": \"draft\",\n    \"channel_type\": \"ecomm\",\n    \"platform\": \"all\",\n    \"created_at\": \"2024-03-27T05:39:37.341Z\",\n    \"modified_at\": \"2024-03-27T05:39:37.341Z\"\n  }\n]",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "4b95ac42-8e26-4040-9211-ddede634e809",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "ee8b294f-0d5a-4143-bf5d-80597308344c",
          "name": "searchApplication | Search application",
          "request": {
            "name": "searchApplication | Search application",
            "description": {
              "content": "Provide application name or domain url.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "f9708457-fb99-4d41-a5f7-e99de5f1b48e",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "Lorem enim id in",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"application\": {\n    \"website\": {\n      \"enabled\": true,\n      \"basepath\": \"/\"\n    },\n    \"cors\": {\n      \"domains\": []\n    },\n    \"auth\": {\n      \"enabled\": true\n    },\n    \"description\": \"test\",\n    \"channel_type\": \"store\",\n    \"cache_ttl\": -1,\n    \"internal\": false,\n    \"is_active\": true,\n    \"mode\": \"live\",\n    \"_id\": \"620b931ee7bfb11f910bf4a3\",\n    \"company_id\": 2,\n    \"name\": \"test\",\n    \"owner\": \"5b9b98150df588546aaea6d2\",\n    \"logo\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"favicon\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"banner\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n    },\n    \"token\": \"tPQv0nc23\",\n    \"tokens\": [\n      {\n        \"token\": \"tPQv0nc23\",\n        \"created_at\": \"2022-02-15T11:48:46.909Z\"\n      }\n    ],\n    \"domains\": [\n      {\n        \"verified\": true,\n        \"is_primary\": true,\n        \"is_shortlink\": true,\n        \"_id\": \"620b931ee7bfb11f910bf4a4\",\n        \"name\": \"qckvv5lhp.hostfynd.dev\"\n      }\n    ],\n    \"redirections\": [],\n    \"meta\": [],\n    \"created_at\": \"2022-02-15T11:48:46.909Z\",\n    \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n    \"__v\": 0,\n    \"domain\": {\n      \"verified\": true,\n      \"is_primary\": true,\n      \"is_shortlink\": true,\n      \"_id\": \"620b931ee7bfb11f910bf4a4\",\n      \"name\": \"qckvv5lhp.hostfynd.dev\"\n    },\n    \"id\": \"620b931ee7bfb11f910bf4a3\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "de6f3753-7141-4937-957b-b0f02583d281",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "Lorem enim id in",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"Invalid application domain or id.\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e7ca3dbb-1268-40d9-8971-84ac1a6067d0",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "Lorem enim id in",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"No application found\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "9f303138-c4a3-4bd7-8f64-82ceb593069a",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {
              "content": "Get Location configuration",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "2a1d8781-4333-432f-84cf-867180597eab",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"items\": [\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"et anim ip\",\n      \"phone_code\": \"990999092\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"sed eu\",\n      \"country_code\": \"dolore minim aliqua eiusmod\",\n      \"latitude\": \"labore eu pariatur culpa ullamco\",\n      \"longitude\": \"in sed non magna\"\n    },\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"officia labore\",\n      \"phone_code\": \"990999092\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"qui laboris nulla non\",\n      \"country_code\": \"tempor\",\n      \"latitude\": \"cupidatat tempor exercitation ut\",\n      \"longitude\": \"quis sunt incididunt irure\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "589d5443-229d-4317-af81-312d87f27722",
      "name": "Content",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "6f86910e-7b72-47fa-b867-20651d522089",
          "name": "getCredentialsByEntity | Get credentials to power chat support systems",
          "request": {
            "name": "getCredentialsByEntity | Get credentials to power chat support systems",
            "description": {
              "content": "Get credentials for support system",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "public",
                "content",
                "credentials",
                ":entity"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "entity",
                  "description": "(Required) Server Type"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "523103bf-d9d0-4f52-9600-a649d089573f",
              "name": "Success. Refer `CredentialsSchema` for more details.",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "content",
                    "credentials",
                    ":entity"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "entity",
                      "description": "(Required) Server Type"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"entity_type\": \"partner\",\n  \"type\": \"freshchat\",\n  \"is_enable\": true,\n  \"configuration\": {\n    \"token\": \"a3e4gf20b-d11g-4512-n3zq-03b9aa7e1yxz\",\n    \"siteId\": \"a3e8f20b-d97f-452f-bd72-03b9aa7e1bf0\",\n    \"host\": \"https://wchat.freshchat.com\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "8489f0ba-c374-49df-870d-9d5fd71f82ad",
              "name": "Bad Request. See the error object in the response body to know the exact reason.",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "content",
                    "credentials",
                    ":entity"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "entity",
                      "description": "(Required) Server Type"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Oops! Something went wrong. Please try later\",\n  \"status\": 400,\n  \"code\": \"CX-1003\",\n  \"exception\": \"\",\n  \"info\": \"\",\n  \"request_id\": \"\",\n  \"stack_trace\": \"\",\n  \"meta\": {}\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "a6a77d8e-f677-4fdf-9b0d-b91ab1b65e7e",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "5ea08245-003f-488d-b422-e3a69825a696",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "71b6ca3a-ca62-4326-b8f4-b815d3c661df",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1975-03-14T17:34:11.804Z\",\n  \"status\": 25648832,\n  \"error\": \"commodo est tempor aliqua\",\n  \"exception\": \"adipisicing culpa\",\n  \"message\": \"et \",\n  \"total_time_taken_in_millis\": 70406748,\n  \"http_status\": \"504 GATEWAY_TIMEOUT\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"dolore\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "04066be9-af77-4d11-b2c8-ba2ba9752543",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1975-03-14T17:34:11.804Z\",\n  \"status\": 25648832,\n  \"error\": \"commodo est tempor aliqua\",\n  \"exception\": \"adipisicing culpa\",\n  \"message\": \"et \",\n  \"total_time_taken_in_millis\": 70406748,\n  \"http_status\": \"504 GATEWAY_TIMEOUT\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"dolore\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "cec3de59-9662-4ff5-af99-37362c6cf8a6",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1975-03-14T17:34:11.804Z\",\n  \"status\": 25648832,\n  \"error\": \"commodo est tempor aliqua\",\n  \"exception\": \"adipisicing culpa\",\n  \"message\": \"et \",\n  \"total_time_taken_in_millis\": 70406748,\n  \"http_status\": \"504 GATEWAY_TIMEOUT\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"dolore\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "6f42c972-b6bb-4939-b98e-c51e688981b6",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "52189009-355f-4297-8c72-825c769d76e8",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2022-12-20T00:56:30.780Z\",\n  \"status\": -13048196,\n  \"error\": \"minim nulla proident\",\n  \"exception\": \"tempor fugiat magna sint deserunt\",\n  \"message\": \"ut ipsum elit proident nisi\",\n  \"total_time_taken_in_millis\": -34940438,\n  \"http_status\": \"405 METHOD_NOT_ALLOWED\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"anim dol\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1bda9b8c-b490-4026-b5fe-a08ee01b72be",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2022-12-20T00:56:30.780Z\",\n  \"status\": -13048196,\n  \"error\": \"minim nulla proident\",\n  \"exception\": \"tempor fugiat magna sint deserunt\",\n  \"message\": \"ut ipsum elit proident nisi\",\n  \"total_time_taken_in_millis\": -34940438,\n  \"http_status\": \"405 METHOD_NOT_ALLOWED\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"anim dol\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f21eb520-2465-4d56-91af-0adf66242818",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2022-12-20T00:56:30.780Z\",\n  \"status\": -13048196,\n  \"error\": \"minim nulla proident\",\n  \"exception\": \"tempor fugiat magna sint deserunt\",\n  \"message\": \"ut ipsum elit proident nisi\",\n  \"total_time_taken_in_millis\": -34940438,\n  \"http_status\": \"405 METHOD_NOT_ALLOWED\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"anim dol\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "98ee0866-9436-4a36-be9b-1affe6f08b43",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2022-12-20T00:56:30.780Z\",\n  \"status\": -13048196,\n  \"error\": \"minim nulla proident\",\n  \"exception\": \"tempor fugiat magna sint deserunt\",\n  \"message\": \"ut ipsum elit proident nisi\",\n  \"total_time_taken_in_millis\": -34940438,\n  \"http_status\": \"405 METHOD_NOT_ALLOWED\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"anim dol\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "73ce271c-b2b6-4187-992f-8247fa536478",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2022-12-20T00:56:30.780Z\",\n  \"status\": -13048196,\n  \"error\": \"minim nulla proident\",\n  \"exception\": \"tempor fugiat magna sint deserunt\",\n  \"message\": \"ut ipsum elit proident nisi\",\n  \"total_time_taken_in_millis\": -34940438,\n  \"http_status\": \"405 METHOD_NOT_ALLOWED\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"anim dol\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "c1039e93-ce08-490e-a70e-4477a998a6fe",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "d8146ad2-1fcf-4242-9ad4-d3632416d516",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2013-04-02T10:14:43.648Z\",\n  \"status\": -52892386,\n  \"error\": \"minim pariatur labo\",\n  \"exception\": \"adipisicing amet culpa\",\n  \"message\": \"in sint\",\n  \"total_time_taken_in_millis\": -18210840,\n  \"http_status\": \"416 REQUESTED_RANGE_NOT_SATISFIABLE\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"aliqua fugiat in proident\",\n      \"description\": \"eu laboris tempor aliqua\",\n      \"name\": \"proident ipsum commodo veniam\",\n      \"slug\": \"in nisi Excepteur sed\",\n      \"meta\": [\n        {\n          \"_id\": \"Ut\",\n          \"name\": \"proident ut Excepteur\",\n          \"value\": \"occaecat dolore ad qui\"\n        },\n        {\n          \"_id\": \"ipsum dolor qui\",\n          \"name\": \"velit\",\n          \"value\": \"sint aliquip et occaecat\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"qui irure tempor consectetur\",\n        \"integration\": \"nulla deserunt id quis\",\n        \"level\": \"Duis eiusmod\",\n        \"uid\": -92453555,\n        \"opted\": false,\n        \"permissions\": [\n          \"quis dolore non\",\n          \"in culpa qui\"\n        ],\n        \"token\": \"laborum\",\n        \"name\": \"dolore\",\n        \"stores\": [\n          {\n            \"_id\": \"magna laborum\",\n            \"integration\": \"ut quis sed\",\n            \"level\": \"nostrud\",\n            \"uid\": 43557908,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ullamco dolore incididunt do sed\",\n            \"code\": \"anim in\",\n            \"name\": \"et incididunt elit\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"tempor ad elit adipisicing\",\n            \"integration\": \"nisi sunt dolor\",\n            \"level\": \"dolore com\",\n            \"uid\": -10621192,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"laboris\",\n            \"code\": \"non et labore veniam\",\n            \"name\": \"qui nulla\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"adipisicing q\",\n        \"integration\": \"occaecat\",\n        \"level\": \"anim elit\",\n        \"uid\": 25894873,\n        \"opted\": true,\n        \"permissions\": [\n          \"aliquip pariatur Lorem esse\",\n          \"ullamco Lorem reprehenderit dolore\"\n        ],\n        \"token\": \"consequat labore \",\n        \"name\": \"in est esse aute\",\n        \"stores\": [\n          {\n            \"_id\": \"enim irure consequat amet\",\n            \"integration\": \"ut reprehenderit moll\",\n            \"level\": \"in culpa cupidatat\",\n            \"uid\": -66664893,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ea\",\n            \"code\": \"consequat in dolor ipsum\",\n            \"name\": \"veniam irure\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"elit irure\",\n            \"integration\": \"sunt enim incididunt\",\n            \"level\": \"dolor deserunt nisi labore est\",\n            \"uid\": 55143470,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ips\",\n            \"code\": \"sed velit Ut reprehenderit dolor\",\n            \"name\": \"irure consectetur magna pariatur\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"aute ullamco est\",\n      \"description\": \"consectetur eu velit\",\n      \"name\": \"id consequat Duis\",\n      \"slug\": \"in commodo quis dolore\",\n      \"meta\": [\n        {\n          \"_id\": \"consectetur nostrud fugiat quis\",\n          \"name\": \"in est\",\n          \"value\": \"aliqua officia magna\"\n        },\n        {\n          \"_id\": \"fugiat sint anim qui\",\n          \"name\": \"do adipisicing ex voluptate sint\",\n          \"value\": \"sit reprehenderit sed voluptate quis\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"labore cillum dolor\",\n        \"integration\": \"magna elit minim ipsum\",\n        \"level\": \"ipsum dolore\",\n        \"uid\": 64800493,\n        \"opted\": false,\n        \"permissions\": [\n          \"ut magna dolore cillum\",\n          \"elit reprehenderit ad\"\n        ],\n        \"token\": \"mollit adipisicing\",\n        \"name\": \"sunt\",\n        \"stores\": [\n          {\n            \"_id\": \"id pariatur\",\n            \"integration\": \"adipisicing exercitation\",\n            \"level\": \"minim cillum et\",\n            \"uid\": 7739836,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"reprehenderit in cupidatat\",\n            \"code\": \"adipisicing nisi dolor\",\n            \"name\": \"laboris non mollit\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"sunt\",\n            \"integration\": \"ullamco\",\n            \"level\": \"cupidatat labore anim ut\",\n            \"uid\": -54104412,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"qui irure Excepteur cillum proident\",\n            \"code\": \"eiusmod ullamco deserunt laboris veniam\",\n            \"name\": \"Excepteur aliqua\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"aliquip esse tempor\",\n        \"integration\": \"consectetur\",\n        \"level\": \"Duis\",\n        \"uid\": 51342428,\n        \"opted\": false,\n        \"permissions\": [\n          \"enim te\",\n          \"pariatur aliqua ullamco\"\n        ],\n        \"token\": \"incididunt occ\",\n        \"name\": \"laboris irure c\",\n        \"stores\": [\n          {\n            \"_id\": \"qui\",\n            \"integration\": \"cillum minim consectetur\",\n            \"level\": \"do laborum ea\",\n            \"uid\": -76805849,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"Duis\",\n            \"code\": \"in pariatur aliqua\",\n            \"name\": \"est\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"in\",\n            \"integration\": \"labore fugiat dolor\",\n            \"level\": \"aute mollit\",\n            \"uid\": -46242164,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ea aliquip anim eu sunt\",\n            \"code\": \"dolor dolore laborum nostrud\",\n            \"name\": \"consequat fugiat dolore ea Excepteur\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"elit incididunt commodo\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e5214e59-ef2f-4f2e-9918-d84f37ae1537",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1984-02-10T11:32:19.371Z\",\n  \"status\": -12846674,\n  \"error\": \"in nulla est\",\n  \"exception\": \"dolor aute\",\n  \"message\": \"quis commodo\",\n  \"total_time_taken_in_millis\": -60673142,\n  \"http_status\": \"411 LENGTH_REQUIRED\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"aute enim do\",\n      \"description\": \"eu et proident amet\",\n      \"name\": \"min\",\n      \"slug\": \"mollit deserunt\",\n      \"meta\": [\n        {\n          \"_id\": \"Duis\",\n          \"name\": \"ullamco ea\",\n          \"value\": \"occaecat dolor\"\n        },\n        {\n          \"_id\": \"reprehenderit in nisi Ut\",\n          \"name\": \"do Excepteur\",\n          \"value\": \"reprehenderit aute in\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"ipsum consectetur\",\n        \"integration\": \"labore do magna cillum\",\n        \"level\": \"fugiat dolor ullamco nulla\",\n        \"uid\": -27684400,\n        \"opted\": false,\n        \"permissions\": [\n          \"in Duis do aliqua\",\n          \"elit aliqua reprehenderit\"\n        ],\n        \"token\": \"proident cupidatat\",\n        \"name\": \"laborum dolore magna exercitation\",\n        \"stores\": [\n          {\n            \"_id\": \"enim mollit cupidatat ex\",\n            \"integration\": \"et ut mollit\",\n            \"level\": \"pariatur aliqua ut dolore\",\n            \"uid\": -87283827,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ullamco ad fugiat\",\n            \"code\": \"ullamco Duis amet\",\n            \"name\": \"in anim ut L\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"nisi aute\",\n            \"integration\": \"eiusmod velit culpa\",\n            \"level\": \"elit\",\n            \"uid\": 38353723,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"fugiat enim amet\",\n            \"code\": \"sed ut\",\n            \"name\": \"pariatur nostrud\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"ea\",\n        \"integration\": \"elit occaecat e\",\n        \"level\": \"laborum minim occaecat sint\",\n        \"uid\": -73562760,\n        \"opted\": false,\n        \"permissions\": [\n          \"eiusmod do \",\n          \"sed commodo\"\n        ],\n        \"token\": \"culpa cupidatat consect\",\n        \"name\": \"aliquip non ex\",\n        \"stores\": [\n          {\n            \"_id\": \"sit non\",\n            \"integration\": \"commodo ipsum deserunt eu dolore\",\n            \"level\": \"officia velit\",\n            \"uid\": 25939486,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"laborum commodo\",\n            \"code\": \"consequat pariatur\",\n            \"name\": \"labore sunt\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"cillum aliqua incididunt\",\n            \"integration\": \"quis\",\n            \"level\": \"ipsum commodo\",\n            \"uid\": -63356166,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"amet ullamco sunt labore\",\n            \"code\": \"ea\",\n            \"name\": \"dolor in\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"cillum exercitatio\",\n      \"description\": \"pariatur proident mollit irure\",\n      \"name\": \"Duis proident pariatur non dolor\",\n      \"slug\": \"officia al\",\n      \"meta\": [\n        {\n          \"_id\": \"quis\",\n          \"name\": \"eiusmod est mollit Duis\",\n          \"value\": \"Ut reprehenderit nisi\"\n        },\n        {\n          \"_id\": \"in ipsum reprehenderit labore ea\",\n          \"name\": \"est qui laboris\",\n          \"value\": \"mollit deserunt eiusmod velit ex\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"esse consectetur\",\n        \"integration\": \"quis cupidatat ipsum ex\",\n        \"level\": \"Excepteur aute\",\n        \"uid\": 72855669,\n        \"opted\": false,\n        \"permissions\": [\n          \"magna dolor sunt\",\n          \"qui do Duis in\"\n        ],\n        \"token\": \"nulla id\",\n        \"name\": \"anim\",\n        \"stores\": [\n          {\n            \"_id\": \"officia\",\n            \"integration\": \"minim irure cillum est\",\n            \"level\": \"esse laboris a\",\n            \"uid\": -61082088,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"dolore velit\",\n            \"code\": \"dolore \",\n            \"name\": \"pariatur quis deserunt ex qui\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"magna\",\n            \"integration\": \"fugiat sint\",\n            \"level\": \"c\",\n            \"uid\": -36285623,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"officia sunt anim \",\n            \"code\": \"magna in\",\n            \"name\": \"in deserunt in\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"in sint labore enim\",\n        \"integration\": \"ut proident\",\n        \"level\": \"deserunt labore anim dolor\",\n        \"uid\": 64763930,\n        \"opted\": true,\n        \"permissions\": [\n          \"commodo laborum\",\n          \"proident sunt\"\n        ],\n        \"token\": \"ad pariatur anim laborum irure\",\n        \"name\": \"deserunt magna amet\",\n        \"stores\": [\n          {\n            \"_id\": \"amet cillum laboris ipsum\",\n            \"integration\": \"aute proident\",\n            \"level\": \"incididunt culpa mollit\",\n            \"uid\": 42629640,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"mollit dolor\",\n            \"code\": \"dolore cupidatat\",\n            \"name\": \"nostrud minim exercitation fugiat\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"commodo\",\n            \"integration\": \"consequat eiusmod\",\n            \"level\": \"laborum in minim laboris\",\n            \"uid\": 72438159,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"Excepteur v\",\n            \"code\": \"amet ut\",\n            \"name\": \"ad sint aute enim\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"nulla enim ut\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "bb16a57e-7f89-46a4-beaa-5077cf5f7b97",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1984-02-10T11:32:19.371Z\",\n  \"status\": -12846674,\n  \"error\": \"in nulla est\",\n  \"exception\": \"dolor aute\",\n  \"message\": \"quis commodo\",\n  \"total_time_taken_in_millis\": -60673142,\n  \"http_status\": \"411 LENGTH_REQUIRED\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"aute enim do\",\n      \"description\": \"eu et proident amet\",\n      \"name\": \"min\",\n      \"slug\": \"mollit deserunt\",\n      \"meta\": [\n        {\n          \"_id\": \"Duis\",\n          \"name\": \"ullamco ea\",\n          \"value\": \"occaecat dolor\"\n        },\n        {\n          \"_id\": \"reprehenderit in nisi Ut\",\n          \"name\": \"do Excepteur\",\n          \"value\": \"reprehenderit aute in\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"ipsum consectetur\",\n        \"integration\": \"labore do magna cillum\",\n        \"level\": \"fugiat dolor ullamco nulla\",\n        \"uid\": -27684400,\n        \"opted\": false,\n        \"permissions\": [\n          \"in Duis do aliqua\",\n          \"elit aliqua reprehenderit\"\n        ],\n        \"token\": \"proident cupidatat\",\n        \"name\": \"laborum dolore magna exercitation\",\n        \"stores\": [\n          {\n            \"_id\": \"enim mollit cupidatat ex\",\n            \"integration\": \"et ut mollit\",\n            \"level\": \"pariatur aliqua ut dolore\",\n            \"uid\": -87283827,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ullamco ad fugiat\",\n            \"code\": \"ullamco Duis amet\",\n            \"name\": \"in anim ut L\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"nisi aute\",\n            \"integration\": \"eiusmod velit culpa\",\n            \"level\": \"elit\",\n            \"uid\": 38353723,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"fugiat enim amet\",\n            \"code\": \"sed ut\",\n            \"name\": \"pariatur nostrud\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"ea\",\n        \"integration\": \"elit occaecat e\",\n        \"level\": \"laborum minim occaecat sint\",\n        \"uid\": -73562760,\n        \"opted\": false,\n        \"permissions\": [\n          \"eiusmod do \",\n          \"sed commodo\"\n        ],\n        \"token\": \"culpa cupidatat consect\",\n        \"name\": \"aliquip non ex\",\n        \"stores\": [\n          {\n            \"_id\": \"sit non\",\n            \"integration\": \"commodo ipsum deserunt eu dolore\",\n            \"level\": \"officia velit\",\n            \"uid\": 25939486,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"laborum commodo\",\n            \"code\": \"consequat pariatur\",\n            \"name\": \"labore sunt\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"cillum aliqua incididunt\",\n            \"integration\": \"quis\",\n            \"level\": \"ipsum commodo\",\n            \"uid\": -63356166,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"amet ullamco sunt labore\",\n            \"code\": \"ea\",\n            \"name\": \"dolor in\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"cillum exercitatio\",\n      \"description\": \"pariatur proident mollit irure\",\n      \"name\": \"Duis proident pariatur non dolor\",\n      \"slug\": \"officia al\",\n      \"meta\": [\n        {\n          \"_id\": \"quis\",\n          \"name\": \"eiusmod est mollit Duis\",\n          \"value\": \"Ut reprehenderit nisi\"\n        },\n        {\n          \"_id\": \"in ipsum reprehenderit labore ea\",\n          \"name\": \"est qui laboris\",\n          \"value\": \"mollit deserunt eiusmod velit ex\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"esse consectetur\",\n        \"integration\": \"quis cupidatat ipsum ex\",\n        \"level\": \"Excepteur aute\",\n        \"uid\": 72855669,\n        \"opted\": false,\n        \"permissions\": [\n          \"magna dolor sunt\",\n          \"qui do Duis in\"\n        ],\n        \"token\": \"nulla id\",\n        \"name\": \"anim\",\n        \"stores\": [\n          {\n            \"_id\": \"officia\",\n            \"integration\": \"minim irure cillum est\",\n            \"level\": \"esse laboris a\",\n            \"uid\": -61082088,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"dolore velit\",\n            \"code\": \"dolore \",\n            \"name\": \"pariatur quis deserunt ex qui\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"magna\",\n            \"integration\": \"fugiat sint\",\n            \"level\": \"c\",\n            \"uid\": -36285623,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"officia sunt anim \",\n            \"code\": \"magna in\",\n            \"name\": \"in deserunt in\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"in sint labore enim\",\n        \"integration\": \"ut proident\",\n        \"level\": \"deserunt labore anim dolor\",\n        \"uid\": 64763930,\n        \"opted\": true,\n        \"permissions\": [\n          \"commodo laborum\",\n          \"proident sunt\"\n        ],\n        \"token\": \"ad pariatur anim laborum irure\",\n        \"name\": \"deserunt magna amet\",\n        \"stores\": [\n          {\n            \"_id\": \"amet cillum laboris ipsum\",\n            \"integration\": \"aute proident\",\n            \"level\": \"incididunt culpa mollit\",\n            \"uid\": 42629640,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"mollit dolor\",\n            \"code\": \"dolore cupidatat\",\n            \"name\": \"nostrud minim exercitation fugiat\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"commodo\",\n            \"integration\": \"consequat eiusmod\",\n            \"level\": \"laborum in minim laboris\",\n            \"uid\": 72438159,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"Excepteur v\",\n            \"code\": \"amet ut\",\n            \"name\": \"ad sint aute enim\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"nulla enim ut\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "dcbbb569-0258-4c0e-a34e-766ac9ba1f6f",
          "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
          "request": {
            "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "ee99b0c5-0b0e-4d33-98b1-92a961f3f3de",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1993-08-20T22:49:02.419Z\",\n  \"status\": 38454935,\n  \"error\": \"velit exercitation cillum dolor\",\n  \"exception\": \"minim eiusmod fugiat\",\n  \"message\": \"Ut sunt proident id\",\n  \"total_time_taken_in_millis\": 16064406,\n  \"http_status\": \"102 PROCESSING\",\n  \"items\": {\n    \"session_id\": \"Lorem aute\",\n    \"error_message\": \"aliquip ex quis ullamco\"\n  },\n  \"payload\": {\n    \"session_id\": \"aliqua\",\n    \"error_message\": \"Ut est laborum\"\n  },\n  \"trace_id\": \"cillum aute\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "6c0cb568-632a-4839-9d47-b1e0de492628",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1993-08-20T22:49:02.419Z\",\n  \"status\": 38454935,\n  \"error\": \"velit exercitation cillum dolor\",\n  \"exception\": \"minim eiusmod fugiat\",\n  \"message\": \"Ut sunt proident id\",\n  \"total_time_taken_in_millis\": 16064406,\n  \"http_status\": \"102 PROCESSING\",\n  \"items\": {\n    \"session_id\": \"Lorem aute\",\n    \"error_message\": \"aliquip ex quis ullamco\"\n  },\n  \"payload\": {\n    \"session_id\": \"aliqua\",\n    \"error_message\": \"Ut est laborum\"\n  },\n  \"trace_id\": \"cillum aute\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d70f01b8-260d-4d5e-8081-f52177e7fc22",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1993-08-20T22:49:02.419Z\",\n  \"status\": 38454935,\n  \"error\": \"velit exercitation cillum dolor\",\n  \"exception\": \"minim eiusmod fugiat\",\n  \"message\": \"Ut sunt proident id\",\n  \"total_time_taken_in_millis\": 16064406,\n  \"http_status\": \"102 PROCESSING\",\n  \"items\": {\n    \"session_id\": \"Lorem aute\",\n    \"error_message\": \"aliquip ex quis ullamco\"\n  },\n  \"payload\": {\n    \"session_id\": \"aliqua\",\n    \"error_message\": \"Ut est laborum\"\n  },\n  \"trace_id\": \"cillum aute\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "dbe19eed-eb52-4fc8-8da8-038630d2c8d7",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "fcd0cd41-3d68-49eb-b691-7b8b15b91601",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1968-10-11T23:32:24.419Z\",\n  \"status\": -30026571,\n  \"error\": \"commodo\",\n  \"exception\": \"enim Excepteur Ut exercitation nu\",\n  \"message\": \"culpa anim tempor\",\n  \"total_time_taken_in_millis\": -50440740,\n  \"http_status\": \"511 NETWORK_AUTHENTICATION_REQUIRED\",\n  \"items\": {\n    \"company_id\": -64181646,\n    \"integration_data\": {\n      \"adipisicing_f\": {},\n      \"consectetur753\": {}\n    },\n    \"company_name\": \"ut sunt magna ullamco\",\n    \"task_details\": {\n      \"type\": -43262570,\n      \"group_list\": [\n        {\n          \"text\": \"incididunt dolore enim\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"aliquip ipsum magna qui\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -95544351.22341065,\n      \"safe_stock\": -16551454,\n      \"period_threshold\": -21498928,\n      \"period_threshold_type\": \"DAYS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"est laboris adipisicing\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"et irure Duis nostrud\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"occaecat reprehenderit dolore ut nostrud\",\n    \"alias\": \"irure nisi amet\"\n  },\n  \"payload\": {\n    \"company_id\": 38477624,\n    \"integration_data\": {\n      \"occaecat_5ea\": {},\n      \"nulla7c\": {},\n      \"eiusmod_6e\": {}\n    },\n    \"company_name\": \"pariatur Duis aliquip velit\",\n    \"task_details\": {\n      \"type\": -27237181,\n      \"group_list\": [\n        {\n          \"text\": \"laboris do sit\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"laboris incididunt laborum\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 11394631.419294938,\n      \"safe_stock\": -94654291,\n      \"period_threshold\": -35320512,\n      \"period_threshold_type\": \"HOURS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"exercitation occaecat amet\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"consequat reprehenderit Excepteur\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"elit co\",\n    \"alias\": \"ea laborum\"\n  },\n  \"trace_id\": \"Excepteur \",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e0faa6af-3db2-4777-a67b-57132c03f12b",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1992-04-27T09:33:09.413Z\",\n  \"status\": -68868274,\n  \"error\": \"mollit commodo nisi\",\n  \"exception\": \"minim nostrud nulla\",\n  \"message\": \"in pariatur\",\n  \"total_time_taken_in_millis\": -28114738,\n  \"http_status\": \"403 FORBIDDEN\",\n  \"items\": {\n    \"company_id\": -22214556,\n    \"integration_data\": {\n      \"aliqua_6\": {},\n      \"ea__\": {},\n      \"aute_5\": {}\n    },\n    \"company_name\": \"sit ea\",\n    \"task_details\": {\n      \"type\": -57647019,\n      \"group_list\": [\n        {\n          \"text\": \"ut in reprehenderit est\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"fugiat dolore aliquip aliqua\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 79979069.40761012,\n      \"safe_stock\": -10773978,\n      \"period_threshold\": -18872636,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"ipsum laborum anim\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"in aliqua consectetur Lorem\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"dolore laborum\",\n    \"alias\": \"deserunt eu sunt ipsum\"\n  },\n  \"payload\": {\n    \"company_id\": 18625774,\n    \"integration_data\": {\n      \"sunt110\": {}\n    },\n    \"company_name\": \"reprehenderit dolore laboris in\",\n    \"task_details\": {\n      \"type\": -8631024,\n      \"group_list\": [\n        {\n          \"text\": \"officia incididunt\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"pariatu\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 45311472.83612111,\n      \"safe_stock\": 79003740,\n      \"period_threshold\": 84605344,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"sit voluptate\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"adipisicing consectetur\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"proident est voluptate\",\n    \"alias\": \"velit id eu\"\n  },\n  \"trace_id\": \"ex ut aliquip sin\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "8eadf339-a50a-4784-b371-1b80107ef581",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1992-04-27T09:33:09.413Z\",\n  \"status\": -68868274,\n  \"error\": \"mollit commodo nisi\",\n  \"exception\": \"minim nostrud nulla\",\n  \"message\": \"in pariatur\",\n  \"total_time_taken_in_millis\": -28114738,\n  \"http_status\": \"403 FORBIDDEN\",\n  \"items\": {\n    \"company_id\": -22214556,\n    \"integration_data\": {\n      \"aliqua_6\": {},\n      \"ea__\": {},\n      \"aute_5\": {}\n    },\n    \"company_name\": \"sit ea\",\n    \"task_details\": {\n      \"type\": -57647019,\n      \"group_list\": [\n        {\n          \"text\": \"ut in reprehenderit est\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"fugiat dolore aliquip aliqua\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 79979069.40761012,\n      \"safe_stock\": -10773978,\n      \"period_threshold\": -18872636,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"ipsum laborum anim\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"in aliqua consectetur Lorem\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"dolore laborum\",\n    \"alias\": \"deserunt eu sunt ipsum\"\n  },\n  \"payload\": {\n    \"company_id\": 18625774,\n    \"integration_data\": {\n      \"sunt110\": {}\n    },\n    \"company_name\": \"reprehenderit dolore laboris in\",\n    \"task_details\": {\n      \"type\": -8631024,\n      \"group_list\": [\n        {\n          \"text\": \"officia incididunt\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"pariatu\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 45311472.83612111,\n      \"safe_stock\": 79003740,\n      \"period_threshold\": 84605344,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"sit voluptate\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"adipisicing consectetur\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"proident est voluptate\",\n    \"alias\": \"velit id eu\"\n  },\n  \"trace_id\": \"ex ut aliquip sin\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "845e698a-2eec-4952-9ff9-2d321746b166",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "8115f80e-0fbc-472d-b361-a65c47773094",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2018-06-16T04:29:20.419Z\",\n  \"status\": 48032597,\n  \"error\": \"voluptate non qui\",\n  \"exception\": \"nostrud d\",\n  \"message\": \"proident adipisi\",\n  \"total_time_taken_in_millis\": 97933391,\n  \"http_status\": \"417 EXPECTATION_FAILED\",\n  \"items\": [\n    {\n      \"company_id\": 45183760,\n      \"integration_data\": {\n        \"commodo662\": {},\n        \"ex_5\": {}\n      },\n      \"company_name\": \"et anim labore in\",\n      \"task_details\": {\n        \"type\": -30320571,\n        \"group_list\": [\n          {\n            \"text\": \"elit ex\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"nostrud dolor dolor\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 64191305.44548342,\n        \"safe_stock\": 11829427,\n        \"period_threshold\": 13561301,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"sit magna quis ut in\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"reprehenderit sed elit\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"ut\",\n      \"alias\": \"sit eiusmod pariatur\"\n    },\n    {\n      \"company_id\": -14194894,\n      \"integration_data\": {\n        \"essee4\": {}\n      },\n      \"company_name\": \"in cil\",\n      \"task_details\": {\n        \"type\": -44854953,\n        \"group_list\": [\n          {\n            \"text\": \"proident officia laborum\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"velit\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -67720984.4239857,\n        \"safe_stock\": 57617486,\n        \"period_threshold\": 43655035,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"magna\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"eu in velit labore deserunt\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"ea sint ullamco\",\n      \"alias\": \"eiusmod anim\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": 33344989,\n      \"integration_data\": {\n        \"cupidatat5f\": {},\n        \"reprehenderit__c0\": {}\n      },\n      \"company_name\": \"dolor esse aute aliqua enim\",\n      \"task_details\": {\n        \"type\": 21990170,\n        \"group_list\": [\n          {\n            \"text\": \"laborum cillum elit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"do consectetur\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 5107095.0103725195,\n        \"safe_stock\": 4757945,\n        \"period_threshold\": -81213729,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"cupidatat quis commodo ut\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"est \",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"proident magna\",\n      \"alias\": \"aliquip\"\n    },\n    {\n      \"company_id\": -30011884,\n      \"integration_data\": {\n        \"ad_7cb\": {}\n      },\n      \"company_name\": \"ut laboris deserunt\",\n      \"task_details\": {\n        \"type\": 50471329,\n        \"group_list\": [\n          {\n            \"text\": \"do minim\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"nostrud est\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 11433191.541087285,\n        \"safe_stock\": 93972292,\n        \"period_threshold\": -66163282,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"eu elit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"pariatur dolore elit tempor\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"in \",\n      \"alias\": \"in aliquip id\"\n    }\n  ],\n  \"trace_id\": \"culpa deserunt nisi\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2c542e79-cc3c-42b7-b3fb-1d61ef0f8e88",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1967-03-04T07:12:43.724Z\",\n  \"status\": -73349377,\n  \"error\": \"sunt labore rep\",\n  \"exception\": \"Duis lab\",\n  \"message\": \"dolor minim enim ea\",\n  \"total_time_taken_in_millis\": -25419023,\n  \"http_status\": \"501 NOT_IMPLEMENTED\",\n  \"items\": [\n    {\n      \"company_id\": 47408745,\n      \"integration_data\": {\n        \"nulla_a8d\": {},\n        \"ut75\": {}\n      },\n      \"company_name\": \"Ut in ut fugiat\",\n      \"task_details\": {\n        \"type\": -40861573,\n        \"group_list\": [\n          {\n            \"text\": \"esse consequat elit ut mollit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"sed proident\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 14785777.729486644,\n        \"safe_stock\": 91730391,\n        \"period_threshold\": -30019191,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"qui elit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"aliqua ut exercitation\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"consectetur cupidatat o\",\n      \"alias\": \"magna sit mollit reprehenderit\"\n    },\n    {\n      \"company_id\": 96476561,\n      \"integration_data\": {\n        \"veniam_be\": {}\n      },\n      \"company_name\": \"deserunt ea aute\",\n      \"task_details\": {\n        \"type\": 70244453,\n        \"group_list\": [\n          {\n            \"text\": \"cillum nisi\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"deserunt sint irure non\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -68434087.98804331,\n        \"safe_stock\": 6136742,\n        \"period_threshold\": -79059471,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"exercitation magna deserunt irure laboris\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"Duis Except\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"ad proident\",\n      \"alias\": \"proident anim dolore occaecat\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": 95549309,\n      \"integration_data\": {\n        \"doloreb6\": {}\n      },\n      \"company_name\": \"quis Duis officia\",\n      \"task_details\": {\n        \"type\": 70986183,\n        \"group_list\": [\n          {\n            \"text\": \"est deserunt anim velit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"id dolore in est\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 90390354.03094625,\n        \"safe_stock\": -8855453,\n        \"period_threshold\": 90481286,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"laborum pariatur qui ad\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"velit voluptate incididunt est\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"ipsum sint in\",\n      \"alias\": \"amet ea exercitation quis laborum\"\n    },\n    {\n      \"company_id\": 85483600,\n      \"integration_data\": {\n        \"laborum_1b7\": {},\n        \"ametf29\": {},\n        \"occaecat_f\": {},\n        \"minim_02\": {}\n      },\n      \"company_name\": \"consequat\",\n      \"task_details\": {\n        \"type\": -52759143,\n        \"group_list\": [\n          {\n            \"text\": \"sed est officia enim\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"aliquip\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -3381792.6781750023,\n        \"safe_stock\": -25592732,\n        \"period_threshold\": -73328515,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"laborum pariatur ad nisi\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"aliquip reprehenderit quis\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"elit ea\",\n      \"alias\": \"enim velit amet ut\"\n    }\n  ],\n  \"trace_id\": \"reprehenderit id consequat\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "69380871-71d9-4fa8-bab2-945cd6b7b03d",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1967-03-04T07:12:43.724Z\",\n  \"status\": -73349377,\n  \"error\": \"sunt labore rep\",\n  \"exception\": \"Duis lab\",\n  \"message\": \"dolor minim enim ea\",\n  \"total_time_taken_in_millis\": -25419023,\n  \"http_status\": \"501 NOT_IMPLEMENTED\",\n  \"items\": [\n    {\n      \"company_id\": 47408745,\n      \"integration_data\": {\n        \"nulla_a8d\": {},\n        \"ut75\": {}\n      },\n      \"company_name\": \"Ut in ut fugiat\",\n      \"task_details\": {\n        \"type\": -40861573,\n        \"group_list\": [\n          {\n            \"text\": \"esse consequat elit ut mollit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"sed proident\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 14785777.729486644,\n        \"safe_stock\": 91730391,\n        \"period_threshold\": -30019191,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"qui elit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"aliqua ut exercitation\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"consectetur cupidatat o\",\n      \"alias\": \"magna sit mollit reprehenderit\"\n    },\n    {\n      \"company_id\": 96476561,\n      \"integration_data\": {\n        \"veniam_be\": {}\n      },\n      \"company_name\": \"deserunt ea aute\",\n      \"task_details\": {\n        \"type\": 70244453,\n        \"group_list\": [\n          {\n            \"text\": \"cillum nisi\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"deserunt sint irure non\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -68434087.98804331,\n        \"safe_stock\": 6136742,\n        \"period_threshold\": -79059471,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"exercitation magna deserunt irure laboris\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"Duis Except\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"ad proident\",\n      \"alias\": \"proident anim dolore occaecat\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": 95549309,\n      \"integration_data\": {\n        \"doloreb6\": {}\n      },\n      \"company_name\": \"quis Duis officia\",\n      \"task_details\": {\n        \"type\": 70986183,\n        \"group_list\": [\n          {\n            \"text\": \"est deserunt anim velit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"id dolore in est\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 90390354.03094625,\n        \"safe_stock\": -8855453,\n        \"period_threshold\": 90481286,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"laborum pariatur qui ad\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"velit voluptate incididunt est\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"ipsum sint in\",\n      \"alias\": \"amet ea exercitation quis laborum\"\n    },\n    {\n      \"company_id\": 85483600,\n      \"integration_data\": {\n        \"laborum_1b7\": {},\n        \"ametf29\": {},\n        \"occaecat_f\": {},\n        \"minim_02\": {}\n      },\n      \"company_name\": \"consequat\",\n      \"task_details\": {\n        \"type\": -52759143,\n        \"group_list\": [\n          {\n            \"text\": \"sed est officia enim\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"aliquip\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -3381792.6781750023,\n        \"safe_stock\": -25592732,\n        \"period_threshold\": -73328515,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"laborum pariatur ad nisi\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"aliquip reprehenderit quis\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"elit ea\",\n      \"alias\": \"enim velit amet ut\"\n    }\n  ],\n  \"trace_id\": \"reprehenderit id consequat\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "cdc906b4-41ec-48bf-9814-42cb82fac467",
      "name": "Partner",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "7ffa89ac-239c-4306-937a-3795cf51914f",
          "name": "getPanelExtensionDetails | Get panel extension details",
          "request": {
            "name": "getPanelExtensionDetails | Get panel extension details",
            "description": {
              "content": "Retrieve detailed information about panel extensions in the public server setup.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "panel",
                "partners",
                "v1.0",
                "extensions",
                ":slug"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "slug",
                  "description": "(Required) pass the slug of the extension"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "494fca71-2612-4cf2-b6be-baa53e138735",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "panel",
                    "partners",
                    "v1.0",
                    "extensions",
                    ":slug"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "slug",
                      "description": "(Required) pass the slug of the extension"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"_id\": \"633ab5cb635a41fdde9fb648\",\n  \"organization_id\": \"6333fef3b1d85e44e738c138\",\n  \"extension_id\": \"633425ebb1d85e44e738c2ab\",\n  \"slug\": \"example-extension-1\",\n  \"scope\": [\n    \"company/profile\",\n    \"company/saleschannel\",\n    \"company/product\",\n    \"company/order\",\n    \"company/application/customer\",\n    \"company/application/analytics\",\n    \"company/application/storage\",\n    \"company/application/marketing\",\n    \"company/application/catalogue\",\n    \"company/application/communication\",\n    \"company/application/support\",\n    \"company/application/order\",\n    \"company/application/settings\"\n  ],\n  \"category\": {\n    \"categories_l1\": [],\n    \"categories_l2\": []\n  },\n  \"listing_info\": {\n    \"name\": \"ujjawal-example-extension-1\",\n    \"keywords\": [],\n    \"tagline\": \"test-extension for test how extensions look and work and how to create them\",\n    \"icon\": \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/AMwIEOw0U-logo.png\"\n  },\n  \"details\": {\n    \"benefits\": [\n      {\n        \"title\": \"Works fast\",\n        \"description\": \"works fast\",\n        \"_id\": \"633ab5cb635a41fdde9fb649\"\n      }\n    ],\n    \"screenshots\": {\n      \"desktop\": [\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/g95yHXkou-1024x576.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/IKdHxP2fN-1024x576.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/_auq1yvEp-1024x576.png\"\n      ],\n      \"mobile\": [\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/E_YAHM9cU-600x900.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/vEnXw9cCg-600x900.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/O3Wng4Rqn-600x900.png\"\n      ]\n    },\n    \"description\": \"Sample public extension\",\n    \"demo_url\": \"\",\n    \"video_url\": [\n      {\n        \"type\": \"video\",\n        \"url\": \"https://hdn-1.addsale.com/x0/products/videos/item/free/original/kizLVNWyS-video-sc-1.mp4\"\n      }\n    ],\n    \"integrations\": []\n  },\n  \"plan_type\": \"free\",\n  \"plans\": [\n    {\n      \"name\": \"Custom Free\",\n      \"features\": \"provides ease\",\n      \"type\": \"free\",\n      \"price\": {\n        \"amount\": 0,\n        \"currency\": \"INR\"\n      },\n      \"trial_days\": 0,\n      \"additional_charges\": \"\"\n    }\n  ],\n  \"plans_url\": \"\",\n  \"contact_info\": {\n    \"support\": {\n      \"email\": \"ujjawaltaleja@gofynd.com\",\n      \"phone\": \"7988169279\",\n      \"website_url\": \"\",\n      \"faq_url\": \"\",\n      \"privacy_policy_url\": \"\"\n    }\n  },\n  \"current_status\": \"active\",\n  \"coming_soon\": {\n    \"is_coming_soon\": false,\n    \"upvote_count\": 0\n  },\n  \"created_at\": \"2022-10-03T10:13:31.607Z\",\n  \"modified_at\": \"2022-10-03T10:13:31.607Z\",\n  \"organization\": {\n    \"name\": \"ujjawal-partners-fashion\",\n    \"slug\": \"ujjawa-w7t-68\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "1e57c36f-b918-4318-9361-71f2ba494219",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "0e175ecc-352c-4cd2-8589-f34a06d8f45a",
          "name": "fetchAllWebhookEvents | Fetch all webhook events.",
          "request": {
            "name": "fetchAllWebhookEvents | Fetch all webhook events.",
            "description": {
              "content": "Retrieve a list of all webhook events in the public server setup.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "d1c538c3-8aa5-4d91-972c-85b4eaf99ce1",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "dfda8741-09f3-4273-ac6f-758ae9cd99c4",
          "name": "queryWebhookEventDetails | Query webhook event details.",
          "request": {
            "name": "queryWebhookEventDetails | Query webhook event details.",
            "description": {
              "content": "Query and obtain detailed information about webhook events in the public server configurations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "b5402a9f-d6b5-4aae-9def-16cb2dd3b7a6",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"event_name\": \"article\",\n    \"event_type\": \"update\",\n    \"event_category\": \"company\",\n    \"version\": \"1\"\n  }\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "548d6c09-f969-4f4b-a836-3d3aaf17427b",
          "name": "notifyDepricatedEvent | Notifies all the events that are going to depricate",
          "request": {
            "name": "notifyDepricatedEvent | Notifies all the events that are going to depricate",
            "description": {
              "content": "Notifies all the events that are subscribed and are going to deprecate or new version is available for those events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "depricated-event-notifier"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "e5d53e5f-f2bd-4ad2-8626-d3b799610dbc",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "depricated-event-notifier"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "24ff66cb-12a8-4d8e-ac0a-e47225f687f4",
          "name": "testHandlerTransformation | Test transformation of handler",
          "request": {
            "name": "testHandlerTransformation | Test transformation of handler",
            "description": {
              "content": "Test transformation of handler",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "transform-event"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event_name\": \"<string>\",\n  \"event_type\": \"<string>\",\n  \"event_category\": \"<string>\",\n  \"event_version\": \"<string>\",\n  \"event\": {\n    \"payload\": {\n      \"id_e\": true\n    },\n    \"meta\": {\n      \"veniam2\": 66555634.01232305,\n      \"veniam7\": \"sunt nisi\"\n    }\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "e2d192e5-610f-4b26-b26d-37b40f498bf9",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "transform-event"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"event_name\": \"location\",\n  \"event_type\": \"create\",\n  \"event_category\": \"company\",\n  \"event_version\": \"1\",\n  \"event\": {\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450Z\",\n        \"modified_on\": \"2023-10-24T01:41:44.450Z\"\n      }\n    },\n    \"meta\": {\n      \"event\": {\n        \"type\": \"create\",\n        \"name\": \"location\",\n        \"version\": \"1\"\n      },\n      \"company_id\": 6086,\n      \"service\": {\n        \"name\": \"WheelJack\"\n      },\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"created_timestamp\": 1698111704725\n    }\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_trace_id\": [\n    \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n  ],\n  \"data\": {\n    \"event\": {\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"name\": \"location\",\n      \"type\": \"create\",\n      \"version\": \"1\",\n      \"created_timestamp\": 1698111704725\n    },\n    \"company_id\": 6086,\n    \"contains\": [\n      \"location\"\n    ],\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450Z\",\n        \"modified_on\": \"2023-10-24T01:41:44.450Z\"\n      }\n    }\n  },\n  \"event_name\": \"location\",\n  \"version\": \"1\",\n  \"status\": false,\n  \"event_type\": \"create\",\n  \"service_meta\": {\n    \"name\": \"WheelJack\"\n  },\n  \"association\": {\n    \"company_id\": 6086\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "a916446b-cbf5-43fe-a53d-ca9411405423",
          "name": "validateSchema | Validate Schema for an event",
          "request": {
            "name": "validateSchema | Validate Schema for an event",
            "description": {
              "content": "Validate Schema for an event",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "validate-event-schema"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event_name\": \"<string>\",\n  \"event_type\": \"<string>\",\n  \"event_category\": \"<string>\",\n  \"event_version\": \"<string>\",\n  \"event\": {\n    \"payload\": {\n      \"tempor_e\": 48341200.71402103,\n      \"adipisicing_b\": 61535306.60909209,\n      \"nulla_67_\": -76428052,\n      \"minim__\": -68927270\n    },\n    \"meta\": {\n      \"adipisicing_ec\": 75642436,\n      \"nisi79\": 85139289,\n      \"eufd\": \"labore velit et esse mi\"\n    }\n  },\n  \"event_schema\": {\n    \"culpa_2c\": -90193327.226123\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "0aff1d46-ac05-4ced-869e-19049a6edce2",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "validate-event-schema"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"event_name\": \"location\",\n  \"event_type\": \"create\",\n  \"event_category\": \"company\",\n  \"event_version\": \"1\",\n  \"event\": {\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450Z\",\n        \"modified_on\": \"2023-10-24T01:41:44.450Z\"\n      }\n    },\n    \"meta\": {\n      \"event\": {\n        \"type\": \"create\",\n        \"name\": \"location\",\n        \"version\": \"1\"\n      },\n      \"company_id\": 6086,\n      \"service\": {\n        \"name\": \"WheelJack\"\n      },\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"created_timestamp\": 1698111704725\n    }\n  },\n  \"event_schema\": {}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": true,\n  \"message\": \"Valid schema for this event\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fynd.com"
    }
  ],
  "info": {
    "_postman_id": "1fb222ec-fc59-44bf-a3a0-2d56a10404bf",
    "name": "Fynd Platform's Public Side APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public Side APIs",
      "type": "text/plain"
    }
  }
}
