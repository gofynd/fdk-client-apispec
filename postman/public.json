{
  "item": [
    {
      "id": "1f3a18f9-9ff9-4e5a-b75c-25d7732f3edb",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "3dcd2104-6c71-4ba8-9dde-1befa2810b6f",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "ce2a6b9b-5536-48a1-b215-9706606e2780",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "fugiat sint in cupidatat",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a9e07a7f-a759-4caf-84c2-a3fa5b381af1",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "fugiat sint in cupidatat",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "56c3409b-4309-4811-808e-38768cc522cb",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "fugiat sint in cupidatat",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "01134004-efde-4e7b-9a33-e11cff84702b",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "73fb9f14-a118-4e1c-ac23-5fad8e8951e5",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "3893a91e-289e-4cc3-838a-1e05cf2601b6",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "6d56536a-c88e-42c8-83ce-b65378ce6ceb",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "8e4d00d3-e893-4f49-bf7f-455dd4232c5c",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -54483592,\n   \"event_name\": \"nisi Ut\",\n   \"event_type\": \"Lorem adipisicing est commodo\",\n   \"event_category\": \"enim consectetur\",\n   \"version\": \"anim qui adipisicing Ex\",\n   \"display_name\": \"irure amet ut esse\",\n   \"description\": \"minim d\",\n   \"created_on\": \"aliquip nulla ad\"\n  },\n  {\n   \"id\": -51676896,\n   \"event_name\": \"cillum deserunt reprehenderit dolore ve\",\n   \"event_type\": \"reprehenderit non\",\n   \"event_category\": \"voluptate est\",\n   \"version\": \"adipisicing cupidatat\",\n   \"display_name\": \"tempor laborum\",\n   \"description\": \"Duis ea aute consectetur\",\n   \"created_on\": \"Ut exercitation\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "8ca44c24-4e76-4fea-ac25-cf0248ca50e5",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "eb1d724f-51fe-4fdb-a9f7-dfb005b2e317",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 74311911,\n   \"event_name\": \"officia adipisicing sunt\",\n   \"event_type\": \"et anim incididunt\",\n   \"event_category\": \"officia culpa\",\n   \"version\": \"elit ullamco officia laborum\",\n   \"display_name\": \"anim nostrud voluptate magna\",\n   \"description\": \"veniam ip\",\n   \"created_on\": \"quis Ut laboris aliqua\"\n  },\n  {\n   \"id\": 57678316,\n   \"event_name\": \"minim\",\n   \"event_type\": \"culpa ad\",\n   \"event_category\": \"veniam nostrud\",\n   \"version\": \"incididunt consequat ut \",\n   \"display_name\": \"exercitation aliquip esse pariatur sit\",\n   \"description\": \"nulla enim proident consectetur\",\n   \"created_on\": \"sit irure ut magna\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "39a9a7d1-dd47-4b6d-a159-80974db46f2b",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "220e6be5-0abb-4b0c-b727-e00f7f690eb3",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "1954cd09-a952-4dbd-a3e8-a6a7ceec3040",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1948-02-26T02:58:30.200Z\",\n \"status\": 26219644,\n \"error\": \"Duis\",\n \"exception\": \"aute est i\",\n \"message\": \"reprehenderit proident deserunt\",\n \"total_time_taken_in_millis\": 57962853,\n \"http_status\": \"203 NON_AUTHORITATIVE_INFORMATION\",\n \"items\": [\n  {\n   \"company_id\": -20155137,\n   \"integration_data\": {},\n   \"company_name\": \"Ut magna id\",\n   \"task_details\": {\n    \"type\": 539394,\n    \"group_list\": [\n     {\n      \"text\": \"aliqua ea\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nisi est Duis laboris\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 85982107.87488204,\n    \"safe_stock\": 24606775,\n    \"period_threshold\": 14902976,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ad sunt Duis id\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"minim exercitation nostrud\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ea irure est r\",\n   \"alias\": \"incididunt eu Duis nostrud\"\n  },\n  {\n   \"company_id\": -4234273,\n   \"integration_data\": {},\n   \"company_name\": \"ex nisi pariat\",\n   \"task_details\": {\n    \"type\": 46426202,\n    \"group_list\": [\n     {\n      \"text\": \"i\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"mollit et\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 18866641.160426274,\n    \"safe_stock\": -55478238,\n    \"period_threshold\": -72659667,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"pariatur velit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut qui\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"quis sed\",\n   \"alias\": \"elit\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 72905590,\n   \"integration_data\": {},\n   \"company_name\": \"eu sunt\",\n   \"task_details\": {\n    \"type\": -59839321,\n    \"group_list\": [\n     {\n      \"text\": \"ullamco sed irure\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sed c\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -70794207.27041775,\n    \"safe_stock\": 25791974,\n    \"period_threshold\": -69229328,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"aliqua magna pariatur irure\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"irure\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ipsum\",\n   \"alias\": \"aliquip in\"\n  },\n  {\n   \"company_id\": 61453570,\n   \"integration_data\": {},\n   \"company_name\": \"Excepteur incididunt\",\n   \"task_details\": {\n    \"type\": -18053864,\n    \"group_list\": [\n     {\n      \"text\": \"incididunt reprehenderit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"amet in minim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -72577618.15137278,\n    \"safe_stock\": -19067473,\n    \"period_threshold\": -12669535,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sed Lorem veniam\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Lorem dolor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"dolor proident tempor\",\n   \"alias\": \"labore sint irure ut\"\n  }\n ],\n \"trace_id\": \"nulla officia dolore\",\n \"page\": {\n  \"type\": \"do ullamco\",\n  \"size\": 23283731,\n  \"current\": -99519988,\n  \"has_next\": false,\n  \"item_total\": -91078443,\n  \"next_id\": \"consectetur eiusmod in\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "8643ab0a-7205-4765-a982-e914e355d791",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1964-03-25T16:43:59.333Z\",\n \"status\": -20938470,\n \"error\": \"veniam irure sunt est dolor\",\n \"exception\": \"in aliquip sit\",\n \"message\": \"dolore esse\",\n \"total_time_taken_in_millis\": 81038616,\n \"http_status\": \"103 CHECKPOINT\",\n \"items\": [\n  {\n   \"company_id\": -42523834,\n   \"integration_data\": {},\n   \"company_name\": \"ad irure qui\",\n   \"task_details\": {\n    \"type\": 57791404,\n    \"group_list\": [\n     {\n      \"text\": \"proident Excepteur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor enim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -55605421.11170208,\n    \"safe_stock\": 83123192,\n    \"period_threshold\": 11217824,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"occaecat ullamco veniam\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"commodo mollit esse irure\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"pariatur in ad reprehe\",\n   \"alias\": \"Duis ea sint dolor est\"\n  },\n  {\n   \"company_id\": -48813245,\n   \"integration_data\": {},\n   \"company_name\": \"amet consequat sunt\",\n   \"task_details\": {\n    \"type\": 78192316,\n    \"group_list\": [\n     {\n      \"text\": \"nulla velit enim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"do amet\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -87693093.44014142,\n    \"safe_stock\": -63855119,\n    \"period_threshold\": -95507996,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"tempor et\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore ea commodo minim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"nisi nostrud ut\",\n   \"alias\": \"non\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -47564461,\n   \"integration_data\": {},\n   \"company_name\": \"est do eiusmod\",\n   \"task_details\": {\n    \"type\": 67330745,\n    \"group_list\": [\n     {\n      \"text\": \"ullamco in sit qui\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cupidatat esse laborum est\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 44872475.393592685,\n    \"safe_stock\": -41033589,\n    \"period_threshold\": 31451313,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sunt Excepteur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cu\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Lorem quis consectetur\",\n   \"alias\": \"u\"\n  },\n  {\n   \"company_id\": -18626691,\n   \"integration_data\": {},\n   \"company_name\": \"ea laboris\",\n   \"task_details\": {\n    \"type\": -21877287,\n    \"group_list\": [\n     {\n      \"text\": \"pariatur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ullamco nisi ipsum Excepteur culpa\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 97156471.37409502,\n    \"safe_stock\": 21209535,\n    \"period_threshold\": -24946319,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"mollit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"of\",\n   \"alias\": \"consectetur irure in\"\n  }\n ],\n \"trace_id\": \"magna dolor in consectetur\",\n \"page\": {\n  \"type\": \"occaecat veniam aute\",\n  \"size\": 84416878,\n  \"current\": -77635693,\n  \"has_next\": false,\n  \"item_total\": -39829605,\n  \"next_id\": \"incididu\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a8b57e7b-ca62-4356-982c-a7c3a7abb35d",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1964-03-25T16:43:59.333Z\",\n \"status\": -20938470,\n \"error\": \"veniam irure sunt est dolor\",\n \"exception\": \"in aliquip sit\",\n \"message\": \"dolore esse\",\n \"total_time_taken_in_millis\": 81038616,\n \"http_status\": \"103 CHECKPOINT\",\n \"items\": [\n  {\n   \"company_id\": -42523834,\n   \"integration_data\": {},\n   \"company_name\": \"ad irure qui\",\n   \"task_details\": {\n    \"type\": 57791404,\n    \"group_list\": [\n     {\n      \"text\": \"proident Excepteur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor enim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -55605421.11170208,\n    \"safe_stock\": 83123192,\n    \"period_threshold\": 11217824,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"occaecat ullamco veniam\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"commodo mollit esse irure\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"pariatur in ad reprehe\",\n   \"alias\": \"Duis ea sint dolor est\"\n  },\n  {\n   \"company_id\": -48813245,\n   \"integration_data\": {},\n   \"company_name\": \"amet consequat sunt\",\n   \"task_details\": {\n    \"type\": 78192316,\n    \"group_list\": [\n     {\n      \"text\": \"nulla velit enim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"do amet\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -87693093.44014142,\n    \"safe_stock\": -63855119,\n    \"period_threshold\": -95507996,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"tempor et\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore ea commodo minim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"nisi nostrud ut\",\n   \"alias\": \"non\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -47564461,\n   \"integration_data\": {},\n   \"company_name\": \"est do eiusmod\",\n   \"task_details\": {\n    \"type\": 67330745,\n    \"group_list\": [\n     {\n      \"text\": \"ullamco in sit qui\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cupidatat esse laborum est\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 44872475.393592685,\n    \"safe_stock\": -41033589,\n    \"period_threshold\": 31451313,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sunt Excepteur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cu\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Lorem quis consectetur\",\n   \"alias\": \"u\"\n  },\n  {\n   \"company_id\": -18626691,\n   \"integration_data\": {},\n   \"company_name\": \"ea laboris\",\n   \"task_details\": {\n    \"type\": -21877287,\n    \"group_list\": [\n     {\n      \"text\": \"pariatur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ullamco nisi ipsum Excepteur culpa\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 97156471.37409502,\n    \"safe_stock\": 21209535,\n    \"period_threshold\": -24946319,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"mollit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"of\",\n   \"alias\": \"consectetur irure in\"\n  }\n ],\n \"trace_id\": \"magna dolor in consectetur\",\n \"page\": {\n  \"type\": \"occaecat veniam aute\",\n  \"size\": 84416878,\n  \"current\": -77635693,\n  \"has_next\": false,\n  \"item_total\": -39829605,\n  \"next_id\": \"incididu\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "538ded21-9c61-49fb-83b9-d6a5b3e418ec",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "d87dad35-3a28-4ed7-bc92-08701096236e",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2016-01-29T14:46:55.559Z\",\n \"status\": -99018766,\n \"error\": \"amet sit dolor tempor\",\n \"exception\": \"quis in cupidatat\",\n \"message\": \"sed ullamco Lorem incididunt\",\n \"total_time_taken_in_millis\": 13017061,\n \"http_status\": \"201 CREATED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"velit officia \",\n \"page\": {\n  \"type\": \"enim\",\n  \"size\": -96390102,\n  \"current\": -20697280,\n  \"has_next\": false,\n  \"item_total\": 49040029,\n  \"next_id\": \"ut pariatur officia elit aliquip\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "4bfd3432-324d-45d0-ae87-771e8604ea0d",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2016-01-29T14:46:55.559Z\",\n \"status\": -99018766,\n \"error\": \"amet sit dolor tempor\",\n \"exception\": \"quis in cupidatat\",\n \"message\": \"sed ullamco Lorem incididunt\",\n \"total_time_taken_in_millis\": 13017061,\n \"http_status\": \"201 CREATED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"velit officia \",\n \"page\": {\n  \"type\": \"enim\",\n  \"size\": -96390102,\n  \"current\": -20697280,\n  \"has_next\": false,\n  \"item_total\": 49040029,\n  \"next_id\": \"ut pariatur officia elit aliquip\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3d2a551e-a46a-463f-a7aa-e245ac0c4e48",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2016-01-29T14:46:55.559Z\",\n \"status\": -99018766,\n \"error\": \"amet sit dolor tempor\",\n \"exception\": \"quis in cupidatat\",\n \"message\": \"sed ullamco Lorem incididunt\",\n \"total_time_taken_in_millis\": 13017061,\n \"http_status\": \"201 CREATED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"velit officia \",\n \"page\": {\n  \"type\": \"enim\",\n  \"size\": -96390102,\n  \"current\": -20697280,\n  \"has_next\": false,\n  \"item_total\": 49040029,\n  \"next_id\": \"ut pariatur officia elit aliquip\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "b2ffcea4-4af0-4d4b-9eb0-98e5699a03bd",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "428b784a-8f0f-4e3a-93cf-b3e86a4770ad",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1976-11-14T12:58:32.534Z\",\n \"status\": 24207457,\n \"error\": \"sed eu\",\n \"exception\": \"sed amet labore\",\n \"message\": \"culpa exercitation laborum ad\",\n \"total_time_taken_in_millis\": 12212981,\n \"http_status\": \"401 UNAUTHORIZED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"commodo qui\",\n \"page\": {\n  \"type\": \"est velit Duis tempor officia\",\n  \"size\": 94617148,\n  \"current\": -52192988,\n  \"has_next\": false,\n  \"item_total\": -77656477,\n  \"next_id\": \"exercitation ullamco in pariatur\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "20c35823-27dc-4997-a068-65b31fd9ba86",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1976-11-14T12:58:32.534Z\",\n \"status\": 24207457,\n \"error\": \"sed eu\",\n \"exception\": \"sed amet labore\",\n \"message\": \"culpa exercitation laborum ad\",\n \"total_time_taken_in_millis\": 12212981,\n \"http_status\": \"401 UNAUTHORIZED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"commodo qui\",\n \"page\": {\n  \"type\": \"est velit Duis tempor officia\",\n  \"size\": 94617148,\n  \"current\": -52192988,\n  \"has_next\": false,\n  \"item_total\": -77656477,\n  \"next_id\": \"exercitation ullamco in pariatur\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "46f50baa-75c6-4d02-b6dd-a68dcb9f3249",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1976-11-14T12:58:32.534Z\",\n \"status\": 24207457,\n \"error\": \"sed eu\",\n \"exception\": \"sed amet labore\",\n \"message\": \"culpa exercitation laborum ad\",\n \"total_time_taken_in_millis\": 12212981,\n \"http_status\": \"401 UNAUTHORIZED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"commodo qui\",\n \"page\": {\n  \"type\": \"est velit Duis tempor officia\",\n  \"size\": 94617148,\n  \"current\": -52192988,\n  \"has_next\": false,\n  \"item_total\": -77656477,\n  \"next_id\": \"exercitation ullamco in pariatur\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "27f593dc-66d4-4bb8-94ab-c0370ec508fd",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1976-11-14T12:58:32.534Z\",\n \"status\": 24207457,\n \"error\": \"sed eu\",\n \"exception\": \"sed amet labore\",\n \"message\": \"culpa exercitation laborum ad\",\n \"total_time_taken_in_millis\": 12212981,\n \"http_status\": \"401 UNAUTHORIZED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"commodo qui\",\n \"page\": {\n  \"type\": \"est velit Duis tempor officia\",\n  \"size\": 94617148,\n  \"current\": -52192988,\n  \"has_next\": false,\n  \"item_total\": -77656477,\n  \"next_id\": \"exercitation ullamco in pariatur\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "863e0fdc-c9e6-411f-b57e-54bc73b374aa",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1976-11-14T12:58:32.534Z\",\n \"status\": 24207457,\n \"error\": \"sed eu\",\n \"exception\": \"sed amet labore\",\n \"message\": \"culpa exercitation laborum ad\",\n \"total_time_taken_in_millis\": 12212981,\n \"http_status\": \"401 UNAUTHORIZED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"commodo qui\",\n \"page\": {\n  \"type\": \"est velit Duis tempor officia\",\n  \"size\": 94617148,\n  \"current\": -52192988,\n  \"has_next\": false,\n  \"item_total\": -77656477,\n  \"next_id\": \"exercitation ullamco in pariatur\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if(notInIgnoreHeader) {\n          let foundMatch = false;\n          for(let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if(notInIgnoreHeader) {\n          let foundMatch = false;\n          for(let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    \n    // So if there are non-reserved chars (and it's not already all % encoded), just encode them all\n    if (/[^0-9A-Za-z;,/?:@&=+$\\-_.!~*'()#%]/.test(path)) {\n      path = encodeURI(decodeURI(path))\n    }\n\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx0.de"
    }
  ],
  "info": {
    "_postman_id": "a618b338-9cf6-4d9d-9070-055d85ae10d3",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
