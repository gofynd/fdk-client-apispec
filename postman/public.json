{
  "item": [
    {
      "id": "470855b4-110d-4103-ab3e-e5e31569cbc5",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "af8287c6-b85b-438c-a976-9a510f4b734c",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "4e3e70c2-6864-4b14-b5c3-d5c9566d4c10",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "in Excepteur fugiat",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "046d224a-488e-4bad-91f4-0fe74f70159a",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "in Excepteur fugiat",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "26dbb767-d664-4197-ab07-1fc592e9afb3",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "in Excepteur fugiat",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "e66f7068-0b86-4c3f-aac3-fe6cb6c63264",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "0fda8619-c77d-487f-b666-5cfeaed7fa10",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "0f6d55b8-1677-47fb-8c0c-e5116503ec4a",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "d5b4f2ab-fdc1-4c68-9a9d-8393d4b975fb",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "31cbd81e-b592-4ff7-b035-7b8f99f9dcba",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 13919060,\n   \"event_name\": \"nisi sit\",\n   \"event_type\": \"mollit\",\n   \"event_category\": \"tempor esse aliquip laboris sit\",\n   \"version\": \"amet deserunt voluptate ad\",\n   \"display_name\": \"elit\",\n   \"description\": \"incididunt exercitation\",\n   \"created_on\": \"qui\"\n  },\n  {\n   \"id\": 94604687,\n   \"event_name\": \"ut culpa quis nisi\",\n   \"event_type\": \"deserunt Ut in\",\n   \"event_category\": \"ea quis dolore irure exercitation\",\n   \"version\": \"velit ad enim commodo ullamco\",\n   \"display_name\": \"sunt id veniam incididunt\",\n   \"description\": \"nostrud sint exercitation\",\n   \"created_on\": \"Ut ea sint\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "abfaa9a7-09fd-4261-a81e-5067fb02ea99",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "34d9e1e4-6402-4f9b-847d-9f32655cf174",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 11371813,\n   \"event_name\": \"do esse cillum laborum\",\n   \"event_type\": \"esse consectetur\",\n   \"event_category\": \"reprehenderit ut mollit velit\",\n   \"version\": \"est dolor cillum in deserunt\",\n   \"display_name\": \"venia\",\n   \"description\": \"ea velit veniam\",\n   \"created_on\": \"eiusmod sunt in\"\n  },\n  {\n   \"id\": 29638065,\n   \"event_name\": \"deserunt ad aute non\",\n   \"event_type\": \"Excepteur irure in\",\n   \"event_category\": \"Duis dolor\",\n   \"version\": \"magna incididunt deserunt\",\n   \"display_name\": \"reprehenderit\",\n   \"description\": \"ut commodo exercitation\",\n   \"created_on\": \"irure dolor Duis\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "a92337fb-7953-4e79-bfcb-2480d1ca71d6",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "bc06dae3-af68-4987-91cd-0e353235650c",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "c830cbd1-a0bf-4bb5-b141-522fbd80b835",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2010-10-07T13:32:37.565Z\",\n \"status\": -34051336,\n \"error\": \"do magna qui anim non\",\n \"exception\": \"quis Ut\",\n \"message\": \"exercitation f\",\n \"total_time_taken_in_millis\": 84105356,\n \"http_status\": \"406 NOT_ACCEPTABLE\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"enim dolore Ut\",\n   \"description\": \"qui voluptate in Lorem\",\n   \"name\": \"Ut officia sunt nostrud\",\n   \"slug\": \"commodo sed eiusmod aliqua\",\n   \"meta\": [\n    {\n     \"_id\": \"dolor deserunt nulla est\",\n     \"name\": \"non tempor\",\n     \"value\": \"sint velit minim\"\n    },\n    {\n     \"_id\": \"enim\",\n     \"name\": \"dolor eu sint cillum\",\n     \"value\": \"in magna\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"in\",\n    \"integration\": \"est eiusmod esse deserunt\",\n    \"level\": \"est ipsum adipisicing ullamco\",\n    \"uid\": -94558604,\n    \"opted\": false,\n    \"permissions\": [\n     \"do\",\n     \"cupidatat consectetur\"\n    ],\n    \"token\": \"aliqu\",\n    \"name\": \"dolor \",\n    \"stores\": [\n     {\n      \"_id\": \"irure laboris\",\n      \"integration\": \"labore consequat cillum aute\",\n      \"level\": \"dolo\",\n      \"uid\": 85710522,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"pariatur ea\",\n      \"code\": \"eiusmod si\",\n      \"name\": \"incididunt Ut velit\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"Excepteur\",\n      \"integration\": \"dolore Ut sit voluptate\",\n      \"level\": \"incididunt do cillum\",\n      \"uid\": 93716568,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"proident ea dolore\",\n      \"code\": \"sit ex sed aliquip\",\n      \"name\": \"laboris commodo\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"eiusmod ullamco\",\n      \"integration\": \"laborum adipisicing\",\n      \"level\": \"id et aute nulla\",\n      \"uid\": 18872157,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"fugiat quis Ut aliqua\",\n      \"code\": \"ex minim ad sint\",\n      \"name\": \"irure\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"dolor fugiat\",\n      \"integration\": \"Excepteur ex et ad\",\n      \"level\": \"sed nostrud in\",\n      \"uid\": 65214583,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"d\",\n      \"code\": \"tempor Ut pariatur\",\n      \"name\": \"nulla fugiat non amet\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"no\",\n    \"integration\": \"aliqua reprehenderit mollit\",\n    \"level\": \"magna in ea fugiat Excepteur\",\n    \"uid\": -9228959,\n    \"opted\": false,\n    \"permissions\": [\n     \"adipisicing labore dolor\",\n     \"nulla quis ad\"\n    ],\n    \"token\": \"velit consectetur\",\n    \"name\": \"consect\",\n    \"stores\": [\n     {\n      \"_id\": \"ut est\",\n      \"integration\": \"ex consequat reprehenderit sit cupidatat\",\n      \"level\": \"minim reprehenderit aute\",\n      \"uid\": -99726523,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ea reprehenderit qui\",\n      \"code\": \"dolore proident\",\n      \"name\": \"dolore Duis deserunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"consectetur\",\n      \"integration\": \"et voluptate dolor\",\n      \"level\": \"ut mi\",\n      \"uid\": 42249723,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"laborum ipsum sit aliqua\",\n      \"code\": \"sunt dolore\",\n      \"name\": \"Lorem Duis sunt culpa\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"ea Excepteur Duis ex labore\",\n      \"integration\": \"non quis magna dolore mollit\",\n      \"level\": \"dolor ullamco officia eu aliqua\",\n      \"uid\": -81039523,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"quis\",\n      \"code\": \"elit sed incididunt pariatur\",\n      \"name\": \"incididunt est deserun\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"anim mollit voluptate ullamco ipsum\",\n      \"integration\": \"Lorem eu consectetur veniam\",\n      \"level\": \"tempor\",\n      \"uid\": -55476116,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in\",\n      \"code\": \"dolore consectetur\",\n      \"name\": \"ullamco\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"do dolore nostrud\",\n   \"description\": \"cupidatat culpa occaecat\",\n   \"name\": \"incididunt\",\n   \"slug\": \"sint quis ut labo\",\n   \"meta\": [\n    {\n     \"_id\": \"dolor ut\",\n     \"name\": \"dolore elit\",\n     \"value\": \"nulla reprehenderit\"\n    },\n    {\n     \"_id\": \"laboris eu elit nisi commodo\",\n     \"name\": \"Excepteur est ut nisi sint\",\n     \"value\": \"aliquip esse anim\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"nisi deserunt ea voluptate\",\n    \"integration\": \"proide\",\n    \"level\": \"ea commodo ipsum ut aliquip\",\n    \"uid\": 78613309,\n    \"opted\": true,\n    \"permissions\": [\n     \"eiusm\",\n     \"ut Ut\"\n    ],\n    \"token\": \"in\",\n    \"name\": \"dolore magna labore voluptate\",\n    \"stores\": [\n     {\n      \"_id\": \"deserunt magna occaecat dolor\",\n      \"integration\": \"proident ullamco\",\n      \"level\": \"dolore adipisicing est\",\n      \"uid\": -10944926,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sunt\",\n      \"code\": \"aliquip officia non\",\n      \"name\": \"elit D\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"amet magna\",\n      \"integration\": \"voluptate\",\n      \"level\": \"aliquip\",\n      \"uid\": 13974337,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"elit Excepteur id non\",\n      \"code\": \"qui est aliquip labore adipisicing\",\n      \"name\": \"ullamco laborum et ipsum\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"in\",\n      \"integration\": \"labo\",\n      \"level\": \"reprehenderit veniam\",\n      \"uid\": 37553046,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"esse ad \",\n      \"code\": \"cupidatat\",\n      \"name\": \"ex\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"pariatur id reprehenderit\",\n      \"integration\": \"aute sed\",\n      \"level\": \"do commodo dolor Duis cill\",\n      \"uid\": -59206022,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"elit ad pariatur et cupidatat\",\n      \"code\": \"dolore in tempor\",\n      \"name\": \"minim\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"laboris Dui\",\n    \"integration\": \"sed\",\n    \"level\": \"mollit tempor\",\n    \"uid\": -1338508,\n    \"opted\": true,\n    \"permissions\": [\n     \"ex consectet\",\n     \"est deserunt laboris\"\n    ],\n    \"token\": \"dolore cillum\",\n    \"name\": \"Duis ullamco occaecat dolor in\",\n    \"stores\": [\n     {\n      \"_id\": \"sit amet anim velit\",\n      \"integration\": \"ex adipisicing laborum in\",\n      \"level\": \"ullamco pariatur\",\n      \"uid\": 54230766,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"id consectetur\",\n      \"code\": \"sunt\",\n      \"name\": \"dolor inc\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"magna\",\n      \"integration\": \"ut proident do ad\",\n      \"level\": \"fugiat Excepteur occaecat\",\n      \"uid\": 87518971,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"velit dolor aute adipisicing\",\n      \"code\": \"id in aliquip consequat\",\n      \"name\": \"irure amet\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"enim sunt in\",\n      \"integration\": \"deserunt laborum esse\",\n      \"level\": \"eu anim aute Excepteur minim\",\n      \"uid\": 495288,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"nulla\",\n      \"code\": \"exercitation minim consequat proident in\",\n      \"name\": \"in incididunt est in eiusmod\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"sunt commodo aliquip\",\n      \"integration\": \"occaecat fugiat amet nisi\",\n      \"level\": \"in velit\",\n      \"uid\": -44230040,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"officia ex irure occaecat\",\n      \"code\": \"ullamco aute quis dolor\",\n      \"name\": \"esse\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"occaecat et quis reprehenderit qui\",\n \"page\": {\n  \"type\": \"nisi o\",\n  \"size\": -760756,\n  \"current\": -80354163,\n  \"has_next\": true,\n  \"item_total\": -11568953,\n  \"next_id\": \"in sed\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "747069f5-0d0e-45cd-a89c-08985f749831",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2010-10-07T13:32:37.565Z\",\n \"status\": -34051336,\n \"error\": \"do magna qui anim non\",\n \"exception\": \"quis Ut\",\n \"message\": \"exercitation f\",\n \"total_time_taken_in_millis\": 84105356,\n \"http_status\": \"406 NOT_ACCEPTABLE\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"enim dolore Ut\",\n   \"description\": \"qui voluptate in Lorem\",\n   \"name\": \"Ut officia sunt nostrud\",\n   \"slug\": \"commodo sed eiusmod aliqua\",\n   \"meta\": [\n    {\n     \"_id\": \"dolor deserunt nulla est\",\n     \"name\": \"non tempor\",\n     \"value\": \"sint velit minim\"\n    },\n    {\n     \"_id\": \"enim\",\n     \"name\": \"dolor eu sint cillum\",\n     \"value\": \"in magna\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"in\",\n    \"integration\": \"est eiusmod esse deserunt\",\n    \"level\": \"est ipsum adipisicing ullamco\",\n    \"uid\": -94558604,\n    \"opted\": false,\n    \"permissions\": [\n     \"do\",\n     \"cupidatat consectetur\"\n    ],\n    \"token\": \"aliqu\",\n    \"name\": \"dolor \",\n    \"stores\": [\n     {\n      \"_id\": \"irure laboris\",\n      \"integration\": \"labore consequat cillum aute\",\n      \"level\": \"dolo\",\n      \"uid\": 85710522,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"pariatur ea\",\n      \"code\": \"eiusmod si\",\n      \"name\": \"incididunt Ut velit\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"Excepteur\",\n      \"integration\": \"dolore Ut sit voluptate\",\n      \"level\": \"incididunt do cillum\",\n      \"uid\": 93716568,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"proident ea dolore\",\n      \"code\": \"sit ex sed aliquip\",\n      \"name\": \"laboris commodo\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"eiusmod ullamco\",\n      \"integration\": \"laborum adipisicing\",\n      \"level\": \"id et aute nulla\",\n      \"uid\": 18872157,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"fugiat quis Ut aliqua\",\n      \"code\": \"ex minim ad sint\",\n      \"name\": \"irure\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"dolor fugiat\",\n      \"integration\": \"Excepteur ex et ad\",\n      \"level\": \"sed nostrud in\",\n      \"uid\": 65214583,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"d\",\n      \"code\": \"tempor Ut pariatur\",\n      \"name\": \"nulla fugiat non amet\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"no\",\n    \"integration\": \"aliqua reprehenderit mollit\",\n    \"level\": \"magna in ea fugiat Excepteur\",\n    \"uid\": -9228959,\n    \"opted\": false,\n    \"permissions\": [\n     \"adipisicing labore dolor\",\n     \"nulla quis ad\"\n    ],\n    \"token\": \"velit consectetur\",\n    \"name\": \"consect\",\n    \"stores\": [\n     {\n      \"_id\": \"ut est\",\n      \"integration\": \"ex consequat reprehenderit sit cupidatat\",\n      \"level\": \"minim reprehenderit aute\",\n      \"uid\": -99726523,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ea reprehenderit qui\",\n      \"code\": \"dolore proident\",\n      \"name\": \"dolore Duis deserunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"consectetur\",\n      \"integration\": \"et voluptate dolor\",\n      \"level\": \"ut mi\",\n      \"uid\": 42249723,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"laborum ipsum sit aliqua\",\n      \"code\": \"sunt dolore\",\n      \"name\": \"Lorem Duis sunt culpa\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"ea Excepteur Duis ex labore\",\n      \"integration\": \"non quis magna dolore mollit\",\n      \"level\": \"dolor ullamco officia eu aliqua\",\n      \"uid\": -81039523,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"quis\",\n      \"code\": \"elit sed incididunt pariatur\",\n      \"name\": \"incididunt est deserun\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"anim mollit voluptate ullamco ipsum\",\n      \"integration\": \"Lorem eu consectetur veniam\",\n      \"level\": \"tempor\",\n      \"uid\": -55476116,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in\",\n      \"code\": \"dolore consectetur\",\n      \"name\": \"ullamco\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"do dolore nostrud\",\n   \"description\": \"cupidatat culpa occaecat\",\n   \"name\": \"incididunt\",\n   \"slug\": \"sint quis ut labo\",\n   \"meta\": [\n    {\n     \"_id\": \"dolor ut\",\n     \"name\": \"dolore elit\",\n     \"value\": \"nulla reprehenderit\"\n    },\n    {\n     \"_id\": \"laboris eu elit nisi commodo\",\n     \"name\": \"Excepteur est ut nisi sint\",\n     \"value\": \"aliquip esse anim\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"nisi deserunt ea voluptate\",\n    \"integration\": \"proide\",\n    \"level\": \"ea commodo ipsum ut aliquip\",\n    \"uid\": 78613309,\n    \"opted\": true,\n    \"permissions\": [\n     \"eiusm\",\n     \"ut Ut\"\n    ],\n    \"token\": \"in\",\n    \"name\": \"dolore magna labore voluptate\",\n    \"stores\": [\n     {\n      \"_id\": \"deserunt magna occaecat dolor\",\n      \"integration\": \"proident ullamco\",\n      \"level\": \"dolore adipisicing est\",\n      \"uid\": -10944926,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sunt\",\n      \"code\": \"aliquip officia non\",\n      \"name\": \"elit D\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"amet magna\",\n      \"integration\": \"voluptate\",\n      \"level\": \"aliquip\",\n      \"uid\": 13974337,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"elit Excepteur id non\",\n      \"code\": \"qui est aliquip labore adipisicing\",\n      \"name\": \"ullamco laborum et ipsum\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"in\",\n      \"integration\": \"labo\",\n      \"level\": \"reprehenderit veniam\",\n      \"uid\": 37553046,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"esse ad \",\n      \"code\": \"cupidatat\",\n      \"name\": \"ex\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"pariatur id reprehenderit\",\n      \"integration\": \"aute sed\",\n      \"level\": \"do commodo dolor Duis cill\",\n      \"uid\": -59206022,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"elit ad pariatur et cupidatat\",\n      \"code\": \"dolore in tempor\",\n      \"name\": \"minim\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"laboris Dui\",\n    \"integration\": \"sed\",\n    \"level\": \"mollit tempor\",\n    \"uid\": -1338508,\n    \"opted\": true,\n    \"permissions\": [\n     \"ex consectet\",\n     \"est deserunt laboris\"\n    ],\n    \"token\": \"dolore cillum\",\n    \"name\": \"Duis ullamco occaecat dolor in\",\n    \"stores\": [\n     {\n      \"_id\": \"sit amet anim velit\",\n      \"integration\": \"ex adipisicing laborum in\",\n      \"level\": \"ullamco pariatur\",\n      \"uid\": 54230766,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"id consectetur\",\n      \"code\": \"sunt\",\n      \"name\": \"dolor inc\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"magna\",\n      \"integration\": \"ut proident do ad\",\n      \"level\": \"fugiat Excepteur occaecat\",\n      \"uid\": 87518971,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"velit dolor aute adipisicing\",\n      \"code\": \"id in aliquip consequat\",\n      \"name\": \"irure amet\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"enim sunt in\",\n      \"integration\": \"deserunt laborum esse\",\n      \"level\": \"eu anim aute Excepteur minim\",\n      \"uid\": 495288,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"nulla\",\n      \"code\": \"exercitation minim consequat proident in\",\n      \"name\": \"in incididunt est in eiusmod\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"sunt commodo aliquip\",\n      \"integration\": \"occaecat fugiat amet nisi\",\n      \"level\": \"in velit\",\n      \"uid\": -44230040,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"officia ex irure occaecat\",\n      \"code\": \"ullamco aute quis dolor\",\n      \"name\": \"esse\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"occaecat et quis reprehenderit qui\",\n \"page\": {\n  \"type\": \"nisi o\",\n  \"size\": -760756,\n  \"current\": -80354163,\n  \"has_next\": true,\n  \"item_total\": -11568953,\n  \"next_id\": \"in sed\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e1d1c53e-e109-40cd-b2d4-eba7b207c875",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2010-10-07T13:32:37.565Z\",\n \"status\": -34051336,\n \"error\": \"do magna qui anim non\",\n \"exception\": \"quis Ut\",\n \"message\": \"exercitation f\",\n \"total_time_taken_in_millis\": 84105356,\n \"http_status\": \"406 NOT_ACCEPTABLE\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"enim dolore Ut\",\n   \"description\": \"qui voluptate in Lorem\",\n   \"name\": \"Ut officia sunt nostrud\",\n   \"slug\": \"commodo sed eiusmod aliqua\",\n   \"meta\": [\n    {\n     \"_id\": \"dolor deserunt nulla est\",\n     \"name\": \"non tempor\",\n     \"value\": \"sint velit minim\"\n    },\n    {\n     \"_id\": \"enim\",\n     \"name\": \"dolor eu sint cillum\",\n     \"value\": \"in magna\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"in\",\n    \"integration\": \"est eiusmod esse deserunt\",\n    \"level\": \"est ipsum adipisicing ullamco\",\n    \"uid\": -94558604,\n    \"opted\": false,\n    \"permissions\": [\n     \"do\",\n     \"cupidatat consectetur\"\n    ],\n    \"token\": \"aliqu\",\n    \"name\": \"dolor \",\n    \"stores\": [\n     {\n      \"_id\": \"irure laboris\",\n      \"integration\": \"labore consequat cillum aute\",\n      \"level\": \"dolo\",\n      \"uid\": 85710522,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"pariatur ea\",\n      \"code\": \"eiusmod si\",\n      \"name\": \"incididunt Ut velit\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"Excepteur\",\n      \"integration\": \"dolore Ut sit voluptate\",\n      \"level\": \"incididunt do cillum\",\n      \"uid\": 93716568,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"proident ea dolore\",\n      \"code\": \"sit ex sed aliquip\",\n      \"name\": \"laboris commodo\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"eiusmod ullamco\",\n      \"integration\": \"laborum adipisicing\",\n      \"level\": \"id et aute nulla\",\n      \"uid\": 18872157,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"fugiat quis Ut aliqua\",\n      \"code\": \"ex minim ad sint\",\n      \"name\": \"irure\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"dolor fugiat\",\n      \"integration\": \"Excepteur ex et ad\",\n      \"level\": \"sed nostrud in\",\n      \"uid\": 65214583,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"d\",\n      \"code\": \"tempor Ut pariatur\",\n      \"name\": \"nulla fugiat non amet\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"no\",\n    \"integration\": \"aliqua reprehenderit mollit\",\n    \"level\": \"magna in ea fugiat Excepteur\",\n    \"uid\": -9228959,\n    \"opted\": false,\n    \"permissions\": [\n     \"adipisicing labore dolor\",\n     \"nulla quis ad\"\n    ],\n    \"token\": \"velit consectetur\",\n    \"name\": \"consect\",\n    \"stores\": [\n     {\n      \"_id\": \"ut est\",\n      \"integration\": \"ex consequat reprehenderit sit cupidatat\",\n      \"level\": \"minim reprehenderit aute\",\n      \"uid\": -99726523,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ea reprehenderit qui\",\n      \"code\": \"dolore proident\",\n      \"name\": \"dolore Duis deserunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"consectetur\",\n      \"integration\": \"et voluptate dolor\",\n      \"level\": \"ut mi\",\n      \"uid\": 42249723,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"laborum ipsum sit aliqua\",\n      \"code\": \"sunt dolore\",\n      \"name\": \"Lorem Duis sunt culpa\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"ea Excepteur Duis ex labore\",\n      \"integration\": \"non quis magna dolore mollit\",\n      \"level\": \"dolor ullamco officia eu aliqua\",\n      \"uid\": -81039523,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"quis\",\n      \"code\": \"elit sed incididunt pariatur\",\n      \"name\": \"incididunt est deserun\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"anim mollit voluptate ullamco ipsum\",\n      \"integration\": \"Lorem eu consectetur veniam\",\n      \"level\": \"tempor\",\n      \"uid\": -55476116,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in\",\n      \"code\": \"dolore consectetur\",\n      \"name\": \"ullamco\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"do dolore nostrud\",\n   \"description\": \"cupidatat culpa occaecat\",\n   \"name\": \"incididunt\",\n   \"slug\": \"sint quis ut labo\",\n   \"meta\": [\n    {\n     \"_id\": \"dolor ut\",\n     \"name\": \"dolore elit\",\n     \"value\": \"nulla reprehenderit\"\n    },\n    {\n     \"_id\": \"laboris eu elit nisi commodo\",\n     \"name\": \"Excepteur est ut nisi sint\",\n     \"value\": \"aliquip esse anim\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"nisi deserunt ea voluptate\",\n    \"integration\": \"proide\",\n    \"level\": \"ea commodo ipsum ut aliquip\",\n    \"uid\": 78613309,\n    \"opted\": true,\n    \"permissions\": [\n     \"eiusm\",\n     \"ut Ut\"\n    ],\n    \"token\": \"in\",\n    \"name\": \"dolore magna labore voluptate\",\n    \"stores\": [\n     {\n      \"_id\": \"deserunt magna occaecat dolor\",\n      \"integration\": \"proident ullamco\",\n      \"level\": \"dolore adipisicing est\",\n      \"uid\": -10944926,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sunt\",\n      \"code\": \"aliquip officia non\",\n      \"name\": \"elit D\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"amet magna\",\n      \"integration\": \"voluptate\",\n      \"level\": \"aliquip\",\n      \"uid\": 13974337,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"elit Excepteur id non\",\n      \"code\": \"qui est aliquip labore adipisicing\",\n      \"name\": \"ullamco laborum et ipsum\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"in\",\n      \"integration\": \"labo\",\n      \"level\": \"reprehenderit veniam\",\n      \"uid\": 37553046,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"esse ad \",\n      \"code\": \"cupidatat\",\n      \"name\": \"ex\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"pariatur id reprehenderit\",\n      \"integration\": \"aute sed\",\n      \"level\": \"do commodo dolor Duis cill\",\n      \"uid\": -59206022,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"elit ad pariatur et cupidatat\",\n      \"code\": \"dolore in tempor\",\n      \"name\": \"minim\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"laboris Dui\",\n    \"integration\": \"sed\",\n    \"level\": \"mollit tempor\",\n    \"uid\": -1338508,\n    \"opted\": true,\n    \"permissions\": [\n     \"ex consectet\",\n     \"est deserunt laboris\"\n    ],\n    \"token\": \"dolore cillum\",\n    \"name\": \"Duis ullamco occaecat dolor in\",\n    \"stores\": [\n     {\n      \"_id\": \"sit amet anim velit\",\n      \"integration\": \"ex adipisicing laborum in\",\n      \"level\": \"ullamco pariatur\",\n      \"uid\": 54230766,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"id consectetur\",\n      \"code\": \"sunt\",\n      \"name\": \"dolor inc\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"magna\",\n      \"integration\": \"ut proident do ad\",\n      \"level\": \"fugiat Excepteur occaecat\",\n      \"uid\": 87518971,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"velit dolor aute adipisicing\",\n      \"code\": \"id in aliquip consequat\",\n      \"name\": \"irure amet\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"enim sunt in\",\n      \"integration\": \"deserunt laborum esse\",\n      \"level\": \"eu anim aute Excepteur minim\",\n      \"uid\": 495288,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"nulla\",\n      \"code\": \"exercitation minim consequat proident in\",\n      \"name\": \"in incididunt est in eiusmod\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"sunt commodo aliquip\",\n      \"integration\": \"occaecat fugiat amet nisi\",\n      \"level\": \"in velit\",\n      \"uid\": -44230040,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"officia ex irure occaecat\",\n      \"code\": \"ullamco aute quis dolor\",\n      \"name\": \"esse\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"occaecat et quis reprehenderit qui\",\n \"page\": {\n  \"type\": \"nisi o\",\n  \"size\": -760756,\n  \"current\": -80354163,\n  \"has_next\": true,\n  \"item_total\": -11568953,\n  \"next_id\": \"in sed\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "1a590f2b-5a00-40f1-8d24-03a472566004",
          "name": "getApiKey | Get Slingshot Configuration Of  A Company",
          "request": {
            "name": "getApiKey | Get Slingshot Configuration Of  A Company",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "e88fed6b-3556-4e4c-bb9e-6e4f46bd8005",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1994-01-17T18:47:30.289Z\",\n \"status\": 70704758,\n \"error\": \"dolore occaecat id\",\n \"exception\": \"aliqua ex\",\n \"message\": \"do reprehenderit irure dolor\",\n \"total_time_taken_in_millis\": -91776889,\n \"http_status\": \"414 REQUEST_URI_TOO_LONG\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"ea dolor\",\n \"page\": {\n  \"type\": \"velit Lorem laborum\",\n  \"size\": -18205488,\n  \"current\": 54086885,\n  \"has_next\": true,\n  \"item_total\": -26361968,\n  \"next_id\": \"aliquip\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "4f656316-3905-408c-9e7d-25437ff59083",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1994-01-17T18:47:30.289Z\",\n \"status\": 70704758,\n \"error\": \"dolore occaecat id\",\n \"exception\": \"aliqua ex\",\n \"message\": \"do reprehenderit irure dolor\",\n \"total_time_taken_in_millis\": -91776889,\n \"http_status\": \"414 REQUEST_URI_TOO_LONG\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"ea dolor\",\n \"page\": {\n  \"type\": \"velit Lorem laborum\",\n  \"size\": -18205488,\n  \"current\": 54086885,\n  \"has_next\": true,\n  \"item_total\": -26361968,\n  \"next_id\": \"aliquip\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c74d9f73-841a-4334-9de0-692a99ed7fee",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1994-01-17T18:47:30.289Z\",\n \"status\": 70704758,\n \"error\": \"dolore occaecat id\",\n \"exception\": \"aliqua ex\",\n \"message\": \"do reprehenderit irure dolor\",\n \"total_time_taken_in_millis\": -91776889,\n \"http_status\": \"414 REQUEST_URI_TOO_LONG\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"ea dolor\",\n \"page\": {\n  \"type\": \"velit Lorem laborum\",\n  \"size\": -18205488,\n  \"current\": 54086885,\n  \"has_next\": true,\n  \"item_total\": -26361968,\n  \"next_id\": \"aliquip\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "9f046b39-5ea8-4381-8db7-de44e4709824",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "52fa9a77-8648-4b6e-9482-377eb09c0706",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2014-01-19T08:19:47.146Z\",\n \"status\": -51795661,\n \"error\": \"et nisi\",\n \"exception\": \"mollit \",\n \"message\": \"eiusmod\",\n \"total_time_taken_in_millis\": -29550558,\n \"http_status\": \"304 NOT_MODIFIED\",\n \"items\": {\n  \"company_id\": -30690319,\n  \"integration_data\": {},\n  \"company_name\": \"sed eiu\",\n  \"task_details\": {\n   \"type\": 77335091,\n   \"group_list\": [\n    {\n     \"text\": \"in sint\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"i\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -33548909.42667401,\n   \"safe_stock\": 10122685,\n   \"period_threshold\": -36838032,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"culpa\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"adipisicing ullamco ipsum id\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"nostrud ex occaecat\",\n  \"alias\": \"esse aliqua\"\n },\n \"payload\": {\n  \"company_id\": 5152779,\n  \"integration_data\": {},\n  \"company_name\": \"ut adipisicing\",\n  \"task_details\": {\n   \"type\": 77401309,\n   \"group_list\": [\n    {\n     \"text\": \"id velit proident fugiat culpa\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"elit aute Excepteur e\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 19943.39449992776,\n   \"safe_stock\": 8919526,\n   \"period_threshold\": -27059270,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"do commodo sunt\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"Ut adipisicing Duis proident\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"e\",\n  \"alias\": \"deserunt laborum laboris ea\"\n },\n \"trace_id\": \"in occaec\",\n \"page\": {\n  \"type\": \"nostrud ut\",\n  \"size\": 16176724,\n  \"current\": -77632010,\n  \"has_next\": false,\n  \"item_total\": -13695548,\n  \"next_id\": \"sunt cupidatat\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "6727eb7d-1419-4eca-a51f-addd89ea438e",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2014-01-19T08:19:47.146Z\",\n \"status\": -51795661,\n \"error\": \"et nisi\",\n \"exception\": \"mollit \",\n \"message\": \"eiusmod\",\n \"total_time_taken_in_millis\": -29550558,\n \"http_status\": \"304 NOT_MODIFIED\",\n \"items\": {\n  \"company_id\": -30690319,\n  \"integration_data\": {},\n  \"company_name\": \"sed eiu\",\n  \"task_details\": {\n   \"type\": 77335091,\n   \"group_list\": [\n    {\n     \"text\": \"in sint\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"i\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -33548909.42667401,\n   \"safe_stock\": 10122685,\n   \"period_threshold\": -36838032,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"culpa\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"adipisicing ullamco ipsum id\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"nostrud ex occaecat\",\n  \"alias\": \"esse aliqua\"\n },\n \"payload\": {\n  \"company_id\": 5152779,\n  \"integration_data\": {},\n  \"company_name\": \"ut adipisicing\",\n  \"task_details\": {\n   \"type\": 77401309,\n   \"group_list\": [\n    {\n     \"text\": \"id velit proident fugiat culpa\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"elit aute Excepteur e\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 19943.39449992776,\n   \"safe_stock\": 8919526,\n   \"period_threshold\": -27059270,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"do commodo sunt\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"Ut adipisicing Duis proident\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"e\",\n  \"alias\": \"deserunt laborum laboris ea\"\n },\n \"trace_id\": \"in occaec\",\n \"page\": {\n  \"type\": \"nostrud ut\",\n  \"size\": 16176724,\n  \"current\": -77632010,\n  \"has_next\": false,\n  \"item_total\": -13695548,\n  \"next_id\": \"sunt cupidatat\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "79cb8d8f-ae57-4016-ac85-7495b6743689",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2014-01-19T08:19:47.146Z\",\n \"status\": -51795661,\n \"error\": \"et nisi\",\n \"exception\": \"mollit \",\n \"message\": \"eiusmod\",\n \"total_time_taken_in_millis\": -29550558,\n \"http_status\": \"304 NOT_MODIFIED\",\n \"items\": {\n  \"company_id\": -30690319,\n  \"integration_data\": {},\n  \"company_name\": \"sed eiu\",\n  \"task_details\": {\n   \"type\": 77335091,\n   \"group_list\": [\n    {\n     \"text\": \"in sint\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"i\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -33548909.42667401,\n   \"safe_stock\": 10122685,\n   \"period_threshold\": -36838032,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"culpa\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"adipisicing ullamco ipsum id\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"nostrud ex occaecat\",\n  \"alias\": \"esse aliqua\"\n },\n \"payload\": {\n  \"company_id\": 5152779,\n  \"integration_data\": {},\n  \"company_name\": \"ut adipisicing\",\n  \"task_details\": {\n   \"type\": 77401309,\n   \"group_list\": [\n    {\n     \"text\": \"id velit proident fugiat culpa\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"elit aute Excepteur e\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 19943.39449992776,\n   \"safe_stock\": 8919526,\n   \"period_threshold\": -27059270,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"do commodo sunt\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"Ut adipisicing Duis proident\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"e\",\n  \"alias\": \"deserunt laborum laboris ea\"\n },\n \"trace_id\": \"in occaec\",\n \"page\": {\n  \"type\": \"nostrud ut\",\n  \"size\": 16176724,\n  \"current\": -77632010,\n  \"has_next\": false,\n  \"item_total\": -13695548,\n  \"next_id\": \"sunt cupidatat\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "138ec745-9ffd-486b-a2fb-baa63e9443fc",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "c0759e2f-31b1-4a06-a02b-2664d64e963f",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1942-07-15T12:47:43.560Z\",\n \"status\": 59763079,\n \"error\": \"tempor reprehenderit eu\",\n \"exception\": \"elit et occaecat\",\n \"message\": \"qui officia\",\n \"total_time_taken_in_millis\": 60702103,\n \"http_status\": \"405 METHOD_NOT_ALLOWED\",\n \"items\": [\n  {\n   \"company_id\": 7449150,\n   \"integration_data\": {},\n   \"company_name\": \"cil\",\n   \"task_details\": {\n    \"type\": -3144619,\n    \"group_list\": [\n     {\n      \"text\": \"ad ut deserunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 71579823.68909326,\n    \"safe_stock\": -60997237,\n    \"period_threshold\": -79525029,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"nostrud ullamco\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"enim quis ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Excepteur reprehenderit Lor\",\n   \"alias\": \"in ex Lorem reprehenderit\"\n  },\n  {\n   \"company_id\": -70007469,\n   \"integration_data\": {},\n   \"company_name\": \"esse dolor\",\n   \"task_details\": {\n    \"type\": -21102083,\n    \"group_list\": [\n     {\n      \"text\": \"cillum consequat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ad minim in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 81730885.06236875,\n    \"safe_stock\": -9863349,\n    \"period_threshold\": -75293821,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"velit sunt ad occaecat eu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laboris occaecat nisi reprehenderit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"nostrud in magna culpa\",\n   \"alias\": \"consequat\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -18183593,\n   \"integration_data\": {},\n   \"company_name\": \"commodo e\",\n   \"task_details\": {\n    \"type\": 13595434,\n    \"group_list\": [\n     {\n      \"text\": \"nisi consequat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"amet velit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 58576723.077188164,\n    \"safe_stock\": -85090722,\n    \"period_threshold\": -29580594,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"qui laborum tempor ex dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"mollit laborum sint dolore sit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"proident minim Lorem\",\n   \"alias\": \"elit laboris ullamco nisi\"\n  },\n  {\n   \"company_id\": 88725967,\n   \"integration_data\": {},\n   \"company_name\": \"consequat mollit reprehenderit\",\n   \"task_details\": {\n    \"type\": -94922253,\n    \"group_list\": [\n     {\n      \"text\": \"magna consequat sed fugiat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"est velit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -22143066.596574366,\n    \"safe_stock\": -19650301,\n    \"period_threshold\": 59406820,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolore Lorem cupidatat ex anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"nostrud ut laboris\",\n   \"alias\": \"nisi\"\n  }\n ],\n \"trace_id\": \"reprehenderit do enim ad\",\n \"page\": {\n  \"type\": \"sunt consequat\",\n  \"size\": -81084897,\n  \"current\": -79043197,\n  \"has_next\": false,\n  \"item_total\": 48861429,\n  \"next_id\": \"qui dolore eiusmod pariatur do\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "cd9b0a7c-829b-41db-9e83-d0dde8522e8b",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2003-07-28T11:08:16.358Z\",\n \"status\": -19560218,\n \"error\": \"officia culpa ipsum\",\n \"exception\": \"Ut sunt\",\n \"message\": \"eiusmo\",\n \"total_time_taken_in_millis\": -92732925,\n \"http_status\": \"428 PRECONDITION_REQUIRED\",\n \"items\": [\n  {\n   \"company_id\": 23957753,\n   \"integration_data\": {},\n   \"company_name\": \"reprehenderit enim sunt\",\n   \"task_details\": {\n    \"type\": 51634707,\n    \"group_list\": [\n     {\n      \"text\": \"nisi dolore ex\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laborum sint velit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -59091363.515358396,\n    \"safe_stock\": -60094588,\n    \"period_threshold\": -53570631,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"esse ea in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"quis ipsum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Lorem ex Ut nisi elit\",\n   \"alias\": \"dolore\"\n  },\n  {\n   \"company_id\": -18427558,\n   \"integration_data\": {},\n   \"company_name\": \"cillum fugiat Lorem\",\n   \"task_details\": {\n    \"type\": 91273293,\n    \"group_list\": [\n     {\n      \"text\": \"ipsum ullamco cupidatat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"incididunt occaecat ut aliquip\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 42833041.707695246,\n    \"safe_stock\": 16676047,\n    \"period_threshold\": -20676620,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"Lorem al\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut ipsum amet\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"cillum do\",\n   \"alias\": \"ex cillum amet id ad\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 69387875,\n   \"integration_data\": {},\n   \"company_name\": \"ullamco ut sunt\",\n   \"task_details\": {\n    \"type\": -51377934,\n    \"group_list\": [\n     {\n      \"text\": \"in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Excepteur Ut occaecat ut sint\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 91206030.00151211,\n    \"safe_stock\": -43406954,\n    \"period_threshold\": -73943112,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolor aliqua\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cillum in sit do\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"proident mollit consequat enim\",\n   \"alias\": \"est dolor e\"\n  },\n  {\n   \"company_id\": -99121724,\n   \"integration_data\": {},\n   \"company_name\": \"nulla elit\",\n   \"task_details\": {\n    \"type\": 20944759,\n    \"group_list\": [\n     {\n      \"text\": \"ad sit aliqua culpa aliquip\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"commodo tempor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -89773498.19194554,\n    \"safe_stock\": -51384176,\n    \"period_threshold\": -79065547,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"quis ex\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor su\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"cupidatat proident adipisicing\",\n   \"alias\": \"magna\"\n  }\n ],\n \"trace_id\": \"voluptate cupidatat\",\n \"page\": {\n  \"type\": \"irure id consectetur non\",\n  \"size\": 91578076,\n  \"current\": 68722061,\n  \"has_next\": false,\n  \"item_total\": 97996778,\n  \"next_id\": \"officia labore dolor ut\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b8acb419-f582-4d9d-bc97-809a31ca2399",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2003-07-28T11:08:16.358Z\",\n \"status\": -19560218,\n \"error\": \"officia culpa ipsum\",\n \"exception\": \"Ut sunt\",\n \"message\": \"eiusmo\",\n \"total_time_taken_in_millis\": -92732925,\n \"http_status\": \"428 PRECONDITION_REQUIRED\",\n \"items\": [\n  {\n   \"company_id\": 23957753,\n   \"integration_data\": {},\n   \"company_name\": \"reprehenderit enim sunt\",\n   \"task_details\": {\n    \"type\": 51634707,\n    \"group_list\": [\n     {\n      \"text\": \"nisi dolore ex\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laborum sint velit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -59091363.515358396,\n    \"safe_stock\": -60094588,\n    \"period_threshold\": -53570631,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"esse ea in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"quis ipsum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Lorem ex Ut nisi elit\",\n   \"alias\": \"dolore\"\n  },\n  {\n   \"company_id\": -18427558,\n   \"integration_data\": {},\n   \"company_name\": \"cillum fugiat Lorem\",\n   \"task_details\": {\n    \"type\": 91273293,\n    \"group_list\": [\n     {\n      \"text\": \"ipsum ullamco cupidatat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"incididunt occaecat ut aliquip\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 42833041.707695246,\n    \"safe_stock\": 16676047,\n    \"period_threshold\": -20676620,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"Lorem al\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut ipsum amet\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"cillum do\",\n   \"alias\": \"ex cillum amet id ad\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 69387875,\n   \"integration_data\": {},\n   \"company_name\": \"ullamco ut sunt\",\n   \"task_details\": {\n    \"type\": -51377934,\n    \"group_list\": [\n     {\n      \"text\": \"in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Excepteur Ut occaecat ut sint\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 91206030.00151211,\n    \"safe_stock\": -43406954,\n    \"period_threshold\": -73943112,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolor aliqua\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cillum in sit do\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"proident mollit consequat enim\",\n   \"alias\": \"est dolor e\"\n  },\n  {\n   \"company_id\": -99121724,\n   \"integration_data\": {},\n   \"company_name\": \"nulla elit\",\n   \"task_details\": {\n    \"type\": 20944759,\n    \"group_list\": [\n     {\n      \"text\": \"ad sit aliqua culpa aliquip\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"commodo tempor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -89773498.19194554,\n    \"safe_stock\": -51384176,\n    \"period_threshold\": -79065547,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"quis ex\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor su\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"cupidatat proident adipisicing\",\n   \"alias\": \"magna\"\n  }\n ],\n \"trace_id\": \"voluptate cupidatat\",\n \"page\": {\n  \"type\": \"irure id consectetur non\",\n  \"size\": 91578076,\n  \"current\": 68722061,\n  \"has_next\": false,\n  \"item_total\": 97996778,\n  \"next_id\": \"officia labore dolor ut\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "d4514088-df9d-4083-bc06-d3faa3ccf144",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "290c5b8f-bbe5-475e-8581-9c07efea2304",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1994-01-17T18:47:30.289Z\",\n \"status\": 70704758,\n \"error\": \"dolore occaecat id\",\n \"exception\": \"aliqua ex\",\n \"message\": \"do reprehenderit irure dolor\",\n \"total_time_taken_in_millis\": -91776889,\n \"http_status\": \"414 REQUEST_URI_TOO_LONG\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"ea dolor\",\n \"page\": {\n  \"type\": \"velit Lorem laborum\",\n  \"size\": -18205488,\n  \"current\": 54086885,\n  \"has_next\": true,\n  \"item_total\": -26361968,\n  \"next_id\": \"aliquip\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "03c98d2f-e502-4851-b15d-0bbbed882f19",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1994-01-17T18:47:30.289Z\",\n \"status\": 70704758,\n \"error\": \"dolore occaecat id\",\n \"exception\": \"aliqua ex\",\n \"message\": \"do reprehenderit irure dolor\",\n \"total_time_taken_in_millis\": -91776889,\n \"http_status\": \"414 REQUEST_URI_TOO_LONG\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"ea dolor\",\n \"page\": {\n  \"type\": \"velit Lorem laborum\",\n  \"size\": -18205488,\n  \"current\": 54086885,\n  \"has_next\": true,\n  \"item_total\": -26361968,\n  \"next_id\": \"aliquip\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d1a9148c-ce08-4109-b82c-9ef2f4c3bc5b",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1994-01-17T18:47:30.289Z\",\n \"status\": 70704758,\n \"error\": \"dolore occaecat id\",\n \"exception\": \"aliqua ex\",\n \"message\": \"do reprehenderit irure dolor\",\n \"total_time_taken_in_millis\": -91776889,\n \"http_status\": \"414 REQUEST_URI_TOO_LONG\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"ea dolor\",\n \"page\": {\n  \"type\": \"velit Lorem laborum\",\n  \"size\": -18205488,\n  \"current\": 54086885,\n  \"has_next\": true,\n  \"item_total\": -26361968,\n  \"next_id\": \"aliquip\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "8ee7f237-70fa-4d7c-8e3f-92c872e38118",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "80e001e6-05b7-49b9-8e78-319f0fe651bf",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1996-03-03T17:21:55.063Z\",\n \"status\": -8477949,\n \"error\": \"eiusmod aute\",\n \"exception\": \"pariatur irure\",\n \"message\": \"reprehenderit tem\",\n \"total_time_taken_in_millis\": 66550088,\n \"http_status\": \"431 REQUEST_HEADER_FIELDS_TOO_LARGE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"in id\",\n \"page\": {\n  \"type\": \"commodo in exercitation\",\n  \"size\": 2395416,\n  \"current\": 410546,\n  \"has_next\": true,\n  \"item_total\": -22463393,\n  \"next_id\": \"anim eiusmod dolore mollit\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d4108896-3a98-4f11-b156-966eebf17f44",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1996-03-03T17:21:55.063Z\",\n \"status\": -8477949,\n \"error\": \"eiusmod aute\",\n \"exception\": \"pariatur irure\",\n \"message\": \"reprehenderit tem\",\n \"total_time_taken_in_millis\": 66550088,\n \"http_status\": \"431 REQUEST_HEADER_FIELDS_TOO_LARGE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"in id\",\n \"page\": {\n  \"type\": \"commodo in exercitation\",\n  \"size\": 2395416,\n  \"current\": 410546,\n  \"has_next\": true,\n  \"item_total\": -22463393,\n  \"next_id\": \"anim eiusmod dolore mollit\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "08dd0a12-a5ab-4dd5-9c55-f3f609504a2a",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1996-03-03T17:21:55.063Z\",\n \"status\": -8477949,\n \"error\": \"eiusmod aute\",\n \"exception\": \"pariatur irure\",\n \"message\": \"reprehenderit tem\",\n \"total_time_taken_in_millis\": 66550088,\n \"http_status\": \"431 REQUEST_HEADER_FIELDS_TOO_LARGE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"in id\",\n \"page\": {\n  \"type\": \"commodo in exercitation\",\n  \"size\": 2395416,\n  \"current\": 410546,\n  \"has_next\": true,\n  \"item_total\": -22463393,\n  \"next_id\": \"anim eiusmod dolore mollit\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b119b13a-526e-4ece-885c-641cc57b1968",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1996-03-03T17:21:55.063Z\",\n \"status\": -8477949,\n \"error\": \"eiusmod aute\",\n \"exception\": \"pariatur irure\",\n \"message\": \"reprehenderit tem\",\n \"total_time_taken_in_millis\": 66550088,\n \"http_status\": \"431 REQUEST_HEADER_FIELDS_TOO_LARGE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"in id\",\n \"page\": {\n  \"type\": \"commodo in exercitation\",\n  \"size\": 2395416,\n  \"current\": 410546,\n  \"has_next\": true,\n  \"item_total\": -22463393,\n  \"next_id\": \"anim eiusmod dolore mollit\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "12eaa71d-ff2d-4cd6-9838-f4f030908a72",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1996-03-03T17:21:55.063Z\",\n \"status\": -8477949,\n \"error\": \"eiusmod aute\",\n \"exception\": \"pariatur irure\",\n \"message\": \"reprehenderit tem\",\n \"total_time_taken_in_millis\": 66550088,\n \"http_status\": \"431 REQUEST_HEADER_FIELDS_TOO_LARGE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"in id\",\n \"page\": {\n  \"type\": \"commodo in exercitation\",\n  \"size\": 2395416,\n  \"current\": 410546,\n  \"has_next\": true,\n  \"item_total\": -22463393,\n  \"next_id\": \"anim eiusmod dolore mollit\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if(notInIgnoreHeader) {\n          let foundMatch = false;\n          for(let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if(notInIgnoreHeader) {\n          let foundMatch = false;\n          for(let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    \n    // So if there are non-reserved chars (and it's not already all % encoded), just encode them all\n    if (/[^0-9A-Za-z;,/?:@&=+$\\-_.!~*'()#%]/.test(path)) {\n      path = encodeURI(decodeURI(path))\n    }\n\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx1.de"
    }
  ],
  "info": {
    "_postman_id": "00ea35f9-6082-4ead-b5e1-93288bdc6d18",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
