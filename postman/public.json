{
  "item": [
    {
      "id": "00386cfc-9f48-40e9-aa70-e28b9015a6d1",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "605571d3-b997-4fad-84bf-ed3016ef1276",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "7e174cf1-9bce-4d7f-9508-fe0ef8cbe0e7",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "culpa Lorem",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "62a2861a-74ee-408b-a34e-6314d8752bca",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "culpa Lorem",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"Invalid application domain or id.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "786a35b4-708a-4196-932d-2c9ccfee676e",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "culpa Lorem",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "812974b1-3852-4002-ad85-59f5210d5a9e",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "69d449c4-88f3-41c0-ae58-49fdf8c8c3f3",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "2fa6c6ce-a1ad-4fe4-ab45-9bcf91118192",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "5754bcde-f045-491d-98a7-8c764e1e515b",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "8c1d6191-00fe-4272-8f96-7b8e10df02ce",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -22442822,\n   \"event_name\": \"amet\",\n   \"event_type\": \"tempor minim Lorem\",\n   \"event_category\": \"fugiat id aliqua irure \",\n   \"version\": \"ullamco cillum\",\n   \"display_name\": \"pari\",\n   \"description\": \"tempor sit exercitation\",\n   \"created_on\": \"cupidatat dolor culpa\"\n  },\n  {\n   \"id\": 47646411,\n   \"event_name\": \"sint fugiat\",\n   \"event_type\": \"magna nisi\",\n   \"event_category\": \"et tempor veli\",\n   \"version\": \"Excepteur occaecat\",\n   \"display_name\": \"do commodo\",\n   \"description\": \"consectetur nisi\",\n   \"created_on\": \"Duis nulla anim\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "6da6f63e-cb7b-4e70-9fac-886468382eef",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "af37d9a1-fde8-45e5-b1e2-2d9f5df08135",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -10727389,\n   \"event_name\": \"dolor sed elit qui\",\n   \"event_type\": \"cupidatat\",\n   \"event_category\": \"et\",\n   \"version\": \"cillum laboris\",\n   \"display_name\": \"pariatur reprehenderit laborum\",\n   \"description\": \"commodo\",\n   \"created_on\": \"est ullamco dolore aliqua\"\n  },\n  {\n   \"id\": 50424234,\n   \"event_name\": \"Ut in\",\n   \"event_type\": \"adipisicing irure consequat in magna\",\n   \"event_category\": \"Duis cupidata\",\n   \"version\": \"incididunt id\",\n   \"display_name\": \"nostrud ipsum incididunt cillum voluptate\",\n   \"description\": \"minim enim Duis dolore\",\n   \"created_on\": \"cillum elit culpa\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "8d99fcdb-3f5a-4b26-99bf-5361adcb078e",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "3c7d21bd-8a5b-4520-88c8-d34ea6ac8a54",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "90ad9657-bad2-4864-aa9f-c7a270935f0c",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1964-03-10T06:11:55.020Z\",\n \"status\": 58629377,\n \"error\": \"reprehenderit ut sint laborum\",\n \"exception\": \"nulla proident consequat anim incididunt\",\n \"message\": \"sint magna anim reprehenderit\",\n \"total_time_taken_in_millis\": 78676728,\n \"http_status\": \"201 CREATED\",\n \"items\": [\n  {\n   \"company_id\": 64334529,\n   \"integration_data\": {},\n   \"company_name\": \"ea Ut\",\n   \"task_details\": {\n    \"type\": 11258587,\n    \"group_list\": [\n     {\n      \"text\": \"eiusmod off\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in et qui commodo fu\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 19509728.662203863,\n    \"safe_stock\": -17838044,\n    \"period_threshold\": -72276405,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"adipisicing non eiusmod consequat enim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"reprehenderit aute laboris ipsum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"veniam in\",\n   \"alias\": \"amet dolor culpa Duis\"\n  },\n  {\n   \"company_id\": -56853907,\n   \"integration_data\": {},\n   \"company_name\": \"ipsum labore eiusmod\",\n   \"task_details\": {\n    \"type\": 66664201,\n    \"group_list\": [\n     {\n      \"text\": \"est officia\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"fugiat labore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 96403288.48676956,\n    \"safe_stock\": -53934739,\n    \"period_threshold\": 81145018,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sint\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"exercitation enim pariatur in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"anim id ipsum ex\",\n   \"alias\": \"occaecat tempor laboris nisi\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 37495079,\n   \"integration_data\": {},\n   \"company_name\": \"laborum dolore\",\n   \"task_details\": {\n    \"type\": -92328311,\n    \"group_list\": [\n     {\n      \"text\": \"eiusmod\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"mollit deserunt eiusmo\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -95468570.73436277,\n    \"safe_stock\": -83641582,\n    \"period_threshold\": -81330573,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"adipisicing magna\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"deserunt culpa non\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"dolor voluptate ex pariatur officia\",\n   \"alias\": \"ad ea in ullamco\"\n  },\n  {\n   \"company_id\": 86436519,\n   \"integration_data\": {},\n   \"company_name\": \"anim incididunt e\",\n   \"task_details\": {\n    \"type\": 97441300,\n    \"group_list\": [\n     {\n      \"text\": \"sunt cupidatat ea nostrud\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore do\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -71822565.2925518,\n    \"safe_stock\": -21976016,\n    \"period_threshold\": 65793983,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ut in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ullamco cupidatat sed esse\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"commodo fugiat incididunt adipisicing in\",\n   \"alias\": \"aute dolor\"\n  }\n ],\n \"trace_id\": \"anim\",\n \"page\": {\n  \"type\": \"est dolor Ut sit anim\",\n  \"size\": -61942650,\n  \"current\": 79925991,\n  \"has_next\": false,\n  \"item_total\": 4836252,\n  \"next_id\": \"do\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f18336b5-3d28-4ba7-8f92-814a78569995",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1988-09-09T01:37:15.805Z\",\n \"status\": 63718757,\n \"error\": \"Lorem officia proident\",\n \"exception\": \"in dolore dolor id\",\n \"message\": \"dolor cillum voluptate dolore\",\n \"total_time_taken_in_millis\": -14496421,\n \"http_status\": \"207 MULTI_STATUS\",\n \"items\": [\n  {\n   \"company_id\": 30445725,\n   \"integration_data\": {},\n   \"company_name\": \"ut Excepteur est\",\n   \"task_details\": {\n    \"type\": -93499213,\n    \"group_list\": [\n     {\n      \"text\": \"ut quis nisi\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"adipisicing nisi eu magna\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 35742384.84412637,\n    \"safe_stock\": -75429531,\n    \"period_threshold\": 34937616,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"quis sunt ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"officia sit ut fugiat laborum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"labore ullamco aliquip\",\n   \"alias\": \"nostrud cons\"\n  },\n  {\n   \"company_id\": 50999739,\n   \"integration_data\": {},\n   \"company_name\": \"aliqua\",\n   \"task_details\": {\n    \"type\": 25303107,\n    \"group_list\": [\n     {\n      \"text\": \"officia ipsum consequat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"officia Duis labore ea fugiat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -80587927.99587469,\n    \"safe_stock\": -61888991,\n    \"period_threshold\": 72952906,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"anim occaecat in mollit enim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"exercitation Duis mollit dolor ullamco\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"dolore tempor\",\n   \"alias\": \"sit aliqua Excepteur sint consectetur\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 27705729,\n   \"integration_data\": {},\n   \"company_name\": \"commodo aliqua\",\n   \"task_details\": {\n    \"type\": 88157156,\n    \"group_list\": [\n     {\n      \"text\": \"Ut in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"occaecat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -45143289.24733984,\n    \"safe_stock\": -60755359,\n    \"period_threshold\": -19887200,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"qui aliquip amet\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliquip culpa ipsum ut aliqua\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"nulla\",\n   \"alias\": \"ut mollit eu culpa\"\n  },\n  {\n   \"company_id\": 49391016,\n   \"integration_data\": {},\n   \"company_name\": \"irure dolore cupidatat\",\n   \"task_details\": {\n    \"type\": -45680712,\n    \"group_list\": [\n     {\n      \"text\": \"ut ipsum aliqua nulla\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore nulla do mollit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -77392035.58623941,\n    \"safe_stock\": 69148084,\n    \"period_threshold\": -76503661,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"exercitation laborum aliquip commodo\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"incididunt mollit consequat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"cupidatat commodo labore ut officia\",\n   \"alias\": \"elit dolor quis\"\n  }\n ],\n \"trace_id\": \"magna dolor cupidatat irure\",\n \"page\": {\n  \"type\": \"mollit\",\n  \"size\": -38223154,\n  \"current\": 6131772,\n  \"has_next\": true,\n  \"item_total\": 96918100,\n  \"next_id\": \"et Ut labore officia\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5a177f71-33ff-414e-94be-8e3cfc58de4c",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1988-09-09T01:37:15.805Z\",\n \"status\": 63718757,\n \"error\": \"Lorem officia proident\",\n \"exception\": \"in dolore dolor id\",\n \"message\": \"dolor cillum voluptate dolore\",\n \"total_time_taken_in_millis\": -14496421,\n \"http_status\": \"207 MULTI_STATUS\",\n \"items\": [\n  {\n   \"company_id\": 30445725,\n   \"integration_data\": {},\n   \"company_name\": \"ut Excepteur est\",\n   \"task_details\": {\n    \"type\": -93499213,\n    \"group_list\": [\n     {\n      \"text\": \"ut quis nisi\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"adipisicing nisi eu magna\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 35742384.84412637,\n    \"safe_stock\": -75429531,\n    \"period_threshold\": 34937616,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"quis sunt ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"officia sit ut fugiat laborum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"labore ullamco aliquip\",\n   \"alias\": \"nostrud cons\"\n  },\n  {\n   \"company_id\": 50999739,\n   \"integration_data\": {},\n   \"company_name\": \"aliqua\",\n   \"task_details\": {\n    \"type\": 25303107,\n    \"group_list\": [\n     {\n      \"text\": \"officia ipsum consequat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"officia Duis labore ea fugiat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -80587927.99587469,\n    \"safe_stock\": -61888991,\n    \"period_threshold\": 72952906,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"anim occaecat in mollit enim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"exercitation Duis mollit dolor ullamco\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"dolore tempor\",\n   \"alias\": \"sit aliqua Excepteur sint consectetur\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 27705729,\n   \"integration_data\": {},\n   \"company_name\": \"commodo aliqua\",\n   \"task_details\": {\n    \"type\": 88157156,\n    \"group_list\": [\n     {\n      \"text\": \"Ut in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"occaecat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -45143289.24733984,\n    \"safe_stock\": -60755359,\n    \"period_threshold\": -19887200,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"qui aliquip amet\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliquip culpa ipsum ut aliqua\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"nulla\",\n   \"alias\": \"ut mollit eu culpa\"\n  },\n  {\n   \"company_id\": 49391016,\n   \"integration_data\": {},\n   \"company_name\": \"irure dolore cupidatat\",\n   \"task_details\": {\n    \"type\": -45680712,\n    \"group_list\": [\n     {\n      \"text\": \"ut ipsum aliqua nulla\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore nulla do mollit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -77392035.58623941,\n    \"safe_stock\": 69148084,\n    \"period_threshold\": -76503661,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"exercitation laborum aliquip commodo\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"incididunt mollit consequat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"cupidatat commodo labore ut officia\",\n   \"alias\": \"elit dolor quis\"\n  }\n ],\n \"trace_id\": \"magna dolor cupidatat irure\",\n \"page\": {\n  \"type\": \"mollit\",\n  \"size\": -38223154,\n  \"current\": 6131772,\n  \"has_next\": true,\n  \"item_total\": 96918100,\n  \"next_id\": \"et Ut labore officia\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "bc4bd1a6-66d9-42ac-bd24-aac386c20427",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "d49cc257-a2b6-4dd7-9800-1c1409b3e200",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1976-07-29T15:36:08.982Z\",\n \"status\": 77814869,\n \"error\": \"ullamco Duis\",\n \"exception\": \"commodo dolor non dolore Ut\",\n \"message\": \"sit proident\",\n \"total_time_taken_in_millis\": 23958689,\n \"http_status\": \"201 CREATED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"pariatur in reprehenderit culpa in\",\n \"page\": {\n  \"type\": \"sed\",\n  \"size\": 6768406,\n  \"current\": -89091100,\n  \"has_next\": true,\n  \"item_total\": 55919447,\n  \"next_id\": \"quis pariatur\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b07d967e-1280-4596-8101-51d6247af063",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1976-07-29T15:36:08.982Z\",\n \"status\": 77814869,\n \"error\": \"ullamco Duis\",\n \"exception\": \"commodo dolor non dolore Ut\",\n \"message\": \"sit proident\",\n \"total_time_taken_in_millis\": 23958689,\n \"http_status\": \"201 CREATED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"pariatur in reprehenderit culpa in\",\n \"page\": {\n  \"type\": \"sed\",\n  \"size\": 6768406,\n  \"current\": -89091100,\n  \"has_next\": true,\n  \"item_total\": 55919447,\n  \"next_id\": \"quis pariatur\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "68473514-beaf-4585-96be-5faa35b59a09",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1976-07-29T15:36:08.982Z\",\n \"status\": 77814869,\n \"error\": \"ullamco Duis\",\n \"exception\": \"commodo dolor non dolore Ut\",\n \"message\": \"sit proident\",\n \"total_time_taken_in_millis\": 23958689,\n \"http_status\": \"201 CREATED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"pariatur in reprehenderit culpa in\",\n \"page\": {\n  \"type\": \"sed\",\n  \"size\": 6768406,\n  \"current\": -89091100,\n  \"has_next\": true,\n  \"item_total\": 55919447,\n  \"next_id\": \"quis pariatur\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "d6d705be-746f-4356-becb-0f6993850565",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "3401d773-259d-4a1f-8c89-7b9b5f37ea3f",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1950-12-16T13:29:55.965Z\",\n \"status\": -84963665,\n \"error\": \"ut\",\n \"exception\": \"nostrud Duis laborum\",\n \"message\": \"do enim deserunt\",\n \"total_time_taken_in_millis\": 79084492,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"qui laborum dolore reprehenderit\",\n \"page\": {\n  \"type\": \"sit\",\n  \"size\": -28841867,\n  \"current\": 84516581,\n  \"has_next\": false,\n  \"item_total\": 1612692,\n  \"next_id\": \"voluptate c\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c307da52-d939-413f-8986-c5161ea98b30",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1950-12-16T13:29:55.965Z\",\n \"status\": -84963665,\n \"error\": \"ut\",\n \"exception\": \"nostrud Duis laborum\",\n \"message\": \"do enim deserunt\",\n \"total_time_taken_in_millis\": 79084492,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"qui laborum dolore reprehenderit\",\n \"page\": {\n  \"type\": \"sit\",\n  \"size\": -28841867,\n  \"current\": 84516581,\n  \"has_next\": false,\n  \"item_total\": 1612692,\n  \"next_id\": \"voluptate c\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e0e6ef15-db9f-4d88-aa4a-fb77d6a033da",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1950-12-16T13:29:55.965Z\",\n \"status\": -84963665,\n \"error\": \"ut\",\n \"exception\": \"nostrud Duis laborum\",\n \"message\": \"do enim deserunt\",\n \"total_time_taken_in_millis\": 79084492,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"qui laborum dolore reprehenderit\",\n \"page\": {\n  \"type\": \"sit\",\n  \"size\": -28841867,\n  \"current\": 84516581,\n  \"has_next\": false,\n  \"item_total\": 1612692,\n  \"next_id\": \"voluptate c\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "68982178-c54b-4c1b-9557-6a51026871e4",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1950-12-16T13:29:55.965Z\",\n \"status\": -84963665,\n \"error\": \"ut\",\n \"exception\": \"nostrud Duis laborum\",\n \"message\": \"do enim deserunt\",\n \"total_time_taken_in_millis\": 79084492,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"qui laborum dolore reprehenderit\",\n \"page\": {\n  \"type\": \"sit\",\n  \"size\": -28841867,\n  \"current\": 84516581,\n  \"has_next\": false,\n  \"item_total\": 1612692,\n  \"next_id\": \"voluptate c\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "8dd95edb-7833-4ca0-bee4-77471c5b833b",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1950-12-16T13:29:55.965Z\",\n \"status\": -84963665,\n \"error\": \"ut\",\n \"exception\": \"nostrud Duis laborum\",\n \"message\": \"do enim deserunt\",\n \"total_time_taken_in_millis\": 79084492,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"qui laborum dolore reprehenderit\",\n \"page\": {\n  \"type\": \"sit\",\n  \"size\": -28841867,\n  \"current\": 84516581,\n  \"has_next\": false,\n  \"item_total\": 1612692,\n  \"next_id\": \"voluptate c\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx0.de"
    }
  ],
  "info": {
    "_postman_id": "5bb6a6ee-4e36-45b0-be7c-6588184cc946",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
