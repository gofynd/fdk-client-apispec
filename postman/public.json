{
  "item": [
    {
      "id": "f808a66a-1197-4baa-a010-96460ff88a6e",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "4ecc6257-925d-4add-ac6b-ee8c56e743a4",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "7c9edeb8-f3e7-4f63-90a5-ceef784dcf59",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "labore magna aliqua enim",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "fc8746ff-ce92-444a-9f14-7dfe7d3460a5",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "labore magna aliqua enim",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "ff126daf-300e-4a08-ba06-002cd0ee37b7",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "labore magna aliqua enim",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "629fb059-0e56-4377-ad22-a4d6e52e59fe",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "9a800236-611c-4287-8fb7-84a5aabf9adf",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "4ea0f38c-818b-40dd-bcc8-b6df63c9d822",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "f3307d1a-8af8-4cc5-9dc1-82c71eb149b7",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "376fcb40-ac28-44c9-85a9-50faefa7b083",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -49568501,\n   \"event_name\": \"ex dolore voluptate qui\",\n   \"event_type\": \"nisi ex esse id occaecat\",\n   \"event_category\": \"nostrud ad\",\n   \"version\": \"occaecat do in\",\n   \"display_name\": \"eiusmod velit Ut veni\",\n   \"description\": \"enim velit sed\",\n   \"created_on\": \"ut ullamco consequat dolore\"\n  },\n  {\n   \"id\": -18462476,\n   \"event_name\": \"nostrud eiusmod\",\n   \"event_type\": \"ea nostrud\",\n   \"event_category\": \"proident\",\n   \"version\": \"culpa proident eiusmod magna adipisicing\",\n   \"display_name\": \"tempor reprehenderit exercitation nisi\",\n   \"description\": \"id laboris amet\",\n   \"created_on\": \"occaecat aute\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "abcf2aa7-4bb7-410d-ad29-d1b0a6280c17",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "508a58b3-cd43-4cd6-859d-26115d782e24",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 58110257,\n   \"event_name\": \"magna officia\",\n   \"event_type\": \"in ipsum in sit\",\n   \"event_category\": \"velit mollit est\",\n   \"version\": \"magna\",\n   \"display_name\": \"cupidatat dolor ut labor\",\n   \"description\": \"minim esse\",\n   \"created_on\": \"ex nostrud ullamco\"\n  },\n  {\n   \"id\": 61015814,\n   \"event_name\": \"incididunt nisi\",\n   \"event_type\": \"laborum Excepteur irure\",\n   \"event_category\": \"irure tempor Ut eu\",\n   \"version\": \"in esse sint et\",\n   \"display_name\": \"non sed\",\n   \"description\": \"qui incididunt\",\n   \"created_on\": \"in Ut dolore et\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "676c2e9b-e73c-4d61-965d-541a7e72dc74",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "c25f9bf4-40e7-49f5-a750-d94e21273869",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "a0c9b935-4637-452c-8c21-05a950a5f08d",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1959-08-10T04:37:12.247Z\",\n \"status\": -97131391,\n \"error\": \"proident ad cupidatat\",\n \"exception\": \"proident\",\n \"message\": \"dolor proident\",\n \"total_time_taken_in_millis\": -30732502,\n \"http_status\": \"208 ALREADY_REPORTED\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"culpa non consectetur nisi eu\",\n   \"description\": \"pariatur\",\n   \"name\": \"laborum Excepteur\",\n   \"slug\": \"dolore occaecat\",\n   \"meta\": [\n    {\n     \"_id\": \"proident magna\",\n     \"name\": \"Lorem\",\n     \"value\": \"id volupt\"\n    },\n    {\n     \"_id\": \"reprehenderit amet\",\n     \"name\": \"do ex sed amet\",\n     \"value\": \"proident dolor mollit Duis\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"magna\",\n    \"integration\": \"nisi esse\",\n    \"level\": \"culpa Ut\",\n    \"uid\": 23888927,\n    \"opted\": false,\n    \"permissions\": [\n     \"ut voluptate mol\",\n     \"dolore ut i\"\n    ],\n    \"token\": \"in fugiat aliquip veniam\",\n    \"name\": \"mollit proident culpa\",\n    \"stores\": [\n     {\n      \"_id\": \"voluptate ut esse cupidatat\",\n      \"integration\": \"adipisicing Ut sit\",\n      \"level\": \"voluptate\",\n      \"uid\": 88531006,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"velit tempor\",\n      \"code\": \"incididunt\",\n      \"name\": \"qui\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"fugiat eiusmod\",\n      \"integration\": \"enim ut commodo ex\",\n      \"level\": \"in sunt fug\",\n      \"uid\": -89352583,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in \",\n      \"code\": \"et commodo\",\n      \"name\": \"dolore id magna consequat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"fugiat sint veniam\",\n      \"integration\": \"reprehenderit ex ut\",\n      \"level\": \"fugiat ani\",\n      \"uid\": -52963164,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ut cillum incididunt pariatur\",\n      \"code\": \"deserunt proident\",\n      \"name\": \"reprehenderit adipisicing deserunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"exercitation sint\",\n      \"integration\": \"ut\",\n      \"level\": \"reprehenderit laboris enim proident\",\n      \"uid\": -40002950,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ut dolore Excepteur minim irure\",\n      \"code\": \"ullamco sit\",\n      \"name\": \"eiusmod ad\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"pariatur in non\",\n    \"integration\": \"nisi\",\n    \"level\": \"commodo cillum eu\",\n    \"uid\": 5378273,\n    \"opted\": false,\n    \"permissions\": [\n     \"ad consequat deserunt\",\n     \"Excepteur pariatur\"\n    ],\n    \"token\": \"sed et ullamco sit in\",\n    \"name\": \"esse ex eu elit\",\n    \"stores\": [\n     {\n      \"_id\": \"ut nulla\",\n      \"integration\": \"proident magna\",\n      \"level\": \"proident enim minim\",\n      \"uid\": 22962655,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"elit aliqua velit\",\n      \"code\": \"dolor irure consequat\",\n      \"name\": \"elit nostrud\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"Lorem labore\",\n      \"integration\": \"in\",\n      \"level\": \"nulla cupidatat\",\n      \"uid\": 96612179,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"nulla occaecat nisi\",\n      \"code\": \"est\",\n      \"name\": \"aute laboris\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"cillu\",\n      \"integration\": \"nulla\",\n      \"level\": \"consequat esse in mollit\",\n      \"uid\": 68860593,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"elit officia ea sit\",\n      \"code\": \"tempor\",\n      \"name\": \"ipsum voluptate exercitation\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"labore esse\",\n      \"integration\": \"occaecat aliquip aliqua cillum exercitation\",\n      \"level\": \"Lorem r\",\n      \"uid\": 23768833,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ut veniam\",\n      \"code\": \"irure consequat ipsum\",\n      \"name\": \"qui est pariatur ullamco\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"occaecat et irure\",\n   \"description\": \"consectetur sunt sed proident\",\n   \"name\": \"ea aute id\",\n   \"slug\": \"ea\",\n   \"meta\": [\n    {\n     \"_id\": \"ess\",\n     \"name\": \"nostrud dolore\",\n     \"value\": \"quis ut eu\"\n    },\n    {\n     \"_id\": \"eiusmod Ut occaecat consectetur\",\n     \"name\": \"eu sunt\",\n     \"value\": \"Ut sint\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"amet occaecat mollit\",\n    \"integration\": \"consequat qui labore\",\n    \"level\": \"aliqua consectetur irure\",\n    \"uid\": 5413921,\n    \"opted\": true,\n    \"permissions\": [\n     \"sunt exercitati\",\n     \"dolor Ut\"\n    ],\n    \"token\": \"tempor deserunt\",\n    \"name\": \"deserunt non anim et sunt\",\n    \"stores\": [\n     {\n      \"_id\": \"ut fugiat\",\n      \"integration\": \"enim sed anim irure\",\n      \"level\": \"et aliqua culpa ad\",\n      \"uid\": 37328577,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"amet Duis\",\n      \"code\": \"ve\",\n      \"name\": \"irure\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"fugiat dolor sed deserunt labore\",\n      \"integration\": \"a\",\n      \"level\": \"aliqua velit ut eiusmod\",\n      \"uid\": -66935390,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"culpa esse ea\",\n      \"code\": \"ullamco\",\n      \"name\": \"dolore adipisicing eiusmod\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"fugiat do\",\n      \"integration\": \"dolor cillum\",\n      \"level\": \"magna Lorem incididunt exercitation tempor\",\n      \"uid\": 11153257,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"laborum officia velit\",\n      \"code\": \"et dolore\",\n      \"name\": \"sint dolo\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"exercitation Lorem ullamco eu in\",\n      \"integration\": \"aliquip\",\n      \"level\": \"Lorem cupidatat\",\n      \"uid\": 84551339,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ipsum dolore exercitation\",\n      \"code\": \"deserunt\",\n      \"name\": \"amet\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"id in cupidatat ut eu\",\n    \"integration\": \"magna laborum irure \",\n    \"level\": \"mollit fugiat irure\",\n    \"uid\": -15107846,\n    \"opted\": false,\n    \"permissions\": [\n     \"dolor esse\",\n     \"\"\n    ],\n    \"token\": \"sed fugiat adipisicing\",\n    \"name\": \"tempor sunt irure in sed\",\n    \"stores\": [\n     {\n      \"_id\": \"cupidatat qui cillum\",\n      \"integration\": \"consectetur magna commodo\",\n      \"level\": \"irure aliqua\",\n      \"uid\": -61184447,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"proident minim\",\n      \"code\": \"ipsum sed labore in aute\",\n      \"name\": \"ut\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"veniam incididunt eu\",\n      \"integration\": \"Ut labore des\",\n      \"level\": \"quis voluptate\",\n      \"uid\": 72998533,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sit aute ea pariatur\",\n      \"code\": \"Du\",\n      \"name\": \"cupidatat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"velit est Ut\",\n      \"integration\": \"ipsum\",\n      \"level\": \"irure do tempor qui\",\n      \"uid\": -19374532,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Duis magna\",\n      \"code\": \"ullamco incididunt\",\n      \"name\": \"quis Duis ni\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"consectetur incididunt elit\",\n      \"integration\": \"aliquip ipsum\",\n      \"level\": \"dolor exercitation amet cupidatat\",\n      \"uid\": 25252731,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"do nisi \",\n      \"code\": \"id esse\",\n      \"name\": \"do aute incididunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"veniam amet in\",\n \"page\": {\n  \"type\": \"est\",\n  \"size\": -50746306,\n  \"current\": 87414644,\n  \"has_next\": false,\n  \"item_total\": 27512760,\n  \"next_id\": \"ipsum consectetur Duis occaecat\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "172b8134-bcfd-4341-b778-79cd47d77c58",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1959-08-10T04:37:12.247Z\",\n \"status\": -97131391,\n \"error\": \"proident ad cupidatat\",\n \"exception\": \"proident\",\n \"message\": \"dolor proident\",\n \"total_time_taken_in_millis\": -30732502,\n \"http_status\": \"208 ALREADY_REPORTED\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"culpa non consectetur nisi eu\",\n   \"description\": \"pariatur\",\n   \"name\": \"laborum Excepteur\",\n   \"slug\": \"dolore occaecat\",\n   \"meta\": [\n    {\n     \"_id\": \"proident magna\",\n     \"name\": \"Lorem\",\n     \"value\": \"id volupt\"\n    },\n    {\n     \"_id\": \"reprehenderit amet\",\n     \"name\": \"do ex sed amet\",\n     \"value\": \"proident dolor mollit Duis\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"magna\",\n    \"integration\": \"nisi esse\",\n    \"level\": \"culpa Ut\",\n    \"uid\": 23888927,\n    \"opted\": false,\n    \"permissions\": [\n     \"ut voluptate mol\",\n     \"dolore ut i\"\n    ],\n    \"token\": \"in fugiat aliquip veniam\",\n    \"name\": \"mollit proident culpa\",\n    \"stores\": [\n     {\n      \"_id\": \"voluptate ut esse cupidatat\",\n      \"integration\": \"adipisicing Ut sit\",\n      \"level\": \"voluptate\",\n      \"uid\": 88531006,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"velit tempor\",\n      \"code\": \"incididunt\",\n      \"name\": \"qui\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"fugiat eiusmod\",\n      \"integration\": \"enim ut commodo ex\",\n      \"level\": \"in sunt fug\",\n      \"uid\": -89352583,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in \",\n      \"code\": \"et commodo\",\n      \"name\": \"dolore id magna consequat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"fugiat sint veniam\",\n      \"integration\": \"reprehenderit ex ut\",\n      \"level\": \"fugiat ani\",\n      \"uid\": -52963164,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ut cillum incididunt pariatur\",\n      \"code\": \"deserunt proident\",\n      \"name\": \"reprehenderit adipisicing deserunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"exercitation sint\",\n      \"integration\": \"ut\",\n      \"level\": \"reprehenderit laboris enim proident\",\n      \"uid\": -40002950,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ut dolore Excepteur minim irure\",\n      \"code\": \"ullamco sit\",\n      \"name\": \"eiusmod ad\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"pariatur in non\",\n    \"integration\": \"nisi\",\n    \"level\": \"commodo cillum eu\",\n    \"uid\": 5378273,\n    \"opted\": false,\n    \"permissions\": [\n     \"ad consequat deserunt\",\n     \"Excepteur pariatur\"\n    ],\n    \"token\": \"sed et ullamco sit in\",\n    \"name\": \"esse ex eu elit\",\n    \"stores\": [\n     {\n      \"_id\": \"ut nulla\",\n      \"integration\": \"proident magna\",\n      \"level\": \"proident enim minim\",\n      \"uid\": 22962655,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"elit aliqua velit\",\n      \"code\": \"dolor irure consequat\",\n      \"name\": \"elit nostrud\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"Lorem labore\",\n      \"integration\": \"in\",\n      \"level\": \"nulla cupidatat\",\n      \"uid\": 96612179,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"nulla occaecat nisi\",\n      \"code\": \"est\",\n      \"name\": \"aute laboris\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"cillu\",\n      \"integration\": \"nulla\",\n      \"level\": \"consequat esse in mollit\",\n      \"uid\": 68860593,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"elit officia ea sit\",\n      \"code\": \"tempor\",\n      \"name\": \"ipsum voluptate exercitation\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"labore esse\",\n      \"integration\": \"occaecat aliquip aliqua cillum exercitation\",\n      \"level\": \"Lorem r\",\n      \"uid\": 23768833,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ut veniam\",\n      \"code\": \"irure consequat ipsum\",\n      \"name\": \"qui est pariatur ullamco\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"occaecat et irure\",\n   \"description\": \"consectetur sunt sed proident\",\n   \"name\": \"ea aute id\",\n   \"slug\": \"ea\",\n   \"meta\": [\n    {\n     \"_id\": \"ess\",\n     \"name\": \"nostrud dolore\",\n     \"value\": \"quis ut eu\"\n    },\n    {\n     \"_id\": \"eiusmod Ut occaecat consectetur\",\n     \"name\": \"eu sunt\",\n     \"value\": \"Ut sint\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"amet occaecat mollit\",\n    \"integration\": \"consequat qui labore\",\n    \"level\": \"aliqua consectetur irure\",\n    \"uid\": 5413921,\n    \"opted\": true,\n    \"permissions\": [\n     \"sunt exercitati\",\n     \"dolor Ut\"\n    ],\n    \"token\": \"tempor deserunt\",\n    \"name\": \"deserunt non anim et sunt\",\n    \"stores\": [\n     {\n      \"_id\": \"ut fugiat\",\n      \"integration\": \"enim sed anim irure\",\n      \"level\": \"et aliqua culpa ad\",\n      \"uid\": 37328577,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"amet Duis\",\n      \"code\": \"ve\",\n      \"name\": \"irure\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"fugiat dolor sed deserunt labore\",\n      \"integration\": \"a\",\n      \"level\": \"aliqua velit ut eiusmod\",\n      \"uid\": -66935390,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"culpa esse ea\",\n      \"code\": \"ullamco\",\n      \"name\": \"dolore adipisicing eiusmod\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"fugiat do\",\n      \"integration\": \"dolor cillum\",\n      \"level\": \"magna Lorem incididunt exercitation tempor\",\n      \"uid\": 11153257,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"laborum officia velit\",\n      \"code\": \"et dolore\",\n      \"name\": \"sint dolo\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"exercitation Lorem ullamco eu in\",\n      \"integration\": \"aliquip\",\n      \"level\": \"Lorem cupidatat\",\n      \"uid\": 84551339,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ipsum dolore exercitation\",\n      \"code\": \"deserunt\",\n      \"name\": \"amet\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"id in cupidatat ut eu\",\n    \"integration\": \"magna laborum irure \",\n    \"level\": \"mollit fugiat irure\",\n    \"uid\": -15107846,\n    \"opted\": false,\n    \"permissions\": [\n     \"dolor esse\",\n     \"\"\n    ],\n    \"token\": \"sed fugiat adipisicing\",\n    \"name\": \"tempor sunt irure in sed\",\n    \"stores\": [\n     {\n      \"_id\": \"cupidatat qui cillum\",\n      \"integration\": \"consectetur magna commodo\",\n      \"level\": \"irure aliqua\",\n      \"uid\": -61184447,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"proident minim\",\n      \"code\": \"ipsum sed labore in aute\",\n      \"name\": \"ut\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"veniam incididunt eu\",\n      \"integration\": \"Ut labore des\",\n      \"level\": \"quis voluptate\",\n      \"uid\": 72998533,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sit aute ea pariatur\",\n      \"code\": \"Du\",\n      \"name\": \"cupidatat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"velit est Ut\",\n      \"integration\": \"ipsum\",\n      \"level\": \"irure do tempor qui\",\n      \"uid\": -19374532,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Duis magna\",\n      \"code\": \"ullamco incididunt\",\n      \"name\": \"quis Duis ni\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"consectetur incididunt elit\",\n      \"integration\": \"aliquip ipsum\",\n      \"level\": \"dolor exercitation amet cupidatat\",\n      \"uid\": 25252731,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"do nisi \",\n      \"code\": \"id esse\",\n      \"name\": \"do aute incididunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"veniam amet in\",\n \"page\": {\n  \"type\": \"est\",\n  \"size\": -50746306,\n  \"current\": 87414644,\n  \"has_next\": false,\n  \"item_total\": 27512760,\n  \"next_id\": \"ipsum consectetur Duis occaecat\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "dd398635-ac11-4d19-831f-68e66425af26",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1959-08-10T04:37:12.247Z\",\n \"status\": -97131391,\n \"error\": \"proident ad cupidatat\",\n \"exception\": \"proident\",\n \"message\": \"dolor proident\",\n \"total_time_taken_in_millis\": -30732502,\n \"http_status\": \"208 ALREADY_REPORTED\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"culpa non consectetur nisi eu\",\n   \"description\": \"pariatur\",\n   \"name\": \"laborum Excepteur\",\n   \"slug\": \"dolore occaecat\",\n   \"meta\": [\n    {\n     \"_id\": \"proident magna\",\n     \"name\": \"Lorem\",\n     \"value\": \"id volupt\"\n    },\n    {\n     \"_id\": \"reprehenderit amet\",\n     \"name\": \"do ex sed amet\",\n     \"value\": \"proident dolor mollit Duis\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"magna\",\n    \"integration\": \"nisi esse\",\n    \"level\": \"culpa Ut\",\n    \"uid\": 23888927,\n    \"opted\": false,\n    \"permissions\": [\n     \"ut voluptate mol\",\n     \"dolore ut i\"\n    ],\n    \"token\": \"in fugiat aliquip veniam\",\n    \"name\": \"mollit proident culpa\",\n    \"stores\": [\n     {\n      \"_id\": \"voluptate ut esse cupidatat\",\n      \"integration\": \"adipisicing Ut sit\",\n      \"level\": \"voluptate\",\n      \"uid\": 88531006,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"velit tempor\",\n      \"code\": \"incididunt\",\n      \"name\": \"qui\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"fugiat eiusmod\",\n      \"integration\": \"enim ut commodo ex\",\n      \"level\": \"in sunt fug\",\n      \"uid\": -89352583,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in \",\n      \"code\": \"et commodo\",\n      \"name\": \"dolore id magna consequat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"fugiat sint veniam\",\n      \"integration\": \"reprehenderit ex ut\",\n      \"level\": \"fugiat ani\",\n      \"uid\": -52963164,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ut cillum incididunt pariatur\",\n      \"code\": \"deserunt proident\",\n      \"name\": \"reprehenderit adipisicing deserunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"exercitation sint\",\n      \"integration\": \"ut\",\n      \"level\": \"reprehenderit laboris enim proident\",\n      \"uid\": -40002950,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ut dolore Excepteur minim irure\",\n      \"code\": \"ullamco sit\",\n      \"name\": \"eiusmod ad\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"pariatur in non\",\n    \"integration\": \"nisi\",\n    \"level\": \"commodo cillum eu\",\n    \"uid\": 5378273,\n    \"opted\": false,\n    \"permissions\": [\n     \"ad consequat deserunt\",\n     \"Excepteur pariatur\"\n    ],\n    \"token\": \"sed et ullamco sit in\",\n    \"name\": \"esse ex eu elit\",\n    \"stores\": [\n     {\n      \"_id\": \"ut nulla\",\n      \"integration\": \"proident magna\",\n      \"level\": \"proident enim minim\",\n      \"uid\": 22962655,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"elit aliqua velit\",\n      \"code\": \"dolor irure consequat\",\n      \"name\": \"elit nostrud\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"Lorem labore\",\n      \"integration\": \"in\",\n      \"level\": \"nulla cupidatat\",\n      \"uid\": 96612179,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"nulla occaecat nisi\",\n      \"code\": \"est\",\n      \"name\": \"aute laboris\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"cillu\",\n      \"integration\": \"nulla\",\n      \"level\": \"consequat esse in mollit\",\n      \"uid\": 68860593,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"elit officia ea sit\",\n      \"code\": \"tempor\",\n      \"name\": \"ipsum voluptate exercitation\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"labore esse\",\n      \"integration\": \"occaecat aliquip aliqua cillum exercitation\",\n      \"level\": \"Lorem r\",\n      \"uid\": 23768833,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ut veniam\",\n      \"code\": \"irure consequat ipsum\",\n      \"name\": \"qui est pariatur ullamco\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"occaecat et irure\",\n   \"description\": \"consectetur sunt sed proident\",\n   \"name\": \"ea aute id\",\n   \"slug\": \"ea\",\n   \"meta\": [\n    {\n     \"_id\": \"ess\",\n     \"name\": \"nostrud dolore\",\n     \"value\": \"quis ut eu\"\n    },\n    {\n     \"_id\": \"eiusmod Ut occaecat consectetur\",\n     \"name\": \"eu sunt\",\n     \"value\": \"Ut sint\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"amet occaecat mollit\",\n    \"integration\": \"consequat qui labore\",\n    \"level\": \"aliqua consectetur irure\",\n    \"uid\": 5413921,\n    \"opted\": true,\n    \"permissions\": [\n     \"sunt exercitati\",\n     \"dolor Ut\"\n    ],\n    \"token\": \"tempor deserunt\",\n    \"name\": \"deserunt non anim et sunt\",\n    \"stores\": [\n     {\n      \"_id\": \"ut fugiat\",\n      \"integration\": \"enim sed anim irure\",\n      \"level\": \"et aliqua culpa ad\",\n      \"uid\": 37328577,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"amet Duis\",\n      \"code\": \"ve\",\n      \"name\": \"irure\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"fugiat dolor sed deserunt labore\",\n      \"integration\": \"a\",\n      \"level\": \"aliqua velit ut eiusmod\",\n      \"uid\": -66935390,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"culpa esse ea\",\n      \"code\": \"ullamco\",\n      \"name\": \"dolore adipisicing eiusmod\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"fugiat do\",\n      \"integration\": \"dolor cillum\",\n      \"level\": \"magna Lorem incididunt exercitation tempor\",\n      \"uid\": 11153257,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"laborum officia velit\",\n      \"code\": \"et dolore\",\n      \"name\": \"sint dolo\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"exercitation Lorem ullamco eu in\",\n      \"integration\": \"aliquip\",\n      \"level\": \"Lorem cupidatat\",\n      \"uid\": 84551339,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ipsum dolore exercitation\",\n      \"code\": \"deserunt\",\n      \"name\": \"amet\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"id in cupidatat ut eu\",\n    \"integration\": \"magna laborum irure \",\n    \"level\": \"mollit fugiat irure\",\n    \"uid\": -15107846,\n    \"opted\": false,\n    \"permissions\": [\n     \"dolor esse\",\n     \"\"\n    ],\n    \"token\": \"sed fugiat adipisicing\",\n    \"name\": \"tempor sunt irure in sed\",\n    \"stores\": [\n     {\n      \"_id\": \"cupidatat qui cillum\",\n      \"integration\": \"consectetur magna commodo\",\n      \"level\": \"irure aliqua\",\n      \"uid\": -61184447,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"proident minim\",\n      \"code\": \"ipsum sed labore in aute\",\n      \"name\": \"ut\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"veniam incididunt eu\",\n      \"integration\": \"Ut labore des\",\n      \"level\": \"quis voluptate\",\n      \"uid\": 72998533,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sit aute ea pariatur\",\n      \"code\": \"Du\",\n      \"name\": \"cupidatat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"velit est Ut\",\n      \"integration\": \"ipsum\",\n      \"level\": \"irure do tempor qui\",\n      \"uid\": -19374532,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Duis magna\",\n      \"code\": \"ullamco incididunt\",\n      \"name\": \"quis Duis ni\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"consectetur incididunt elit\",\n      \"integration\": \"aliquip ipsum\",\n      \"level\": \"dolor exercitation amet cupidatat\",\n      \"uid\": 25252731,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"do nisi \",\n      \"code\": \"id esse\",\n      \"name\": \"do aute incididunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"veniam amet in\",\n \"page\": {\n  \"type\": \"est\",\n  \"size\": -50746306,\n  \"current\": 87414644,\n  \"has_next\": false,\n  \"item_total\": 27512760,\n  \"next_id\": \"ipsum consectetur Duis occaecat\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "182105e3-9022-4fe7-8ce0-0d09e6e5503f",
          "name": "getApiKey | Get Slingshot Configuration Of  A Company",
          "request": {
            "name": "getApiKey | Get Slingshot Configuration Of  A Company",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "415a53c5-0364-4bd4-8e2f-a5789fd1da08",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2018-06-27T06:32:16.688Z\",\n \"status\": 23451592,\n \"error\": \"nostrud mollit ea\",\n \"exception\": \"enim\",\n \"message\": \"cillum officia\",\n \"total_time_taken_in_millis\": -22513967,\n \"http_status\": \"200 OK\",\n \"items\": {\n  \"session_id\": \"officia veniam qui aliquip\",\n  \"error_message\": \"irure\"\n },\n \"payload\": {\n  \"session_id\": \"ut mollit Excepteur Duis\",\n  \"error_message\": \"id proident tempor\"\n },\n \"trace_id\": \"cupidatat ut culpa\",\n \"page\": {\n  \"type\": \"veniam tempor labore quis dolor\",\n  \"size\": -71303010,\n  \"current\": -53748490,\n  \"has_next\": true,\n  \"item_total\": 22040814,\n  \"next_id\": \"sunt nulla Ut fugiat\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "28e7b770-5a2e-4f17-bf13-41d0341ef47e",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2018-06-27T06:32:16.688Z\",\n \"status\": 23451592,\n \"error\": \"nostrud mollit ea\",\n \"exception\": \"enim\",\n \"message\": \"cillum officia\",\n \"total_time_taken_in_millis\": -22513967,\n \"http_status\": \"200 OK\",\n \"items\": {\n  \"session_id\": \"officia veniam qui aliquip\",\n  \"error_message\": \"irure\"\n },\n \"payload\": {\n  \"session_id\": \"ut mollit Excepteur Duis\",\n  \"error_message\": \"id proident tempor\"\n },\n \"trace_id\": \"cupidatat ut culpa\",\n \"page\": {\n  \"type\": \"veniam tempor labore quis dolor\",\n  \"size\": -71303010,\n  \"current\": -53748490,\n  \"has_next\": true,\n  \"item_total\": 22040814,\n  \"next_id\": \"sunt nulla Ut fugiat\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c88161cd-1165-4f5e-aace-2b5b447eb60e",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2018-06-27T06:32:16.688Z\",\n \"status\": 23451592,\n \"error\": \"nostrud mollit ea\",\n \"exception\": \"enim\",\n \"message\": \"cillum officia\",\n \"total_time_taken_in_millis\": -22513967,\n \"http_status\": \"200 OK\",\n \"items\": {\n  \"session_id\": \"officia veniam qui aliquip\",\n  \"error_message\": \"irure\"\n },\n \"payload\": {\n  \"session_id\": \"ut mollit Excepteur Duis\",\n  \"error_message\": \"id proident tempor\"\n },\n \"trace_id\": \"cupidatat ut culpa\",\n \"page\": {\n  \"type\": \"veniam tempor labore quis dolor\",\n  \"size\": -71303010,\n  \"current\": -53748490,\n  \"has_next\": true,\n  \"item_total\": 22040814,\n  \"next_id\": \"sunt nulla Ut fugiat\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "5f8812df-4a5e-4d0c-ada6-170bdf1ce5a9",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "a374c6ac-c64b-4d23-b0da-a6e621d425a6",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1954-04-01T13:58:59.096Z\",\n \"status\": 14240621,\n \"error\": \"sunt commodo\",\n \"exception\": \"ut\",\n \"message\": \"dolore \",\n \"total_time_taken_in_millis\": 43839045,\n \"http_status\": \"501 NOT_IMPLEMENTED\",\n \"items\": {\n  \"company_id\": 57857575,\n  \"integration_data\": {},\n  \"company_name\": \"sunt eu magna Ut\",\n  \"task_details\": {\n   \"type\": 36250362,\n   \"group_list\": [\n    {\n     \"text\": \"ut adipisicing velit\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"est in\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 50422447.52512133,\n   \"safe_stock\": 93903419,\n   \"period_threshold\": -74302170,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"ex culpa\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ut voluptate ea sit occaecat\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"anim ea ad et\",\n  \"alias\": \"Duis\"\n },\n \"payload\": {\n  \"company_id\": 95896110,\n  \"integration_data\": {},\n  \"company_name\": \"cupidatat aliqua laboris ut\",\n  \"task_details\": {\n   \"type\": -488142,\n   \"group_list\": [\n    {\n     \"text\": \"magna aliquip\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"labore sunt minim ex ullamco\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 67721523.72293475,\n   \"safe_stock\": 83679648,\n   \"period_threshold\": -1645977,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"qui amet cupidatat aliqua elit\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"deseru\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"sunt\",\n  \"alias\": \"labore\"\n },\n \"trace_id\": \"voluptate mollit\",\n \"page\": {\n  \"type\": \"cupidatat tempor\",\n  \"size\": -20644117,\n  \"current\": 53819806,\n  \"has_next\": true,\n  \"item_total\": 28877840,\n  \"next_id\": \"labore aliqua sint velit do\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a3faaaf6-5fa3-48d6-a66f-a577d5f8c05c",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1954-04-01T13:58:59.096Z\",\n \"status\": 14240621,\n \"error\": \"sunt commodo\",\n \"exception\": \"ut\",\n \"message\": \"dolore \",\n \"total_time_taken_in_millis\": 43839045,\n \"http_status\": \"501 NOT_IMPLEMENTED\",\n \"items\": {\n  \"company_id\": 57857575,\n  \"integration_data\": {},\n  \"company_name\": \"sunt eu magna Ut\",\n  \"task_details\": {\n   \"type\": 36250362,\n   \"group_list\": [\n    {\n     \"text\": \"ut adipisicing velit\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"est in\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 50422447.52512133,\n   \"safe_stock\": 93903419,\n   \"period_threshold\": -74302170,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"ex culpa\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ut voluptate ea sit occaecat\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"anim ea ad et\",\n  \"alias\": \"Duis\"\n },\n \"payload\": {\n  \"company_id\": 95896110,\n  \"integration_data\": {},\n  \"company_name\": \"cupidatat aliqua laboris ut\",\n  \"task_details\": {\n   \"type\": -488142,\n   \"group_list\": [\n    {\n     \"text\": \"magna aliquip\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"labore sunt minim ex ullamco\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 67721523.72293475,\n   \"safe_stock\": 83679648,\n   \"period_threshold\": -1645977,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"qui amet cupidatat aliqua elit\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"deseru\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"sunt\",\n  \"alias\": \"labore\"\n },\n \"trace_id\": \"voluptate mollit\",\n \"page\": {\n  \"type\": \"cupidatat tempor\",\n  \"size\": -20644117,\n  \"current\": 53819806,\n  \"has_next\": true,\n  \"item_total\": 28877840,\n  \"next_id\": \"labore aliqua sint velit do\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9a377a81-9ebe-4902-b538-dc3d6998abcb",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1954-04-01T13:58:59.096Z\",\n \"status\": 14240621,\n \"error\": \"sunt commodo\",\n \"exception\": \"ut\",\n \"message\": \"dolore \",\n \"total_time_taken_in_millis\": 43839045,\n \"http_status\": \"501 NOT_IMPLEMENTED\",\n \"items\": {\n  \"company_id\": 57857575,\n  \"integration_data\": {},\n  \"company_name\": \"sunt eu magna Ut\",\n  \"task_details\": {\n   \"type\": 36250362,\n   \"group_list\": [\n    {\n     \"text\": \"ut adipisicing velit\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"est in\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 50422447.52512133,\n   \"safe_stock\": 93903419,\n   \"period_threshold\": -74302170,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"ex culpa\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ut voluptate ea sit occaecat\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"anim ea ad et\",\n  \"alias\": \"Duis\"\n },\n \"payload\": {\n  \"company_id\": 95896110,\n  \"integration_data\": {},\n  \"company_name\": \"cupidatat aliqua laboris ut\",\n  \"task_details\": {\n   \"type\": -488142,\n   \"group_list\": [\n    {\n     \"text\": \"magna aliquip\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"labore sunt minim ex ullamco\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 67721523.72293475,\n   \"safe_stock\": 83679648,\n   \"period_threshold\": -1645977,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"qui amet cupidatat aliqua elit\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"deseru\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"sunt\",\n  \"alias\": \"labore\"\n },\n \"trace_id\": \"voluptate mollit\",\n \"page\": {\n  \"type\": \"cupidatat tempor\",\n  \"size\": -20644117,\n  \"current\": 53819806,\n  \"has_next\": true,\n  \"item_total\": 28877840,\n  \"next_id\": \"labore aliqua sint velit do\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "dbd980d5-55fc-4cbf-a34b-08e1d5f97c6b",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "cdb44511-f39a-4288-8546-bca5ff0b93fb",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1990-05-15T19:36:54.332Z\",\n \"status\": -68265552,\n \"error\": \"nisi\",\n \"exception\": \"ut adipisicing enim nisi Excepteur\",\n \"message\": \"et\",\n \"total_time_taken_in_millis\": 5195161,\n \"http_status\": \"424 FAILED_DEPENDENCY\",\n \"items\": [\n  {\n   \"company_id\": 90883811,\n   \"integration_data\": {},\n   \"company_name\": \"est dolore\",\n   \"task_details\": {\n    \"type\": 54285800,\n    \"group_list\": [\n     {\n      \"text\": \"aliquip Ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proident culpa\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -47163789.57186031,\n    \"safe_stock\": -62736917,\n    \"period_threshold\": -88064493,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"adipisicing veniam esse\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"velit amet\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"minim exercitation et\",\n   \"alias\": \"in proident\"\n  },\n  {\n   \"company_id\": -33906657,\n   \"integration_data\": {},\n   \"company_name\": \"consectetur ullamco ea\",\n   \"task_details\": {\n    \"type\": 54375193,\n    \"group_list\": [\n     {\n      \"text\": \"id eu elit pariatur Excepteur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ullamco nostrud amet cupi\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -18580363.75957784,\n    \"safe_stock\": 77587161,\n    \"period_threshold\": -40623495,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"proident laboris cupidatat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"pariatur Excepteur mollit cillum veniam\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ex ut ullamco\",\n   \"alias\": \"amet\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -85877018,\n   \"integration_data\": {},\n   \"company_name\": \"sunt minim\",\n   \"task_details\": {\n    \"type\": -66230535,\n    \"group_list\": [\n     {\n      \"text\": \"aliquip eiusmod minim sunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"non ipsum esse ea\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 73070325.26080707,\n    \"safe_stock\": 61202254,\n    \"period_threshold\": -69923144,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"commodo aliqua Lorem nostrud\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"elit adipisicing consectetur quis incididunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Ut cillum \",\n   \"alias\": \"Ut adipisicing aliqua\"\n  },\n  {\n   \"company_id\": -55623344,\n   \"integration_data\": {},\n   \"company_name\": \"esse laboris enim in\",\n   \"task_details\": {\n    \"type\": -65359946,\n    \"group_list\": [\n     {\n      \"text\": \"commodo cupidatat anim cillum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut sit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 9270099.64114061,\n    \"safe_stock\": -75045140,\n    \"period_threshold\": -60295009,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ut in amet cillum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sed est minim magna in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"consectetur nulla pariatur\",\n   \"alias\": \"dolore\"\n  }\n ],\n \"trace_id\": \"Duis commodo\",\n \"page\": {\n  \"type\": \"non ipsum in nulla\",\n  \"size\": 72779979,\n  \"current\": 16008541,\n  \"has_next\": true,\n  \"item_total\": -87651612,\n  \"next_id\": \"et fugiat\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e4339e3b-5cd5-4a90-b075-ee1999688bb1",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1971-04-08T12:30:20.665Z\",\n \"status\": -75848243,\n \"error\": \"est laboris eiusmod\",\n \"exception\": \"do Ut \",\n \"message\": \"adipisicing non enim in\",\n \"total_time_taken_in_millis\": 19042977,\n \"http_status\": \"200 OK\",\n \"items\": [\n  {\n   \"company_id\": 93814853,\n   \"integration_data\": {},\n   \"company_name\": \"mollit sed anim\",\n   \"task_details\": {\n    \"type\": -86496803,\n    \"group_list\": [\n     {\n      \"text\": \"ullamco culpa Duis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Duis labore eu do dolor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 84667719.84627482,\n    \"safe_stock\": 58269890,\n    \"period_threshold\": -81597991,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"quis Duis enim irure\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"minim qui ea\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in nulla enim ea sint\",\n   \"alias\": \"amet esse\"\n  },\n  {\n   \"company_id\": -49520658,\n   \"integration_data\": {},\n   \"company_name\": \"nisi sit qui\",\n   \"task_details\": {\n    \"type\": -38239858,\n    \"group_list\": [\n     {\n      \"text\": \"labore E\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ipsum nisi fugiat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 71836024.13759905,\n    \"safe_stock\": -62103613,\n    \"period_threshold\": 85740328,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"occaecat dolor aliquip culp\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"id laboris Excepteur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"culpa in consequat\",\n   \"alias\": \"eiusmod mollit nulla sit ex\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 36287172,\n   \"integration_data\": {},\n   \"company_name\": \"eiusmod consectetur ullamco\",\n   \"task_details\": {\n    \"type\": -34230813,\n    \"group_list\": [\n     {\n      \"text\": \"minim voluptate proident irure\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"pariatur aliquip\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -73037659.64521252,\n    \"safe_stock\": -54097684,\n    \"period_threshold\": 51568867,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ea incididunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliqua Lorem mollit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"dese\",\n   \"alias\": \"officia\"\n  },\n  {\n   \"company_id\": 31064071,\n   \"integration_data\": {},\n   \"company_name\": \"deserunt\",\n   \"task_details\": {\n    \"type\": -16345751,\n    \"group_list\": [\n     {\n      \"text\": \"ut Lorem\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ullamco deserunt magna non culpa\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -64907479.098396294,\n    \"safe_stock\": -6701444,\n    \"period_threshold\": 50678973,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"veniam fugiat adipisicing et sunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eiusmod consectetur deserunt quis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sed mollit Excepteur incididunt cupidatat\",\n   \"alias\": \"aute esse eiusmod amet paria\"\n  }\n ],\n \"trace_id\": \"exercitation Lorem id dolor\",\n \"page\": {\n  \"type\": \"velit consectetur id irure\",\n  \"size\": -29553112,\n  \"current\": 41087524,\n  \"has_next\": true,\n  \"item_total\": -83195538,\n  \"next_id\": \"Lorem cillum irure quis dolore\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "79a312cc-c953-44cc-9bb9-1618d40bd76e",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1971-04-08T12:30:20.665Z\",\n \"status\": -75848243,\n \"error\": \"est laboris eiusmod\",\n \"exception\": \"do Ut \",\n \"message\": \"adipisicing non enim in\",\n \"total_time_taken_in_millis\": 19042977,\n \"http_status\": \"200 OK\",\n \"items\": [\n  {\n   \"company_id\": 93814853,\n   \"integration_data\": {},\n   \"company_name\": \"mollit sed anim\",\n   \"task_details\": {\n    \"type\": -86496803,\n    \"group_list\": [\n     {\n      \"text\": \"ullamco culpa Duis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Duis labore eu do dolor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 84667719.84627482,\n    \"safe_stock\": 58269890,\n    \"period_threshold\": -81597991,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"quis Duis enim irure\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"minim qui ea\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in nulla enim ea sint\",\n   \"alias\": \"amet esse\"\n  },\n  {\n   \"company_id\": -49520658,\n   \"integration_data\": {},\n   \"company_name\": \"nisi sit qui\",\n   \"task_details\": {\n    \"type\": -38239858,\n    \"group_list\": [\n     {\n      \"text\": \"labore E\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ipsum nisi fugiat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 71836024.13759905,\n    \"safe_stock\": -62103613,\n    \"period_threshold\": 85740328,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"occaecat dolor aliquip culp\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"id laboris Excepteur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"culpa in consequat\",\n   \"alias\": \"eiusmod mollit nulla sit ex\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 36287172,\n   \"integration_data\": {},\n   \"company_name\": \"eiusmod consectetur ullamco\",\n   \"task_details\": {\n    \"type\": -34230813,\n    \"group_list\": [\n     {\n      \"text\": \"minim voluptate proident irure\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"pariatur aliquip\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -73037659.64521252,\n    \"safe_stock\": -54097684,\n    \"period_threshold\": 51568867,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ea incididunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliqua Lorem mollit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"dese\",\n   \"alias\": \"officia\"\n  },\n  {\n   \"company_id\": 31064071,\n   \"integration_data\": {},\n   \"company_name\": \"deserunt\",\n   \"task_details\": {\n    \"type\": -16345751,\n    \"group_list\": [\n     {\n      \"text\": \"ut Lorem\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ullamco deserunt magna non culpa\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -64907479.098396294,\n    \"safe_stock\": -6701444,\n    \"period_threshold\": 50678973,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"veniam fugiat adipisicing et sunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eiusmod consectetur deserunt quis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sed mollit Excepteur incididunt cupidatat\",\n   \"alias\": \"aute esse eiusmod amet paria\"\n  }\n ],\n \"trace_id\": \"exercitation Lorem id dolor\",\n \"page\": {\n  \"type\": \"velit consectetur id irure\",\n  \"size\": -29553112,\n  \"current\": 41087524,\n  \"has_next\": true,\n  \"item_total\": -83195538,\n  \"next_id\": \"Lorem cillum irure quis dolore\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "6972a988-3515-4ace-be35-25e9bc298067",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "05250f61-5c0d-42c3-8f29-3a4d0bd6f38d",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1998-01-23T18:15:04.030Z\",\n \"status\": 34636139,\n \"error\": \"magna non cillum\",\n \"exception\": \"pariatur\",\n \"message\": \"velit consequat\",\n \"total_time_taken_in_millis\": 77373558,\n \"http_status\": \"419 INSUFFICIENT_SPACE_ON_RESOURCE\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"consectetur voluptate aute sunt\",\n \"page\": {\n  \"type\": \"ad nostrud\",\n  \"size\": -57374109,\n  \"current\": -62063648,\n  \"has_next\": true,\n  \"item_total\": -21160642,\n  \"next_id\": \"ullamco irure ea sed\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "4f244fc9-6744-4c6c-aa9d-ef41cc85a44e",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1998-01-23T18:15:04.030Z\",\n \"status\": 34636139,\n \"error\": \"magna non cillum\",\n \"exception\": \"pariatur\",\n \"message\": \"velit consequat\",\n \"total_time_taken_in_millis\": 77373558,\n \"http_status\": \"419 INSUFFICIENT_SPACE_ON_RESOURCE\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"consectetur voluptate aute sunt\",\n \"page\": {\n  \"type\": \"ad nostrud\",\n  \"size\": -57374109,\n  \"current\": -62063648,\n  \"has_next\": true,\n  \"item_total\": -21160642,\n  \"next_id\": \"ullamco irure ea sed\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "cd6c5d44-0bbd-4f8f-a8e2-05b2513afa9f",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1998-01-23T18:15:04.030Z\",\n \"status\": 34636139,\n \"error\": \"magna non cillum\",\n \"exception\": \"pariatur\",\n \"message\": \"velit consequat\",\n \"total_time_taken_in_millis\": 77373558,\n \"http_status\": \"419 INSUFFICIENT_SPACE_ON_RESOURCE\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"consectetur voluptate aute sunt\",\n \"page\": {\n  \"type\": \"ad nostrud\",\n  \"size\": -57374109,\n  \"current\": -62063648,\n  \"has_next\": true,\n  \"item_total\": -21160642,\n  \"next_id\": \"ullamco irure ea sed\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "c48c85a7-5500-4e2b-b528-2cf6e600adaf",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "10338cd1-5b45-4c78-bf2b-5c5f6ef9fc66",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1955-12-17T02:29:44.304Z\",\n \"status\": 88854397,\n \"error\": \"proident\",\n \"exception\": \"non\",\n \"message\": \"laborum anim quis fugiat\",\n \"total_time_taken_in_millis\": -99992625,\n \"http_status\": \"501 NOT_IMPLEMENTED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"\",\n \"page\": {\n  \"type\": \"nisi consectetur Duis\",\n  \"size\": 99438810,\n  \"current\": 61214764,\n  \"has_next\": false,\n  \"item_total\": -87020406,\n  \"next_id\": \"enim magna\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a3f91aef-4651-44ff-a016-c2021f4ef0b0",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1955-12-17T02:29:44.304Z\",\n \"status\": 88854397,\n \"error\": \"proident\",\n \"exception\": \"non\",\n \"message\": \"laborum anim quis fugiat\",\n \"total_time_taken_in_millis\": -99992625,\n \"http_status\": \"501 NOT_IMPLEMENTED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"\",\n \"page\": {\n  \"type\": \"nisi consectetur Duis\",\n  \"size\": 99438810,\n  \"current\": 61214764,\n  \"has_next\": false,\n  \"item_total\": -87020406,\n  \"next_id\": \"enim magna\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "26e5d7a4-c6a6-4315-9dbf-7e9d68a594fb",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1955-12-17T02:29:44.304Z\",\n \"status\": 88854397,\n \"error\": \"proident\",\n \"exception\": \"non\",\n \"message\": \"laborum anim quis fugiat\",\n \"total_time_taken_in_millis\": -99992625,\n \"http_status\": \"501 NOT_IMPLEMENTED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"\",\n \"page\": {\n  \"type\": \"nisi consectetur Duis\",\n  \"size\": 99438810,\n  \"current\": 61214764,\n  \"has_next\": false,\n  \"item_total\": -87020406,\n  \"next_id\": \"enim magna\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "073dc146-2a90-4f8c-9054-06d7346be5e9",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1955-12-17T02:29:44.304Z\",\n \"status\": 88854397,\n \"error\": \"proident\",\n \"exception\": \"non\",\n \"message\": \"laborum anim quis fugiat\",\n \"total_time_taken_in_millis\": -99992625,\n \"http_status\": \"501 NOT_IMPLEMENTED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"\",\n \"page\": {\n  \"type\": \"nisi consectetur Duis\",\n  \"size\": 99438810,\n  \"current\": 61214764,\n  \"has_next\": false,\n  \"item_total\": -87020406,\n  \"next_id\": \"enim magna\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c50ada17-61a2-44b6-8549-4b66641d9712",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1955-12-17T02:29:44.304Z\",\n \"status\": 88854397,\n \"error\": \"proident\",\n \"exception\": \"non\",\n \"message\": \"laborum anim quis fugiat\",\n \"total_time_taken_in_millis\": -99992625,\n \"http_status\": \"501 NOT_IMPLEMENTED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"\",\n \"page\": {\n  \"type\": \"nisi consectetur Duis\",\n  \"size\": 99438810,\n  \"current\": 61214764,\n  \"has_next\": false,\n  \"item_total\": -87020406,\n  \"next_id\": \"enim magna\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx1.de"
    }
  ],
  "info": {
    "_postman_id": "af50edb5-b1f7-483a-857e-1b5f024d3a96",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
