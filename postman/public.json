{
  "item": [
    {
      "id": "254176ef-bde0-4c3e-ba74-37a8826a7803",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "efb2eadf-20f2-41d0-a072-5400e9afc9c4",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "ebd3cad9-c145-42f1-805d-f66c5db213d3",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "a",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"application\": {\n    \"website\": {\n      \"enabled\": true,\n      \"basepath\": \"/\"\n    },\n    \"cors\": {\n      \"domains\": []\n    },\n    \"auth\": {\n      \"enabled\": true\n    },\n    \"description\": \"test\",\n    \"channel_type\": \"store\",\n    \"cache_ttl\": -1,\n    \"internal\": false,\n    \"is_active\": true,\n    \"mode\": \"live\",\n    \"_id\": \"620b931ee7bfb11f910bf4a3\",\n    \"company_id\": 2,\n    \"name\": \"test\",\n    \"owner\": \"5b9b98150df588546aaea6d2\",\n    \"logo\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"favicon\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"banner\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n    },\n    \"token\": \"tPQv0nc23\",\n    \"tokens\": [\n      {\n        \"token\": \"tPQv0nc23\",\n        \"created_at\": \"2022-02-15T11:48:46.909Z\"\n      }\n    ],\n    \"domains\": [\n      {\n        \"verified\": true,\n        \"is_primary\": true,\n        \"is_shortlink\": true,\n        \"_id\": \"620b931ee7bfb11f910bf4a4\",\n        \"name\": \"qckvv5lhp.hostfynd.dev\"\n      }\n    ],\n    \"redirections\": [],\n    \"meta\": [],\n    \"created_at\": \"2022-02-15T11:48:46.909Z\",\n    \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n    \"__v\": 0,\n    \"domain\": {\n      \"verified\": true,\n      \"is_primary\": true,\n      \"is_shortlink\": true,\n      \"_id\": \"620b931ee7bfb11f910bf4a4\",\n      \"name\": \"qckvv5lhp.hostfynd.dev\"\n    },\n    \"id\": \"620b931ee7bfb11f910bf4a3\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "cff9672a-11ea-4cce-924e-993cb8795f33",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "a",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"Invalid application domain or id.\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2cad3bcf-12ab-47b1-a2a9-bec49ac565ea",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "a",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"No application found\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b57d64cd-7f94-40be-adec-76f0f3268528",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "a8e659b3-d127-46d0-81cf-bb364ed26649",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "beb3c808-6186-4514-843f-96bba7930fed",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "3616f582-c974-4173-9c5a-fda059da4176",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "7b253147-3813-408e-b468-b1f13208dc2a",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2008-01-13T17:00:19.730Z\",\n  \"status\": -10105445,\n  \"error\": \"non exercitation adipisicing sint qu\",\n  \"exception\": \"dolo\",\n  \"message\": \"officia conseq\",\n  \"total_time_taken_in_millis\": -57568059,\n  \"http_status\": \"425 TOO_EARLY\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"tempor dolor laborum cupidatat esse\",\n  \"page\": {\n    \"type\": \"esse occaecat irure\",\n    \"item_total\": -55656443,\n    \"next_id\": \"commodo amet\",\n    \"has_previous\": true,\n    \"has_next\": true,\n    \"current\": 42152969,\n    \"size\": -37045043\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3af31110-c31c-4fb4-bd56-97ff7311a60e",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2008-01-13T17:00:19.730Z\",\n  \"status\": -10105445,\n  \"error\": \"non exercitation adipisicing sint qu\",\n  \"exception\": \"dolo\",\n  \"message\": \"officia conseq\",\n  \"total_time_taken_in_millis\": -57568059,\n  \"http_status\": \"425 TOO_EARLY\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"tempor dolor laborum cupidatat esse\",\n  \"page\": {\n    \"type\": \"esse occaecat irure\",\n    \"item_total\": -55656443,\n    \"next_id\": \"commodo amet\",\n    \"has_previous\": true,\n    \"has_next\": true,\n    \"current\": 42152969,\n    \"size\": -37045043\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "58d11460-3d62-4c4f-808a-2937c5b96bdf",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2008-01-13T17:00:19.730Z\",\n  \"status\": -10105445,\n  \"error\": \"non exercitation adipisicing sint qu\",\n  \"exception\": \"dolo\",\n  \"message\": \"officia conseq\",\n  \"total_time_taken_in_millis\": -57568059,\n  \"http_status\": \"425 TOO_EARLY\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"tempor dolor laborum cupidatat esse\",\n  \"page\": {\n    \"type\": \"esse occaecat irure\",\n    \"item_total\": -55656443,\n    \"next_id\": \"commodo amet\",\n    \"has_previous\": true,\n    \"has_next\": true,\n    \"current\": 42152969,\n    \"size\": -37045043\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "cd0ebf37-d08e-49d1-8801-d8b74d32e72f",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "6e50cf95-b560-4fdd-a346-3126b619dd94",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1995-06-01T05:25:32.653Z\",\n  \"status\": 15973074,\n  \"error\": \"s\",\n  \"exception\": \"cupidatat\",\n  \"message\": \"eu\",\n  \"total_time_taken_in_millis\": 74827476,\n  \"http_status\": \"300 MULTIPLE_CHOICES\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"aliquip labore velit nostrud\",\n  \"page\": {\n    \"type\": \"fugiat reprehenderit\",\n    \"item_total\": -1583925,\n    \"next_id\": \"officia enim Excepteur\",\n    \"has_previous\": false,\n    \"has_next\": false,\n    \"current\": 61764274,\n    \"size\": 4710444\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1d64183f-25a6-4435-a10b-d22a4a626931",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1995-06-01T05:25:32.653Z\",\n  \"status\": 15973074,\n  \"error\": \"s\",\n  \"exception\": \"cupidatat\",\n  \"message\": \"eu\",\n  \"total_time_taken_in_millis\": 74827476,\n  \"http_status\": \"300 MULTIPLE_CHOICES\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"aliquip labore velit nostrud\",\n  \"page\": {\n    \"type\": \"fugiat reprehenderit\",\n    \"item_total\": -1583925,\n    \"next_id\": \"officia enim Excepteur\",\n    \"has_previous\": false,\n    \"has_next\": false,\n    \"current\": 61764274,\n    \"size\": 4710444\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2831e963-c113-4818-8309-ff72ecefb9d8",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1995-06-01T05:25:32.653Z\",\n  \"status\": 15973074,\n  \"error\": \"s\",\n  \"exception\": \"cupidatat\",\n  \"message\": \"eu\",\n  \"total_time_taken_in_millis\": 74827476,\n  \"http_status\": \"300 MULTIPLE_CHOICES\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"aliquip labore velit nostrud\",\n  \"page\": {\n    \"type\": \"fugiat reprehenderit\",\n    \"item_total\": -1583925,\n    \"next_id\": \"officia enim Excepteur\",\n    \"has_previous\": false,\n    \"has_next\": false,\n    \"current\": 61764274,\n    \"size\": 4710444\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ee8f63ed-c231-43b7-8c7c-376d3bfc602b",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1995-06-01T05:25:32.653Z\",\n  \"status\": 15973074,\n  \"error\": \"s\",\n  \"exception\": \"cupidatat\",\n  \"message\": \"eu\",\n  \"total_time_taken_in_millis\": 74827476,\n  \"http_status\": \"300 MULTIPLE_CHOICES\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"aliquip labore velit nostrud\",\n  \"page\": {\n    \"type\": \"fugiat reprehenderit\",\n    \"item_total\": -1583925,\n    \"next_id\": \"officia enim Excepteur\",\n    \"has_previous\": false,\n    \"has_next\": false,\n    \"current\": 61764274,\n    \"size\": 4710444\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3c4c7281-a330-46a4-82a9-1ea74299b644",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1995-06-01T05:25:32.653Z\",\n  \"status\": 15973074,\n  \"error\": \"s\",\n  \"exception\": \"cupidatat\",\n  \"message\": \"eu\",\n  \"total_time_taken_in_millis\": 74827476,\n  \"http_status\": \"300 MULTIPLE_CHOICES\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"aliquip labore velit nostrud\",\n  \"page\": {\n    \"type\": \"fugiat reprehenderit\",\n    \"item_total\": -1583925,\n    \"next_id\": \"officia enim Excepteur\",\n    \"has_previous\": false,\n    \"has_next\": false,\n    \"current\": 61764274,\n    \"size\": 4710444\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "a9215540-9494-4a26-8611-1ac2f4f7a227",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "1b791bd5-5b60-4b99-a543-cda300659706",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2000-04-27T19:15:30.080Z\",\n  \"status\": 4141717,\n  \"error\": \"Lorem nostrud\",\n  \"exception\": \"quis enim ut\",\n  \"message\": \"aliquip anim ullamco\",\n  \"total_time_taken_in_millis\": 85604607,\n  \"http_status\": \"406 NOT_ACCEPTABLE\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"incididunt\",\n      \"description\": \"cillum fugiat elit\",\n      \"name\": \"proident eiusmod consectetur anim in\",\n      \"slug\": \"eiusmod quis\",\n      \"meta\": [\n        {\n          \"_id\": \"consectetur sit\",\n          \"name\": \"laborum anim v\",\n          \"value\": \"Ut\"\n        },\n        {\n          \"_id\": \"sint ipsum ut est\",\n          \"name\": \"deserunt\",\n          \"value\": \"cupidatat exercitation do\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"commodo consectetur\",\n        \"integration\": \"exercitation irure sunt\",\n        \"level\": \"sit in\",\n        \"uid\": 31493882,\n        \"opted\": false,\n        \"permissions\": [\n          \"dolor\",\n          \"dolor ipsum voluptate\"\n        ],\n        \"token\": \"cillum non in\",\n        \"name\": \"exercitation fugiat\",\n        \"stores\": [\n          {\n            \"_id\": \"tempor voluptate\",\n            \"integration\": \"elit quis laboris Ut\",\n            \"level\": \"labore incididunt ea amet velit\",\n            \"uid\": -31883875,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"proident Excepteur\",\n            \"code\": \"dolore quis velit\",\n            \"name\": \"labore magna nostrud nulla\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"sit in\",\n            \"integration\": \"ex sint ad\",\n            \"level\": \"commodo culpa exercitation Ut\",\n            \"uid\": 65374526,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"Lorem sint culpa\",\n            \"code\": \"tempor dolor sunt\",\n            \"name\": \"quis labore\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"elit\",\n        \"integration\": \"dol\",\n        \"level\": \"id in dolor\",\n        \"uid\": 54251320,\n        \"opted\": false,\n        \"permissions\": [\n          \"non ipsum labore reprehenderit\",\n          \"sit irure sint\"\n        ],\n        \"token\": \"aliqua enim\",\n        \"name\": \"in aute adipisicing\",\n        \"stores\": [\n          {\n            \"_id\": \"id in consequat tempor\",\n            \"integration\": \"consectetur d\",\n            \"level\": \"occaecat nulla aliquip\",\n            \"uid\": 81749103,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ad nisi dolor\",\n            \"code\": \"ea dolore officia\",\n            \"name\": \"sint Lorem id voluptate\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"dolore ex\",\n            \"integration\": \"cillum\",\n            \"level\": \"au\",\n            \"uid\": 16973912,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"adipisicing Lorem\",\n            \"code\": \"cillum irure commodo sed eiusmod\",\n            \"name\": \"fugiat dolor id\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"voluptate Lorem minim esse\",\n      \"description\": \"in sed\",\n      \"name\": \"et eu Excepteur\",\n      \"slug\": \"minim veniam\",\n      \"meta\": [\n        {\n          \"_id\": \"enim cupidatat\",\n          \"name\": \"amet\",\n          \"value\": \"dolore ea\"\n        },\n        {\n          \"_id\": \"anim non reprehenderit in\",\n          \"name\": \"quis magna\",\n          \"value\": \"reprehen\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"veniam do nulla laborum\",\n        \"integration\": \"minim officia\",\n        \"level\": \"Ut \",\n        \"uid\": -34091231,\n        \"opted\": true,\n        \"permissions\": [\n          \"tempor culpa\",\n          \"aliquip\"\n        ],\n        \"token\": \"ea ipsum\",\n        \"name\": \"occaecat amet\",\n        \"stores\": [\n          {\n            \"_id\": \"sint elit id officia\",\n            \"integration\": \"amet laboris ea\",\n            \"level\": \"eu fugiat\",\n            \"uid\": -11335903,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"Duis veniam enim magna\",\n            \"code\": \"eu voluptate non Lorem\",\n            \"name\": \"tempor laboris ut proident\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"quis id incididunt\",\n            \"integration\": \"elit amet ea aute\",\n            \"level\": \"aute culpa magna cillum\",\n            \"uid\": 4088954,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"sed\",\n            \"code\": \"amet laboris ut cupidatat\",\n            \"name\": \"in Excepteur Duis\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"aliqua voluptate mollit\",\n        \"integration\": \"qui in voluptate ipsum\",\n        \"level\": \"officia anim\",\n        \"uid\": 54387630,\n        \"opted\": false,\n        \"permissions\": [\n          \"incididunt anim\",\n          \"eiusmod\"\n        ],\n        \"token\": \"pariatur elit\",\n        \"name\": \"velit pariatur nostrud consequat fugiat\",\n        \"stores\": [\n          {\n            \"_id\": \"adipisicing ullamco incididunt dolor\",\n            \"integration\": \"incididunt dolore eu sit\",\n            \"level\": \"magna Duis velit esse\",\n            \"uid\": 13642687,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"dolore laboris \",\n            \"code\": \"anim aliquip tempor in\",\n            \"name\": \"sed\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"quis minim Lorem\",\n            \"integration\": \"anim magna\",\n            \"level\": \"sunt in v\",\n            \"uid\": -17035580,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ad aliqua\",\n            \"code\": \"ipsum dolor in amet\",\n            \"name\": \"elit et in eu\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"est consequat Lorem Excepteur\",\n  \"page\": {\n    \"type\": \"mini\",\n    \"item_total\": -87048434,\n    \"next_id\": \"irure exercitation esse aliquip\",\n    \"has_previous\": true,\n    \"has_next\": true,\n    \"current\": -80487929,\n    \"size\": -60822700\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "bc579b98-0786-4b62-8cd5-eb7fddbf92e5",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2018-02-16T21:34:22.959Z\",\n  \"status\": 72683234,\n  \"error\": \"aliqua culpa\",\n  \"exception\": \"irure pariatur aute\",\n  \"message\": \"ex voluptate do si\",\n  \"total_time_taken_in_millis\": 31679161,\n  \"http_status\": \"502 BAD_GATEWAY\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"dolore laboris id aliqua minim\",\n      \"description\": \"fugiat sit non exercitation\",\n      \"name\": \"cupidatat occaecat\",\n      \"slug\": \"sit aliquip\",\n      \"meta\": [\n        {\n          \"_id\": \"commodo amet\",\n          \"name\": \"cillum sunt dolore eius\",\n          \"value\": \"eu nostrud ut\"\n        },\n        {\n          \"_id\": \"tempor nisi Duis do\",\n          \"name\": \"dolor\",\n          \"value\": \"non dolore\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"amet aliquip\",\n        \"integration\": \"et do dolor non\",\n        \"level\": \"quis fugiat aliquip\",\n        \"uid\": -16621007,\n        \"opted\": false,\n        \"permissions\": [\n          \"labore eni\",\n          \"ad\"\n        ],\n        \"token\": \"deserunt\",\n        \"name\": \"enim quis\",\n        \"stores\": [\n          {\n            \"_id\": \"ut\",\n            \"integration\": \"aliqua consectetur Ut nisi\",\n            \"level\": \"veniam consequat nisi\",\n            \"uid\": -33333679,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"Excepteur amet velit\",\n            \"code\": \"in dolore enim laboris\",\n            \"name\": \"ex mollit occaecat eiusmod veniam\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"dolore culpa\",\n            \"integration\": \"consequat ipsum eiusmod\",\n            \"level\": \"anim\",\n            \"uid\": 18507312,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"enim\",\n            \"code\": \"qui ut\",\n            \"name\": \"sint esse dolor qui in\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"id labore commodo Ut anim\",\n        \"integration\": \"pariatur in\",\n        \"level\": \"non nisi fugiat Excepteur\",\n        \"uid\": -27338757,\n        \"opted\": false,\n        \"permissions\": [\n          \"aliquip ut\",\n          \"in Excepteur sed dolor\"\n        ],\n        \"token\": \"qui consectetur \",\n        \"name\": \"fugiat\",\n        \"stores\": [\n          {\n            \"_id\": \"sint et Ut dolore\",\n            \"integration\": \"mollit Lorem sit occaecat\",\n            \"level\": \"eli\",\n            \"uid\": -56426164,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ut deserunt aliqua\",\n            \"code\": \"proident aliquip magna\",\n            \"name\": \"aliqua sit non sunt\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"nostrud ullamco est consectetur\",\n            \"integration\": \"commodo\",\n            \"level\": \"mollit ullamco\",\n            \"uid\": -1757827,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"dolore reprehenderi\",\n            \"code\": \"in occaecat\",\n            \"name\": \"amet occaecat in\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"cupidatat veniam ullamco\",\n      \"description\": \"occaecat minim culpa velit\",\n      \"name\": \"irure\",\n      \"slug\": \"cupidatat commodo do\",\n      \"meta\": [\n        {\n          \"_id\": \"dolor eiusmod in nulla\",\n          \"name\": \"magna et Excepteur officia\",\n          \"value\": \"voluptate\"\n        },\n        {\n          \"_id\": \"dolore voluptate\",\n          \"name\": \"in ut pro\",\n          \"value\": \"ex officia labore\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"consectetur enim\",\n        \"integration\": \"fugiat veniam irure labore\",\n        \"level\": \"laboris est ad\",\n        \"uid\": 28829384,\n        \"opted\": false,\n        \"permissions\": [\n          \"esse eius\",\n          \"Ut minim ex laborum\"\n        ],\n        \"token\": \"ut nulla\",\n        \"name\": \"fugiat\",\n        \"stores\": [\n          {\n            \"_id\": \"minim in dolore\",\n            \"integration\": \"nostrud n\",\n            \"level\": \"exercitation id nostrud\",\n            \"uid\": -14863001,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"adi\",\n            \"code\": \"ipsum in\",\n            \"name\": \"est nulla Ut occaecat\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"nisi ex ut nostrud\",\n            \"integration\": \"esse amet laboris ad labore\",\n            \"level\": \"consequat aliquip aliqua qui ut\",\n            \"uid\": -5988724,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"proident ut quis\",\n            \"code\": \"quis\",\n            \"name\": \"ullamco sint ut culpa ea\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"adipisicing velit\",\n        \"integration\": \"qui aliquip\",\n        \"level\": \"ut aute amet ut ea\",\n        \"uid\": 93650633,\n        \"opted\": false,\n        \"permissions\": [\n          \"ad in ut\",\n          \"in\"\n        ],\n        \"token\": \"eu elit fugiat labor\",\n        \"name\": \"Duis cillum labore\",\n        \"stores\": [\n          {\n            \"_id\": \"reprehenderit adipisicing\",\n            \"integration\": \"aliquip tempor commodo\",\n            \"level\": \"fugiat anim\",\n            \"uid\": 96656709,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ut\",\n            \"code\": \"Excepteur enim\",\n            \"name\": \"proident minim aliquip anim\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"voluptate in quis\",\n            \"integration\": \"est incididunt in et\",\n            \"level\": \"enim dolor in aliqua\",\n            \"uid\": -60146125,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ad ullamco in commodo\",\n            \"code\": \"mollit nulla\",\n            \"name\": \"et aliquip dolore\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"reprehenderit eiusmod veniam\",\n  \"page\": {\n    \"type\": \"incididunt repreh\",\n    \"item_total\": 52738751,\n    \"next_id\": \"magna cillum\",\n    \"has_previous\": true,\n    \"has_next\": true,\n    \"current\": 93504831,\n    \"size\": 67250750\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1d8e392f-8f23-44b3-84c1-739e9e235127",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2018-02-16T21:34:22.959Z\",\n  \"status\": 72683234,\n  \"error\": \"aliqua culpa\",\n  \"exception\": \"irure pariatur aute\",\n  \"message\": \"ex voluptate do si\",\n  \"total_time_taken_in_millis\": 31679161,\n  \"http_status\": \"502 BAD_GATEWAY\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"dolore laboris id aliqua minim\",\n      \"description\": \"fugiat sit non exercitation\",\n      \"name\": \"cupidatat occaecat\",\n      \"slug\": \"sit aliquip\",\n      \"meta\": [\n        {\n          \"_id\": \"commodo amet\",\n          \"name\": \"cillum sunt dolore eius\",\n          \"value\": \"eu nostrud ut\"\n        },\n        {\n          \"_id\": \"tempor nisi Duis do\",\n          \"name\": \"dolor\",\n          \"value\": \"non dolore\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"amet aliquip\",\n        \"integration\": \"et do dolor non\",\n        \"level\": \"quis fugiat aliquip\",\n        \"uid\": -16621007,\n        \"opted\": false,\n        \"permissions\": [\n          \"labore eni\",\n          \"ad\"\n        ],\n        \"token\": \"deserunt\",\n        \"name\": \"enim quis\",\n        \"stores\": [\n          {\n            \"_id\": \"ut\",\n            \"integration\": \"aliqua consectetur Ut nisi\",\n            \"level\": \"veniam consequat nisi\",\n            \"uid\": -33333679,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"Excepteur amet velit\",\n            \"code\": \"in dolore enim laboris\",\n            \"name\": \"ex mollit occaecat eiusmod veniam\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"dolore culpa\",\n            \"integration\": \"consequat ipsum eiusmod\",\n            \"level\": \"anim\",\n            \"uid\": 18507312,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"enim\",\n            \"code\": \"qui ut\",\n            \"name\": \"sint esse dolor qui in\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"id labore commodo Ut anim\",\n        \"integration\": \"pariatur in\",\n        \"level\": \"non nisi fugiat Excepteur\",\n        \"uid\": -27338757,\n        \"opted\": false,\n        \"permissions\": [\n          \"aliquip ut\",\n          \"in Excepteur sed dolor\"\n        ],\n        \"token\": \"qui consectetur \",\n        \"name\": \"fugiat\",\n        \"stores\": [\n          {\n            \"_id\": \"sint et Ut dolore\",\n            \"integration\": \"mollit Lorem sit occaecat\",\n            \"level\": \"eli\",\n            \"uid\": -56426164,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ut deserunt aliqua\",\n            \"code\": \"proident aliquip magna\",\n            \"name\": \"aliqua sit non sunt\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"nostrud ullamco est consectetur\",\n            \"integration\": \"commodo\",\n            \"level\": \"mollit ullamco\",\n            \"uid\": -1757827,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"dolore reprehenderi\",\n            \"code\": \"in occaecat\",\n            \"name\": \"amet occaecat in\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"cupidatat veniam ullamco\",\n      \"description\": \"occaecat minim culpa velit\",\n      \"name\": \"irure\",\n      \"slug\": \"cupidatat commodo do\",\n      \"meta\": [\n        {\n          \"_id\": \"dolor eiusmod in nulla\",\n          \"name\": \"magna et Excepteur officia\",\n          \"value\": \"voluptate\"\n        },\n        {\n          \"_id\": \"dolore voluptate\",\n          \"name\": \"in ut pro\",\n          \"value\": \"ex officia labore\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"consectetur enim\",\n        \"integration\": \"fugiat veniam irure labore\",\n        \"level\": \"laboris est ad\",\n        \"uid\": 28829384,\n        \"opted\": false,\n        \"permissions\": [\n          \"esse eius\",\n          \"Ut minim ex laborum\"\n        ],\n        \"token\": \"ut nulla\",\n        \"name\": \"fugiat\",\n        \"stores\": [\n          {\n            \"_id\": \"minim in dolore\",\n            \"integration\": \"nostrud n\",\n            \"level\": \"exercitation id nostrud\",\n            \"uid\": -14863001,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"adi\",\n            \"code\": \"ipsum in\",\n            \"name\": \"est nulla Ut occaecat\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"nisi ex ut nostrud\",\n            \"integration\": \"esse amet laboris ad labore\",\n            \"level\": \"consequat aliquip aliqua qui ut\",\n            \"uid\": -5988724,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"proident ut quis\",\n            \"code\": \"quis\",\n            \"name\": \"ullamco sint ut culpa ea\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"adipisicing velit\",\n        \"integration\": \"qui aliquip\",\n        \"level\": \"ut aute amet ut ea\",\n        \"uid\": 93650633,\n        \"opted\": false,\n        \"permissions\": [\n          \"ad in ut\",\n          \"in\"\n        ],\n        \"token\": \"eu elit fugiat labor\",\n        \"name\": \"Duis cillum labore\",\n        \"stores\": [\n          {\n            \"_id\": \"reprehenderit adipisicing\",\n            \"integration\": \"aliquip tempor commodo\",\n            \"level\": \"fugiat anim\",\n            \"uid\": 96656709,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ut\",\n            \"code\": \"Excepteur enim\",\n            \"name\": \"proident minim aliquip anim\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"voluptate in quis\",\n            \"integration\": \"est incididunt in et\",\n            \"level\": \"enim dolor in aliqua\",\n            \"uid\": -60146125,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ad ullamco in commodo\",\n            \"code\": \"mollit nulla\",\n            \"name\": \"et aliquip dolore\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"reprehenderit eiusmod veniam\",\n  \"page\": {\n    \"type\": \"incididunt repreh\",\n    \"item_total\": 52738751,\n    \"next_id\": \"magna cillum\",\n    \"has_previous\": true,\n    \"has_next\": true,\n    \"current\": 93504831,\n    \"size\": 67250750\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "7e00e3fd-a837-409c-aacd-cadce526cd8f",
          "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
          "request": {
            "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "d236ea99-ebfb-47fc-b9d0-795a415af621",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1968-03-25T20:22:20.736Z\",\n  \"status\": -77862148,\n  \"error\": \"nostrud Lorem\",\n  \"exception\": \"aliqua\",\n  \"message\": \"cillum nulla\",\n  \"total_time_taken_in_millis\": 77556714,\n  \"http_status\": \"403 FORBIDDEN\",\n  \"items\": {\n    \"session_id\": \"reprehenderit laborum\",\n    \"error_message\": \"consequat tempor non\"\n  },\n  \"payload\": {\n    \"session_id\": \"ad culpa cupidatat enim\",\n    \"error_message\": \"irure non id ex\"\n  },\n  \"trace_id\": \"consectetur velit\",\n  \"page\": {\n    \"type\": \"ut fugiat\",\n    \"item_total\": -61972941,\n    \"next_id\": \"nisi l\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 75610919,\n    \"size\": -90483546\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a4230b5f-8d5e-4e76-8162-a8d7375a97b1",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1968-03-25T20:22:20.736Z\",\n  \"status\": -77862148,\n  \"error\": \"nostrud Lorem\",\n  \"exception\": \"aliqua\",\n  \"message\": \"cillum nulla\",\n  \"total_time_taken_in_millis\": 77556714,\n  \"http_status\": \"403 FORBIDDEN\",\n  \"items\": {\n    \"session_id\": \"reprehenderit laborum\",\n    \"error_message\": \"consequat tempor non\"\n  },\n  \"payload\": {\n    \"session_id\": \"ad culpa cupidatat enim\",\n    \"error_message\": \"irure non id ex\"\n  },\n  \"trace_id\": \"consectetur velit\",\n  \"page\": {\n    \"type\": \"ut fugiat\",\n    \"item_total\": -61972941,\n    \"next_id\": \"nisi l\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 75610919,\n    \"size\": -90483546\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b635d1c0-e28e-47cc-98e5-5c8b100a5f11",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1968-03-25T20:22:20.736Z\",\n  \"status\": -77862148,\n  \"error\": \"nostrud Lorem\",\n  \"exception\": \"aliqua\",\n  \"message\": \"cillum nulla\",\n  \"total_time_taken_in_millis\": 77556714,\n  \"http_status\": \"403 FORBIDDEN\",\n  \"items\": {\n    \"session_id\": \"reprehenderit laborum\",\n    \"error_message\": \"consequat tempor non\"\n  },\n  \"payload\": {\n    \"session_id\": \"ad culpa cupidatat enim\",\n    \"error_message\": \"irure non id ex\"\n  },\n  \"trace_id\": \"consectetur velit\",\n  \"page\": {\n    \"type\": \"ut fugiat\",\n    \"item_total\": -61972941,\n    \"next_id\": \"nisi l\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 75610919,\n    \"size\": -90483546\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "878518bd-88a9-4142-aa21-96ce030804a8",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "81f04d6e-9405-4dd4-a04c-69d11bfdaff4",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1961-08-09T07:04:15.493Z\",\n  \"status\": -16695041,\n  \"error\": \"elit aute aliqua \",\n  \"exception\": \"mollit anim\",\n  \"message\": \"proident exercitation\",\n  \"total_time_taken_in_millis\": -65688598,\n  \"http_status\": \"305 USE_PROXY\",\n  \"items\": {\n    \"company_id\": 61830848,\n    \"integration_data\": {\n      \"in_91\": {}\n    },\n    \"company_name\": \"id irure minim voluptate\",\n    \"task_details\": {\n      \"type\": -98139323,\n      \"group_list\": [\n        {\n          \"text\": \"tempor v\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"consectetur est cillum\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 25353412.666899905,\n      \"safe_stock\": 55598665,\n      \"period_threshold\": -80290210,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"nisi\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"veniam in dolor\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"ut\",\n    \"alias\": \"nisi aliqu\"\n  },\n  \"payload\": {\n    \"company_id\": 5532942,\n    \"integration_data\": {\n      \"minimd_\": {},\n      \"veniam_1\": {}\n    },\n    \"company_name\": \"amet ipsum\",\n    \"task_details\": {\n      \"type\": 98546697,\n      \"group_list\": [\n        {\n          \"text\": \"anim proident dolor sed\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"ipsum\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -51440099.828456365,\n      \"safe_stock\": -90293683,\n      \"period_threshold\": -16071832,\n      \"period_threshold_type\": \"MONTHS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"ea ullamco sunt sed Duis\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"nostrud adipisi\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"do esse officia incididunt\",\n    \"alias\": \"velit incididunt ut non in\"\n  },\n  \"trace_id\": \"repr\",\n  \"page\": {\n    \"type\": \"pariatur sit\",\n    \"item_total\": 99302956,\n    \"next_id\": \"exercitation commodo\",\n    \"has_previous\": true,\n    \"has_next\": true,\n    \"current\": -65183220,\n    \"size\": -42893133\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a1b6cbc2-b608-40f2-baae-35bf551cc920",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2016-03-02T14:29:09.509Z\",\n  \"status\": 39274238,\n  \"error\": \"id sint in\",\n  \"exception\": \"dolor commodo\",\n  \"message\": \"officia exercitation non\",\n  \"total_time_taken_in_millis\": 97970156,\n  \"http_status\": \"403 FORBIDDEN\",\n  \"items\": {\n    \"company_id\": 19315932,\n    \"integration_data\": {\n      \"ut74\": {},\n      \"aliquip62\": {},\n      \"mollit_25\": {},\n      \"nostrud893\": {}\n    },\n    \"company_name\": \"proident qui magna ullamco\",\n    \"task_details\": {\n      \"type\": -36546420,\n      \"group_list\": [\n        {\n          \"text\": \"Duis aliqua c\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"exercitation officia aute\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 42733142.74897185,\n      \"safe_stock\": 71680547,\n      \"period_threshold\": -86833005,\n      \"period_threshold_type\": \"HOURS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"anim Lorem\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"s\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"dolore magna\",\n    \"alias\": \"id velit\"\n  },\n  \"payload\": {\n    \"company_id\": -56429588,\n    \"integration_data\": {\n      \"dolore1\": {},\n      \"veniam_e6e\": {}\n    },\n    \"company_name\": \"cupidatat in Ut ex\",\n    \"task_details\": {\n      \"type\": 88743605,\n      \"group_list\": [\n        {\n          \"text\": \"sunt dolor amet cupidatat\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"officia\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -50508504.04454388,\n      \"safe_stock\": -93240189,\n      \"period_threshold\": 53817200,\n      \"period_threshold_type\": \"MONTHS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"irure exercitation ea\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"dolor aliquip\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"proident\",\n    \"alias\": \"laboris est magna\"\n  },\n  \"trace_id\": \"incididunt exercitation \",\n  \"page\": {\n    \"type\": \"cillum dolor aliqua ea\",\n    \"item_total\": -76304316,\n    \"next_id\": \"Ut et ut labore proident\",\n    \"has_previous\": false,\n    \"has_next\": true,\n    \"current\": 15830714,\n    \"size\": 32794813\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1ff7b9f6-75c6-41d5-b72e-6c716f6760e2",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2016-03-02T14:29:09.509Z\",\n  \"status\": 39274238,\n  \"error\": \"id sint in\",\n  \"exception\": \"dolor commodo\",\n  \"message\": \"officia exercitation non\",\n  \"total_time_taken_in_millis\": 97970156,\n  \"http_status\": \"403 FORBIDDEN\",\n  \"items\": {\n    \"company_id\": 19315932,\n    \"integration_data\": {\n      \"ut74\": {},\n      \"aliquip62\": {},\n      \"mollit_25\": {},\n      \"nostrud893\": {}\n    },\n    \"company_name\": \"proident qui magna ullamco\",\n    \"task_details\": {\n      \"type\": -36546420,\n      \"group_list\": [\n        {\n          \"text\": \"Duis aliqua c\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"exercitation officia aute\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 42733142.74897185,\n      \"safe_stock\": 71680547,\n      \"period_threshold\": -86833005,\n      \"period_threshold_type\": \"HOURS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"anim Lorem\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"s\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"dolore magna\",\n    \"alias\": \"id velit\"\n  },\n  \"payload\": {\n    \"company_id\": -56429588,\n    \"integration_data\": {\n      \"dolore1\": {},\n      \"veniam_e6e\": {}\n    },\n    \"company_name\": \"cupidatat in Ut ex\",\n    \"task_details\": {\n      \"type\": 88743605,\n      \"group_list\": [\n        {\n          \"text\": \"sunt dolor amet cupidatat\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"officia\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -50508504.04454388,\n      \"safe_stock\": -93240189,\n      \"period_threshold\": 53817200,\n      \"period_threshold_type\": \"MONTHS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"irure exercitation ea\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"dolor aliquip\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"proident\",\n    \"alias\": \"laboris est magna\"\n  },\n  \"trace_id\": \"incididunt exercitation \",\n  \"page\": {\n    \"type\": \"cillum dolor aliqua ea\",\n    \"item_total\": -76304316,\n    \"next_id\": \"Ut et ut labore proident\",\n    \"has_previous\": false,\n    \"has_next\": true,\n    \"current\": 15830714,\n    \"size\": 32794813\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "81f03850-e023-4427-9f4b-52964a96fde9",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "71fa69c2-da54-46ba-8178-d8ed2180f5ab",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1984-06-11T09:55:55.527Z\",\n  \"status\": 91216602,\n  \"error\": \"eu dolore tempor\",\n  \"exception\": \"nisi au\",\n  \"message\": \"eiusmod dolor anim\",\n  \"total_time_taken_in_millis\": -27281466,\n  \"http_status\": \"201 CREATED\",\n  \"items\": [\n    {\n      \"company_id\": 98199928,\n      \"integration_data\": {\n        \"ut_f\": {},\n        \"exercitation_27\": {}\n      },\n      \"company_name\": \"ut Duis pariatur elit\",\n      \"task_details\": {\n        \"type\": 99178682,\n        \"group_list\": [\n          {\n            \"text\": \"do ipsum ea ut Ut\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"et est sed exercitation\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 50995552.108014464,\n        \"safe_stock\": -40599221,\n        \"period_threshold\": -21427049,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"sunt Ut\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"consequat Lore\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"voluptate\",\n      \"alias\": \"nostrud est fugi\"\n    },\n    {\n      \"company_id\": -27009043,\n      \"integration_data\": {\n        \"dolore9\": {},\n        \"dolore_c\": {},\n        \"veniam_150\": {},\n        \"ut__\": {}\n      },\n      \"company_name\": \"veniam labore magna\",\n      \"task_details\": {\n        \"type\": 43804271,\n        \"group_list\": [\n          {\n            \"text\": \"Duis ea officia magna\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"mollit\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -291933.84995278716,\n        \"safe_stock\": -34493192,\n        \"period_threshold\": -62994490,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"eiusmod commodo\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"tempor\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"ullamco\",\n      \"alias\": \"cillum adipisicing do ad\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": -8806901,\n      \"integration_data\": {\n        \"Excepteur24\": {},\n        \"anim_e0\": {},\n        \"consequat7\": {}\n      },\n      \"company_name\": \"sed\",\n      \"task_details\": {\n        \"type\": 95732700,\n        \"group_list\": [\n          {\n            \"text\": \"occaecat dolore ex\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"veniam eiusmod ut sunt Duis\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -2924037.4789421856,\n        \"safe_stock\": 76904310,\n        \"period_threshold\": 36938559,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"reprehenderit nisi dolor\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"in elit labor\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"ex nulla velit\",\n      \"alias\": \"aliquip\"\n    },\n    {\n      \"company_id\": -98499525,\n      \"integration_data\": {\n        \"eu61\": {},\n        \"pariatur_a1\": {},\n        \"Duis_88\": {}\n      },\n      \"company_name\": \"sed nulla et\",\n      \"task_details\": {\n        \"type\": 76335324,\n        \"group_list\": [\n          {\n            \"text\": \"deserunt ipsum aliqua\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"est minim exercitation dolore\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -28789875.554790094,\n        \"safe_stock\": -6677850,\n        \"period_threshold\": -58848856,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"dolor eu\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"adipisicing irure laboris\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"elit laboris\",\n      \"alias\": \"tempor ut in sint eiusmod\"\n    }\n  ],\n  \"trace_id\": \"ex ut ut sit\",\n  \"page\": {\n    \"type\": \"sit ut velit reprehenderit\",\n    \"item_total\": -85584326,\n    \"next_id\": \"minim tempor dolo\",\n    \"has_previous\": true,\n    \"has_next\": true,\n    \"current\": -176854,\n    \"size\": -60721671\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "70da0f9b-c6b7-41bd-8a86-094e53d5fa81",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1976-01-12T22:15:27.604Z\",\n  \"status\": 47126554,\n  \"error\": \"consectetur Excepteur commodo\",\n  \"exception\": \"ipsum eu in culpa\",\n  \"message\": \"fugiat dolore cillum exercitation sit\",\n  \"total_time_taken_in_millis\": 40604868,\n  \"http_status\": \"425 TOO_EARLY\",\n  \"items\": [\n    {\n      \"company_id\": -89402397,\n      \"integration_data\": {\n        \"Duis_97b\": {}\n      },\n      \"company_name\": \"sed\",\n      \"task_details\": {\n        \"type\": 24126057,\n        \"group_list\": [\n          {\n            \"text\": \"elit ex\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ut enim dolore velit irure\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -18036144.47871737,\n        \"safe_stock\": 9759109,\n        \"period_threshold\": 23125432,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"in\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"aliquip commodo dolore\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"ut anim\",\n      \"alias\": \"sunt occaecat\"\n    },\n    {\n      \"company_id\": -58904417,\n      \"integration_data\": {\n        \"suntb\": {},\n        \"in_d\": {}\n      },\n      \"company_name\": \"cupidatat id deseru\",\n      \"task_details\": {\n        \"type\": 58304421,\n        \"group_list\": [\n          {\n            \"text\": \"deserunt ullamco enim officia labore\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"culpa\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 33281665.385335833,\n        \"safe_stock\": 61842416,\n        \"period_threshold\": 49256768,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"exercit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"commodo dolor deserunt\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"est sed incididunt dolor\",\n      \"alias\": \"in\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": -17867398,\n      \"integration_data\": {\n        \"ex_6e\": {}\n      },\n      \"company_name\": \"in aute\",\n      \"task_details\": {\n        \"type\": 79562933,\n        \"group_list\": [\n          {\n            \"text\": \"dolore sed\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"in veniam dolore\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -22063022.17782627,\n        \"safe_stock\": -8750981,\n        \"period_threshold\": 27491723,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"occaecat\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"culpa\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"aliqua eiusmod dolor\",\n      \"alias\": \"consequat nisi id nulla\"\n    },\n    {\n      \"company_id\": -67163266,\n      \"integration_data\": {\n        \"ad_7\": {}\n      },\n      \"company_name\": \"irure sit sint\",\n      \"task_details\": {\n        \"type\": 23615898,\n        \"group_list\": [\n          {\n            \"text\": \"sint non est aliquip\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"eiusmod ipsum\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -70056894.7379026,\n        \"safe_stock\": 28143981,\n        \"period_threshold\": 75584388,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"Excepteur incididunt sit cupidatat\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"occaecat nulla laborum esse\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"eu voluptate\",\n      \"alias\": \"adipisicing tempor\"\n    }\n  ],\n  \"trace_id\": \"reprehenderit velit\",\n  \"page\": {\n    \"type\": \"deserunt sunt proident magna Duis\",\n    \"item_total\": 16365626,\n    \"next_id\": \"veniam sed officia nostrud\",\n    \"has_previous\": true,\n    \"has_next\": true,\n    \"current\": -90782289,\n    \"size\": -61483266\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "6197b6a7-a56e-4005-8a44-8c4043db48b1",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1976-01-12T22:15:27.604Z\",\n  \"status\": 47126554,\n  \"error\": \"consectetur Excepteur commodo\",\n  \"exception\": \"ipsum eu in culpa\",\n  \"message\": \"fugiat dolore cillum exercitation sit\",\n  \"total_time_taken_in_millis\": 40604868,\n  \"http_status\": \"425 TOO_EARLY\",\n  \"items\": [\n    {\n      \"company_id\": -89402397,\n      \"integration_data\": {\n        \"Duis_97b\": {}\n      },\n      \"company_name\": \"sed\",\n      \"task_details\": {\n        \"type\": 24126057,\n        \"group_list\": [\n          {\n            \"text\": \"elit ex\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ut enim dolore velit irure\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -18036144.47871737,\n        \"safe_stock\": 9759109,\n        \"period_threshold\": 23125432,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"in\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"aliquip commodo dolore\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"ut anim\",\n      \"alias\": \"sunt occaecat\"\n    },\n    {\n      \"company_id\": -58904417,\n      \"integration_data\": {\n        \"suntb\": {},\n        \"in_d\": {}\n      },\n      \"company_name\": \"cupidatat id deseru\",\n      \"task_details\": {\n        \"type\": 58304421,\n        \"group_list\": [\n          {\n            \"text\": \"deserunt ullamco enim officia labore\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"culpa\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 33281665.385335833,\n        \"safe_stock\": 61842416,\n        \"period_threshold\": 49256768,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"exercit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"commodo dolor deserunt\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"est sed incididunt dolor\",\n      \"alias\": \"in\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": -17867398,\n      \"integration_data\": {\n        \"ex_6e\": {}\n      },\n      \"company_name\": \"in aute\",\n      \"task_details\": {\n        \"type\": 79562933,\n        \"group_list\": [\n          {\n            \"text\": \"dolore sed\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"in veniam dolore\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -22063022.17782627,\n        \"safe_stock\": -8750981,\n        \"period_threshold\": 27491723,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"occaecat\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"culpa\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"aliqua eiusmod dolor\",\n      \"alias\": \"consequat nisi id nulla\"\n    },\n    {\n      \"company_id\": -67163266,\n      \"integration_data\": {\n        \"ad_7\": {}\n      },\n      \"company_name\": \"irure sit sint\",\n      \"task_details\": {\n        \"type\": 23615898,\n        \"group_list\": [\n          {\n            \"text\": \"sint non est aliquip\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"eiusmod ipsum\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -70056894.7379026,\n        \"safe_stock\": 28143981,\n        \"period_threshold\": 75584388,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"Excepteur incididunt sit cupidatat\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"occaecat nulla laborum esse\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"eu voluptate\",\n      \"alias\": \"adipisicing tempor\"\n    }\n  ],\n  \"trace_id\": \"reprehenderit velit\",\n  \"page\": {\n    \"type\": \"deserunt sunt proident magna Duis\",\n    \"item_total\": 16365626,\n    \"next_id\": \"veniam sed officia nostrud\",\n    \"has_previous\": true,\n    \"has_next\": true,\n    \"current\": -90782289,\n    \"size\": -61483266\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "13b87f9e-85d7-46cd-9449-e5786a5ea24d",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "c25bd651-d932-4e4d-b234-fcc48416b753",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "f655773a-da2f-4c78-a00d-1a6c3a128206",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 80202167,\n      \"event_name\": \"ut commodo ut\",\n      \"event_type\": \"sed aute\",\n      \"event_category\": \"Excepteur\",\n      \"version\": \"mollit\",\n      \"display_name\": \"minim et mollit eu Excepteur\",\n      \"description\": \"do aliquip pariatur amet\",\n      \"created_on\": \"ex ad Duis\"\n    },\n    {\n      \"id\": 83486361,\n      \"event_name\": \"veniam magna ad\",\n      \"event_type\": \"non Ut\",\n      \"event_category\": \"amet in cillum Ut\",\n      \"version\": \"laboris qui minim velit\",\n      \"display_name\": \"enim deserunt incididunt ut\",\n      \"description\": \"aliqua\",\n      \"created_on\": \"eiusmod nostrud mollit\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "d69ccbf3-0c3a-41eb-bd39-d4f9b45516cb",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "aad9c7dd-4ee4-4939-a390-a52a643cb28f",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": -91895028,\n      \"event_name\": \"esse ex\",\n      \"event_type\": \"\",\n      \"event_category\": \"nostrud commodo labore\",\n      \"version\": \"veniam pariatur\",\n      \"display_name\": \"id do commodo aliquip\",\n      \"description\": \"exercitation ullamco irure est sunt\",\n      \"created_on\": \"culpa voluptate Ut irure id\"\n    },\n    {\n      \"id\": 55824677,\n      \"event_name\": \"esse proident voluptate\",\n      \"event_type\": \"eius\",\n      \"event_category\": \"ea \",\n      \"version\": \"aliqua dolor laboris irure incididunt\",\n      \"display_name\": \"nulla eu\",\n      \"description\": \"in dolor deserunt\",\n      \"created_on\": \"ut enim officia\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl"
    }
  ],
  "info": {
    "_postman_id": "c6c8fe15-34c5-494a-be4c-ae4af6e3628d",
    "name": "Fynd Platform's Public Side APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public Side APIs",
      "type": "text/plain"
    }
  }
}
