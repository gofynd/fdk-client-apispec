{
  "item": [
    {
      "id": "322e89e8-cf58-4430-bf1c-94dfac15a0ed",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "b66d81d1-2b1a-4c11-a8d5-78fe717630e5",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "fd3bd832-c799-4e48-b94f-4595f1cdfc5f",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "sit aliqua anim reprehenderit",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "499f3839-1f9c-406a-bbc4-b02cd8dd701b",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "sit aliqua anim reprehenderit",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "0f086a45-ce34-45cb-987f-60fdb9b4ab12",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "sit aliqua anim reprehenderit",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "216643c3-7cb6-4842-86f5-1b2bc156f7ea",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "d08ba4b6-a3aa-4659-ae0e-416ac859e612",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "bc088a0e-ee0d-4500-9f09-fc3bafa5ca99",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "1db2b618-0623-4507-a469-035e6f1140d1",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "f23c02f7-03b5-49bc-981a-312d4be66ed3",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 6243511,\n   \"event_name\": \"minim fu\",\n   \"event_type\": \"adipisic\",\n   \"event_category\": \"in\",\n   \"version\": \"exercitation\",\n   \"display_name\": \"nulla\",\n   \"description\": \"Excepteur ex laboris esse\",\n   \"created_on\": \"et sint minim Ut Lorem\"\n  },\n  {\n   \"id\": 80689200,\n   \"event_name\": \"labore eu id la\",\n   \"event_type\": \"aute nostrud irure esse\",\n   \"event_category\": \"reprehenderit\",\n   \"version\": \"mollit\",\n   \"display_name\": \"elit laboris laborum\",\n   \"description\": \"laboris\",\n   \"created_on\": \"est labore nostrud\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "805fb705-7bcd-4a99-a903-ef6512e8cf05",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "1dee640e-aa3c-486d-bcf7-406cbbe99b66",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -55657892,\n   \"event_name\": \"culpa dolore nulla eu mollit\",\n   \"event_type\": \"sed Lorem et\",\n   \"event_category\": \"magna Ut\",\n   \"version\": \"tempor et\",\n   \"display_name\": \"officia \",\n   \"description\": \"sint ex\",\n   \"created_on\": \"dolor do Excepteur quis deserunt\"\n  },\n  {\n   \"id\": 50304029,\n   \"event_name\": \"ad do non\",\n   \"event_type\": \"enim\",\n   \"event_category\": \"pariatur eiusmod Duis nulla\",\n   \"version\": \"tempor\",\n   \"display_name\": \"dolore id dolore cupidatat\",\n   \"description\": \"ullamco\",\n   \"created_on\": \"mollit officia\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "8e1e58df-be22-4489-a293-bc5d57bb6dfe",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "b960fb5a-7d5b-4f5b-acf5-fac192221114",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "8145da1d-e9b4-4cd6-b047-8bcea87182a6",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1960-07-18T07:17:01.949Z\",\n \"status\": -8727082,\n \"error\": \"sit nostrud voluptate\",\n \"exception\": \"est qui\",\n \"message\": \"mollit reprehenderit culpa\",\n \"total_time_taken_in_millis\": -45048113,\n \"http_status\": \"419 INSUFFICIENT_SPACE_ON_RESOURCE\",\n \"items\": [\n  {\n   \"company_id\": 24091993,\n   \"integration_data\": {},\n   \"company_name\": \"ipsum aliqua eiusmod\",\n   \"task_details\": {\n    \"type\": -42257151,\n    \"group_list\": [\n     {\n      \"text\": \"officia in irure\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consequat nisi ullamco\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 91775555.20382294,\n    \"safe_stock\": -15404451,\n    \"period_threshold\": 55828804,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"Lorem dolore in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute fugiat officia\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"nisi ea in\",\n   \"alias\": \"non paria\"\n  },\n  {\n   \"company_id\": 60069076,\n   \"integration_data\": {},\n   \"company_name\": \"pariatur ut conse\",\n   \"task_details\": {\n    \"type\": -95791896,\n    \"group_list\": [\n     {\n      \"text\": \"commodo eu aliqua deserunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proident\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 94739096.49329096,\n    \"safe_stock\": 99110331,\n    \"period_threshold\": -22683959,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nostrud dolor Duis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"esse adipisicing incididunt\",\n   \"alias\": \"labor\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -59111493,\n   \"integration_data\": {},\n   \"company_name\": \"exercitation enim consequat laboris ex\",\n   \"task_details\": {\n    \"type\": -77357092,\n    \"group_list\": [\n     {\n      \"text\": \"occaecat dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in consectetur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -95987950.02559042,\n    \"safe_stock\": 46301951,\n    \"period_threshold\": 78980571,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"magna nulla\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"pariatur amet anim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"reprehenderit amet ipsum\",\n   \"alias\": \"sed\"\n  },\n  {\n   \"company_id\": -81527049,\n   \"integration_data\": {},\n   \"company_name\": \"cupidatat ex ad do\",\n   \"task_details\": {\n    \"type\": -58714333,\n    \"group_list\": [\n     {\n      \"text\": \"sint ipsum fugiat aute\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laborum ipsum nulla nostrud\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 67884608.35385841,\n    \"safe_stock\": -5533421,\n    \"period_threshold\": 78115498,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"tempor reprehenderit ex\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ex deserunt c\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"quis ex ipsum enim\",\n   \"alias\": \"Lorem dolore nostru\"\n  }\n ],\n \"trace_id\": \"ullamco occaecat in\",\n \"page\": {\n  \"type\": \"non et aliquip sint\",\n  \"size\": 40145680,\n  \"current\": -90927086,\n  \"has_next\": true,\n  \"item_total\": 74998822,\n  \"next_id\": \"pariatur veniam ea\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "fe424a89-c4e3-4236-bebc-22599689ca43",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1981-10-17T11:27:34.244Z\",\n \"status\": 69890336,\n \"error\": \"amet elit\",\n \"exception\": \"ullamco in quis proident minim\",\n \"message\": \"Ut ad adipisicing in ut\",\n \"total_time_taken_in_millis\": 60609724,\n \"http_status\": \"408 REQUEST_TIMEOUT\",\n \"items\": [\n  {\n   \"company_id\": -59569928,\n   \"integration_data\": {},\n   \"company_name\": \"vel\",\n   \"task_details\": {\n    \"type\": -87126863,\n    \"group_list\": [\n     {\n      \"text\": \"eiusmod officia voluptate cillum reprehenderit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"quis sint occaecat non fugiat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 22526837.60027781,\n    \"safe_stock\": 13548140,\n    \"period_threshold\": 1577694,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ut ullamco\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consectetur sunt in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"veniam dolore commodo Excepteur non\",\n   \"alias\": \"veniam velit sed deserunt in\"\n  },\n  {\n   \"company_id\": 34807456,\n   \"integration_data\": {},\n   \"company_name\": \"dolor irure non\",\n   \"task_details\": {\n    \"type\": 33206355,\n    \"group_list\": [\n     {\n      \"text\": \"laboris do dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"esse non ut laboris\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -11861971.532073885,\n    \"safe_stock\": -21052601,\n    \"period_threshold\": -15486228,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"est reprehenderit nulla minim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"et consectetur mollit incididunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"cillum in magna mollit\",\n   \"alias\": \"irure ullamco qui amet\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -17013492,\n   \"integration_data\": {},\n   \"company_name\": \"in dolore qui\",\n   \"task_details\": {\n    \"type\": 72912984,\n    \"group_list\": [\n     {\n      \"text\": \"irure tempor labore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut consectetur sit do id\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -75600319.37421896,\n    \"safe_stock\": 58781502,\n    \"period_threshold\": -61078925,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"veniam\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"es\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"proident do\",\n   \"alias\": \"sed deserunt dolore enim \"\n  },\n  {\n   \"company_id\": 16750157,\n   \"integration_data\": {},\n   \"company_name\": \"labore amet qui\",\n   \"task_details\": {\n    \"type\": 57732295,\n    \"group_list\": [\n     {\n      \"text\": \"culpa Duis pariatur officia\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ad aliqua deserunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 36452214.634414315,\n    \"safe_stock\": 83963269,\n    \"period_threshold\": 9915849,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolore ea e\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"esse incididunt enim Duis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"anim in minim non\",\n   \"alias\": \"pariatur consectetur in sit\"\n  }\n ],\n \"trace_id\": \"cupidatat irure velit\",\n \"page\": {\n  \"type\": \"ipsum consequat\",\n  \"size\": 56660649,\n  \"current\": -40938438,\n  \"has_next\": true,\n  \"item_total\": 14347464,\n  \"next_id\": \"et cupidatat reprehenderit tempor \",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "8526a92f-6d00-4d71-a61a-58684cf70b47",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1981-10-17T11:27:34.244Z\",\n \"status\": 69890336,\n \"error\": \"amet elit\",\n \"exception\": \"ullamco in quis proident minim\",\n \"message\": \"Ut ad adipisicing in ut\",\n \"total_time_taken_in_millis\": 60609724,\n \"http_status\": \"408 REQUEST_TIMEOUT\",\n \"items\": [\n  {\n   \"company_id\": -59569928,\n   \"integration_data\": {},\n   \"company_name\": \"vel\",\n   \"task_details\": {\n    \"type\": -87126863,\n    \"group_list\": [\n     {\n      \"text\": \"eiusmod officia voluptate cillum reprehenderit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"quis sint occaecat non fugiat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 22526837.60027781,\n    \"safe_stock\": 13548140,\n    \"period_threshold\": 1577694,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ut ullamco\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consectetur sunt in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"veniam dolore commodo Excepteur non\",\n   \"alias\": \"veniam velit sed deserunt in\"\n  },\n  {\n   \"company_id\": 34807456,\n   \"integration_data\": {},\n   \"company_name\": \"dolor irure non\",\n   \"task_details\": {\n    \"type\": 33206355,\n    \"group_list\": [\n     {\n      \"text\": \"laboris do dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"esse non ut laboris\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -11861971.532073885,\n    \"safe_stock\": -21052601,\n    \"period_threshold\": -15486228,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"est reprehenderit nulla minim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"et consectetur mollit incididunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"cillum in magna mollit\",\n   \"alias\": \"irure ullamco qui amet\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -17013492,\n   \"integration_data\": {},\n   \"company_name\": \"in dolore qui\",\n   \"task_details\": {\n    \"type\": 72912984,\n    \"group_list\": [\n     {\n      \"text\": \"irure tempor labore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut consectetur sit do id\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -75600319.37421896,\n    \"safe_stock\": 58781502,\n    \"period_threshold\": -61078925,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"veniam\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"es\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"proident do\",\n   \"alias\": \"sed deserunt dolore enim \"\n  },\n  {\n   \"company_id\": 16750157,\n   \"integration_data\": {},\n   \"company_name\": \"labore amet qui\",\n   \"task_details\": {\n    \"type\": 57732295,\n    \"group_list\": [\n     {\n      \"text\": \"culpa Duis pariatur officia\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ad aliqua deserunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 36452214.634414315,\n    \"safe_stock\": 83963269,\n    \"period_threshold\": 9915849,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolore ea e\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"esse incididunt enim Duis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"anim in minim non\",\n   \"alias\": \"pariatur consectetur in sit\"\n  }\n ],\n \"trace_id\": \"cupidatat irure velit\",\n \"page\": {\n  \"type\": \"ipsum consequat\",\n  \"size\": 56660649,\n  \"current\": -40938438,\n  \"has_next\": true,\n  \"item_total\": 14347464,\n  \"next_id\": \"et cupidatat reprehenderit tempor \",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "13b84a33-c16c-46f1-a48f-02be9ba26795",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "32d7b153-ca75-4917-8c61-031f6e5db5c9",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1981-09-28T06:05:39.692Z\",\n \"status\": 34304474,\n \"error\": \"ut eu commodo laboris\",\n \"exception\": \"sed tempor anim quis\",\n \"message\": \"non in in eu\",\n \"total_time_taken_in_millis\": -75561708,\n \"http_status\": \"422 UNPROCESSABLE_ENTITY\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"est\",\n \"page\": {\n  \"type\": \"quis in officia magna cupidatat\",\n  \"size\": -29612778,\n  \"current\": -53116368,\n  \"has_next\": true,\n  \"item_total\": -72618550,\n  \"next_id\": \"ut culpa sit\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2b895cf2-1fd3-4f6a-a4c0-7d316e95c4ae",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1981-09-28T06:05:39.692Z\",\n \"status\": 34304474,\n \"error\": \"ut eu commodo laboris\",\n \"exception\": \"sed tempor anim quis\",\n \"message\": \"non in in eu\",\n \"total_time_taken_in_millis\": -75561708,\n \"http_status\": \"422 UNPROCESSABLE_ENTITY\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"est\",\n \"page\": {\n  \"type\": \"quis in officia magna cupidatat\",\n  \"size\": -29612778,\n  \"current\": -53116368,\n  \"has_next\": true,\n  \"item_total\": -72618550,\n  \"next_id\": \"ut culpa sit\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ac10b304-c955-4442-901f-40d29176bbf7",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1981-09-28T06:05:39.692Z\",\n \"status\": 34304474,\n \"error\": \"ut eu commodo laboris\",\n \"exception\": \"sed tempor anim quis\",\n \"message\": \"non in in eu\",\n \"total_time_taken_in_millis\": -75561708,\n \"http_status\": \"422 UNPROCESSABLE_ENTITY\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"est\",\n \"page\": {\n  \"type\": \"quis in officia magna cupidatat\",\n  \"size\": -29612778,\n  \"current\": -53116368,\n  \"has_next\": true,\n  \"item_total\": -72618550,\n  \"next_id\": \"ut culpa sit\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "087451ae-4ff7-41db-8178-14ac07ca129c",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "d3ff3067-53f9-4edf-a543-fbd0cc9377e5",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1970-11-18T04:43:05.485Z\",\n \"status\": 9893634,\n \"error\": \"magna veniam\",\n \"exception\": \"deserunt anim\",\n \"message\": \"laboris\",\n \"total_time_taken_in_millis\": -13117098,\n \"http_status\": \"418 I_AM_A_TEAPOT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"cillum enim\",\n \"page\": {\n  \"type\": \"esse\",\n  \"size\": -65618397,\n  \"current\": -95448385,\n  \"has_next\": false,\n  \"item_total\": 58800183,\n  \"next_id\": \"esse\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ba416cc0-b145-46f1-81fb-b2acf19e9bee",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1970-11-18T04:43:05.485Z\",\n \"status\": 9893634,\n \"error\": \"magna veniam\",\n \"exception\": \"deserunt anim\",\n \"message\": \"laboris\",\n \"total_time_taken_in_millis\": -13117098,\n \"http_status\": \"418 I_AM_A_TEAPOT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"cillum enim\",\n \"page\": {\n  \"type\": \"esse\",\n  \"size\": -65618397,\n  \"current\": -95448385,\n  \"has_next\": false,\n  \"item_total\": 58800183,\n  \"next_id\": \"esse\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "42964387-92b9-4463-8b42-3d22ec2bb42b",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1970-11-18T04:43:05.485Z\",\n \"status\": 9893634,\n \"error\": \"magna veniam\",\n \"exception\": \"deserunt anim\",\n \"message\": \"laboris\",\n \"total_time_taken_in_millis\": -13117098,\n \"http_status\": \"418 I_AM_A_TEAPOT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"cillum enim\",\n \"page\": {\n  \"type\": \"esse\",\n  \"size\": -65618397,\n  \"current\": -95448385,\n  \"has_next\": false,\n  \"item_total\": 58800183,\n  \"next_id\": \"esse\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5e43dcfd-657b-4e64-af5d-81772f78d67a",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1970-11-18T04:43:05.485Z\",\n \"status\": 9893634,\n \"error\": \"magna veniam\",\n \"exception\": \"deserunt anim\",\n \"message\": \"laboris\",\n \"total_time_taken_in_millis\": -13117098,\n \"http_status\": \"418 I_AM_A_TEAPOT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"cillum enim\",\n \"page\": {\n  \"type\": \"esse\",\n  \"size\": -65618397,\n  \"current\": -95448385,\n  \"has_next\": false,\n  \"item_total\": 58800183,\n  \"next_id\": \"esse\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3bd1f946-2c09-4851-b724-31df3044356e",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1970-11-18T04:43:05.485Z\",\n \"status\": 9893634,\n \"error\": \"magna veniam\",\n \"exception\": \"deserunt anim\",\n \"message\": \"laboris\",\n \"total_time_taken_in_millis\": -13117098,\n \"http_status\": \"418 I_AM_A_TEAPOT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"cillum enim\",\n \"page\": {\n  \"type\": \"esse\",\n  \"size\": -65618397,\n  \"current\": -95448385,\n  \"has_next\": false,\n  \"item_total\": 58800183,\n  \"next_id\": \"esse\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx0.de"
    }
  ],
  "info": {
    "_postman_id": "46cb343f-923a-48f8-b2ca-d0ad4859929f",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
