{
  "item": [
    {
      "id": "65f5e684-2e21-4364-a710-ec5578a8d2b5",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "c9f5243a-c3b0-4abe-9d45-2898d471be54",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "c35d9df7-5bf8-4257-a175-914b6234daed",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "in incididunt d",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "63866e7d-ec1d-45cd-a535-56d8ed08414b",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "in incididunt d",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "b5f07abf-f49d-4c44-8489-457f8ee4e029",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "in incididunt d",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "0ded0a6a-e301-4f62-94f7-7ec74c3383e3",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "e632b9ad-8c2b-46c7-ba8f-f7515f034c7d",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "0281712a-6d40-48de-bf7d-125dc08ca6b7",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "9a4cd1ca-b610-424f-8037-6148d9c76ffb",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "db0a7e0b-9f59-47e4-99ca-f884b1a976cc",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -85409955,\n   \"event_name\": \"adipisicing dolore\",\n   \"event_type\": \"laboris adipisicing nulla\",\n   \"event_category\": \"minim culpa qui anim consectetur\",\n   \"version\": \"veniam ullamco fugiat\",\n   \"display_name\": \"cupidatat\",\n   \"description\": \"reprehenderit Ut ex\",\n   \"created_on\": \"in in\"\n  },\n  {\n   \"id\": 25975054,\n   \"event_name\": \"enim deserunt ullamco\",\n   \"event_type\": \"sed Excepteur in pariatur\",\n   \"event_category\": \"laboris non\",\n   \"version\": \"consectetur eiusmod minim\",\n   \"display_name\": \"in eu\",\n   \"description\": \"aute\",\n   \"created_on\": \"elit non minim officia\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "5ffc1109-2e6d-4438-b9aa-23e574511c31",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "ce825f30-e287-4b16-96eb-3afdd735afff",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -4667950,\n   \"event_name\": \"deserunt dolor aliquip ipsum esse\",\n   \"event_type\": \"Lorem\",\n   \"event_category\": \"anim repr\",\n   \"version\": \"id qui aliquip\",\n   \"display_name\": \"dolore laboris ut\",\n   \"description\": \"ad irure labore\",\n   \"created_on\": \"eli\"\n  },\n  {\n   \"id\": 97194147,\n   \"event_name\": \"consequat Duis incididunt\",\n   \"event_type\": \"veniam ex enim ad\",\n   \"event_category\": \"nulla voluptate anim\",\n   \"version\": \"aute non nostrud sit\",\n   \"display_name\": \"mollit\",\n   \"description\": \"aliqua irure Duis\",\n   \"created_on\": \"laboris mollit\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "6b04219a-d444-412c-ade0-ff46a8b6f1fc",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "72231258-968a-4601-a1d0-3d68581f29f7",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "3afa7b92-d8e6-4f0b-8eef-b67193b5c4db",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1997-04-29T18:37:10.360Z\",\n \"status\": -34250495,\n \"error\": \"culpa\",\n \"exception\": \"adipisicing non nostrud\",\n \"message\": \"in Duis veniam\",\n \"total_time_taken_in_millis\": -13607984,\n \"http_status\": \"504 GATEWAY_TIMEOUT\",\n \"items\": [\n  {\n   \"company_id\": -46490995,\n   \"integration_data\": {},\n   \"company_name\": \"consequat occaecat nulla dolore\",\n   \"task_details\": {\n    \"type\": 31346780,\n    \"group_list\": [\n     {\n      \"text\": \"ad non\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"tempor dolor qui sit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -84701101.36169131,\n    \"safe_stock\": 19667853,\n    \"period_threshold\": -67065864,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"nulla reprehenderit sed\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"elit ad ipsum id\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aliqua non Lorem \",\n   \"alias\": \"id in elit\"\n  },\n  {\n   \"company_id\": 63359348,\n   \"integration_data\": {},\n   \"company_name\": \"id commodo do\",\n   \"task_details\": {\n    \"type\": 87525264,\n    \"group_list\": [\n     {\n      \"text\": \"sed eiusmod ex\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"et irure ut reprehenderit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 75228313.00681952,\n    \"safe_stock\": -29828334,\n    \"period_threshold\": 9255733,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"laborum cupidatat aliquip reprehenderit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cupid\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sunt eu \",\n   \"alias\": \"Duis veni\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 26232020,\n   \"integration_data\": {},\n   \"company_name\": \"qui laboris\",\n   \"task_details\": {\n    \"type\": -71588182,\n    \"group_list\": [\n     {\n      \"text\": \"eiusmod dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"amet in magna veniam esse\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -23559429.306325138,\n    \"safe_stock\": -62075494,\n    \"period_threshold\": 6524585,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolore reprehenderit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Ut ad dolore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"dolore reprehenderit ad adipisicing\",\n   \"alias\": \"qui proident velit\"\n  },\n  {\n   \"company_id\": -31897671,\n   \"integration_data\": {},\n   \"company_name\": \"exercitation dolore anim occaecat consectetur\",\n   \"task_details\": {\n    \"type\": 67035635,\n    \"group_list\": [\n     {\n      \"text\": \"veniam nisi aliqua\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"id in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 82733180.95580399,\n    \"safe_stock\": -35701657,\n    \"period_threshold\": 62455868,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"cupidatat mollit minim id\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"est labore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"labore quis\",\n   \"alias\": \"pariatur amet enim non magna\"\n  }\n ],\n \"trace_id\": \"nulla dolor\",\n \"page\": {\n  \"type\": \"sed ad\",\n  \"size\": 7234363,\n  \"current\": -58620487,\n  \"has_next\": true,\n  \"item_total\": 6143061,\n  \"next_id\": \"enim qui commodo in laboris\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5772db6e-fc69-4347-8afa-98a0044b7002",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2000-10-28T23:15:30.221Z\",\n \"status\": 24062415,\n \"error\": \"sint dolor quis\",\n \"exception\": \"exercitation culpa ipsum mollit\",\n \"message\": \"enim aliquip dolor dolore\",\n \"total_time_taken_in_millis\": -62596885,\n \"http_status\": \"300 MULTIPLE_CHOICES\",\n \"items\": [\n  {\n   \"company_id\": -75531433,\n   \"integration_data\": {},\n   \"company_name\": \"tempor\",\n   \"task_details\": {\n    \"type\": 86776499,\n    \"group_list\": [\n     {\n      \"text\": \"sint eiusmod incididunt esse\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in ad voluptate\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -48902145.50813421,\n    \"safe_stock\": 19875480,\n    \"period_threshold\": 10486523,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sed laborum qui\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ipsum anim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"labore elit in\",\n   \"alias\": \"ea ipsum\"\n  },\n  {\n   \"company_id\": 18683150,\n   \"integration_data\": {},\n   \"company_name\": \"laboris non qui\",\n   \"task_details\": {\n    \"type\": -21075923,\n    \"group_list\": [\n     {\n      \"text\": \"Excepteur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in ut sed\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -80643099.87333216,\n    \"safe_stock\": -85843237,\n    \"period_threshold\": -55217893,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sint\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in Ut elit i\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"pariatur quis ut\",\n   \"alias\": \"deserunt mollit\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 67159575,\n   \"integration_data\": {},\n   \"company_name\": \"fugiat in ullamco\",\n   \"task_details\": {\n    \"type\": -24722174,\n    \"group_list\": [\n     {\n      \"text\": \"consequat velit adipisicing veniam minim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"exercitation enim qui\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -54652335.33027476,\n    \"safe_stock\": 3798158,\n    \"period_threshold\": -70781891,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sint eiusmod incididunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"reprehenderit in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"fugiat Excepteur dolor pariatur\",\n   \"alias\": \"Lorem eiusmod esse ex\"\n  },\n  {\n   \"company_id\": -60058104,\n   \"integration_data\": {},\n   \"company_name\": \"eu\",\n   \"task_details\": {\n    \"type\": -66913693,\n    \"group_list\": [\n     {\n      \"text\": \"in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -79315201.7228512,\n    \"safe_stock\": 40938834,\n    \"period_threshold\": 53535008,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"cupidatat aliqua \",\n      \"value\": {}\n     },\n     {\n      \"text\": \"qui commodo occaecat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"pariatur\",\n   \"alias\": \"id magna eu tempor\"\n  }\n ],\n \"trace_id\": \"reprehenderit ut\",\n \"page\": {\n  \"type\": \"quis Duis\",\n  \"size\": 98596719,\n  \"current\": 45848970,\n  \"has_next\": true,\n  \"item_total\": -29610847,\n  \"next_id\": \"dolor non eiusmod\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "925bde95-15a5-4f8f-967f-949bcff5de22",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2000-10-28T23:15:30.221Z\",\n \"status\": 24062415,\n \"error\": \"sint dolor quis\",\n \"exception\": \"exercitation culpa ipsum mollit\",\n \"message\": \"enim aliquip dolor dolore\",\n \"total_time_taken_in_millis\": -62596885,\n \"http_status\": \"300 MULTIPLE_CHOICES\",\n \"items\": [\n  {\n   \"company_id\": -75531433,\n   \"integration_data\": {},\n   \"company_name\": \"tempor\",\n   \"task_details\": {\n    \"type\": 86776499,\n    \"group_list\": [\n     {\n      \"text\": \"sint eiusmod incididunt esse\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in ad voluptate\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -48902145.50813421,\n    \"safe_stock\": 19875480,\n    \"period_threshold\": 10486523,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sed laborum qui\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ipsum anim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"labore elit in\",\n   \"alias\": \"ea ipsum\"\n  },\n  {\n   \"company_id\": 18683150,\n   \"integration_data\": {},\n   \"company_name\": \"laboris non qui\",\n   \"task_details\": {\n    \"type\": -21075923,\n    \"group_list\": [\n     {\n      \"text\": \"Excepteur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in ut sed\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -80643099.87333216,\n    \"safe_stock\": -85843237,\n    \"period_threshold\": -55217893,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sint\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in Ut elit i\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"pariatur quis ut\",\n   \"alias\": \"deserunt mollit\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 67159575,\n   \"integration_data\": {},\n   \"company_name\": \"fugiat in ullamco\",\n   \"task_details\": {\n    \"type\": -24722174,\n    \"group_list\": [\n     {\n      \"text\": \"consequat velit adipisicing veniam minim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"exercitation enim qui\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -54652335.33027476,\n    \"safe_stock\": 3798158,\n    \"period_threshold\": -70781891,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sint eiusmod incididunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"reprehenderit in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"fugiat Excepteur dolor pariatur\",\n   \"alias\": \"Lorem eiusmod esse ex\"\n  },\n  {\n   \"company_id\": -60058104,\n   \"integration_data\": {},\n   \"company_name\": \"eu\",\n   \"task_details\": {\n    \"type\": -66913693,\n    \"group_list\": [\n     {\n      \"text\": \"in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -79315201.7228512,\n    \"safe_stock\": 40938834,\n    \"period_threshold\": 53535008,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"cupidatat aliqua \",\n      \"value\": {}\n     },\n     {\n      \"text\": \"qui commodo occaecat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"pariatur\",\n   \"alias\": \"id magna eu tempor\"\n  }\n ],\n \"trace_id\": \"reprehenderit ut\",\n \"page\": {\n  \"type\": \"quis Duis\",\n  \"size\": 98596719,\n  \"current\": 45848970,\n  \"has_next\": true,\n  \"item_total\": -29610847,\n  \"next_id\": \"dolor non eiusmod\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "7eb61357-8617-4953-947d-824991465ffb",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "f137d7f0-5a89-45b7-b12a-b671027cf9d8",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1955-06-23T01:01:15.857Z\",\n \"status\": -72382420,\n \"error\": \"voluptate sunt\",\n \"exception\": \"nostrud laborum sed do u\",\n \"message\": \"nostrud cillum incidi\",\n \"total_time_taken_in_millis\": -35904811,\n \"http_status\": \"300 MULTIPLE_CHOICES\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"id incididunt laborum\",\n \"page\": {\n  \"type\": \"laboris est\",\n  \"size\": -58733892,\n  \"current\": -77522862,\n  \"has_next\": false,\n  \"item_total\": 39438246,\n  \"next_id\": \"sit ipsum eu qui\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b53ebde3-8240-451d-b914-d22423312522",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1955-06-23T01:01:15.857Z\",\n \"status\": -72382420,\n \"error\": \"voluptate sunt\",\n \"exception\": \"nostrud laborum sed do u\",\n \"message\": \"nostrud cillum incidi\",\n \"total_time_taken_in_millis\": -35904811,\n \"http_status\": \"300 MULTIPLE_CHOICES\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"id incididunt laborum\",\n \"page\": {\n  \"type\": \"laboris est\",\n  \"size\": -58733892,\n  \"current\": -77522862,\n  \"has_next\": false,\n  \"item_total\": 39438246,\n  \"next_id\": \"sit ipsum eu qui\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a090b23d-b0b6-4b59-b05e-5dfeec6a01c9",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1955-06-23T01:01:15.857Z\",\n \"status\": -72382420,\n \"error\": \"voluptate sunt\",\n \"exception\": \"nostrud laborum sed do u\",\n \"message\": \"nostrud cillum incidi\",\n \"total_time_taken_in_millis\": -35904811,\n \"http_status\": \"300 MULTIPLE_CHOICES\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"id incididunt laborum\",\n \"page\": {\n  \"type\": \"laboris est\",\n  \"size\": -58733892,\n  \"current\": -77522862,\n  \"has_next\": false,\n  \"item_total\": 39438246,\n  \"next_id\": \"sit ipsum eu qui\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "3bbebd60-1811-4546-857d-3236929043e6",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "8700bbf3-46eb-4a2d-98d0-f20c3cea6d50",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1982-02-28T08:07:41.710Z\",\n \"status\": -72549965,\n \"error\": \"consectetur anim occaecat\",\n \"exception\": \"exercitation non eiusmod minim anim\",\n \"message\": \"eiusmod ex Lorem ullamco\",\n \"total_time_taken_in_millis\": -23468569,\n \"http_status\": \"400 BAD_REQUEST\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"irure in est dolore pariatur\",\n \"page\": {\n  \"type\": \"minim eiusmod\",\n  \"size\": -76371465,\n  \"current\": -42538218,\n  \"has_next\": true,\n  \"item_total\": -72836741,\n  \"next_id\": \"ipsum\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "4b62bad6-718b-4d82-8d4e-599042eb2a0b",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1982-02-28T08:07:41.710Z\",\n \"status\": -72549965,\n \"error\": \"consectetur anim occaecat\",\n \"exception\": \"exercitation non eiusmod minim anim\",\n \"message\": \"eiusmod ex Lorem ullamco\",\n \"total_time_taken_in_millis\": -23468569,\n \"http_status\": \"400 BAD_REQUEST\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"irure in est dolore pariatur\",\n \"page\": {\n  \"type\": \"minim eiusmod\",\n  \"size\": -76371465,\n  \"current\": -42538218,\n  \"has_next\": true,\n  \"item_total\": -72836741,\n  \"next_id\": \"ipsum\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "4da53645-f36f-480a-a111-3a8103a3078d",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1982-02-28T08:07:41.710Z\",\n \"status\": -72549965,\n \"error\": \"consectetur anim occaecat\",\n \"exception\": \"exercitation non eiusmod minim anim\",\n \"message\": \"eiusmod ex Lorem ullamco\",\n \"total_time_taken_in_millis\": -23468569,\n \"http_status\": \"400 BAD_REQUEST\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"irure in est dolore pariatur\",\n \"page\": {\n  \"type\": \"minim eiusmod\",\n  \"size\": -76371465,\n  \"current\": -42538218,\n  \"has_next\": true,\n  \"item_total\": -72836741,\n  \"next_id\": \"ipsum\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2e49313c-76d2-4c9d-9d70-46e9d4724a9b",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1982-02-28T08:07:41.710Z\",\n \"status\": -72549965,\n \"error\": \"consectetur anim occaecat\",\n \"exception\": \"exercitation non eiusmod minim anim\",\n \"message\": \"eiusmod ex Lorem ullamco\",\n \"total_time_taken_in_millis\": -23468569,\n \"http_status\": \"400 BAD_REQUEST\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"irure in est dolore pariatur\",\n \"page\": {\n  \"type\": \"minim eiusmod\",\n  \"size\": -76371465,\n  \"current\": -42538218,\n  \"has_next\": true,\n  \"item_total\": -72836741,\n  \"next_id\": \"ipsum\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c300ee61-5945-4724-82d2-86100576afeb",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1982-02-28T08:07:41.710Z\",\n \"status\": -72549965,\n \"error\": \"consectetur anim occaecat\",\n \"exception\": \"exercitation non eiusmod minim anim\",\n \"message\": \"eiusmod ex Lorem ullamco\",\n \"total_time_taken_in_millis\": -23468569,\n \"http_status\": \"400 BAD_REQUEST\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"irure in est dolore pariatur\",\n \"page\": {\n  \"type\": \"minim eiusmod\",\n  \"size\": -76371465,\n  \"current\": -42538218,\n  \"has_next\": true,\n  \"item_total\": -72836741,\n  \"next_id\": \"ipsum\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx0.de"
    }
  ],
  "info": {
    "_postman_id": "fbdad919-b131-45f8-8521-7e65467ce6cf",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
