{
  "item": [
    {
      "id": "bdab3622-7ed3-4bf0-9498-26d5675af317",
      "name": "Billing",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "57dd366b-8cd1-48f3-aaf9-f229f827efbd",
          "name": "getStandardPlans | Get Standard/Public Plans",
          "request": {
            "name": "getStandardPlans | Get Standard/Public Plans",
            "description": {
              "content": "Get Standard/Public Plans.\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "public",
                "billing",
                "v1.0",
                "plan",
                "detailed-list"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "platform",
                  "value": "<string>",
                  "description": "(Required) The type of platform for which plans are requested."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "c54ac72e-074e-4ddd-b2b1-0f93ae399156",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform",
                      "value": "mobile/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"plans\": [\n    {\n      \"recurring\": {\n        \"interval\": \"month\",\n        \"interval_count\": 3\n      },\n      \"is_trial_plan\": true,\n      \"plan_group\": \"default\",\n      \"tag_lines\": [\n        \"This is 2020won trial plan\",\n        \"This is 2020won trial plan\"\n      ],\n      \"currency\": \"INR\",\n      \"is_active\": true,\n      \"is_visible\": false,\n      \"trial_period\": 30,\n      \"addons\": [\n        \"qui dolore elit Excepteur deserunt\",\n        \"sed enim aute\"\n      ],\n      \"tags\": [\n        \"dolore irure mollit\",\n        \"ad magna in\"\n      ],\n      \"type\": \"public\",\n      \"country\": \"IN\",\n      \"_id\": \"5f0dcd866173cb003706098f\",\n      \"name\": \"30 day Trial\",\n      \"description\": \"30 day Trial\",\n      \"amount\": 0,\n      \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n      \"created_at\": \"2020-07-14T15:21:42.959Z\",\n      \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n    },\n    {\n      \"recurring\": {\n        \"interval\": \"month\",\n        \"interval_count\": 3\n      },\n      \"is_trial_plan\": true,\n      \"plan_group\": \"default\",\n      \"tag_lines\": [\n        \"This is 2020won trial plan\",\n        \"This is 2020won trial plan\"\n      ],\n      \"currency\": \"INR\",\n      \"is_active\": true,\n      \"is_visible\": false,\n      \"trial_period\": 30,\n      \"addons\": [\n        \"anim culpa consequat\",\n        \"ea dolor officia eu\"\n      ],\n      \"tags\": [\n        \"pariatur in nisi sit eiusmod\",\n        \"in qui pariatur aute\"\n      ],\n      \"type\": \"public\",\n      \"country\": \"IN\",\n      \"_id\": \"5f0dcd866173cb003706098f\",\n      \"name\": \"30 day Trial\",\n      \"description\": \"30 day Trial\",\n      \"amount\": 0,\n      \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n      \"created_at\": \"2020-07-14T15:21:42.959Z\",\n      \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n    }\n  ],\n  \"trial_plan\": {\n    \"recurring\": {\n      \"interval\": \"month\",\n      \"interval_count\": 3\n    },\n    \"is_trial_plan\": true,\n    \"plan_group\": \"default\",\n    \"tag_lines\": [\n      \"This is 2020won trial plan\",\n      \"This is 2020won trial plan\"\n    ],\n    \"currency\": \"INR\",\n    \"is_active\": true,\n    \"is_visible\": false,\n    \"trial_period\": 30,\n    \"addons\": [\n      \"culpa magna eu\",\n      \"ut fugiat minim pariatur\"\n    ],\n    \"tags\": [\n      \"eu sit id \",\n      \"ullamco\"\n    ],\n    \"type\": \"public\",\n    \"country\": \"IN\",\n    \"_id\": \"5f0dcd866173cb003706098f\",\n    \"name\": \"30 day Trial\",\n    \"description\": \"30 day Trial\",\n    \"amount\": 0,\n    \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n    \"created_at\": \"2020-07-14T15:21:42.959Z\",\n    \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n  },\n  \"component_groups\": [\n    \"Key Features\",\n    \"Key Features\"\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a3b7f117-f8be-4e01-852f-b3e35769ed36",
              "name": "Resource not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform",
                      "value": "mobile/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Reason is required\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a063212e-0d61-4e54-8343-aa7d4011f6d0",
              "name": "Internal server error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform",
                      "value": "mobile/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Opps something went wrong !!\",\n  \"code\": \"INTERNAL_SERVER_ERROR\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "0f31ba10-504d-47b6-97a7-6b753fdd817d",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "26cfbaef-f6d1-46db-b507-3d65d89a9bd8",
          "name": "searchApplication | Search application",
          "request": {
            "name": "searchApplication | Search application",
            "description": {
              "content": "Provide application name or domain url.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "5d2fc3fa-4c04-4977-b4cc-63969d41874a",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "cupidatat",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"application\": {\n    \"website\": {\n      \"enabled\": true,\n      \"basepath\": \"/\"\n    },\n    \"cors\": {\n      \"domains\": []\n    },\n    \"auth\": {\n      \"enabled\": true\n    },\n    \"description\": \"test\",\n    \"channel_type\": \"store\",\n    \"cache_ttl\": -1,\n    \"internal\": false,\n    \"is_active\": true,\n    \"mode\": \"live\",\n    \"_id\": \"620b931ee7bfb11f910bf4a3\",\n    \"company_id\": 2,\n    \"name\": \"test\",\n    \"owner\": \"5b9b98150df588546aaea6d2\",\n    \"logo\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"favicon\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"banner\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n    },\n    \"token\": \"tPQv0nc23\",\n    \"tokens\": [\n      {\n        \"token\": \"tPQv0nc23\",\n        \"created_at\": \"2022-02-15T11:48:46.909Z\"\n      }\n    ],\n    \"domains\": [\n      {\n        \"verified\": true,\n        \"is_primary\": true,\n        \"is_shortlink\": true,\n        \"_id\": \"620b931ee7bfb11f910bf4a4\",\n        \"name\": \"qckvv5lhp.hostfynd.dev\"\n      }\n    ],\n    \"redirections\": [],\n    \"meta\": [],\n    \"created_at\": \"2022-02-15T11:48:46.909Z\",\n    \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n    \"__v\": 0,\n    \"domain\": {\n      \"verified\": true,\n      \"is_primary\": true,\n      \"is_shortlink\": true,\n      \"_id\": \"620b931ee7bfb11f910bf4a4\",\n      \"name\": \"qckvv5lhp.hostfynd.dev\"\n    },\n    \"id\": \"620b931ee7bfb11f910bf4a3\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "34039814-1607-49e1-8eab-bf9a6e4a589a",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "cupidatat",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"Invalid application domain or id.\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "7f3b176b-bafc-45cc-a26b-330f0a4077e0",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "cupidatat",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"No application found\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "a991e9ef-d61b-4aa1-bf5d-045d6053fca5",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {
              "content": "Get Location configuration",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "d656949b-1e1f-4829-9f45-b94871ad13b8",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"items\": [\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"et ut pariatur enim\",\n      \"phone_code\": \"990999092\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"labore cupidatat\",\n      \"country_code\": \"ea veniam labore\",\n      \"latitude\": \"sint qu\",\n      \"longitude\": \"culpa voluptate aliquip\"\n    },\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"aliqua\",\n      \"phone_code\": \"990999092\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"cillum\",\n      \"country_code\": \"consectetur magna aliqua\",\n      \"latitude\": \"ut sint velit tempor dolore\",\n      \"longitude\": \"aliquip lab\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "3faca2d1-3883-448f-bf23-64bf82b9f9ef",
      "name": "Content",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "af86db18-68b1-4560-85f2-aecad0ff1bbd",
          "name": "getCredentialsByEntity | Get credentials to power chat support systems",
          "request": {
            "name": "getCredentialsByEntity | Get credentials to power chat support systems",
            "description": {
              "content": "Get credentials for support system",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "public",
                "content",
                "credentials",
                ":entity"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "entity",
                  "description": "(Required) Server Type"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "d3484710-78ae-467c-a9fa-3c16d852fd00",
              "name": "Success. Refer `CredentialsSchema` for more details.",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "content",
                    "credentials",
                    ":entity"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "entity",
                      "description": "(Required) Server Type"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"entity_type\": \"partner\",\n  \"type\": \"freshchat\",\n  \"is_enable\": true,\n  \"configuration\": {\n    \"token\": \"a3e4gf20b-d11g-4512-n3zq-03b9aa7e1yxz\",\n    \"siteId\": \"a3e8f20b-d97f-452f-bd72-03b9aa7e1bf0\",\n    \"host\": \"https://wchat.freshchat.com\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9edb7f44-3318-4207-a016-4f11badaff2e",
              "name": "Bad Request. See the error object in the response body to know the exact reason.",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "content",
                    "credentials",
                    ":entity"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "entity",
                      "description": "(Required) Server Type"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Oops! Something went wrong. Please try later\",\n  \"status\": 400,\n  \"code\": \"CX-1003\",\n  \"exception\": \"\",\n  \"info\": \"\",\n  \"request_id\": \"\",\n  \"stack_trace\": \"\",\n  \"meta\": {}\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "84831a26-53ab-426f-887e-eb3acae76ce6",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "92382d59-5491-4caa-9324-181778a562a3",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "e5f02404-17a5-4cee-ab23-c2943b408722",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1969-03-07T05:28:26.549Z\",\n  \"status\": 37354761,\n  \"error\": \"est fugiat elit\",\n  \"exception\": \"aute qui reprehenderit eiusmod voluptate\",\n  \"message\": \"sint id\",\n  \"total_time_taken_in_millis\": -36166043,\n  \"http_status\": \"103 CHECKPOINT\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"elit\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "cfc29c63-325d-452c-ae07-28769553bb83",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1969-03-07T05:28:26.549Z\",\n  \"status\": 37354761,\n  \"error\": \"est fugiat elit\",\n  \"exception\": \"aute qui reprehenderit eiusmod voluptate\",\n  \"message\": \"sint id\",\n  \"total_time_taken_in_millis\": -36166043,\n  \"http_status\": \"103 CHECKPOINT\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"elit\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d65fa6bf-4b7a-41d8-a093-be9d586ce1ef",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1969-03-07T05:28:26.549Z\",\n  \"status\": 37354761,\n  \"error\": \"est fugiat elit\",\n  \"exception\": \"aute qui reprehenderit eiusmod voluptate\",\n  \"message\": \"sint id\",\n  \"total_time_taken_in_millis\": -36166043,\n  \"http_status\": \"103 CHECKPOINT\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"elit\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "0e0ba72b-175c-42ef-a151-13b8b2f523d7",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "1761f6ef-ac6c-454b-9baf-2aca6f4d608d",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2002-09-19T09:03:48.465Z\",\n  \"status\": 93650194,\n  \"error\": \"ut sunt nulla\",\n  \"exception\": \"eiusmod labore amet\",\n  \"message\": \"labore fugiat anim aliquip\",\n  \"total_time_taken_in_millis\": 69710412,\n  \"http_status\": \"402 PAYMENT_REQUIRED\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"officia\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "721ea589-a32a-4403-9249-7357cb702f53",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2002-09-19T09:03:48.465Z\",\n  \"status\": 93650194,\n  \"error\": \"ut sunt nulla\",\n  \"exception\": \"eiusmod labore amet\",\n  \"message\": \"labore fugiat anim aliquip\",\n  \"total_time_taken_in_millis\": 69710412,\n  \"http_status\": \"402 PAYMENT_REQUIRED\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"officia\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "7369bbd9-e5c3-41b1-a517-b75183dd4f3d",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2002-09-19T09:03:48.465Z\",\n  \"status\": 93650194,\n  \"error\": \"ut sunt nulla\",\n  \"exception\": \"eiusmod labore amet\",\n  \"message\": \"labore fugiat anim aliquip\",\n  \"total_time_taken_in_millis\": 69710412,\n  \"http_status\": \"402 PAYMENT_REQUIRED\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"officia\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "dcdbd1eb-01a5-4cad-91cc-e90246032051",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2002-09-19T09:03:48.465Z\",\n  \"status\": 93650194,\n  \"error\": \"ut sunt nulla\",\n  \"exception\": \"eiusmod labore amet\",\n  \"message\": \"labore fugiat anim aliquip\",\n  \"total_time_taken_in_millis\": 69710412,\n  \"http_status\": \"402 PAYMENT_REQUIRED\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"officia\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "8fb124d8-4aaf-46d5-ba87-01072bd15946",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2002-09-19T09:03:48.465Z\",\n  \"status\": 93650194,\n  \"error\": \"ut sunt nulla\",\n  \"exception\": \"eiusmod labore amet\",\n  \"message\": \"labore fugiat anim aliquip\",\n  \"total_time_taken_in_millis\": 69710412,\n  \"http_status\": \"402 PAYMENT_REQUIRED\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"officia\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "cc6f4515-d6fc-4d04-a989-299fb772fbe7",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "8ebb2263-7c7e-49d0-8ae2-d67aef97817a",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2004-04-19T19:57:28.469Z\",\n  \"status\": 49931245,\n  \"error\": \"laborum quis dolore\",\n  \"exception\": \"proident labori\",\n  \"message\": \"cillum\",\n  \"total_time_taken_in_millis\": 5673587,\n  \"http_status\": \"308 PERMANENT_REDIRECT\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"dolore ullamco cillum\",\n      \"description\": \"do ex\",\n      \"name\": \"dolore et ex Duis\",\n      \"slug\": \"culpa laboris nulla pariatur\",\n      \"meta\": [\n        {\n          \"_id\": \"in\",\n          \"name\": \"sit ut aliqui\",\n          \"value\": \"fugiat cupidatat incididunt id\"\n        },\n        {\n          \"_id\": \"ad\",\n          \"name\": \"nisi laboris\",\n          \"value\": \"labore dolor fugiat ipsum\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"commodo non Lorem consequa\",\n        \"integration\": \"Lorem Ut consequat\",\n        \"level\": \"sed laborum sint ullamco\",\n        \"uid\": 883710,\n        \"opted\": false,\n        \"permissions\": [\n          \"laborum\",\n          \"est qui dolore eiusmod\"\n        ],\n        \"token\": \"veniam\",\n        \"name\": \"do et nulla deserunt\",\n        \"stores\": [\n          {\n            \"_id\": \"nulla c\",\n            \"integration\": \"cupidatat\",\n            \"level\": \"in eu adipisicing incididunt\",\n            \"uid\": -36824928,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"non deserunt incididunt\",\n            \"code\": \"esse voluptate est\",\n            \"name\": \"aute magna tempor ut\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"irure Ut ad\",\n            \"integration\": \"aliqua\",\n            \"level\": \"nisi magna cupidatat amet commodo\",\n            \"uid\": -50209215,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ullamco sit eu\",\n            \"code\": \"minim anim dolor laborum dolore\",\n            \"name\": \"nostrud eu dolor\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"cillum minim esse eiusmod\",\n        \"integration\": \"aliqua magna minim\",\n        \"level\": \"quis reprehen\",\n        \"uid\": 39916442,\n        \"opted\": false,\n        \"permissions\": [\n          \"officia aute occaecat mollit\",\n          \"qui aliqua adipisici\"\n        ],\n        \"token\": \"cupidatat voluptate\",\n        \"name\": \"aliqua nisi\",\n        \"stores\": [\n          {\n            \"_id\": \"occaecat\",\n            \"integration\": \"non irure consectetur exercitation\",\n            \"level\": \"deserunt exercitation\",\n            \"uid\": 1654160,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"Duis nulla\",\n            \"code\": \"fugiat consequat incididunt\",\n            \"name\": \"ipsum minim exercitation\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"do dolore\",\n            \"integration\": \"aliqua est culpa\",\n            \"level\": \"minim laboris\",\n            \"uid\": 40509592,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"Duis anim amet incididu\",\n            \"code\": \"tempor deserunt ipsum\",\n            \"name\": \"in aliquip\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"cillum dolor Duis\",\n      \"description\": \"proident Ut in quis\",\n      \"name\": \"ad tempor nostrud eiusmod\",\n      \"slug\": \"ad Duis Excepteur sed\",\n      \"meta\": [\n        {\n          \"_id\": \"Lorem ad in\",\n          \"name\": \"ullamco qui dolor et occaecat\",\n          \"value\": \"et in in ullamco ad\"\n        },\n        {\n          \"_id\": \"in\",\n          \"name\": \"et dolore in\",\n          \"value\": \"do in in minim\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"est esse laboris fugiat\",\n        \"integration\": \"\",\n        \"level\": \"sed irure est ea ut\",\n        \"uid\": 83810716,\n        \"opted\": true,\n        \"permissions\": [\n          \"adipisici\",\n          \"dolor anim irure sunt\"\n        ],\n        \"token\": \"aliqua ipsum\",\n        \"name\": \"incididunt voluptate\",\n        \"stores\": [\n          {\n            \"_id\": \"deserunt irure nisi amet\",\n            \"integration\": \"Excepteur et\",\n            \"level\": \"consequat veniam\",\n            \"uid\": -33965847,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"proident mollit\",\n            \"code\": \"sit laboris dolore\",\n            \"name\": \"exercitation laborum reprehenderit occaecat\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"Duis ad aliqua est sunt\",\n            \"integration\": \"aute voluptate\",\n            \"level\": \"dolor officia adipisicing\",\n            \"uid\": 43778555,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"proident exercitation\",\n            \"code\": \"commodo exercitation irure cillum\",\n            \"name\": \"velit Duis dolor do\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"officia id\",\n        \"integration\": \"est deserunt sint ex\",\n        \"level\": \"ut\",\n        \"uid\": -73895951,\n        \"opted\": true,\n        \"permissions\": [\n          \"incididunt Lorem voluptate\",\n          \"incididunt\"\n        ],\n        \"token\": \"dolor commodo culpa sit\",\n        \"name\": \"laboris aliquip\",\n        \"stores\": [\n          {\n            \"_id\": \"culpa velit\",\n            \"integration\": \"commodo exercitation deserunt\",\n            \"level\": \"Excepteur reprehenderit non deserunt\",\n            \"uid\": 44203951,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"i\",\n            \"code\": \"Ut quis adipisicing aute\",\n            \"name\": \"veniam officia dolor aliqua\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"esse labore sed amet\",\n            \"integration\": \"mollit tempor aute\",\n            \"level\": \"irure\",\n            \"uid\": 34912035,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"reprehenderit quis cillum culpa magna\",\n            \"code\": \"cillum tempor esse in\",\n            \"name\": \"amet\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"labore\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d8ba31ea-5d18-4e0f-beaf-64498404bd1b",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1986-12-22T19:17:36.759Z\",\n  \"status\": -59155027,\n  \"error\": \"ullamco incididunt dolor\",\n  \"exception\": \"qui aliqua\",\n  \"message\": \"est sint\",\n  \"total_time_taken_in_millis\": 1827726,\n  \"http_status\": \"426 UPGRADE_REQUIRED\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"sed velit\",\n      \"description\": \"aliquip sed mollit irure\",\n      \"name\": \"officia dolor aliqua reprehe\",\n      \"slug\": \"id nostrud Lorem in\",\n      \"meta\": [\n        {\n          \"_id\": \"consectetur laborum officia commodo ali\",\n          \"name\": \"i\",\n          \"value\": \"aute ad laboris dolor\"\n        },\n        {\n          \"_id\": \"labore enim nostrud\",\n          \"name\": \"cupidatat dolore enim\",\n          \"value\": \"in Excepteur ipsum\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"irure\",\n        \"integration\": \"sed sunt nulla\",\n        \"level\": \"deserunt proident\",\n        \"uid\": -93414922,\n        \"opted\": false,\n        \"permissions\": [\n          \"ullamco ipsum anim sit\",\n          \"sed proident\"\n        ],\n        \"token\": \"sed commodo\",\n        \"name\": \"aliqua\",\n        \"stores\": [\n          {\n            \"_id\": \"nostrud reprehenderit\",\n            \"integration\": \"voluptate do ullamco consequat\",\n            \"level\": \"aute ulla\",\n            \"uid\": -84450647,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"id eiusm\",\n            \"code\": \"in dolore\",\n            \"name\": \"sint esse nisi ipsum\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"Duis dolore\",\n            \"integration\": \"magna officia aute nostrud\",\n            \"level\": \"quis Ut do consequat\",\n            \"uid\": -57181311,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"do Duis dolore aute\",\n            \"code\": \"exercitation minim qui velit\",\n            \"name\": \"enim in do\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"fugiat labore qui dolor nisi\",\n        \"integration\": \"consequat \",\n        \"level\": \"minim voluptate ullamco in\",\n        \"uid\": -49399115,\n        \"opted\": true,\n        \"permissions\": [\n          \"ut dolore Ut\",\n          \"qui est ut mollit\"\n        ],\n        \"token\": \"et adipisicing veniam\",\n        \"name\": \"aliqua consequat enim\",\n        \"stores\": [\n          {\n            \"_id\": \"adipisicing minim et\",\n            \"integration\": \"veniam\",\n            \"level\": \"ullamco commodo\",\n            \"uid\": 79481757,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"nulla est\",\n            \"code\": \"consectetur ad in\",\n            \"name\": \"ullamco mollit pari\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"irure aliquip esse\",\n            \"integration\": \"dolor offic\",\n            \"level\": \"aute consectetur commodo cillum ex\",\n            \"uid\": -7915935,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"velit ut voluptate irure esse\",\n            \"code\": \"deserunt nisi enim labore\",\n            \"name\": \"Lorem occaecat\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"in\",\n      \"description\": \"do amet dolore\",\n      \"name\": \"officia et consequat in voluptate\",\n      \"slug\": \"aliqua consectetur esse\",\n      \"meta\": [\n        {\n          \"_id\": \"ad est et consequat\",\n          \"name\": \"quis est\",\n          \"value\": \"occaec\"\n        },\n        {\n          \"_id\": \"dolor aliqua esse anim\",\n          \"name\": \"velit sunt incididunt enim\",\n          \"value\": \"velit reprehenderit enim Excepteur\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"mollit quis cupidatat\",\n        \"integration\": \"dolor in laborum nisi\",\n        \"level\": \"qui\",\n        \"uid\": -89660743,\n        \"opted\": false,\n        \"permissions\": [\n          \"in\",\n          \"id ullamco Lorem labore voluptate\"\n        ],\n        \"token\": \"aliqua\",\n        \"name\": \"adipisicing cillum ad tempor dolor\",\n        \"stores\": [\n          {\n            \"_id\": \"ex nostrud aliquip ea\",\n            \"integration\": \"tempor deserunt exercitation incidid\",\n            \"level\": \"qui ex reprehenderit cupidatat\",\n            \"uid\": 3665726,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"eiusmod proident\",\n            \"code\": \"mollit dolore\",\n            \"name\": \"ea aute dolor\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"officia sunt in\",\n            \"integration\": \"Ut\",\n            \"level\": \"consequat ad Duis aute\",\n            \"uid\": 38546333,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"aliqua proident\",\n            \"code\": \"velit eu officia\",\n            \"name\": \"quis\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"nulla labore et enim\",\n        \"integration\": \"Lorem fugiat in in quis\",\n        \"level\": \"reprehenderit nisi\",\n        \"uid\": 95148682,\n        \"opted\": false,\n        \"permissions\": [\n          \"non exercitation tempor\",\n          \"ut\"\n        ],\n        \"token\": \"tempor sed Duis nulla\",\n        \"name\": \"quis fugiat\",\n        \"stores\": [\n          {\n            \"_id\": \"Ut dolore in elit eiusmod\",\n            \"integration\": \"reprehenderit magna Duis\",\n            \"level\": \"ex proident\",\n            \"uid\": -32045133,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"irure pariatur voluptate veniam\",\n            \"code\": \"nisi\",\n            \"name\": \"pariatur\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"voluptate et\",\n            \"integration\": \"minim in enim\",\n            \"level\": \"deserunt\",\n            \"uid\": -6641030,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"commodo labore cupidatat\",\n            \"code\": \"aute\",\n            \"name\": \"ad incididunt ea\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"in \",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "cd53f554-b5f3-4078-9110-821e1856abff",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1986-12-22T19:17:36.759Z\",\n  \"status\": -59155027,\n  \"error\": \"ullamco incididunt dolor\",\n  \"exception\": \"qui aliqua\",\n  \"message\": \"est sint\",\n  \"total_time_taken_in_millis\": 1827726,\n  \"http_status\": \"426 UPGRADE_REQUIRED\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"sed velit\",\n      \"description\": \"aliquip sed mollit irure\",\n      \"name\": \"officia dolor aliqua reprehe\",\n      \"slug\": \"id nostrud Lorem in\",\n      \"meta\": [\n        {\n          \"_id\": \"consectetur laborum officia commodo ali\",\n          \"name\": \"i\",\n          \"value\": \"aute ad laboris dolor\"\n        },\n        {\n          \"_id\": \"labore enim nostrud\",\n          \"name\": \"cupidatat dolore enim\",\n          \"value\": \"in Excepteur ipsum\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"irure\",\n        \"integration\": \"sed sunt nulla\",\n        \"level\": \"deserunt proident\",\n        \"uid\": -93414922,\n        \"opted\": false,\n        \"permissions\": [\n          \"ullamco ipsum anim sit\",\n          \"sed proident\"\n        ],\n        \"token\": \"sed commodo\",\n        \"name\": \"aliqua\",\n        \"stores\": [\n          {\n            \"_id\": \"nostrud reprehenderit\",\n            \"integration\": \"voluptate do ullamco consequat\",\n            \"level\": \"aute ulla\",\n            \"uid\": -84450647,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"id eiusm\",\n            \"code\": \"in dolore\",\n            \"name\": \"sint esse nisi ipsum\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"Duis dolore\",\n            \"integration\": \"magna officia aute nostrud\",\n            \"level\": \"quis Ut do consequat\",\n            \"uid\": -57181311,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"do Duis dolore aute\",\n            \"code\": \"exercitation minim qui velit\",\n            \"name\": \"enim in do\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"fugiat labore qui dolor nisi\",\n        \"integration\": \"consequat \",\n        \"level\": \"minim voluptate ullamco in\",\n        \"uid\": -49399115,\n        \"opted\": true,\n        \"permissions\": [\n          \"ut dolore Ut\",\n          \"qui est ut mollit\"\n        ],\n        \"token\": \"et adipisicing veniam\",\n        \"name\": \"aliqua consequat enim\",\n        \"stores\": [\n          {\n            \"_id\": \"adipisicing minim et\",\n            \"integration\": \"veniam\",\n            \"level\": \"ullamco commodo\",\n            \"uid\": 79481757,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"nulla est\",\n            \"code\": \"consectetur ad in\",\n            \"name\": \"ullamco mollit pari\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"irure aliquip esse\",\n            \"integration\": \"dolor offic\",\n            \"level\": \"aute consectetur commodo cillum ex\",\n            \"uid\": -7915935,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"velit ut voluptate irure esse\",\n            \"code\": \"deserunt nisi enim labore\",\n            \"name\": \"Lorem occaecat\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"in\",\n      \"description\": \"do amet dolore\",\n      \"name\": \"officia et consequat in voluptate\",\n      \"slug\": \"aliqua consectetur esse\",\n      \"meta\": [\n        {\n          \"_id\": \"ad est et consequat\",\n          \"name\": \"quis est\",\n          \"value\": \"occaec\"\n        },\n        {\n          \"_id\": \"dolor aliqua esse anim\",\n          \"name\": \"velit sunt incididunt enim\",\n          \"value\": \"velit reprehenderit enim Excepteur\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"mollit quis cupidatat\",\n        \"integration\": \"dolor in laborum nisi\",\n        \"level\": \"qui\",\n        \"uid\": -89660743,\n        \"opted\": false,\n        \"permissions\": [\n          \"in\",\n          \"id ullamco Lorem labore voluptate\"\n        ],\n        \"token\": \"aliqua\",\n        \"name\": \"adipisicing cillum ad tempor dolor\",\n        \"stores\": [\n          {\n            \"_id\": \"ex nostrud aliquip ea\",\n            \"integration\": \"tempor deserunt exercitation incidid\",\n            \"level\": \"qui ex reprehenderit cupidatat\",\n            \"uid\": 3665726,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"eiusmod proident\",\n            \"code\": \"mollit dolore\",\n            \"name\": \"ea aute dolor\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"officia sunt in\",\n            \"integration\": \"Ut\",\n            \"level\": \"consequat ad Duis aute\",\n            \"uid\": 38546333,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"aliqua proident\",\n            \"code\": \"velit eu officia\",\n            \"name\": \"quis\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"nulla labore et enim\",\n        \"integration\": \"Lorem fugiat in in quis\",\n        \"level\": \"reprehenderit nisi\",\n        \"uid\": 95148682,\n        \"opted\": false,\n        \"permissions\": [\n          \"non exercitation tempor\",\n          \"ut\"\n        ],\n        \"token\": \"tempor sed Duis nulla\",\n        \"name\": \"quis fugiat\",\n        \"stores\": [\n          {\n            \"_id\": \"Ut dolore in elit eiusmod\",\n            \"integration\": \"reprehenderit magna Duis\",\n            \"level\": \"ex proident\",\n            \"uid\": -32045133,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"irure pariatur voluptate veniam\",\n            \"code\": \"nisi\",\n            \"name\": \"pariatur\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"voluptate et\",\n            \"integration\": \"minim in enim\",\n            \"level\": \"deserunt\",\n            \"uid\": -6641030,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"commodo labore cupidatat\",\n            \"code\": \"aute\",\n            \"name\": \"ad incididunt ea\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"in \",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "0b6ae452-eb0c-4479-aeb8-a48787951ef1",
          "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
          "request": {
            "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "c4569edc-5d35-4b0f-b16c-921a763a0868",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1970-02-13T15:06:59.482Z\",\n  \"status\": -27061746,\n  \"error\": \"Excepteur irure\",\n  \"exception\": \"ea sint velit commodo ex\",\n  \"message\": \"voluptate in in\",\n  \"total_time_taken_in_millis\": 88603931,\n  \"http_status\": \"511 NETWORK_AUTHENTICATION_REQUIRED\",\n  \"items\": {\n    \"session_id\": \"id\",\n    \"error_message\": \"labore\"\n  },\n  \"payload\": {\n    \"session_id\": \"ad anim\",\n    \"error_message\": \"voluptate in ea\"\n  },\n  \"trace_id\": \"Lorem consequat cillum commodo irure\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "95bf53d2-8233-4a68-ac90-c61172735920",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1970-02-13T15:06:59.482Z\",\n  \"status\": -27061746,\n  \"error\": \"Excepteur irure\",\n  \"exception\": \"ea sint velit commodo ex\",\n  \"message\": \"voluptate in in\",\n  \"total_time_taken_in_millis\": 88603931,\n  \"http_status\": \"511 NETWORK_AUTHENTICATION_REQUIRED\",\n  \"items\": {\n    \"session_id\": \"id\",\n    \"error_message\": \"labore\"\n  },\n  \"payload\": {\n    \"session_id\": \"ad anim\",\n    \"error_message\": \"voluptate in ea\"\n  },\n  \"trace_id\": \"Lorem consequat cillum commodo irure\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ee7be3b0-0179-4396-ac27-27a367739a2d",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1970-02-13T15:06:59.482Z\",\n  \"status\": -27061746,\n  \"error\": \"Excepteur irure\",\n  \"exception\": \"ea sint velit commodo ex\",\n  \"message\": \"voluptate in in\",\n  \"total_time_taken_in_millis\": 88603931,\n  \"http_status\": \"511 NETWORK_AUTHENTICATION_REQUIRED\",\n  \"items\": {\n    \"session_id\": \"id\",\n    \"error_message\": \"labore\"\n  },\n  \"payload\": {\n    \"session_id\": \"ad anim\",\n    \"error_message\": \"voluptate in ea\"\n  },\n  \"trace_id\": \"Lorem consequat cillum commodo irure\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "16bfa0dd-6710-4110-bf57-c3e826769565",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "696f24ac-695c-46ea-9f1b-fc383c74cd1c",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1958-03-28T10:08:59.799Z\",\n  \"status\": 62935070,\n  \"error\": \"consequat proident\",\n  \"exception\": \"exercitation dolore\",\n  \"message\": \"incididunt aliquip\",\n  \"total_time_taken_in_millis\": 46006715,\n  \"http_status\": \"425 TOO_EARLY\",\n  \"items\": {\n    \"company_id\": 62874986,\n    \"integration_data\": {\n      \"aute39\": {},\n      \"dolor_69\": {}\n    },\n    \"company_name\": \"fugiat cupidatat do\",\n    \"task_details\": {\n      \"type\": -7778116,\n      \"group_list\": [\n        {\n          \"text\": \"Ut voluptate\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"qui\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -47343200.74588134,\n      \"safe_stock\": -70130589,\n      \"period_threshold\": 7965644,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"veniam est pariatur ipsum\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"id\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"ad nisi labore magna\",\n    \"alias\": \"c\"\n  },\n  \"payload\": {\n    \"company_id\": -98027493,\n    \"integration_data\": {\n      \"reprehenderit3\": {}\n    },\n    \"company_name\": \"aliqu\",\n    \"task_details\": {\n      \"type\": -69905193,\n      \"group_list\": [\n        {\n          \"text\": \"laboris nostrud non\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"in anim dolor\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 94489279.20499673,\n      \"safe_stock\": -82666315,\n      \"period_threshold\": -75293159,\n      \"period_threshold_type\": \"MONTHS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"amet dolor do\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"aliqua nostrud mollit\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"eiusmod exercitation nostrud\",\n    \"alias\": \"aliqua irure et ipsum\"\n  },\n  \"trace_id\": \"cupidatat\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "6ee68eac-a41a-4911-806c-07417318c0ed",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1964-08-20T03:30:37.422Z\",\n  \"status\": 38468592,\n  \"error\": \"nisi\",\n  \"exception\": \"sed ipsum\",\n  \"message\": \"ea\",\n  \"total_time_taken_in_millis\": -12933006,\n  \"http_status\": \"410 GONE\",\n  \"items\": {\n    \"company_id\": 11644631,\n    \"integration_data\": {\n      \"in_0\": {}\n    },\n    \"company_name\": \"minim sit irure ipsum amet\",\n    \"task_details\": {\n      \"type\": 95682713,\n      \"group_list\": [\n        {\n          \"text\": \"consequat nulla non est\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"laborum voluptate\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -53975486.96184331,\n      \"safe_stock\": 42967985,\n      \"period_threshold\": -43333697,\n      \"period_threshold_type\": \"HOURS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"pariat\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"ex amet\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"si\",\n    \"alias\": \"cupidatat nulla\"\n  },\n  \"payload\": {\n    \"company_id\": -23432391,\n    \"integration_data\": {\n      \"eiusmod0\": {},\n      \"elitaa\": {}\n    },\n    \"company_name\": \"exercitation ad\",\n    \"task_details\": {\n      \"type\": 17010770,\n      \"group_list\": [\n        {\n          \"text\": \"labore eu do cupidatat\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"sit in reprehenderit Duis ut\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -85450872.96235004,\n      \"safe_stock\": 81970576,\n      \"period_threshold\": 71555996,\n      \"period_threshold_type\": \"DAYS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"aute c\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"Duis enim\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"elit voluptate do est\",\n    \"alias\": \"dolor\"\n  },\n  \"trace_id\": \"dolore consectetur velit\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1c7db705-f353-4c92-a065-4563bf3dbfe9",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1964-08-20T03:30:37.422Z\",\n  \"status\": 38468592,\n  \"error\": \"nisi\",\n  \"exception\": \"sed ipsum\",\n  \"message\": \"ea\",\n  \"total_time_taken_in_millis\": -12933006,\n  \"http_status\": \"410 GONE\",\n  \"items\": {\n    \"company_id\": 11644631,\n    \"integration_data\": {\n      \"in_0\": {}\n    },\n    \"company_name\": \"minim sit irure ipsum amet\",\n    \"task_details\": {\n      \"type\": 95682713,\n      \"group_list\": [\n        {\n          \"text\": \"consequat nulla non est\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"laborum voluptate\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -53975486.96184331,\n      \"safe_stock\": 42967985,\n      \"period_threshold\": -43333697,\n      \"period_threshold_type\": \"HOURS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"pariat\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"ex amet\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"si\",\n    \"alias\": \"cupidatat nulla\"\n  },\n  \"payload\": {\n    \"company_id\": -23432391,\n    \"integration_data\": {\n      \"eiusmod0\": {},\n      \"elitaa\": {}\n    },\n    \"company_name\": \"exercitation ad\",\n    \"task_details\": {\n      \"type\": 17010770,\n      \"group_list\": [\n        {\n          \"text\": \"labore eu do cupidatat\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"sit in reprehenderit Duis ut\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -85450872.96235004,\n      \"safe_stock\": 81970576,\n      \"period_threshold\": 71555996,\n      \"period_threshold_type\": \"DAYS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"aute c\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"Duis enim\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"elit voluptate do est\",\n    \"alias\": \"dolor\"\n  },\n  \"trace_id\": \"dolore consectetur velit\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "569a07b0-72e7-41c4-93b5-0593cfc8fbea",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "7e601a95-6bff-4e20-b690-0d006c07317e",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1974-08-03T18:50:58.183Z\",\n  \"status\": 62983202,\n  \"error\": \"ipsum incididunt cillum\",\n  \"exception\": \"ad Lorem\",\n  \"message\": \"consectetur cupidatat non\",\n  \"total_time_taken_in_millis\": 53911402,\n  \"http_status\": \"407 PROXY_AUTHENTICATION_REQUIRED\",\n  \"items\": [\n    {\n      \"company_id\": 12772091,\n      \"integration_data\": {\n        \"cillum2bf\": {}\n      },\n      \"company_name\": \"ad minim tempor voluptate non\",\n      \"task_details\": {\n        \"type\": -23419967,\n        \"group_list\": [\n          {\n            \"text\": \"quis ad laboris ipsum\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"in pariatur\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 96848640.68354324,\n        \"safe_stock\": -51288349,\n        \"period_threshold\": -9631308,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"non in deserunt\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ut sint proident aliqua\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"labore Lorem anim reprehenderit\",\n      \"alias\": \"sint enim\"\n    },\n    {\n      \"company_id\": -40253810,\n      \"integration_data\": {\n        \"esse_7e5\": {}\n      },\n      \"company_name\": \"minim commodo\",\n      \"task_details\": {\n        \"type\": -90462902,\n        \"group_list\": [\n          {\n            \"text\": \"cillum aute do minim consequat\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"eu et eiusmod\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 43614712.17549893,\n        \"safe_stock\": 91325918,\n        \"period_threshold\": 91862434,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"Lo\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"consectetur \",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"dolor esse pariatur ut\",\n      \"alias\": \"est ex magna\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": -20725536,\n      \"integration_data\": {\n        \"id_9\": {},\n        \"sint__c\": {}\n      },\n      \"company_name\": \"nostrud nisi\",\n      \"task_details\": {\n        \"type\": -11035798,\n        \"group_list\": [\n          {\n            \"text\": \"exercitation dolor velit enim\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"reprehenderit anim minim commodo\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 46600910.39818442,\n        \"safe_stock\": 40088320,\n        \"period_threshold\": 22655150,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"minim magna nulla culpa\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"dolor ullamco irure ea\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"in deserunt\",\n      \"alias\": \"mollit\"\n    },\n    {\n      \"company_id\": 89393369,\n      \"integration_data\": {\n        \"ullamco_92\": {},\n        \"officia_1\": {}\n      },\n      \"company_name\": \"eu tempor Ut est enim\",\n      \"task_details\": {\n        \"type\": 18615890,\n        \"group_list\": [\n          {\n            \"text\": \"veniam non do eu\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"anim cupidatat sunt\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 41013032.61847708,\n        \"safe_stock\": 31276184,\n        \"period_threshold\": 18710537,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"sed voluptate aliqua\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"sint\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"Excepteur occaecat\",\n      \"alias\": \"anim U\"\n    }\n  ],\n  \"trace_id\": \"laborum do sit qui\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "787c2775-5737-4f7d-a64e-b88c279dcc62",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1997-08-14T10:01:39.270Z\",\n  \"status\": 8585651,\n  \"error\": \"consequat reprehenderit in ex\",\n  \"exception\": \"elit\",\n  \"message\": \"culpa sint enim\",\n  \"total_time_taken_in_millis\": -82491331,\n  \"http_status\": \"506 VARIANT_ALSO_NEGOTIATES\",\n  \"items\": [\n    {\n      \"company_id\": -78455257,\n      \"integration_data\": {\n        \"do9\": {}\n      },\n      \"company_name\": \"magna cupidatat \",\n      \"task_details\": {\n        \"type\": -48640406,\n        \"group_list\": [\n          {\n            \"text\": \"et adipisicing magna\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"elit culpa deserunt in\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -11012651.087277532,\n        \"safe_stock\": -84916428,\n        \"period_threshold\": 70641053,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"amet ut\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"consequat labore mollit occaecat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"nisi ad sit cupidat\",\n      \"alias\": \"ea amet pariat\"\n    },\n    {\n      \"company_id\": 63757582,\n      \"integration_data\": {\n        \"consequat_cee\": {},\n        \"qui_1\": {}\n      },\n      \"company_name\": \"occaecat eu nisi\",\n      \"task_details\": {\n        \"type\": -56157933,\n        \"group_list\": [\n          {\n            \"text\": \"Lor\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"adipisicing ad\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 94733707.36799794,\n        \"safe_stock\": 41283859,\n        \"period_threshold\": -64771833,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"mollit proident\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"a\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"Duis amet eiusmod ea\",\n      \"alias\": \"ex est qui aliqua\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": 14145525,\n      \"integration_data\": {\n        \"adipisicing_0\": {},\n        \"Lorem_711\": {}\n      },\n      \"company_name\": \"incididunt mollit\",\n      \"task_details\": {\n        \"type\": 97220860,\n        \"group_list\": [\n          {\n            \"text\": \"dolore veniam\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"incididunt amet dolore veniam officia\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -86768357.10576603,\n        \"safe_stock\": 55419345,\n        \"period_threshold\": 47171646,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"qui Duis sint\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"do deserunt non\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"aliqua dolor est\",\n      \"alias\": \"id minim irure dolore \"\n    },\n    {\n      \"company_id\": 86981452,\n      \"integration_data\": {\n        \"dolore5\": {}\n      },\n      \"company_name\": \"culpa nisi occaecat\",\n      \"task_details\": {\n        \"type\": 2814350,\n        \"group_list\": [\n          {\n            \"text\": \"occaecat nisi incididunt nostrud enim\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"cillum irure\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 43624939.82449928,\n        \"safe_stock\": 12115069,\n        \"period_threshold\": 6878348,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"Du\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"commodo ex\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"amet occaecat non nisi\",\n      \"alias\": \"magna\"\n    }\n  ],\n  \"trace_id\": \"consequat\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "0bfc1096-d57f-4ec8-a9bf-2895e669e94d",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1997-08-14T10:01:39.270Z\",\n  \"status\": 8585651,\n  \"error\": \"consequat reprehenderit in ex\",\n  \"exception\": \"elit\",\n  \"message\": \"culpa sint enim\",\n  \"total_time_taken_in_millis\": -82491331,\n  \"http_status\": \"506 VARIANT_ALSO_NEGOTIATES\",\n  \"items\": [\n    {\n      \"company_id\": -78455257,\n      \"integration_data\": {\n        \"do9\": {}\n      },\n      \"company_name\": \"magna cupidatat \",\n      \"task_details\": {\n        \"type\": -48640406,\n        \"group_list\": [\n          {\n            \"text\": \"et adipisicing magna\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"elit culpa deserunt in\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -11012651.087277532,\n        \"safe_stock\": -84916428,\n        \"period_threshold\": 70641053,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"amet ut\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"consequat labore mollit occaecat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"nisi ad sit cupidat\",\n      \"alias\": \"ea amet pariat\"\n    },\n    {\n      \"company_id\": 63757582,\n      \"integration_data\": {\n        \"consequat_cee\": {},\n        \"qui_1\": {}\n      },\n      \"company_name\": \"occaecat eu nisi\",\n      \"task_details\": {\n        \"type\": -56157933,\n        \"group_list\": [\n          {\n            \"text\": \"Lor\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"adipisicing ad\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 94733707.36799794,\n        \"safe_stock\": 41283859,\n        \"period_threshold\": -64771833,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"mollit proident\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"a\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"Duis amet eiusmod ea\",\n      \"alias\": \"ex est qui aliqua\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": 14145525,\n      \"integration_data\": {\n        \"adipisicing_0\": {},\n        \"Lorem_711\": {}\n      },\n      \"company_name\": \"incididunt mollit\",\n      \"task_details\": {\n        \"type\": 97220860,\n        \"group_list\": [\n          {\n            \"text\": \"dolore veniam\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"incididunt amet dolore veniam officia\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -86768357.10576603,\n        \"safe_stock\": 55419345,\n        \"period_threshold\": 47171646,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"qui Duis sint\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"do deserunt non\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"aliqua dolor est\",\n      \"alias\": \"id minim irure dolore \"\n    },\n    {\n      \"company_id\": 86981452,\n      \"integration_data\": {\n        \"dolore5\": {}\n      },\n      \"company_name\": \"culpa nisi occaecat\",\n      \"task_details\": {\n        \"type\": 2814350,\n        \"group_list\": [\n          {\n            \"text\": \"occaecat nisi incididunt nostrud enim\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"cillum irure\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 43624939.82449928,\n        \"safe_stock\": 12115069,\n        \"period_threshold\": 6878348,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"Du\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"commodo ex\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"amet occaecat non nisi\",\n      \"alias\": \"magna\"\n    }\n  ],\n  \"trace_id\": \"consequat\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "11cadc91-89d3-4a34-85d6-18a8af6f8807",
      "name": "Partner",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "c41fef20-730e-4cf2-b793-679eecbc30c6",
          "name": "getPanelExtensionDetails | Get panel extension details",
          "request": {
            "name": "getPanelExtensionDetails | Get panel extension details",
            "description": {
              "content": "Retrieve detailed information about panel extensions in the public server setup.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "panel",
                "partners",
                "v1.0",
                "extensions",
                ":slug"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "slug",
                  "description": "(Required) pass the slug of the extension"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "dd52518b-953d-446b-8661-973073ff9aa8",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "panel",
                    "partners",
                    "v1.0",
                    "extensions",
                    ":slug"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "slug",
                      "description": "(Required) pass the slug of the extension"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"_id\": \"633ab5cb635a41fdde9fb648\",\n  \"organization_id\": \"6333fef3b1d85e44e738c138\",\n  \"extension_id\": \"633425ebb1d85e44e738c2ab\",\n  \"slug\": \"example-extension-1\",\n  \"scope\": [\n    \"company/profile\",\n    \"company/saleschannel\",\n    \"company/product\",\n    \"company/order\",\n    \"company/application/customer\",\n    \"company/application/analytics\",\n    \"company/application/storage\",\n    \"company/application/marketing\",\n    \"company/application/catalogue\",\n    \"company/application/communication\",\n    \"company/application/support\",\n    \"company/application/order\",\n    \"company/application/settings\"\n  ],\n  \"category\": {\n    \"categories_l1\": [],\n    \"categories_l2\": []\n  },\n  \"listing_info\": {\n    \"name\": \"ujjawal-example-extension-1\",\n    \"keywords\": [],\n    \"tagline\": \"test-extension for test how extensions look and work and how to create them\",\n    \"icon\": \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/AMwIEOw0U-logo.png\"\n  },\n  \"details\": {\n    \"benefits\": [\n      {\n        \"title\": \"Works fast\",\n        \"description\": \"works fast\",\n        \"_id\": \"633ab5cb635a41fdde9fb649\"\n      }\n    ],\n    \"screenshots\": {\n      \"desktop\": [\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/g95yHXkou-1024x576.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/IKdHxP2fN-1024x576.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/_auq1yvEp-1024x576.png\"\n      ],\n      \"mobile\": [\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/E_YAHM9cU-600x900.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/vEnXw9cCg-600x900.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/O3Wng4Rqn-600x900.png\"\n      ]\n    },\n    \"description\": \"Sample public extension\",\n    \"demo_url\": \"\",\n    \"video_url\": [\n      {\n        \"type\": \"video\",\n        \"url\": \"https://hdn-1.addsale.com/x0/products/videos/item/free/original/kizLVNWyS-video-sc-1.mp4\"\n      }\n    ],\n    \"integrations\": []\n  },\n  \"plan_type\": \"free\",\n  \"plans\": [\n    {\n      \"name\": \"Custom Free\",\n      \"features\": \"provides ease\",\n      \"type\": \"free\",\n      \"price\": {\n        \"amount\": 0,\n        \"currency\": \"INR\"\n      },\n      \"trial_days\": 0,\n      \"additional_charges\": \"\"\n    }\n  ],\n  \"plans_url\": \"\",\n  \"contact_info\": {\n    \"support\": {\n      \"email\": \"ujjawaltaleja@gofynd.com\",\n      \"phone\": \"7988169279\",\n      \"website_url\": \"\",\n      \"faq_url\": \"\",\n      \"privacy_policy_url\": \"\"\n    }\n  },\n  \"current_status\": \"active\",\n  \"coming_soon\": {\n    \"is_coming_soon\": false,\n    \"upvote_count\": 0\n  },\n  \"created_at\": \"2022-10-03T10:13:31.607Z\",\n  \"modified_at\": \"2022-10-03T10:13:31.607Z\",\n  \"organization\": {\n    \"name\": \"ujjawal-partners-fashion\",\n    \"slug\": \"ujjawa-w7t-68\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "0cb00859-8400-4479-b2ab-cbcf29552aeb",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "64a6fef8-ed49-4712-8b33-8db2729b9bba",
          "name": "fetchAllWebhookEvents | Fetch all webhook events",
          "request": {
            "name": "fetchAllWebhookEvents | Fetch all webhook events",
            "description": {
              "content": "Retrieve a list of all webhook events in the public server setup.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "1dc2a2ff-ab26-424d-815f-c70ecced047f",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "102fa4d3-728b-420c-9d99-0a98702e9e3d",
          "name": "queryWebhookEventDetails | Query webhook event details",
          "request": {
            "name": "queryWebhookEventDetails | Query webhook event details",
            "description": {
              "content": "Query and obtain detailed information about webhook events in the public server configurations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "477672f5-44c9-4cd4-a386-af1deea10701",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"event_name\": \"article\",\n    \"event_type\": \"update\",\n    \"event_category\": \"company\",\n    \"version\": \"1\"\n  }\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "0528eb8f-8441-4aaf-964d-7677b112b9ba",
          "name": "notifyDepricatedEvent | Notifies all the events that are going to depricate",
          "request": {
            "name": "notifyDepricatedEvent | Notifies all the events that are going to depricate",
            "description": {
              "content": "Notifies all the events that are subscribed and are going to deprecate or new version is available for those events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "depricated-event-notifier"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "b5dacf18-c411-410e-9099-fdceaf3cff95",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "depricated-event-notifier"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "308f5673-7701-4199-9ee5-839edfc6be52",
          "name": "testHandlerTransformation | Test transformation of handler",
          "request": {
            "name": "testHandlerTransformation | Test transformation of handler",
            "description": {
              "content": "Test transformation of handler",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "transform-event"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event_name\": \"<string>\",\n  \"event_type\": \"<string>\",\n  \"event_category\": \"<string>\",\n  \"event_version\": \"<string>\",\n  \"event\": {\n    \"payload\": {\n      \"laboris_2\": 86019627.53825933,\n      \"aliquac84\": true\n    },\n    \"meta\": {\n      \"ex14\": true\n    }\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "b99d680a-400c-40d8-b63e-392751107020",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "transform-event"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"event_name\": \"location\",\n  \"event_type\": \"create\",\n  \"event_category\": \"company\",\n  \"event_version\": \"1\",\n  \"event\": {\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450Z\",\n        \"modified_on\": \"2023-10-24T01:41:44.450Z\"\n      }\n    },\n    \"meta\": {\n      \"event\": {\n        \"type\": \"create\",\n        \"name\": \"location\",\n        \"version\": \"1\"\n      },\n      \"company_id\": 6086,\n      \"service\": {\n        \"name\": \"WheelJack\"\n      },\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"created_timestamp\": 1698111704725\n    }\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_trace_id\": [\n    \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n  ],\n  \"data\": {\n    \"event\": {\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"name\": \"location\",\n      \"type\": \"create\",\n      \"version\": \"1\",\n      \"created_timestamp\": 1698111704725\n    },\n    \"company_id\": 6086,\n    \"contains\": [\n      \"location\"\n    ],\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450Z\",\n        \"modified_on\": \"2023-10-24T01:41:44.450Z\"\n      }\n    }\n  },\n  \"event_name\": \"location\",\n  \"version\": \"1\",\n  \"status\": false,\n  \"event_type\": \"create\",\n  \"service_meta\": {\n    \"name\": \"WheelJack\"\n  },\n  \"association\": {\n    \"company_id\": 6086\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "00f5ac34-63f5-4956-ad14-0866d8d38d63",
          "name": "validateSchema | Validate Schema for an event",
          "request": {
            "name": "validateSchema | Validate Schema for an event",
            "description": {
              "content": "Validate Schema for an event",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "validate-event-schema"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event_name\": \"<string>\",\n  \"event_type\": \"<string>\",\n  \"event_category\": \"<string>\",\n  \"event_version\": \"<string>\",\n  \"event\": {\n    \"payload\": {\n      \"consectetur__\": -47580636\n    },\n    \"meta\": {\n      \"cillum_b\": true,\n      \"Lorem_e\": 24196059.36335683\n    }\n  },\n  \"event_schema\": {\n    \"commodo93c\": 24972322.06821254,\n    \"consequate\": -12464487\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "887e74c4-ebf7-455b-a7ed-d2ca8e355b84",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "validate-event-schema"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"event_name\": \"location\",\n  \"event_type\": \"create\",\n  \"event_category\": \"company\",\n  \"event_version\": \"1\",\n  \"event\": {\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450Z\",\n        \"modified_on\": \"2023-10-24T01:41:44.450Z\"\n      }\n    },\n    \"meta\": {\n      \"event\": {\n        \"type\": \"create\",\n        \"name\": \"location\",\n        \"version\": \"1\"\n      },\n      \"company_id\": 6086,\n      \"service\": {\n        \"name\": \"WheelJack\"\n      },\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"created_timestamp\": 1698111704725\n    }\n  },\n  \"event_schema\": {}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": true,\n  \"message\": \"Valid schema for this event\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fynd.com"
    }
  ],
  "info": {
    "_postman_id": "299d386b-ce6a-4bc4-aaf7-8808ba86af7e",
    "name": "Fynd Platform's Public Side APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public Side APIs",
      "type": "text/plain"
    }
  }
}
