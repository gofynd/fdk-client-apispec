{
  "item": [
    {
      "id": "7200ba8b-7877-40e6-bfa3-95bf5c4bdda1",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "51b0e74c-0854-4d0c-872d-39395a9c0809",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "928c2733-aec1-4410-b476-3696d2ed3f38",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "aute dolore",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "42c665bc-af11-4728-8388-2fcb03b43f22",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "aute dolore",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"Invalid application domain or id.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "203bd6c2-a3fb-43bd-91f1-fc4ca8a11fc0",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "aute dolore",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "e9b4bf5b-bcc1-4782-b0d6-66141c1955b3",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "863e33ec-626d-4bdb-84dd-a39ec3f7bf26",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "f27f84f1-2e66-4097-b0c6-9ad351408b86",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "4110eece-408c-4871-aa42-2acc537af8c4",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "b3453b69-e288-4d26-a430-39b9c0f0f6b3",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -77502813,\n   \"event_name\": \"consectet\",\n   \"event_type\": \"id\",\n   \"event_category\": \"labor\",\n   \"version\": \"laborum do\",\n   \"display_name\": \"magna commodo ipsum eiusmod exercitation\",\n   \"description\": \"quis consectetur\",\n   \"created_on\": \"ipsum nisi\"\n  },\n  {\n   \"id\": -94505343,\n   \"event_name\": \"in ut\",\n   \"event_type\": \"nisi\",\n   \"event_category\": \"velit esse est\",\n   \"version\": \"cupidatat non laboris aliq\",\n   \"display_name\": \"ullamco\",\n   \"description\": \"ut enim cons\",\n   \"created_on\": \"ut irure id\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "f630fe4c-10ab-4d5b-87bc-fbd041ecafa9",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "f4de2971-dfa1-473c-a35f-d388b8ef1c77",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -67528053,\n   \"event_name\": \"dolore voluptate proident exercitation\",\n   \"event_type\": \"incididunt exercitation sunt irure non\",\n   \"event_category\": \"nostrud dolore consequat\",\n   \"version\": \"ut velit eu ipsum\",\n   \"display_name\": \"irure dolor commodo\",\n   \"description\": \"dolore irure dolor\",\n   \"created_on\": \"fugiat aute minim\"\n  },\n  {\n   \"id\": 23816460,\n   \"event_name\": \"eu elit fugiat\",\n   \"event_type\": \"dolore qui voluptate\",\n   \"event_category\": \"r\",\n   \"version\": \"nulla fugiat\",\n   \"display_name\": \"ad mollit ea adipisicing do\",\n   \"description\": \"occaecat\",\n   \"created_on\": \"ad\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "8dad3c03-285c-48fa-a684-dec4d928059d",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "edd2eda1-a60e-41ef-a33c-820a353343dc",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "2dbc0102-fec4-416f-9ea1-53d765e72345",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1992-04-24T01:57:32.399Z\",\n \"status\": -95810919,\n \"error\": \"laboris reprehenderit\",\n \"exception\": \"esse aliqua eu irure exercitation\",\n \"message\": \"exercitation eiusmod tempor\",\n \"total_time_taken_in_millis\": -61329544,\n \"http_status\": \"102 PROCESSING\",\n \"items\": [\n  {\n   \"company_id\": 19946015,\n   \"integration_data\": {},\n   \"company_name\": \"reprehenderit sint elit consectetur ad\",\n   \"task_details\": {\n    \"type\": -10907506,\n    \"group_list\": [\n     {\n      \"text\": \"officia minim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"amet pariatur eu ullamco\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -60085510.11704748,\n    \"safe_stock\": -67277045,\n    \"period_threshold\": 99125926,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sed ex\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"amet enim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"enim\",\n   \"alias\": \"Ut Duis sunt enim ex\"\n  },\n  {\n   \"company_id\": -82434448,\n   \"integration_data\": {},\n   \"company_name\": \"labore officia exercitation laborum eu\",\n   \"task_details\": {\n    \"type\": -67424118,\n    \"group_list\": [\n     {\n      \"text\": \"irure ni\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"elit aliqua dolor dolore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 30534289.197138563,\n    \"safe_stock\": -19621888,\n    \"period_threshold\": 33330377,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"eu id est labore pariatur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"exerci\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"dolor officia\",\n   \"alias\": \"mollit minim adipisicing\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 83944484,\n   \"integration_data\": {},\n   \"company_name\": \"in\",\n   \"task_details\": {\n    \"type\": 24546682,\n    \"group_list\": [\n     {\n      \"text\": \"quis Excepteur nulla\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"culpa mollit commodo\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 61213973.267980784,\n    \"safe_stock\": -19382685,\n    \"period_threshold\": -58001622,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"nulla\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"incididunt tempor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"non consequat velit\",\n   \"alias\": \"esse dolore\"\n  },\n  {\n   \"company_id\": 70273145,\n   \"integration_data\": {},\n   \"company_name\": \"et\",\n   \"task_details\": {\n    \"type\": 18083603,\n    \"group_list\": [\n     {\n      \"text\": \"Lorem cillum laboris incididunt sed\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cillum dolore dolor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -16989443.966852173,\n    \"safe_stock\": 56381784,\n    \"period_threshold\": -16487186,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"velit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ipsum enim aliqua proident occaecat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in fugiat\",\n   \"alias\": \"esse proident Excepteur\"\n  }\n ],\n \"trace_id\": \"sed non ea\",\n \"page\": {\n  \"type\": \"cupidatat esse incididunt\",\n  \"size\": -10516496,\n  \"current\": -4161538,\n  \"has_next\": true,\n  \"item_total\": -31126014,\n  \"next_id\": \"ad elit esse aliqua minim\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "26c4d9e4-ffc7-4b0e-91c2-df858a3657a3",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1968-07-30T11:41:39.842Z\",\n \"status\": 39567910,\n \"error\": \"ex\",\n \"exception\": \"ullamco\",\n \"message\": \"ex irure cupidatat\",\n \"total_time_taken_in_millis\": 61556643,\n \"http_status\": \"300 MULTIPLE_CHOICES\",\n \"items\": [\n  {\n   \"company_id\": -13360525,\n   \"integration_data\": {},\n   \"company_name\": \"aliquip mollit adipisicing\",\n   \"task_details\": {\n    \"type\": 8646154,\n    \"group_list\": [\n     {\n      \"text\": \"quis sed amet nisi elit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laboris nostrud veniam cupidatat commodo\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -25990468.955051422,\n    \"safe_stock\": -44199361,\n    \"period_threshold\": -80182067,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"pariatur cupidatat Excepteur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"tempor sint\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aute Excepteu\",\n   \"alias\": \"velit dolor Excepteur\"\n  },\n  {\n   \"company_id\": 85135062,\n   \"integration_data\": {},\n   \"company_name\": \"tempor exercitation culpa enim\",\n   \"task_details\": {\n    \"type\": 66456880,\n    \"group_list\": [\n     {\n      \"text\": \"cupidatat aliquip eu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore nostrud irure\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -93239506.30045901,\n    \"safe_stock\": -75609400,\n    \"period_threshold\": 46475165,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ut nisi magna\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"labore enim reprehenderit fugiat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ipsum elit\",\n   \"alias\": \"occaecat \"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 85320171,\n   \"integration_data\": {},\n   \"company_name\": \"aliquip amet occaecat cupidatat officia\",\n   \"task_details\": {\n    \"type\": -29394829,\n    \"group_list\": [\n     {\n      \"text\": \"in occaecat do est\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sed non\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -17248961.88881293,\n    \"safe_stock\": -73541495,\n    \"period_threshold\": -61959295,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"Ut anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ad culpa dolor ullamco proident\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"reprehenderit in ipsum\",\n   \"alias\": \"et\"\n  },\n  {\n   \"company_id\": 81275533,\n   \"integration_data\": {},\n   \"company_name\": \"Excepteur sunt consequat quis\",\n   \"task_details\": {\n    \"type\": -83306064,\n    \"group_list\": [\n     {\n      \"text\": \"laborum qui\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"esse ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -15251688.469131038,\n    \"safe_stock\": -88972390,\n    \"period_threshold\": 24106851,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"reprehenderit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sed officia cupidatat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aute consectetur eiusm\",\n   \"alias\": \"veniam esse\"\n  }\n ],\n \"trace_id\": \"mollit nisi veniam in\",\n \"page\": {\n  \"type\": \"eu\",\n  \"size\": 98669806,\n  \"current\": -11904196,\n  \"has_next\": false,\n  \"item_total\": -94542940,\n  \"next_id\": \"mollit officia enim\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "cce19db8-a9aa-4122-8703-4081d41ff9ec",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1968-07-30T11:41:39.842Z\",\n \"status\": 39567910,\n \"error\": \"ex\",\n \"exception\": \"ullamco\",\n \"message\": \"ex irure cupidatat\",\n \"total_time_taken_in_millis\": 61556643,\n \"http_status\": \"300 MULTIPLE_CHOICES\",\n \"items\": [\n  {\n   \"company_id\": -13360525,\n   \"integration_data\": {},\n   \"company_name\": \"aliquip mollit adipisicing\",\n   \"task_details\": {\n    \"type\": 8646154,\n    \"group_list\": [\n     {\n      \"text\": \"quis sed amet nisi elit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laboris nostrud veniam cupidatat commodo\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -25990468.955051422,\n    \"safe_stock\": -44199361,\n    \"period_threshold\": -80182067,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"pariatur cupidatat Excepteur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"tempor sint\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aute Excepteu\",\n   \"alias\": \"velit dolor Excepteur\"\n  },\n  {\n   \"company_id\": 85135062,\n   \"integration_data\": {},\n   \"company_name\": \"tempor exercitation culpa enim\",\n   \"task_details\": {\n    \"type\": 66456880,\n    \"group_list\": [\n     {\n      \"text\": \"cupidatat aliquip eu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore nostrud irure\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -93239506.30045901,\n    \"safe_stock\": -75609400,\n    \"period_threshold\": 46475165,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ut nisi magna\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"labore enim reprehenderit fugiat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ipsum elit\",\n   \"alias\": \"occaecat \"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 85320171,\n   \"integration_data\": {},\n   \"company_name\": \"aliquip amet occaecat cupidatat officia\",\n   \"task_details\": {\n    \"type\": -29394829,\n    \"group_list\": [\n     {\n      \"text\": \"in occaecat do est\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sed non\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -17248961.88881293,\n    \"safe_stock\": -73541495,\n    \"period_threshold\": -61959295,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"Ut anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ad culpa dolor ullamco proident\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"reprehenderit in ipsum\",\n   \"alias\": \"et\"\n  },\n  {\n   \"company_id\": 81275533,\n   \"integration_data\": {},\n   \"company_name\": \"Excepteur sunt consequat quis\",\n   \"task_details\": {\n    \"type\": -83306064,\n    \"group_list\": [\n     {\n      \"text\": \"laborum qui\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"esse ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -15251688.469131038,\n    \"safe_stock\": -88972390,\n    \"period_threshold\": 24106851,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"reprehenderit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sed officia cupidatat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aute consectetur eiusm\",\n   \"alias\": \"veniam esse\"\n  }\n ],\n \"trace_id\": \"mollit nisi veniam in\",\n \"page\": {\n  \"type\": \"eu\",\n  \"size\": 98669806,\n  \"current\": -11904196,\n  \"has_next\": false,\n  \"item_total\": -94542940,\n  \"next_id\": \"mollit officia enim\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "861e14ff-f85f-477e-8852-5e97e3d665c2",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "bc9f87a2-61b9-45fb-b876-e635327c7464",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1976-03-29T06:06:58.918Z\",\n \"status\": 37059927,\n \"error\": \"labore pariatur aliquip\",\n \"exception\": \"qui cupidatat in tempor\",\n \"message\": \"consequat sit Lorem fugiat\",\n \"total_time_taken_in_millis\": 42190281,\n \"http_status\": \"102 PROCESSING\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"cillum\",\n \"page\": {\n  \"type\": \"id eiusmod\",\n  \"size\": 89404589,\n  \"current\": -82523159,\n  \"has_next\": true,\n  \"item_total\": -92032810,\n  \"next_id\": \"commodo ex amet eu\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e7818b40-f8fc-4804-a7b3-34b7ea8d517c",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1976-03-29T06:06:58.918Z\",\n \"status\": 37059927,\n \"error\": \"labore pariatur aliquip\",\n \"exception\": \"qui cupidatat in tempor\",\n \"message\": \"consequat sit Lorem fugiat\",\n \"total_time_taken_in_millis\": 42190281,\n \"http_status\": \"102 PROCESSING\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"cillum\",\n \"page\": {\n  \"type\": \"id eiusmod\",\n  \"size\": 89404589,\n  \"current\": -82523159,\n  \"has_next\": true,\n  \"item_total\": -92032810,\n  \"next_id\": \"commodo ex amet eu\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "fc0a2a6a-42db-4489-b1b0-0230372a0611",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1976-03-29T06:06:58.918Z\",\n \"status\": 37059927,\n \"error\": \"labore pariatur aliquip\",\n \"exception\": \"qui cupidatat in tempor\",\n \"message\": \"consequat sit Lorem fugiat\",\n \"total_time_taken_in_millis\": 42190281,\n \"http_status\": \"102 PROCESSING\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"cillum\",\n \"page\": {\n  \"type\": \"id eiusmod\",\n  \"size\": 89404589,\n  \"current\": -82523159,\n  \"has_next\": true,\n  \"item_total\": -92032810,\n  \"next_id\": \"commodo ex amet eu\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "2e002a97-b3e5-4e1d-a610-d83c07f89835",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "8e818130-36ca-482f-866d-6b1fdfc6b661",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2007-07-25T19:13:17.010Z\",\n \"status\": 50579673,\n \"error\": \"elit aliqua ea aute commodo\",\n \"exception\": \"elit qui mollit minim\",\n \"message\": \"enim est\",\n \"total_time_taken_in_millis\": -10515592,\n \"http_status\": \"506 VARIANT_ALSO_NEGOTIATES\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"culpa amet Lorem\",\n \"page\": {\n  \"type\": \"ipsum\",\n  \"size\": 85841572,\n  \"current\": 81083272,\n  \"has_next\": true,\n  \"item_total\": -36658,\n  \"next_id\": \"officia aliqua\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f8d60962-33f5-4496-905f-441b2a100451",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2007-07-25T19:13:17.010Z\",\n \"status\": 50579673,\n \"error\": \"elit aliqua ea aute commodo\",\n \"exception\": \"elit qui mollit minim\",\n \"message\": \"enim est\",\n \"total_time_taken_in_millis\": -10515592,\n \"http_status\": \"506 VARIANT_ALSO_NEGOTIATES\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"culpa amet Lorem\",\n \"page\": {\n  \"type\": \"ipsum\",\n  \"size\": 85841572,\n  \"current\": 81083272,\n  \"has_next\": true,\n  \"item_total\": -36658,\n  \"next_id\": \"officia aliqua\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "11f26f96-ba4d-46b9-b87e-32ec2cbb7c48",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2007-07-25T19:13:17.010Z\",\n \"status\": 50579673,\n \"error\": \"elit aliqua ea aute commodo\",\n \"exception\": \"elit qui mollit minim\",\n \"message\": \"enim est\",\n \"total_time_taken_in_millis\": -10515592,\n \"http_status\": \"506 VARIANT_ALSO_NEGOTIATES\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"culpa amet Lorem\",\n \"page\": {\n  \"type\": \"ipsum\",\n  \"size\": 85841572,\n  \"current\": 81083272,\n  \"has_next\": true,\n  \"item_total\": -36658,\n  \"next_id\": \"officia aliqua\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "43a72045-21f7-4358-9ce8-3c20b8b17a62",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2007-07-25T19:13:17.010Z\",\n \"status\": 50579673,\n \"error\": \"elit aliqua ea aute commodo\",\n \"exception\": \"elit qui mollit minim\",\n \"message\": \"enim est\",\n \"total_time_taken_in_millis\": -10515592,\n \"http_status\": \"506 VARIANT_ALSO_NEGOTIATES\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"culpa amet Lorem\",\n \"page\": {\n  \"type\": \"ipsum\",\n  \"size\": 85841572,\n  \"current\": 81083272,\n  \"has_next\": true,\n  \"item_total\": -36658,\n  \"next_id\": \"officia aliqua\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "26f40182-e8c9-4415-a4ef-dd2730984224",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2007-07-25T19:13:17.010Z\",\n \"status\": 50579673,\n \"error\": \"elit aliqua ea aute commodo\",\n \"exception\": \"elit qui mollit minim\",\n \"message\": \"enim est\",\n \"total_time_taken_in_millis\": -10515592,\n \"http_status\": \"506 VARIANT_ALSO_NEGOTIATES\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"culpa amet Lorem\",\n \"page\": {\n  \"type\": \"ipsum\",\n  \"size\": 85841572,\n  \"current\": 81083272,\n  \"has_next\": true,\n  \"item_total\": -36658,\n  \"next_id\": \"officia aliqua\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx0.de"
    }
  ],
  "info": {
    "_postman_id": "9d58c796-01ca-4437-ac47-a2b5cb2deb87",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
