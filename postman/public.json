{
  "item": [
    {
      "id": "46c3731b-ce5c-4518-be41-76f9ecd3b284",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "0b9cca1f-0300-483c-ab41-e6f8740b49b5",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "f60fab9a-44e4-464e-a9ec-f5a5ae0422df",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "id amet aliquip l",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b67187fd-21b2-4d3c-8b08-829657df19dd",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "id amet aliquip l",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"Invalid application domain or id.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "33d68d7c-9755-4911-b6f8-d380944b7e26",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "id amet aliquip l",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "f13509de-8162-45eb-8a10-8836fb6760e2",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "b1670ff9-b4a7-4865-af8c-7104a709644f",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "a1e5bc2d-313b-4adc-8840-701e2a7395ad",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "87224e67-bc39-40e0-9bb9-feb1f0d2285e",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "ac5c0079-c15b-4af6-b9a2-e01745d52234",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 64373625,\n   \"event_name\": \"pariatur\",\n   \"event_type\": \"nulla commodo\",\n   \"event_category\": \"id veniam deserunt consectetur\",\n   \"version\": \"sit anim Ut\",\n   \"display_name\": \"aute elit Lorem id\",\n   \"description\": \"enim nulla ad\",\n   \"created_on\": \"sint pariatur exercit\"\n  },\n  {\n   \"id\": -91213054,\n   \"event_name\": \"proident dolore fugiat nulla quis\",\n   \"event_type\": \"co\",\n   \"event_category\": \"dolore proident deserunt ad\",\n   \"version\": \"commodo ut sint velit\",\n   \"display_name\": \"voluptate reprehenderit eiusmod amet\",\n   \"description\": \"occaecat officia dolore tempor veniam\",\n   \"created_on\": \"enim tempor\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "6ec4a095-99f8-4126-a8a0-5c2ee04176ae",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "0b312f78-a9bc-4b24-b9a1-9f673ee6ab3c",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 20421671,\n   \"event_name\": \"sint deserunt in\",\n   \"event_type\": \"Duis dolore officia\",\n   \"event_category\": \"sed sint\",\n   \"version\": \"non cupidatat in velit occaecat\",\n   \"display_name\": \"elit magna\",\n   \"description\": \"magna qui\",\n   \"created_on\": \"pariatur est elit\"\n  },\n  {\n   \"id\": 57838785,\n   \"event_name\": \"commodo\",\n   \"event_type\": \"sint in\",\n   \"event_category\": \"adipisicing anim ullamco\",\n   \"version\": \"aute proident aliqua consectetur\",\n   \"display_name\": \"qui culpa officia\",\n   \"description\": \"cillum officia sit dolore\",\n   \"created_on\": \"velit in consectetur ullamco\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "477d2782-a64d-4817-ab1b-2d808575bed1",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "1f0f23dd-df6b-4fce-9485-290edc16d292",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "4108d974-bca7-4392-b119-8d80e7eaed72",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1998-12-15T10:10:21.226Z\",\n \"status\": -81868451,\n \"error\": \"do dolore velit dolore\",\n \"exception\": \"fugiat\",\n \"message\": \"esse ullamco reprehenderit enim\",\n \"total_time_taken_in_millis\": -91273294,\n \"http_status\": \"416 REQUESTED_RANGE_NOT_SATISFIABLE\",\n \"items\": [\n  {\n   \"company_id\": -59516318,\n   \"integration_data\": {},\n   \"company_name\": \"do laborum deserunt\",\n   \"task_details\": {\n    \"type\": 95687828,\n    \"group_list\": [\n     {\n      \"text\": \"aliquip\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sit ipsum nulla\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -47796448.93163466,\n    \"safe_stock\": -69442319,\n    \"period_threshold\": 23919470,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"reprehenderit dolore anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"deserunt et\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"cupidatat eiusmod ipsum magna mollit\",\n   \"alias\": \"tempor commodo\"\n  },\n  {\n   \"company_id\": -17960854,\n   \"integration_data\": {},\n   \"company_name\": \"aute exercitation ex anim elit\",\n   \"task_details\": {\n    \"type\": 73162614,\n    \"group_list\": [\n     {\n      \"text\": \"nisi Lorem est nulla\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"incididunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -66798212.05880727,\n    \"safe_stock\": -99530604,\n    \"period_threshold\": -64747380,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"elit sit irure\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"deserunt officia dolor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"nulla\",\n   \"alias\": \"consectetur in\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 99510755,\n   \"integration_data\": {},\n   \"company_name\": \"ad\",\n   \"task_details\": {\n    \"type\": -7878968,\n    \"group_list\": [\n     {\n      \"text\": \"aliquip velit cillum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 34906609.57804468,\n    \"safe_stock\": -57317577,\n    \"period_threshold\": 98890399,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ad in sed\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore nulla repre\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"exercitation aliqua mollit\",\n   \"alias\": \"officia labore veniam su\"\n  },\n  {\n   \"company_id\": -97883619,\n   \"integration_data\": {},\n   \"company_name\": \"ut culpa\",\n   \"task_details\": {\n    \"type\": 23629653,\n    \"group_list\": [\n     {\n      \"text\": \"nisi cillum cupi\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proident in aliquip quis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 41767045.72887501,\n    \"safe_stock\": -57267813,\n    \"period_threshold\": -66469143,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"laborum culpa\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"qui eiusmod consequat nisi\",\n   \"alias\": \"cupidatat enim dolore deserunt\"\n  }\n ],\n \"trace_id\": \"proident\",\n \"page\": {\n  \"type\": \"amet cupidatat in\",\n  \"size\": -36538279,\n  \"current\": 11741661,\n  \"has_next\": true,\n  \"item_total\": 64605867,\n  \"next_id\": \"ad eu incididunt enim laborum\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "70eb1c58-584a-4a8e-840d-78e39e726a61",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1982-01-14T12:11:10.370Z\",\n \"status\": 51862502,\n \"error\": \"id aute\",\n \"exception\": \"esse\",\n \"message\": \"nostrud deserunt officia\",\n \"total_time_taken_in_millis\": 60398840,\n \"http_status\": \"102 PROCESSING\",\n \"items\": [\n  {\n   \"company_id\": 33648897,\n   \"integration_data\": {},\n   \"company_name\": \"laboris sint ad Duis\",\n   \"task_details\": {\n    \"type\": -45584951,\n    \"group_list\": [\n     {\n      \"text\": \"sunt occaecat laboris et\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ullamco nulla\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 32308770.174696162,\n    \"safe_stock\": 83739894,\n    \"period_threshold\": 80148027,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"deserun\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"consequat nisi\",\n   \"alias\": \"et Excepteur\"\n  },\n  {\n   \"company_id\": 95509587,\n   \"integration_data\": {},\n   \"company_name\": \"ullamco aliquip non\",\n   \"task_details\": {\n    \"type\": -77211485,\n    \"group_list\": [\n     {\n      \"text\": \"amet tempor exercitation\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nisi est\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -11922675.319458961,\n    \"safe_stock\": -69332021,\n    \"period_threshold\": -6619099,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"Lo\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"labore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in non minim deserunt\",\n   \"alias\": \"veniam ad\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -90023797,\n   \"integration_data\": {},\n   \"company_name\": \"culpa dolore elit dolore sunt\",\n   \"task_details\": {\n    \"type\": 30022949,\n    \"group_list\": [\n     {\n      \"text\": \"consequat do\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 63840982.29707962,\n    \"safe_stock\": -85502903,\n    \"period_threshold\": 96579096,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"quis qui\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laborum Excepteur exercitation\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in sit nulla cupidatat\",\n   \"alias\": \"dolore\"\n  },\n  {\n   \"company_id\": 55311711,\n   \"integration_data\": {},\n   \"company_name\": \"officia\",\n   \"task_details\": {\n    \"type\": -62935583,\n    \"group_list\": [\n     {\n      \"text\": \"labore quis laborum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolo\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 46029841.30429667,\n    \"safe_stock\": 70170457,\n    \"period_threshold\": -2266379,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"Lorem aliquip fugiat do\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Lorem Duis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sit magna adipisicing Duis occaecat\",\n   \"alias\": \"mollit\"\n  }\n ],\n \"trace_id\": \"enim proident\",\n \"page\": {\n  \"type\": \"tempor id Lorem dolore\",\n  \"size\": 54281249,\n  \"current\": -86184325,\n  \"has_next\": true,\n  \"item_total\": -90112720,\n  \"next_id\": \"incididunt elit in aute\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "522895e3-5c95-4a2e-bbf7-22c2f8c726ea",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1982-01-14T12:11:10.370Z\",\n \"status\": 51862502,\n \"error\": \"id aute\",\n \"exception\": \"esse\",\n \"message\": \"nostrud deserunt officia\",\n \"total_time_taken_in_millis\": 60398840,\n \"http_status\": \"102 PROCESSING\",\n \"items\": [\n  {\n   \"company_id\": 33648897,\n   \"integration_data\": {},\n   \"company_name\": \"laboris sint ad Duis\",\n   \"task_details\": {\n    \"type\": -45584951,\n    \"group_list\": [\n     {\n      \"text\": \"sunt occaecat laboris et\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ullamco nulla\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 32308770.174696162,\n    \"safe_stock\": 83739894,\n    \"period_threshold\": 80148027,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"deserun\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"consequat nisi\",\n   \"alias\": \"et Excepteur\"\n  },\n  {\n   \"company_id\": 95509587,\n   \"integration_data\": {},\n   \"company_name\": \"ullamco aliquip non\",\n   \"task_details\": {\n    \"type\": -77211485,\n    \"group_list\": [\n     {\n      \"text\": \"amet tempor exercitation\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nisi est\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -11922675.319458961,\n    \"safe_stock\": -69332021,\n    \"period_threshold\": -6619099,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"Lo\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"labore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in non minim deserunt\",\n   \"alias\": \"veniam ad\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -90023797,\n   \"integration_data\": {},\n   \"company_name\": \"culpa dolore elit dolore sunt\",\n   \"task_details\": {\n    \"type\": 30022949,\n    \"group_list\": [\n     {\n      \"text\": \"consequat do\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 63840982.29707962,\n    \"safe_stock\": -85502903,\n    \"period_threshold\": 96579096,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"quis qui\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laborum Excepteur exercitation\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in sit nulla cupidatat\",\n   \"alias\": \"dolore\"\n  },\n  {\n   \"company_id\": 55311711,\n   \"integration_data\": {},\n   \"company_name\": \"officia\",\n   \"task_details\": {\n    \"type\": -62935583,\n    \"group_list\": [\n     {\n      \"text\": \"labore quis laborum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolo\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 46029841.30429667,\n    \"safe_stock\": 70170457,\n    \"period_threshold\": -2266379,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"Lorem aliquip fugiat do\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Lorem Duis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sit magna adipisicing Duis occaecat\",\n   \"alias\": \"mollit\"\n  }\n ],\n \"trace_id\": \"enim proident\",\n \"page\": {\n  \"type\": \"tempor id Lorem dolore\",\n  \"size\": 54281249,\n  \"current\": -86184325,\n  \"has_next\": true,\n  \"item_total\": -90112720,\n  \"next_id\": \"incididunt elit in aute\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "646d6974-4adc-42a4-a566-e81282688090",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "116fa7c7-541c-467f-a627-00d0b10d3367",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1971-07-23T13:38:19.703Z\",\n \"status\": 67604003,\n \"error\": \"amet irure\",\n \"exception\": \"Duis irure amet\",\n \"message\": \"irure velit ex\",\n \"total_time_taken_in_millis\": 33430683,\n \"http_status\": \"404 NOT_FOUND\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"laboris qui commodo dolor\",\n \"page\": {\n  \"type\": \"do ad Lorem\",\n  \"size\": -26750391,\n  \"current\": -5094672,\n  \"has_next\": false,\n  \"item_total\": -58744824,\n  \"next_id\": \"nostrud adipisicing id non\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "604b837b-6027-4d22-a4b3-7825ca140363",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1971-07-23T13:38:19.703Z\",\n \"status\": 67604003,\n \"error\": \"amet irure\",\n \"exception\": \"Duis irure amet\",\n \"message\": \"irure velit ex\",\n \"total_time_taken_in_millis\": 33430683,\n \"http_status\": \"404 NOT_FOUND\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"laboris qui commodo dolor\",\n \"page\": {\n  \"type\": \"do ad Lorem\",\n  \"size\": -26750391,\n  \"current\": -5094672,\n  \"has_next\": false,\n  \"item_total\": -58744824,\n  \"next_id\": \"nostrud adipisicing id non\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "7c83391d-4c36-47d4-af23-4b23a407cd65",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1971-07-23T13:38:19.703Z\",\n \"status\": 67604003,\n \"error\": \"amet irure\",\n \"exception\": \"Duis irure amet\",\n \"message\": \"irure velit ex\",\n \"total_time_taken_in_millis\": 33430683,\n \"http_status\": \"404 NOT_FOUND\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"laboris qui commodo dolor\",\n \"page\": {\n  \"type\": \"do ad Lorem\",\n  \"size\": -26750391,\n  \"current\": -5094672,\n  \"has_next\": false,\n  \"item_total\": -58744824,\n  \"next_id\": \"nostrud adipisicing id non\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "f913733b-598e-4518-9133-e520dc143d5f",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "6974a7d0-0e98-42e3-8017-a73c0a4828e8",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1985-04-24T02:28:51.286Z\",\n \"status\": -25608593,\n \"error\": \"ut sed\",\n \"exception\": \"ut ex in proident\",\n \"message\": \"proident velit dolor ullamco ipsum\",\n \"total_time_taken_in_millis\": 97661364,\n \"http_status\": \"504 GATEWAY_TIMEOUT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"nulla\",\n \"page\": {\n  \"type\": \"eu labor\",\n  \"size\": -11412435,\n  \"current\": -55983683,\n  \"has_next\": false,\n  \"item_total\": -32536044,\n  \"next_id\": \"reprehenderit ex Ut\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c1cfd0dc-09e0-491e-8d18-750256055fa5",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1985-04-24T02:28:51.286Z\",\n \"status\": -25608593,\n \"error\": \"ut sed\",\n \"exception\": \"ut ex in proident\",\n \"message\": \"proident velit dolor ullamco ipsum\",\n \"total_time_taken_in_millis\": 97661364,\n \"http_status\": \"504 GATEWAY_TIMEOUT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"nulla\",\n \"page\": {\n  \"type\": \"eu labor\",\n  \"size\": -11412435,\n  \"current\": -55983683,\n  \"has_next\": false,\n  \"item_total\": -32536044,\n  \"next_id\": \"reprehenderit ex Ut\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "55f74e8e-c521-432c-b80e-5f1b5998f52e",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1985-04-24T02:28:51.286Z\",\n \"status\": -25608593,\n \"error\": \"ut sed\",\n \"exception\": \"ut ex in proident\",\n \"message\": \"proident velit dolor ullamco ipsum\",\n \"total_time_taken_in_millis\": 97661364,\n \"http_status\": \"504 GATEWAY_TIMEOUT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"nulla\",\n \"page\": {\n  \"type\": \"eu labor\",\n  \"size\": -11412435,\n  \"current\": -55983683,\n  \"has_next\": false,\n  \"item_total\": -32536044,\n  \"next_id\": \"reprehenderit ex Ut\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "6cac9d2d-f0a1-45d0-91ed-eb4fbdb3525c",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1985-04-24T02:28:51.286Z\",\n \"status\": -25608593,\n \"error\": \"ut sed\",\n \"exception\": \"ut ex in proident\",\n \"message\": \"proident velit dolor ullamco ipsum\",\n \"total_time_taken_in_millis\": 97661364,\n \"http_status\": \"504 GATEWAY_TIMEOUT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"nulla\",\n \"page\": {\n  \"type\": \"eu labor\",\n  \"size\": -11412435,\n  \"current\": -55983683,\n  \"has_next\": false,\n  \"item_total\": -32536044,\n  \"next_id\": \"reprehenderit ex Ut\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "4508d1bf-e180-4ec1-a197-c75b1bf76747",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1985-04-24T02:28:51.286Z\",\n \"status\": -25608593,\n \"error\": \"ut sed\",\n \"exception\": \"ut ex in proident\",\n \"message\": \"proident velit dolor ullamco ipsum\",\n \"total_time_taken_in_millis\": 97661364,\n \"http_status\": \"504 GATEWAY_TIMEOUT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"nulla\",\n \"page\": {\n  \"type\": \"eu labor\",\n  \"size\": -11412435,\n  \"current\": -55983683,\n  \"has_next\": false,\n  \"item_total\": -32536044,\n  \"next_id\": \"reprehenderit ex Ut\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx0.de"
    }
  ],
  "info": {
    "_postman_id": "baa2f860-7853-4c6a-ac0c-f4922b67e02d",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
