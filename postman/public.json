{
  "item": [
    {
      "id": "23ac40f6-e9da-4d9c-a8c2-ec7d6802eacd",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "35e1c1ee-875c-42b5-bda3-6c74abcae2d9",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "0c6f9f6e-487a-47ee-b9ca-2a9875174ab1",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "nostrud consequat Excepteur",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "02d08cc2-7b65-4608-8c01-499b03807438",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "nostrud consequat Excepteur",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "acd43a55-f07c-4c29-95a1-ccef2cc22cf5",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "nostrud consequat Excepteur",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "614b2613-4d23-44de-9dfd-78fbad558a29",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "b6ad80db-d1be-4310-8bc3-de7df9cb41c3",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "54548f88-9bdf-456b-a4c5-6dce184aadd7",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "f0eae390-46ba-445c-94fd-a63f52623d2a",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "9a9effa4-e2d9-4912-8a91-62009bba5ad0",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -35779817,\n   \"event_name\": \"esse ut dolor\",\n   \"event_type\": \"do sit\",\n   \"event_category\": \"aliquip fugiat aliqua reprehenderit\",\n   \"version\": \"adipisicing Lorem\",\n   \"display_name\": \"deserunt ipsum sit ut\",\n   \"description\": \"ex ea nostrud ad reprehenderit\",\n   \"created_on\": \"dolore aute voluptate\"\n  },\n  {\n   \"id\": -30437462,\n   \"event_name\": \"dolor nulla esse cillum\",\n   \"event_type\": \"occaecat dolor Excepteur\",\n   \"event_category\": \"reprehenderit ut in nisi\",\n   \"version\": \"sint occaecat in cillum\",\n   \"display_name\": \"culpa ut fugiat nostrud\",\n   \"description\": \"in est laborum ad\",\n   \"created_on\": \"laboris qui eiusmod in\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "8d09f4bb-a386-4d8e-b8d7-6493376e5a02",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "fcf64dec-98dd-4872-bd5b-81898510daf5",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -4405687,\n   \"event_name\": \"Lorem cupidatat irure\",\n   \"event_type\": \"elit ea\",\n   \"event_category\": \"aliquip aute eu labore\",\n   \"version\": \"laborum elit\",\n   \"display_name\": \"ut sint\",\n   \"description\": \"mollit dolor\",\n   \"created_on\": \"qui deserunt\"\n  },\n  {\n   \"id\": -79973894,\n   \"event_name\": \"esse qui in\",\n   \"event_type\": \"qui nulla do dolor\",\n   \"event_category\": \"ex nulla veniam\",\n   \"version\": \"Ut Lorem enim sunt pariatur\",\n   \"display_name\": \"ad Duis reprehenderit\",\n   \"description\": \"dolore proident dolor\",\n   \"created_on\": \"Ut\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "106a744e-2d0c-46b6-9fa3-8d1f8c48e957",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "b668c5b2-c7a8-46c4-b820-d85780d8bf63",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "5cccb8ce-26cb-489d-a103-3078ade4da44",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2005-08-12T18:11:46.125Z\",\n \"status\": 5637311,\n \"error\": \"in pariatur\",\n \"exception\": \"ea in nisi c\",\n \"message\": \"magna aute\",\n \"total_time_taken_in_millis\": -92110369,\n \"http_status\": \"415 UNSUPPORTED_MEDIA_TYPE\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"ea in\",\n   \"description\": \"adipisicing\",\n   \"name\": \"irure laborum\",\n   \"slug\": \"in velit\",\n   \"meta\": [\n    {\n     \"_id\": \"non sunt est\",\n     \"name\": \"esse eu in reprehenderit\",\n     \"value\": \"ea sed laboris eiusmod\"\n    },\n    {\n     \"_id\": \"dolore nulla non ea\",\n     \"name\": \"laboris\",\n     \"value\": \"veniam\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"sed esse\",\n    \"integration\": \"tempor ullamco magna Excepteur irure\",\n    \"level\": \"labore\",\n    \"uid\": 29552484,\n    \"opted\": true,\n    \"permissions\": [\n     \"adipisicing ut veniam laborum exercitation\",\n     \"magna quis amet non\"\n    ],\n    \"token\": \"dolor quis\",\n    \"name\": \"dolore laboris veniam in Ut\",\n    \"stores\": [\n     {\n      \"_id\": \"pariatur reprehenderit\",\n      \"integration\": \"ut magna dolor dolor\",\n      \"level\": \"cillum magna inci\",\n      \"uid\": -25336909,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolor incididunt\",\n      \"code\": \"sed cupida\",\n      \"name\": \"dolor laborum nostrud in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"aliqua qui pariatur incididunt\",\n      \"integration\": \"et labore sunt\",\n      \"level\": \"occaecat sint\",\n      \"uid\": 20058524,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"nisi proident deserunt adipisicing in\",\n      \"code\": \"dolor ipsum nisi mollit ex\",\n      \"name\": \"dolore id\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"Lorem quis deserunt aute\",\n      \"integration\": \"Ut incididunt\",\n      \"level\": \"minim do enim\",\n      \"uid\": -16920522,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Excepteur esse minim\",\n      \"code\": \"ullamco proident est lab\",\n      \"name\": \"non ullamco consequat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"nulla Ut anim ut officia\",\n      \"integration\": \"pariatur laboris\",\n      \"level\": \"laborum magna aliqua quis\",\n      \"uid\": -75191377,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ad officia ipsum\",\n      \"code\": \"exercitation\",\n      \"name\": \"sunt do\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"qui consectetur\",\n    \"integration\": \"incididunt\",\n    \"level\": \"ad aliqua sit fugiat dolor\",\n    \"uid\": -55830624,\n    \"opted\": false,\n    \"permissions\": [\n     \"laboris sit sed dolo\",\n     \"consectetur aliquip\"\n    ],\n    \"token\": \"laborum\",\n    \"name\": \"ex ea velit\",\n    \"stores\": [\n     {\n      \"_id\": \"et cillum dolor eiusmod culpa\",\n      \"integration\": \"qui\",\n      \"level\": \"consequat dolore qui no\",\n      \"uid\": -71609102,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"est dolor dolor\",\n      \"code\": \"velit sed enim est\",\n      \"name\": \"dolore velit dolor do\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"eu sunt\",\n      \"integration\": \"dolor laboris Ut\",\n      \"level\": \"Ut aute amet\",\n      \"uid\": 58518554,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"do voluptate\",\n      \"code\": \"in in proident\",\n      \"name\": \"ea\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"veniam dolore aliquip voluptate\",\n      \"integration\": \"Excepteur ipsum nis\",\n      \"level\": \"consequat ut officia ullamco\",\n      \"uid\": 73033679,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ut esse pariatur dolore consequat\",\n      \"code\": \"sit Excepteur exercita\",\n      \"name\": \"elit anim dolor\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"id non culpa\",\n      \"integration\": \"et non ullamco\",\n      \"level\": \"tempor culpa\",\n      \"uid\": -53573949,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"consectetur in\",\n      \"code\": \"enim\",\n      \"name\": \"Duis cillum\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"amet\",\n   \"description\": \"anim sunt dolor\",\n   \"name\": \"in est\",\n   \"slug\": \"labore\",\n   \"meta\": [\n    {\n     \"_id\": \"laborum ut occaecat sed\",\n     \"name\": \"esse Ut nostrud ut\",\n     \"value\": \"fugiat\"\n    },\n    {\n     \"_id\": \"mollit velit\",\n     \"name\": \"sint nisi\",\n     \"value\": \"elit cupidatat exercitation nulla sunt\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"sint aliqua\",\n    \"integration\": \"dolor velit\",\n    \"level\": \"veniam ut\",\n    \"uid\": 12035350,\n    \"opted\": false,\n    \"permissions\": [\n     \"proident culpa aliquip in ad\",\n     \"ea in laboris est\"\n    ],\n    \"token\": \"qui anim exercitation\",\n    \"name\": \"qui\",\n    \"stores\": [\n     {\n      \"_id\": \"magna\",\n      \"integration\": \"id dolore\",\n      \"level\": \"amet fugiat occaecat aute\",\n      \"uid\": 58674200,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"aliquip minim\",\n      \"code\": \"ad Lorem non\",\n      \"name\": \"\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"aliquip dolore id mi\",\n      \"integration\": \"Duis\",\n      \"level\": \"aliqua\",\n      \"uid\": 4680430,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"incididunt nostrud enim sint\",\n      \"code\": \"aliquip \",\n      \"name\": \"ad fugiat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"laborum ea\",\n      \"integration\": \"anim ipsum\",\n      \"level\": \"dolore in\",\n      \"uid\": 8647689,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"velit ut non\",\n      \"code\": \"ipsum elit\",\n      \"name\": \"proident ad sit deserunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"nisi in cupidatat\",\n      \"integration\": \"in\",\n      \"level\": \"incididunt enim sunt in quis\",\n      \"uid\": -92554012,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"cupidatat ut\",\n      \"code\": \"deserunt n\",\n      \"name\": \"officia veniam \",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"dolor\",\n    \"integration\": \"Duis officia dolore ea\",\n    \"level\": \"Duis\",\n    \"uid\": -54990983,\n    \"opted\": true,\n    \"permissions\": [\n     \"non et nulla dolore\",\n     \"sunt nostrud non\"\n    ],\n    \"token\": \"ipsum sed dolor Ut\",\n    \"name\": \"esse dolore consequat sunt\",\n    \"stores\": [\n     {\n      \"_id\": \"repr\",\n      \"integration\": \"nostrud ut quis magna\",\n      \"level\": \"in voluptate eu et\",\n      \"uid\": -65983569,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"tempor Duis adipisicing nisi\",\n      \"code\": \"amet\",\n      \"name\": \"labore magna\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"ex velit in sunt\",\n      \"integration\": \"dolore voluptate Excepteur in\",\n      \"level\": \"aliquip deserunt\",\n      \"uid\": 38233934,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"quis id\",\n      \"code\": \"nostrud eu non\",\n      \"name\": \"mollit elit id minim\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"velit dolor\",\n      \"integration\": \"consectetur\",\n      \"level\": \"eu aute\",\n      \"uid\": -99225666,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ea et ut eu\",\n      \"code\": \"ma\",\n      \"name\": \"adipisicing nostrud et magna\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"enim i\",\n      \"integration\": \"mollit\",\n      \"level\": \"eiusmod ullamco incididunt\",\n      \"uid\": -71488997,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"elit quis Lorem Duis\",\n      \"code\": \"est adipisicing nostrud ut\",\n      \"name\": \"in irure aute et\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"ex Excepteur volu\",\n \"page\": {\n  \"type\": \"amet pariatur\",\n  \"size\": -95040865,\n  \"current\": 49526484,\n  \"has_next\": false,\n  \"item_total\": -86479155,\n  \"next_id\": \"pariat\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d6408ea0-eaca-41fa-bbd0-90ceca19cfc5",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2005-08-12T18:11:46.125Z\",\n \"status\": 5637311,\n \"error\": \"in pariatur\",\n \"exception\": \"ea in nisi c\",\n \"message\": \"magna aute\",\n \"total_time_taken_in_millis\": -92110369,\n \"http_status\": \"415 UNSUPPORTED_MEDIA_TYPE\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"ea in\",\n   \"description\": \"adipisicing\",\n   \"name\": \"irure laborum\",\n   \"slug\": \"in velit\",\n   \"meta\": [\n    {\n     \"_id\": \"non sunt est\",\n     \"name\": \"esse eu in reprehenderit\",\n     \"value\": \"ea sed laboris eiusmod\"\n    },\n    {\n     \"_id\": \"dolore nulla non ea\",\n     \"name\": \"laboris\",\n     \"value\": \"veniam\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"sed esse\",\n    \"integration\": \"tempor ullamco magna Excepteur irure\",\n    \"level\": \"labore\",\n    \"uid\": 29552484,\n    \"opted\": true,\n    \"permissions\": [\n     \"adipisicing ut veniam laborum exercitation\",\n     \"magna quis amet non\"\n    ],\n    \"token\": \"dolor quis\",\n    \"name\": \"dolore laboris veniam in Ut\",\n    \"stores\": [\n     {\n      \"_id\": \"pariatur reprehenderit\",\n      \"integration\": \"ut magna dolor dolor\",\n      \"level\": \"cillum magna inci\",\n      \"uid\": -25336909,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolor incididunt\",\n      \"code\": \"sed cupida\",\n      \"name\": \"dolor laborum nostrud in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"aliqua qui pariatur incididunt\",\n      \"integration\": \"et labore sunt\",\n      \"level\": \"occaecat sint\",\n      \"uid\": 20058524,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"nisi proident deserunt adipisicing in\",\n      \"code\": \"dolor ipsum nisi mollit ex\",\n      \"name\": \"dolore id\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"Lorem quis deserunt aute\",\n      \"integration\": \"Ut incididunt\",\n      \"level\": \"minim do enim\",\n      \"uid\": -16920522,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Excepteur esse minim\",\n      \"code\": \"ullamco proident est lab\",\n      \"name\": \"non ullamco consequat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"nulla Ut anim ut officia\",\n      \"integration\": \"pariatur laboris\",\n      \"level\": \"laborum magna aliqua quis\",\n      \"uid\": -75191377,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ad officia ipsum\",\n      \"code\": \"exercitation\",\n      \"name\": \"sunt do\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"qui consectetur\",\n    \"integration\": \"incididunt\",\n    \"level\": \"ad aliqua sit fugiat dolor\",\n    \"uid\": -55830624,\n    \"opted\": false,\n    \"permissions\": [\n     \"laboris sit sed dolo\",\n     \"consectetur aliquip\"\n    ],\n    \"token\": \"laborum\",\n    \"name\": \"ex ea velit\",\n    \"stores\": [\n     {\n      \"_id\": \"et cillum dolor eiusmod culpa\",\n      \"integration\": \"qui\",\n      \"level\": \"consequat dolore qui no\",\n      \"uid\": -71609102,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"est dolor dolor\",\n      \"code\": \"velit sed enim est\",\n      \"name\": \"dolore velit dolor do\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"eu sunt\",\n      \"integration\": \"dolor laboris Ut\",\n      \"level\": \"Ut aute amet\",\n      \"uid\": 58518554,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"do voluptate\",\n      \"code\": \"in in proident\",\n      \"name\": \"ea\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"veniam dolore aliquip voluptate\",\n      \"integration\": \"Excepteur ipsum nis\",\n      \"level\": \"consequat ut officia ullamco\",\n      \"uid\": 73033679,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ut esse pariatur dolore consequat\",\n      \"code\": \"sit Excepteur exercita\",\n      \"name\": \"elit anim dolor\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"id non culpa\",\n      \"integration\": \"et non ullamco\",\n      \"level\": \"tempor culpa\",\n      \"uid\": -53573949,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"consectetur in\",\n      \"code\": \"enim\",\n      \"name\": \"Duis cillum\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"amet\",\n   \"description\": \"anim sunt dolor\",\n   \"name\": \"in est\",\n   \"slug\": \"labore\",\n   \"meta\": [\n    {\n     \"_id\": \"laborum ut occaecat sed\",\n     \"name\": \"esse Ut nostrud ut\",\n     \"value\": \"fugiat\"\n    },\n    {\n     \"_id\": \"mollit velit\",\n     \"name\": \"sint nisi\",\n     \"value\": \"elit cupidatat exercitation nulla sunt\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"sint aliqua\",\n    \"integration\": \"dolor velit\",\n    \"level\": \"veniam ut\",\n    \"uid\": 12035350,\n    \"opted\": false,\n    \"permissions\": [\n     \"proident culpa aliquip in ad\",\n     \"ea in laboris est\"\n    ],\n    \"token\": \"qui anim exercitation\",\n    \"name\": \"qui\",\n    \"stores\": [\n     {\n      \"_id\": \"magna\",\n      \"integration\": \"id dolore\",\n      \"level\": \"amet fugiat occaecat aute\",\n      \"uid\": 58674200,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"aliquip minim\",\n      \"code\": \"ad Lorem non\",\n      \"name\": \"\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"aliquip dolore id mi\",\n      \"integration\": \"Duis\",\n      \"level\": \"aliqua\",\n      \"uid\": 4680430,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"incididunt nostrud enim sint\",\n      \"code\": \"aliquip \",\n      \"name\": \"ad fugiat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"laborum ea\",\n      \"integration\": \"anim ipsum\",\n      \"level\": \"dolore in\",\n      \"uid\": 8647689,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"velit ut non\",\n      \"code\": \"ipsum elit\",\n      \"name\": \"proident ad sit deserunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"nisi in cupidatat\",\n      \"integration\": \"in\",\n      \"level\": \"incididunt enim sunt in quis\",\n      \"uid\": -92554012,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"cupidatat ut\",\n      \"code\": \"deserunt n\",\n      \"name\": \"officia veniam \",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"dolor\",\n    \"integration\": \"Duis officia dolore ea\",\n    \"level\": \"Duis\",\n    \"uid\": -54990983,\n    \"opted\": true,\n    \"permissions\": [\n     \"non et nulla dolore\",\n     \"sunt nostrud non\"\n    ],\n    \"token\": \"ipsum sed dolor Ut\",\n    \"name\": \"esse dolore consequat sunt\",\n    \"stores\": [\n     {\n      \"_id\": \"repr\",\n      \"integration\": \"nostrud ut quis magna\",\n      \"level\": \"in voluptate eu et\",\n      \"uid\": -65983569,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"tempor Duis adipisicing nisi\",\n      \"code\": \"amet\",\n      \"name\": \"labore magna\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"ex velit in sunt\",\n      \"integration\": \"dolore voluptate Excepteur in\",\n      \"level\": \"aliquip deserunt\",\n      \"uid\": 38233934,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"quis id\",\n      \"code\": \"nostrud eu non\",\n      \"name\": \"mollit elit id minim\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"velit dolor\",\n      \"integration\": \"consectetur\",\n      \"level\": \"eu aute\",\n      \"uid\": -99225666,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ea et ut eu\",\n      \"code\": \"ma\",\n      \"name\": \"adipisicing nostrud et magna\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"enim i\",\n      \"integration\": \"mollit\",\n      \"level\": \"eiusmod ullamco incididunt\",\n      \"uid\": -71488997,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"elit quis Lorem Duis\",\n      \"code\": \"est adipisicing nostrud ut\",\n      \"name\": \"in irure aute et\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"ex Excepteur volu\",\n \"page\": {\n  \"type\": \"amet pariatur\",\n  \"size\": -95040865,\n  \"current\": 49526484,\n  \"has_next\": false,\n  \"item_total\": -86479155,\n  \"next_id\": \"pariat\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "4301644a-ac17-4303-a77c-baca7f49f2a0",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2005-08-12T18:11:46.125Z\",\n \"status\": 5637311,\n \"error\": \"in pariatur\",\n \"exception\": \"ea in nisi c\",\n \"message\": \"magna aute\",\n \"total_time_taken_in_millis\": -92110369,\n \"http_status\": \"415 UNSUPPORTED_MEDIA_TYPE\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"ea in\",\n   \"description\": \"adipisicing\",\n   \"name\": \"irure laborum\",\n   \"slug\": \"in velit\",\n   \"meta\": [\n    {\n     \"_id\": \"non sunt est\",\n     \"name\": \"esse eu in reprehenderit\",\n     \"value\": \"ea sed laboris eiusmod\"\n    },\n    {\n     \"_id\": \"dolore nulla non ea\",\n     \"name\": \"laboris\",\n     \"value\": \"veniam\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"sed esse\",\n    \"integration\": \"tempor ullamco magna Excepteur irure\",\n    \"level\": \"labore\",\n    \"uid\": 29552484,\n    \"opted\": true,\n    \"permissions\": [\n     \"adipisicing ut veniam laborum exercitation\",\n     \"magna quis amet non\"\n    ],\n    \"token\": \"dolor quis\",\n    \"name\": \"dolore laboris veniam in Ut\",\n    \"stores\": [\n     {\n      \"_id\": \"pariatur reprehenderit\",\n      \"integration\": \"ut magna dolor dolor\",\n      \"level\": \"cillum magna inci\",\n      \"uid\": -25336909,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolor incididunt\",\n      \"code\": \"sed cupida\",\n      \"name\": \"dolor laborum nostrud in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"aliqua qui pariatur incididunt\",\n      \"integration\": \"et labore sunt\",\n      \"level\": \"occaecat sint\",\n      \"uid\": 20058524,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"nisi proident deserunt adipisicing in\",\n      \"code\": \"dolor ipsum nisi mollit ex\",\n      \"name\": \"dolore id\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"Lorem quis deserunt aute\",\n      \"integration\": \"Ut incididunt\",\n      \"level\": \"minim do enim\",\n      \"uid\": -16920522,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Excepteur esse minim\",\n      \"code\": \"ullamco proident est lab\",\n      \"name\": \"non ullamco consequat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"nulla Ut anim ut officia\",\n      \"integration\": \"pariatur laboris\",\n      \"level\": \"laborum magna aliqua quis\",\n      \"uid\": -75191377,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ad officia ipsum\",\n      \"code\": \"exercitation\",\n      \"name\": \"sunt do\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"qui consectetur\",\n    \"integration\": \"incididunt\",\n    \"level\": \"ad aliqua sit fugiat dolor\",\n    \"uid\": -55830624,\n    \"opted\": false,\n    \"permissions\": [\n     \"laboris sit sed dolo\",\n     \"consectetur aliquip\"\n    ],\n    \"token\": \"laborum\",\n    \"name\": \"ex ea velit\",\n    \"stores\": [\n     {\n      \"_id\": \"et cillum dolor eiusmod culpa\",\n      \"integration\": \"qui\",\n      \"level\": \"consequat dolore qui no\",\n      \"uid\": -71609102,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"est dolor dolor\",\n      \"code\": \"velit sed enim est\",\n      \"name\": \"dolore velit dolor do\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"eu sunt\",\n      \"integration\": \"dolor laboris Ut\",\n      \"level\": \"Ut aute amet\",\n      \"uid\": 58518554,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"do voluptate\",\n      \"code\": \"in in proident\",\n      \"name\": \"ea\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"veniam dolore aliquip voluptate\",\n      \"integration\": \"Excepteur ipsum nis\",\n      \"level\": \"consequat ut officia ullamco\",\n      \"uid\": 73033679,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ut esse pariatur dolore consequat\",\n      \"code\": \"sit Excepteur exercita\",\n      \"name\": \"elit anim dolor\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"id non culpa\",\n      \"integration\": \"et non ullamco\",\n      \"level\": \"tempor culpa\",\n      \"uid\": -53573949,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"consectetur in\",\n      \"code\": \"enim\",\n      \"name\": \"Duis cillum\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"amet\",\n   \"description\": \"anim sunt dolor\",\n   \"name\": \"in est\",\n   \"slug\": \"labore\",\n   \"meta\": [\n    {\n     \"_id\": \"laborum ut occaecat sed\",\n     \"name\": \"esse Ut nostrud ut\",\n     \"value\": \"fugiat\"\n    },\n    {\n     \"_id\": \"mollit velit\",\n     \"name\": \"sint nisi\",\n     \"value\": \"elit cupidatat exercitation nulla sunt\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"sint aliqua\",\n    \"integration\": \"dolor velit\",\n    \"level\": \"veniam ut\",\n    \"uid\": 12035350,\n    \"opted\": false,\n    \"permissions\": [\n     \"proident culpa aliquip in ad\",\n     \"ea in laboris est\"\n    ],\n    \"token\": \"qui anim exercitation\",\n    \"name\": \"qui\",\n    \"stores\": [\n     {\n      \"_id\": \"magna\",\n      \"integration\": \"id dolore\",\n      \"level\": \"amet fugiat occaecat aute\",\n      \"uid\": 58674200,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"aliquip minim\",\n      \"code\": \"ad Lorem non\",\n      \"name\": \"\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"aliquip dolore id mi\",\n      \"integration\": \"Duis\",\n      \"level\": \"aliqua\",\n      \"uid\": 4680430,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"incididunt nostrud enim sint\",\n      \"code\": \"aliquip \",\n      \"name\": \"ad fugiat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"laborum ea\",\n      \"integration\": \"anim ipsum\",\n      \"level\": \"dolore in\",\n      \"uid\": 8647689,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"velit ut non\",\n      \"code\": \"ipsum elit\",\n      \"name\": \"proident ad sit deserunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"nisi in cupidatat\",\n      \"integration\": \"in\",\n      \"level\": \"incididunt enim sunt in quis\",\n      \"uid\": -92554012,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"cupidatat ut\",\n      \"code\": \"deserunt n\",\n      \"name\": \"officia veniam \",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"dolor\",\n    \"integration\": \"Duis officia dolore ea\",\n    \"level\": \"Duis\",\n    \"uid\": -54990983,\n    \"opted\": true,\n    \"permissions\": [\n     \"non et nulla dolore\",\n     \"sunt nostrud non\"\n    ],\n    \"token\": \"ipsum sed dolor Ut\",\n    \"name\": \"esse dolore consequat sunt\",\n    \"stores\": [\n     {\n      \"_id\": \"repr\",\n      \"integration\": \"nostrud ut quis magna\",\n      \"level\": \"in voluptate eu et\",\n      \"uid\": -65983569,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"tempor Duis adipisicing nisi\",\n      \"code\": \"amet\",\n      \"name\": \"labore magna\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"ex velit in sunt\",\n      \"integration\": \"dolore voluptate Excepteur in\",\n      \"level\": \"aliquip deserunt\",\n      \"uid\": 38233934,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"quis id\",\n      \"code\": \"nostrud eu non\",\n      \"name\": \"mollit elit id minim\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"velit dolor\",\n      \"integration\": \"consectetur\",\n      \"level\": \"eu aute\",\n      \"uid\": -99225666,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ea et ut eu\",\n      \"code\": \"ma\",\n      \"name\": \"adipisicing nostrud et magna\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"enim i\",\n      \"integration\": \"mollit\",\n      \"level\": \"eiusmod ullamco incididunt\",\n      \"uid\": -71488997,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"elit quis Lorem Duis\",\n      \"code\": \"est adipisicing nostrud ut\",\n      \"name\": \"in irure aute et\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"ex Excepteur volu\",\n \"page\": {\n  \"type\": \"amet pariatur\",\n  \"size\": -95040865,\n  \"current\": 49526484,\n  \"has_next\": false,\n  \"item_total\": -86479155,\n  \"next_id\": \"pariat\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "3ae9700f-a5fd-40b7-bd42-5a751e9dfc8b",
          "name": "getApiKey | Get Slingshot Configuration Of  A Company",
          "request": {
            "name": "getApiKey | Get Slingshot Configuration Of  A Company",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "926bb027-4744-4e96-a3cc-4d3036adf1ed",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2020-02-22T11:07:00.901Z\",\n \"status\": 88534643,\n \"error\": \"dolore culpa\",\n \"exception\": \"ex quis pariatur\",\n \"message\": \"minim dese\",\n \"total_time_taken_in_millis\": -98313711,\n \"http_status\": \"423 LOCKED\",\n \"items\": {\n  \"session_id\": \"in in\",\n  \"error_message\": \"sint proident et officia nisi\"\n },\n \"payload\": {\n  \"session_id\": \"officia laboris\",\n  \"error_message\": \"labore quis in\"\n },\n \"trace_id\": \"mollit ex in consequat\",\n \"page\": {\n  \"type\": \"ut id dolor\",\n  \"size\": -36904410,\n  \"current\": -57374164,\n  \"has_next\": false,\n  \"item_total\": -91477669,\n  \"next_id\": \"aute do cillum non\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "bf5f10da-5660-4896-90bf-c3368c17726b",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2020-02-22T11:07:00.901Z\",\n \"status\": 88534643,\n \"error\": \"dolore culpa\",\n \"exception\": \"ex quis pariatur\",\n \"message\": \"minim dese\",\n \"total_time_taken_in_millis\": -98313711,\n \"http_status\": \"423 LOCKED\",\n \"items\": {\n  \"session_id\": \"in in\",\n  \"error_message\": \"sint proident et officia nisi\"\n },\n \"payload\": {\n  \"session_id\": \"officia laboris\",\n  \"error_message\": \"labore quis in\"\n },\n \"trace_id\": \"mollit ex in consequat\",\n \"page\": {\n  \"type\": \"ut id dolor\",\n  \"size\": -36904410,\n  \"current\": -57374164,\n  \"has_next\": false,\n  \"item_total\": -91477669,\n  \"next_id\": \"aute do cillum non\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d2bd8303-41a7-4db1-8757-5724182e89c3",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2020-02-22T11:07:00.901Z\",\n \"status\": 88534643,\n \"error\": \"dolore culpa\",\n \"exception\": \"ex quis pariatur\",\n \"message\": \"minim dese\",\n \"total_time_taken_in_millis\": -98313711,\n \"http_status\": \"423 LOCKED\",\n \"items\": {\n  \"session_id\": \"in in\",\n  \"error_message\": \"sint proident et officia nisi\"\n },\n \"payload\": {\n  \"session_id\": \"officia laboris\",\n  \"error_message\": \"labore quis in\"\n },\n \"trace_id\": \"mollit ex in consequat\",\n \"page\": {\n  \"type\": \"ut id dolor\",\n  \"size\": -36904410,\n  \"current\": -57374164,\n  \"has_next\": false,\n  \"item_total\": -91477669,\n  \"next_id\": \"aute do cillum non\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "20348e77-88f1-4aad-9c1e-1e391464da12",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "3acfcc6a-29cc-4bdf-8cb3-07b761359854",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2002-05-19T23:10:49.918Z\",\n \"status\": 27338327,\n \"error\": \"eiusmod magna aute\",\n \"exception\": \"ad dolor\",\n \"message\": \"dolore et Exce\",\n \"total_time_taken_in_millis\": 88120940,\n \"http_status\": \"424 FAILED_DEPENDENCY\",\n \"items\": {\n  \"company_id\": -81611546,\n  \"integration_data\": {},\n  \"company_name\": \"id sint amet\",\n  \"task_details\": {\n   \"type\": -42607010,\n   \"group_list\": [\n    {\n     \"text\": \"deserunt\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"in proident commodo laborum\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 77551241.4429399,\n   \"safe_stock\": -69864883,\n   \"period_threshold\": 63765191,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"nulla nostrud\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ullamco consequat nulla\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"veniam occaecat\",\n  \"alias\": \"in do\"\n },\n \"payload\": {\n  \"company_id\": 53403691,\n  \"integration_data\": {},\n  \"company_name\": \"sin\",\n  \"task_details\": {\n   \"type\": 10107345,\n   \"group_list\": [\n    {\n     \"text\": \"dolor in\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"mollit\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 63081898.32353613,\n   \"safe_stock\": 98508812,\n   \"period_threshold\": 59761477,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"elit ipsum\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"veniam enim laborum\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"commodo nulla nostrud\",\n  \"alias\": \"nisi aute ut \"\n },\n \"trace_id\": \"adipisicing laborum est Excepteur irure\",\n \"page\": {\n  \"type\": \"qui\",\n  \"size\": 87782097,\n  \"current\": 35685273,\n  \"has_next\": true,\n  \"item_total\": 40749378,\n  \"next_id\": \"eu fugiat tempor\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "6045aa69-1c6c-4107-a784-8aacb00ffb9c",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2002-05-19T23:10:49.918Z\",\n \"status\": 27338327,\n \"error\": \"eiusmod magna aute\",\n \"exception\": \"ad dolor\",\n \"message\": \"dolore et Exce\",\n \"total_time_taken_in_millis\": 88120940,\n \"http_status\": \"424 FAILED_DEPENDENCY\",\n \"items\": {\n  \"company_id\": -81611546,\n  \"integration_data\": {},\n  \"company_name\": \"id sint amet\",\n  \"task_details\": {\n   \"type\": -42607010,\n   \"group_list\": [\n    {\n     \"text\": \"deserunt\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"in proident commodo laborum\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 77551241.4429399,\n   \"safe_stock\": -69864883,\n   \"period_threshold\": 63765191,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"nulla nostrud\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ullamco consequat nulla\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"veniam occaecat\",\n  \"alias\": \"in do\"\n },\n \"payload\": {\n  \"company_id\": 53403691,\n  \"integration_data\": {},\n  \"company_name\": \"sin\",\n  \"task_details\": {\n   \"type\": 10107345,\n   \"group_list\": [\n    {\n     \"text\": \"dolor in\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"mollit\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 63081898.32353613,\n   \"safe_stock\": 98508812,\n   \"period_threshold\": 59761477,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"elit ipsum\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"veniam enim laborum\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"commodo nulla nostrud\",\n  \"alias\": \"nisi aute ut \"\n },\n \"trace_id\": \"adipisicing laborum est Excepteur irure\",\n \"page\": {\n  \"type\": \"qui\",\n  \"size\": 87782097,\n  \"current\": 35685273,\n  \"has_next\": true,\n  \"item_total\": 40749378,\n  \"next_id\": \"eu fugiat tempor\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d9789bc9-5797-4544-87cd-6f98cc691645",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2002-05-19T23:10:49.918Z\",\n \"status\": 27338327,\n \"error\": \"eiusmod magna aute\",\n \"exception\": \"ad dolor\",\n \"message\": \"dolore et Exce\",\n \"total_time_taken_in_millis\": 88120940,\n \"http_status\": \"424 FAILED_DEPENDENCY\",\n \"items\": {\n  \"company_id\": -81611546,\n  \"integration_data\": {},\n  \"company_name\": \"id sint amet\",\n  \"task_details\": {\n   \"type\": -42607010,\n   \"group_list\": [\n    {\n     \"text\": \"deserunt\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"in proident commodo laborum\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 77551241.4429399,\n   \"safe_stock\": -69864883,\n   \"period_threshold\": 63765191,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"nulla nostrud\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ullamco consequat nulla\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"veniam occaecat\",\n  \"alias\": \"in do\"\n },\n \"payload\": {\n  \"company_id\": 53403691,\n  \"integration_data\": {},\n  \"company_name\": \"sin\",\n  \"task_details\": {\n   \"type\": 10107345,\n   \"group_list\": [\n    {\n     \"text\": \"dolor in\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"mollit\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 63081898.32353613,\n   \"safe_stock\": 98508812,\n   \"period_threshold\": 59761477,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"elit ipsum\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"veniam enim laborum\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"commodo nulla nostrud\",\n  \"alias\": \"nisi aute ut \"\n },\n \"trace_id\": \"adipisicing laborum est Excepteur irure\",\n \"page\": {\n  \"type\": \"qui\",\n  \"size\": 87782097,\n  \"current\": 35685273,\n  \"has_next\": true,\n  \"item_total\": 40749378,\n  \"next_id\": \"eu fugiat tempor\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "8d7df327-142e-43bc-bda4-c94618c1eef9",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "f6ebb842-07e0-4378-a5e9-56b58e1c8df9",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2005-08-09T02:40:03.484Z\",\n \"status\": 43544016,\n \"error\": \"ea et\",\n \"exception\": \"consequat sit commodo Lorem\",\n \"message\": \"adipisicing est culpa\",\n \"total_time_taken_in_millis\": 55601668,\n \"http_status\": \"204 NO_CONTENT\",\n \"items\": [\n  {\n   \"company_id\": 71180000,\n   \"integration_data\": {},\n   \"company_name\": \"deserunt Lorem irure incididunt do\",\n   \"task_details\": {\n    \"type\": -9896294,\n    \"group_list\": [\n     {\n      \"text\": \"Duis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sunt ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -2158116.4010042697,\n    \"safe_stock\": -36140818,\n    \"period_threshold\": 97707894,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"incididunt anim qui Lorem\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"tempor cupidatat nulla dolore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aliqua commodo\",\n   \"alias\": \"irure minim\"\n  },\n  {\n   \"company_id\": -40615984,\n   \"integration_data\": {},\n   \"company_name\": \"dolor ut anim nostrud\",\n   \"task_details\": {\n    \"type\": 46599115,\n    \"group_list\": [\n     {\n      \"text\": \"voluptate minim in Excepteur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore pariatur ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -71002800.52416208,\n    \"safe_stock\": 35211961,\n    \"period_threshold\": 26730260,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"commodo incididunt enim cillum aliquip\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"pariatu\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aute ad\",\n   \"alias\": \"id ea\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -91963577,\n   \"integration_data\": {},\n   \"company_name\": \"Lorem aute do\",\n   \"task_details\": {\n    \"type\": -60244686,\n    \"group_list\": [\n     {\n      \"text\": \"culpa\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"est anim Excepteur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 19451949.95757471,\n    \"safe_stock\": -33518117,\n    \"period_threshold\": 9932231,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"fugiat aliqua ipsum culpa veniam\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ipsum dolor et tempor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"reprehenderit Excepteur eu officia\",\n   \"alias\": \"proident amet\"\n  },\n  {\n   \"company_id\": -2461545,\n   \"integration_data\": {},\n   \"company_name\": \"Lorem aliquip minim\",\n   \"task_details\": {\n    \"type\": 22430570,\n    \"group_list\": [\n     {\n      \"text\": \"mollit consectetur in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proident id ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -3618440.3385243863,\n    \"safe_stock\": -68649885,\n    \"period_threshold\": 17983719,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"tempor esse ex in elit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eiusmod commodo non\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in ut Excepteur consectetur\",\n   \"alias\": \"fugiat voluptate\"\n  }\n ],\n \"trace_id\": \"sit culpa tempor\",\n \"page\": {\n  \"type\": \"in\",\n  \"size\": -94347196,\n  \"current\": -1552280,\n  \"has_next\": true,\n  \"item_total\": -18821287,\n  \"next_id\": \"laborum\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e412b113-25dc-4f61-97b5-f09fc55dac67",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1944-03-10T05:18:40.804Z\",\n \"status\": -31881030,\n \"error\": \"fugiat voluptate sint nostrud paria\",\n \"exception\": \"enim\",\n \"message\": \"minim veniam\",\n \"total_time_taken_in_millis\": -83933049,\n \"http_status\": \"508 LOOP_DETECTED\",\n \"items\": [\n  {\n   \"company_id\": -50052854,\n   \"integration_data\": {},\n   \"company_name\": \"nisi anim\",\n   \"task_details\": {\n    \"type\": 22426380,\n    \"group_list\": [\n     {\n      \"text\": \"do laborum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"amet elit cillum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -28389837.032787442,\n    \"safe_stock\": -14162035,\n    \"period_threshold\": -74478870,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"anim est eu et aliquip\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliquip id\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"non consequat\",\n   \"alias\": \"sit aliquip\"\n  },\n  {\n   \"company_id\": -4054256,\n   \"integration_data\": {},\n   \"company_name\": \"anim ea et Duis dolor\",\n   \"task_details\": {\n    \"type\": -26561287,\n    \"group_list\": [\n     {\n      \"text\": \"culpa est et exercitation dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut nisi\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 80513014.69799635,\n    \"safe_stock\": -29809939,\n    \"period_threshold\": 19455845,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ven\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Excepteur eiusmod ex sit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"irure sit est sint\",\n   \"alias\": \"cillum\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 15882163,\n   \"integration_data\": {},\n   \"company_name\": \"laborum commodo\",\n   \"task_details\": {\n    \"type\": -97222487,\n    \"group_list\": [\n     {\n      \"text\": \"qui nulla dolore mollit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laboris ea et nostrud quis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 15681095.866624296,\n    \"safe_stock\": -3347992,\n    \"period_threshold\": 35329307,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sunt qui est et culpa\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consectetur \",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in mollit do\",\n   \"alias\": \"in Excepteur in qui dolore\"\n  },\n  {\n   \"company_id\": -83816233,\n   \"integration_data\": {},\n   \"company_name\": \"proident dolor\",\n   \"task_details\": {\n    \"type\": -64447335,\n    \"group_list\": [\n     {\n      \"text\": \"culpa\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in aute velit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 30519616.34896347,\n    \"safe_stock\": -58071360,\n    \"period_threshold\": 40608936,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ea dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliquip Lorem\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"consequat do commodo ullamco\",\n   \"alias\": \"pariatur non aliquip\"\n  }\n ],\n \"trace_id\": \"cillum eu minim ullamco in\",\n \"page\": {\n  \"type\": \"dolor qui est nostrud\",\n  \"size\": 38618935,\n  \"current\": -58227245,\n  \"has_next\": true,\n  \"item_total\": 15176430,\n  \"next_id\": \"commodo sit minim\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "659fef6f-fc3f-40ef-a205-f65227faacd9",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1944-03-10T05:18:40.804Z\",\n \"status\": -31881030,\n \"error\": \"fugiat voluptate sint nostrud paria\",\n \"exception\": \"enim\",\n \"message\": \"minim veniam\",\n \"total_time_taken_in_millis\": -83933049,\n \"http_status\": \"508 LOOP_DETECTED\",\n \"items\": [\n  {\n   \"company_id\": -50052854,\n   \"integration_data\": {},\n   \"company_name\": \"nisi anim\",\n   \"task_details\": {\n    \"type\": 22426380,\n    \"group_list\": [\n     {\n      \"text\": \"do laborum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"amet elit cillum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -28389837.032787442,\n    \"safe_stock\": -14162035,\n    \"period_threshold\": -74478870,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"anim est eu et aliquip\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliquip id\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"non consequat\",\n   \"alias\": \"sit aliquip\"\n  },\n  {\n   \"company_id\": -4054256,\n   \"integration_data\": {},\n   \"company_name\": \"anim ea et Duis dolor\",\n   \"task_details\": {\n    \"type\": -26561287,\n    \"group_list\": [\n     {\n      \"text\": \"culpa est et exercitation dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut nisi\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 80513014.69799635,\n    \"safe_stock\": -29809939,\n    \"period_threshold\": 19455845,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ven\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Excepteur eiusmod ex sit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"irure sit est sint\",\n   \"alias\": \"cillum\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 15882163,\n   \"integration_data\": {},\n   \"company_name\": \"laborum commodo\",\n   \"task_details\": {\n    \"type\": -97222487,\n    \"group_list\": [\n     {\n      \"text\": \"qui nulla dolore mollit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laboris ea et nostrud quis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 15681095.866624296,\n    \"safe_stock\": -3347992,\n    \"period_threshold\": 35329307,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sunt qui est et culpa\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consectetur \",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in mollit do\",\n   \"alias\": \"in Excepteur in qui dolore\"\n  },\n  {\n   \"company_id\": -83816233,\n   \"integration_data\": {},\n   \"company_name\": \"proident dolor\",\n   \"task_details\": {\n    \"type\": -64447335,\n    \"group_list\": [\n     {\n      \"text\": \"culpa\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in aute velit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 30519616.34896347,\n    \"safe_stock\": -58071360,\n    \"period_threshold\": 40608936,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ea dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliquip Lorem\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"consequat do commodo ullamco\",\n   \"alias\": \"pariatur non aliquip\"\n  }\n ],\n \"trace_id\": \"cillum eu minim ullamco in\",\n \"page\": {\n  \"type\": \"dolor qui est nostrud\",\n  \"size\": 38618935,\n  \"current\": -58227245,\n  \"has_next\": true,\n  \"item_total\": 15176430,\n  \"next_id\": \"commodo sit minim\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "e9d3ec62-bab1-4948-aebc-d39e86eede82",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "88ec16bb-bab0-4128-82f4-1f78bd56303b",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1981-02-01T19:12:49.679Z\",\n \"status\": 82957011,\n \"error\": \"consectetur irure enim ea\",\n \"exception\": \"culpa\",\n \"message\": \"minim\",\n \"total_time_taken_in_millis\": 60728186,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"cillum\",\n \"page\": {\n  \"type\": \"adipisicing\",\n  \"size\": 72055843,\n  \"current\": 14774533,\n  \"has_next\": true,\n  \"item_total\": 73215844,\n  \"next_id\": \"tempor fugiat occaecat\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "8c36704b-be39-4d68-b2da-c8f98100cd7b",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1981-02-01T19:12:49.679Z\",\n \"status\": 82957011,\n \"error\": \"consectetur irure enim ea\",\n \"exception\": \"culpa\",\n \"message\": \"minim\",\n \"total_time_taken_in_millis\": 60728186,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"cillum\",\n \"page\": {\n  \"type\": \"adipisicing\",\n  \"size\": 72055843,\n  \"current\": 14774533,\n  \"has_next\": true,\n  \"item_total\": 73215844,\n  \"next_id\": \"tempor fugiat occaecat\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d846746c-9aa3-4406-be3b-5d949fb62200",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1981-02-01T19:12:49.679Z\",\n \"status\": 82957011,\n \"error\": \"consectetur irure enim ea\",\n \"exception\": \"culpa\",\n \"message\": \"minim\",\n \"total_time_taken_in_millis\": 60728186,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"cillum\",\n \"page\": {\n  \"type\": \"adipisicing\",\n  \"size\": 72055843,\n  \"current\": 14774533,\n  \"has_next\": true,\n  \"item_total\": 73215844,\n  \"next_id\": \"tempor fugiat occaecat\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "cc276469-7f28-4007-9ec4-9c88aea77ba0",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "0ec73fdd-e194-48f8-b2ae-6acb7c08eb74",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1955-10-16T09:36:22.996Z\",\n \"status\": 67214569,\n \"error\": \"reprehenderit aute ut\",\n \"exception\": \"ut officia dolor\",\n \"message\": \"eu\",\n \"total_time_taken_in_millis\": -23789618,\n \"http_status\": \"208 ALREADY_REPORTED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"do aliqua\",\n \"page\": {\n  \"type\": \"veniam elit an\",\n  \"size\": -93384802,\n  \"current\": 72220859,\n  \"has_next\": true,\n  \"item_total\": -2294604,\n  \"next_id\": \"magna nulla id ut\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "667bc244-10a0-4175-9da2-f4fbfc66c345",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1955-10-16T09:36:22.996Z\",\n \"status\": 67214569,\n \"error\": \"reprehenderit aute ut\",\n \"exception\": \"ut officia dolor\",\n \"message\": \"eu\",\n \"total_time_taken_in_millis\": -23789618,\n \"http_status\": \"208 ALREADY_REPORTED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"do aliqua\",\n \"page\": {\n  \"type\": \"veniam elit an\",\n  \"size\": -93384802,\n  \"current\": 72220859,\n  \"has_next\": true,\n  \"item_total\": -2294604,\n  \"next_id\": \"magna nulla id ut\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2a04209d-836e-4b69-a507-afb9d1bf904c",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1955-10-16T09:36:22.996Z\",\n \"status\": 67214569,\n \"error\": \"reprehenderit aute ut\",\n \"exception\": \"ut officia dolor\",\n \"message\": \"eu\",\n \"total_time_taken_in_millis\": -23789618,\n \"http_status\": \"208 ALREADY_REPORTED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"do aliqua\",\n \"page\": {\n  \"type\": \"veniam elit an\",\n  \"size\": -93384802,\n  \"current\": 72220859,\n  \"has_next\": true,\n  \"item_total\": -2294604,\n  \"next_id\": \"magna nulla id ut\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "50b36f06-f01f-4a28-a563-91537c9feb9f",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1955-10-16T09:36:22.996Z\",\n \"status\": 67214569,\n \"error\": \"reprehenderit aute ut\",\n \"exception\": \"ut officia dolor\",\n \"message\": \"eu\",\n \"total_time_taken_in_millis\": -23789618,\n \"http_status\": \"208 ALREADY_REPORTED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"do aliqua\",\n \"page\": {\n  \"type\": \"veniam elit an\",\n  \"size\": -93384802,\n  \"current\": 72220859,\n  \"has_next\": true,\n  \"item_total\": -2294604,\n  \"next_id\": \"magna nulla id ut\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1918423c-527b-454a-a3c1-5ea3cb6e5740",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1955-10-16T09:36:22.996Z\",\n \"status\": 67214569,\n \"error\": \"reprehenderit aute ut\",\n \"exception\": \"ut officia dolor\",\n \"message\": \"eu\",\n \"total_time_taken_in_millis\": -23789618,\n \"http_status\": \"208 ALREADY_REPORTED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"do aliqua\",\n \"page\": {\n  \"type\": \"veniam elit an\",\n  \"size\": -93384802,\n  \"current\": 72220859,\n  \"has_next\": true,\n  \"item_total\": -2294604,\n  \"next_id\": \"magna nulla id ut\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx1.de"
    }
  ],
  "info": {
    "_postman_id": "5b0d175c-0eb1-45dd-bc7a-a82503fb4db3",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
