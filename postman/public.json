{
  "item": [
    {
      "id": "176cbc65-85ee-4ccc-bfde-2c045503fe7b",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "2577e97c-efee-4112-bf6e-2e31a083bccf",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "3f0022bf-7008-448d-995e-d750945cc26b",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "nisi qui ess",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "39276608-3aa1-498a-8aec-536c6d770087",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "nisi qui ess",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"Invalid application domain or id.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "00aa47a5-2182-445d-8095-1b7645e3603f",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "nisi qui ess",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "a795525d-16f5-4e91-990a-2406808aa596",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "fdb2442d-0c20-4666-a69a-6cab48c90ee9",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "ab9fce80-6552-463e-9498-74861798a99e",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "2c3709c4-3291-4051-aecb-66da30b7d592",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "593b1aa6-d1ef-4e80-b393-348a8ea135f5",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 2908384,\n   \"event_name\": \"dolor velit\",\n   \"event_type\": \"elit quis\",\n   \"event_category\": \"sed enim mollit\",\n   \"version\": \"tempor nostrud officia\",\n   \"display_name\": \"Lorem aliqua\",\n   \"description\": \"ex culpa\",\n   \"created_on\": \"dolor Duis aute\"\n  },\n  {\n   \"id\": 69410489,\n   \"event_name\": \"ut anim officia proident\",\n   \"event_type\": \"ea\",\n   \"event_category\": \"laborum deserunt cillum enim cupidatat\",\n   \"version\": \"dolore Ut aliqua Lorem aute\",\n   \"display_name\": \"mollit exercitation\",\n   \"description\": \"velit aliqua adipisicing ut\",\n   \"created_on\": \"cillum pariatur reprehenderit in\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "741558c1-d8ca-4e14-ae16-4fcb72f122a4",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "b4dbcced-45c1-4625-b686-18f338d1e292",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -28757997,\n   \"event_name\": \"culpa veniam irure\",\n   \"event_type\": \"reprehe\",\n   \"event_category\": \"occaecat ipsum\",\n   \"version\": \"cupidatat\",\n   \"display_name\": \"sit ullamco dolor Excepteur\",\n   \"description\": \"ad \",\n   \"created_on\": \"nostrud culpa aliqua\"\n  },\n  {\n   \"id\": 71987433,\n   \"event_name\": \"a\",\n   \"event_type\": \"voluptate velit occaecat sunt esse\",\n   \"event_category\": \"aute dolore exercitation\",\n   \"version\": \"et ut\",\n   \"display_name\": \"et adipisicing\",\n   \"description\": \"magna et commodo Duis\",\n   \"created_on\": \"sit voluptate elit\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "480cb774-3b24-4007-b3ff-ac51f26453f2",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "6cfaafcc-be23-4ee2-abc2-11a984ccb486",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "ce17936a-af6c-44d2-8ec1-f144417d338c",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1976-05-20T23:42:35.653Z\",\n \"status\": 37986784,\n \"error\": \"Excepteur eu ess\",\n \"exception\": \"ut ea Excepteur do et\",\n \"message\": \"ullamco Lorem qui est\",\n \"total_time_taken_in_millis\": -35423670,\n \"http_status\": \"504 GATEWAY_TIMEOUT\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"sunt ut aute amet\",\n   \"description\": \"qui Lorem ipsum officia\",\n   \"name\": \"occaecat laboris ea labore\",\n   \"slug\": \"est irure tempor deserunt\",\n   \"meta\": [\n    {\n     \"_id\": \"cillum id pariatur proident\",\n     \"name\": \"qui velit pariatur \",\n     \"value\": \"nisi elit id ex\"\n    },\n    {\n     \"_id\": \"quis et enim\",\n     \"name\": \"nostrud consectetur culpa esse\",\n     \"value\": \"sunt proident labore fugiat\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"Ut deserunt in sit\",\n    \"integration\": \"pariatur quis voluptate ipsum in\",\n    \"level\": \"Duis occaecat Lorem amet dolor\",\n    \"uid\": 52223137,\n    \"opted\": false,\n    \"permissions\": [\n     \"in esse\",\n     \"sed fugiat dolor\"\n    ],\n    \"token\": \"reprehenderit amet consequat irure\",\n    \"name\": \"Lorem labore\",\n    \"stores\": [\n     {\n      \"_id\": \"fugiat nostrud do Excepteur id\",\n      \"integration\": \"id do laboris pariatur laborum\",\n      \"level\": \"in pariatur consequat sunt\",\n      \"uid\": 64705870,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"eu nisi\",\n      \"code\": \"laboris ea officia nulla\",\n      \"name\": \"tempor cillum sin\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"adipisicing eu consequat\",\n      \"integration\": \"sit\",\n      \"level\": \"nostrud veniam\",\n      \"uid\": 68520305,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"irure voluptate sit Excepteur\",\n      \"code\": \"pariatur sed incididunt\",\n      \"name\": \"Duis \",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"amet nulla laboris ut\",\n      \"integration\": \"deserunt sint et laborum cupidatat\",\n      \"level\": \"et non in dolor\",\n      \"uid\": 90773838,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"deserunt in sit\",\n      \"code\": \"cupidatat\",\n      \"name\": \"f\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"cillum\",\n      \"integration\": \"officia reprehenderit commodo in\",\n      \"level\": \"irure Ut\",\n      \"uid\": 15483912,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ut magna\",\n      \"code\": \"magna e\",\n      \"name\": \"Lorem dolore cupidatat eu\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"occaecat ut velit ullamco magna\",\n    \"integration\": \"Excepteur reprehenderit eu\",\n    \"level\": \"consequat tempor\",\n    \"uid\": 61992038,\n    \"opted\": false,\n    \"permissions\": [\n     \"dolor pariatur occaecat eu\",\n     \"ex\"\n    ],\n    \"token\": \"laboris\",\n    \"name\": \"Duis adipisicing do\",\n    \"stores\": [\n     {\n      \"_id\": \"consequat id consectetu\",\n      \"integration\": \"laborum mollit\",\n      \"level\": \"cupidatat mollit deserunt exercitation\",\n      \"uid\": -94136359,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"anim ex nulla Ut\",\n      \"code\": \"laborum proident\",\n      \"name\": \"nulla laboris mollit nostrud cillum\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"commodo deserunt amet aliqua\",\n      \"integration\": \"in elit c\",\n      \"level\": \"minim\",\n      \"uid\": 81552871,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"amet ei\",\n      \"code\": \"dolor elit commodo consequat\",\n      \"name\": \"eu labore Excepteur sunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"in\",\n      \"integration\": \"incididunt consectetur veniam\",\n      \"level\": \"aute reprehenderit ad fugiat\",\n      \"uid\": 70817456,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"voluptate aute\",\n      \"code\": \"in labore tempor sit\",\n      \"name\": \"ipsum\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"aute occaecat in exercitation\",\n      \"integration\": \"enim eiusmod Ut sit\",\n      \"level\": \"ullamco cillum sit\",\n      \"uid\": -66488952,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"non id cupidatat\",\n      \"code\": \"id labore fugiat eu veniam\",\n      \"name\": \"consectetur proident\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"occae\",\n   \"description\": \"in consequat nostrud\",\n   \"name\": \"ut occaecat nisi esse\",\n   \"slug\": \"cillum\",\n   \"meta\": [\n    {\n     \"_id\": \"eu do in sint\",\n     \"name\": \"voluptate proident do minim\",\n     \"value\": \"reprehenderit magna velit consequat labore\"\n    },\n    {\n     \"_id\": \"dolor officia\",\n     \"name\": \"eu sunt non ex elit\",\n     \"value\": \"in pariatur anim ad\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"cillum esse nisi ullamco\",\n    \"integration\": \"ullamco conse\",\n    \"level\": \"laboris Ut dolor\",\n    \"uid\": -19388513,\n    \"opted\": true,\n    \"permissions\": [\n     \"eu\",\n     \"occaecat culpa quis exercitation\"\n    ],\n    \"token\": \"cillum exercitation pariatur\",\n    \"name\": \"Lorem dolore\",\n    \"stores\": [\n     {\n      \"_id\": \"sunt voluptate dolor\",\n      \"integration\": \"fugiat qui proident tempor\",\n      \"level\": \"consequat co\",\n      \"uid\": 27644123,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ut nulla velit dolore voluptate\",\n      \"code\": \"eiusmod\",\n      \"name\": \"est minim\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"mollit officia in\",\n      \"integration\": \"dolor nisi\",\n      \"level\": \"anim in ut minim\",\n      \"uid\": -42817867,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Excepteu\",\n      \"code\": \"tempor\",\n      \"name\": \"esse ex non\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"occaecat est do eiusmod\",\n      \"integration\": \"laboris adipisicing ut cupidatat\",\n      \"level\": \"\",\n      \"uid\": 79939561,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"commodo esse consectetur in\",\n      \"code\": \"consequat sunt nostrud quis\",\n      \"name\": \"\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"aute dolor laborum sint veniam\",\n      \"integration\": \"nostrud sunt magna\",\n      \"level\": \"Ut nostrud dolor non\",\n      \"uid\": 73752245,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"qui veniam\",\n      \"code\": \"irure quis sunt\",\n      \"name\": \"nisi id cillum ut occaecat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"in id enim\",\n    \"integration\": \"magna qui pariatur dolor\",\n    \"level\": \"veniam eiusmod culpa\",\n    \"uid\": -42374329,\n    \"opted\": true,\n    \"permissions\": [\n     \"voluptate ipsum dolor aliquip\",\n     \"in\"\n    ],\n    \"token\": \"nostrud mollit Ut\",\n    \"name\": \"nostrud\",\n    \"stores\": [\n     {\n      \"_id\": \"ad reprehenderit\",\n      \"integration\": \"ea nisi\",\n      \"level\": \"irure Duis reprehenderit magna\",\n      \"uid\": -22602495,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"tempor occaecat\",\n      \"code\": \"do culpa nostrud\",\n      \"name\": \"nostrud exercitation nulla aute\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"sed consectetur officia pariatur\",\n      \"integration\": \"Duis Lorem magn\",\n      \"level\": \"dolor exercitation\",\n      \"uid\": -39993110,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Duis\",\n      \"code\": \"Ut voluptate\",\n      \"name\": \"dolor ullamco cillum\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"nulla labore non\",\n      \"integration\": \"ullamco minim et Lorem\",\n      \"level\": \"tempor sint in\",\n      \"uid\": -79419969,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"tempor dolore id officia\",\n      \"code\": \"eu sit do voluptate aute\",\n      \"name\": \"irure non velit veniam\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"laboris ex dolore\",\n      \"integration\": \"nostrud dolor occaecat pro\",\n      \"level\": \"labore\",\n      \"uid\": -84776057,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"irure sunt\",\n      \"code\": \"proident ipsum Ut nisi\",\n      \"name\": \"i\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"ipsum labore\",\n \"page\": {\n  \"type\": \"ex labore consectetur\",\n  \"size\": -16942738,\n  \"current\": -90804087,\n  \"has_next\": true,\n  \"item_total\": -3938615,\n  \"next_id\": \"commodo sed ullamco\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "18e1b87a-0c7c-47a9-861d-b840be44c191",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1976-05-20T23:42:35.653Z\",\n \"status\": 37986784,\n \"error\": \"Excepteur eu ess\",\n \"exception\": \"ut ea Excepteur do et\",\n \"message\": \"ullamco Lorem qui est\",\n \"total_time_taken_in_millis\": -35423670,\n \"http_status\": \"504 GATEWAY_TIMEOUT\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"sunt ut aute amet\",\n   \"description\": \"qui Lorem ipsum officia\",\n   \"name\": \"occaecat laboris ea labore\",\n   \"slug\": \"est irure tempor deserunt\",\n   \"meta\": [\n    {\n     \"_id\": \"cillum id pariatur proident\",\n     \"name\": \"qui velit pariatur \",\n     \"value\": \"nisi elit id ex\"\n    },\n    {\n     \"_id\": \"quis et enim\",\n     \"name\": \"nostrud consectetur culpa esse\",\n     \"value\": \"sunt proident labore fugiat\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"Ut deserunt in sit\",\n    \"integration\": \"pariatur quis voluptate ipsum in\",\n    \"level\": \"Duis occaecat Lorem amet dolor\",\n    \"uid\": 52223137,\n    \"opted\": false,\n    \"permissions\": [\n     \"in esse\",\n     \"sed fugiat dolor\"\n    ],\n    \"token\": \"reprehenderit amet consequat irure\",\n    \"name\": \"Lorem labore\",\n    \"stores\": [\n     {\n      \"_id\": \"fugiat nostrud do Excepteur id\",\n      \"integration\": \"id do laboris pariatur laborum\",\n      \"level\": \"in pariatur consequat sunt\",\n      \"uid\": 64705870,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"eu nisi\",\n      \"code\": \"laboris ea officia nulla\",\n      \"name\": \"tempor cillum sin\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"adipisicing eu consequat\",\n      \"integration\": \"sit\",\n      \"level\": \"nostrud veniam\",\n      \"uid\": 68520305,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"irure voluptate sit Excepteur\",\n      \"code\": \"pariatur sed incididunt\",\n      \"name\": \"Duis \",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"amet nulla laboris ut\",\n      \"integration\": \"deserunt sint et laborum cupidatat\",\n      \"level\": \"et non in dolor\",\n      \"uid\": 90773838,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"deserunt in sit\",\n      \"code\": \"cupidatat\",\n      \"name\": \"f\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"cillum\",\n      \"integration\": \"officia reprehenderit commodo in\",\n      \"level\": \"irure Ut\",\n      \"uid\": 15483912,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ut magna\",\n      \"code\": \"magna e\",\n      \"name\": \"Lorem dolore cupidatat eu\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"occaecat ut velit ullamco magna\",\n    \"integration\": \"Excepteur reprehenderit eu\",\n    \"level\": \"consequat tempor\",\n    \"uid\": 61992038,\n    \"opted\": false,\n    \"permissions\": [\n     \"dolor pariatur occaecat eu\",\n     \"ex\"\n    ],\n    \"token\": \"laboris\",\n    \"name\": \"Duis adipisicing do\",\n    \"stores\": [\n     {\n      \"_id\": \"consequat id consectetu\",\n      \"integration\": \"laborum mollit\",\n      \"level\": \"cupidatat mollit deserunt exercitation\",\n      \"uid\": -94136359,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"anim ex nulla Ut\",\n      \"code\": \"laborum proident\",\n      \"name\": \"nulla laboris mollit nostrud cillum\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"commodo deserunt amet aliqua\",\n      \"integration\": \"in elit c\",\n      \"level\": \"minim\",\n      \"uid\": 81552871,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"amet ei\",\n      \"code\": \"dolor elit commodo consequat\",\n      \"name\": \"eu labore Excepteur sunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"in\",\n      \"integration\": \"incididunt consectetur veniam\",\n      \"level\": \"aute reprehenderit ad fugiat\",\n      \"uid\": 70817456,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"voluptate aute\",\n      \"code\": \"in labore tempor sit\",\n      \"name\": \"ipsum\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"aute occaecat in exercitation\",\n      \"integration\": \"enim eiusmod Ut sit\",\n      \"level\": \"ullamco cillum sit\",\n      \"uid\": -66488952,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"non id cupidatat\",\n      \"code\": \"id labore fugiat eu veniam\",\n      \"name\": \"consectetur proident\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"occae\",\n   \"description\": \"in consequat nostrud\",\n   \"name\": \"ut occaecat nisi esse\",\n   \"slug\": \"cillum\",\n   \"meta\": [\n    {\n     \"_id\": \"eu do in sint\",\n     \"name\": \"voluptate proident do minim\",\n     \"value\": \"reprehenderit magna velit consequat labore\"\n    },\n    {\n     \"_id\": \"dolor officia\",\n     \"name\": \"eu sunt non ex elit\",\n     \"value\": \"in pariatur anim ad\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"cillum esse nisi ullamco\",\n    \"integration\": \"ullamco conse\",\n    \"level\": \"laboris Ut dolor\",\n    \"uid\": -19388513,\n    \"opted\": true,\n    \"permissions\": [\n     \"eu\",\n     \"occaecat culpa quis exercitation\"\n    ],\n    \"token\": \"cillum exercitation pariatur\",\n    \"name\": \"Lorem dolore\",\n    \"stores\": [\n     {\n      \"_id\": \"sunt voluptate dolor\",\n      \"integration\": \"fugiat qui proident tempor\",\n      \"level\": \"consequat co\",\n      \"uid\": 27644123,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ut nulla velit dolore voluptate\",\n      \"code\": \"eiusmod\",\n      \"name\": \"est minim\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"mollit officia in\",\n      \"integration\": \"dolor nisi\",\n      \"level\": \"anim in ut minim\",\n      \"uid\": -42817867,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Excepteu\",\n      \"code\": \"tempor\",\n      \"name\": \"esse ex non\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"occaecat est do eiusmod\",\n      \"integration\": \"laboris adipisicing ut cupidatat\",\n      \"level\": \"\",\n      \"uid\": 79939561,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"commodo esse consectetur in\",\n      \"code\": \"consequat sunt nostrud quis\",\n      \"name\": \"\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"aute dolor laborum sint veniam\",\n      \"integration\": \"nostrud sunt magna\",\n      \"level\": \"Ut nostrud dolor non\",\n      \"uid\": 73752245,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"qui veniam\",\n      \"code\": \"irure quis sunt\",\n      \"name\": \"nisi id cillum ut occaecat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"in id enim\",\n    \"integration\": \"magna qui pariatur dolor\",\n    \"level\": \"veniam eiusmod culpa\",\n    \"uid\": -42374329,\n    \"opted\": true,\n    \"permissions\": [\n     \"voluptate ipsum dolor aliquip\",\n     \"in\"\n    ],\n    \"token\": \"nostrud mollit Ut\",\n    \"name\": \"nostrud\",\n    \"stores\": [\n     {\n      \"_id\": \"ad reprehenderit\",\n      \"integration\": \"ea nisi\",\n      \"level\": \"irure Duis reprehenderit magna\",\n      \"uid\": -22602495,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"tempor occaecat\",\n      \"code\": \"do culpa nostrud\",\n      \"name\": \"nostrud exercitation nulla aute\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"sed consectetur officia pariatur\",\n      \"integration\": \"Duis Lorem magn\",\n      \"level\": \"dolor exercitation\",\n      \"uid\": -39993110,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Duis\",\n      \"code\": \"Ut voluptate\",\n      \"name\": \"dolor ullamco cillum\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"nulla labore non\",\n      \"integration\": \"ullamco minim et Lorem\",\n      \"level\": \"tempor sint in\",\n      \"uid\": -79419969,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"tempor dolore id officia\",\n      \"code\": \"eu sit do voluptate aute\",\n      \"name\": \"irure non velit veniam\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"laboris ex dolore\",\n      \"integration\": \"nostrud dolor occaecat pro\",\n      \"level\": \"labore\",\n      \"uid\": -84776057,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"irure sunt\",\n      \"code\": \"proident ipsum Ut nisi\",\n      \"name\": \"i\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"ipsum labore\",\n \"page\": {\n  \"type\": \"ex labore consectetur\",\n  \"size\": -16942738,\n  \"current\": -90804087,\n  \"has_next\": true,\n  \"item_total\": -3938615,\n  \"next_id\": \"commodo sed ullamco\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "558c996c-6ed9-449c-8501-76fb6348d28f",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1976-05-20T23:42:35.653Z\",\n \"status\": 37986784,\n \"error\": \"Excepteur eu ess\",\n \"exception\": \"ut ea Excepteur do et\",\n \"message\": \"ullamco Lorem qui est\",\n \"total_time_taken_in_millis\": -35423670,\n \"http_status\": \"504 GATEWAY_TIMEOUT\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"sunt ut aute amet\",\n   \"description\": \"qui Lorem ipsum officia\",\n   \"name\": \"occaecat laboris ea labore\",\n   \"slug\": \"est irure tempor deserunt\",\n   \"meta\": [\n    {\n     \"_id\": \"cillum id pariatur proident\",\n     \"name\": \"qui velit pariatur \",\n     \"value\": \"nisi elit id ex\"\n    },\n    {\n     \"_id\": \"quis et enim\",\n     \"name\": \"nostrud consectetur culpa esse\",\n     \"value\": \"sunt proident labore fugiat\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"Ut deserunt in sit\",\n    \"integration\": \"pariatur quis voluptate ipsum in\",\n    \"level\": \"Duis occaecat Lorem amet dolor\",\n    \"uid\": 52223137,\n    \"opted\": false,\n    \"permissions\": [\n     \"in esse\",\n     \"sed fugiat dolor\"\n    ],\n    \"token\": \"reprehenderit amet consequat irure\",\n    \"name\": \"Lorem labore\",\n    \"stores\": [\n     {\n      \"_id\": \"fugiat nostrud do Excepteur id\",\n      \"integration\": \"id do laboris pariatur laborum\",\n      \"level\": \"in pariatur consequat sunt\",\n      \"uid\": 64705870,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"eu nisi\",\n      \"code\": \"laboris ea officia nulla\",\n      \"name\": \"tempor cillum sin\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"adipisicing eu consequat\",\n      \"integration\": \"sit\",\n      \"level\": \"nostrud veniam\",\n      \"uid\": 68520305,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"irure voluptate sit Excepteur\",\n      \"code\": \"pariatur sed incididunt\",\n      \"name\": \"Duis \",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"amet nulla laboris ut\",\n      \"integration\": \"deserunt sint et laborum cupidatat\",\n      \"level\": \"et non in dolor\",\n      \"uid\": 90773838,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"deserunt in sit\",\n      \"code\": \"cupidatat\",\n      \"name\": \"f\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"cillum\",\n      \"integration\": \"officia reprehenderit commodo in\",\n      \"level\": \"irure Ut\",\n      \"uid\": 15483912,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ut magna\",\n      \"code\": \"magna e\",\n      \"name\": \"Lorem dolore cupidatat eu\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"occaecat ut velit ullamco magna\",\n    \"integration\": \"Excepteur reprehenderit eu\",\n    \"level\": \"consequat tempor\",\n    \"uid\": 61992038,\n    \"opted\": false,\n    \"permissions\": [\n     \"dolor pariatur occaecat eu\",\n     \"ex\"\n    ],\n    \"token\": \"laboris\",\n    \"name\": \"Duis adipisicing do\",\n    \"stores\": [\n     {\n      \"_id\": \"consequat id consectetu\",\n      \"integration\": \"laborum mollit\",\n      \"level\": \"cupidatat mollit deserunt exercitation\",\n      \"uid\": -94136359,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"anim ex nulla Ut\",\n      \"code\": \"laborum proident\",\n      \"name\": \"nulla laboris mollit nostrud cillum\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"commodo deserunt amet aliqua\",\n      \"integration\": \"in elit c\",\n      \"level\": \"minim\",\n      \"uid\": 81552871,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"amet ei\",\n      \"code\": \"dolor elit commodo consequat\",\n      \"name\": \"eu labore Excepteur sunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"in\",\n      \"integration\": \"incididunt consectetur veniam\",\n      \"level\": \"aute reprehenderit ad fugiat\",\n      \"uid\": 70817456,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"voluptate aute\",\n      \"code\": \"in labore tempor sit\",\n      \"name\": \"ipsum\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"aute occaecat in exercitation\",\n      \"integration\": \"enim eiusmod Ut sit\",\n      \"level\": \"ullamco cillum sit\",\n      \"uid\": -66488952,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"non id cupidatat\",\n      \"code\": \"id labore fugiat eu veniam\",\n      \"name\": \"consectetur proident\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"occae\",\n   \"description\": \"in consequat nostrud\",\n   \"name\": \"ut occaecat nisi esse\",\n   \"slug\": \"cillum\",\n   \"meta\": [\n    {\n     \"_id\": \"eu do in sint\",\n     \"name\": \"voluptate proident do minim\",\n     \"value\": \"reprehenderit magna velit consequat labore\"\n    },\n    {\n     \"_id\": \"dolor officia\",\n     \"name\": \"eu sunt non ex elit\",\n     \"value\": \"in pariatur anim ad\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"cillum esse nisi ullamco\",\n    \"integration\": \"ullamco conse\",\n    \"level\": \"laboris Ut dolor\",\n    \"uid\": -19388513,\n    \"opted\": true,\n    \"permissions\": [\n     \"eu\",\n     \"occaecat culpa quis exercitation\"\n    ],\n    \"token\": \"cillum exercitation pariatur\",\n    \"name\": \"Lorem dolore\",\n    \"stores\": [\n     {\n      \"_id\": \"sunt voluptate dolor\",\n      \"integration\": \"fugiat qui proident tempor\",\n      \"level\": \"consequat co\",\n      \"uid\": 27644123,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ut nulla velit dolore voluptate\",\n      \"code\": \"eiusmod\",\n      \"name\": \"est minim\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"mollit officia in\",\n      \"integration\": \"dolor nisi\",\n      \"level\": \"anim in ut minim\",\n      \"uid\": -42817867,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Excepteu\",\n      \"code\": \"tempor\",\n      \"name\": \"esse ex non\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"occaecat est do eiusmod\",\n      \"integration\": \"laboris adipisicing ut cupidatat\",\n      \"level\": \"\",\n      \"uid\": 79939561,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"commodo esse consectetur in\",\n      \"code\": \"consequat sunt nostrud quis\",\n      \"name\": \"\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"aute dolor laborum sint veniam\",\n      \"integration\": \"nostrud sunt magna\",\n      \"level\": \"Ut nostrud dolor non\",\n      \"uid\": 73752245,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"qui veniam\",\n      \"code\": \"irure quis sunt\",\n      \"name\": \"nisi id cillum ut occaecat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"in id enim\",\n    \"integration\": \"magna qui pariatur dolor\",\n    \"level\": \"veniam eiusmod culpa\",\n    \"uid\": -42374329,\n    \"opted\": true,\n    \"permissions\": [\n     \"voluptate ipsum dolor aliquip\",\n     \"in\"\n    ],\n    \"token\": \"nostrud mollit Ut\",\n    \"name\": \"nostrud\",\n    \"stores\": [\n     {\n      \"_id\": \"ad reprehenderit\",\n      \"integration\": \"ea nisi\",\n      \"level\": \"irure Duis reprehenderit magna\",\n      \"uid\": -22602495,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"tempor occaecat\",\n      \"code\": \"do culpa nostrud\",\n      \"name\": \"nostrud exercitation nulla aute\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"sed consectetur officia pariatur\",\n      \"integration\": \"Duis Lorem magn\",\n      \"level\": \"dolor exercitation\",\n      \"uid\": -39993110,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Duis\",\n      \"code\": \"Ut voluptate\",\n      \"name\": \"dolor ullamco cillum\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"nulla labore non\",\n      \"integration\": \"ullamco minim et Lorem\",\n      \"level\": \"tempor sint in\",\n      \"uid\": -79419969,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"tempor dolore id officia\",\n      \"code\": \"eu sit do voluptate aute\",\n      \"name\": \"irure non velit veniam\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"laboris ex dolore\",\n      \"integration\": \"nostrud dolor occaecat pro\",\n      \"level\": \"labore\",\n      \"uid\": -84776057,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"irure sunt\",\n      \"code\": \"proident ipsum Ut nisi\",\n      \"name\": \"i\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"ipsum labore\",\n \"page\": {\n  \"type\": \"ex labore consectetur\",\n  \"size\": -16942738,\n  \"current\": -90804087,\n  \"has_next\": true,\n  \"item_total\": -3938615,\n  \"next_id\": \"commodo sed ullamco\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "e68a6ae9-93ca-4b93-a787-8ba80b857af9",
          "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
          "request": {
            "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "9256ec3e-375d-44d6-b1dc-a29e9238e3f0",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1970-02-28T23:09:19.654Z\",\n \"status\": 45721228,\n \"error\": \"ex ad\",\n \"exception\": \"dolor ipsum\",\n \"message\": \"commodo cupidatat sunt\",\n \"total_time_taken_in_millis\": 5315300,\n \"http_status\": \"202 ACCEPTED\",\n \"items\": {\n  \"session_id\": \"consequat elit non\",\n  \"error_message\": \"dolore consequat\"\n },\n \"payload\": {\n  \"session_id\": \"sed incididunt commod\",\n  \"error_message\": \"reprehenderit in occaecat\"\n },\n \"trace_id\": \"occaecat ad\",\n \"page\": {\n  \"type\": \"velit\",\n  \"size\": -29846335,\n  \"current\": -20365830,\n  \"has_next\": true,\n  \"item_total\": -70790230,\n  \"next_id\": \"ex aliqua ipsum in ut\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a3104b36-e09d-4637-96d3-8784b51e829e",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1970-02-28T23:09:19.654Z\",\n \"status\": 45721228,\n \"error\": \"ex ad\",\n \"exception\": \"dolor ipsum\",\n \"message\": \"commodo cupidatat sunt\",\n \"total_time_taken_in_millis\": 5315300,\n \"http_status\": \"202 ACCEPTED\",\n \"items\": {\n  \"session_id\": \"consequat elit non\",\n  \"error_message\": \"dolore consequat\"\n },\n \"payload\": {\n  \"session_id\": \"sed incididunt commod\",\n  \"error_message\": \"reprehenderit in occaecat\"\n },\n \"trace_id\": \"occaecat ad\",\n \"page\": {\n  \"type\": \"velit\",\n  \"size\": -29846335,\n  \"current\": -20365830,\n  \"has_next\": true,\n  \"item_total\": -70790230,\n  \"next_id\": \"ex aliqua ipsum in ut\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d8b7dddc-dea7-4ae2-b2e2-cf6b6cb86ce6",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1970-02-28T23:09:19.654Z\",\n \"status\": 45721228,\n \"error\": \"ex ad\",\n \"exception\": \"dolor ipsum\",\n \"message\": \"commodo cupidatat sunt\",\n \"total_time_taken_in_millis\": 5315300,\n \"http_status\": \"202 ACCEPTED\",\n \"items\": {\n  \"session_id\": \"consequat elit non\",\n  \"error_message\": \"dolore consequat\"\n },\n \"payload\": {\n  \"session_id\": \"sed incididunt commod\",\n  \"error_message\": \"reprehenderit in occaecat\"\n },\n \"trace_id\": \"occaecat ad\",\n \"page\": {\n  \"type\": \"velit\",\n  \"size\": -29846335,\n  \"current\": -20365830,\n  \"has_next\": true,\n  \"item_total\": -70790230,\n  \"next_id\": \"ex aliqua ipsum in ut\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "ac642e05-a582-4927-9fae-4b0708301e36",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "b463abaa-1370-42a0-90cf-f98f48d1957c",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2008-10-02T19:45:34.852Z\",\n \"status\": -51179128,\n \"error\": \"de\",\n \"exception\": \"est ut\",\n \"message\": \"reprehenderit\",\n \"total_time_taken_in_millis\": 82692605,\n \"http_status\": \"403 FORBIDDEN\",\n \"items\": {\n  \"company_id\": 7390026,\n  \"integration_data\": {},\n  \"company_name\": \"laboris dolore nisi\",\n  \"task_details\": {\n   \"type\": 72980666,\n   \"group_list\": [\n    {\n     \"text\": \"ipsum eiusmod do amet\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"dolor nostrud ut\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 90587640.15837398,\n   \"safe_stock\": 4036931,\n   \"period_threshold\": -28576158,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"officia ut ipsum\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"dolore aliqua\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"Lorem fugiat minim commodo\",\n  \"alias\": \"ut nulla velit\"\n },\n \"payload\": {\n  \"company_id\": -33613463,\n  \"integration_data\": {},\n  \"company_name\": \"consequat sunt laborum volup\",\n  \"task_details\": {\n   \"type\": 26113958,\n   \"group_list\": [\n    {\n     \"text\": \"Duis dolor veniam\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"elit irure qui minim\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -15365365.320141673,\n   \"safe_stock\": 94650564,\n   \"period_threshold\": -21866712,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"in culpa commodo fugiat\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"sint veniam\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"fugiat aute Ut\",\n  \"alias\": \"esse qui\"\n },\n \"trace_id\": \"do cillum\",\n \"page\": {\n  \"type\": \"c\",\n  \"size\": -55734623,\n  \"current\": -93590250,\n  \"has_next\": true,\n  \"item_total\": 99298128,\n  \"next_id\": \"ad in ut in\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "bcbdfd6f-5edc-4db4-af16-f26ce39a5735",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2008-10-02T19:45:34.852Z\",\n \"status\": -51179128,\n \"error\": \"de\",\n \"exception\": \"est ut\",\n \"message\": \"reprehenderit\",\n \"total_time_taken_in_millis\": 82692605,\n \"http_status\": \"403 FORBIDDEN\",\n \"items\": {\n  \"company_id\": 7390026,\n  \"integration_data\": {},\n  \"company_name\": \"laboris dolore nisi\",\n  \"task_details\": {\n   \"type\": 72980666,\n   \"group_list\": [\n    {\n     \"text\": \"ipsum eiusmod do amet\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"dolor nostrud ut\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 90587640.15837398,\n   \"safe_stock\": 4036931,\n   \"period_threshold\": -28576158,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"officia ut ipsum\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"dolore aliqua\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"Lorem fugiat minim commodo\",\n  \"alias\": \"ut nulla velit\"\n },\n \"payload\": {\n  \"company_id\": -33613463,\n  \"integration_data\": {},\n  \"company_name\": \"consequat sunt laborum volup\",\n  \"task_details\": {\n   \"type\": 26113958,\n   \"group_list\": [\n    {\n     \"text\": \"Duis dolor veniam\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"elit irure qui minim\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -15365365.320141673,\n   \"safe_stock\": 94650564,\n   \"period_threshold\": -21866712,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"in culpa commodo fugiat\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"sint veniam\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"fugiat aute Ut\",\n  \"alias\": \"esse qui\"\n },\n \"trace_id\": \"do cillum\",\n \"page\": {\n  \"type\": \"c\",\n  \"size\": -55734623,\n  \"current\": -93590250,\n  \"has_next\": true,\n  \"item_total\": 99298128,\n  \"next_id\": \"ad in ut in\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a363f987-0b7b-45dc-b6e0-9308ad91488c",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2008-10-02T19:45:34.852Z\",\n \"status\": -51179128,\n \"error\": \"de\",\n \"exception\": \"est ut\",\n \"message\": \"reprehenderit\",\n \"total_time_taken_in_millis\": 82692605,\n \"http_status\": \"403 FORBIDDEN\",\n \"items\": {\n  \"company_id\": 7390026,\n  \"integration_data\": {},\n  \"company_name\": \"laboris dolore nisi\",\n  \"task_details\": {\n   \"type\": 72980666,\n   \"group_list\": [\n    {\n     \"text\": \"ipsum eiusmod do amet\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"dolor nostrud ut\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 90587640.15837398,\n   \"safe_stock\": 4036931,\n   \"period_threshold\": -28576158,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"officia ut ipsum\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"dolore aliqua\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"Lorem fugiat minim commodo\",\n  \"alias\": \"ut nulla velit\"\n },\n \"payload\": {\n  \"company_id\": -33613463,\n  \"integration_data\": {},\n  \"company_name\": \"consequat sunt laborum volup\",\n  \"task_details\": {\n   \"type\": 26113958,\n   \"group_list\": [\n    {\n     \"text\": \"Duis dolor veniam\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"elit irure qui minim\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -15365365.320141673,\n   \"safe_stock\": 94650564,\n   \"period_threshold\": -21866712,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"in culpa commodo fugiat\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"sint veniam\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"fugiat aute Ut\",\n  \"alias\": \"esse qui\"\n },\n \"trace_id\": \"do cillum\",\n \"page\": {\n  \"type\": \"c\",\n  \"size\": -55734623,\n  \"current\": -93590250,\n  \"has_next\": true,\n  \"item_total\": 99298128,\n  \"next_id\": \"ad in ut in\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "6b08e10a-4c00-41ab-86a5-f834ebcf205b",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "4d400614-1be9-4c1c-a1bb-ccd0753fbb2b",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1973-08-31T21:31:09.170Z\",\n \"status\": 78299196,\n \"error\": \"consectetur culpa eiusmod\",\n \"exception\": \"et offici\",\n \"message\": \"mollit elit\",\n \"total_time_taken_in_millis\": -96961921,\n \"http_status\": \"305 USE_PROXY\",\n \"items\": [\n  {\n   \"company_id\": 20407881,\n   \"integration_data\": {},\n   \"company_name\": \"ea ut mollit ad\",\n   \"task_details\": {\n    \"type\": -41915840,\n    \"group_list\": [\n     {\n      \"text\": \"incididunt in elit nisi\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"non laborum deserunt dolor nisi\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 84544591.52520114,\n    \"safe_stock\": -1791078,\n    \"period_threshold\": -72629765,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"nulla ex\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in occaecat laborum et\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Excepteur aliquip esse Duis dolore\",\n   \"alias\": \"Ut \"\n  },\n  {\n   \"company_id\": 67275189,\n   \"integration_data\": {},\n   \"company_name\": \"eu ullamco ad\",\n   \"task_details\": {\n    \"type\": 31846450,\n    \"group_list\": [\n     {\n      \"text\": \"officia voluptate deserunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 71622618.64539024,\n    \"safe_stock\": 49970727,\n    \"period_threshold\": -18250678,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"esse id dolore et enim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"enim deserunt nostrud nisi\",\n   \"alias\": \"ullamco\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 37259003,\n   \"integration_data\": {},\n   \"company_name\": \"labore elit \",\n   \"task_details\": {\n    \"type\": -61776109,\n    \"group_list\": [\n     {\n      \"text\": \"a\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laboris irure adipisicing dolore sint\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 35637159.25896588,\n    \"safe_stock\": 20802034,\n    \"period_threshold\": 72467880,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sed anim sunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consequat irur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aliquip pariatur dolor e\",\n   \"alias\": \"ex deserunt\"\n  },\n  {\n   \"company_id\": -56648518,\n   \"integration_data\": {},\n   \"company_name\": \"Lorem nisi dolore dolore eiusmod\",\n   \"task_details\": {\n    \"type\": -93476348,\n    \"group_list\": [\n     {\n      \"text\": \"deserunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eiusmod consectetur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -97638378.87925301,\n    \"safe_stock\": 90508470,\n    \"period_threshold\": 29361462,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"do cupidatat dolore non\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"do nisi reprehe\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"et voluptate sunt\",\n   \"alias\": \"proident quis nulla tempor\"\n  }\n ],\n \"trace_id\": \"sunt Excepteur dolor ullamco\",\n \"page\": {\n  \"type\": \"Excepteur\",\n  \"size\": -39852689,\n  \"current\": 56429316,\n  \"has_next\": false,\n  \"item_total\": -16815833,\n  \"next_id\": \"fugiat quis esse minim\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "28411c65-3479-4d45-bacb-e1a74321eb2f",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1987-09-09T16:39:08.822Z\",\n \"status\": -50311127,\n \"error\": \"quis\",\n \"exception\": \"sed\",\n \"message\": \"eiusmod\",\n \"total_time_taken_in_millis\": 87648464,\n \"http_status\": \"205 RESET_CONTENT\",\n \"items\": [\n  {\n   \"company_id\": -60897903,\n   \"integration_data\": {},\n   \"company_name\": \"et eiusmod\",\n   \"task_details\": {\n    \"type\": 84492840,\n    \"group_list\": [\n     {\n      \"text\": \"sint cupidatat ut minim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proide\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 31115919.226085693,\n    \"safe_stock\": 66733457,\n    \"period_threshold\": 38435540,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolore sed\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"mollit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"cupidatat\",\n   \"alias\": \"Excepteur ut elit qui\"\n  },\n  {\n   \"company_id\": -11655869,\n   \"integration_data\": {},\n   \"company_name\": \"amet nisi laborum eu\",\n   \"task_details\": {\n    \"type\": 85575450,\n    \"group_list\": [\n     {\n      \"text\": \"fugiat enim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliquip sunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 75322809.29215106,\n    \"safe_stock\": -8687909,\n    \"period_threshold\": 63011256,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ullamco adipisicing labore dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nostrud repreh\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"esse nostrud\",\n   \"alias\": \"consequat laboris in Excepteur\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 40329343,\n   \"integration_data\": {},\n   \"company_name\": \"reprehender\",\n   \"task_details\": {\n    \"type\": 79094616,\n    \"group_list\": [\n     {\n      \"text\": \"aliqua officia in culpa Lorem\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute fugiat Lorem id adipisicing\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 71817946.17475,\n    \"safe_stock\": 61428800,\n    \"period_threshold\": 18724833,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sunt consectetur laborum laboris\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nulla\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Duis voluptate offici\",\n   \"alias\": \"et\"\n  },\n  {\n   \"company_id\": 69756911,\n   \"integration_data\": {},\n   \"company_name\": \"culpa nulla in ipsum\",\n   \"task_details\": {\n    \"type\": 98963759,\n    \"group_list\": [\n     {\n      \"text\": \"adipisicing veniam\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laboris \",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -3531388.5048878044,\n    \"safe_stock\": -17347340,\n    \"period_threshold\": -13478424,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"id anim eiusmod amet consectetur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliquip dolor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ad et veniam\",\n   \"alias\": \"pariatur nisi Duis anim est\"\n  }\n ],\n \"trace_id\": \"consectetur anim\",\n \"page\": {\n  \"type\": \"non dolore\",\n  \"size\": -97867385,\n  \"current\": -87338500,\n  \"has_next\": true,\n  \"item_total\": -51190949,\n  \"next_id\": \"ex ea dolor\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e86f2bb9-a28f-489f-9bfe-d9bff0f7b187",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1987-09-09T16:39:08.822Z\",\n \"status\": -50311127,\n \"error\": \"quis\",\n \"exception\": \"sed\",\n \"message\": \"eiusmod\",\n \"total_time_taken_in_millis\": 87648464,\n \"http_status\": \"205 RESET_CONTENT\",\n \"items\": [\n  {\n   \"company_id\": -60897903,\n   \"integration_data\": {},\n   \"company_name\": \"et eiusmod\",\n   \"task_details\": {\n    \"type\": 84492840,\n    \"group_list\": [\n     {\n      \"text\": \"sint cupidatat ut minim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proide\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 31115919.226085693,\n    \"safe_stock\": 66733457,\n    \"period_threshold\": 38435540,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolore sed\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"mollit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"cupidatat\",\n   \"alias\": \"Excepteur ut elit qui\"\n  },\n  {\n   \"company_id\": -11655869,\n   \"integration_data\": {},\n   \"company_name\": \"amet nisi laborum eu\",\n   \"task_details\": {\n    \"type\": 85575450,\n    \"group_list\": [\n     {\n      \"text\": \"fugiat enim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliquip sunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 75322809.29215106,\n    \"safe_stock\": -8687909,\n    \"period_threshold\": 63011256,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ullamco adipisicing labore dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nostrud repreh\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"esse nostrud\",\n   \"alias\": \"consequat laboris in Excepteur\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 40329343,\n   \"integration_data\": {},\n   \"company_name\": \"reprehender\",\n   \"task_details\": {\n    \"type\": 79094616,\n    \"group_list\": [\n     {\n      \"text\": \"aliqua officia in culpa Lorem\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute fugiat Lorem id adipisicing\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 71817946.17475,\n    \"safe_stock\": 61428800,\n    \"period_threshold\": 18724833,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sunt consectetur laborum laboris\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nulla\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Duis voluptate offici\",\n   \"alias\": \"et\"\n  },\n  {\n   \"company_id\": 69756911,\n   \"integration_data\": {},\n   \"company_name\": \"culpa nulla in ipsum\",\n   \"task_details\": {\n    \"type\": 98963759,\n    \"group_list\": [\n     {\n      \"text\": \"adipisicing veniam\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laboris \",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -3531388.5048878044,\n    \"safe_stock\": -17347340,\n    \"period_threshold\": -13478424,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"id anim eiusmod amet consectetur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliquip dolor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ad et veniam\",\n   \"alias\": \"pariatur nisi Duis anim est\"\n  }\n ],\n \"trace_id\": \"consectetur anim\",\n \"page\": {\n  \"type\": \"non dolore\",\n  \"size\": -97867385,\n  \"current\": -87338500,\n  \"has_next\": true,\n  \"item_total\": -51190949,\n  \"next_id\": \"ex ea dolor\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "fb1d3f5a-c021-46b9-a9e5-4aa042498065",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "d46a04c1-3adb-46fb-8640-444a0f5f3250",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2019-01-31T12:26:44.826Z\",\n \"status\": -11977328,\n \"error\": \"nulla ex\",\n \"exception\": \"ex \",\n \"message\": \"sunt dolor in\",\n \"total_time_taken_in_millis\": 95413591,\n \"http_status\": \"206 PARTIAL_CONTENT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"cillum proident labore\",\n \"page\": {\n  \"type\": \"eu dolore deserunt\",\n  \"size\": 56640270,\n  \"current\": 93497006,\n  \"has_next\": true,\n  \"item_total\": -94646333,\n  \"next_id\": \"quis sint sed dolor officia\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "cc1229b7-4203-4334-b744-8eb18061c7fa",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2019-01-31T12:26:44.826Z\",\n \"status\": -11977328,\n \"error\": \"nulla ex\",\n \"exception\": \"ex \",\n \"message\": \"sunt dolor in\",\n \"total_time_taken_in_millis\": 95413591,\n \"http_status\": \"206 PARTIAL_CONTENT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"cillum proident labore\",\n \"page\": {\n  \"type\": \"eu dolore deserunt\",\n  \"size\": 56640270,\n  \"current\": 93497006,\n  \"has_next\": true,\n  \"item_total\": -94646333,\n  \"next_id\": \"quis sint sed dolor officia\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d3b7564e-0735-4ea5-af19-6548d1babbf0",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2019-01-31T12:26:44.826Z\",\n \"status\": -11977328,\n \"error\": \"nulla ex\",\n \"exception\": \"ex \",\n \"message\": \"sunt dolor in\",\n \"total_time_taken_in_millis\": 95413591,\n \"http_status\": \"206 PARTIAL_CONTENT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"cillum proident labore\",\n \"page\": {\n  \"type\": \"eu dolore deserunt\",\n  \"size\": 56640270,\n  \"current\": 93497006,\n  \"has_next\": true,\n  \"item_total\": -94646333,\n  \"next_id\": \"quis sint sed dolor officia\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "cfdad2a4-b27b-4b86-9273-9b5aafd48982",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "e963b319-845c-47b1-b0a6-45c2bfa063df",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2009-10-29T03:13:10.143Z\",\n \"status\": -50478255,\n \"error\": \"laborum Duis\",\n \"exception\": \"dolor aliqua magna do quis\",\n \"message\": \"Excepteur eu\",\n \"total_time_taken_in_millis\": -24862482,\n \"http_status\": \"420 METHOD_FAILURE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"irure sed dolor\",\n \"page\": {\n  \"type\": \"aliquip elit\",\n  \"size\": -26974630,\n  \"current\": -97917483,\n  \"has_next\": false,\n  \"item_total\": -57545065,\n  \"next_id\": \"Duis\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "22435d6d-a864-4c0e-bb6e-bbf935c58217",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2009-10-29T03:13:10.143Z\",\n \"status\": -50478255,\n \"error\": \"laborum Duis\",\n \"exception\": \"dolor aliqua magna do quis\",\n \"message\": \"Excepteur eu\",\n \"total_time_taken_in_millis\": -24862482,\n \"http_status\": \"420 METHOD_FAILURE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"irure sed dolor\",\n \"page\": {\n  \"type\": \"aliquip elit\",\n  \"size\": -26974630,\n  \"current\": -97917483,\n  \"has_next\": false,\n  \"item_total\": -57545065,\n  \"next_id\": \"Duis\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "0617100c-ed64-4dc8-833f-e61700ee87d4",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2009-10-29T03:13:10.143Z\",\n \"status\": -50478255,\n \"error\": \"laborum Duis\",\n \"exception\": \"dolor aliqua magna do quis\",\n \"message\": \"Excepteur eu\",\n \"total_time_taken_in_millis\": -24862482,\n \"http_status\": \"420 METHOD_FAILURE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"irure sed dolor\",\n \"page\": {\n  \"type\": \"aliquip elit\",\n  \"size\": -26974630,\n  \"current\": -97917483,\n  \"has_next\": false,\n  \"item_total\": -57545065,\n  \"next_id\": \"Duis\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "545af9cf-53cd-4728-a5ee-972b7d596e70",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2009-10-29T03:13:10.143Z\",\n \"status\": -50478255,\n \"error\": \"laborum Duis\",\n \"exception\": \"dolor aliqua magna do quis\",\n \"message\": \"Excepteur eu\",\n \"total_time_taken_in_millis\": -24862482,\n \"http_status\": \"420 METHOD_FAILURE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"irure sed dolor\",\n \"page\": {\n  \"type\": \"aliquip elit\",\n  \"size\": -26974630,\n  \"current\": -97917483,\n  \"has_next\": false,\n  \"item_total\": -57545065,\n  \"next_id\": \"Duis\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e3d73027-5878-44b8-9127-518d779004ab",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2009-10-29T03:13:10.143Z\",\n \"status\": -50478255,\n \"error\": \"laborum Duis\",\n \"exception\": \"dolor aliqua magna do quis\",\n \"message\": \"Excepteur eu\",\n \"total_time_taken_in_millis\": -24862482,\n \"http_status\": \"420 METHOD_FAILURE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"irure sed dolor\",\n \"page\": {\n  \"type\": \"aliquip elit\",\n  \"size\": -26974630,\n  \"current\": -97917483,\n  \"has_next\": false,\n  \"item_total\": -57545065,\n  \"next_id\": \"Duis\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.jmpx3.de"
    }
  ],
  "info": {
    "_postman_id": "7b5d33f2-5130-42ed-9427-1aa7cddc9c80",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
