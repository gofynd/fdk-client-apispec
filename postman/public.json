{
  "item": [
    {
      "id": "c48989ad-80fd-45b0-b823-66671f3ff464",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "cd3aa6c8-167a-4ab3-8578-ca3501988834",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "de6e354e-bf96-4c44-9b0a-4afdcb74baeb",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "in aute deserunt",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "441888f1-a9ee-4f9b-81b0-281f2da9235f",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "in aute deserunt",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"Invalid application domain or id.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e63057ae-7194-4616-a2c2-e225915cd79d",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "in aute deserunt",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "0687123c-0c39-44fc-bece-4fa07037e2b4",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "44911713-233d-4fbb-b1d1-0fee4c1101d5",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "438d0798-3cae-4e8d-989f-71fa5f33880b",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "52fb6be7-2c2a-4142-ad08-fcf69c5fb1b2",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "bf1dca19-af54-4726-acd8-c9ed6e873419",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 85457473,\n   \"event_name\": \"adipisicing reprehenderit tempor irure commodo\",\n   \"event_type\": \"non mollit eu quis\",\n   \"event_category\": \"dolor ipsum non\",\n   \"version\": \"minim culpa\",\n   \"display_name\": \"cillum velit est non\",\n   \"description\": \"velit Ut\",\n   \"created_on\": \"exercitation\"\n  },\n  {\n   \"id\": 86120178,\n   \"event_name\": \"cupidatat Duis\",\n   \"event_type\": \"laboris\",\n   \"event_category\": \"culpa qui fugiat est consectetur\",\n   \"version\": \"consequat sit\",\n   \"display_name\": \"in\",\n   \"description\": \"Excepteur ullamco non sunt\",\n   \"created_on\": \"labore\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "d73dff73-0cc0-4761-bc50-9f333c204a6c",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "bede5732-73ed-4505-9ecf-ab8afbcacb55",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 89612826,\n   \"event_name\": \"incididunt id reprehenderit\",\n   \"event_type\": \"laboris tempor consectetur\",\n   \"event_category\": \"aute in\",\n   \"version\": \"minim exercitation ex occaecat\",\n   \"display_name\": \"officia\",\n   \"description\": \"id amet adipisicing\",\n   \"created_on\": \"est sed nisi id\"\n  },\n  {\n   \"id\": 86380981,\n   \"event_name\": \"cupidatat laborum in officia Duis\",\n   \"event_type\": \"eiusmod amet\",\n   \"event_category\": \"eiusmod laboris amet\",\n   \"version\": \"commodo in\",\n   \"display_name\": \"dolore consequat incididunt\",\n   \"description\": \"Lorem adipisicing do aliqua nulla\",\n   \"created_on\": \"ut fugiat\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "f2da672a-8133-4177-91cc-a5ab650f7f46",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "f1196d7c-2581-4722-b440-616f4b6666e0",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "e3d10a76-5468-494e-8e78-649d0ab80dd9",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1968-04-27T16:57:08.993Z\",\n \"status\": -48832736,\n \"error\": \"cupidatat eu\",\n \"exception\": \"ea\",\n \"message\": \"dolore ullamco ex\",\n \"total_time_taken_in_millis\": 91945173,\n \"http_status\": \"422 UNPROCESSABLE_ENTITY\",\n \"items\": [\n  {\n   \"company_id\": 80461275,\n   \"integration_data\": {},\n   \"company_name\": \"veniam Excepteur exercitation dolor\",\n   \"task_details\": {\n    \"type\": 31848108,\n    \"group_list\": [\n     {\n      \"text\": \"voluptate aliquip laborum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"commodo pariatur non nisi\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 72916319.42449975,\n    \"safe_stock\": 2830198,\n    \"period_threshold\": 63633369,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sed aliquip nisi ad id\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"fugiat in nostrud\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"laborum incididunt minim in\",\n   \"alias\": \"est et sit amet\"\n  },\n  {\n   \"company_id\": -17322228,\n   \"integration_data\": {},\n   \"company_name\": \"dolore et minim in non\",\n   \"task_details\": {\n    \"type\": -33773779,\n    \"group_list\": [\n     {\n      \"text\": \"eu anim ex reprehenderit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consectetur occaecat ex Ut ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 34648366.02915722,\n    \"safe_stock\": 73662799,\n    \"period_threshold\": 86787831,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"in laboris deserunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consectetur nulla reprehenderit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"laborum sed dolor\",\n   \"alias\": \"ex officia qui fugi\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -51097731,\n   \"integration_data\": {},\n   \"company_name\": \"non eu magna\",\n   \"task_details\": {\n    \"type\": -48083013,\n    \"group_list\": [\n     {\n      \"text\": \"amet ipsum fugiat quis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"deserunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 20289365.75989628,\n    \"safe_stock\": -80255382,\n    \"period_threshold\": -47469370,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"Lorem eiusmod Duis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"esse non occaecat qui\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"magna quis minim\",\n   \"alias\": \"voluptate cillum cupidatat\"\n  },\n  {\n   \"company_id\": -11668626,\n   \"integration_data\": {},\n   \"company_name\": \"ex elit\",\n   \"task_details\": {\n    \"type\": 52972822,\n    \"group_list\": [\n     {\n      \"text\": \"laborum consequat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cillum dolore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -46521824.53347713,\n    \"safe_stock\": 37001212,\n    \"period_threshold\": -51404566,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"nostrud ullamco\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"anim eu\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"amet ex dolore reprehenderit\",\n   \"alias\": \"elit eiusmod labore ut\"\n  }\n ],\n \"trace_id\": \"ullamco nostrud\",\n \"page\": {\n  \"type\": \"nostrud eu culpa\",\n  \"size\": 94320829,\n  \"current\": 73161774,\n  \"has_next\": true,\n  \"item_total\": 16828323,\n  \"next_id\": \"in velit nulla\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2ca68586-f4d9-4a68-bbf5-69a89c99b820",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1982-11-13T22:39:24.936Z\",\n \"status\": -24021012,\n \"error\": \"commodo quis voluptate\",\n \"exception\": \"dolore\",\n \"message\": \"dolore Duis deserunt aliquip\",\n \"total_time_taken_in_millis\": -6056724,\n \"http_status\": \"412 PRECONDITION_FAILED\",\n \"items\": [\n  {\n   \"company_id\": -32943650,\n   \"integration_data\": {},\n   \"company_name\": \"velit aliquip laboris et\",\n   \"task_details\": {\n    \"type\": -761925,\n    \"group_list\": [\n     {\n      \"text\": \"incididunt laboris\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ex ipsum laboris\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 66813153.462332815,\n    \"safe_stock\": -14105425,\n    \"period_threshold\": -61281491,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut sint et adipisicing\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"anim adipisicing eiusmod\",\n   \"alias\": \"sunt\"\n  },\n  {\n   \"company_id\": 75363431,\n   \"integration_data\": {},\n   \"company_name\": \"et\",\n   \"task_details\": {\n    \"type\": -82578545,\n    \"group_list\": [\n     {\n      \"text\": \"proident\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Lorem culpa ullamco \",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -47257755.56231775,\n    \"safe_stock\": -20689428,\n    \"period_threshold\": -48810814,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"deserunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eiusmod incididunt tempor no\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aliquip deserunt do sed\",\n   \"alias\": \"officia Lorem \"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -25293782,\n   \"integration_data\": {},\n   \"company_name\": \"aute reprehenderit consectetur\",\n   \"task_details\": {\n    \"type\": -61272044,\n    \"group_list\": [\n     {\n      \"text\": \"do incididunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"fugiat ex exercitation\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 96323132.11687428,\n    \"safe_stock\": -23870808,\n    \"period_threshold\": 64877394,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"laboris dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"voluptate consequat ut elit labore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"velit exercitation voluptate\",\n   \"alias\": \"aliquip Excepteur sunt pariatur\"\n  },\n  {\n   \"company_id\": 7365883,\n   \"integration_data\": {},\n   \"company_name\": \"ex reprehenderit nostrud\",\n   \"task_details\": {\n    \"type\": 79919448,\n    \"group_list\": [\n     {\n      \"text\": \"pariatur voluptate sunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"id in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -38992938.22358043,\n    \"safe_stock\": 23460258,\n    \"period_threshold\": 72362728,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"labore officia\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"esse d\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"incididunt officia proident\",\n   \"alias\": \"occaecat commodo do laboris\"\n  }\n ],\n \"trace_id\": \"deserunt minim\",\n \"page\": {\n  \"type\": \"eu dolore\",\n  \"size\": 98945408,\n  \"current\": 28178578,\n  \"has_next\": false,\n  \"item_total\": 66530683,\n  \"next_id\": \"dolore esse fugiat in\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "42519339-a984-4175-a49c-520ad9768b61",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1982-11-13T22:39:24.936Z\",\n \"status\": -24021012,\n \"error\": \"commodo quis voluptate\",\n \"exception\": \"dolore\",\n \"message\": \"dolore Duis deserunt aliquip\",\n \"total_time_taken_in_millis\": -6056724,\n \"http_status\": \"412 PRECONDITION_FAILED\",\n \"items\": [\n  {\n   \"company_id\": -32943650,\n   \"integration_data\": {},\n   \"company_name\": \"velit aliquip laboris et\",\n   \"task_details\": {\n    \"type\": -761925,\n    \"group_list\": [\n     {\n      \"text\": \"incididunt laboris\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ex ipsum laboris\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 66813153.462332815,\n    \"safe_stock\": -14105425,\n    \"period_threshold\": -61281491,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut sint et adipisicing\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"anim adipisicing eiusmod\",\n   \"alias\": \"sunt\"\n  },\n  {\n   \"company_id\": 75363431,\n   \"integration_data\": {},\n   \"company_name\": \"et\",\n   \"task_details\": {\n    \"type\": -82578545,\n    \"group_list\": [\n     {\n      \"text\": \"proident\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Lorem culpa ullamco \",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -47257755.56231775,\n    \"safe_stock\": -20689428,\n    \"period_threshold\": -48810814,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"deserunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eiusmod incididunt tempor no\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aliquip deserunt do sed\",\n   \"alias\": \"officia Lorem \"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -25293782,\n   \"integration_data\": {},\n   \"company_name\": \"aute reprehenderit consectetur\",\n   \"task_details\": {\n    \"type\": -61272044,\n    \"group_list\": [\n     {\n      \"text\": \"do incididunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"fugiat ex exercitation\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 96323132.11687428,\n    \"safe_stock\": -23870808,\n    \"period_threshold\": 64877394,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"laboris dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"voluptate consequat ut elit labore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"velit exercitation voluptate\",\n   \"alias\": \"aliquip Excepteur sunt pariatur\"\n  },\n  {\n   \"company_id\": 7365883,\n   \"integration_data\": {},\n   \"company_name\": \"ex reprehenderit nostrud\",\n   \"task_details\": {\n    \"type\": 79919448,\n    \"group_list\": [\n     {\n      \"text\": \"pariatur voluptate sunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"id in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -38992938.22358043,\n    \"safe_stock\": 23460258,\n    \"period_threshold\": 72362728,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"labore officia\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"esse d\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"incididunt officia proident\",\n   \"alias\": \"occaecat commodo do laboris\"\n  }\n ],\n \"trace_id\": \"deserunt minim\",\n \"page\": {\n  \"type\": \"eu dolore\",\n  \"size\": 98945408,\n  \"current\": 28178578,\n  \"has_next\": false,\n  \"item_total\": 66530683,\n  \"next_id\": \"dolore esse fugiat in\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "d91d28cf-20ec-454c-ad9d-5228df29c74f",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "b6da1976-8333-484f-99d4-46eb89fc0bb1",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1944-07-17T15:28:22.928Z\",\n \"status\": 85472364,\n \"error\": \"in Ut aliquip ad\",\n \"exception\": \"adipisicing laborum magna veniam\",\n \"message\": \"officia\",\n \"total_time_taken_in_millis\": 32789078,\n \"http_status\": \"401 UNAUTHORIZED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"ut dolore magna et id\",\n \"page\": {\n  \"type\": \"proident dolore esse ad ex\",\n  \"size\": -26132459,\n  \"current\": -82743678,\n  \"has_next\": false,\n  \"item_total\": 7426045,\n  \"next_id\": \"Excepteur\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3abfb717-f6e9-4cfd-accd-d6a1ddf885b6",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1944-07-17T15:28:22.928Z\",\n \"status\": 85472364,\n \"error\": \"in Ut aliquip ad\",\n \"exception\": \"adipisicing laborum magna veniam\",\n \"message\": \"officia\",\n \"total_time_taken_in_millis\": 32789078,\n \"http_status\": \"401 UNAUTHORIZED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"ut dolore magna et id\",\n \"page\": {\n  \"type\": \"proident dolore esse ad ex\",\n  \"size\": -26132459,\n  \"current\": -82743678,\n  \"has_next\": false,\n  \"item_total\": 7426045,\n  \"next_id\": \"Excepteur\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d07e2418-fcdb-4700-b790-e1ff4011a368",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1944-07-17T15:28:22.928Z\",\n \"status\": 85472364,\n \"error\": \"in Ut aliquip ad\",\n \"exception\": \"adipisicing laborum magna veniam\",\n \"message\": \"officia\",\n \"total_time_taken_in_millis\": 32789078,\n \"http_status\": \"401 UNAUTHORIZED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"ut dolore magna et id\",\n \"page\": {\n  \"type\": \"proident dolore esse ad ex\",\n  \"size\": -26132459,\n  \"current\": -82743678,\n  \"has_next\": false,\n  \"item_total\": 7426045,\n  \"next_id\": \"Excepteur\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "3f348988-81d3-451a-b5a9-c7dbb516b5c4",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "b00bfe69-49ef-41c5-b856-2d880cdda8ec",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1996-12-04T12:17:50.052Z\",\n \"status\": -5403289,\n \"error\": \"eu dolor in elit\",\n \"exception\": \"ea aliquip \",\n \"message\": \"consectetur exercitation in deserunt\",\n \"total_time_taken_in_millis\": 78470992,\n \"http_status\": \"226 IM_USED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"id Lorem eu et velit\",\n \"page\": {\n  \"type\": \"Lorem eu ut in\",\n  \"size\": -54803301,\n  \"current\": -62852487,\n  \"has_next\": false,\n  \"item_total\": 49204461,\n  \"next_id\": \"eu tempor in in\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "617326bc-d263-4f27-9f39-2fd9fceaf789",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1996-12-04T12:17:50.052Z\",\n \"status\": -5403289,\n \"error\": \"eu dolor in elit\",\n \"exception\": \"ea aliquip \",\n \"message\": \"consectetur exercitation in deserunt\",\n \"total_time_taken_in_millis\": 78470992,\n \"http_status\": \"226 IM_USED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"id Lorem eu et velit\",\n \"page\": {\n  \"type\": \"Lorem eu ut in\",\n  \"size\": -54803301,\n  \"current\": -62852487,\n  \"has_next\": false,\n  \"item_total\": 49204461,\n  \"next_id\": \"eu tempor in in\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d4d90edd-e9f5-4715-98cd-5fe0ef26a0ca",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1996-12-04T12:17:50.052Z\",\n \"status\": -5403289,\n \"error\": \"eu dolor in elit\",\n \"exception\": \"ea aliquip \",\n \"message\": \"consectetur exercitation in deserunt\",\n \"total_time_taken_in_millis\": 78470992,\n \"http_status\": \"226 IM_USED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"id Lorem eu et velit\",\n \"page\": {\n  \"type\": \"Lorem eu ut in\",\n  \"size\": -54803301,\n  \"current\": -62852487,\n  \"has_next\": false,\n  \"item_total\": 49204461,\n  \"next_id\": \"eu tempor in in\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "44c1cfba-83e2-4d84-abd3-832bc3d91a29",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1996-12-04T12:17:50.052Z\",\n \"status\": -5403289,\n \"error\": \"eu dolor in elit\",\n \"exception\": \"ea aliquip \",\n \"message\": \"consectetur exercitation in deserunt\",\n \"total_time_taken_in_millis\": 78470992,\n \"http_status\": \"226 IM_USED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"id Lorem eu et velit\",\n \"page\": {\n  \"type\": \"Lorem eu ut in\",\n  \"size\": -54803301,\n  \"current\": -62852487,\n  \"has_next\": false,\n  \"item_total\": 49204461,\n  \"next_id\": \"eu tempor in in\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c815825c-c2db-4f51-83f3-b852ba395e84",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1996-12-04T12:17:50.052Z\",\n \"status\": -5403289,\n \"error\": \"eu dolor in elit\",\n \"exception\": \"ea aliquip \",\n \"message\": \"consectetur exercitation in deserunt\",\n \"total_time_taken_in_millis\": 78470992,\n \"http_status\": \"226 IM_USED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"id Lorem eu et velit\",\n \"page\": {\n  \"type\": \"Lorem eu ut in\",\n  \"size\": -54803301,\n  \"current\": -62852487,\n  \"has_next\": false,\n  \"item_total\": 49204461,\n  \"next_id\": \"eu tempor in in\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx0.de"
    }
  ],
  "info": {
    "_postman_id": "fc586d1e-81f6-47ff-b16c-ea8d061dfc2a",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
