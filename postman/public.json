{
  "item": [
    {
      "id": "dd4814a6-e585-43d5-89e9-85e876a9fc29",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "68a85729-9331-4dee-9152-5d2765fb7715",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "630014c6-54cb-4f7a-aa96-0b01384a0db2",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "anim pariatur ad ex",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1c3ad276-92df-4e1b-be92-f8bb86b95a5e",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "anim pariatur ad ex",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "f030536e-f3d3-4731-919f-2edad322f153",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "anim pariatur ad ex",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "9a3a6897-18a2-4dcd-bf47-4418ca876634",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "294d425a-adde-4cbc-9f48-3a77343d33f3",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "3d65928e-2cb1-445f-8d4d-33fd7b1b9974",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "112674bb-1c1c-4c55-bf48-70720baee459",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "ba36b05a-8f5b-4856-9d10-2474cad16306",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -16236780,\n   \"event_name\": \"aliqua dolore\",\n   \"event_type\": \"labore exercitation\",\n   \"event_category\": \"fugiat quis minim\",\n   \"version\": \"in est culpa\",\n   \"display_name\": \"Lorem pariatur eu\",\n   \"description\": \"non dolore amet ipsum consequat\",\n   \"created_on\": \"elit ut\"\n  },\n  {\n   \"id\": 48123934,\n   \"event_name\": \"dolore dolor ipsum\",\n   \"event_type\": \"aliqua veniam mollit\",\n   \"event_category\": \"incididunt magna labore dolore\",\n   \"version\": \"quis enim dolor eiusmod\",\n   \"display_name\": \"adipisicing pariatur dolor\",\n   \"description\": \"minim occaecat consectetur ullamco in\",\n   \"created_on\": \"cupidatat dolor\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "dd07c291-f5cc-443d-b0f2-0af461e306ef",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "05e4b9ae-c254-448a-a16e-bfebc43dace7",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 90868482,\n   \"event_name\": \"commo\",\n   \"event_type\": \"consectetur amet\",\n   \"event_category\": \"aute nulla sint\",\n   \"version\": \"ullamco dolo\",\n   \"display_name\": \"Ut fugiat dolore in\",\n   \"description\": \"cillum aliqua veniam\",\n   \"created_on\": \"eu fugiat\"\n  },\n  {\n   \"id\": -46806005,\n   \"event_name\": \"nulla\",\n   \"event_type\": \"sit esse pariatur deserunt\",\n   \"event_category\": \"dolore aute in non\",\n   \"version\": \"dolor fugiat in quis\",\n   \"display_name\": \"cupidatat quis consectetur\",\n   \"description\": \"mollit\",\n   \"created_on\": \"eu tempor reprehenderit\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "62e9138c-c1a4-4526-86c8-61dd23f3dc82",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "6118e902-35e2-425b-ab0a-e798d5a20e9d",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "b7d0aafc-3738-4dfe-8b87-eac4c25aed63",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2005-03-19T02:39:46.136Z\",\n \"status\": -62024164,\n \"error\": \"consectetur minim et aliq\",\n \"exception\": \"nostrud eu commodo\",\n \"message\": \"ad sint cillum\",\n \"total_time_taken_in_millis\": 1998401,\n \"http_status\": \"302 FOUND\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"eni\",\n   \"description\": \"consectetur aute laboris est sed\",\n   \"name\": \"non culpa\",\n   \"slug\": \"ex cillum deserunt nostru\",\n   \"meta\": [\n    {\n     \"_id\": \"fugiat labore ut\",\n     \"name\": \"reprehenderit aliquip in\",\n     \"value\": \"ad non anim irure\"\n    },\n    {\n     \"_id\": \"do non\",\n     \"name\": \"in irure dolor\",\n     \"value\": \"dolore\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"ullamco mollit aliqua laboris et\",\n    \"integration\": \"dolor ut id sint\",\n    \"level\": \"occaecat nulla\",\n    \"uid\": -58762409,\n    \"opted\": false,\n    \"permissions\": [\n     \"sed\",\n     \"in aute ut\"\n    ],\n    \"token\": \"pariatur nulla esse ad\",\n    \"name\": \"tempor\",\n    \"stores\": [\n     {\n      \"_id\": \"c\",\n      \"integration\": \"officia\",\n      \"level\": \"ex Lorem consequat veniam\",\n      \"uid\": 21978771,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in mollit et consectetur aliquip\",\n      \"code\": \"in do aliquip q\",\n      \"name\": \"ea e\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"in mollit\",\n      \"integration\": \"reprehenderit exercitation dolore ad\",\n      \"level\": \"non dolor Ut\",\n      \"uid\": -61862667,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in occaecat non\",\n      \"code\": \"sint esse proident eiusmod dolor\",\n      \"name\": \"cillum pariatur nulla\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"sit Lorem do\",\n      \"integration\": \"dolor in officia qui\",\n      \"level\": \"mollit in cupidatat\",\n      \"uid\": 99127220,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sed deserunt Lorem laboris nostrud\",\n      \"code\": \"Duis reprehenderit\",\n      \"name\": \"quis anim exercitation eiusmod nisi\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"irure ex non labore ea\",\n      \"integration\": \"voluptate nostrud velit\",\n      \"level\": \"est deserunt nulla dolore\",\n      \"uid\": -41587275,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"veniam laborum fugiat est\",\n      \"code\": \"velit\",\n      \"name\": \"deserunt labore dolore\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"incididunt dolor\",\n    \"integration\": \"dolor fugiat\",\n    \"level\": \"Duis sunt cillum proident\",\n    \"uid\": 2218492,\n    \"opted\": false,\n    \"permissions\": [\n     \"in Duis amet\",\n     \"magna\"\n    ],\n    \"token\": \"anim ut sit\",\n    \"name\": \"consectetur fugiat\",\n    \"stores\": [\n     {\n      \"_id\": \"do Excepteur culp\",\n      \"integration\": \"culpa officia eu\",\n      \"level\": \"dolor\",\n      \"uid\": 3178639,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"nisi e\",\n      \"code\": \"ea velit esse laborum\",\n      \"name\": \"eiusmod labore non veniam\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"ullamco esse\",\n      \"integration\": \"reprehenderit officia\",\n      \"level\": \"Lorem ex anim\",\n      \"uid\": -66605761,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"labore deserunt\",\n      \"code\": \"eu ipsum in esse\",\n      \"name\": \"enim et tempor sit ut\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"reprehenderit dolore proident anim\",\n      \"integration\": \"dolor Ut\",\n      \"level\": \"proident dolore dolor dolore\",\n      \"uid\": -1213809,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"et magna enim labore\",\n      \"code\": \"est laboris officia\",\n      \"name\": \"eu deserunt dolo\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"ut adipisicing id nulla\",\n      \"integration\": \"aute ut laboris exercitation\",\n      \"level\": \"id minim adipisicing\",\n      \"uid\": -75178848,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ad \",\n      \"code\": \"Lorem commodo ad laborum\",\n      \"name\": \"culpa adipisicing\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"aute veniam sit velit\",\n   \"description\": \"sed in\",\n   \"name\": \"\",\n   \"slug\": \"amet consectetur exercitation\",\n   \"meta\": [\n    {\n     \"_id\": \"ipsum in fugiat\",\n     \"name\": \"aute aliquip laborum do\",\n     \"value\": \"anim id voluptate minim veniam\"\n    },\n    {\n     \"_id\": \"officia do consequat\",\n     \"name\": \"Duis anim\",\n     \"value\": \"ex magna\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"ad ex dolor Lorem incididunt\",\n    \"integration\": \"dolore Excepteur veniam ut\",\n    \"level\": \"laboris et\",\n    \"uid\": 51041988,\n    \"opted\": false,\n    \"permissions\": [\n     \"exercitation id in\",\n     \"ut aute quis in\"\n    ],\n    \"token\": \"cupidatat eu aliqua\",\n    \"name\": \"sit\",\n    \"stores\": [\n     {\n      \"_id\": \"labore sint\",\n      \"integration\": \"proident nisi ut\",\n      \"level\": \"sint amet \",\n      \"uid\": -64420805,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ex Excepteur\",\n      \"code\": \"anim adipisicing aliqua\",\n      \"name\": \"ullamco id\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"sed laborum ut\",\n      \"integration\": \"ex reprehenderit\",\n      \"level\": \"voluptate\",\n      \"uid\": -67236560,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"eiusmod anim\",\n      \"code\": \"enim laborum est commodo deserunt\",\n      \"name\": \"consequat dolore\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"cillum deserunt Ut eiusmod\",\n      \"integration\": \"voluptate anim cupidatat labor\",\n      \"level\": \"sit pariatur labore incididunt\",\n      \"uid\": -13047471,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"nostrud pariatur\",\n      \"code\": \"qui incididunt consequ\",\n      \"name\": \"mollit incididun\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"exercitation irure\",\n      \"integration\": \"dolore dolor magna mollit enim\",\n      \"level\": \"cupidatat enim\",\n      \"uid\": -79196926,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"cillum veniam\",\n      \"code\": \"commodo ut ea sed est\",\n      \"name\": \"officia reprehenderit ad\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"Ut minim amet\",\n    \"integration\": \"officia est aliquip minim eu\",\n    \"level\": \"nostrud ex dolor\",\n    \"uid\": 7649495,\n    \"opted\": true,\n    \"permissions\": [\n     \"ex eiusmod aute laborum\",\n     \"nisi ullamco eni\"\n    ],\n    \"token\": \"aute nulla ex deserunt\",\n    \"name\": \"cupidatat esse elit veniam do\",\n    \"stores\": [\n     {\n      \"_id\": \"aliqua \",\n      \"integration\": \"incididunt sunt d\",\n      \"level\": \"eu commodo veniam dolor laboris\",\n      \"uid\": 41370895,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"consequat proident incididunt\",\n      \"code\": \"proident anim ad eu dol\",\n      \"name\": \"dolor ipsum\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"pariatur ut\",\n      \"integration\": \"Exce\",\n      \"level\": \"tempor aute voluptate\",\n      \"uid\": 19343992,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"elit\",\n      \"code\": \"dolor amet ea Ut mollit\",\n      \"name\": \"occaecat enim\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"adipisicing dolor\",\n      \"integration\": \"do dolor est\",\n      \"level\": \"cupidatat ut est irure\",\n      \"uid\": 82301906,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ea deserunt nostrud sunt\",\n      \"code\": \"dolor reprehenderit\",\n      \"name\": \"in Duis qui\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"dolore sint anim non\",\n      \"integration\": \"nostrud ad ea amet culpa\",\n      \"level\": \"consectetur Excepteur\",\n      \"uid\": -24313167,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"deserunt eu commodo\",\n      \"code\": \"esse nostrud non sit proident\",\n      \"name\": \"commodo eiusmod in ea ut\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"adipisicing commodo veniam\",\n \"page\": {\n  \"type\": \"dolor et ut\",\n  \"size\": 63032968,\n  \"current\": 61754915,\n  \"has_next\": false,\n  \"item_total\": -73172321,\n  \"next_id\": \"nostrud enim tempor nisi adipisicing\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "380f398b-aa1e-4f8b-80d1-619298bf616f",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2005-03-19T02:39:46.136Z\",\n \"status\": -62024164,\n \"error\": \"consectetur minim et aliq\",\n \"exception\": \"nostrud eu commodo\",\n \"message\": \"ad sint cillum\",\n \"total_time_taken_in_millis\": 1998401,\n \"http_status\": \"302 FOUND\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"eni\",\n   \"description\": \"consectetur aute laboris est sed\",\n   \"name\": \"non culpa\",\n   \"slug\": \"ex cillum deserunt nostru\",\n   \"meta\": [\n    {\n     \"_id\": \"fugiat labore ut\",\n     \"name\": \"reprehenderit aliquip in\",\n     \"value\": \"ad non anim irure\"\n    },\n    {\n     \"_id\": \"do non\",\n     \"name\": \"in irure dolor\",\n     \"value\": \"dolore\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"ullamco mollit aliqua laboris et\",\n    \"integration\": \"dolor ut id sint\",\n    \"level\": \"occaecat nulla\",\n    \"uid\": -58762409,\n    \"opted\": false,\n    \"permissions\": [\n     \"sed\",\n     \"in aute ut\"\n    ],\n    \"token\": \"pariatur nulla esse ad\",\n    \"name\": \"tempor\",\n    \"stores\": [\n     {\n      \"_id\": \"c\",\n      \"integration\": \"officia\",\n      \"level\": \"ex Lorem consequat veniam\",\n      \"uid\": 21978771,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in mollit et consectetur aliquip\",\n      \"code\": \"in do aliquip q\",\n      \"name\": \"ea e\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"in mollit\",\n      \"integration\": \"reprehenderit exercitation dolore ad\",\n      \"level\": \"non dolor Ut\",\n      \"uid\": -61862667,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in occaecat non\",\n      \"code\": \"sint esse proident eiusmod dolor\",\n      \"name\": \"cillum pariatur nulla\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"sit Lorem do\",\n      \"integration\": \"dolor in officia qui\",\n      \"level\": \"mollit in cupidatat\",\n      \"uid\": 99127220,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sed deserunt Lorem laboris nostrud\",\n      \"code\": \"Duis reprehenderit\",\n      \"name\": \"quis anim exercitation eiusmod nisi\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"irure ex non labore ea\",\n      \"integration\": \"voluptate nostrud velit\",\n      \"level\": \"est deserunt nulla dolore\",\n      \"uid\": -41587275,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"veniam laborum fugiat est\",\n      \"code\": \"velit\",\n      \"name\": \"deserunt labore dolore\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"incididunt dolor\",\n    \"integration\": \"dolor fugiat\",\n    \"level\": \"Duis sunt cillum proident\",\n    \"uid\": 2218492,\n    \"opted\": false,\n    \"permissions\": [\n     \"in Duis amet\",\n     \"magna\"\n    ],\n    \"token\": \"anim ut sit\",\n    \"name\": \"consectetur fugiat\",\n    \"stores\": [\n     {\n      \"_id\": \"do Excepteur culp\",\n      \"integration\": \"culpa officia eu\",\n      \"level\": \"dolor\",\n      \"uid\": 3178639,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"nisi e\",\n      \"code\": \"ea velit esse laborum\",\n      \"name\": \"eiusmod labore non veniam\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"ullamco esse\",\n      \"integration\": \"reprehenderit officia\",\n      \"level\": \"Lorem ex anim\",\n      \"uid\": -66605761,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"labore deserunt\",\n      \"code\": \"eu ipsum in esse\",\n      \"name\": \"enim et tempor sit ut\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"reprehenderit dolore proident anim\",\n      \"integration\": \"dolor Ut\",\n      \"level\": \"proident dolore dolor dolore\",\n      \"uid\": -1213809,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"et magna enim labore\",\n      \"code\": \"est laboris officia\",\n      \"name\": \"eu deserunt dolo\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"ut adipisicing id nulla\",\n      \"integration\": \"aute ut laboris exercitation\",\n      \"level\": \"id minim adipisicing\",\n      \"uid\": -75178848,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ad \",\n      \"code\": \"Lorem commodo ad laborum\",\n      \"name\": \"culpa adipisicing\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"aute veniam sit velit\",\n   \"description\": \"sed in\",\n   \"name\": \"\",\n   \"slug\": \"amet consectetur exercitation\",\n   \"meta\": [\n    {\n     \"_id\": \"ipsum in fugiat\",\n     \"name\": \"aute aliquip laborum do\",\n     \"value\": \"anim id voluptate minim veniam\"\n    },\n    {\n     \"_id\": \"officia do consequat\",\n     \"name\": \"Duis anim\",\n     \"value\": \"ex magna\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"ad ex dolor Lorem incididunt\",\n    \"integration\": \"dolore Excepteur veniam ut\",\n    \"level\": \"laboris et\",\n    \"uid\": 51041988,\n    \"opted\": false,\n    \"permissions\": [\n     \"exercitation id in\",\n     \"ut aute quis in\"\n    ],\n    \"token\": \"cupidatat eu aliqua\",\n    \"name\": \"sit\",\n    \"stores\": [\n     {\n      \"_id\": \"labore sint\",\n      \"integration\": \"proident nisi ut\",\n      \"level\": \"sint amet \",\n      \"uid\": -64420805,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ex Excepteur\",\n      \"code\": \"anim adipisicing aliqua\",\n      \"name\": \"ullamco id\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"sed laborum ut\",\n      \"integration\": \"ex reprehenderit\",\n      \"level\": \"voluptate\",\n      \"uid\": -67236560,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"eiusmod anim\",\n      \"code\": \"enim laborum est commodo deserunt\",\n      \"name\": \"consequat dolore\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"cillum deserunt Ut eiusmod\",\n      \"integration\": \"voluptate anim cupidatat labor\",\n      \"level\": \"sit pariatur labore incididunt\",\n      \"uid\": -13047471,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"nostrud pariatur\",\n      \"code\": \"qui incididunt consequ\",\n      \"name\": \"mollit incididun\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"exercitation irure\",\n      \"integration\": \"dolore dolor magna mollit enim\",\n      \"level\": \"cupidatat enim\",\n      \"uid\": -79196926,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"cillum veniam\",\n      \"code\": \"commodo ut ea sed est\",\n      \"name\": \"officia reprehenderit ad\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"Ut minim amet\",\n    \"integration\": \"officia est aliquip minim eu\",\n    \"level\": \"nostrud ex dolor\",\n    \"uid\": 7649495,\n    \"opted\": true,\n    \"permissions\": [\n     \"ex eiusmod aute laborum\",\n     \"nisi ullamco eni\"\n    ],\n    \"token\": \"aute nulla ex deserunt\",\n    \"name\": \"cupidatat esse elit veniam do\",\n    \"stores\": [\n     {\n      \"_id\": \"aliqua \",\n      \"integration\": \"incididunt sunt d\",\n      \"level\": \"eu commodo veniam dolor laboris\",\n      \"uid\": 41370895,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"consequat proident incididunt\",\n      \"code\": \"proident anim ad eu dol\",\n      \"name\": \"dolor ipsum\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"pariatur ut\",\n      \"integration\": \"Exce\",\n      \"level\": \"tempor aute voluptate\",\n      \"uid\": 19343992,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"elit\",\n      \"code\": \"dolor amet ea Ut mollit\",\n      \"name\": \"occaecat enim\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"adipisicing dolor\",\n      \"integration\": \"do dolor est\",\n      \"level\": \"cupidatat ut est irure\",\n      \"uid\": 82301906,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ea deserunt nostrud sunt\",\n      \"code\": \"dolor reprehenderit\",\n      \"name\": \"in Duis qui\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"dolore sint anim non\",\n      \"integration\": \"nostrud ad ea amet culpa\",\n      \"level\": \"consectetur Excepteur\",\n      \"uid\": -24313167,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"deserunt eu commodo\",\n      \"code\": \"esse nostrud non sit proident\",\n      \"name\": \"commodo eiusmod in ea ut\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"adipisicing commodo veniam\",\n \"page\": {\n  \"type\": \"dolor et ut\",\n  \"size\": 63032968,\n  \"current\": 61754915,\n  \"has_next\": false,\n  \"item_total\": -73172321,\n  \"next_id\": \"nostrud enim tempor nisi adipisicing\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c434163f-9ce2-4e92-906f-b1249a471049",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2005-03-19T02:39:46.136Z\",\n \"status\": -62024164,\n \"error\": \"consectetur minim et aliq\",\n \"exception\": \"nostrud eu commodo\",\n \"message\": \"ad sint cillum\",\n \"total_time_taken_in_millis\": 1998401,\n \"http_status\": \"302 FOUND\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"eni\",\n   \"description\": \"consectetur aute laboris est sed\",\n   \"name\": \"non culpa\",\n   \"slug\": \"ex cillum deserunt nostru\",\n   \"meta\": [\n    {\n     \"_id\": \"fugiat labore ut\",\n     \"name\": \"reprehenderit aliquip in\",\n     \"value\": \"ad non anim irure\"\n    },\n    {\n     \"_id\": \"do non\",\n     \"name\": \"in irure dolor\",\n     \"value\": \"dolore\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"ullamco mollit aliqua laboris et\",\n    \"integration\": \"dolor ut id sint\",\n    \"level\": \"occaecat nulla\",\n    \"uid\": -58762409,\n    \"opted\": false,\n    \"permissions\": [\n     \"sed\",\n     \"in aute ut\"\n    ],\n    \"token\": \"pariatur nulla esse ad\",\n    \"name\": \"tempor\",\n    \"stores\": [\n     {\n      \"_id\": \"c\",\n      \"integration\": \"officia\",\n      \"level\": \"ex Lorem consequat veniam\",\n      \"uid\": 21978771,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in mollit et consectetur aliquip\",\n      \"code\": \"in do aliquip q\",\n      \"name\": \"ea e\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"in mollit\",\n      \"integration\": \"reprehenderit exercitation dolore ad\",\n      \"level\": \"non dolor Ut\",\n      \"uid\": -61862667,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in occaecat non\",\n      \"code\": \"sint esse proident eiusmod dolor\",\n      \"name\": \"cillum pariatur nulla\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"sit Lorem do\",\n      \"integration\": \"dolor in officia qui\",\n      \"level\": \"mollit in cupidatat\",\n      \"uid\": 99127220,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sed deserunt Lorem laboris nostrud\",\n      \"code\": \"Duis reprehenderit\",\n      \"name\": \"quis anim exercitation eiusmod nisi\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"irure ex non labore ea\",\n      \"integration\": \"voluptate nostrud velit\",\n      \"level\": \"est deserunt nulla dolore\",\n      \"uid\": -41587275,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"veniam laborum fugiat est\",\n      \"code\": \"velit\",\n      \"name\": \"deserunt labore dolore\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"incididunt dolor\",\n    \"integration\": \"dolor fugiat\",\n    \"level\": \"Duis sunt cillum proident\",\n    \"uid\": 2218492,\n    \"opted\": false,\n    \"permissions\": [\n     \"in Duis amet\",\n     \"magna\"\n    ],\n    \"token\": \"anim ut sit\",\n    \"name\": \"consectetur fugiat\",\n    \"stores\": [\n     {\n      \"_id\": \"do Excepteur culp\",\n      \"integration\": \"culpa officia eu\",\n      \"level\": \"dolor\",\n      \"uid\": 3178639,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"nisi e\",\n      \"code\": \"ea velit esse laborum\",\n      \"name\": \"eiusmod labore non veniam\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"ullamco esse\",\n      \"integration\": \"reprehenderit officia\",\n      \"level\": \"Lorem ex anim\",\n      \"uid\": -66605761,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"labore deserunt\",\n      \"code\": \"eu ipsum in esse\",\n      \"name\": \"enim et tempor sit ut\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"reprehenderit dolore proident anim\",\n      \"integration\": \"dolor Ut\",\n      \"level\": \"proident dolore dolor dolore\",\n      \"uid\": -1213809,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"et magna enim labore\",\n      \"code\": \"est laboris officia\",\n      \"name\": \"eu deserunt dolo\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"ut adipisicing id nulla\",\n      \"integration\": \"aute ut laboris exercitation\",\n      \"level\": \"id minim adipisicing\",\n      \"uid\": -75178848,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ad \",\n      \"code\": \"Lorem commodo ad laborum\",\n      \"name\": \"culpa adipisicing\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"aute veniam sit velit\",\n   \"description\": \"sed in\",\n   \"name\": \"\",\n   \"slug\": \"amet consectetur exercitation\",\n   \"meta\": [\n    {\n     \"_id\": \"ipsum in fugiat\",\n     \"name\": \"aute aliquip laborum do\",\n     \"value\": \"anim id voluptate minim veniam\"\n    },\n    {\n     \"_id\": \"officia do consequat\",\n     \"name\": \"Duis anim\",\n     \"value\": \"ex magna\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"ad ex dolor Lorem incididunt\",\n    \"integration\": \"dolore Excepteur veniam ut\",\n    \"level\": \"laboris et\",\n    \"uid\": 51041988,\n    \"opted\": false,\n    \"permissions\": [\n     \"exercitation id in\",\n     \"ut aute quis in\"\n    ],\n    \"token\": \"cupidatat eu aliqua\",\n    \"name\": \"sit\",\n    \"stores\": [\n     {\n      \"_id\": \"labore sint\",\n      \"integration\": \"proident nisi ut\",\n      \"level\": \"sint amet \",\n      \"uid\": -64420805,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ex Excepteur\",\n      \"code\": \"anim adipisicing aliqua\",\n      \"name\": \"ullamco id\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"sed laborum ut\",\n      \"integration\": \"ex reprehenderit\",\n      \"level\": \"voluptate\",\n      \"uid\": -67236560,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"eiusmod anim\",\n      \"code\": \"enim laborum est commodo deserunt\",\n      \"name\": \"consequat dolore\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"cillum deserunt Ut eiusmod\",\n      \"integration\": \"voluptate anim cupidatat labor\",\n      \"level\": \"sit pariatur labore incididunt\",\n      \"uid\": -13047471,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"nostrud pariatur\",\n      \"code\": \"qui incididunt consequ\",\n      \"name\": \"mollit incididun\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"exercitation irure\",\n      \"integration\": \"dolore dolor magna mollit enim\",\n      \"level\": \"cupidatat enim\",\n      \"uid\": -79196926,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"cillum veniam\",\n      \"code\": \"commodo ut ea sed est\",\n      \"name\": \"officia reprehenderit ad\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"Ut minim amet\",\n    \"integration\": \"officia est aliquip minim eu\",\n    \"level\": \"nostrud ex dolor\",\n    \"uid\": 7649495,\n    \"opted\": true,\n    \"permissions\": [\n     \"ex eiusmod aute laborum\",\n     \"nisi ullamco eni\"\n    ],\n    \"token\": \"aute nulla ex deserunt\",\n    \"name\": \"cupidatat esse elit veniam do\",\n    \"stores\": [\n     {\n      \"_id\": \"aliqua \",\n      \"integration\": \"incididunt sunt d\",\n      \"level\": \"eu commodo veniam dolor laboris\",\n      \"uid\": 41370895,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"consequat proident incididunt\",\n      \"code\": \"proident anim ad eu dol\",\n      \"name\": \"dolor ipsum\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"pariatur ut\",\n      \"integration\": \"Exce\",\n      \"level\": \"tempor aute voluptate\",\n      \"uid\": 19343992,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"elit\",\n      \"code\": \"dolor amet ea Ut mollit\",\n      \"name\": \"occaecat enim\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"adipisicing dolor\",\n      \"integration\": \"do dolor est\",\n      \"level\": \"cupidatat ut est irure\",\n      \"uid\": 82301906,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ea deserunt nostrud sunt\",\n      \"code\": \"dolor reprehenderit\",\n      \"name\": \"in Duis qui\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"dolore sint anim non\",\n      \"integration\": \"nostrud ad ea amet culpa\",\n      \"level\": \"consectetur Excepteur\",\n      \"uid\": -24313167,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"deserunt eu commodo\",\n      \"code\": \"esse nostrud non sit proident\",\n      \"name\": \"commodo eiusmod in ea ut\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"adipisicing commodo veniam\",\n \"page\": {\n  \"type\": \"dolor et ut\",\n  \"size\": 63032968,\n  \"current\": 61754915,\n  \"has_next\": false,\n  \"item_total\": -73172321,\n  \"next_id\": \"nostrud enim tempor nisi adipisicing\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "ceb5c9f9-ade1-4bd7-b095-5ee8a894a002",
          "name": "getApiKey | Get Slingshot Configuration Of  A Company",
          "request": {
            "name": "getApiKey | Get Slingshot Configuration Of  A Company",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "9202689a-b51f-4faa-a430-fb7d1d2c6b11",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1951-05-22T11:33:40.054Z\",\n \"status\": 66989640,\n \"error\": \"exercitation veniam irure\",\n \"exception\": \"sunt consequat s\",\n \"message\": \"eiusmod Lorem cupidatat\",\n \"total_time_taken_in_millis\": -19938995,\n \"http_status\": \"500 INTERNAL_SERVER_ERROR\",\n \"items\": {\n  \"session_id\": \"eiusmod commodo\",\n  \"error_message\": \"est sit sed\"\n },\n \"payload\": {\n  \"session_id\": \"sint magna nisi\",\n  \"error_message\": \"pariatur aute \"\n },\n \"trace_id\": \"do\",\n \"page\": {\n  \"type\": \"eu qui culpa irure\",\n  \"size\": -80406698,\n  \"current\": -43650165,\n  \"has_next\": false,\n  \"item_total\": -17502961,\n  \"next_id\": \"ipsum culpa\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9fb467d5-cc6a-4e03-9c73-202c7972c18d",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1951-05-22T11:33:40.054Z\",\n \"status\": 66989640,\n \"error\": \"exercitation veniam irure\",\n \"exception\": \"sunt consequat s\",\n \"message\": \"eiusmod Lorem cupidatat\",\n \"total_time_taken_in_millis\": -19938995,\n \"http_status\": \"500 INTERNAL_SERVER_ERROR\",\n \"items\": {\n  \"session_id\": \"eiusmod commodo\",\n  \"error_message\": \"est sit sed\"\n },\n \"payload\": {\n  \"session_id\": \"sint magna nisi\",\n  \"error_message\": \"pariatur aute \"\n },\n \"trace_id\": \"do\",\n \"page\": {\n  \"type\": \"eu qui culpa irure\",\n  \"size\": -80406698,\n  \"current\": -43650165,\n  \"has_next\": false,\n  \"item_total\": -17502961,\n  \"next_id\": \"ipsum culpa\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "509f7a92-e55d-4e92-9e12-7b0d11897d41",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1951-05-22T11:33:40.054Z\",\n \"status\": 66989640,\n \"error\": \"exercitation veniam irure\",\n \"exception\": \"sunt consequat s\",\n \"message\": \"eiusmod Lorem cupidatat\",\n \"total_time_taken_in_millis\": -19938995,\n \"http_status\": \"500 INTERNAL_SERVER_ERROR\",\n \"items\": {\n  \"session_id\": \"eiusmod commodo\",\n  \"error_message\": \"est sit sed\"\n },\n \"payload\": {\n  \"session_id\": \"sint magna nisi\",\n  \"error_message\": \"pariatur aute \"\n },\n \"trace_id\": \"do\",\n \"page\": {\n  \"type\": \"eu qui culpa irure\",\n  \"size\": -80406698,\n  \"current\": -43650165,\n  \"has_next\": false,\n  \"item_total\": -17502961,\n  \"next_id\": \"ipsum culpa\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "ffba6741-f981-4750-baaf-fb251e927e44",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "8662db11-afae-417e-9baf-1e507411a38f",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2020-03-21T01:04:31.154Z\",\n \"status\": 51594937,\n \"error\": \"velit mollit\",\n \"exception\": \"dolore mollit dolor in\",\n \"message\": \"Lorem\",\n \"total_time_taken_in_millis\": -93030182,\n \"http_status\": \"426 UPGRADE_REQUIRED\",\n \"items\": {\n  \"company_id\": 54252514,\n  \"integration_data\": {},\n  \"company_name\": \"anim reprehenderit\",\n  \"task_details\": {\n   \"type\": -3451128,\n   \"group_list\": [\n    {\n     \"text\": \"consequat fugiat\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"sint labore cillum dolor officia\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 4415529.112972513,\n   \"safe_stock\": 92065944,\n   \"period_threshold\": -56155989,\n   \"period_threshold_type\": \"WEEKS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"Ut laboris incidid\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"veniam\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"ullamco nostrud irure\",\n  \"alias\": \"ipsum in consequat nulla\"\n },\n \"payload\": {\n  \"company_id\": 50532257,\n  \"integration_data\": {},\n  \"company_name\": \"voluptate deserunt velit\",\n  \"task_details\": {\n   \"type\": 18396390,\n   \"group_list\": [\n    {\n     \"text\": \"ullamco laboris\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"incididunt do eu e\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -63613132.68447546,\n   \"safe_stock\": 79030771,\n   \"period_threshold\": 90033695,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"voluptate nulla\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"amet consequat nulla\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"esse\",\n  \"alias\": \"nisi dolor velit Excepteur\"\n },\n \"trace_id\": \"elit occaecat ut\",\n \"page\": {\n  \"type\": \"mollit adipisicing\",\n  \"size\": -71998061,\n  \"current\": 61820060,\n  \"has_next\": true,\n  \"item_total\": 79875495,\n  \"next_id\": \"in officia\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2c461e22-dc56-4200-98c5-c570fdcf7aac",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2020-03-21T01:04:31.154Z\",\n \"status\": 51594937,\n \"error\": \"velit mollit\",\n \"exception\": \"dolore mollit dolor in\",\n \"message\": \"Lorem\",\n \"total_time_taken_in_millis\": -93030182,\n \"http_status\": \"426 UPGRADE_REQUIRED\",\n \"items\": {\n  \"company_id\": 54252514,\n  \"integration_data\": {},\n  \"company_name\": \"anim reprehenderit\",\n  \"task_details\": {\n   \"type\": -3451128,\n   \"group_list\": [\n    {\n     \"text\": \"consequat fugiat\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"sint labore cillum dolor officia\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 4415529.112972513,\n   \"safe_stock\": 92065944,\n   \"period_threshold\": -56155989,\n   \"period_threshold_type\": \"WEEKS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"Ut laboris incidid\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"veniam\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"ullamco nostrud irure\",\n  \"alias\": \"ipsum in consequat nulla\"\n },\n \"payload\": {\n  \"company_id\": 50532257,\n  \"integration_data\": {},\n  \"company_name\": \"voluptate deserunt velit\",\n  \"task_details\": {\n   \"type\": 18396390,\n   \"group_list\": [\n    {\n     \"text\": \"ullamco laboris\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"incididunt do eu e\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -63613132.68447546,\n   \"safe_stock\": 79030771,\n   \"period_threshold\": 90033695,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"voluptate nulla\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"amet consequat nulla\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"esse\",\n  \"alias\": \"nisi dolor velit Excepteur\"\n },\n \"trace_id\": \"elit occaecat ut\",\n \"page\": {\n  \"type\": \"mollit adipisicing\",\n  \"size\": -71998061,\n  \"current\": 61820060,\n  \"has_next\": true,\n  \"item_total\": 79875495,\n  \"next_id\": \"in officia\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "59f7900f-4932-4225-ab32-f61e48cd07d1",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2020-03-21T01:04:31.154Z\",\n \"status\": 51594937,\n \"error\": \"velit mollit\",\n \"exception\": \"dolore mollit dolor in\",\n \"message\": \"Lorem\",\n \"total_time_taken_in_millis\": -93030182,\n \"http_status\": \"426 UPGRADE_REQUIRED\",\n \"items\": {\n  \"company_id\": 54252514,\n  \"integration_data\": {},\n  \"company_name\": \"anim reprehenderit\",\n  \"task_details\": {\n   \"type\": -3451128,\n   \"group_list\": [\n    {\n     \"text\": \"consequat fugiat\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"sint labore cillum dolor officia\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 4415529.112972513,\n   \"safe_stock\": 92065944,\n   \"period_threshold\": -56155989,\n   \"period_threshold_type\": \"WEEKS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"Ut laboris incidid\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"veniam\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"ullamco nostrud irure\",\n  \"alias\": \"ipsum in consequat nulla\"\n },\n \"payload\": {\n  \"company_id\": 50532257,\n  \"integration_data\": {},\n  \"company_name\": \"voluptate deserunt velit\",\n  \"task_details\": {\n   \"type\": 18396390,\n   \"group_list\": [\n    {\n     \"text\": \"ullamco laboris\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"incididunt do eu e\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -63613132.68447546,\n   \"safe_stock\": 79030771,\n   \"period_threshold\": 90033695,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"voluptate nulla\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"amet consequat nulla\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"esse\",\n  \"alias\": \"nisi dolor velit Excepteur\"\n },\n \"trace_id\": \"elit occaecat ut\",\n \"page\": {\n  \"type\": \"mollit adipisicing\",\n  \"size\": -71998061,\n  \"current\": 61820060,\n  \"has_next\": true,\n  \"item_total\": 79875495,\n  \"next_id\": \"in officia\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "58721798-b597-444c-86c0-0f4d92e5a399",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "6a2643df-6278-48f1-bf8a-e63da45fb627",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1987-11-27T12:20:45.501Z\",\n \"status\": -37081149,\n \"error\": \"nulla amet\",\n \"exception\": \"dolore consectetur aliquip et\",\n \"message\": \"ipsum veniam\",\n \"total_time_taken_in_millis\": -44772630,\n \"http_status\": \"208 ALREADY_REPORTED\",\n \"items\": [\n  {\n   \"company_id\": -29154286,\n   \"integration_data\": {},\n   \"company_name\": \"irure Lorem \",\n   \"task_details\": {\n    \"type\": -19764169,\n    \"group_list\": [\n     {\n      \"text\": \"elit irure Excepteur labore ullamco\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore sint in laborum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 57603278.134100616,\n    \"safe_stock\": -53022255,\n    \"period_threshold\": -16361329,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"amet esse et ad\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"esse do non\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"adipisicing sunt\",\n   \"alias\": \"laborum minim exercitation aliquip incididunt\"\n  },\n  {\n   \"company_id\": -85810031,\n   \"integration_data\": {},\n   \"company_name\": \"ea eiusmod\",\n   \"task_details\": {\n    \"type\": 89726876,\n    \"group_list\": [\n     {\n      \"text\": \"veniam\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cillum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -15467356.539308503,\n    \"safe_stock\": 13348188,\n    \"period_threshold\": 55644589,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"pariatur quis ad\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"con\",\n   \"alias\": \"Ut officia ad cupidatat ex\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -10909979,\n   \"integration_data\": {},\n   \"company_name\": \"offic\",\n   \"task_details\": {\n    \"type\": -52943320,\n    \"group_list\": [\n     {\n      \"text\": \"eiusmod ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute minim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -96444518.7856955,\n    \"safe_stock\": -26319535,\n    \"period_threshold\": -9629203,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"minim veniam anim cillum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"minim elit velit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"non ullamco velit\",\n   \"alias\": \"fugiat\"\n  },\n  {\n   \"company_id\": 57581184,\n   \"integration_data\": {},\n   \"company_name\": \"ipsum sed officia\",\n   \"task_details\": {\n    \"type\": -47036527,\n    \"group_list\": [\n     {\n      \"text\": \"Duis exercitation laborum enim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"elit et\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -38131910.92264212,\n    \"safe_stock\": 9561267,\n    \"period_threshold\": -78655072,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"proident do \",\n      \"value\": {}\n     },\n     {\n      \"text\": \"officia laboris Excepteur est aliqua\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"dolore\",\n   \"alias\": \"elit velit\"\n  }\n ],\n \"trace_id\": \"est\",\n \"page\": {\n  \"type\": \"commodo quis\",\n  \"size\": -62856663,\n  \"current\": 20892009,\n  \"has_next\": true,\n  \"item_total\": 18293481,\n  \"next_id\": \"non laboris nulla aliquip\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a40371cc-d61e-44ee-9183-4af689c3b0bc",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1977-08-01T00:56:48.960Z\",\n \"status\": 13977580,\n \"error\": \"nulla\",\n \"exception\": \"tempor Duis ullamco\",\n \"message\": \"ipsum esse sed sint\",\n \"total_time_taken_in_millis\": -8311770,\n \"http_status\": \"406 NOT_ACCEPTABLE\",\n \"items\": [\n  {\n   \"company_id\": -68543201,\n   \"integration_data\": {},\n   \"company_name\": \"ea in ut\",\n   \"task_details\": {\n    \"type\": 78974892,\n    \"group_list\": [\n     {\n      \"text\": \"qui pariatur minim ut anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"id cupidatat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -655098.1110918969,\n    \"safe_stock\": -37061698,\n    \"period_threshold\": 56581378,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"Excepteur proiden\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nisi in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ni\",\n   \"alias\": \"Lorem occaecat\"\n  },\n  {\n   \"company_id\": 46822171,\n   \"integration_data\": {},\n   \"company_name\": \"sit aliquip irure Lorem laboris\",\n   \"task_details\": {\n    \"type\": 40326660,\n    \"group_list\": [\n     {\n      \"text\": \"aliqu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"mollit ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -48009647.320606105,\n    \"safe_stock\": -35798559,\n    \"period_threshold\": -61780876,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ex eu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ullamco Lorem laboris ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"veniam sunt\",\n   \"alias\": \"est dolo\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -56028023,\n   \"integration_data\": {},\n   \"company_name\": \"veniam reprehenderit enim\",\n   \"task_details\": {\n    \"type\": 94029014,\n    \"group_list\": [\n     {\n      \"text\": \"velit est fugiat tempor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"occaecat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -66306545.6530116,\n    \"safe_stock\": 40466314,\n    \"period_threshold\": 61617088,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"irure pariatur cillum est ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laborum amet\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in laboris ut et voluptate\",\n   \"alias\": \"ipsum aliquip aute\"\n  },\n  {\n   \"company_id\": -54387053,\n   \"integration_data\": {},\n   \"company_name\": \"anim exercit\",\n   \"task_details\": {\n    \"type\": 15912607,\n    \"group_list\": [\n     {\n      \"text\": \"exercitation ullamco Excepteur quis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proident non eu nisi\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 4151787.6785490215,\n    \"safe_stock\": -76966554,\n    \"period_threshold\": -45697816,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolor voluptate\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ipsum cillum voluptate incididunt tempor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ullamco irure in\",\n   \"alias\": \"do ea\"\n  }\n ],\n \"trace_id\": \"cupidatat dolor\",\n \"page\": {\n  \"type\": \"reprehenderit cupidatat nostrud enim\",\n  \"size\": 60951727,\n  \"current\": -46422364,\n  \"has_next\": false,\n  \"item_total\": -24425275,\n  \"next_id\": \"reprehenderit minim Duis ipsum\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1fb8524d-b71f-4383-a101-899d38754f40",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1977-08-01T00:56:48.960Z\",\n \"status\": 13977580,\n \"error\": \"nulla\",\n \"exception\": \"tempor Duis ullamco\",\n \"message\": \"ipsum esse sed sint\",\n \"total_time_taken_in_millis\": -8311770,\n \"http_status\": \"406 NOT_ACCEPTABLE\",\n \"items\": [\n  {\n   \"company_id\": -68543201,\n   \"integration_data\": {},\n   \"company_name\": \"ea in ut\",\n   \"task_details\": {\n    \"type\": 78974892,\n    \"group_list\": [\n     {\n      \"text\": \"qui pariatur minim ut anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"id cupidatat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -655098.1110918969,\n    \"safe_stock\": -37061698,\n    \"period_threshold\": 56581378,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"Excepteur proiden\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nisi in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ni\",\n   \"alias\": \"Lorem occaecat\"\n  },\n  {\n   \"company_id\": 46822171,\n   \"integration_data\": {},\n   \"company_name\": \"sit aliquip irure Lorem laboris\",\n   \"task_details\": {\n    \"type\": 40326660,\n    \"group_list\": [\n     {\n      \"text\": \"aliqu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"mollit ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -48009647.320606105,\n    \"safe_stock\": -35798559,\n    \"period_threshold\": -61780876,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ex eu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ullamco Lorem laboris ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"veniam sunt\",\n   \"alias\": \"est dolo\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -56028023,\n   \"integration_data\": {},\n   \"company_name\": \"veniam reprehenderit enim\",\n   \"task_details\": {\n    \"type\": 94029014,\n    \"group_list\": [\n     {\n      \"text\": \"velit est fugiat tempor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"occaecat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -66306545.6530116,\n    \"safe_stock\": 40466314,\n    \"period_threshold\": 61617088,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"irure pariatur cillum est ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laborum amet\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in laboris ut et voluptate\",\n   \"alias\": \"ipsum aliquip aute\"\n  },\n  {\n   \"company_id\": -54387053,\n   \"integration_data\": {},\n   \"company_name\": \"anim exercit\",\n   \"task_details\": {\n    \"type\": 15912607,\n    \"group_list\": [\n     {\n      \"text\": \"exercitation ullamco Excepteur quis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proident non eu nisi\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 4151787.6785490215,\n    \"safe_stock\": -76966554,\n    \"period_threshold\": -45697816,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolor voluptate\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ipsum cillum voluptate incididunt tempor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ullamco irure in\",\n   \"alias\": \"do ea\"\n  }\n ],\n \"trace_id\": \"cupidatat dolor\",\n \"page\": {\n  \"type\": \"reprehenderit cupidatat nostrud enim\",\n  \"size\": 60951727,\n  \"current\": -46422364,\n  \"has_next\": false,\n  \"item_total\": -24425275,\n  \"next_id\": \"reprehenderit minim Duis ipsum\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "f0c09d80-624c-44d6-b8ea-59511854c042",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "7d9b412f-feb3-4d05-8160-cf94e537a088",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1999-06-17T16:55:56.547Z\",\n \"status\": -899679,\n \"error\": \"nisi dolore est\",\n \"exception\": \"minim non\",\n \"message\": \"enim\",\n \"total_time_taken_in_millis\": 9249520,\n \"http_status\": \"423 LOCKED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"culpa\",\n \"page\": {\n  \"type\": \"id\",\n  \"size\": 58717173,\n  \"current\": -28351637,\n  \"has_next\": false,\n  \"item_total\": -73897691,\n  \"next_id\": \"nostrud laboris dolore enim\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "28228d21-c1fb-4183-8d40-5042a0643031",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1999-06-17T16:55:56.547Z\",\n \"status\": -899679,\n \"error\": \"nisi dolore est\",\n \"exception\": \"minim non\",\n \"message\": \"enim\",\n \"total_time_taken_in_millis\": 9249520,\n \"http_status\": \"423 LOCKED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"culpa\",\n \"page\": {\n  \"type\": \"id\",\n  \"size\": 58717173,\n  \"current\": -28351637,\n  \"has_next\": false,\n  \"item_total\": -73897691,\n  \"next_id\": \"nostrud laboris dolore enim\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "7fb93127-e231-4ab6-95d0-6d2101041399",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1999-06-17T16:55:56.547Z\",\n \"status\": -899679,\n \"error\": \"nisi dolore est\",\n \"exception\": \"minim non\",\n \"message\": \"enim\",\n \"total_time_taken_in_millis\": 9249520,\n \"http_status\": \"423 LOCKED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"culpa\",\n \"page\": {\n  \"type\": \"id\",\n  \"size\": 58717173,\n  \"current\": -28351637,\n  \"has_next\": false,\n  \"item_total\": -73897691,\n  \"next_id\": \"nostrud laboris dolore enim\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "5b34d227-7f6f-4907-8986-34462af4c9dd",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "e93a40c5-a759-4038-9875-cec857226001",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1960-02-07T01:18:32.204Z\",\n \"status\": 91462099,\n \"error\": \"cons\",\n \"exception\": \"laborum\",\n \"message\": \"ut amet\",\n \"total_time_taken_in_millis\": -52471062,\n \"http_status\": \"416 REQUESTED_RANGE_NOT_SATISFIABLE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"culpa sunt fugiat ullamco commod\",\n \"page\": {\n  \"type\": \"dolore\",\n  \"size\": 77960141,\n  \"current\": -66461294,\n  \"has_next\": false,\n  \"item_total\": -84533663,\n  \"next_id\": \"elit et\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "592305a5-523a-4d26-9d86-7e400478f754",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1960-02-07T01:18:32.204Z\",\n \"status\": 91462099,\n \"error\": \"cons\",\n \"exception\": \"laborum\",\n \"message\": \"ut amet\",\n \"total_time_taken_in_millis\": -52471062,\n \"http_status\": \"416 REQUESTED_RANGE_NOT_SATISFIABLE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"culpa sunt fugiat ullamco commod\",\n \"page\": {\n  \"type\": \"dolore\",\n  \"size\": 77960141,\n  \"current\": -66461294,\n  \"has_next\": false,\n  \"item_total\": -84533663,\n  \"next_id\": \"elit et\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "941f4815-c105-43a2-8483-69dffa25baa0",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1960-02-07T01:18:32.204Z\",\n \"status\": 91462099,\n \"error\": \"cons\",\n \"exception\": \"laborum\",\n \"message\": \"ut amet\",\n \"total_time_taken_in_millis\": -52471062,\n \"http_status\": \"416 REQUESTED_RANGE_NOT_SATISFIABLE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"culpa sunt fugiat ullamco commod\",\n \"page\": {\n  \"type\": \"dolore\",\n  \"size\": 77960141,\n  \"current\": -66461294,\n  \"has_next\": false,\n  \"item_total\": -84533663,\n  \"next_id\": \"elit et\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ef5aa178-abc9-4c92-885e-f5e89f20b2f4",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1960-02-07T01:18:32.204Z\",\n \"status\": 91462099,\n \"error\": \"cons\",\n \"exception\": \"laborum\",\n \"message\": \"ut amet\",\n \"total_time_taken_in_millis\": -52471062,\n \"http_status\": \"416 REQUESTED_RANGE_NOT_SATISFIABLE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"culpa sunt fugiat ullamco commod\",\n \"page\": {\n  \"type\": \"dolore\",\n  \"size\": 77960141,\n  \"current\": -66461294,\n  \"has_next\": false,\n  \"item_total\": -84533663,\n  \"next_id\": \"elit et\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5aacd6fa-5b76-4815-b9a2-26c5f6f5e1cc",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1960-02-07T01:18:32.204Z\",\n \"status\": 91462099,\n \"error\": \"cons\",\n \"exception\": \"laborum\",\n \"message\": \"ut amet\",\n \"total_time_taken_in_millis\": -52471062,\n \"http_status\": \"416 REQUESTED_RANGE_NOT_SATISFIABLE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"culpa sunt fugiat ullamco commod\",\n \"page\": {\n  \"type\": \"dolore\",\n  \"size\": 77960141,\n  \"current\": -66461294,\n  \"has_next\": false,\n  \"item_total\": -84533663,\n  \"next_id\": \"elit et\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx1.de"
    }
  ],
  "info": {
    "_postman_id": "30e5a154-e003-42fe-ac4d-297628d1124a",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
