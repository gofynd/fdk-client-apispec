{
  "item": [
    {
      "id": "f47a277b-2351-479b-8e64-74c820aa4e1a",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "c8549058-6dd6-4545-aa76-ad8eb20f425d",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "7cf16340-a960-4ac0-ad16-73b3f57b61e9",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "i",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "31ca3309-3c71-4884-860e-05b81ab69fb0",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "i",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "9d2711c5-ccf7-483e-ae14-3851129a2e10",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "i",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "f2a92f1c-209a-4faf-92a1-2af7cc645fdd",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "adbfc719-a28d-4fa5-bf51-4df1b8f2f8a3",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "046c2127-9057-44e4-9955-3df02cc2b185",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "ba5595f9-dc66-404d-b21c-4b073bf94359",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "aaa00371-f90c-4dda-a62d-c16bf6721ad3",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -7505834,\n   \"event_name\": \"elit amet\",\n   \"event_type\": \"do aliqua amet dolore\",\n   \"event_category\": \"ullamco ea consectetur tempor\",\n   \"version\": \"ut aliqua\",\n   \"display_name\": \"nisi laboris cillum et\",\n   \"description\": \"sint enim\",\n   \"created_on\": \"ad voluptate pariatur dolore\"\n  },\n  {\n   \"id\": -30310444,\n   \"event_name\": \"in consequat voluptate\",\n   \"event_type\": \"dolor voluptate\",\n   \"event_category\": \"in\",\n   \"version\": \"esse qui conseq\",\n   \"display_name\": \"proident Lorem amet dolore\",\n   \"description\": \"ipsum dolore ea\",\n   \"created_on\": \"do sunt voluptate est\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "3033636f-d52b-4322-a3c2-869ec9f0ebc7",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "9b85e73f-779c-4055-8e08-64c9d0be3050",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -5061135,\n   \"event_name\": \"consequat ex ad elit culpa\",\n   \"event_type\": \"aliqua sit\",\n   \"event_category\": \"ut\",\n   \"version\": \"cupidatat culpa mollit voluptate\",\n   \"display_name\": \"eu laboris\",\n   \"description\": \"nulla exercitation\",\n   \"created_on\": \"Ut\"\n  },\n  {\n   \"id\": 19553214,\n   \"event_name\": \"do enim eiusmod in\",\n   \"event_type\": \"adipisicing nostrud magna\",\n   \"event_category\": \"pariatur Duis\",\n   \"version\": \"proident in amet\",\n   \"display_name\": \"dolore mollit sed\",\n   \"description\": \"nostrud\",\n   \"created_on\": \"aliqua ipsum\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "e1d6e2f4-a919-44ea-be58-a6b4d9cbd90d",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "638e4bf9-d589-437e-b264-ec62961b9825",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "9ce17f3f-4807-4dcb-90c7-ea377dff12e9",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1976-05-23T23:41:13.106Z\",\n \"status\": -31473642,\n \"error\": \"culpa enim\",\n \"exception\": \"ut aliqua\",\n \"message\": \"magna\",\n \"total_time_taken_in_millis\": -54925689,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": {\n  \"company_id\": 49740525,\n  \"integration_data\": {},\n  \"company_name\": \"sed in et consequat\",\n  \"task_details\": {\n   \"type\": -82208440,\n   \"group_list\": [\n    {\n     \"text\": \"anim do\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"Excepteur m\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 56481070.904256254,\n   \"safe_stock\": 43437662,\n   \"period_threshold\": -51545136,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"ex veniam tempor\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ut \",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"in ex sint Excepteur\",\n  \"alias\": \"elit enim\"\n },\n \"payload\": {\n  \"company_id\": -82950993,\n  \"integration_data\": {},\n  \"company_name\": \"ipsum elit magna consequat est\",\n  \"task_details\": {\n   \"type\": -806850,\n   \"group_list\": [\n    {\n     \"text\": \"enim ullamco laboris est\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"pariatur ipsum fugiat commodo cupidatat\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -95740801.05809367,\n   \"safe_stock\": 91140908,\n   \"period_threshold\": -14435310,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"laboris tempor ipsum in\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"amet culpa\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"proident veniam fugiat Duis sed\",\n  \"alias\": \"reprehenderit laborum magna et\"\n },\n \"trace_id\": \"dolore officia est Duis\",\n \"page\": {\n  \"type\": \"ad et cupidatat ut\",\n  \"size\": 21571698,\n  \"current\": -89733698,\n  \"has_next\": false,\n  \"item_total\": -86426964,\n  \"next_id\": \"incididunt Ut\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d38e7105-32ae-42a7-a9d4-375a5b328b1f",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1976-05-23T23:41:13.106Z\",\n \"status\": -31473642,\n \"error\": \"culpa enim\",\n \"exception\": \"ut aliqua\",\n \"message\": \"magna\",\n \"total_time_taken_in_millis\": -54925689,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": {\n  \"company_id\": 49740525,\n  \"integration_data\": {},\n  \"company_name\": \"sed in et consequat\",\n  \"task_details\": {\n   \"type\": -82208440,\n   \"group_list\": [\n    {\n     \"text\": \"anim do\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"Excepteur m\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 56481070.904256254,\n   \"safe_stock\": 43437662,\n   \"period_threshold\": -51545136,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"ex veniam tempor\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ut \",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"in ex sint Excepteur\",\n  \"alias\": \"elit enim\"\n },\n \"payload\": {\n  \"company_id\": -82950993,\n  \"integration_data\": {},\n  \"company_name\": \"ipsum elit magna consequat est\",\n  \"task_details\": {\n   \"type\": -806850,\n   \"group_list\": [\n    {\n     \"text\": \"enim ullamco laboris est\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"pariatur ipsum fugiat commodo cupidatat\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -95740801.05809367,\n   \"safe_stock\": 91140908,\n   \"period_threshold\": -14435310,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"laboris tempor ipsum in\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"amet culpa\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"proident veniam fugiat Duis sed\",\n  \"alias\": \"reprehenderit laborum magna et\"\n },\n \"trace_id\": \"dolore officia est Duis\",\n \"page\": {\n  \"type\": \"ad et cupidatat ut\",\n  \"size\": 21571698,\n  \"current\": -89733698,\n  \"has_next\": false,\n  \"item_total\": -86426964,\n  \"next_id\": \"incididunt Ut\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "6f5fa225-68af-4cef-a3f5-f2617e254254",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1976-05-23T23:41:13.106Z\",\n \"status\": -31473642,\n \"error\": \"culpa enim\",\n \"exception\": \"ut aliqua\",\n \"message\": \"magna\",\n \"total_time_taken_in_millis\": -54925689,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": {\n  \"company_id\": 49740525,\n  \"integration_data\": {},\n  \"company_name\": \"sed in et consequat\",\n  \"task_details\": {\n   \"type\": -82208440,\n   \"group_list\": [\n    {\n     \"text\": \"anim do\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"Excepteur m\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 56481070.904256254,\n   \"safe_stock\": 43437662,\n   \"period_threshold\": -51545136,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"ex veniam tempor\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ut \",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"in ex sint Excepteur\",\n  \"alias\": \"elit enim\"\n },\n \"payload\": {\n  \"company_id\": -82950993,\n  \"integration_data\": {},\n  \"company_name\": \"ipsum elit magna consequat est\",\n  \"task_details\": {\n   \"type\": -806850,\n   \"group_list\": [\n    {\n     \"text\": \"enim ullamco laboris est\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"pariatur ipsum fugiat commodo cupidatat\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -95740801.05809367,\n   \"safe_stock\": 91140908,\n   \"period_threshold\": -14435310,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"laboris tempor ipsum in\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"amet culpa\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"proident veniam fugiat Duis sed\",\n  \"alias\": \"reprehenderit laborum magna et\"\n },\n \"trace_id\": \"dolore officia est Duis\",\n \"page\": {\n  \"type\": \"ad et cupidatat ut\",\n  \"size\": 21571698,\n  \"current\": -89733698,\n  \"has_next\": false,\n  \"item_total\": -86426964,\n  \"next_id\": \"incididunt Ut\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "d47f3255-9cc0-4714-ac05-cacc6b21bfcc",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "6d2ed45b-3dcb-4398-a575-73581aa2edcb",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2010-07-06T18:44:53.239Z\",\n \"status\": -40792546,\n \"error\": \"aliqua in eu qui\",\n \"exception\": \"in aliqua consequat in dolore\",\n \"message\": \"consectetur consequat Excepteur\",\n \"total_time_taken_in_millis\": 90698315,\n \"http_status\": \"423 LOCKED\",\n \"items\": [\n  {\n   \"company_id\": -33300592,\n   \"integration_data\": {},\n   \"company_name\": \"ex ea reprehenderit enim\",\n   \"task_details\": {\n    \"type\": 12049330,\n    \"group_list\": [\n     {\n      \"text\": \"officia non\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 11802918.07971847,\n    \"safe_stock\": -72409008,\n    \"period_threshold\": -61982416,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"magna minim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"officia consectetur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"labore eu irure\",\n   \"alias\": \"tempor sit est sint nostrud\"\n  },\n  {\n   \"company_id\": -60742623,\n   \"integration_data\": {},\n   \"company_name\": \"sed dolor\",\n   \"task_details\": {\n    \"type\": -40731538,\n    \"group_list\": [\n     {\n      \"text\": \"anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ullamco ipsum qui\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -51062386.584159024,\n    \"safe_stock\": 14556526,\n    \"period_threshold\": 89005318,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"elit labore nisi non\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consectetur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"veniam aliquip in\",\n   \"alias\": \"proident voluptate enim non\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 3695659,\n   \"integration_data\": {},\n   \"company_name\": \"voluptate deserunt aute veniam\",\n   \"task_details\": {\n    \"type\": 49349638,\n    \"group_list\": [\n     {\n      \"text\": \"magna est\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"minim in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -82278533.1852867,\n    \"safe_stock\": 80117646,\n    \"period_threshold\": 72145602,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"occaecat ea commodo est\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"exercitation dolore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"anim nisi\",\n   \"alias\": \"Excepteur nostrud\"\n  },\n  {\n   \"company_id\": 72291015,\n   \"integration_data\": {},\n   \"company_name\": \"dolore sed Excepteur\",\n   \"task_details\": {\n    \"type\": -76610854,\n    \"group_list\": [\n     {\n      \"text\": \"veniam nulla \",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in non\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -46086535.656579964,\n    \"safe_stock\": -5969513,\n    \"period_threshold\": -19098821,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"in do\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut s\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"velit magna Ut\",\n   \"alias\": \"sit commodo minim\"\n  }\n ],\n \"trace_id\": \"ullamco eiusmod dolo\",\n \"page\": {\n  \"type\": \"tempor qui ut sed\",\n  \"size\": -4284953,\n  \"current\": -23519418,\n  \"has_next\": false,\n  \"item_total\": 66131206,\n  \"next_id\": \"Ut proident\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f4f06a69-ed0f-4680-a3e6-7ab8f2d079fc",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2022-01-09T17:15:47.912Z\",\n \"status\": 63688056,\n \"error\": \"consectetur proident magna\",\n \"exception\": \"consecte\",\n \"message\": \"enim sed\",\n \"total_time_taken_in_millis\": 99424183,\n \"http_status\": \"511 NETWORK_AUTHENTICATION_REQUIRED\",\n \"items\": [\n  {\n   \"company_id\": 45867102,\n   \"integration_data\": {},\n   \"company_name\": \"deserunt incididunt\",\n   \"task_details\": {\n    \"type\": 72395592,\n    \"group_list\": [\n     {\n      \"text\": \"do veniam Lorem exercitation eu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"magna dolore nisi labore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -184229.0947906524,\n    \"safe_stock\": -51553630,\n    \"period_threshold\": -25860320,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"fugiat in incididunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"labore anim deserunt ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"esse aliquip\",\n   \"alias\": \"est anim\"\n  },\n  {\n   \"company_id\": -87828482,\n   \"integration_data\": {},\n   \"company_name\": \"Duis aliquip Excepteur est in\",\n   \"task_details\": {\n    \"type\": -50491003,\n    \"group_list\": [\n     {\n      \"text\": \"min\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nul\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 99224788.34043384,\n    \"safe_stock\": 49256050,\n    \"period_threshold\": 34324614,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"quis cupidatat nisi laboris elit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"voluptate in proident ad incidid\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Ut mollit\",\n   \"alias\": \"non mollit Duis\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 44024048,\n   \"integration_data\": {},\n   \"company_name\": \"elit ex aute laboris\",\n   \"task_details\": {\n    \"type\": -26434245,\n    \"group_list\": [\n     {\n      \"text\": \"adipisicing ullamco enim eiusmod labore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Lorem\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -53790120.42639277,\n    \"safe_stock\": 10725516,\n    \"period_threshold\": -9027721,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"velit cupidatat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"anim labore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"elit amet quis ipsum qui\",\n   \"alias\": \"enim culpa irure\"\n  },\n  {\n   \"company_id\": 6798882,\n   \"integration_data\": {},\n   \"company_name\": \"exercitation cillum\",\n   \"task_details\": {\n    \"type\": 14521848,\n    \"group_list\": [\n     {\n      \"text\": \"anim ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"fugiat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -40810059.293721855,\n    \"safe_stock\": -61072179,\n    \"period_threshold\": 13718971,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolor fugiat exercitation nostrud sunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ullamco occaecat exercitation dolore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sint e\",\n   \"alias\": \"dolore consectetur non\"\n  }\n ],\n \"trace_id\": \"sed minim et cillum aliquip\",\n \"page\": {\n  \"type\": \"ex\",\n  \"size\": 81564089,\n  \"current\": 20345581,\n  \"has_next\": false,\n  \"item_total\": -82142549,\n  \"next_id\": \"do ad Ut\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d351f056-f818-49c6-b756-5c9f03a838f9",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2022-01-09T17:15:47.912Z\",\n \"status\": 63688056,\n \"error\": \"consectetur proident magna\",\n \"exception\": \"consecte\",\n \"message\": \"enim sed\",\n \"total_time_taken_in_millis\": 99424183,\n \"http_status\": \"511 NETWORK_AUTHENTICATION_REQUIRED\",\n \"items\": [\n  {\n   \"company_id\": 45867102,\n   \"integration_data\": {},\n   \"company_name\": \"deserunt incididunt\",\n   \"task_details\": {\n    \"type\": 72395592,\n    \"group_list\": [\n     {\n      \"text\": \"do veniam Lorem exercitation eu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"magna dolore nisi labore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -184229.0947906524,\n    \"safe_stock\": -51553630,\n    \"period_threshold\": -25860320,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"fugiat in incididunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"labore anim deserunt ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"esse aliquip\",\n   \"alias\": \"est anim\"\n  },\n  {\n   \"company_id\": -87828482,\n   \"integration_data\": {},\n   \"company_name\": \"Duis aliquip Excepteur est in\",\n   \"task_details\": {\n    \"type\": -50491003,\n    \"group_list\": [\n     {\n      \"text\": \"min\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nul\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 99224788.34043384,\n    \"safe_stock\": 49256050,\n    \"period_threshold\": 34324614,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"quis cupidatat nisi laboris elit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"voluptate in proident ad incidid\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Ut mollit\",\n   \"alias\": \"non mollit Duis\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 44024048,\n   \"integration_data\": {},\n   \"company_name\": \"elit ex aute laboris\",\n   \"task_details\": {\n    \"type\": -26434245,\n    \"group_list\": [\n     {\n      \"text\": \"adipisicing ullamco enim eiusmod labore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Lorem\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -53790120.42639277,\n    \"safe_stock\": 10725516,\n    \"period_threshold\": -9027721,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"velit cupidatat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"anim labore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"elit amet quis ipsum qui\",\n   \"alias\": \"enim culpa irure\"\n  },\n  {\n   \"company_id\": 6798882,\n   \"integration_data\": {},\n   \"company_name\": \"exercitation cillum\",\n   \"task_details\": {\n    \"type\": 14521848,\n    \"group_list\": [\n     {\n      \"text\": \"anim ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"fugiat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -40810059.293721855,\n    \"safe_stock\": -61072179,\n    \"period_threshold\": 13718971,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolor fugiat exercitation nostrud sunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ullamco occaecat exercitation dolore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sint e\",\n   \"alias\": \"dolore consectetur non\"\n  }\n ],\n \"trace_id\": \"sed minim et cillum aliquip\",\n \"page\": {\n  \"type\": \"ex\",\n  \"size\": 81564089,\n  \"current\": 20345581,\n  \"has_next\": false,\n  \"item_total\": -82142549,\n  \"next_id\": \"do ad Ut\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "363a4588-9d52-4750-ad44-2a7dd1a96980",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "7f33a8c7-e7f0-4928-9d04-6dc04c101813",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1960-06-04T10:38:33.270Z\",\n \"status\": -84840892,\n \"error\": \"inci\",\n \"exception\": \"Lorem enim\",\n \"message\": \"\",\n \"total_time_taken_in_millis\": -12567899,\n \"http_status\": \"506 VARIANT_ALSO_NEGOTIATES\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"velit\",\n \"page\": {\n  \"type\": \"proident\",\n  \"size\": -92269695,\n  \"current\": -39862998,\n  \"has_next\": false,\n  \"item_total\": -92152047,\n  \"next_id\": \"do mollit\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2bb017c1-e9fa-43f6-98c9-d4821b57e2fa",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1960-06-04T10:38:33.270Z\",\n \"status\": -84840892,\n \"error\": \"inci\",\n \"exception\": \"Lorem enim\",\n \"message\": \"\",\n \"total_time_taken_in_millis\": -12567899,\n \"http_status\": \"506 VARIANT_ALSO_NEGOTIATES\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"velit\",\n \"page\": {\n  \"type\": \"proident\",\n  \"size\": -92269695,\n  \"current\": -39862998,\n  \"has_next\": false,\n  \"item_total\": -92152047,\n  \"next_id\": \"do mollit\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ee1eea0d-4cfd-47e2-b976-77531af29c5d",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1960-06-04T10:38:33.270Z\",\n \"status\": -84840892,\n \"error\": \"inci\",\n \"exception\": \"Lorem enim\",\n \"message\": \"\",\n \"total_time_taken_in_millis\": -12567899,\n \"http_status\": \"506 VARIANT_ALSO_NEGOTIATES\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"velit\",\n \"page\": {\n  \"type\": \"proident\",\n  \"size\": -92269695,\n  \"current\": -39862998,\n  \"has_next\": false,\n  \"item_total\": -92152047,\n  \"next_id\": \"do mollit\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "5ee1479b-4d2f-42b4-8f92-3abce80ec91e",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "d4a06bb8-8ac0-4009-83a7-55f75e51605f",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1998-06-13T01:38:53.273Z\",\n \"status\": -53269458,\n \"error\": \"adipisicing esse veniam\",\n \"exception\": \"voluptate ut ex esse rep\",\n \"message\": \"consectetur eiusmod in\",\n \"total_time_taken_in_millis\": -27841084,\n \"http_status\": \"510 NOT_EXTENDED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ut\",\n \"page\": {\n  \"type\": \"velit veniam\",\n  \"size\": 79496367,\n  \"current\": -3583704,\n  \"has_next\": true,\n  \"item_total\": -19495071,\n  \"next_id\": \"ullamco\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "be949c15-e8f8-482d-a517-3c601da737e1",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1998-06-13T01:38:53.273Z\",\n \"status\": -53269458,\n \"error\": \"adipisicing esse veniam\",\n \"exception\": \"voluptate ut ex esse rep\",\n \"message\": \"consectetur eiusmod in\",\n \"total_time_taken_in_millis\": -27841084,\n \"http_status\": \"510 NOT_EXTENDED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ut\",\n \"page\": {\n  \"type\": \"velit veniam\",\n  \"size\": 79496367,\n  \"current\": -3583704,\n  \"has_next\": true,\n  \"item_total\": -19495071,\n  \"next_id\": \"ullamco\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3d6beed9-bb6f-4f5e-88dd-8b6984f687dd",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1998-06-13T01:38:53.273Z\",\n \"status\": -53269458,\n \"error\": \"adipisicing esse veniam\",\n \"exception\": \"voluptate ut ex esse rep\",\n \"message\": \"consectetur eiusmod in\",\n \"total_time_taken_in_millis\": -27841084,\n \"http_status\": \"510 NOT_EXTENDED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ut\",\n \"page\": {\n  \"type\": \"velit veniam\",\n  \"size\": 79496367,\n  \"current\": -3583704,\n  \"has_next\": true,\n  \"item_total\": -19495071,\n  \"next_id\": \"ullamco\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "db9b1cdf-c752-44d0-ba6b-b23d2b3960a3",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1998-06-13T01:38:53.273Z\",\n \"status\": -53269458,\n \"error\": \"adipisicing esse veniam\",\n \"exception\": \"voluptate ut ex esse rep\",\n \"message\": \"consectetur eiusmod in\",\n \"total_time_taken_in_millis\": -27841084,\n \"http_status\": \"510 NOT_EXTENDED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ut\",\n \"page\": {\n  \"type\": \"velit veniam\",\n  \"size\": 79496367,\n  \"current\": -3583704,\n  \"has_next\": true,\n  \"item_total\": -19495071,\n  \"next_id\": \"ullamco\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "80406d55-a884-4607-9acc-c862b9c7d255",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1998-06-13T01:38:53.273Z\",\n \"status\": -53269458,\n \"error\": \"adipisicing esse veniam\",\n \"exception\": \"voluptate ut ex esse rep\",\n \"message\": \"consectetur eiusmod in\",\n \"total_time_taken_in_millis\": -27841084,\n \"http_status\": \"510 NOT_EXTENDED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ut\",\n \"page\": {\n  \"type\": \"velit veniam\",\n  \"size\": 79496367,\n  \"current\": -3583704,\n  \"has_next\": true,\n  \"item_total\": -19495071,\n  \"next_id\": \"ullamco\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.jiomartpartners.com"
    }
  ],
  "info": {
    "_postman_id": "7feacc73-d73a-40a6-bad8-eca597abd0b8",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
