{
  "item": [
    {
      "id": "81180048-8835-4cd9-9fe9-01aa7fd60bd6",
      "name": "Billing",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "2777b0b5-6026-42f5-b7e4-46d6674c3027",
          "name": "getStandardPlans | Get Standard/Public Plans",
          "request": {
            "name": "getStandardPlans | Get Standard/Public Plans",
            "description": {
              "content": "Get Standard/Public Plans.\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "public",
                "billing",
                "v1.0",
                "plan",
                "detailed-list"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "platform",
                  "value": "<string>",
                  "description": "(Required) The type of platform for which plans are requested."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "7ac1945f-0a30-41c6-b049-784c10ebb0fa",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform",
                      "value": "mobile/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"plans\": [\n    {\n      \"recurring\": {\n        \"interval\": \"month\",\n        \"interval_count\": 3\n      },\n      \"is_trial_plan\": true,\n      \"plan_group\": \"default\",\n      \"tag_lines\": [\n        \"This is 2020won trial plan\",\n        \"This is 2020won trial plan\"\n      ],\n      \"currency\": \"INR\",\n      \"is_active\": true,\n      \"is_visible\": false,\n      \"trial_period\": 30,\n      \"addons\": [\n        \"velit\",\n        \"pariatur fugiat aliquip\"\n      ],\n      \"tags\": [\n        \"consectetur veniam ex\",\n        \"enim consectetur ad labore\"\n      ],\n      \"type\": \"public\",\n      \"country\": \"IN\",\n      \"_id\": \"5f0dcd866173cb003706098f\",\n      \"name\": \"30 day Trial\",\n      \"description\": \"30 day Trial\",\n      \"amount\": 0,\n      \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n      \"created_at\": \"2020-07-14T15:21:42.959Z\",\n      \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n    },\n    {\n      \"recurring\": {\n        \"interval\": \"month\",\n        \"interval_count\": 3\n      },\n      \"is_trial_plan\": true,\n      \"plan_group\": \"default\",\n      \"tag_lines\": [\n        \"This is 2020won trial plan\",\n        \"This is 2020won trial plan\"\n      ],\n      \"currency\": \"INR\",\n      \"is_active\": true,\n      \"is_visible\": false,\n      \"trial_period\": 30,\n      \"addons\": [\n        \"anim aliqua ea\",\n        \"nostrud dolore\"\n      ],\n      \"tags\": [\n        \"labore aliquip culpa enim in\",\n        \"laborum\"\n      ],\n      \"type\": \"public\",\n      \"country\": \"IN\",\n      \"_id\": \"5f0dcd866173cb003706098f\",\n      \"name\": \"30 day Trial\",\n      \"description\": \"30 day Trial\",\n      \"amount\": 0,\n      \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n      \"created_at\": \"2020-07-14T15:21:42.959Z\",\n      \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n    }\n  ],\n  \"trial_plan\": {\n    \"recurring\": {\n      \"interval\": \"month\",\n      \"interval_count\": 3\n    },\n    \"is_trial_plan\": true,\n    \"plan_group\": \"default\",\n    \"tag_lines\": [\n      \"This is 2020won trial plan\",\n      \"This is 2020won trial plan\"\n    ],\n    \"currency\": \"INR\",\n    \"is_active\": true,\n    \"is_visible\": false,\n    \"trial_period\": 30,\n    \"addons\": [\n      \"veniam\",\n      \"amet in\"\n    ],\n    \"tags\": [\n      \"mollit dolor do\",\n      \"ut\"\n    ],\n    \"type\": \"public\",\n    \"country\": \"IN\",\n    \"_id\": \"5f0dcd866173cb003706098f\",\n    \"name\": \"30 day Trial\",\n    \"description\": \"30 day Trial\",\n    \"amount\": 0,\n    \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n    \"created_at\": \"2020-07-14T15:21:42.959Z\",\n    \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n  },\n  \"component_groups\": [\n    \"Key Features\",\n    \"Key Features\"\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "cfa530c5-6a5d-443a-abcf-d49de53e8b8c",
              "name": "Resource not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform",
                      "value": "mobile/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Reason is required\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "0869152a-1c25-460c-99fe-71b51d4fe068",
              "name": "Internal server error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform",
                      "value": "mobile/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Opps something went wrong !!\",\n  \"code\": \"INTERNAL_SERVER_ERROR\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "0a0e1e54-eaec-4dec-b408-3318611fab13",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "bb4c52a5-9ae1-4dbd-8367-fe8d44e2e670",
          "name": "searchApplication | Search application",
          "request": {
            "name": "searchApplication | Search application",
            "description": {
              "content": "Provide application name or domain url.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "76259975-6e49-4a4e-bd08-c27c7034ecb1",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "ex voluptate irure",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"application\": {\n    \"website\": {\n      \"enabled\": true,\n      \"basepath\": \"/\"\n    },\n    \"cors\": {\n      \"domains\": []\n    },\n    \"auth\": {\n      \"enabled\": true\n    },\n    \"description\": \"test\",\n    \"channel_type\": \"store\",\n    \"cache_ttl\": -1,\n    \"internal\": false,\n    \"is_active\": true,\n    \"mode\": \"live\",\n    \"_id\": \"620b931ee7bfb11f910bf4a3\",\n    \"company_id\": 2,\n    \"name\": \"test\",\n    \"owner\": \"5b9b98150df588546aaea6d2\",\n    \"logo\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"favicon\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"banner\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n    },\n    \"token\": \"tPQv0nc23\",\n    \"tokens\": [\n      {\n        \"token\": \"tPQv0nc23\",\n        \"created_at\": \"2022-02-15T11:48:46.909Z\"\n      }\n    ],\n    \"domains\": [\n      {\n        \"verified\": true,\n        \"is_primary\": true,\n        \"is_shortlink\": true,\n        \"_id\": \"620b931ee7bfb11f910bf4a4\",\n        \"name\": \"qckvv5lhp.hostfynd.dev\"\n      }\n    ],\n    \"redirections\": [],\n    \"meta\": [],\n    \"created_at\": \"2022-02-15T11:48:46.909Z\",\n    \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n    \"__v\": 0,\n    \"domain\": {\n      \"verified\": true,\n      \"is_primary\": true,\n      \"is_shortlink\": true,\n      \"_id\": \"620b931ee7bfb11f910bf4a4\",\n      \"name\": \"qckvv5lhp.hostfynd.dev\"\n    },\n    \"id\": \"620b931ee7bfb11f910bf4a3\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "33f38f76-8365-4183-9443-2246d57ab3f5",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "ex voluptate irure",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"Invalid application domain or id.\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "bb011880-61db-492f-b1c0-e091170ce3a1",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "ex voluptate irure",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"No application found\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "305586e0-6213-4667-a259-f53943b99a7f",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {
              "content": "Get Location configuration",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "fd003a32-1d36-49be-a00b-38daa8911514",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"items\": [\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"et i\",\n      \"phone_code\": \"990999092\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"culpa Lorem\",\n      \"country_code\": \"ut\",\n      \"latitude\": \"mollit\",\n      \"longitude\": \"magna dolore in\"\n    },\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"id tempor ipsum\",\n      \"phone_code\": \"990999092\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"con\",\n      \"country_code\": \"veniam aute sint labore ut\",\n      \"latitude\": \"exercitation tempor quis\",\n      \"longitude\": \"consectetur\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "a9fb61ab-f15a-49d2-8955-ba46dd7b81d7",
      "name": "Content",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "4e73e7a6-9f8a-41e1-8503-95de632b9f67",
          "name": "getCredentialsByEntity | Get credentials to power chat support systems",
          "request": {
            "name": "getCredentialsByEntity | Get credentials to power chat support systems",
            "description": {
              "content": "Get credentials for support system",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "public",
                "content",
                "credentials",
                ":entity"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "entity",
                  "description": "(Required) Server Type"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "212a3c23-c0f3-4b80-b654-e0ae4e1efe53",
              "name": "Success. Refer `CredentialsSchema` for more details.",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "content",
                    "credentials",
                    ":entity"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "entity",
                      "description": "(Required) Server Type"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"entity_type\": \"partner\",\n  \"type\": \"freshchat\",\n  \"is_enable\": true,\n  \"configuration\": {\n    \"token\": \"a3e4gf20b-d11g-4512-n3zq-03b9aa7e1yxz\",\n    \"siteId\": \"a3e8f20b-d97f-452f-bd72-03b9aa7e1bf0\",\n    \"host\": \"https://wchat.freshchat.com\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e126be8b-0ff5-41a7-90c9-c9abd15e0f4e",
              "name": "Bad Request. See the error object in the response body to know the exact reason.",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "content",
                    "credentials",
                    ":entity"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "entity",
                      "description": "(Required) Server Type"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Oops! Something went wrong. Please try later\",\n  \"status\": 400,\n  \"code\": \"CX-1003\",\n  \"exception\": \"\",\n  \"info\": \"\",\n  \"request_id\": \"\",\n  \"stack_trace\": \"\",\n  \"meta\": {}\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "1d014393-b92b-45c9-be62-4a112eb8f7f9",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "e8c9c477-fc66-47aa-9805-ea6d11424172",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "7c4f1a66-1cd0-403f-a300-cb64f3f7eca4",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1988-05-27T08:56:18.768Z\",\n  \"status\": -4540981,\n  \"error\": \"eu reprehenderit ut cillum elit\",\n  \"exception\": \"consequat\",\n  \"message\": \"fugiat velit laboris\",\n  \"total_time_taken_in_millis\": -90886133,\n  \"http_status\": \"409 CONFLICT\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"sed fugiat\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "7c2a7b44-53d1-4e65-aaba-bef360148183",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1988-05-27T08:56:18.768Z\",\n  \"status\": -4540981,\n  \"error\": \"eu reprehenderit ut cillum elit\",\n  \"exception\": \"consequat\",\n  \"message\": \"fugiat velit laboris\",\n  \"total_time_taken_in_millis\": -90886133,\n  \"http_status\": \"409 CONFLICT\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"sed fugiat\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1c119392-b656-4f10-aa20-5f595b387cd8",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1988-05-27T08:56:18.768Z\",\n  \"status\": -4540981,\n  \"error\": \"eu reprehenderit ut cillum elit\",\n  \"exception\": \"consequat\",\n  \"message\": \"fugiat velit laboris\",\n  \"total_time_taken_in_millis\": -90886133,\n  \"http_status\": \"409 CONFLICT\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"sed fugiat\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "c1dd2dc6-dd10-4c30-9fb8-732be128a6ca",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "a617c0bf-a0b6-4601-b180-675f8f34773b",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1990-01-29T20:02:02.170Z\",\n  \"status\": -58321379,\n  \"error\": \"laboris in magna sunt\",\n  \"exception\": \"irure\",\n  \"message\": \"dolor adipisicing consectetur\",\n  \"total_time_taken_in_millis\": -46647801,\n  \"http_status\": \"200 OK\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"Excepteur dolor irure veniam\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "77755001-05a9-4d88-bdfb-3d2622907fe0",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1990-01-29T20:02:02.170Z\",\n  \"status\": -58321379,\n  \"error\": \"laboris in magna sunt\",\n  \"exception\": \"irure\",\n  \"message\": \"dolor adipisicing consectetur\",\n  \"total_time_taken_in_millis\": -46647801,\n  \"http_status\": \"200 OK\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"Excepteur dolor irure veniam\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e2e3e45f-4b72-40c4-af31-0649cced2e97",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1990-01-29T20:02:02.170Z\",\n  \"status\": -58321379,\n  \"error\": \"laboris in magna sunt\",\n  \"exception\": \"irure\",\n  \"message\": \"dolor adipisicing consectetur\",\n  \"total_time_taken_in_millis\": -46647801,\n  \"http_status\": \"200 OK\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"Excepteur dolor irure veniam\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "569d0567-b9b9-47c2-8e50-6246502f5a80",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1990-01-29T20:02:02.170Z\",\n  \"status\": -58321379,\n  \"error\": \"laboris in magna sunt\",\n  \"exception\": \"irure\",\n  \"message\": \"dolor adipisicing consectetur\",\n  \"total_time_taken_in_millis\": -46647801,\n  \"http_status\": \"200 OK\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"Excepteur dolor irure veniam\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ca6c8cce-30c8-4e3a-8fff-e43307f8e236",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1990-01-29T20:02:02.170Z\",\n  \"status\": -58321379,\n  \"error\": \"laboris in magna sunt\",\n  \"exception\": \"irure\",\n  \"message\": \"dolor adipisicing consectetur\",\n  \"total_time_taken_in_millis\": -46647801,\n  \"http_status\": \"200 OK\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"Excepteur dolor irure veniam\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "7d90c285-2e1c-4cdc-af88-519a586bbd75",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "89e822b4-b792-4e08-a9c6-935c0a84b529",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1964-02-20T21:56:30.627Z\",\n  \"status\": -24533945,\n  \"error\": \"qui voluptate quis aliqua eu\",\n  \"exception\": \"eu et\",\n  \"message\": \"Lorem\",\n  \"total_time_taken_in_millis\": -77841886,\n  \"http_status\": \"307 TEMPORARY_REDIRECT\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"sunt labore\",\n      \"description\": \"laborum eu sunt dolor\",\n      \"name\": \"adipisicing aliquip voluptate ut deserunt\",\n      \"slug\": \"velit consectetur\",\n      \"meta\": [\n        {\n          \"_id\": \"id sint Excepteur quis\",\n          \"name\": \"est id\",\n          \"value\": \"voluptate\"\n        },\n        {\n          \"_id\": \"adipisicing fugiat id\",\n          \"name\": \"deser\",\n          \"value\": \"magna pariatur\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"sit in\",\n        \"integration\": \"nostrud aliqua nisi\",\n        \"level\": \"dolore reprehenderit sit\",\n        \"uid\": -30156744,\n        \"opted\": false,\n        \"permissions\": [\n          \"dolor ad velit\",\n          \"Lorem consequat\"\n        ],\n        \"token\": \"laborum enim ex voluptate\",\n        \"name\": \"id\",\n        \"stores\": [\n          {\n            \"_id\": \"nulla\",\n            \"integration\": \"nostrud velit aliqua dolore\",\n            \"level\": \"sint\",\n            \"uid\": -33331949,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"velit dolore in consectetur\",\n            \"code\": \"commodo ea pariatur\",\n            \"name\": \"labore cillum\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"eiusmod reprehenderit in in occaecat\",\n            \"integration\": \"dolor ex\",\n            \"level\": \"officia in minim commodo\",\n            \"uid\": 30274267,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ea quis magna commodo\",\n            \"code\": \"anim aliqua commodo\",\n            \"name\": \"qui dolore\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"quis cillum\",\n        \"integration\": \"est\",\n        \"level\": \"dolor anim mollit minim\",\n        \"uid\": 91735852,\n        \"opted\": true,\n        \"permissions\": [\n          \"magna ad Excepteur aute\",\n          \"in ut\"\n        ],\n        \"token\": \"sint dolor ut ea\",\n        \"name\": \"velit eiusmod elit\",\n        \"stores\": [\n          {\n            \"_id\": \"dolor consectetur\",\n            \"integration\": \"proident ex ad dolor mollit\",\n            \"level\": \"officia eiusmod aute exercitation Duis\",\n            \"uid\": -16963540,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"sint elit\",\n            \"code\": \"ipsum in Ut nulla incididunt\",\n            \"name\": \"ipsum et voluptate\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"ad\",\n            \"integration\": \"quis adipisicing ad culpa\",\n            \"level\": \"deseru\",\n            \"uid\": 8099896,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"eiusmod in exercitation\",\n            \"code\": \"commodo exercitation deserunt\",\n            \"name\": \"officia dolor ad\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"cupidatat consequat\",\n      \"description\": \"sun\",\n      \"name\": \"Ut non deserunt minim\",\n      \"slug\": \"tempor ullamco pariatur exercitation Duis\",\n      \"meta\": [\n        {\n          \"_id\": \"anim ut ut\",\n          \"name\": \"Excepteur cupidatat\",\n          \"value\": \"culpa exercitation Duis\"\n        },\n        {\n          \"_id\": \"ipsum nulla consectetur\",\n          \"name\": \"mollit minim labore veniam\",\n          \"value\": \"dolore eiusmod est\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"tempor dolor sit elit\",\n        \"integration\": \"tempor ut et esse\",\n        \"level\": \"in adipisicing sit\",\n        \"uid\": 2744824,\n        \"opted\": true,\n        \"permissions\": [\n          \"sint in velit laboris eiusmod\",\n          \"in cupidatat\"\n        ],\n        \"token\": \"elit fugiat officia deserunt\",\n        \"name\": \"Ut consectetur Lorem pariatur\",\n        \"stores\": [\n          {\n            \"_id\": \"quis labore dolore deserunt dolore\",\n            \"integration\": \"velit reprehenderit\",\n            \"level\": \"minim\",\n            \"uid\": -43399908,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"do laboris\",\n            \"code\": \"nisi deserunt sunt irure\",\n            \"name\": \"cillum enim\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"ea magna\",\n            \"integration\": \"sit\",\n            \"level\": \"deserunt consequat laborum aute\",\n            \"uid\": 51973373,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"magna qui veniam laborum laboris\",\n            \"code\": \"Duis eiusmod sunt\",\n            \"name\": \"ad qui adipisicing\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"sint nulla\",\n        \"integration\": \"incididunt labore id\",\n        \"level\": \"in proident enim dolore\",\n        \"uid\": 38825938,\n        \"opted\": false,\n        \"permissions\": [\n          \"voluptate aute cupidatat qui\",\n          \"tempor aliqua sit\"\n        ],\n        \"token\": \"aute in deserunt\",\n        \"name\": \"proident consequat magna nostr\",\n        \"stores\": [\n          {\n            \"_id\": \"sit sunt cupidatat\",\n            \"integration\": \"in deserunt magna enim\",\n            \"level\": \"reprehenderit\",\n            \"uid\": -32718236,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"incididunt fugiat\",\n            \"code\": \"non proident dolore amet\",\n            \"name\": \"velit deserunt\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"et eiusmod incididunt cupidatat\",\n            \"integration\": \"exercitation\",\n            \"level\": \"ullamco culpa dolore\",\n            \"uid\": -90483921,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"sit nostrud\",\n            \"code\": \"dolo\",\n            \"name\": \"in offici\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"eu ipsum\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ec65a71e-aee2-48c2-b0f1-d9b43fa259b1",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2019-03-08T05:53:50.449Z\",\n  \"status\": 27365886,\n  \"error\": \"voluptate nisi Ut\",\n  \"exception\": \"voluptate cillum id Excepteur ea\",\n  \"message\": \"fugiat veniam\",\n  \"total_time_taken_in_millis\": -33354073,\n  \"http_status\": \"302 MOVED_TEMPORARILY\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"quis\",\n      \"description\": \"in\",\n      \"name\": \"magna aliqua elit ut\",\n      \"slug\": \"culpa in eu reprehenderit ea\",\n      \"meta\": [\n        {\n          \"_id\": \"ut sit in occaecat nisi\",\n          \"name\": \"in proident\",\n          \"value\": \"cillum veniam ex reprehenderit Duis\"\n        },\n        {\n          \"_id\": \"et elit veniam dolor\",\n          \"name\": \"culpa velit esse eu\",\n          \"value\": \"in q\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"consectetur ea fugiat\",\n        \"integration\": \"est dolor nisi\",\n        \"level\": \"minim te\",\n        \"uid\": 30467663,\n        \"opted\": false,\n        \"permissions\": [\n          \"aliquip id enim consectetur\",\n          \"non dolor\"\n        ],\n        \"token\": \"aute Duis\",\n        \"name\": \"ut enim laborum do sunt\",\n        \"stores\": [\n          {\n            \"_id\": \"deserunt ut consectetur sit\",\n            \"integration\": \"officia cupidatat\",\n            \"level\": \"amet eiusmod est dolor\",\n            \"uid\": -74840536,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ea Ut ut\",\n            \"code\": \"irure nisi enim Ut\",\n            \"name\": \"aute in id\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"officia veniam\",\n            \"integration\": \"consectetur of\",\n            \"level\": \"consequat dolore\",\n            \"uid\": -57226084,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ea \",\n            \"code\": \"amet non ipsum incididunt\",\n            \"name\": \"sunt officia\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"dolore\",\n        \"integration\": \"voluptate non elit tempor\",\n        \"level\": \"et mollit dolor dolor\",\n        \"uid\": 41343657,\n        \"opted\": false,\n        \"permissions\": [\n          \"anim ea\",\n          \"in ad ut fugiat laboris\"\n        ],\n        \"token\": \"dolor in est ut ex\",\n        \"name\": \"sint irure nulla sed quis\",\n        \"stores\": [\n          {\n            \"_id\": \"nulla\",\n            \"integration\": \"dolor sed veniam\",\n            \"level\": \"non in Ut culpa\",\n            \"uid\": 41235697,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"incididunt qui dolore in ipsum\",\n            \"code\": \"sint occaecat nulla nostrud\",\n            \"name\": \"dolore aliqua officia\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"sint\",\n            \"integration\": \"qui Duis\",\n            \"level\": \"do\",\n            \"uid\": -47774352,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"esse minim\",\n            \"code\": \"eu do fugiat\",\n            \"name\": \"enim amet\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"ullamco qui in\",\n      \"description\": \"adipisicing exercitation\",\n      \"name\": \"labore\",\n      \"slug\": \"enim officia\",\n      \"meta\": [\n        {\n          \"_id\": \"ullamco esse pariatur\",\n          \"name\": \"ea cons\",\n          \"value\": \"qui in voluptate dolore incididunt\"\n        },\n        {\n          \"_id\": \"sint id\",\n          \"name\": \"occaecat dolor sed\",\n          \"value\": \"do fugiat amet dolore\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"ipsum\",\n        \"integration\": \"adipisicing aliqua fugiat\",\n        \"level\": \"eiusmod\",\n        \"uid\": 65870497,\n        \"opted\": true,\n        \"permissions\": [\n          \"tempor exercitation\",\n          \"irure minim aute in ut\"\n        ],\n        \"token\": \"irure dolore aliqua\",\n        \"name\": \"id voluptate laborum sint\",\n        \"stores\": [\n          {\n            \"_id\": \"ipsum deserunt consequat\",\n            \"integration\": \"dolore id in anim velit\",\n            \"level\": \"ex consectetur\",\n            \"uid\": -92774798,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"sed anim\",\n            \"code\": \"reprehenderit id nostrud\",\n            \"name\": \"id mol\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"sint laboris quis Ut\",\n            \"integration\": \"proident dolore sit\",\n            \"level\": \"laborum\",\n            \"uid\": -70774530,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"anim dolor culpa\",\n            \"code\": \"amet et\",\n            \"name\": \"incididunt fugiat in et\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"incididunt minim in\",\n        \"integration\": \"in id eiusmod\",\n        \"level\": \"velit in ex tempor\",\n        \"uid\": 38324798,\n        \"opted\": false,\n        \"permissions\": [\n          \"ut amet incididunt labore\",\n          \"elit laborum officia aut\"\n        ],\n        \"token\": \"consectetur elit minim proident\",\n        \"name\": \"deserunt exercitation\",\n        \"stores\": [\n          {\n            \"_id\": \"dolor in sit\",\n            \"integration\": \"in aliquip nisi officia\",\n            \"level\": \"in Lorem consectetur\",\n            \"uid\": 25113925,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"magna consectetur\",\n            \"code\": \"consequat cillum\",\n            \"name\": \"ea dolore enim velit\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"ex do\",\n            \"integration\": \"labore nostrud deserunt commodo nulla\",\n            \"level\": \"Excepteur nisi in qui\",\n            \"uid\": -42606592,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"laborum c\",\n            \"code\": \"est Ut\",\n            \"name\": \"ad Lorem magna sit\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"ipsum dolor cupidatat Excepteur\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "cec14642-efab-4275-9bfd-c41e27e45b36",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2019-03-08T05:53:50.449Z\",\n  \"status\": 27365886,\n  \"error\": \"voluptate nisi Ut\",\n  \"exception\": \"voluptate cillum id Excepteur ea\",\n  \"message\": \"fugiat veniam\",\n  \"total_time_taken_in_millis\": -33354073,\n  \"http_status\": \"302 MOVED_TEMPORARILY\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"quis\",\n      \"description\": \"in\",\n      \"name\": \"magna aliqua elit ut\",\n      \"slug\": \"culpa in eu reprehenderit ea\",\n      \"meta\": [\n        {\n          \"_id\": \"ut sit in occaecat nisi\",\n          \"name\": \"in proident\",\n          \"value\": \"cillum veniam ex reprehenderit Duis\"\n        },\n        {\n          \"_id\": \"et elit veniam dolor\",\n          \"name\": \"culpa velit esse eu\",\n          \"value\": \"in q\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"consectetur ea fugiat\",\n        \"integration\": \"est dolor nisi\",\n        \"level\": \"minim te\",\n        \"uid\": 30467663,\n        \"opted\": false,\n        \"permissions\": [\n          \"aliquip id enim consectetur\",\n          \"non dolor\"\n        ],\n        \"token\": \"aute Duis\",\n        \"name\": \"ut enim laborum do sunt\",\n        \"stores\": [\n          {\n            \"_id\": \"deserunt ut consectetur sit\",\n            \"integration\": \"officia cupidatat\",\n            \"level\": \"amet eiusmod est dolor\",\n            \"uid\": -74840536,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ea Ut ut\",\n            \"code\": \"irure nisi enim Ut\",\n            \"name\": \"aute in id\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"officia veniam\",\n            \"integration\": \"consectetur of\",\n            \"level\": \"consequat dolore\",\n            \"uid\": -57226084,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ea \",\n            \"code\": \"amet non ipsum incididunt\",\n            \"name\": \"sunt officia\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"dolore\",\n        \"integration\": \"voluptate non elit tempor\",\n        \"level\": \"et mollit dolor dolor\",\n        \"uid\": 41343657,\n        \"opted\": false,\n        \"permissions\": [\n          \"anim ea\",\n          \"in ad ut fugiat laboris\"\n        ],\n        \"token\": \"dolor in est ut ex\",\n        \"name\": \"sint irure nulla sed quis\",\n        \"stores\": [\n          {\n            \"_id\": \"nulla\",\n            \"integration\": \"dolor sed veniam\",\n            \"level\": \"non in Ut culpa\",\n            \"uid\": 41235697,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"incididunt qui dolore in ipsum\",\n            \"code\": \"sint occaecat nulla nostrud\",\n            \"name\": \"dolore aliqua officia\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"sint\",\n            \"integration\": \"qui Duis\",\n            \"level\": \"do\",\n            \"uid\": -47774352,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"esse minim\",\n            \"code\": \"eu do fugiat\",\n            \"name\": \"enim amet\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"ullamco qui in\",\n      \"description\": \"adipisicing exercitation\",\n      \"name\": \"labore\",\n      \"slug\": \"enim officia\",\n      \"meta\": [\n        {\n          \"_id\": \"ullamco esse pariatur\",\n          \"name\": \"ea cons\",\n          \"value\": \"qui in voluptate dolore incididunt\"\n        },\n        {\n          \"_id\": \"sint id\",\n          \"name\": \"occaecat dolor sed\",\n          \"value\": \"do fugiat amet dolore\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"ipsum\",\n        \"integration\": \"adipisicing aliqua fugiat\",\n        \"level\": \"eiusmod\",\n        \"uid\": 65870497,\n        \"opted\": true,\n        \"permissions\": [\n          \"tempor exercitation\",\n          \"irure minim aute in ut\"\n        ],\n        \"token\": \"irure dolore aliqua\",\n        \"name\": \"id voluptate laborum sint\",\n        \"stores\": [\n          {\n            \"_id\": \"ipsum deserunt consequat\",\n            \"integration\": \"dolore id in anim velit\",\n            \"level\": \"ex consectetur\",\n            \"uid\": -92774798,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"sed anim\",\n            \"code\": \"reprehenderit id nostrud\",\n            \"name\": \"id mol\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"sint laboris quis Ut\",\n            \"integration\": \"proident dolore sit\",\n            \"level\": \"laborum\",\n            \"uid\": -70774530,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"anim dolor culpa\",\n            \"code\": \"amet et\",\n            \"name\": \"incididunt fugiat in et\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"incididunt minim in\",\n        \"integration\": \"in id eiusmod\",\n        \"level\": \"velit in ex tempor\",\n        \"uid\": 38324798,\n        \"opted\": false,\n        \"permissions\": [\n          \"ut amet incididunt labore\",\n          \"elit laborum officia aut\"\n        ],\n        \"token\": \"consectetur elit minim proident\",\n        \"name\": \"deserunt exercitation\",\n        \"stores\": [\n          {\n            \"_id\": \"dolor in sit\",\n            \"integration\": \"in aliquip nisi officia\",\n            \"level\": \"in Lorem consectetur\",\n            \"uid\": 25113925,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"magna consectetur\",\n            \"code\": \"consequat cillum\",\n            \"name\": \"ea dolore enim velit\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"ex do\",\n            \"integration\": \"labore nostrud deserunt commodo nulla\",\n            \"level\": \"Excepteur nisi in qui\",\n            \"uid\": -42606592,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"laborum c\",\n            \"code\": \"est Ut\",\n            \"name\": \"ad Lorem magna sit\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"ipsum dolor cupidatat Excepteur\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "464a7dc0-e40e-40be-a254-217802f8b0c9",
          "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
          "request": {
            "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "de8e6442-7960-49fd-b5f6-24f8b79ac9fd",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1985-12-07T12:20:03.056Z\",\n  \"status\": -63412491,\n  \"error\": \"occaecat quis\",\n  \"exception\": \"commodo non irure sint est\",\n  \"message\": \"anim\",\n  \"total_time_taken_in_millis\": -10776539,\n  \"http_status\": \"417 EXPECTATION_FAILED\",\n  \"items\": {\n    \"session_id\": \"commodo tempor sunt et\",\n    \"error_message\": \"eu in aliquip\"\n  },\n  \"payload\": {\n    \"session_id\": \"magna\",\n    \"error_message\": \"quis anim ut et\"\n  },\n  \"trace_id\": \"ad ipsum qui\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d0faa9ee-f529-4c0a-a878-e25a721d267c",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1985-12-07T12:20:03.056Z\",\n  \"status\": -63412491,\n  \"error\": \"occaecat quis\",\n  \"exception\": \"commodo non irure sint est\",\n  \"message\": \"anim\",\n  \"total_time_taken_in_millis\": -10776539,\n  \"http_status\": \"417 EXPECTATION_FAILED\",\n  \"items\": {\n    \"session_id\": \"commodo tempor sunt et\",\n    \"error_message\": \"eu in aliquip\"\n  },\n  \"payload\": {\n    \"session_id\": \"magna\",\n    \"error_message\": \"quis anim ut et\"\n  },\n  \"trace_id\": \"ad ipsum qui\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9a7d1fe3-af49-46f0-9288-2e441a13157f",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1985-12-07T12:20:03.056Z\",\n  \"status\": -63412491,\n  \"error\": \"occaecat quis\",\n  \"exception\": \"commodo non irure sint est\",\n  \"message\": \"anim\",\n  \"total_time_taken_in_millis\": -10776539,\n  \"http_status\": \"417 EXPECTATION_FAILED\",\n  \"items\": {\n    \"session_id\": \"commodo tempor sunt et\",\n    \"error_message\": \"eu in aliquip\"\n  },\n  \"payload\": {\n    \"session_id\": \"magna\",\n    \"error_message\": \"quis anim ut et\"\n  },\n  \"trace_id\": \"ad ipsum qui\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "9caf5482-afa5-439f-8da5-1edf739beed9",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "b71959a1-496d-414b-95bc-2528ee6603ef",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1989-07-16T08:03:58.724Z\",\n  \"status\": -96843410,\n  \"error\": \"irure tempor sed\",\n  \"exception\": \"non dolore quis eu\",\n  \"message\": \"consectetur qui culpa Duis\",\n  \"total_time_taken_in_millis\": 81732247,\n  \"http_status\": \"208 ALREADY_REPORTED\",\n  \"items\": {\n    \"company_id\": 25226616,\n    \"integration_data\": {\n      \"aute_8_\": {},\n      \"eu_a\": {},\n      \"cillum70\": {},\n      \"reprehenderit82\": {}\n    },\n    \"company_name\": \"aliqua consectetur\",\n    \"task_details\": {\n      \"type\": 44463389,\n      \"group_list\": [\n        {\n          \"text\": \"cillum sit nulla fugiat Lorem\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"incididunt non ad\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -15008450.675871462,\n      \"safe_stock\": -37587296,\n      \"period_threshold\": 88149597,\n      \"period_threshold_type\": \"MONTHS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"eu cillum incididunt nulla aute\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"do ipsum non adipisicing\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"reprehenderit tempor\",\n    \"alias\": \"adipisici\"\n  },\n  \"payload\": {\n    \"company_id\": -5703177,\n    \"integration_data\": {\n      \"pariatur_3\": {},\n      \"consectetur_b3e\": {}\n    },\n    \"company_name\": \"minim Duis ut est exercitation\",\n    \"task_details\": {\n      \"type\": -49647737,\n      \"group_list\": [\n        {\n          \"text\": \"qui sint in Duis\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"tempor cupidatat labore\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 77741236.50970647,\n      \"safe_stock\": -24686395,\n      \"period_threshold\": 91590838,\n      \"period_threshold_type\": \"DAYS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"nisi ex dolor eu\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"id ea esse\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"ad do ut\",\n    \"alias\": \"est in ipsum amet\"\n  },\n  \"trace_id\": \"nulla id magna ullamco\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d2459491-f8e6-45d3-855d-504ebb8ad665",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2002-05-01T13:11:41.619Z\",\n  \"status\": -69312879,\n  \"error\": \"ex sed nulla sunt\",\n  \"exception\": \"cill\",\n  \"message\": \"incididunt proident ipsum elit enim\",\n  \"total_time_taken_in_millis\": -32789621,\n  \"http_status\": \"208 ALREADY_REPORTED\",\n  \"items\": {\n    \"company_id\": -243134,\n    \"integration_data\": {\n      \"aliqua38\": {}\n    },\n    \"company_name\": \"occaecat mini\",\n    \"task_details\": {\n      \"type\": 67674568,\n      \"group_list\": [\n        {\n          \"text\": \"ut velit id est\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"laborum\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 52168268.15991214,\n      \"safe_stock\": -85342144,\n      \"period_threshold\": -46581966,\n      \"period_threshold_type\": \"HOURS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"est proident dolor nisi\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"est\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"in magna laboris Duis\",\n    \"alias\": \"magna irure dolore temp\"\n  },\n  \"payload\": {\n    \"company_id\": 27236272,\n    \"integration_data\": {\n      \"velitc9\": {},\n      \"enim1\": {},\n      \"qui9\": {},\n      \"aliqua_e0f\": {}\n    },\n    \"company_name\": \"do tempor aute\",\n    \"task_details\": {\n      \"type\": -46804182,\n      \"group_list\": [\n        {\n          \"text\": \"in in\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"enim culpa\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 22394836.6512281,\n      \"safe_stock\": -88616716,\n      \"period_threshold\": 18134590,\n      \"period_threshold_type\": \"MONTHS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"adipisic\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"deserunt do\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"amet proident\",\n    \"alias\": \"proiden\"\n  },\n  \"trace_id\": \"in Ut\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "67c70c8d-b84e-4ade-a297-3f02cec31d8b",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2002-05-01T13:11:41.619Z\",\n  \"status\": -69312879,\n  \"error\": \"ex sed nulla sunt\",\n  \"exception\": \"cill\",\n  \"message\": \"incididunt proident ipsum elit enim\",\n  \"total_time_taken_in_millis\": -32789621,\n  \"http_status\": \"208 ALREADY_REPORTED\",\n  \"items\": {\n    \"company_id\": -243134,\n    \"integration_data\": {\n      \"aliqua38\": {}\n    },\n    \"company_name\": \"occaecat mini\",\n    \"task_details\": {\n      \"type\": 67674568,\n      \"group_list\": [\n        {\n          \"text\": \"ut velit id est\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"laborum\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 52168268.15991214,\n      \"safe_stock\": -85342144,\n      \"period_threshold\": -46581966,\n      \"period_threshold_type\": \"HOURS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"est proident dolor nisi\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"est\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"in magna laboris Duis\",\n    \"alias\": \"magna irure dolore temp\"\n  },\n  \"payload\": {\n    \"company_id\": 27236272,\n    \"integration_data\": {\n      \"velitc9\": {},\n      \"enim1\": {},\n      \"qui9\": {},\n      \"aliqua_e0f\": {}\n    },\n    \"company_name\": \"do tempor aute\",\n    \"task_details\": {\n      \"type\": -46804182,\n      \"group_list\": [\n        {\n          \"text\": \"in in\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"enim culpa\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 22394836.6512281,\n      \"safe_stock\": -88616716,\n      \"period_threshold\": 18134590,\n      \"period_threshold_type\": \"MONTHS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"adipisic\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"deserunt do\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"amet proident\",\n    \"alias\": \"proiden\"\n  },\n  \"trace_id\": \"in Ut\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "75c4a7bb-e091-47c1-a3bf-d192a34bdcb2",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "ce59f2b8-eed2-449d-81f1-69da9746f7e5",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1979-04-30T11:36:41.050Z\",\n  \"status\": -1313647,\n  \"error\": \"aliqua dolore\",\n  \"exception\": \"reprehenderit ullamco in dolore\",\n  \"message\": \"Ut dolore\",\n  \"total_time_taken_in_millis\": -10925381,\n  \"http_status\": \"204 NO_CONTENT\",\n  \"items\": [\n    {\n      \"company_id\": 85941144,\n      \"integration_data\": {\n        \"sunt_ea\": {},\n        \"adipisicing_f\": {},\n        \"veniamc\": {}\n      },\n      \"company_name\": \"in Lorem\",\n      \"task_details\": {\n        \"type\": -64951595,\n        \"group_list\": [\n          {\n            \"text\": \"do\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"dolore amet commodo ut\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 82898389.1075823,\n        \"safe_stock\": -93767819,\n        \"period_threshold\": 19780833,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"incididunt dolor laboris sit in\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"occaecat et\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"dolore non\",\n      \"alias\": \"nisi sunt\"\n    },\n    {\n      \"company_id\": -56263548,\n      \"integration_data\": {\n        \"minim4a6\": {}\n      },\n      \"company_name\": \"ut ullamco ea laborum elit\",\n      \"task_details\": {\n        \"type\": 54758062,\n        \"group_list\": [\n          {\n            \"text\": \"sed Excepteur eu\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"tempor do\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -99561530.85137998,\n        \"safe_stock\": 30279587,\n        \"period_threshold\": -80858476,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"cupidatat Excepteur commodo\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"aliquip pariatur qui do\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"laborum sit anim culpa\",\n      \"alias\": \"sint adipisicing laborum\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": -67841069,\n      \"integration_data\": {\n        \"consectetura36\": {},\n        \"minima2\": {},\n        \"fugiat_d5f\": {},\n        \"Excepteur_8bc\": {}\n      },\n      \"company_name\": \"et velit aute\",\n      \"task_details\": {\n        \"type\": -4296393,\n        \"group_list\": [\n          {\n            \"text\": \"eiusmod anim adipisicing consequat\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"nulla est cillum elit\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -35745086.64862659,\n        \"safe_stock\": -10989241,\n        \"period_threshold\": -54060390,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"quis exercitation veniam\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"commodo\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"quis et\",\n      \"alias\": \"nulla commodo enim proident\"\n    },\n    {\n      \"company_id\": 26266572,\n      \"integration_data\": {\n        \"sint____\": {}\n      },\n      \"company_name\": \"elit Ut\",\n      \"task_details\": {\n        \"type\": -20805488,\n        \"group_list\": [\n          {\n            \"text\": \"deserunt \",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ex ut sed anim\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 65318503.18671918,\n        \"safe_stock\": -64448123,\n        \"period_threshold\": 86774423,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"elit Duis incididunt ut\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"anim reprehenderit do Excepteur nisi\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"sed commodo\",\n      \"alias\": \"id aliquip\"\n    }\n  ],\n  \"trace_id\": \"in\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f8e41a6a-9f18-41e5-b149-0a32c84d76f2",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2006-01-14T11:37:04.582Z\",\n  \"status\": 83350204,\n  \"error\": \"enim occaecat tempor\",\n  \"exception\": \"in\",\n  \"message\": \"aliquip laborum sit\",\n  \"total_time_taken_in_millis\": -45949548,\n  \"http_status\": \"502 BAD_GATEWAY\",\n  \"items\": [\n    {\n      \"company_id\": -72747691,\n      \"integration_data\": {\n        \"ametd\": {}\n      },\n      \"company_name\": \"nostrud\",\n      \"task_details\": {\n        \"type\": -93899767,\n        \"group_list\": [\n          {\n            \"text\": \"laborum veniam\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"quis qui enim\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 1887141.4845555574,\n        \"safe_stock\": 20895864,\n        \"period_threshold\": -12108717,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"ad veniam\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ullamco et adipisicing\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"ex eiusmod officia mollit\",\n      \"alias\": \"laborum commodo deserunt mollit\"\n    },\n    {\n      \"company_id\": 87314530,\n      \"integration_data\": {\n        \"utb\": {},\n        \"magna8\": {},\n        \"enim2e\": {}\n      },\n      \"company_name\": \"magna eu reprehenderit id consectetur\",\n      \"task_details\": {\n        \"type\": -51474852,\n        \"group_list\": [\n          {\n            \"text\": \"in velit dolor fugiat\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"nostrud veniam ea\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 681448.8390371501,\n        \"safe_stock\": -26940823,\n        \"period_threshold\": -93632806,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"mollit adipisicing consectetur id\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"eu labore Excepteur ex voluptate\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"nostrud est consectetur\",\n      \"alias\": \"mollit nulla minim\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": -13689450,\n      \"integration_data\": {\n        \"ea526\": {}\n      },\n      \"company_name\": \"cillum laborum dolor\",\n      \"task_details\": {\n        \"type\": -1363253,\n        \"group_list\": [\n          {\n            \"text\": \"et Ut occaecat quis adipisicing\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ullamco\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 72291016.5909552,\n        \"safe_stock\": 44061092,\n        \"period_threshold\": 59075062,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"voluptate pariatur labore\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ut incididunt ut sint sunt\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"exercitation ea sit\",\n      \"alias\": \"officia\"\n    },\n    {\n      \"company_id\": 1143593,\n      \"integration_data\": {\n        \"Duisd\": {}\n      },\n      \"company_name\": \"non sint enim\",\n      \"task_details\": {\n        \"type\": 68725038,\n        \"group_list\": [\n          {\n            \"text\": \"quis\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"quis incididunt adipisi\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -88228021.62920932,\n        \"safe_stock\": 32948162,\n        \"period_threshold\": 53612063,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"qui mollit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ad est sit Duis anim\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"elit voluptate ipsum\",\n      \"alias\": \"tempor qui officia ex\"\n    }\n  ],\n  \"trace_id\": \"ullamco officia est sit aute\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "8ef5f78d-b4f3-491a-bee1-05da366506e2",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2006-01-14T11:37:04.582Z\",\n  \"status\": 83350204,\n  \"error\": \"enim occaecat tempor\",\n  \"exception\": \"in\",\n  \"message\": \"aliquip laborum sit\",\n  \"total_time_taken_in_millis\": -45949548,\n  \"http_status\": \"502 BAD_GATEWAY\",\n  \"items\": [\n    {\n      \"company_id\": -72747691,\n      \"integration_data\": {\n        \"ametd\": {}\n      },\n      \"company_name\": \"nostrud\",\n      \"task_details\": {\n        \"type\": -93899767,\n        \"group_list\": [\n          {\n            \"text\": \"laborum veniam\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"quis qui enim\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 1887141.4845555574,\n        \"safe_stock\": 20895864,\n        \"period_threshold\": -12108717,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"ad veniam\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ullamco et adipisicing\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"ex eiusmod officia mollit\",\n      \"alias\": \"laborum commodo deserunt mollit\"\n    },\n    {\n      \"company_id\": 87314530,\n      \"integration_data\": {\n        \"utb\": {},\n        \"magna8\": {},\n        \"enim2e\": {}\n      },\n      \"company_name\": \"magna eu reprehenderit id consectetur\",\n      \"task_details\": {\n        \"type\": -51474852,\n        \"group_list\": [\n          {\n            \"text\": \"in velit dolor fugiat\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"nostrud veniam ea\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 681448.8390371501,\n        \"safe_stock\": -26940823,\n        \"period_threshold\": -93632806,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"mollit adipisicing consectetur id\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"eu labore Excepteur ex voluptate\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"nostrud est consectetur\",\n      \"alias\": \"mollit nulla minim\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": -13689450,\n      \"integration_data\": {\n        \"ea526\": {}\n      },\n      \"company_name\": \"cillum laborum dolor\",\n      \"task_details\": {\n        \"type\": -1363253,\n        \"group_list\": [\n          {\n            \"text\": \"et Ut occaecat quis adipisicing\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ullamco\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 72291016.5909552,\n        \"safe_stock\": 44061092,\n        \"period_threshold\": 59075062,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"voluptate pariatur labore\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ut incididunt ut sint sunt\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"exercitation ea sit\",\n      \"alias\": \"officia\"\n    },\n    {\n      \"company_id\": 1143593,\n      \"integration_data\": {\n        \"Duisd\": {}\n      },\n      \"company_name\": \"non sint enim\",\n      \"task_details\": {\n        \"type\": 68725038,\n        \"group_list\": [\n          {\n            \"text\": \"quis\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"quis incididunt adipisi\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -88228021.62920932,\n        \"safe_stock\": 32948162,\n        \"period_threshold\": 53612063,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"qui mollit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ad est sit Duis anim\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"elit voluptate ipsum\",\n      \"alias\": \"tempor qui officia ex\"\n    }\n  ],\n  \"trace_id\": \"ullamco officia est sit aute\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "376999ea-b3e4-4a94-ae6d-39891c1bbfe9",
      "name": "Partner",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "d15bbf14-ff41-4824-a74e-70795d668e67",
          "name": "getPanelExtensionDetails | Get panel extension details",
          "request": {
            "name": "getPanelExtensionDetails | Get panel extension details",
            "description": {
              "content": "Retrieve detailed information about panel extensions in the public server setup.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "panel",
                "partners",
                "v1.0",
                "extensions",
                ":slug"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "slug",
                  "description": "(Required) pass the slug of the extension"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "e6f632c4-ad10-481b-8415-75810325ff70",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "panel",
                    "partners",
                    "v1.0",
                    "extensions",
                    ":slug"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "slug",
                      "description": "(Required) pass the slug of the extension"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"_id\": \"633ab5cb635a41fdde9fb648\",\n  \"organization_id\": \"6333fef3b1d85e44e738c138\",\n  \"extension_id\": \"633425ebb1d85e44e738c2ab\",\n  \"slug\": \"example-extension-1\",\n  \"scope\": [\n    \"company/profile\",\n    \"company/saleschannel\",\n    \"company/product\",\n    \"company/order\",\n    \"company/application/customer\",\n    \"company/application/analytics\",\n    \"company/application/storage\",\n    \"company/application/marketing\",\n    \"company/application/catalogue\",\n    \"company/application/communication\",\n    \"company/application/support\",\n    \"company/application/order\",\n    \"company/application/settings\"\n  ],\n  \"category\": {\n    \"categories_l1\": [],\n    \"categories_l2\": []\n  },\n  \"listing_info\": {\n    \"name\": \"ujjawal-example-extension-1\",\n    \"keywords\": [],\n    \"tagline\": \"test-extension for test how extensions look and work and how to create them\",\n    \"icon\": \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/AMwIEOw0U-logo.png\"\n  },\n  \"details\": {\n    \"benefits\": [\n      {\n        \"title\": \"Works fast\",\n        \"description\": \"works fast\",\n        \"_id\": \"633ab5cb635a41fdde9fb649\"\n      }\n    ],\n    \"screenshots\": {\n      \"desktop\": [\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/g95yHXkou-1024x576.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/IKdHxP2fN-1024x576.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/_auq1yvEp-1024x576.png\"\n      ],\n      \"mobile\": [\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/E_YAHM9cU-600x900.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/vEnXw9cCg-600x900.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/O3Wng4Rqn-600x900.png\"\n      ]\n    },\n    \"description\": \"Sample public extension\",\n    \"demo_url\": \"\",\n    \"video_url\": [\n      {\n        \"type\": \"video\",\n        \"url\": \"https://hdn-1.addsale.com/x0/products/videos/item/free/original/kizLVNWyS-video-sc-1.mp4\"\n      }\n    ],\n    \"integrations\": []\n  },\n  \"plan_type\": \"free\",\n  \"plans\": [\n    {\n      \"name\": \"Custom Free\",\n      \"features\": \"provides ease\",\n      \"type\": \"free\",\n      \"price\": {\n        \"amount\": 0,\n        \"currency\": \"INR\"\n      },\n      \"trial_days\": 0,\n      \"additional_charges\": \"\"\n    }\n  ],\n  \"plans_url\": \"\",\n  \"contact_info\": {\n    \"support\": {\n      \"email\": \"ujjawaltaleja@gofynd.com\",\n      \"phone\": \"7988169279\",\n      \"website_url\": \"\",\n      \"faq_url\": \"\",\n      \"privacy_policy_url\": \"\"\n    }\n  },\n  \"current_status\": \"active\",\n  \"coming_soon\": {\n    \"is_coming_soon\": false,\n    \"upvote_count\": 0\n  },\n  \"created_at\": \"2022-10-03T10:13:31.607Z\",\n  \"modified_at\": \"2022-10-03T10:13:31.607Z\",\n  \"organization\": {\n    \"name\": \"ujjawal-partners-fashion\",\n    \"slug\": \"ujjawa-w7t-68\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "96131275-4c54-4633-8a48-0ddda71a68b2",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "6b95a558-2018-406f-a277-8ff2907e11c8",
          "name": "fetchAllWebhookEvents | Fetch all webhook events",
          "request": {
            "name": "fetchAllWebhookEvents | Fetch all webhook events",
            "description": {
              "content": "Retrieve a list of all webhook events in the public server setup.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "a55c73ef-89f9-4593-ac80-9d45aa87f056",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "29f120f2-235a-4d22-a895-cb857d96200f",
          "name": "queryWebhookEventDetails | Query webhook event details",
          "request": {
            "name": "queryWebhookEventDetails | Query webhook event details",
            "description": {
              "content": "Query and obtain detailed information about webhook events in the public server configurations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "2775b1cf-e941-49df-8652-9db06fab587a",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"event_name\": \"article\",\n    \"event_type\": \"update\",\n    \"event_category\": \"company\",\n    \"version\": \"1\"\n  }\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b4bdf374-1b12-403c-8333-39083485d9bd",
          "name": "notifyDepricatedEvent | Notifies all the events that are going to depricate",
          "request": {
            "name": "notifyDepricatedEvent | Notifies all the events that are going to depricate",
            "description": {
              "content": "Notifies all the events that are subscribed and are going to deprecate or new version is available for those events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "depricated-event-notifier"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "f8f1642c-8ab5-4c82-816a-75f043de66be",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "depricated-event-notifier"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "715234b0-d873-4738-9da4-9e14e0ad0f7f",
          "name": "testHandlerTransformation | Test transformation of handler",
          "request": {
            "name": "testHandlerTransformation | Test transformation of handler",
            "description": {
              "content": "Test transformation of handler",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "transform-event"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event_name\": \"<string>\",\n  \"event_type\": \"<string>\",\n  \"event_category\": \"<string>\",\n  \"event_version\": \"<string>\",\n  \"event\": {\n    \"payload\": {\n      \"pariatur_c03\": false\n    },\n    \"meta\": {\n      \"sunt1\": -63754531,\n      \"amet3\": true\n    }\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "0c74fd98-425e-474b-b288-53f723a3a3e1",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "transform-event"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"event_name\": \"location\",\n  \"event_type\": \"create\",\n  \"event_category\": \"company\",\n  \"event_version\": \"1\",\n  \"event\": {\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450Z\",\n        \"modified_on\": \"2023-10-24T01:41:44.450Z\"\n      }\n    },\n    \"meta\": {\n      \"event\": {\n        \"type\": \"create\",\n        \"name\": \"location\",\n        \"version\": \"1\"\n      },\n      \"company_id\": 6086,\n      \"service\": {\n        \"name\": \"WheelJack\"\n      },\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"created_timestamp\": 1698111704725\n    }\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_trace_id\": [\n    \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n  ],\n  \"data\": {\n    \"event\": {\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"name\": \"location\",\n      \"type\": \"create\",\n      \"version\": \"1\",\n      \"created_timestamp\": 1698111704725\n    },\n    \"company_id\": 6086,\n    \"contains\": [\n      \"location\"\n    ],\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450Z\",\n        \"modified_on\": \"2023-10-24T01:41:44.450Z\"\n      }\n    }\n  },\n  \"event_name\": \"location\",\n  \"version\": \"1\",\n  \"status\": false,\n  \"event_type\": \"create\",\n  \"service_meta\": {\n    \"name\": \"WheelJack\"\n  },\n  \"association\": {\n    \"company_id\": 6086\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "45e41e86-a6f5-49be-8739-b8affff79326",
          "name": "validateSchema | Validate Schema for an event",
          "request": {
            "name": "validateSchema | Validate Schema for an event",
            "description": {
              "content": "Validate Schema for an event",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "validate-event-schema"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event_name\": \"<string>\",\n  \"event_type\": \"<string>\",\n  \"event_category\": \"<string>\",\n  \"event_version\": \"<string>\",\n  \"event\": {\n    \"payload\": {\n      \"nisi_585\": -24832333.458184183,\n      \"consequat_2\": 64584840.086695164\n    },\n    \"meta\": {\n      \"eac\": \"ex do\"\n    }\n  },\n  \"event_schema\": {\n    \"veniam64\": \"laborum nostrud\",\n    \"ullamco92\": 52444142.067225754,\n    \"cupidatat_7_6\": \"non a\",\n    \"do_ac\": false\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "6373a3d7-233c-4002-98c2-7a05afca44c2",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "validate-event-schema"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"event_name\": \"location\",\n  \"event_type\": \"create\",\n  \"event_category\": \"company\",\n  \"event_version\": \"1\",\n  \"event\": {\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450Z\",\n        \"modified_on\": \"2023-10-24T01:41:44.450Z\"\n      }\n    },\n    \"meta\": {\n      \"event\": {\n        \"type\": \"create\",\n        \"name\": \"location\",\n        \"version\": \"1\"\n      },\n      \"company_id\": 6086,\n      \"service\": {\n        \"name\": \"WheelJack\"\n      },\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"created_timestamp\": 1698111704725\n    }\n  },\n  \"event_schema\": {}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": true,\n  \"message\": \"Valid schema for this event\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fynd.com"
    }
  ],
  "info": {
    "_postman_id": "8320dd5b-7b96-4c2d-b98e-4f07b09f1dd7",
    "name": "Fynd Platform's Public Side APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public Side APIs",
      "type": "text/plain"
    }
  }
}
