{
  "item": [
    {
      "id": "33544b1d-ddee-4748-9604-3667f180ac61",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "5800ca7f-e537-416f-bedf-34224e4fcb37",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "f83dac00-1e76-4c23-ac27-e586f77dc003",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "occaecat dolor elit null",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b3615912-f607-4cb5-9f21-f9330818887a",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "occaecat dolor elit null",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "a5194338-e074-4713-ad98-e581a0c5af94",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "occaecat dolor elit null",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "f8416809-f7d3-40ff-b39b-a63e5a292f31",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "6e377b61-2d51-4ce2-9653-154df4d07d68",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "4385e7cd-14d6-4ce4-b4e3-818a779f797b",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "8fe3ffc9-8314-4261-bcfe-111865071146",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "bc9f1a73-f226-46e2-97ae-e174372817c8",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -80743152,\n   \"event_name\": \"Excepteur labore magna\",\n   \"event_type\": \"dolor sint eu\",\n   \"event_category\": \"incididunt laborum enim\",\n   \"version\": \"\",\n   \"display_name\": \"cillum dolore dolor deserunt\",\n   \"description\": \"sunt Duis eiusmod nisi\",\n   \"created_on\": \"qui esse\"\n  },\n  {\n   \"id\": 89049040,\n   \"event_name\": \"Excepteur ut dolor culpa\",\n   \"event_type\": \"labore in commodo\",\n   \"event_category\": \"ut aliquip \",\n   \"version\": \"anim irure aliqua\",\n   \"display_name\": \"tempor sit exercitati\",\n   \"description\": \"consec\",\n   \"created_on\": \"Ut et\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "0748d170-d6e4-40f3-ab18-2326fe530506",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "58314b8c-81ac-4c0b-95eb-e4c190365253",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 56961409,\n   \"event_name\": \"aute occaecat exercitation\",\n   \"event_type\": \"esse voluptate Lorem\",\n   \"event_category\": \"commodo\",\n   \"version\": \"reprehenderit do amet fugiat enim\",\n   \"display_name\": \"in fugiat\",\n   \"description\": \"pari\",\n   \"created_on\": \"elit culpa mollit Lorem\"\n  },\n  {\n   \"id\": -22929815,\n   \"event_name\": \"mollit pariatur veniam\",\n   \"event_type\": \"in aute proident\",\n   \"event_category\": \"adipisicing amet\",\n   \"version\": \"nisi reprehenderit eiusmod mollit\",\n   \"display_name\": \"est sit consequat\",\n   \"description\": \"in dolor volupt\",\n   \"created_on\": \"aliquip\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "d94f043e-eb90-4a36-b4de-16f8c258d4f0",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "f18f9b80-06b1-4374-84a2-0d1fc96f0a78",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "a9b934d0-5c8f-40b1-bc15-318ca4c15d90",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1999-01-28T13:16:58.655Z\",\n \"status\": 18227529,\n \"error\": \"dolore fugiat voluptate\",\n \"exception\": \"irure ad elit tempor\",\n \"message\": \"qu\",\n \"total_time_taken_in_millis\": -80775914,\n \"http_status\": \"413 REQUEST_ENTITY_TOO_LARGE\",\n \"items\": {\n  \"company_id\": 69005819,\n  \"integration_data\": {},\n  \"company_name\": \"ullamco voluptate dolor\",\n  \"task_details\": {\n   \"type\": -27595553,\n   \"group_list\": [\n    {\n     \"text\": \"anim in\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"irure eu qui\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -4069034.4493961483,\n   \"safe_stock\": 86053481,\n   \"period_threshold\": -25021213,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"irure ex labore\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"eu sit\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"non Excepteur occaecat\",\n  \"alias\": \"amet aliqua\"\n },\n \"payload\": {\n  \"company_id\": -32642572,\n  \"integration_data\": {},\n  \"company_name\": \"mollit est dolor dolore consequat\",\n  \"task_details\": {\n   \"type\": -19434191,\n   \"group_list\": [\n    {\n     \"text\": \"sed sunt magna consectetur reprehenderit\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"non deserunt laboris esse\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 45675729.37877497,\n   \"safe_stock\": 18839997,\n   \"period_threshold\": 71057803,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"et ut fugiat laborum\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"la\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"non eiusmod\",\n  \"alias\": \"et quis aliqua Lorem\"\n },\n \"trace_id\": \"eu\",\n \"page\": {\n  \"type\": \"sed occaecat et irure aliqua\",\n  \"size\": -4306944,\n  \"current\": 93213717,\n  \"has_next\": true,\n  \"item_total\": -53068071,\n  \"next_id\": \"eiusmod veniam ad quis cupidatat\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2a8cd08a-8fae-4ab0-9a2a-671f7439eb8a",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1999-01-28T13:16:58.655Z\",\n \"status\": 18227529,\n \"error\": \"dolore fugiat voluptate\",\n \"exception\": \"irure ad elit tempor\",\n \"message\": \"qu\",\n \"total_time_taken_in_millis\": -80775914,\n \"http_status\": \"413 REQUEST_ENTITY_TOO_LARGE\",\n \"items\": {\n  \"company_id\": 69005819,\n  \"integration_data\": {},\n  \"company_name\": \"ullamco voluptate dolor\",\n  \"task_details\": {\n   \"type\": -27595553,\n   \"group_list\": [\n    {\n     \"text\": \"anim in\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"irure eu qui\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -4069034.4493961483,\n   \"safe_stock\": 86053481,\n   \"period_threshold\": -25021213,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"irure ex labore\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"eu sit\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"non Excepteur occaecat\",\n  \"alias\": \"amet aliqua\"\n },\n \"payload\": {\n  \"company_id\": -32642572,\n  \"integration_data\": {},\n  \"company_name\": \"mollit est dolor dolore consequat\",\n  \"task_details\": {\n   \"type\": -19434191,\n   \"group_list\": [\n    {\n     \"text\": \"sed sunt magna consectetur reprehenderit\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"non deserunt laboris esse\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 45675729.37877497,\n   \"safe_stock\": 18839997,\n   \"period_threshold\": 71057803,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"et ut fugiat laborum\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"la\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"non eiusmod\",\n  \"alias\": \"et quis aliqua Lorem\"\n },\n \"trace_id\": \"eu\",\n \"page\": {\n  \"type\": \"sed occaecat et irure aliqua\",\n  \"size\": -4306944,\n  \"current\": 93213717,\n  \"has_next\": true,\n  \"item_total\": -53068071,\n  \"next_id\": \"eiusmod veniam ad quis cupidatat\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "4a3edd0e-262e-441f-9433-2c79b5af8655",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1999-01-28T13:16:58.655Z\",\n \"status\": 18227529,\n \"error\": \"dolore fugiat voluptate\",\n \"exception\": \"irure ad elit tempor\",\n \"message\": \"qu\",\n \"total_time_taken_in_millis\": -80775914,\n \"http_status\": \"413 REQUEST_ENTITY_TOO_LARGE\",\n \"items\": {\n  \"company_id\": 69005819,\n  \"integration_data\": {},\n  \"company_name\": \"ullamco voluptate dolor\",\n  \"task_details\": {\n   \"type\": -27595553,\n   \"group_list\": [\n    {\n     \"text\": \"anim in\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"irure eu qui\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -4069034.4493961483,\n   \"safe_stock\": 86053481,\n   \"period_threshold\": -25021213,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"irure ex labore\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"eu sit\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"non Excepteur occaecat\",\n  \"alias\": \"amet aliqua\"\n },\n \"payload\": {\n  \"company_id\": -32642572,\n  \"integration_data\": {},\n  \"company_name\": \"mollit est dolor dolore consequat\",\n  \"task_details\": {\n   \"type\": -19434191,\n   \"group_list\": [\n    {\n     \"text\": \"sed sunt magna consectetur reprehenderit\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"non deserunt laboris esse\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 45675729.37877497,\n   \"safe_stock\": 18839997,\n   \"period_threshold\": 71057803,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"et ut fugiat laborum\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"la\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"non eiusmod\",\n  \"alias\": \"et quis aliqua Lorem\"\n },\n \"trace_id\": \"eu\",\n \"page\": {\n  \"type\": \"sed occaecat et irure aliqua\",\n  \"size\": -4306944,\n  \"current\": 93213717,\n  \"has_next\": true,\n  \"item_total\": -53068071,\n  \"next_id\": \"eiusmod veniam ad quis cupidatat\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "20c5a32d-fc40-4bf0-a92c-7fe6842d6e84",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "92d46705-ae62-4247-b3e2-bbfab1d20eb3",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1949-04-18T23:26:22.965Z\",\n \"status\": -452637,\n \"error\": \"est minim culpa irure\",\n \"exception\": \"sit\",\n \"message\": \"eiusmod laboris sunt aute ex\",\n \"total_time_taken_in_millis\": 2342164,\n \"http_status\": \"201 CREATED\",\n \"items\": [\n  {\n   \"company_id\": 69451504,\n   \"integration_data\": {},\n   \"company_name\": \"aute irure Duis\",\n   \"task_details\": {\n    \"type\": 65159629,\n    \"group_list\": [\n     {\n      \"text\": \"aliquip deserunt labore dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"quis enim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -35968320.679406494,\n    \"safe_stock\": 95490932,\n    \"period_threshold\": 8709236,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"do culpa\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nulla\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ullamco laboris anim ut\",\n   \"alias\": \"adipisicing aliquip\"\n  },\n  {\n   \"company_id\": -8641126,\n   \"integration_data\": {},\n   \"company_name\": \"do ex qui exercitation ipsum\",\n   \"task_details\": {\n    \"type\": -41604772,\n    \"group_list\": [\n     {\n      \"text\": \"culpa proident nostrud\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute dolore consectetur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -97529243.53624457,\n    \"safe_stock\": 6937885,\n    \"period_threshold\": -22153879,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ut cupidatat amet\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sed officia laborum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"esse amet laboris\",\n   \"alias\": \"eiusmod\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -19008514,\n   \"integration_data\": {},\n   \"company_name\": \"aute sit commodo fugiat\",\n   \"task_details\": {\n    \"type\": 2982198,\n    \"group_list\": [\n     {\n      \"text\": \"in dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consectetur commodo tempor proident nisi\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 22580324.27954641,\n    \"safe_stock\": 97339532,\n    \"period_threshold\": -92397034,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"Ex\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"esse ullamco\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"labore ipsum non et\",\n   \"alias\": \"eiusmod adipisicing veniam\"\n  },\n  {\n   \"company_id\": 88190593,\n   \"integration_data\": {},\n   \"company_name\": \"Excepteur reprehenderit occaecat cupidatat\",\n   \"task_details\": {\n    \"type\": 95314227,\n    \"group_list\": [\n     {\n      \"text\": \"Excepteur in cupidatat minim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laboris\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -86165135.5861595,\n    \"safe_stock\": 3188184,\n    \"period_threshold\": 56565770,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"in Ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"tempor pariatur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"id ad\",\n   \"alias\": \"incididunt ut deserunt non velit\"\n  }\n ],\n \"trace_id\": \"nostrud laborum voluptate officia\",\n \"page\": {\n  \"type\": \"proident Lorem magna\",\n  \"size\": -88220599,\n  \"current\": -3309658,\n  \"has_next\": false,\n  \"item_total\": 74920333,\n  \"next_id\": \"nostrud laborum commodo dolore\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f39c8b80-95c4-4995-a701-7de4e8a7fde2",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1975-07-30T21:53:43.432Z\",\n \"status\": -75451105,\n \"error\": \"mollit ex dolore\",\n \"exception\": \"Duis incididunt in in mollit\",\n \"message\": \"esse consequa\",\n \"total_time_taken_in_millis\": -41504426,\n \"http_status\": \"506 VARIANT_ALSO_NEGOTIATES\",\n \"items\": [\n  {\n   \"company_id\": -20868160,\n   \"integration_data\": {},\n   \"company_name\": \"reprehenderit Lorem pariatur non\",\n   \"task_details\": {\n    \"type\": -41546031,\n    \"group_list\": [\n     {\n      \"text\": \"labore anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore exercitation \",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 82433700.73585266,\n    \"safe_stock\": 59441128,\n    \"period_threshold\": 94897299,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"exercitation Duis et\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ullamco mollit enim sed cupidatat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"amet occaecat\",\n   \"alias\": \"sunt culpa ut sit Lorem\"\n  },\n  {\n   \"company_id\": 73083461,\n   \"integration_data\": {},\n   \"company_name\": \"adipisicing aute aliqua aliquip\",\n   \"task_details\": {\n    \"type\": -72149734,\n    \"group_list\": [\n     {\n      \"text\": \"incididunt in pariatur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut ut sint\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 5122590.133600235,\n    \"safe_stock\": -55293010,\n    \"period_threshold\": -32640072,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ea irure\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nisi ea\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aliquip officia tempor proident\",\n   \"alias\": \"pariatur proident mollit\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 13197769,\n   \"integration_data\": {},\n   \"company_name\": \"reprehenderit dolore\",\n   \"task_details\": {\n    \"type\": 85843235,\n    \"group_list\": [\n     {\n      \"text\": \"veniam anim qui dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sit qui\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 33483078.681213737,\n    \"safe_stock\": 76315855,\n    \"period_threshold\": 23633403,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"nulla exercitation adipisicing commodo\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"incididunt in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"proident ad enim aute Excepteur\",\n   \"alias\": \"incididunt Lorem consequat officia\"\n  },\n  {\n   \"company_id\": -11277691,\n   \"integration_data\": {},\n   \"company_name\": \"irure\",\n   \"task_details\": {\n    \"type\": -8634476,\n    \"group_list\": [\n     {\n      \"text\": \"proident nulla in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proident quis ex Excepteur aliqua\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -51761411.98344455,\n    \"safe_stock\": -9576455,\n    \"period_threshold\": -62623483,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ea ipsum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in non magna adipisici\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"eiusmod adipisicing\",\n   \"alias\": \"in quis\"\n  }\n ],\n \"trace_id\": \"mollit sint\",\n \"page\": {\n  \"type\": \"sit culpa sint veniam ex\",\n  \"size\": 32953401,\n  \"current\": -50366127,\n  \"has_next\": false,\n  \"item_total\": -9086170,\n  \"next_id\": \"eu consectetur nulla velit\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "8019bda1-6b46-4b16-a80a-a13c60bca29e",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1975-07-30T21:53:43.432Z\",\n \"status\": -75451105,\n \"error\": \"mollit ex dolore\",\n \"exception\": \"Duis incididunt in in mollit\",\n \"message\": \"esse consequa\",\n \"total_time_taken_in_millis\": -41504426,\n \"http_status\": \"506 VARIANT_ALSO_NEGOTIATES\",\n \"items\": [\n  {\n   \"company_id\": -20868160,\n   \"integration_data\": {},\n   \"company_name\": \"reprehenderit Lorem pariatur non\",\n   \"task_details\": {\n    \"type\": -41546031,\n    \"group_list\": [\n     {\n      \"text\": \"labore anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore exercitation \",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 82433700.73585266,\n    \"safe_stock\": 59441128,\n    \"period_threshold\": 94897299,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"exercitation Duis et\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ullamco mollit enim sed cupidatat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"amet occaecat\",\n   \"alias\": \"sunt culpa ut sit Lorem\"\n  },\n  {\n   \"company_id\": 73083461,\n   \"integration_data\": {},\n   \"company_name\": \"adipisicing aute aliqua aliquip\",\n   \"task_details\": {\n    \"type\": -72149734,\n    \"group_list\": [\n     {\n      \"text\": \"incididunt in pariatur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut ut sint\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 5122590.133600235,\n    \"safe_stock\": -55293010,\n    \"period_threshold\": -32640072,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ea irure\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nisi ea\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aliquip officia tempor proident\",\n   \"alias\": \"pariatur proident mollit\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 13197769,\n   \"integration_data\": {},\n   \"company_name\": \"reprehenderit dolore\",\n   \"task_details\": {\n    \"type\": 85843235,\n    \"group_list\": [\n     {\n      \"text\": \"veniam anim qui dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sit qui\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 33483078.681213737,\n    \"safe_stock\": 76315855,\n    \"period_threshold\": 23633403,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"nulla exercitation adipisicing commodo\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"incididunt in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"proident ad enim aute Excepteur\",\n   \"alias\": \"incididunt Lorem consequat officia\"\n  },\n  {\n   \"company_id\": -11277691,\n   \"integration_data\": {},\n   \"company_name\": \"irure\",\n   \"task_details\": {\n    \"type\": -8634476,\n    \"group_list\": [\n     {\n      \"text\": \"proident nulla in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proident quis ex Excepteur aliqua\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -51761411.98344455,\n    \"safe_stock\": -9576455,\n    \"period_threshold\": -62623483,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ea ipsum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in non magna adipisici\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"eiusmod adipisicing\",\n   \"alias\": \"in quis\"\n  }\n ],\n \"trace_id\": \"mollit sint\",\n \"page\": {\n  \"type\": \"sit culpa sint veniam ex\",\n  \"size\": 32953401,\n  \"current\": -50366127,\n  \"has_next\": false,\n  \"item_total\": -9086170,\n  \"next_id\": \"eu consectetur nulla velit\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "50c5a2bd-f42f-4f34-9ca4-812d53085b84",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "afed42b8-5474-4206-83fd-2b3e9db211dd",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1954-05-31T00:24:27.893Z\",\n \"status\": -9250062,\n \"error\": \"voluptate Duis sint\",\n \"exception\": \"exercitation cupidatat id\",\n \"message\": \"velit magna sint\",\n \"total_time_taken_in_millis\": -80799732,\n \"http_status\": \"419 INSUFFICIENT_SPACE_ON_RESOURCE\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"laboris consequat\",\n \"page\": {\n  \"type\": \"quis minim voluptate cupidatat\",\n  \"size\": 99069326,\n  \"current\": -22867176,\n  \"has_next\": false,\n  \"item_total\": 53367031,\n  \"next_id\": \"commodo sint \",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "0bbf3663-9d9a-437f-8750-d25960f2daf1",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1954-05-31T00:24:27.893Z\",\n \"status\": -9250062,\n \"error\": \"voluptate Duis sint\",\n \"exception\": \"exercitation cupidatat id\",\n \"message\": \"velit magna sint\",\n \"total_time_taken_in_millis\": -80799732,\n \"http_status\": \"419 INSUFFICIENT_SPACE_ON_RESOURCE\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"laboris consequat\",\n \"page\": {\n  \"type\": \"quis minim voluptate cupidatat\",\n  \"size\": 99069326,\n  \"current\": -22867176,\n  \"has_next\": false,\n  \"item_total\": 53367031,\n  \"next_id\": \"commodo sint \",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2e8af9cf-fe10-4752-a87c-d4d1d16752a6",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1954-05-31T00:24:27.893Z\",\n \"status\": -9250062,\n \"error\": \"voluptate Duis sint\",\n \"exception\": \"exercitation cupidatat id\",\n \"message\": \"velit magna sint\",\n \"total_time_taken_in_millis\": -80799732,\n \"http_status\": \"419 INSUFFICIENT_SPACE_ON_RESOURCE\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"laboris consequat\",\n \"page\": {\n  \"type\": \"quis minim voluptate cupidatat\",\n  \"size\": 99069326,\n  \"current\": -22867176,\n  \"has_next\": false,\n  \"item_total\": 53367031,\n  \"next_id\": \"commodo sint \",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "f62c49fb-8743-4673-ae8a-35a6b8d4873a",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "4ac5a10a-cabc-4d42-b7db-a28f1cc0dc7e",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2017-03-08T18:55:39.255Z\",\n \"status\": -3356229,\n \"error\": \"officia culpa aute amet\",\n \"exception\": \"proident culpa esse ex\",\n \"message\": \"nulla do\",\n \"total_time_taken_in_millis\": 53963081,\n \"http_status\": \"414 REQUEST_URI_TOO_LONG\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"est irure magna\",\n \"page\": {\n  \"type\": \"culpa adipisicing cupidatat veniam\",\n  \"size\": 75514552,\n  \"current\": 79894031,\n  \"has_next\": true,\n  \"item_total\": 15156390,\n  \"next_id\": \"laboris\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "11e93f30-ea06-4436-b20b-aa7b7f710b5f",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2017-03-08T18:55:39.255Z\",\n \"status\": -3356229,\n \"error\": \"officia culpa aute amet\",\n \"exception\": \"proident culpa esse ex\",\n \"message\": \"nulla do\",\n \"total_time_taken_in_millis\": 53963081,\n \"http_status\": \"414 REQUEST_URI_TOO_LONG\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"est irure magna\",\n \"page\": {\n  \"type\": \"culpa adipisicing cupidatat veniam\",\n  \"size\": 75514552,\n  \"current\": 79894031,\n  \"has_next\": true,\n  \"item_total\": 15156390,\n  \"next_id\": \"laboris\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "25ea4535-ed19-443a-9704-701084f4c899",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2017-03-08T18:55:39.255Z\",\n \"status\": -3356229,\n \"error\": \"officia culpa aute amet\",\n \"exception\": \"proident culpa esse ex\",\n \"message\": \"nulla do\",\n \"total_time_taken_in_millis\": 53963081,\n \"http_status\": \"414 REQUEST_URI_TOO_LONG\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"est irure magna\",\n \"page\": {\n  \"type\": \"culpa adipisicing cupidatat veniam\",\n  \"size\": 75514552,\n  \"current\": 79894031,\n  \"has_next\": true,\n  \"item_total\": 15156390,\n  \"next_id\": \"laboris\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "92138deb-71ff-47ad-88f8-92735e6142eb",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2017-03-08T18:55:39.255Z\",\n \"status\": -3356229,\n \"error\": \"officia culpa aute amet\",\n \"exception\": \"proident culpa esse ex\",\n \"message\": \"nulla do\",\n \"total_time_taken_in_millis\": 53963081,\n \"http_status\": \"414 REQUEST_URI_TOO_LONG\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"est irure magna\",\n \"page\": {\n  \"type\": \"culpa adipisicing cupidatat veniam\",\n  \"size\": 75514552,\n  \"current\": 79894031,\n  \"has_next\": true,\n  \"item_total\": 15156390,\n  \"next_id\": \"laboris\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c0a771d8-e317-46ab-b61b-0c9d04ae0cc9",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2017-03-08T18:55:39.255Z\",\n \"status\": -3356229,\n \"error\": \"officia culpa aute amet\",\n \"exception\": \"proident culpa esse ex\",\n \"message\": \"nulla do\",\n \"total_time_taken_in_millis\": 53963081,\n \"http_status\": \"414 REQUEST_URI_TOO_LONG\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"est irure magna\",\n \"page\": {\n  \"type\": \"culpa adipisicing cupidatat veniam\",\n  \"size\": 75514552,\n  \"current\": 79894031,\n  \"has_next\": true,\n  \"item_total\": 15156390,\n  \"next_id\": \"laboris\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.jiomartpartners.com"
    }
  ],
  "info": {
    "_postman_id": "1be590ea-07fd-4f73-8b02-76407aea41b5",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
