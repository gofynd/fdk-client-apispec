{
  "item": [
    {
      "id": "552dac9d-d3b2-415c-a79f-f43cf8d303c4",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "ef0313b7-5a1c-4580-8167-ae9ab8f9ac0c",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "654ee807-77b3-4dc7-8e78-eb8dd7b30641",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "quis",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "61055748-dcfa-456d-888d-2622d5deb24d",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "quis",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"Invalid application domain or id.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e3216696-14f9-4ec9-b962-3f993c3b8c1b",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "quis",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "f084dc77-063c-47d2-921e-b064db76dfa8",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "fccc11fa-5f87-4473-b08e-4d46d46fb1b3",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "834b808e-ccfb-41ed-9f0b-b7df88f3ff0d",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "7ad9321e-5f69-4d03-89c0-f375c021a312",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "c2464d39-5596-4087-bdc8-d4c11790c2e6",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 41915976,\n   \"event_name\": \"ut\",\n   \"event_type\": \"culpa veniam\",\n   \"event_category\": \"exercitation Lorem\",\n   \"version\": \"magna dolor est\",\n   \"display_name\": \"reprehenderit ut\",\n   \"description\": \"aute incididunt non Ut\",\n   \"created_on\": \"amet sed adipisicing in cillum\"\n  },\n  {\n   \"id\": 71057944,\n   \"event_name\": \"dolor et aute\",\n   \"event_type\": \"Excepteur reprehenderit id\",\n   \"event_category\": \"cillum culpa ea deserunt\",\n   \"version\": \"exercitation incididunt\",\n   \"display_name\": \"Excepteur consectetur\",\n   \"description\": \"Excepteur\",\n   \"created_on\": \"ea d\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "1e637908-43dd-4c27-a562-53dec64f22c8",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "9ee8c6e3-31e0-41f7-817e-f28093531449",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -57697495,\n   \"event_name\": \"nisi elit do\",\n   \"event_type\": \"in ea esse fugiat\",\n   \"event_category\": \"amet labore enim\",\n   \"version\": \"tempor eu labore dolor\",\n   \"display_name\": \"amet sunt\",\n   \"description\": \"anim\",\n   \"created_on\": \"laboris consequat exercitation\"\n  },\n  {\n   \"id\": 54985081,\n   \"event_name\": \"in est\",\n   \"event_type\": \"do si\",\n   \"event_category\": \"cillum\",\n   \"version\": \"commodo\",\n   \"display_name\": \"ullamco proident adipisicing cupidatat\",\n   \"description\": \"exercitation\",\n   \"created_on\": \"occaecat laboris sint deserunt\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "f20c3359-8493-4a46-9d13-aebde7cf6a8e",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "637dbe43-8191-490c-b809-b03c411b420e",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "7179b0e5-6e0d-4175-8429-adec38b647ff",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2015-11-16T04:48:34.114Z\",\n \"status\": 64765090,\n \"error\": \"velit consequat amet nostrud\",\n \"exception\": \"ea est deserunt amet id\",\n \"message\": \"occaecat in\",\n \"total_time_taken_in_millis\": 93825778,\n \"http_status\": \"501 NOT_IMPLEMENTED\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"laborum in\",\n   \"description\": \"anim aute\",\n   \"name\": \"amet incididunt\",\n   \"slug\": \"ea non mollit\",\n   \"meta\": [\n    {\n     \"_id\": \"pariatur elit ea\",\n     \"name\": \"i\",\n     \"value\": \"voluptate deserunt fugiat aliqua\"\n    },\n    {\n     \"_id\": \"aliquip sed deserunt eu cupidatat\",\n     \"name\": \"aliqua cupidatat anim ni\",\n     \"value\": \"aliquip ipsum\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"Excepteur aliqua\",\n    \"integration\": \"aliquip adipisicing ad elit\",\n    \"level\": \"proident occaecat\",\n    \"uid\": 40374250,\n    \"opted\": false,\n    \"permissions\": [\n     \"dolor labore qui\",\n     \"exercitation fugiat nulla\"\n    ],\n    \"token\": \"velit\",\n    \"name\": \"ullamco ipsum velit id minim\",\n    \"stores\": [\n     {\n      \"_id\": \"mollit reprehenderit sit id\",\n      \"integration\": \"voluptate adipisicing incididunt velit\",\n      \"level\": \"ullamco officia exercita\",\n      \"uid\": 96866552,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"est sit\",\n      \"code\": \"quis labore deserunt\",\n      \"name\": \"consectetur sint do id\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"amet in\",\n      \"integration\": \"veniam adipisicing cillum ad et\",\n      \"level\": \"enim amet eu elit\",\n      \"uid\": 65296810,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ullamco dolor labore elit\",\n      \"code\": \"labore laborum minim\",\n      \"name\": \"velit sint in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"id nulla Ut\",\n      \"integration\": \"in ad\",\n      \"level\": \"dolore ad irure\",\n      \"uid\": 16888031,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in voluptate Lorem anim\",\n      \"code\": \"ipsum velit\",\n      \"name\": \"qui labore laborum\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"aliquip exercitation nulla non\",\n      \"integration\": \"quis anim aliquip laboris\",\n      \"level\": \"Excepteur\",\n      \"uid\": 84439330,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ad consectetur nisi esse proident\",\n      \"code\": \"cons\",\n      \"name\": \"culpa fugiat consectetur\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"cup\",\n    \"integration\": \"officia Ut pariatur\",\n    \"level\": \"proident irure Duis\",\n    \"uid\": 71730649,\n    \"opted\": true,\n    \"permissions\": [\n     \"sint nostrud in\",\n     \"Lorem cillum esse voluptate\"\n    ],\n    \"token\": \"Excepteur aute eu sint non\",\n    \"name\": \"culpa dolore elit\",\n    \"stores\": [\n     {\n      \"_id\": \"sed officia commodo\",\n      \"integration\": \"minim\",\n      \"level\": \"Ut officia ad culpa\",\n      \"uid\": 16724863,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"et nostrud consequat sint laboris\",\n      \"code\": \"sed enim\",\n      \"name\": \"sit o\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"ipsum et\",\n      \"integration\": \"Excepteur\",\n      \"level\": \"aliquip tempor consectetur\",\n      \"uid\": -62857847,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"quis ut amet sint\",\n      \"code\": \"cupidatat\",\n      \"name\": \"voluptate in commodo\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"minim irure voluptate\",\n      \"integration\": \"minim eu qui et\",\n      \"level\": \"veniam\",\n      \"uid\": -95450754,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"pariatur ci\",\n      \"code\": \"in Lorem dolore\",\n      \"name\": \"labore Duis dolor ullamco\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"sint\",\n      \"integration\": \"cillum voluptate in ea\",\n      \"level\": \"aliquip dolor sint\",\n      \"uid\": 74221076,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"consectetur\",\n      \"code\": \"ut pariatur enim id\",\n      \"name\": \"ullamco\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"ad nostrud et\",\n   \"description\": \"ut ullamco\",\n   \"name\": \"aliqua adipisicing fugiat\",\n   \"slug\": \"non velit nostrud\",\n   \"meta\": [\n    {\n     \"_id\": \"magna commodo in dolo\",\n     \"name\": \"velit laborum dolor\",\n     \"value\": \"qui dolore\"\n    },\n    {\n     \"_id\": \"in veniam\",\n     \"name\": \"pariatur nisi Excepteur\",\n     \"value\": \"in\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"adipisicing in labore esse\",\n    \"integration\": \"irure Lorem aliquip\",\n    \"level\": \"proident occaecat\",\n    \"uid\": 74250890,\n    \"opted\": false,\n    \"permissions\": [\n     \"consectetur exercitation esse\",\n     \"aliqua officia magna culpa\"\n    ],\n    \"token\": \"deserunt anim\",\n    \"name\": \"sed incididunt do\",\n    \"stores\": [\n     {\n      \"_id\": \"ut velit est laborum\",\n      \"integration\": \"est tempor cupidatat Duis esse\",\n      \"level\": \"Lorem cillum exercitation ad\",\n      \"uid\": -18233460,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"nostrud molli\",\n      \"code\": \"proident in\",\n      \"name\": \"repre\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"proident\",\n      \"integration\": \"cupidatat ad non quis\",\n      \"level\": \"exercitation proident consectetur\",\n      \"uid\": -44173823,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"enim mollit minim laboris\",\n      \"code\": \"et dolor\",\n      \"name\": \"reprehenderit aliqua elit ullamco\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"qui irure Excepteur Lorem eu\",\n      \"integration\": \"consectetur est aliquip\",\n      \"level\": \"est eiusmod non\",\n      \"uid\": -32712690,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ex\",\n      \"code\": \"eu consectetur eiusmod deserunt aliqua\",\n      \"name\": \"fugiat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"do exercit\",\n      \"integration\": \"proident consectetur ipsum\",\n      \"level\": \"pariatur sit exercitation ut\",\n      \"uid\": -37582268,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"incididunt nostrud aliqua consectetur sunt\",\n      \"code\": \"in commodo proident\",\n      \"name\": \"occaecat anim dolore\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"fugiat Ut ipsum\",\n    \"integration\": \"qui sit Lorem\",\n    \"level\": \"id culpa\",\n    \"uid\": 34427206,\n    \"opted\": true,\n    \"permissions\": [\n     \"consectetur aliquip\",\n     \"velit aute sed\"\n    ],\n    \"token\": \"sint exercitation labore ea\",\n    \"name\": \"non\",\n    \"stores\": [\n     {\n      \"_id\": \"non incididunt\",\n      \"integration\": \"ipsum\",\n      \"level\": \"non aliqua anim reprehenderit\",\n      \"uid\": 23524123,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Ut officia velit magna\",\n      \"code\": \"enim culpa\",\n      \"name\": \"labore aliqua commodo\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"Ut sint\",\n      \"integration\": \"veniam fugiat id amet dolore\",\n      \"level\": \"sed minim sit voluptate commodo\",\n      \"uid\": 47836486,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"velit voluptate\",\n      \"code\": \"ullamco ea ut irure\",\n      \"name\": \"eiusmod velit\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"ea do sed sit fugiat\",\n      \"integration\": \"laboris adipisicing do elit\",\n      \"level\": \"exercitation tempor\",\n      \"uid\": 91413547,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ad Duis anim\",\n      \"code\": \"cillum\",\n      \"name\": \"nisi sunt est voluptate\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"in magna consequa\",\n      \"integration\": \"esse tempor sunt\",\n      \"level\": \"laboris s\",\n      \"uid\": 27627280,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in irure pariatur\",\n      \"code\": \"cillum laboris aute qui dolor\",\n      \"name\": \"non ut\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"quis dolore tempor cupidatat enim\",\n \"page\": {\n  \"type\": \"do ut laboris\",\n  \"size\": -9724965,\n  \"current\": 60211752,\n  \"has_next\": true,\n  \"item_total\": 96840328,\n  \"next_id\": \"ut Ut occaecat\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "134b9dc2-428f-4476-ae4d-f6faf4cec5ba",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2015-11-16T04:48:34.114Z\",\n \"status\": 64765090,\n \"error\": \"velit consequat amet nostrud\",\n \"exception\": \"ea est deserunt amet id\",\n \"message\": \"occaecat in\",\n \"total_time_taken_in_millis\": 93825778,\n \"http_status\": \"501 NOT_IMPLEMENTED\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"laborum in\",\n   \"description\": \"anim aute\",\n   \"name\": \"amet incididunt\",\n   \"slug\": \"ea non mollit\",\n   \"meta\": [\n    {\n     \"_id\": \"pariatur elit ea\",\n     \"name\": \"i\",\n     \"value\": \"voluptate deserunt fugiat aliqua\"\n    },\n    {\n     \"_id\": \"aliquip sed deserunt eu cupidatat\",\n     \"name\": \"aliqua cupidatat anim ni\",\n     \"value\": \"aliquip ipsum\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"Excepteur aliqua\",\n    \"integration\": \"aliquip adipisicing ad elit\",\n    \"level\": \"proident occaecat\",\n    \"uid\": 40374250,\n    \"opted\": false,\n    \"permissions\": [\n     \"dolor labore qui\",\n     \"exercitation fugiat nulla\"\n    ],\n    \"token\": \"velit\",\n    \"name\": \"ullamco ipsum velit id minim\",\n    \"stores\": [\n     {\n      \"_id\": \"mollit reprehenderit sit id\",\n      \"integration\": \"voluptate adipisicing incididunt velit\",\n      \"level\": \"ullamco officia exercita\",\n      \"uid\": 96866552,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"est sit\",\n      \"code\": \"quis labore deserunt\",\n      \"name\": \"consectetur sint do id\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"amet in\",\n      \"integration\": \"veniam adipisicing cillum ad et\",\n      \"level\": \"enim amet eu elit\",\n      \"uid\": 65296810,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ullamco dolor labore elit\",\n      \"code\": \"labore laborum minim\",\n      \"name\": \"velit sint in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"id nulla Ut\",\n      \"integration\": \"in ad\",\n      \"level\": \"dolore ad irure\",\n      \"uid\": 16888031,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in voluptate Lorem anim\",\n      \"code\": \"ipsum velit\",\n      \"name\": \"qui labore laborum\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"aliquip exercitation nulla non\",\n      \"integration\": \"quis anim aliquip laboris\",\n      \"level\": \"Excepteur\",\n      \"uid\": 84439330,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ad consectetur nisi esse proident\",\n      \"code\": \"cons\",\n      \"name\": \"culpa fugiat consectetur\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"cup\",\n    \"integration\": \"officia Ut pariatur\",\n    \"level\": \"proident irure Duis\",\n    \"uid\": 71730649,\n    \"opted\": true,\n    \"permissions\": [\n     \"sint nostrud in\",\n     \"Lorem cillum esse voluptate\"\n    ],\n    \"token\": \"Excepteur aute eu sint non\",\n    \"name\": \"culpa dolore elit\",\n    \"stores\": [\n     {\n      \"_id\": \"sed officia commodo\",\n      \"integration\": \"minim\",\n      \"level\": \"Ut officia ad culpa\",\n      \"uid\": 16724863,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"et nostrud consequat sint laboris\",\n      \"code\": \"sed enim\",\n      \"name\": \"sit o\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"ipsum et\",\n      \"integration\": \"Excepteur\",\n      \"level\": \"aliquip tempor consectetur\",\n      \"uid\": -62857847,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"quis ut amet sint\",\n      \"code\": \"cupidatat\",\n      \"name\": \"voluptate in commodo\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"minim irure voluptate\",\n      \"integration\": \"minim eu qui et\",\n      \"level\": \"veniam\",\n      \"uid\": -95450754,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"pariatur ci\",\n      \"code\": \"in Lorem dolore\",\n      \"name\": \"labore Duis dolor ullamco\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"sint\",\n      \"integration\": \"cillum voluptate in ea\",\n      \"level\": \"aliquip dolor sint\",\n      \"uid\": 74221076,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"consectetur\",\n      \"code\": \"ut pariatur enim id\",\n      \"name\": \"ullamco\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"ad nostrud et\",\n   \"description\": \"ut ullamco\",\n   \"name\": \"aliqua adipisicing fugiat\",\n   \"slug\": \"non velit nostrud\",\n   \"meta\": [\n    {\n     \"_id\": \"magna commodo in dolo\",\n     \"name\": \"velit laborum dolor\",\n     \"value\": \"qui dolore\"\n    },\n    {\n     \"_id\": \"in veniam\",\n     \"name\": \"pariatur nisi Excepteur\",\n     \"value\": \"in\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"adipisicing in labore esse\",\n    \"integration\": \"irure Lorem aliquip\",\n    \"level\": \"proident occaecat\",\n    \"uid\": 74250890,\n    \"opted\": false,\n    \"permissions\": [\n     \"consectetur exercitation esse\",\n     \"aliqua officia magna culpa\"\n    ],\n    \"token\": \"deserunt anim\",\n    \"name\": \"sed incididunt do\",\n    \"stores\": [\n     {\n      \"_id\": \"ut velit est laborum\",\n      \"integration\": \"est tempor cupidatat Duis esse\",\n      \"level\": \"Lorem cillum exercitation ad\",\n      \"uid\": -18233460,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"nostrud molli\",\n      \"code\": \"proident in\",\n      \"name\": \"repre\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"proident\",\n      \"integration\": \"cupidatat ad non quis\",\n      \"level\": \"exercitation proident consectetur\",\n      \"uid\": -44173823,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"enim mollit minim laboris\",\n      \"code\": \"et dolor\",\n      \"name\": \"reprehenderit aliqua elit ullamco\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"qui irure Excepteur Lorem eu\",\n      \"integration\": \"consectetur est aliquip\",\n      \"level\": \"est eiusmod non\",\n      \"uid\": -32712690,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ex\",\n      \"code\": \"eu consectetur eiusmod deserunt aliqua\",\n      \"name\": \"fugiat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"do exercit\",\n      \"integration\": \"proident consectetur ipsum\",\n      \"level\": \"pariatur sit exercitation ut\",\n      \"uid\": -37582268,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"incididunt nostrud aliqua consectetur sunt\",\n      \"code\": \"in commodo proident\",\n      \"name\": \"occaecat anim dolore\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"fugiat Ut ipsum\",\n    \"integration\": \"qui sit Lorem\",\n    \"level\": \"id culpa\",\n    \"uid\": 34427206,\n    \"opted\": true,\n    \"permissions\": [\n     \"consectetur aliquip\",\n     \"velit aute sed\"\n    ],\n    \"token\": \"sint exercitation labore ea\",\n    \"name\": \"non\",\n    \"stores\": [\n     {\n      \"_id\": \"non incididunt\",\n      \"integration\": \"ipsum\",\n      \"level\": \"non aliqua anim reprehenderit\",\n      \"uid\": 23524123,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Ut officia velit magna\",\n      \"code\": \"enim culpa\",\n      \"name\": \"labore aliqua commodo\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"Ut sint\",\n      \"integration\": \"veniam fugiat id amet dolore\",\n      \"level\": \"sed minim sit voluptate commodo\",\n      \"uid\": 47836486,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"velit voluptate\",\n      \"code\": \"ullamco ea ut irure\",\n      \"name\": \"eiusmod velit\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"ea do sed sit fugiat\",\n      \"integration\": \"laboris adipisicing do elit\",\n      \"level\": \"exercitation tempor\",\n      \"uid\": 91413547,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ad Duis anim\",\n      \"code\": \"cillum\",\n      \"name\": \"nisi sunt est voluptate\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"in magna consequa\",\n      \"integration\": \"esse tempor sunt\",\n      \"level\": \"laboris s\",\n      \"uid\": 27627280,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in irure pariatur\",\n      \"code\": \"cillum laboris aute qui dolor\",\n      \"name\": \"non ut\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"quis dolore tempor cupidatat enim\",\n \"page\": {\n  \"type\": \"do ut laboris\",\n  \"size\": -9724965,\n  \"current\": 60211752,\n  \"has_next\": true,\n  \"item_total\": 96840328,\n  \"next_id\": \"ut Ut occaecat\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "94ef1eb1-55b3-4fe0-a899-bc8a04ae7f91",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2015-11-16T04:48:34.114Z\",\n \"status\": 64765090,\n \"error\": \"velit consequat amet nostrud\",\n \"exception\": \"ea est deserunt amet id\",\n \"message\": \"occaecat in\",\n \"total_time_taken_in_millis\": 93825778,\n \"http_status\": \"501 NOT_IMPLEMENTED\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"laborum in\",\n   \"description\": \"anim aute\",\n   \"name\": \"amet incididunt\",\n   \"slug\": \"ea non mollit\",\n   \"meta\": [\n    {\n     \"_id\": \"pariatur elit ea\",\n     \"name\": \"i\",\n     \"value\": \"voluptate deserunt fugiat aliqua\"\n    },\n    {\n     \"_id\": \"aliquip sed deserunt eu cupidatat\",\n     \"name\": \"aliqua cupidatat anim ni\",\n     \"value\": \"aliquip ipsum\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"Excepteur aliqua\",\n    \"integration\": \"aliquip adipisicing ad elit\",\n    \"level\": \"proident occaecat\",\n    \"uid\": 40374250,\n    \"opted\": false,\n    \"permissions\": [\n     \"dolor labore qui\",\n     \"exercitation fugiat nulla\"\n    ],\n    \"token\": \"velit\",\n    \"name\": \"ullamco ipsum velit id minim\",\n    \"stores\": [\n     {\n      \"_id\": \"mollit reprehenderit sit id\",\n      \"integration\": \"voluptate adipisicing incididunt velit\",\n      \"level\": \"ullamco officia exercita\",\n      \"uid\": 96866552,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"est sit\",\n      \"code\": \"quis labore deserunt\",\n      \"name\": \"consectetur sint do id\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"amet in\",\n      \"integration\": \"veniam adipisicing cillum ad et\",\n      \"level\": \"enim amet eu elit\",\n      \"uid\": 65296810,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ullamco dolor labore elit\",\n      \"code\": \"labore laborum minim\",\n      \"name\": \"velit sint in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"id nulla Ut\",\n      \"integration\": \"in ad\",\n      \"level\": \"dolore ad irure\",\n      \"uid\": 16888031,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in voluptate Lorem anim\",\n      \"code\": \"ipsum velit\",\n      \"name\": \"qui labore laborum\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"aliquip exercitation nulla non\",\n      \"integration\": \"quis anim aliquip laboris\",\n      \"level\": \"Excepteur\",\n      \"uid\": 84439330,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ad consectetur nisi esse proident\",\n      \"code\": \"cons\",\n      \"name\": \"culpa fugiat consectetur\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"cup\",\n    \"integration\": \"officia Ut pariatur\",\n    \"level\": \"proident irure Duis\",\n    \"uid\": 71730649,\n    \"opted\": true,\n    \"permissions\": [\n     \"sint nostrud in\",\n     \"Lorem cillum esse voluptate\"\n    ],\n    \"token\": \"Excepteur aute eu sint non\",\n    \"name\": \"culpa dolore elit\",\n    \"stores\": [\n     {\n      \"_id\": \"sed officia commodo\",\n      \"integration\": \"minim\",\n      \"level\": \"Ut officia ad culpa\",\n      \"uid\": 16724863,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"et nostrud consequat sint laboris\",\n      \"code\": \"sed enim\",\n      \"name\": \"sit o\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"ipsum et\",\n      \"integration\": \"Excepteur\",\n      \"level\": \"aliquip tempor consectetur\",\n      \"uid\": -62857847,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"quis ut amet sint\",\n      \"code\": \"cupidatat\",\n      \"name\": \"voluptate in commodo\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"minim irure voluptate\",\n      \"integration\": \"minim eu qui et\",\n      \"level\": \"veniam\",\n      \"uid\": -95450754,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"pariatur ci\",\n      \"code\": \"in Lorem dolore\",\n      \"name\": \"labore Duis dolor ullamco\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"sint\",\n      \"integration\": \"cillum voluptate in ea\",\n      \"level\": \"aliquip dolor sint\",\n      \"uid\": 74221076,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"consectetur\",\n      \"code\": \"ut pariatur enim id\",\n      \"name\": \"ullamco\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"ad nostrud et\",\n   \"description\": \"ut ullamco\",\n   \"name\": \"aliqua adipisicing fugiat\",\n   \"slug\": \"non velit nostrud\",\n   \"meta\": [\n    {\n     \"_id\": \"magna commodo in dolo\",\n     \"name\": \"velit laborum dolor\",\n     \"value\": \"qui dolore\"\n    },\n    {\n     \"_id\": \"in veniam\",\n     \"name\": \"pariatur nisi Excepteur\",\n     \"value\": \"in\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"adipisicing in labore esse\",\n    \"integration\": \"irure Lorem aliquip\",\n    \"level\": \"proident occaecat\",\n    \"uid\": 74250890,\n    \"opted\": false,\n    \"permissions\": [\n     \"consectetur exercitation esse\",\n     \"aliqua officia magna culpa\"\n    ],\n    \"token\": \"deserunt anim\",\n    \"name\": \"sed incididunt do\",\n    \"stores\": [\n     {\n      \"_id\": \"ut velit est laborum\",\n      \"integration\": \"est tempor cupidatat Duis esse\",\n      \"level\": \"Lorem cillum exercitation ad\",\n      \"uid\": -18233460,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"nostrud molli\",\n      \"code\": \"proident in\",\n      \"name\": \"repre\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"proident\",\n      \"integration\": \"cupidatat ad non quis\",\n      \"level\": \"exercitation proident consectetur\",\n      \"uid\": -44173823,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"enim mollit minim laboris\",\n      \"code\": \"et dolor\",\n      \"name\": \"reprehenderit aliqua elit ullamco\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"qui irure Excepteur Lorem eu\",\n      \"integration\": \"consectetur est aliquip\",\n      \"level\": \"est eiusmod non\",\n      \"uid\": -32712690,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ex\",\n      \"code\": \"eu consectetur eiusmod deserunt aliqua\",\n      \"name\": \"fugiat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"do exercit\",\n      \"integration\": \"proident consectetur ipsum\",\n      \"level\": \"pariatur sit exercitation ut\",\n      \"uid\": -37582268,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"incididunt nostrud aliqua consectetur sunt\",\n      \"code\": \"in commodo proident\",\n      \"name\": \"occaecat anim dolore\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"fugiat Ut ipsum\",\n    \"integration\": \"qui sit Lorem\",\n    \"level\": \"id culpa\",\n    \"uid\": 34427206,\n    \"opted\": true,\n    \"permissions\": [\n     \"consectetur aliquip\",\n     \"velit aute sed\"\n    ],\n    \"token\": \"sint exercitation labore ea\",\n    \"name\": \"non\",\n    \"stores\": [\n     {\n      \"_id\": \"non incididunt\",\n      \"integration\": \"ipsum\",\n      \"level\": \"non aliqua anim reprehenderit\",\n      \"uid\": 23524123,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Ut officia velit magna\",\n      \"code\": \"enim culpa\",\n      \"name\": \"labore aliqua commodo\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"Ut sint\",\n      \"integration\": \"veniam fugiat id amet dolore\",\n      \"level\": \"sed minim sit voluptate commodo\",\n      \"uid\": 47836486,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"velit voluptate\",\n      \"code\": \"ullamco ea ut irure\",\n      \"name\": \"eiusmod velit\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"ea do sed sit fugiat\",\n      \"integration\": \"laboris adipisicing do elit\",\n      \"level\": \"exercitation tempor\",\n      \"uid\": 91413547,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ad Duis anim\",\n      \"code\": \"cillum\",\n      \"name\": \"nisi sunt est voluptate\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"in magna consequa\",\n      \"integration\": \"esse tempor sunt\",\n      \"level\": \"laboris s\",\n      \"uid\": 27627280,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in irure pariatur\",\n      \"code\": \"cillum laboris aute qui dolor\",\n      \"name\": \"non ut\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"quis dolore tempor cupidatat enim\",\n \"page\": {\n  \"type\": \"do ut laboris\",\n  \"size\": -9724965,\n  \"current\": 60211752,\n  \"has_next\": true,\n  \"item_total\": 96840328,\n  \"next_id\": \"ut Ut occaecat\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "f7ebd0ed-a0c1-40c1-a620-f8fd8d781710",
          "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
          "request": {
            "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "e56d43d6-4232-45a8-947f-3e240e235e6c",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1969-05-30T16:18:11.324Z\",\n \"status\": -44219912,\n \"error\": \"sed occaecat\",\n \"exception\": \"aliquip culpa\",\n \"message\": \"Lorem repreh\",\n \"total_time_taken_in_millis\": -10233312,\n \"http_status\": \"203 NON_AUTHORITATIVE_INFORMATION\",\n \"items\": {\n  \"session_id\": \"elit irure proident\",\n  \"error_message\": \"aute in fugiat\"\n },\n \"payload\": {\n  \"session_id\": \"sunt\",\n  \"error_message\": \"magna\"\n },\n \"trace_id\": \"do dolor\",\n \"page\": {\n  \"type\": \"eiusmod Ut aliquip\",\n  \"size\": 70250570,\n  \"current\": 28419032,\n  \"has_next\": true,\n  \"item_total\": -305503,\n  \"next_id\": \"officia Lorem\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "48708d31-5973-4aae-b266-ce109057ccde",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1969-05-30T16:18:11.324Z\",\n \"status\": -44219912,\n \"error\": \"sed occaecat\",\n \"exception\": \"aliquip culpa\",\n \"message\": \"Lorem repreh\",\n \"total_time_taken_in_millis\": -10233312,\n \"http_status\": \"203 NON_AUTHORITATIVE_INFORMATION\",\n \"items\": {\n  \"session_id\": \"elit irure proident\",\n  \"error_message\": \"aute in fugiat\"\n },\n \"payload\": {\n  \"session_id\": \"sunt\",\n  \"error_message\": \"magna\"\n },\n \"trace_id\": \"do dolor\",\n \"page\": {\n  \"type\": \"eiusmod Ut aliquip\",\n  \"size\": 70250570,\n  \"current\": 28419032,\n  \"has_next\": true,\n  \"item_total\": -305503,\n  \"next_id\": \"officia Lorem\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "277939b0-7ed9-4db1-9474-c13cd222769f",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1969-05-30T16:18:11.324Z\",\n \"status\": -44219912,\n \"error\": \"sed occaecat\",\n \"exception\": \"aliquip culpa\",\n \"message\": \"Lorem repreh\",\n \"total_time_taken_in_millis\": -10233312,\n \"http_status\": \"203 NON_AUTHORITATIVE_INFORMATION\",\n \"items\": {\n  \"session_id\": \"elit irure proident\",\n  \"error_message\": \"aute in fugiat\"\n },\n \"payload\": {\n  \"session_id\": \"sunt\",\n  \"error_message\": \"magna\"\n },\n \"trace_id\": \"do dolor\",\n \"page\": {\n  \"type\": \"eiusmod Ut aliquip\",\n  \"size\": 70250570,\n  \"current\": 28419032,\n  \"has_next\": true,\n  \"item_total\": -305503,\n  \"next_id\": \"officia Lorem\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "101e639b-138d-42f7-b342-d6b57fe3a49b",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "cc9c5e25-7823-4a95-9541-36ba528f5c45",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1951-12-08T02:41:32.231Z\",\n \"status\": -336911,\n \"error\": \"ea dolor Duis nulla\",\n \"exception\": \"ad dolore deserunt dolor\",\n \"message\": \"dolore magna ad est dolore\",\n \"total_time_taken_in_millis\": 16721228,\n \"http_status\": \"302 FOUND\",\n \"items\": {\n  \"company_id\": -38059961,\n  \"integration_data\": {},\n  \"company_name\": \"in\",\n  \"task_details\": {\n   \"type\": -15545499,\n   \"group_list\": [\n    {\n     \"text\": \"ea enim mollit ut\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"incididunt irure\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 37145493.34654337,\n   \"safe_stock\": 86744624,\n   \"period_threshold\": 87083803,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"fugiat Ut quis cillum\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ad proident ut magna\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"consequat voluptate\",\n  \"alias\": \"id\"\n },\n \"payload\": {\n  \"company_id\": 45495545,\n  \"integration_data\": {},\n  \"company_name\": \"Ut ullamco id tempor\",\n  \"task_details\": {\n   \"type\": -13230920,\n   \"group_list\": [\n    {\n     \"text\": \"quis\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"officia incididunt\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 1164967.2133265287,\n   \"safe_stock\": -5629649,\n   \"period_threshold\": 13553829,\n   \"period_threshold_type\": \"WEEKS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"laboris non de\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"velit\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"magna nulla sunt\",\n  \"alias\": \"culpa aute consectetur\"\n },\n \"trace_id\": \"mollit ut laborum\",\n \"page\": {\n  \"type\": \"sint commodo tempor\",\n  \"size\": 99556784,\n  \"current\": 28770998,\n  \"has_next\": true,\n  \"item_total\": 97865706,\n  \"next_id\": \"tempor commodo nisi aliqua\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "6dd05430-9eb4-43b0-98d2-52a448e0f6d7",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1951-12-08T02:41:32.231Z\",\n \"status\": -336911,\n \"error\": \"ea dolor Duis nulla\",\n \"exception\": \"ad dolore deserunt dolor\",\n \"message\": \"dolore magna ad est dolore\",\n \"total_time_taken_in_millis\": 16721228,\n \"http_status\": \"302 FOUND\",\n \"items\": {\n  \"company_id\": -38059961,\n  \"integration_data\": {},\n  \"company_name\": \"in\",\n  \"task_details\": {\n   \"type\": -15545499,\n   \"group_list\": [\n    {\n     \"text\": \"ea enim mollit ut\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"incididunt irure\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 37145493.34654337,\n   \"safe_stock\": 86744624,\n   \"period_threshold\": 87083803,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"fugiat Ut quis cillum\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ad proident ut magna\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"consequat voluptate\",\n  \"alias\": \"id\"\n },\n \"payload\": {\n  \"company_id\": 45495545,\n  \"integration_data\": {},\n  \"company_name\": \"Ut ullamco id tempor\",\n  \"task_details\": {\n   \"type\": -13230920,\n   \"group_list\": [\n    {\n     \"text\": \"quis\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"officia incididunt\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 1164967.2133265287,\n   \"safe_stock\": -5629649,\n   \"period_threshold\": 13553829,\n   \"period_threshold_type\": \"WEEKS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"laboris non de\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"velit\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"magna nulla sunt\",\n  \"alias\": \"culpa aute consectetur\"\n },\n \"trace_id\": \"mollit ut laborum\",\n \"page\": {\n  \"type\": \"sint commodo tempor\",\n  \"size\": 99556784,\n  \"current\": 28770998,\n  \"has_next\": true,\n  \"item_total\": 97865706,\n  \"next_id\": \"tempor commodo nisi aliqua\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3bb04933-dfbb-4780-af9a-800c8b3628c9",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1951-12-08T02:41:32.231Z\",\n \"status\": -336911,\n \"error\": \"ea dolor Duis nulla\",\n \"exception\": \"ad dolore deserunt dolor\",\n \"message\": \"dolore magna ad est dolore\",\n \"total_time_taken_in_millis\": 16721228,\n \"http_status\": \"302 FOUND\",\n \"items\": {\n  \"company_id\": -38059961,\n  \"integration_data\": {},\n  \"company_name\": \"in\",\n  \"task_details\": {\n   \"type\": -15545499,\n   \"group_list\": [\n    {\n     \"text\": \"ea enim mollit ut\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"incididunt irure\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 37145493.34654337,\n   \"safe_stock\": 86744624,\n   \"period_threshold\": 87083803,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"fugiat Ut quis cillum\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ad proident ut magna\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"consequat voluptate\",\n  \"alias\": \"id\"\n },\n \"payload\": {\n  \"company_id\": 45495545,\n  \"integration_data\": {},\n  \"company_name\": \"Ut ullamco id tempor\",\n  \"task_details\": {\n   \"type\": -13230920,\n   \"group_list\": [\n    {\n     \"text\": \"quis\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"officia incididunt\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 1164967.2133265287,\n   \"safe_stock\": -5629649,\n   \"period_threshold\": 13553829,\n   \"period_threshold_type\": \"WEEKS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"laboris non de\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"velit\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"magna nulla sunt\",\n  \"alias\": \"culpa aute consectetur\"\n },\n \"trace_id\": \"mollit ut laborum\",\n \"page\": {\n  \"type\": \"sint commodo tempor\",\n  \"size\": 99556784,\n  \"current\": 28770998,\n  \"has_next\": true,\n  \"item_total\": 97865706,\n  \"next_id\": \"tempor commodo nisi aliqua\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "58c74ae3-269a-4789-8bc4-a7861467b03c",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "4732dc51-bc49-4de8-ae5d-087e37a80922",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1954-11-30T08:32:03.397Z\",\n \"status\": 77078630,\n \"error\": \"ex culpa\",\n \"exception\": \"et nulla\",\n \"message\": \"quis labore sint\",\n \"total_time_taken_in_millis\": 40387876,\n \"http_status\": \"414 URI_TOO_LONG\",\n \"items\": [\n  {\n   \"company_id\": 1336633,\n   \"integration_data\": {},\n   \"company_name\": \"consequat\",\n   \"task_details\": {\n    \"type\": 40937592,\n    \"group_list\": [\n     {\n      \"text\": \"sed magna ea cupidatat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sint consequat nostrud\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -97300744.87666185,\n    \"safe_stock\": -30533945,\n    \"period_threshold\": -16823967,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"eu in ullamco Ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in qui nisi\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aliquip exercitation veniam velit\",\n   \"alias\": \"deserunt \"\n  },\n  {\n   \"company_id\": 86262077,\n   \"integration_data\": {},\n   \"company_name\": \"anim\",\n   \"task_details\": {\n    \"type\": -6794954,\n    \"group_list\": [\n     {\n      \"text\": \"ut elit te\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliquip deserunt ex pariatur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -21902537.557391092,\n    \"safe_stock\": -85260669,\n    \"period_threshold\": 72885932,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"magna dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor aute\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Duis laborum fugiat do aliquip\",\n   \"alias\": \"est\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -35398509,\n   \"integration_data\": {},\n   \"company_name\": \"consectetur cupidatat\",\n   \"task_details\": {\n    \"type\": 32530250,\n    \"group_list\": [\n     {\n      \"text\": \"magna\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"non adipisicing\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -67605820.1238619,\n    \"safe_stock\": -55715424,\n    \"period_threshold\": -48920340,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"magna\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"adipisicing in aute Duis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"labore amet elit eu\",\n   \"alias\": \"sit velit\"\n  },\n  {\n   \"company_id\": 32741570,\n   \"integration_data\": {},\n   \"company_name\": \"aute eu ipsum\",\n   \"task_details\": {\n    \"type\": 99546976,\n    \"group_list\": [\n     {\n      \"text\": \"co\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ullamco eu\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -2149426.070270762,\n    \"safe_stock\": -54616737,\n    \"period_threshold\": -25396776,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"eu incididunt dolor sed\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"labori\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"pariatur \",\n   \"alias\": \"Lorem exercitation ea sint\"\n  }\n ],\n \"trace_id\": \"eiusmod\",\n \"page\": {\n  \"type\": \"deserunt ea\",\n  \"size\": 31892365,\n  \"current\": -79780053,\n  \"has_next\": true,\n  \"item_total\": -4420117,\n  \"next_id\": \"amet dolor\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9d673442-a89a-479a-8071-be9da5b446df",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1958-07-12T11:20:27.215Z\",\n \"status\": -245274,\n \"error\": \"elit Excepteur\",\n \"exception\": \"Excepteur irure labore nostrud\",\n \"message\": \"ullamco exercitation dolor\",\n \"total_time_taken_in_millis\": -21854549,\n \"http_status\": \"304 NOT_MODIFIED\",\n \"items\": [\n  {\n   \"company_id\": 8537983,\n   \"integration_data\": {},\n   \"company_name\": \"in ipsum\",\n   \"task_details\": {\n    \"type\": -27246345,\n    \"group_list\": [\n     {\n      \"text\": \"amet ex elit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"magna quis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 23539754.735435054,\n    \"safe_stock\": 2044453,\n    \"period_threshold\": 42696240,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ut nisi\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cupidatat non\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"fugiat laborum\",\n   \"alias\": \"reprehenderit magna\"\n  },\n  {\n   \"company_id\": 81205922,\n   \"integration_data\": {},\n   \"company_name\": \"ex ipsum ad sed eiusmod\",\n   \"task_details\": {\n    \"type\": 71896751,\n    \"group_list\": [\n     {\n      \"text\": \"eu esse culpa\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"velit ipsum anim voluptate labore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 95254630.73195532,\n    \"safe_stock\": 8184950,\n    \"period_threshold\": 53658967,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolor elit Lorem sunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"veniam tempor incididunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sunt\",\n   \"alias\": \"ullamco ut do magna\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 36792328,\n   \"integration_data\": {},\n   \"company_name\": \"culpa nisi\",\n   \"task_details\": {\n    \"type\": 11624108,\n    \"group_list\": [\n     {\n      \"text\": \"cupidatat minim esse culpa\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliqua veniam incididunt sed\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 79699485.5243128,\n    \"safe_stock\": -49733198,\n    \"period_threshold\": 75659397,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ut id dolor velit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"occaecat eu Duis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"est reprehenderit in ipsum\",\n   \"alias\": \"reprehenderit quis tempor adipisicing nisi\"\n  },\n  {\n   \"company_id\": -95277204,\n   \"integration_data\": {},\n   \"company_name\": \"dolor enim\",\n   \"task_details\": {\n    \"type\": 90911060,\n    \"group_list\": [\n     {\n      \"text\": \"proident ad deserunt eiusmod\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"culpa occaecat fugiat exercitation\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -54112179.924253926,\n    \"safe_stock\": 23988629,\n    \"period_threshold\": 17661793,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"minim commodo tempor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"amet ea in in do\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ess\",\n   \"alias\": \"tempor ullamco quis reprehenderit esse\"\n  }\n ],\n \"trace_id\": \"culpa\",\n \"page\": {\n  \"type\": \"minim aute ut\",\n  \"size\": -39372595,\n  \"current\": -27649764,\n  \"has_next\": false,\n  \"item_total\": -98892541,\n  \"next_id\": \"sit cillum dolor\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e6e1f593-763c-4ded-9afc-c339de76de7f",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1958-07-12T11:20:27.215Z\",\n \"status\": -245274,\n \"error\": \"elit Excepteur\",\n \"exception\": \"Excepteur irure labore nostrud\",\n \"message\": \"ullamco exercitation dolor\",\n \"total_time_taken_in_millis\": -21854549,\n \"http_status\": \"304 NOT_MODIFIED\",\n \"items\": [\n  {\n   \"company_id\": 8537983,\n   \"integration_data\": {},\n   \"company_name\": \"in ipsum\",\n   \"task_details\": {\n    \"type\": -27246345,\n    \"group_list\": [\n     {\n      \"text\": \"amet ex elit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"magna quis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 23539754.735435054,\n    \"safe_stock\": 2044453,\n    \"period_threshold\": 42696240,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ut nisi\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cupidatat non\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"fugiat laborum\",\n   \"alias\": \"reprehenderit magna\"\n  },\n  {\n   \"company_id\": 81205922,\n   \"integration_data\": {},\n   \"company_name\": \"ex ipsum ad sed eiusmod\",\n   \"task_details\": {\n    \"type\": 71896751,\n    \"group_list\": [\n     {\n      \"text\": \"eu esse culpa\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"velit ipsum anim voluptate labore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 95254630.73195532,\n    \"safe_stock\": 8184950,\n    \"period_threshold\": 53658967,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolor elit Lorem sunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"veniam tempor incididunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sunt\",\n   \"alias\": \"ullamco ut do magna\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 36792328,\n   \"integration_data\": {},\n   \"company_name\": \"culpa nisi\",\n   \"task_details\": {\n    \"type\": 11624108,\n    \"group_list\": [\n     {\n      \"text\": \"cupidatat minim esse culpa\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliqua veniam incididunt sed\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 79699485.5243128,\n    \"safe_stock\": -49733198,\n    \"period_threshold\": 75659397,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ut id dolor velit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"occaecat eu Duis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"est reprehenderit in ipsum\",\n   \"alias\": \"reprehenderit quis tempor adipisicing nisi\"\n  },\n  {\n   \"company_id\": -95277204,\n   \"integration_data\": {},\n   \"company_name\": \"dolor enim\",\n   \"task_details\": {\n    \"type\": 90911060,\n    \"group_list\": [\n     {\n      \"text\": \"proident ad deserunt eiusmod\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"culpa occaecat fugiat exercitation\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -54112179.924253926,\n    \"safe_stock\": 23988629,\n    \"period_threshold\": 17661793,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"minim commodo tempor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"amet ea in in do\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ess\",\n   \"alias\": \"tempor ullamco quis reprehenderit esse\"\n  }\n ],\n \"trace_id\": \"culpa\",\n \"page\": {\n  \"type\": \"minim aute ut\",\n  \"size\": -39372595,\n  \"current\": -27649764,\n  \"has_next\": false,\n  \"item_total\": -98892541,\n  \"next_id\": \"sit cillum dolor\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "9270fb28-5a16-43b1-aeea-e8b08ca80b8c",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "0921dab3-60cb-49d0-976d-abc588017273",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1994-12-23T01:46:25.587Z\",\n \"status\": 9576224,\n \"error\": \"veniam\",\n \"exception\": \"in amet ullamco tempor\",\n \"message\": \"dolore amet paria\",\n \"total_time_taken_in_millis\": 60218038,\n \"http_status\": \"204 NO_CONTENT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"laboris ut\",\n \"page\": {\n  \"type\": \"voluptate occaecat ut\",\n  \"size\": -96644336,\n  \"current\": -18200566,\n  \"has_next\": false,\n  \"item_total\": 50817176,\n  \"next_id\": \"occaecat labore dolore pariatur anim\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e3121969-b2b2-495c-aae5-6378e86e4469",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1994-12-23T01:46:25.587Z\",\n \"status\": 9576224,\n \"error\": \"veniam\",\n \"exception\": \"in amet ullamco tempor\",\n \"message\": \"dolore amet paria\",\n \"total_time_taken_in_millis\": 60218038,\n \"http_status\": \"204 NO_CONTENT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"laboris ut\",\n \"page\": {\n  \"type\": \"voluptate occaecat ut\",\n  \"size\": -96644336,\n  \"current\": -18200566,\n  \"has_next\": false,\n  \"item_total\": 50817176,\n  \"next_id\": \"occaecat labore dolore pariatur anim\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "191ba4c7-d36d-4a4e-a177-32cf9c9c7ff4",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1994-12-23T01:46:25.587Z\",\n \"status\": 9576224,\n \"error\": \"veniam\",\n \"exception\": \"in amet ullamco tempor\",\n \"message\": \"dolore amet paria\",\n \"total_time_taken_in_millis\": 60218038,\n \"http_status\": \"204 NO_CONTENT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"laboris ut\",\n \"page\": {\n  \"type\": \"voluptate occaecat ut\",\n  \"size\": -96644336,\n  \"current\": -18200566,\n  \"has_next\": false,\n  \"item_total\": 50817176,\n  \"next_id\": \"occaecat labore dolore pariatur anim\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "218b2347-8964-44c1-a370-4d290e820b2c",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "b4f1e1d8-82fd-468d-b5b8-99baeb9de3aa",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1976-08-14T12:49:31.291Z\",\n \"status\": -39870916,\n \"error\": \"do\",\n \"exception\": \"elit ad fugiat\",\n \"message\": \"Ut commodo tempor deserunt sed\",\n \"total_time_taken_in_millis\": 8389133,\n \"http_status\": \"413 REQUEST_ENTITY_TOO_LARGE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ut Excepteur in ullamco occaecat\",\n \"page\": {\n  \"type\": \"veniam consequat incididunt\",\n  \"size\": 91934799,\n  \"current\": -25126321,\n  \"has_next\": true,\n  \"item_total\": -14958279,\n  \"next_id\": \"pariatur in Ut irure dolore\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "7e9cae95-3f26-4d19-876d-733a47d67ca4",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1976-08-14T12:49:31.291Z\",\n \"status\": -39870916,\n \"error\": \"do\",\n \"exception\": \"elit ad fugiat\",\n \"message\": \"Ut commodo tempor deserunt sed\",\n \"total_time_taken_in_millis\": 8389133,\n \"http_status\": \"413 REQUEST_ENTITY_TOO_LARGE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ut Excepteur in ullamco occaecat\",\n \"page\": {\n  \"type\": \"veniam consequat incididunt\",\n  \"size\": 91934799,\n  \"current\": -25126321,\n  \"has_next\": true,\n  \"item_total\": -14958279,\n  \"next_id\": \"pariatur in Ut irure dolore\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a6ba8230-522e-4d40-8641-34f708e91967",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1976-08-14T12:49:31.291Z\",\n \"status\": -39870916,\n \"error\": \"do\",\n \"exception\": \"elit ad fugiat\",\n \"message\": \"Ut commodo tempor deserunt sed\",\n \"total_time_taken_in_millis\": 8389133,\n \"http_status\": \"413 REQUEST_ENTITY_TOO_LARGE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ut Excepteur in ullamco occaecat\",\n \"page\": {\n  \"type\": \"veniam consequat incididunt\",\n  \"size\": 91934799,\n  \"current\": -25126321,\n  \"has_next\": true,\n  \"item_total\": -14958279,\n  \"next_id\": \"pariatur in Ut irure dolore\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "58bd841c-c6b9-4e2e-80d9-f1861b77853d",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1976-08-14T12:49:31.291Z\",\n \"status\": -39870916,\n \"error\": \"do\",\n \"exception\": \"elit ad fugiat\",\n \"message\": \"Ut commodo tempor deserunt sed\",\n \"total_time_taken_in_millis\": 8389133,\n \"http_status\": \"413 REQUEST_ENTITY_TOO_LARGE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ut Excepteur in ullamco occaecat\",\n \"page\": {\n  \"type\": \"veniam consequat incididunt\",\n  \"size\": 91934799,\n  \"current\": -25126321,\n  \"has_next\": true,\n  \"item_total\": -14958279,\n  \"next_id\": \"pariatur in Ut irure dolore\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "209a3735-f7aa-43c8-90e6-54a3658ef02f",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1976-08-14T12:49:31.291Z\",\n \"status\": -39870916,\n \"error\": \"do\",\n \"exception\": \"elit ad fugiat\",\n \"message\": \"Ut commodo tempor deserunt sed\",\n \"total_time_taken_in_millis\": 8389133,\n \"http_status\": \"413 REQUEST_ENTITY_TOO_LARGE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ut Excepteur in ullamco occaecat\",\n \"page\": {\n  \"type\": \"veniam consequat incididunt\",\n  \"size\": 91934799,\n  \"current\": -25126321,\n  \"has_next\": true,\n  \"item_total\": -14958279,\n  \"next_id\": \"pariatur in Ut irure dolore\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.jmpx3.de"
    }
  ],
  "info": {
    "_postman_id": "c016de95-e147-417d-8002-15db691071a7",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
