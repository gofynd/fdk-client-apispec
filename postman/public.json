{
  "item": [
    {
      "id": "02bb09ac-9f0f-4c73-afb7-8c1dc42d8a50",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "76ee7e5f-bd4a-430a-9e9c-e7bb4b0cbbdf",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "4e88b692-113f-4ce8-88ba-5e05a81b5481",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "in",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "407052e9-739b-4b4b-b31f-63803aeffd7d",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "in",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"Invalid application domain or id.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a54e4323-7fed-4ede-a657-97d4bb995c17",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "in",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "5a6c3017-aa22-414c-b53b-9989f2ce68dc",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "1fcd5cd0-c570-45b3-8f55-7578dcdeeb37",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "a417089a-03ab-4a43-af61-7b025aa875f6",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "84905325-dfaa-4c2b-acef-d45afaf67999",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "654c8892-277e-4c05-a942-58dda232e09f",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 3826983,\n   \"event_name\": \"dolore voluptate cillum amet\",\n   \"event_type\": \"eiusmod laborum labore par\",\n   \"event_category\": \"ad reprehenderit\",\n   \"version\": \"reprehenderit\",\n   \"display_name\": \"Excepteur irure id culpa sed\",\n   \"description\": \"dolor non\",\n   \"created_on\": \"nisi enim exercitation\"\n  },\n  {\n   \"id\": -72643692,\n   \"event_name\": \"ad sint\",\n   \"event_type\": \"amet\",\n   \"event_category\": \"in cillum consectetur sit\",\n   \"version\": \"Excepteur\",\n   \"display_name\": \"mollit qui nulla officia occaecat\",\n   \"description\": \"quis est Lorem ea\",\n   \"created_on\": \"nostrud amet \"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "eea5e6f4-7484-467e-8c8c-ad4bf138a719",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "11a3a9a3-cffa-4d98-9623-799a73a225c7",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -27822222,\n   \"event_name\": \"laborum ut\",\n   \"event_type\": \"ipsum eiusmod enim\",\n   \"event_category\": \"officia adipisicing exercitation\",\n   \"version\": \"proident\",\n   \"display_name\": \"dolor aliqua\",\n   \"description\": \"voluptate Duis\",\n   \"created_on\": \"quis sunt voluptate\"\n  },\n  {\n   \"id\": 22480313,\n   \"event_name\": \"anim consequat\",\n   \"event_type\": \"amet aliqua\",\n   \"event_category\": \"e\",\n   \"version\": \"amet laborum sint\",\n   \"display_name\": \"irure fugiat amet\",\n   \"description\": \"laboris elit\",\n   \"created_on\": \"est cupidatat ut\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "9751c087-cbea-4676-ad09-82323bcc9f6e",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "6cd83143-019c-440b-8610-54f446e06a84",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "472ef4bf-3477-4be2-8959-ef7f855cd60c",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2007-05-22T06:14:11.532Z\",\n \"status\": 93722596,\n \"error\": \"aliquip ut in occaecat\",\n \"exception\": \"amet aute officia qu\",\n \"message\": \"enim Lorem qui occaecat\",\n \"total_time_taken_in_millis\": 783657,\n \"http_status\": \"421 DESTINATION_LOCKED\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"sit laborum\",\n   \"description\": \"qui\",\n   \"name\": \"nulla in culpa est labore\",\n   \"slug\": \"amet aliqua\",\n   \"meta\": [\n    {\n     \"_id\": \"tempor commodo\",\n     \"name\": \"sed eiusmod ut quis\",\n     \"value\": \"ea minim Duis incididunt\"\n    },\n    {\n     \"_id\": \"est aliqua voluptate Lorem\",\n     \"name\": \"minim\",\n     \"value\": \"ex qui sit laboris nostrud\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"aliqua laborum\",\n    \"integration\": \"sint occaecat nisi\",\n    \"level\": \"dolor Lorem in et\",\n    \"uid\": 13163850,\n    \"opted\": false,\n    \"permissions\": [\n     \"in\",\n     \"ut cupidatat eiusmod\"\n    ],\n    \"token\": \"nostrud occaecat id\",\n    \"name\": \"ipsum ani\",\n    \"stores\": [\n     {\n      \"_id\": \"laborum reprehenderit incididunt dolor\",\n      \"integration\": \"tempor sint\",\n      \"level\": \"Duis reprehenderit veniam in exercitation\",\n      \"uid\": 19092819,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"voluptate et consectetur\",\n      \"code\": \"quis est dolore nostrud\",\n      \"name\": \"ut non officia consequa\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"velit aute commodo fugiat ut\",\n      \"integration\": \"commodo anim Lor\",\n      \"level\": \"cillum ut sunt Ut\",\n      \"uid\": 1631278,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"pariatur\",\n      \"code\": \"laborum cupidatat Ut\",\n      \"name\": \"nostrud ex nulla\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"Lorem\",\n      \"integration\": \"sed reprehenderit\",\n      \"level\": \"ex eu\",\n      \"uid\": -44675453,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"occaecat id culpa anim\",\n      \"code\": \"labore\",\n      \"name\": \"Duis irure sunt nostrud\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"tempor\",\n      \"integration\": \"Ut\",\n      \"level\": \"co\",\n      \"uid\": 91272114,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"exercitation anim et aliqua minim\",\n      \"code\": \"reprehenderit ut Excepteur\",\n      \"name\": \"irure aliquip ad in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"minim ut sed\",\n    \"integration\": \"et incididunt occaecat aliquip dolore\",\n    \"level\": \"in ad mollit\",\n    \"uid\": 98599032,\n    \"opted\": true,\n    \"permissions\": [\n     \"irure anim minim ut id\",\n     \"dolore\"\n    ],\n    \"token\": \"aute \",\n    \"name\": \"qui in dolore\",\n    \"stores\": [\n     {\n      \"_id\": \"dolor sint enim eiusmod\",\n      \"integration\": \"sed Lorem nisi\",\n      \"level\": \"non Ut mollit est\",\n      \"uid\": -18937308,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in \",\n      \"code\": \"sint culpa amet voluptate\",\n      \"name\": \"incididunt nisi\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"laboris exercitation dolore\",\n      \"integration\": \"eiusmod magna do dolore\",\n      \"level\": \"Duis dolor voluptate\",\n      \"uid\": 60279466,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ut adipisicing eiusmod\",\n      \"code\": \"voluptate\",\n      \"name\": \"voluptate qui mollit laborum\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"sint fugiat elit\",\n      \"integration\": \"in culpa ut\",\n      \"level\": \"ad est laborum consequat\",\n      \"uid\": -87608265,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"do\",\n      \"code\": \"eu adipisicing\",\n      \"name\": \"tempor culpa non i\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"in\",\n      \"integration\": \"voluptate Ut in anim\",\n      \"level\": \"in veniam ut aliquip in\",\n      \"uid\": 29829497,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"aliqua dolore elit enim\",\n      \"code\": \"esse nisi fugiat\",\n      \"name\": \"in sit\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"incididunt officia ad commodo\",\n   \"description\": \"do eu Lorem\",\n   \"name\": \"adipisicing quis cillum\",\n   \"slug\": \"ullamco in proident\",\n   \"meta\": [\n    {\n     \"_id\": \"in magna irure velit\",\n     \"name\": \"mollit\",\n     \"value\": \"magna do\"\n    },\n    {\n     \"_id\": \"dolore\",\n     \"name\": \"incididunt veniam ut ex\",\n     \"value\": \"laboris pariatur ea\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"aliquip incididunt mollit aute\",\n    \"integration\": \"occaecat voluptate veni\",\n    \"level\": \"culpa commodo velit\",\n    \"uid\": 18617397,\n    \"opted\": true,\n    \"permissions\": [\n     \"deserunt laborum nostrud\",\n     \"nulla dolor laborum esse\"\n    ],\n    \"token\": \"occaecat et aliquip\",\n    \"name\": \"dolor tempor minim esse\",\n    \"stores\": [\n     {\n      \"_id\": \"in\",\n      \"integration\": \"exercitation tempor\",\n      \"level\": \"sed reprehenderit elit\",\n      \"uid\": 89813649,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"labore proident incididunt\",\n      \"code\": \"ut laboris anim dolor\",\n      \"name\": \"voluptate enim in ea\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"officia consequat\",\n      \"integration\": \"nostrud in deserunt\",\n      \"level\": \"nisi amet esse est\",\n      \"uid\": -67177694,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"deserunt sint nulla ipsum est\",\n      \"code\": \"consequat cillum cupidatat commodo\",\n      \"name\": \"cillum quis in qui\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"nostrud eiusmod\",\n      \"integration\": \"deserunt ut\",\n      \"level\": \"dolor in id voluptate enim\",\n      \"uid\": -4118225,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"cillum culpa Ut exercitation\",\n      \"code\": \"proident ad laboris\",\n      \"name\": \"aute\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"consequat adipisicing ad in\",\n      \"integration\": \"non anim sit\",\n      \"level\": \"sit laboris\",\n      \"uid\": -3272401,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"deserunt do laborum Excepteur\",\n      \"code\": \"proident laborum sint\",\n      \"name\": \"eu non occaecat in quis\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"ea commodo in\",\n    \"integration\": \"dolore officia\",\n    \"level\": \"nulla deserunt velit\",\n    \"uid\": 45780244,\n    \"opted\": true,\n    \"permissions\": [\n     \"Excepteur aliquip\",\n     \"pariatur velit veniam\"\n    ],\n    \"token\": \"labore pariatur elit in\",\n    \"name\": \"tempor pr\",\n    \"stores\": [\n     {\n      \"_id\": \"labore\",\n      \"integration\": \"nostrud laborum cupidatat\",\n      \"level\": \"labore exercitation dolor\",\n      \"uid\": 98946291,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"pariatur Lorem laboris Ut fugiat\",\n      \"code\": \"officia ut adipisicing in esse\",\n      \"name\": \"ut qui deserunt nulla\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"non dolor in amet\",\n      \"integration\": \"nostrud Lorem et\",\n      \"level\": \"veniam aute velit ea voluptate\",\n      \"uid\": 40728546,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ullamco ex\",\n      \"code\": \"nostrud in dolore cillum\",\n      \"name\": \"quis eu labore dolore elit\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"in quis Excepteur ex\",\n      \"integration\": \"ipsum voluptate\",\n      \"level\": \"magna\",\n      \"uid\": -61174746,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"qui sit\",\n      \"code\": \"ipsum sed in irure aliqua\",\n      \"name\": \"proident dolore deserunt adipisicing\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"elit anim\",\n      \"integration\": \"minim dolor incididunt\",\n      \"level\": \"reprehenderit nulla ipsum\",\n      \"uid\": 93286423,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Lorem sit ea dolore\",\n      \"code\": \"dolor ipsum tempor\",\n      \"name\": \"pariatur deserunt qui id\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"anim est dolor\",\n \"page\": {\n  \"type\": \"commodo fugiat in\",\n  \"size\": 70736237,\n  \"current\": -29608529,\n  \"has_next\": false,\n  \"item_total\": -80863804,\n  \"next_id\": \"sint Excepteur enim Duis\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e591ab64-4614-455f-bdc2-bf7cfffd9ff3",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2007-05-22T06:14:11.532Z\",\n \"status\": 93722596,\n \"error\": \"aliquip ut in occaecat\",\n \"exception\": \"amet aute officia qu\",\n \"message\": \"enim Lorem qui occaecat\",\n \"total_time_taken_in_millis\": 783657,\n \"http_status\": \"421 DESTINATION_LOCKED\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"sit laborum\",\n   \"description\": \"qui\",\n   \"name\": \"nulla in culpa est labore\",\n   \"slug\": \"amet aliqua\",\n   \"meta\": [\n    {\n     \"_id\": \"tempor commodo\",\n     \"name\": \"sed eiusmod ut quis\",\n     \"value\": \"ea minim Duis incididunt\"\n    },\n    {\n     \"_id\": \"est aliqua voluptate Lorem\",\n     \"name\": \"minim\",\n     \"value\": \"ex qui sit laboris nostrud\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"aliqua laborum\",\n    \"integration\": \"sint occaecat nisi\",\n    \"level\": \"dolor Lorem in et\",\n    \"uid\": 13163850,\n    \"opted\": false,\n    \"permissions\": [\n     \"in\",\n     \"ut cupidatat eiusmod\"\n    ],\n    \"token\": \"nostrud occaecat id\",\n    \"name\": \"ipsum ani\",\n    \"stores\": [\n     {\n      \"_id\": \"laborum reprehenderit incididunt dolor\",\n      \"integration\": \"tempor sint\",\n      \"level\": \"Duis reprehenderit veniam in exercitation\",\n      \"uid\": 19092819,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"voluptate et consectetur\",\n      \"code\": \"quis est dolore nostrud\",\n      \"name\": \"ut non officia consequa\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"velit aute commodo fugiat ut\",\n      \"integration\": \"commodo anim Lor\",\n      \"level\": \"cillum ut sunt Ut\",\n      \"uid\": 1631278,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"pariatur\",\n      \"code\": \"laborum cupidatat Ut\",\n      \"name\": \"nostrud ex nulla\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"Lorem\",\n      \"integration\": \"sed reprehenderit\",\n      \"level\": \"ex eu\",\n      \"uid\": -44675453,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"occaecat id culpa anim\",\n      \"code\": \"labore\",\n      \"name\": \"Duis irure sunt nostrud\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"tempor\",\n      \"integration\": \"Ut\",\n      \"level\": \"co\",\n      \"uid\": 91272114,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"exercitation anim et aliqua minim\",\n      \"code\": \"reprehenderit ut Excepteur\",\n      \"name\": \"irure aliquip ad in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"minim ut sed\",\n    \"integration\": \"et incididunt occaecat aliquip dolore\",\n    \"level\": \"in ad mollit\",\n    \"uid\": 98599032,\n    \"opted\": true,\n    \"permissions\": [\n     \"irure anim minim ut id\",\n     \"dolore\"\n    ],\n    \"token\": \"aute \",\n    \"name\": \"qui in dolore\",\n    \"stores\": [\n     {\n      \"_id\": \"dolor sint enim eiusmod\",\n      \"integration\": \"sed Lorem nisi\",\n      \"level\": \"non Ut mollit est\",\n      \"uid\": -18937308,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in \",\n      \"code\": \"sint culpa amet voluptate\",\n      \"name\": \"incididunt nisi\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"laboris exercitation dolore\",\n      \"integration\": \"eiusmod magna do dolore\",\n      \"level\": \"Duis dolor voluptate\",\n      \"uid\": 60279466,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ut adipisicing eiusmod\",\n      \"code\": \"voluptate\",\n      \"name\": \"voluptate qui mollit laborum\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"sint fugiat elit\",\n      \"integration\": \"in culpa ut\",\n      \"level\": \"ad est laborum consequat\",\n      \"uid\": -87608265,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"do\",\n      \"code\": \"eu adipisicing\",\n      \"name\": \"tempor culpa non i\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"in\",\n      \"integration\": \"voluptate Ut in anim\",\n      \"level\": \"in veniam ut aliquip in\",\n      \"uid\": 29829497,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"aliqua dolore elit enim\",\n      \"code\": \"esse nisi fugiat\",\n      \"name\": \"in sit\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"incididunt officia ad commodo\",\n   \"description\": \"do eu Lorem\",\n   \"name\": \"adipisicing quis cillum\",\n   \"slug\": \"ullamco in proident\",\n   \"meta\": [\n    {\n     \"_id\": \"in magna irure velit\",\n     \"name\": \"mollit\",\n     \"value\": \"magna do\"\n    },\n    {\n     \"_id\": \"dolore\",\n     \"name\": \"incididunt veniam ut ex\",\n     \"value\": \"laboris pariatur ea\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"aliquip incididunt mollit aute\",\n    \"integration\": \"occaecat voluptate veni\",\n    \"level\": \"culpa commodo velit\",\n    \"uid\": 18617397,\n    \"opted\": true,\n    \"permissions\": [\n     \"deserunt laborum nostrud\",\n     \"nulla dolor laborum esse\"\n    ],\n    \"token\": \"occaecat et aliquip\",\n    \"name\": \"dolor tempor minim esse\",\n    \"stores\": [\n     {\n      \"_id\": \"in\",\n      \"integration\": \"exercitation tempor\",\n      \"level\": \"sed reprehenderit elit\",\n      \"uid\": 89813649,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"labore proident incididunt\",\n      \"code\": \"ut laboris anim dolor\",\n      \"name\": \"voluptate enim in ea\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"officia consequat\",\n      \"integration\": \"nostrud in deserunt\",\n      \"level\": \"nisi amet esse est\",\n      \"uid\": -67177694,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"deserunt sint nulla ipsum est\",\n      \"code\": \"consequat cillum cupidatat commodo\",\n      \"name\": \"cillum quis in qui\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"nostrud eiusmod\",\n      \"integration\": \"deserunt ut\",\n      \"level\": \"dolor in id voluptate enim\",\n      \"uid\": -4118225,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"cillum culpa Ut exercitation\",\n      \"code\": \"proident ad laboris\",\n      \"name\": \"aute\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"consequat adipisicing ad in\",\n      \"integration\": \"non anim sit\",\n      \"level\": \"sit laboris\",\n      \"uid\": -3272401,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"deserunt do laborum Excepteur\",\n      \"code\": \"proident laborum sint\",\n      \"name\": \"eu non occaecat in quis\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"ea commodo in\",\n    \"integration\": \"dolore officia\",\n    \"level\": \"nulla deserunt velit\",\n    \"uid\": 45780244,\n    \"opted\": true,\n    \"permissions\": [\n     \"Excepteur aliquip\",\n     \"pariatur velit veniam\"\n    ],\n    \"token\": \"labore pariatur elit in\",\n    \"name\": \"tempor pr\",\n    \"stores\": [\n     {\n      \"_id\": \"labore\",\n      \"integration\": \"nostrud laborum cupidatat\",\n      \"level\": \"labore exercitation dolor\",\n      \"uid\": 98946291,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"pariatur Lorem laboris Ut fugiat\",\n      \"code\": \"officia ut adipisicing in esse\",\n      \"name\": \"ut qui deserunt nulla\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"non dolor in amet\",\n      \"integration\": \"nostrud Lorem et\",\n      \"level\": \"veniam aute velit ea voluptate\",\n      \"uid\": 40728546,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ullamco ex\",\n      \"code\": \"nostrud in dolore cillum\",\n      \"name\": \"quis eu labore dolore elit\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"in quis Excepteur ex\",\n      \"integration\": \"ipsum voluptate\",\n      \"level\": \"magna\",\n      \"uid\": -61174746,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"qui sit\",\n      \"code\": \"ipsum sed in irure aliqua\",\n      \"name\": \"proident dolore deserunt adipisicing\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"elit anim\",\n      \"integration\": \"minim dolor incididunt\",\n      \"level\": \"reprehenderit nulla ipsum\",\n      \"uid\": 93286423,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Lorem sit ea dolore\",\n      \"code\": \"dolor ipsum tempor\",\n      \"name\": \"pariatur deserunt qui id\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"anim est dolor\",\n \"page\": {\n  \"type\": \"commodo fugiat in\",\n  \"size\": 70736237,\n  \"current\": -29608529,\n  \"has_next\": false,\n  \"item_total\": -80863804,\n  \"next_id\": \"sint Excepteur enim Duis\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1a3528fe-a67d-467c-a87c-ba9750aca490",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2007-05-22T06:14:11.532Z\",\n \"status\": 93722596,\n \"error\": \"aliquip ut in occaecat\",\n \"exception\": \"amet aute officia qu\",\n \"message\": \"enim Lorem qui occaecat\",\n \"total_time_taken_in_millis\": 783657,\n \"http_status\": \"421 DESTINATION_LOCKED\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"sit laborum\",\n   \"description\": \"qui\",\n   \"name\": \"nulla in culpa est labore\",\n   \"slug\": \"amet aliqua\",\n   \"meta\": [\n    {\n     \"_id\": \"tempor commodo\",\n     \"name\": \"sed eiusmod ut quis\",\n     \"value\": \"ea minim Duis incididunt\"\n    },\n    {\n     \"_id\": \"est aliqua voluptate Lorem\",\n     \"name\": \"minim\",\n     \"value\": \"ex qui sit laboris nostrud\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"aliqua laborum\",\n    \"integration\": \"sint occaecat nisi\",\n    \"level\": \"dolor Lorem in et\",\n    \"uid\": 13163850,\n    \"opted\": false,\n    \"permissions\": [\n     \"in\",\n     \"ut cupidatat eiusmod\"\n    ],\n    \"token\": \"nostrud occaecat id\",\n    \"name\": \"ipsum ani\",\n    \"stores\": [\n     {\n      \"_id\": \"laborum reprehenderit incididunt dolor\",\n      \"integration\": \"tempor sint\",\n      \"level\": \"Duis reprehenderit veniam in exercitation\",\n      \"uid\": 19092819,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"voluptate et consectetur\",\n      \"code\": \"quis est dolore nostrud\",\n      \"name\": \"ut non officia consequa\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"velit aute commodo fugiat ut\",\n      \"integration\": \"commodo anim Lor\",\n      \"level\": \"cillum ut sunt Ut\",\n      \"uid\": 1631278,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"pariatur\",\n      \"code\": \"laborum cupidatat Ut\",\n      \"name\": \"nostrud ex nulla\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"Lorem\",\n      \"integration\": \"sed reprehenderit\",\n      \"level\": \"ex eu\",\n      \"uid\": -44675453,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"occaecat id culpa anim\",\n      \"code\": \"labore\",\n      \"name\": \"Duis irure sunt nostrud\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"tempor\",\n      \"integration\": \"Ut\",\n      \"level\": \"co\",\n      \"uid\": 91272114,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"exercitation anim et aliqua minim\",\n      \"code\": \"reprehenderit ut Excepteur\",\n      \"name\": \"irure aliquip ad in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"minim ut sed\",\n    \"integration\": \"et incididunt occaecat aliquip dolore\",\n    \"level\": \"in ad mollit\",\n    \"uid\": 98599032,\n    \"opted\": true,\n    \"permissions\": [\n     \"irure anim minim ut id\",\n     \"dolore\"\n    ],\n    \"token\": \"aute \",\n    \"name\": \"qui in dolore\",\n    \"stores\": [\n     {\n      \"_id\": \"dolor sint enim eiusmod\",\n      \"integration\": \"sed Lorem nisi\",\n      \"level\": \"non Ut mollit est\",\n      \"uid\": -18937308,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in \",\n      \"code\": \"sint culpa amet voluptate\",\n      \"name\": \"incididunt nisi\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"laboris exercitation dolore\",\n      \"integration\": \"eiusmod magna do dolore\",\n      \"level\": \"Duis dolor voluptate\",\n      \"uid\": 60279466,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ut adipisicing eiusmod\",\n      \"code\": \"voluptate\",\n      \"name\": \"voluptate qui mollit laborum\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"sint fugiat elit\",\n      \"integration\": \"in culpa ut\",\n      \"level\": \"ad est laborum consequat\",\n      \"uid\": -87608265,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"do\",\n      \"code\": \"eu adipisicing\",\n      \"name\": \"tempor culpa non i\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"in\",\n      \"integration\": \"voluptate Ut in anim\",\n      \"level\": \"in veniam ut aliquip in\",\n      \"uid\": 29829497,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"aliqua dolore elit enim\",\n      \"code\": \"esse nisi fugiat\",\n      \"name\": \"in sit\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"incididunt officia ad commodo\",\n   \"description\": \"do eu Lorem\",\n   \"name\": \"adipisicing quis cillum\",\n   \"slug\": \"ullamco in proident\",\n   \"meta\": [\n    {\n     \"_id\": \"in magna irure velit\",\n     \"name\": \"mollit\",\n     \"value\": \"magna do\"\n    },\n    {\n     \"_id\": \"dolore\",\n     \"name\": \"incididunt veniam ut ex\",\n     \"value\": \"laboris pariatur ea\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"aliquip incididunt mollit aute\",\n    \"integration\": \"occaecat voluptate veni\",\n    \"level\": \"culpa commodo velit\",\n    \"uid\": 18617397,\n    \"opted\": true,\n    \"permissions\": [\n     \"deserunt laborum nostrud\",\n     \"nulla dolor laborum esse\"\n    ],\n    \"token\": \"occaecat et aliquip\",\n    \"name\": \"dolor tempor minim esse\",\n    \"stores\": [\n     {\n      \"_id\": \"in\",\n      \"integration\": \"exercitation tempor\",\n      \"level\": \"sed reprehenderit elit\",\n      \"uid\": 89813649,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"labore proident incididunt\",\n      \"code\": \"ut laboris anim dolor\",\n      \"name\": \"voluptate enim in ea\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"officia consequat\",\n      \"integration\": \"nostrud in deserunt\",\n      \"level\": \"nisi amet esse est\",\n      \"uid\": -67177694,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"deserunt sint nulla ipsum est\",\n      \"code\": \"consequat cillum cupidatat commodo\",\n      \"name\": \"cillum quis in qui\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"nostrud eiusmod\",\n      \"integration\": \"deserunt ut\",\n      \"level\": \"dolor in id voluptate enim\",\n      \"uid\": -4118225,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"cillum culpa Ut exercitation\",\n      \"code\": \"proident ad laboris\",\n      \"name\": \"aute\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"consequat adipisicing ad in\",\n      \"integration\": \"non anim sit\",\n      \"level\": \"sit laboris\",\n      \"uid\": -3272401,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"deserunt do laborum Excepteur\",\n      \"code\": \"proident laborum sint\",\n      \"name\": \"eu non occaecat in quis\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"ea commodo in\",\n    \"integration\": \"dolore officia\",\n    \"level\": \"nulla deserunt velit\",\n    \"uid\": 45780244,\n    \"opted\": true,\n    \"permissions\": [\n     \"Excepteur aliquip\",\n     \"pariatur velit veniam\"\n    ],\n    \"token\": \"labore pariatur elit in\",\n    \"name\": \"tempor pr\",\n    \"stores\": [\n     {\n      \"_id\": \"labore\",\n      \"integration\": \"nostrud laborum cupidatat\",\n      \"level\": \"labore exercitation dolor\",\n      \"uid\": 98946291,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"pariatur Lorem laboris Ut fugiat\",\n      \"code\": \"officia ut adipisicing in esse\",\n      \"name\": \"ut qui deserunt nulla\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"non dolor in amet\",\n      \"integration\": \"nostrud Lorem et\",\n      \"level\": \"veniam aute velit ea voluptate\",\n      \"uid\": 40728546,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ullamco ex\",\n      \"code\": \"nostrud in dolore cillum\",\n      \"name\": \"quis eu labore dolore elit\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"in quis Excepteur ex\",\n      \"integration\": \"ipsum voluptate\",\n      \"level\": \"magna\",\n      \"uid\": -61174746,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"qui sit\",\n      \"code\": \"ipsum sed in irure aliqua\",\n      \"name\": \"proident dolore deserunt adipisicing\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"elit anim\",\n      \"integration\": \"minim dolor incididunt\",\n      \"level\": \"reprehenderit nulla ipsum\",\n      \"uid\": 93286423,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Lorem sit ea dolore\",\n      \"code\": \"dolor ipsum tempor\",\n      \"name\": \"pariatur deserunt qui id\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"anim est dolor\",\n \"page\": {\n  \"type\": \"commodo fugiat in\",\n  \"size\": 70736237,\n  \"current\": -29608529,\n  \"has_next\": false,\n  \"item_total\": -80863804,\n  \"next_id\": \"sint Excepteur enim Duis\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "2f23a04c-9e2c-471a-a8d1-80b0f77b019b",
          "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
          "request": {
            "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "8f7b7fb4-773b-457a-97ac-20a95a538fbf",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1974-04-25T23:43:19.096Z\",\n \"status\": 79622368,\n \"error\": \"laboris nisi\",\n \"exception\": \"qui in dolor aliqua\",\n \"message\": \"occaecat Excepteur\",\n \"total_time_taken_in_millis\": 19476391,\n \"http_status\": \"408 REQUEST_TIMEOUT\",\n \"items\": {\n  \"session_id\": \"aute\",\n  \"error_message\": \"officia culpa in\"\n },\n \"payload\": {\n  \"session_id\": \"dolore ipsum tempor reprehenderit\",\n  \"error_message\": \"eu est irure Duis commodo\"\n },\n \"trace_id\": \"sint ut\",\n \"page\": {\n  \"type\": \"est pariatur culpa quis voluptate\",\n  \"size\": -57042834,\n  \"current\": -30070631,\n  \"has_next\": true,\n  \"item_total\": 29233570,\n  \"next_id\": \"non qui dolore voluptate commodo\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b85b6e91-08f6-498a-be28-f46e9c80832f",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1974-04-25T23:43:19.096Z\",\n \"status\": 79622368,\n \"error\": \"laboris nisi\",\n \"exception\": \"qui in dolor aliqua\",\n \"message\": \"occaecat Excepteur\",\n \"total_time_taken_in_millis\": 19476391,\n \"http_status\": \"408 REQUEST_TIMEOUT\",\n \"items\": {\n  \"session_id\": \"aute\",\n  \"error_message\": \"officia culpa in\"\n },\n \"payload\": {\n  \"session_id\": \"dolore ipsum tempor reprehenderit\",\n  \"error_message\": \"eu est irure Duis commodo\"\n },\n \"trace_id\": \"sint ut\",\n \"page\": {\n  \"type\": \"est pariatur culpa quis voluptate\",\n  \"size\": -57042834,\n  \"current\": -30070631,\n  \"has_next\": true,\n  \"item_total\": 29233570,\n  \"next_id\": \"non qui dolore voluptate commodo\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "dd2a3922-70af-4fd7-85ff-e041d7d4d90c",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1974-04-25T23:43:19.096Z\",\n \"status\": 79622368,\n \"error\": \"laboris nisi\",\n \"exception\": \"qui in dolor aliqua\",\n \"message\": \"occaecat Excepteur\",\n \"total_time_taken_in_millis\": 19476391,\n \"http_status\": \"408 REQUEST_TIMEOUT\",\n \"items\": {\n  \"session_id\": \"aute\",\n  \"error_message\": \"officia culpa in\"\n },\n \"payload\": {\n  \"session_id\": \"dolore ipsum tempor reprehenderit\",\n  \"error_message\": \"eu est irure Duis commodo\"\n },\n \"trace_id\": \"sint ut\",\n \"page\": {\n  \"type\": \"est pariatur culpa quis voluptate\",\n  \"size\": -57042834,\n  \"current\": -30070631,\n  \"has_next\": true,\n  \"item_total\": 29233570,\n  \"next_id\": \"non qui dolore voluptate commodo\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "971179b9-9712-4dad-b1e1-96c493a1987f",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "e3a0b6c6-af1f-43d9-be97-c3e0e44d2b53",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2012-10-24T13:00:10.185Z\",\n \"status\": -26754494,\n \"error\": \"quis Excepteur\",\n \"exception\": \"Ut\",\n \"message\": \"do cupidatat\",\n \"total_time_taken_in_millis\": 90144233,\n \"http_status\": \"415 UNSUPPORTED_MEDIA_TYPE\",\n \"items\": {\n  \"company_id\": -92246664,\n  \"integration_data\": {},\n  \"company_name\": \"culpa dolor\",\n  \"task_details\": {\n   \"type\": -74663206,\n   \"group_list\": [\n    {\n     \"text\": \"officia aliq\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ex Duis sit deserunt est\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -98474861.92759751,\n   \"safe_stock\": -15479877,\n   \"period_threshold\": 6898100,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"id aliquip do Duis\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"pariatur\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"nostru\",\n  \"alias\": \"culpa Lorem\"\n },\n \"payload\": {\n  \"company_id\": -99319649,\n  \"integration_data\": {},\n  \"company_name\": \"esse ex\",\n  \"task_details\": {\n   \"type\": 57096473,\n   \"group_list\": [\n    {\n     \"text\": \"labo\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"do\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -96610734.59895468,\n   \"safe_stock\": -4638221,\n   \"period_threshold\": -73522053,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"aute consequat\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"officia nisi\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"enim esse\",\n  \"alias\": \"tempor ut nulla\"\n },\n \"trace_id\": \"minim dolore\",\n \"page\": {\n  \"type\": \"u\",\n  \"size\": -47607849,\n  \"current\": 46998727,\n  \"has_next\": true,\n  \"item_total\": -74840237,\n  \"next_id\": \"Duis nulla\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "48d63fd4-6cd7-480d-aacb-7f7b97c9c6e8",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2012-10-24T13:00:10.185Z\",\n \"status\": -26754494,\n \"error\": \"quis Excepteur\",\n \"exception\": \"Ut\",\n \"message\": \"do cupidatat\",\n \"total_time_taken_in_millis\": 90144233,\n \"http_status\": \"415 UNSUPPORTED_MEDIA_TYPE\",\n \"items\": {\n  \"company_id\": -92246664,\n  \"integration_data\": {},\n  \"company_name\": \"culpa dolor\",\n  \"task_details\": {\n   \"type\": -74663206,\n   \"group_list\": [\n    {\n     \"text\": \"officia aliq\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ex Duis sit deserunt est\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -98474861.92759751,\n   \"safe_stock\": -15479877,\n   \"period_threshold\": 6898100,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"id aliquip do Duis\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"pariatur\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"nostru\",\n  \"alias\": \"culpa Lorem\"\n },\n \"payload\": {\n  \"company_id\": -99319649,\n  \"integration_data\": {},\n  \"company_name\": \"esse ex\",\n  \"task_details\": {\n   \"type\": 57096473,\n   \"group_list\": [\n    {\n     \"text\": \"labo\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"do\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -96610734.59895468,\n   \"safe_stock\": -4638221,\n   \"period_threshold\": -73522053,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"aute consequat\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"officia nisi\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"enim esse\",\n  \"alias\": \"tempor ut nulla\"\n },\n \"trace_id\": \"minim dolore\",\n \"page\": {\n  \"type\": \"u\",\n  \"size\": -47607849,\n  \"current\": 46998727,\n  \"has_next\": true,\n  \"item_total\": -74840237,\n  \"next_id\": \"Duis nulla\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "44d3a0f7-450b-41af-bf37-0f798df2155c",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2012-10-24T13:00:10.185Z\",\n \"status\": -26754494,\n \"error\": \"quis Excepteur\",\n \"exception\": \"Ut\",\n \"message\": \"do cupidatat\",\n \"total_time_taken_in_millis\": 90144233,\n \"http_status\": \"415 UNSUPPORTED_MEDIA_TYPE\",\n \"items\": {\n  \"company_id\": -92246664,\n  \"integration_data\": {},\n  \"company_name\": \"culpa dolor\",\n  \"task_details\": {\n   \"type\": -74663206,\n   \"group_list\": [\n    {\n     \"text\": \"officia aliq\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ex Duis sit deserunt est\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -98474861.92759751,\n   \"safe_stock\": -15479877,\n   \"period_threshold\": 6898100,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"id aliquip do Duis\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"pariatur\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"nostru\",\n  \"alias\": \"culpa Lorem\"\n },\n \"payload\": {\n  \"company_id\": -99319649,\n  \"integration_data\": {},\n  \"company_name\": \"esse ex\",\n  \"task_details\": {\n   \"type\": 57096473,\n   \"group_list\": [\n    {\n     \"text\": \"labo\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"do\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -96610734.59895468,\n   \"safe_stock\": -4638221,\n   \"period_threshold\": -73522053,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"aute consequat\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"officia nisi\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"enim esse\",\n  \"alias\": \"tempor ut nulla\"\n },\n \"trace_id\": \"minim dolore\",\n \"page\": {\n  \"type\": \"u\",\n  \"size\": -47607849,\n  \"current\": 46998727,\n  \"has_next\": true,\n  \"item_total\": -74840237,\n  \"next_id\": \"Duis nulla\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "c9f0a294-be3c-4c0f-b595-162b62c0d3b2",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "b8bc5c6c-85fe-4cf5-94d2-d3eaf27493de",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1966-12-08T08:11:06.511Z\",\n \"status\": -12747197,\n \"error\": \"ut Duis laboru\",\n \"exception\": \"quis sit ut sint amet\",\n \"message\": \"i\",\n \"total_time_taken_in_millis\": 59542923,\n \"http_status\": \"408 REQUEST_TIMEOUT\",\n \"items\": [\n  {\n   \"company_id\": 79801804,\n   \"integration_data\": {},\n   \"company_name\": \"Ut reprehenderit cillum aliquip exercitation\",\n   \"task_details\": {\n    \"type\": 72342797,\n    \"group_list\": [\n     {\n      \"text\": \"non Excepteur laboris esse proident\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nisi id quis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 25303861.314644173,\n    \"safe_stock\": 56351672,\n    \"period_threshold\": 74168226,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ut u\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"fugiat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ex nostrud minim ea\",\n   \"alias\": \"velit d\"\n  },\n  {\n   \"company_id\": 312661,\n   \"integration_data\": {},\n   \"company_name\": \"amet ullamco officia\",\n   \"task_details\": {\n    \"type\": -61608117,\n    \"group_list\": [\n     {\n      \"text\": \"irure\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"velit magna amet\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 45709105.5086734,\n    \"safe_stock\": 15508506,\n    \"period_threshold\": 90901527,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"nostrud\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliqua sunt ut nisi voluptate\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sunt in\",\n   \"alias\": \"reprehenderit anim ut labore occaecat\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 44452313,\n   \"integration_data\": {},\n   \"company_name\": \"aute esse sed\",\n   \"task_details\": {\n    \"type\": 56511222,\n    \"group_list\": [\n     {\n      \"text\": \"ullamc\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eiusmod aute\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -48318986.400227495,\n    \"safe_stock\": -52318079,\n    \"period_threshold\": 18570577,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"veniam reprehenderit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"amet tempor elit veniam\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"et Duis elit\",\n   \"alias\": \"ullamco qui\"\n  },\n  {\n   \"company_id\": 75252734,\n   \"integration_data\": {},\n   \"company_name\": \"minim est labore\",\n   \"task_details\": {\n    \"type\": 5655616,\n    \"group_list\": [\n     {\n      \"text\": \"ex nostrud\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ipsum esse occaecat cillum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -89314151.44857922,\n    \"safe_stock\": -4820666,\n    \"period_threshold\": -63674488,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"Excepteur in dolor Duis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ipsum deserunt commodo\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"eu anim laboris\",\n   \"alias\": \"incididunt in sint\"\n  }\n ],\n \"trace_id\": \"minim sint quis\",\n \"page\": {\n  \"type\": \"non quis velit voluptate\",\n  \"size\": 23969317,\n  \"current\": -24192442,\n  \"has_next\": true,\n  \"item_total\": 4605959,\n  \"next_id\": \"id in dolor\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "8f505587-fb15-4dad-8f6b-67c7360d4a36",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1944-08-03T02:27:21.839Z\",\n \"status\": 97457108,\n \"error\": \"sunt sint\",\n \"exception\": \"eu sed\",\n \"message\": \"ullamco dolore nulla adipisicing\",\n \"total_time_taken_in_millis\": -53852626,\n \"http_status\": \"411 LENGTH_REQUIRED\",\n \"items\": [\n  {\n   \"company_id\": -92279015,\n   \"integration_data\": {},\n   \"company_name\": \"ad nisi ullamco\",\n   \"task_details\": {\n    \"type\": -28987047,\n    \"group_list\": [\n     {\n      \"text\": \"sit ut eiusmod magna anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proident veniam nostru\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -32300773.910786778,\n    \"safe_stock\": -71594686,\n    \"period_threshold\": -39313023,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"aliqua adipisicing reprehenderit dolor nulla\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"quis magna aliquip ve\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"amet tempor laborum\",\n   \"alias\": \"pariatur dolor in\"\n  },\n  {\n   \"company_id\": 42124139,\n   \"integration_data\": {},\n   \"company_name\": \"sunt adipisicing ullamco\",\n   \"task_details\": {\n    \"type\": -39400779,\n    \"group_list\": [\n     {\n      \"text\": \"labore id\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"commodo adipisicing\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 68500172.51889366,\n    \"safe_stock\": -38817087,\n    \"period_threshold\": 38120397,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"nostrud eu ad sit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cillum labore non dolor elit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"occaecat velit non\",\n   \"alias\": \"in mollit adipisicing elit\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -46025184,\n   \"integration_data\": {},\n   \"company_name\": \"minim occaecat\",\n   \"task_details\": {\n    \"type\": 7797542,\n    \"group_list\": [\n     {\n      \"text\": \"ex cupidatat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 79159369.10869649,\n    \"safe_stock\": -39447126,\n    \"period_threshold\": 7900419,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sed in qui\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliqua \",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"labore\",\n   \"alias\": \"ad esse id proident\"\n  },\n  {\n   \"company_id\": -1939771,\n   \"integration_data\": {},\n   \"company_name\": \"in dolore culpa pariatur\",\n   \"task_details\": {\n    \"type\": 71706907,\n    \"group_list\": [\n     {\n      \"text\": \"qui\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -9432776.132340148,\n    \"safe_stock\": -48119820,\n    \"period_threshold\": -11288322,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"Lorem et\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in in eu culpa\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"culpa nostrud proident\",\n   \"alias\": \"nisi sit\"\n  }\n ],\n \"trace_id\": \"cillum id ipsum\",\n \"page\": {\n  \"type\": \"ad cillum commodo cupidatat\",\n  \"size\": -94707219,\n  \"current\": 43588603,\n  \"has_next\": true,\n  \"item_total\": -56206421,\n  \"next_id\": \"et laboris\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "0f9595d6-0ac7-4f8b-857d-b818df70a85f",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1944-08-03T02:27:21.839Z\",\n \"status\": 97457108,\n \"error\": \"sunt sint\",\n \"exception\": \"eu sed\",\n \"message\": \"ullamco dolore nulla adipisicing\",\n \"total_time_taken_in_millis\": -53852626,\n \"http_status\": \"411 LENGTH_REQUIRED\",\n \"items\": [\n  {\n   \"company_id\": -92279015,\n   \"integration_data\": {},\n   \"company_name\": \"ad nisi ullamco\",\n   \"task_details\": {\n    \"type\": -28987047,\n    \"group_list\": [\n     {\n      \"text\": \"sit ut eiusmod magna anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proident veniam nostru\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -32300773.910786778,\n    \"safe_stock\": -71594686,\n    \"period_threshold\": -39313023,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"aliqua adipisicing reprehenderit dolor nulla\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"quis magna aliquip ve\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"amet tempor laborum\",\n   \"alias\": \"pariatur dolor in\"\n  },\n  {\n   \"company_id\": 42124139,\n   \"integration_data\": {},\n   \"company_name\": \"sunt adipisicing ullamco\",\n   \"task_details\": {\n    \"type\": -39400779,\n    \"group_list\": [\n     {\n      \"text\": \"labore id\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"commodo adipisicing\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 68500172.51889366,\n    \"safe_stock\": -38817087,\n    \"period_threshold\": 38120397,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"nostrud eu ad sit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cillum labore non dolor elit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"occaecat velit non\",\n   \"alias\": \"in mollit adipisicing elit\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -46025184,\n   \"integration_data\": {},\n   \"company_name\": \"minim occaecat\",\n   \"task_details\": {\n    \"type\": 7797542,\n    \"group_list\": [\n     {\n      \"text\": \"ex cupidatat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 79159369.10869649,\n    \"safe_stock\": -39447126,\n    \"period_threshold\": 7900419,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sed in qui\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliqua \",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"labore\",\n   \"alias\": \"ad esse id proident\"\n  },\n  {\n   \"company_id\": -1939771,\n   \"integration_data\": {},\n   \"company_name\": \"in dolore culpa pariatur\",\n   \"task_details\": {\n    \"type\": 71706907,\n    \"group_list\": [\n     {\n      \"text\": \"qui\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -9432776.132340148,\n    \"safe_stock\": -48119820,\n    \"period_threshold\": -11288322,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"Lorem et\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in in eu culpa\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"culpa nostrud proident\",\n   \"alias\": \"nisi sit\"\n  }\n ],\n \"trace_id\": \"cillum id ipsum\",\n \"page\": {\n  \"type\": \"ad cillum commodo cupidatat\",\n  \"size\": -94707219,\n  \"current\": 43588603,\n  \"has_next\": true,\n  \"item_total\": -56206421,\n  \"next_id\": \"et laboris\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "9c5249de-b1c3-4eda-8419-de401e24f082",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "90a00f7c-f9e5-48b7-922f-c0d3d746de51",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1990-06-13T03:46:16.923Z\",\n \"status\": -47799698,\n \"error\": \"ea\",\n \"exception\": \"tempor nisi ex\",\n \"message\": \"aliqua sit non\",\n \"total_time_taken_in_millis\": 86844990,\n \"http_status\": \"206 PARTIAL_CONTENT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"non \",\n \"page\": {\n  \"type\": \"veniam \",\n  \"size\": 7024886,\n  \"current\": 84713181,\n  \"has_next\": false,\n  \"item_total\": 92181505,\n  \"next_id\": \"anim consequat\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "18c53b9f-a28e-4015-b191-37747e45fb79",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1990-06-13T03:46:16.923Z\",\n \"status\": -47799698,\n \"error\": \"ea\",\n \"exception\": \"tempor nisi ex\",\n \"message\": \"aliqua sit non\",\n \"total_time_taken_in_millis\": 86844990,\n \"http_status\": \"206 PARTIAL_CONTENT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"non \",\n \"page\": {\n  \"type\": \"veniam \",\n  \"size\": 7024886,\n  \"current\": 84713181,\n  \"has_next\": false,\n  \"item_total\": 92181505,\n  \"next_id\": \"anim consequat\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "466851c9-13ab-4256-b8f5-0adb07ba8b71",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1990-06-13T03:46:16.923Z\",\n \"status\": -47799698,\n \"error\": \"ea\",\n \"exception\": \"tempor nisi ex\",\n \"message\": \"aliqua sit non\",\n \"total_time_taken_in_millis\": 86844990,\n \"http_status\": \"206 PARTIAL_CONTENT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"non \",\n \"page\": {\n  \"type\": \"veniam \",\n  \"size\": 7024886,\n  \"current\": 84713181,\n  \"has_next\": false,\n  \"item_total\": 92181505,\n  \"next_id\": \"anim consequat\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "dba7bee4-dd8a-437c-b682-98cb6b2398f1",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "e20a33ef-5344-45c0-9c53-177eda7a8a82",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1980-05-31T19:00:28.230Z\",\n \"status\": 70448567,\n \"error\": \"et in enim dolor\",\n \"exception\": \"in aliquip laboris\",\n \"message\": \"in ex nulla commodo mollit\",\n \"total_time_taken_in_millis\": -82874411,\n \"http_status\": \"420 METHOD_FAILURE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"dolor nisi ipsum aliquip\",\n \"page\": {\n  \"type\": \"pariatur quis esse\",\n  \"size\": 18863615,\n  \"current\": 61252902,\n  \"has_next\": false,\n  \"item_total\": -4047167,\n  \"next_id\": \"Excepteur nostrud nisi mi\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "beb710f2-48b8-416e-a795-8ea642f100a4",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1980-05-31T19:00:28.230Z\",\n \"status\": 70448567,\n \"error\": \"et in enim dolor\",\n \"exception\": \"in aliquip laboris\",\n \"message\": \"in ex nulla commodo mollit\",\n \"total_time_taken_in_millis\": -82874411,\n \"http_status\": \"420 METHOD_FAILURE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"dolor nisi ipsum aliquip\",\n \"page\": {\n  \"type\": \"pariatur quis esse\",\n  \"size\": 18863615,\n  \"current\": 61252902,\n  \"has_next\": false,\n  \"item_total\": -4047167,\n  \"next_id\": \"Excepteur nostrud nisi mi\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "cb4a8c09-95c2-428a-931d-26bc0e3ac0d8",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1980-05-31T19:00:28.230Z\",\n \"status\": 70448567,\n \"error\": \"et in enim dolor\",\n \"exception\": \"in aliquip laboris\",\n \"message\": \"in ex nulla commodo mollit\",\n \"total_time_taken_in_millis\": -82874411,\n \"http_status\": \"420 METHOD_FAILURE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"dolor nisi ipsum aliquip\",\n \"page\": {\n  \"type\": \"pariatur quis esse\",\n  \"size\": 18863615,\n  \"current\": 61252902,\n  \"has_next\": false,\n  \"item_total\": -4047167,\n  \"next_id\": \"Excepteur nostrud nisi mi\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "7bb2573d-8695-43cc-b049-5fdbac722333",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1980-05-31T19:00:28.230Z\",\n \"status\": 70448567,\n \"error\": \"et in enim dolor\",\n \"exception\": \"in aliquip laboris\",\n \"message\": \"in ex nulla commodo mollit\",\n \"total_time_taken_in_millis\": -82874411,\n \"http_status\": \"420 METHOD_FAILURE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"dolor nisi ipsum aliquip\",\n \"page\": {\n  \"type\": \"pariatur quis esse\",\n  \"size\": 18863615,\n  \"current\": 61252902,\n  \"has_next\": false,\n  \"item_total\": -4047167,\n  \"next_id\": \"Excepteur nostrud nisi mi\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b9a31386-8dec-4585-9887-63867b6ae361",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1980-05-31T19:00:28.230Z\",\n \"status\": 70448567,\n \"error\": \"et in enim dolor\",\n \"exception\": \"in aliquip laboris\",\n \"message\": \"in ex nulla commodo mollit\",\n \"total_time_taken_in_millis\": -82874411,\n \"http_status\": \"420 METHOD_FAILURE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"dolor nisi ipsum aliquip\",\n \"page\": {\n  \"type\": \"pariatur quis esse\",\n  \"size\": 18863615,\n  \"current\": 61252902,\n  \"has_next\": false,\n  \"item_total\": -4047167,\n  \"next_id\": \"Excepteur nostrud nisi mi\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.jiomartpartners.com"
    }
  ],
  "info": {
    "_postman_id": "42c3648e-e738-48af-85cb-47c5a9d0b0b7",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
