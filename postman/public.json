{
  "item": [
    {
      "id": "7ed61c1e-10f1-4919-a92b-62115bf8608b",
      "name": "Billing",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "4940ff33-1964-49bf-abed-c9a34c97aa53",
          "name": "getStandardPlans | Get Standard/Public Plans",
          "request": {
            "name": "getStandardPlans | Get Standard/Public Plans",
            "description": {
              "content": "Get Standard/Public Plans.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "public",
                "billing",
                "v1.0",
                "plan",
                "detailed-list",
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "platform",
                  "value": "<string>",
                  "description": "The type of platform for which plans are requested."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "d613d228-eaee-425a-8a93-740ea14228fe",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list",
                    ""
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform",
                      "value": "mobile"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"plans\": [\n    {\n      \"recurring\": {\n        \"interval\": \"year\",\n        \"interval_count\": 1\n      },\n      \"taxation\": {\n        \"gst\": 0.18\n      },\n      \"one_time_fees\": {\n        \"developement\": 0,\n        \"marketing\": 0\n      },\n      \"credit_line\": {\n        \"is_active\": false\n      },\n      \"_id\": \"65f7d861030cfe1140064cbe\",\n      \"product_suite_id\": \"65f7d861030cfe1140064c51\",\n      \"is_trial_plan\": false,\n      \"name\": \"Ultra Premium Yearly\",\n      \"description\": \"Ultra Premium Yearly\",\n      \"plan_group\": \"default\",\n      \"tag_lines\": [],\n      \"currency\": \"INR\",\n      \"amount\": 10999,\n      \"is_active\": true,\n      \"is_visible\": true,\n      \"trial_period\": 0,\n      \"addons\": [],\n      \"tags\": [],\n      \"type\": \"public\",\n      \"country\": \"IN\",\n      \"company_ids\": [],\n      \"current_status\": \"active\",\n      \"channel_type\": \"ecomm\",\n      \"platform\": \"all\",\n      \"created_at\": \"2024-03-18T06:00:01.914Z\",\n      \"modified_at\": \"2024-03-18T06:00:01.914Z\",\n      \"components\": [\n        {\n          \"name\": \"Abandoned Cart\",\n          \"slug\": \"abandoned-cart\",\n          \"description\": \"Automatically send emailers to customers who have left their carts to increase conversion\",\n          \"group\": \"General\",\n          \"icon\": \"\",\n          \"links\": {},\n          \"config\": {\n            \"_id\": \"65f7d861030cfe1140064cce\",\n            \"feature_config\": {\n              \"enabled\": true\n            },\n            \"component_id\": \"65f7d861030cfe1140064c9f\",\n            \"display_text\": \"Yes\",\n            \"is_default\": false,\n            \"is_active\": true,\n            \"processing_type\": \"feature_config\",\n            \"tags\": [],\n            \"created_at\": \"2024-03-18T06:00:01.920Z\",\n            \"modified_at\": \"2024-03-18T06:00:01.920Z\",\n            \"__v\": 0\n          },\n          \"is_active\": true,\n          \"display_text\": \"Yes\"\n        },\n        {\n          \"name\": \"Email\",\n          \"slug\": \"email-campagin\",\n          \"description\": \"Send emails to your customers. Choose from pre-defined emailers or create your own.\",\n          \"group\": \"Marketing\",\n          \"icon\": \"\",\n          \"links\": {},\n          \"config\": {\n            \"recurring\": {\n              \"aggregate_usage\": \"sum\",\n              \"usage_type\": \"metered\",\n              \"interval\": \"month\",\n              \"interval_count\": 1\n            },\n            \"transform_quantity\": {\n              \"divide_by\": 1,\n              \"round\": \"up\"\n            },\n            \"free_tier\": {\n              \"type\": \"TIME_BASED\",\n              \"value\": 0\n            },\n            \"_id\": \"65f7d861030cfe1140064cdb\",\n            \"currency\": \"INR\",\n            \"unit_amount\": 0,\n            \"quantity\": 50,\n            \"price_ui_type\": \"standard\",\n            \"price_type\": \"static\",\n            \"bill_type\": \"recurring\",\n            \"billing_scheme\": \"per_unit\",\n            \"component_id\": \"65f7d861030cfe1140064c93\",\n            \"display_text\": \"\",\n            \"is_default\": false,\n            \"is_active\": true,\n            \"processing_type\": \"revenue\",\n            \"tags\": [],\n            \"tiers\": [],\n            \"created_at\": \"2024-03-18T06:00:01.920Z\",\n            \"modified_at\": \"2024-03-18T06:00:01.920Z\",\n            \"__v\": 0\n          },\n          \"is_active\": true,\n          \"display_text\": \"\"\n        },\n        {\n          \"name\": \"Themes\",\n          \"slug\": \"themes\",\n          \"description\": \"Fynd Platform partner themes available on extra charges\",\n          \"group\": \"General\",\n          \"icon\": \"\",\n          \"links\": {},\n          \"config\": {\n            \"recurring\": {\n              \"aggregate_usage\": \"sum\",\n              \"usage_type\": \"licensed\",\n              \"interval_count\": 1\n            },\n            \"transform_quantity\": {\n              \"divide_by\": 1,\n              \"round\": \"up\"\n            },\n            \"free_tier\": {\n              \"type\": \"TIME_BASED\",\n              \"value\": 0\n            },\n            \"_id\": \"65f7d861030cfe1140064cd9\",\n            \"currency\": \"INR\",\n            \"unit_amount\": 0,\n            \"quantity\": 50,\n            \"price_ui_type\": \"standard\",\n            \"price_type\": \"dynamic\",\n            \"bill_type\": \"one_time\",\n            \"billing_scheme\": \"per_unit\",\n            \"component_id\": \"65f7d861030cfe1140064c75\",\n            \"display_text\": \"Premium Themes\",\n            \"is_default\": false,\n            \"is_active\": true,\n            \"processing_type\": \"revenue\",\n            \"tags\": [],\n            \"tiers\": [],\n            \"created_at\": \"2024-03-18T06:00:01.920Z\",\n            \"modified_at\": \"2024-03-18T06:00:01.920Z\",\n            \"__v\": 0\n          },\n          \"is_active\": true,\n          \"display_text\": \"Premium Themes\"\n        },\n        {\n          \"name\": \"Transaction Fees\",\n          \"slug\": \"transaction-fee\",\n          \"description\": \"Transaction fees is inclusive of Payment Gateway\",\n          \"group\": \"Key Features\",\n          \"icon\": \"\",\n          \"links\": {},\n          \"config\": {\n            \"_id\": \"65f7d861030cfe1140064cd2\",\n            \"component_id\": \"65f7d861030cfe1140064c85\",\n            \"display_text\": \"Customizable\",\n            \"is_default\": false,\n            \"is_active\": true,\n            \"processing_type\": \"display\",\n            \"tags\": [],\n            \"created_at\": \"2024-03-18T06:00:01.920Z\",\n            \"modified_at\": \"2024-03-18T06:00:01.920Z\",\n            \"__v\": 0\n          },\n          \"is_active\": true,\n          \"display_text\": \"Customizable\"\n        }\n      ]\n    }\n  ],\n  \"trialPlan\": {\n    \"recurring\": {\n      \"interval\": \"month\",\n      \"interval_count\": 1\n    },\n    \"taxation\": {\n      \"gst\": 0.18\n    },\n    \"one_time_fees\": {\n      \"developement\": 0,\n      \"marketing\": 0\n    },\n    \"credit_line\": {\n      \"is_active\": false\n    },\n    \"_id\": \"65f7d861030cfe1140064cbc\",\n    \"product_suite_id\": \"65f7d861030cfe1140064c51\",\n    \"is_trial_plan\": true,\n    \"name\": \"30 day Trial\",\n    \"description\": \"30 day Trial\",\n    \"plan_group\": \"default\",\n    \"tag_lines\": [],\n    \"currency\": \"INR\",\n    \"amount\": 0,\n    \"is_active\": true,\n    \"is_visible\": false,\n    \"trial_period\": 30,\n    \"addons\": [],\n    \"tags\": [],\n    \"type\": \"public\",\n    \"country\": \"IN\",\n    \"company_ids\": [],\n    \"current_status\": \"active\",\n    \"channel_type\": \"ecomm\",\n    \"platform\": \"all\",\n    \"created_at\": \"2024-03-18T06:00:01.914Z\",\n    \"modified_at\": \"2024-03-18T06:00:01.914Z\"\n  },\n  \"component_groups\": [\n    \"General\",\n    \"Key Features\",\n    \"Marketing\",\n    \"Sales Channel\",\n    \"Support\"\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "8b83c7b5-e0bd-4763-8fb5-84b87b5824dd",
          "name": "getPlanDetails | Get plan details",
          "request": {
            "name": "getPlanDetails | Get plan details",
            "description": {
              "content": "Get plan details.\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "public",
                "billing",
                "v1.0",
                "plan",
                "details",
                ":plan_id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "plan_id",
                  "description": "(Required) Plan unique id."
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "14821d49-3f27-47ff-a3ca-3f5c84e96178",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "details",
                    ":plan_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "plan_id",
                      "description": "(Required) Plan unique id."
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"recurring\": {\n    \"interval\": \"month\",\n    \"interval_count\": 1\n  },\n  \"is_trial_plan\": false,\n  \"plan_group\": \"default\",\n  \"tag_lines\": [],\n  \"currency\": \"INR\",\n  \"is_active\": true,\n  \"is_visible\": true,\n  \"trial_period\": 0,\n  \"addons\": [],\n  \"tags\": [],\n  \"type\": \"public\",\n  \"country\": \"IN\",\n  \"_id\": \"610d03f02decb20043dac5ab\",\n  \"name\": \"Ultra Premium\",\n  \"description\": \"Ultra Premium\",\n  \"amount\": 2999,\n  \"created_at\": \"2021-08-06T09:42:08.877Z\",\n  \"modified_at\": \"2021-08-06T09:42:08.877Z\",\n  \"taxation\": {\n    \"gst\": 0.18\n  },\n  \"current_status\": \"active\",\n  \"components\": []\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "7803829a-0146-4fb3-98ac-d75c2dfd4f4b",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "details",
                    ":plan_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "plan_id",
                      "description": "(Required) Plan unique id."
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Not Found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "49dfd394-de7c-4296-8614-c39e9f8fd948",
              "name": "Internal server error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "details",
                    ":plan_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "plan_id",
                      "description": "(Required) Plan unique id."
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Not Found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "81d6783b-7a1f-410f-8327-702485a59f25",
          "name": "planList | Get List of all plans",
          "request": {
            "name": "planList | Get List of all plans",
            "description": {
              "content": "Get List of all plans",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "public",
                "billing",
                "v1.0",
                "plan",
                "list"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "a7ddaeee-8205-4d4e-a370-46a4523963d6",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n  {\n    \"recurring\": {\n      \"interval\": \"month\",\n      \"interval_count\": 1\n    },\n    \"taxation\": {\n      \"gst\": 0.18\n    },\n    \"one_time_fees\": {\n      \"developement\": null,\n      \"marketing\": 0\n    },\n    \"credit_line\": {\n      \"is_active\": false\n    },\n    \"_id\": \"6603b119aaccdd01e4841150\",\n    \"product_suite_id\": \"6603b116aaccdd01e4841146\",\n    \"is_trial_plan\": false,\n    \"name\": \"FX12345\",\n    \"description\": \"Ecommerce\",\n    \"plan_group\": \"default\",\n    \"tag_lines\": [],\n    \"currency\": \"INR\",\n    \"amount\": 500,\n    \"is_active\": true,\n    \"is_visible\": true,\n    \"trial_period\": 0,\n    \"addons\": [],\n    \"tags\": [],\n    \"type\": \"public\",\n    \"meta\": {\n      \"plan_platform_display_name\": \"Both Mobile & Web\"\n    },\n    \"country\": \"IN\",\n    \"company_ids\": [],\n    \"created_by\": \"000000000000000016841367\",\n    \"current_status\": \"draft\",\n    \"channel_type\": \"ecomm\",\n    \"platform\": \"all\",\n    \"created_at\": \"2024-03-27T05:39:37.341Z\",\n    \"modified_at\": \"2024-03-27T05:39:37.341Z\"\n  }\n]",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "abd0be6d-0732-4673-8566-b5e07a014e58",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "ef47631a-ca23-40f5-9110-5fdedc52a00e",
          "name": "searchApplication | Search application",
          "request": {
            "name": "searchApplication | Search application",
            "description": {
              "content": "Provide application name or domain url.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "34968cf6-aab7-417c-acee-676fb4c4b77f",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "ea sunt",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"application\": {\n    \"website\": {\n      \"enabled\": true,\n      \"basepath\": \"/\"\n    },\n    \"cors\": {\n      \"domains\": []\n    },\n    \"auth\": {\n      \"enabled\": true\n    },\n    \"description\": \"test\",\n    \"channel_type\": \"store\",\n    \"cache_ttl\": -1,\n    \"internal\": false,\n    \"is_active\": true,\n    \"mode\": \"live\",\n    \"_id\": \"620b931ee7bfb11f910bf4a3\",\n    \"company_id\": 2,\n    \"name\": \"test\",\n    \"owner\": \"5b9b98150df588546aaea6d2\",\n    \"logo\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"favicon\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"banner\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n    },\n    \"token\": \"tPQv0nc23\",\n    \"tokens\": [\n      {\n        \"token\": \"tPQv0nc23\",\n        \"created_at\": \"2022-02-15T11:48:46.909Z\"\n      }\n    ],\n    \"domains\": [\n      {\n        \"verified\": true,\n        \"is_primary\": true,\n        \"is_shortlink\": true,\n        \"_id\": \"620b931ee7bfb11f910bf4a4\",\n        \"name\": \"qckvv5lhp.hostfynd.dev\"\n      }\n    ],\n    \"redirections\": [],\n    \"meta\": [],\n    \"created_at\": \"2022-02-15T11:48:46.909Z\",\n    \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n    \"__v\": 0,\n    \"domain\": {\n      \"verified\": true,\n      \"is_primary\": true,\n      \"is_shortlink\": true,\n      \"_id\": \"620b931ee7bfb11f910bf4a4\",\n      \"name\": \"qckvv5lhp.hostfynd.dev\"\n    },\n    \"id\": \"620b931ee7bfb11f910bf4a3\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e59c6ac5-7f3a-4560-83a9-55327e34477a",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "ea sunt",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"Invalid application domain or id.\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f8ccf9c3-93f9-4195-84be-6be0765d6415",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "ea sunt",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"No application found\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b5edbac0-e9b1-45c6-b7e4-d37f933789fb",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {
              "content": "Get Location configuration",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "ab063d64-4b85-4182-8010-bf9845c073b7",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"items\": [\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"qui et laborum in\",\n      \"phone_code\": \"990999092\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"esse amet\",\n      \"country_code\": \"incididunt dolor Duis do\",\n      \"latitude\": \"proident dolor Duis\",\n      \"longitude\": \"proident anim ut qu\"\n    },\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"ea labore dolor et\",\n      \"phone_code\": \"990999092\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"nulla tempor elit labore\",\n      \"country_code\": \"est laboris ea\",\n      \"latitude\": \"sunt\",\n      \"longitude\": \"Excepteur sunt ipsum\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "ca3d0c56-db75-4843-bfdc-d46af224f83e",
      "name": "Content",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "787d2cd1-bc6f-48c6-afaa-fca0ca2373c5",
          "name": "getCredentialsByEntity | Get credentials to power chat support systems",
          "request": {
            "name": "getCredentialsByEntity | Get credentials to power chat support systems",
            "description": {
              "content": "Get credentials for support system",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "public",
                "content",
                "credentials",
                ":entity"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "entity",
                  "description": "(Required) Server Type"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "5ecba560-2db9-4166-a8c3-ad09b97d132b",
              "name": "Success. Refer `CredentialsSchema` for more details.",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "content",
                    "credentials",
                    ":entity"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "entity",
                      "description": "(Required) Server Type"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"entity_type\": \"partner\",\n  \"type\": \"freshchat\",\n  \"is_enable\": true,\n  \"configuration\": {\n    \"token\": \"a3e4gf20b-d11g-4512-n3zq-03b9aa7e1yxz\",\n    \"siteId\": \"a3e8f20b-d97f-452f-bd72-03b9aa7e1bf0\",\n    \"host\": \"https://wchat.freshchat.com\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a4aef54b-c2be-4c44-ae1a-dbcbda6f6e20",
              "name": "Bad Request. See the error object in the response body to know the exact reason.",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "content",
                    "credentials",
                    ":entity"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "entity",
                      "description": "(Required) Server Type"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Oops! Something went wrong. Please try later\",\n  \"status\": 400,\n  \"code\": \"CX-1003\",\n  \"exception\": \"\",\n  \"info\": \"\",\n  \"request_id\": \"\",\n  \"stack_trace\": \"\",\n  \"meta\": {}\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "6296f74e-a990-4db9-b6a1-7ac089a08fda",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "0e785f2c-e406-49fc-80cb-1293fde45ae5",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "b9136095-16c0-4f68-9d48-608d6437add8",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2016-06-15T17:44:25.491Z\",\n  \"status\": 79277979,\n  \"error\": \"dolore eiusmod quis\",\n  \"exception\": \"ea dolor pariatur\",\n  \"message\": \"adipisicing Ut\",\n  \"total_time_taken_in_millis\": -71228228,\n  \"http_status\": \"413 REQUEST_ENTITY_TOO_LARGE\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"officia cupidatat et eiusmod anim\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2d51e706-e501-4cf2-8ca4-fdd714a81f4a",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2016-06-15T17:44:25.491Z\",\n  \"status\": 79277979,\n  \"error\": \"dolore eiusmod quis\",\n  \"exception\": \"ea dolor pariatur\",\n  \"message\": \"adipisicing Ut\",\n  \"total_time_taken_in_millis\": -71228228,\n  \"http_status\": \"413 REQUEST_ENTITY_TOO_LARGE\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"officia cupidatat et eiusmod anim\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "758346d2-e1da-49ec-b99e-f6715eb1e1b2",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2016-06-15T17:44:25.491Z\",\n  \"status\": 79277979,\n  \"error\": \"dolore eiusmod quis\",\n  \"exception\": \"ea dolor pariatur\",\n  \"message\": \"adipisicing Ut\",\n  \"total_time_taken_in_millis\": -71228228,\n  \"http_status\": \"413 REQUEST_ENTITY_TOO_LARGE\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"officia cupidatat et eiusmod anim\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "8fbb0a75-2d7b-46e5-b213-0961f3b9d936",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "5b7ad160-b908-4588-8cc7-e18ab09b2301",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2009-03-17T04:05:49.622Z\",\n  \"status\": 66156422,\n  \"error\": \"dolore proident sit\",\n  \"exception\": \"sunt eiusmod dolore\",\n  \"message\": \"voluptate aute dolor in labore\",\n  \"total_time_taken_in_millis\": 62929587,\n  \"http_status\": \"100 CONTINUE\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"aliqua amet in dolore culpa\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "00a85b8f-c692-402a-bf8a-adfeeff12a5a",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2009-03-17T04:05:49.622Z\",\n  \"status\": 66156422,\n  \"error\": \"dolore proident sit\",\n  \"exception\": \"sunt eiusmod dolore\",\n  \"message\": \"voluptate aute dolor in labore\",\n  \"total_time_taken_in_millis\": 62929587,\n  \"http_status\": \"100 CONTINUE\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"aliqua amet in dolore culpa\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "63d33992-819b-4f45-a7b8-979ecb4393e1",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2009-03-17T04:05:49.622Z\",\n  \"status\": 66156422,\n  \"error\": \"dolore proident sit\",\n  \"exception\": \"sunt eiusmod dolore\",\n  \"message\": \"voluptate aute dolor in labore\",\n  \"total_time_taken_in_millis\": 62929587,\n  \"http_status\": \"100 CONTINUE\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"aliqua amet in dolore culpa\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1d041d06-259b-49eb-9473-b8b121f1d5af",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2009-03-17T04:05:49.622Z\",\n  \"status\": 66156422,\n  \"error\": \"dolore proident sit\",\n  \"exception\": \"sunt eiusmod dolore\",\n  \"message\": \"voluptate aute dolor in labore\",\n  \"total_time_taken_in_millis\": 62929587,\n  \"http_status\": \"100 CONTINUE\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"aliqua amet in dolore culpa\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "6b586a6e-a9a8-47ca-875d-70c26fc4b58f",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2009-03-17T04:05:49.622Z\",\n  \"status\": 66156422,\n  \"error\": \"dolore proident sit\",\n  \"exception\": \"sunt eiusmod dolore\",\n  \"message\": \"voluptate aute dolor in labore\",\n  \"total_time_taken_in_millis\": 62929587,\n  \"http_status\": \"100 CONTINUE\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"aliqua amet in dolore culpa\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "5338e25d-f7ee-4657-8572-b0396a9c837d",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "0a5e8b70-6cc2-43d9-af51-ecae86cb472b",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1958-12-23T04:52:12.489Z\",\n  \"status\": 78678882,\n  \"error\": \"cillum Ut sunt qui\",\n  \"exception\": \"dolore dolor\",\n  \"message\": \"adipisicing cupidatat\",\n  \"total_time_taken_in_millis\": -13291203,\n  \"http_status\": \"420 METHOD_FAILURE\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"qui et\",\n      \"description\": \"voluptate Lorem\",\n      \"name\": \"qui non laboris sit veniam\",\n      \"slug\": \"aliquip Ut nisi aute ipsum\",\n      \"meta\": [\n        {\n          \"_id\": \"minim est officia ipsum consectetur\",\n          \"name\": \"sint in\",\n          \"value\": \"in esse\"\n        },\n        {\n          \"_id\": \"sunt\",\n          \"name\": \"aliqua labore\",\n          \"value\": \"irure labore sit\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"aliqua Lorem deserunt\",\n        \"integration\": \"fugiat irure ipsum\",\n        \"level\": \"tempor nostrud reprehenderit\",\n        \"uid\": -2097730,\n        \"opted\": false,\n        \"permissions\": [\n          \"et voluptate\",\n          \"non proident\"\n        ],\n        \"token\": \"deserunt est fugiat eu aliqua\",\n        \"name\": \"nisi Dui\",\n        \"stores\": [\n          {\n            \"_id\": \"dolore eu ad\",\n            \"integration\": \"aliquip tempor et Lorem ut\",\n            \"level\": \"ex quis amet labore\",\n            \"uid\": 55129746,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"occaecat tempor\",\n            \"code\": \"magna ad\",\n            \"name\": \"Ut sit mollit consectetur\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"deserunt ut occaecat\",\n            \"integration\": \"adipisicing\",\n            \"level\": \"commodo \",\n            \"uid\": 20002692,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"adipisicing nostrud\",\n            \"code\": \"dolore est culpa\",\n            \"name\": \"in mollit\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"ad esse\",\n        \"integration\": \"cillum\",\n        \"level\": \"tempor\",\n        \"uid\": 69393857,\n        \"opted\": false,\n        \"permissions\": [\n          \"in\",\n          \"incididunt do nulla\"\n        ],\n        \"token\": \"commodo ea nulla reprehenderit\",\n        \"name\": \"aliqua minim veniam Duis nulla\",\n        \"stores\": [\n          {\n            \"_id\": \"sed amet\",\n            \"integration\": \"o\",\n            \"level\": \"ipsum sint irure ut\",\n            \"uid\": -39032218,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"exercitation ipsum ad nisi\",\n            \"code\": \"ut esse sunt consectetur\",\n            \"name\": \"esse sunt\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"esse exercitation Lorem minim\",\n            \"integration\": \"enim sed ad\",\n            \"level\": \"irure nisi ut\",\n            \"uid\": -16030382,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"magna Lo\",\n            \"code\": \"culpa\",\n            \"name\": \"ea Ut magna in dolore\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"voluptate consectetur eiusmod laboris d\",\n      \"description\": \"officia culpa sed\",\n      \"name\": \"elit adipisicing sunt es\",\n      \"slug\": \"id elit Excepteur proident ex\",\n      \"meta\": [\n        {\n          \"_id\": \"pariatur repr\",\n          \"name\": \"amet occaecat ea\",\n          \"value\": \"Duis\"\n        },\n        {\n          \"_id\": \"aute\",\n          \"name\": \"Ut anim\",\n          \"value\": \"ea nulla cupidatat dolor in\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"est fugiat\",\n        \"integration\": \"labore id in\",\n        \"level\": \"reprehenderit ad elit Ut\",\n        \"uid\": -16158704,\n        \"opted\": true,\n        \"permissions\": [\n          \"sed id\",\n          \"in laboris Lorem\"\n        ],\n        \"token\": \"ullamco sit occaecat in\",\n        \"name\": \"consectetur Ut quis\",\n        \"stores\": [\n          {\n            \"_id\": \"culpa anim nostrud\",\n            \"integration\": \"tempor ad\",\n            \"level\": \"anim sunt \",\n            \"uid\": -66883960,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"sunt ea nostrud ut ipsum\",\n            \"code\": \"exercitation\",\n            \"name\": \"laborum ipsum in \",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"deserunt officia\",\n            \"integration\": \"ut tempor\",\n            \"level\": \"Ut nostrud veniam\",\n            \"uid\": -93386779,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"dolor nulla sed\",\n            \"code\": \"et aliqua id cupida\",\n            \"name\": \"fugiat eiusmod\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"id esse\",\n        \"integration\": \"anim est aute tempor\",\n        \"level\": \"adipisicing\",\n        \"uid\": 80846131,\n        \"opted\": true,\n        \"permissions\": [\n          \"deserunt voluptate\",\n          \"anim esse officia\"\n        ],\n        \"token\": \"sint reprehenderit labore minim\",\n        \"name\": \"commodo\",\n        \"stores\": [\n          {\n            \"_id\": \"ad voluptate\",\n            \"integration\": \"id quis in veni\",\n            \"level\": \"quis Excepteur anim aliqua in\",\n            \"uid\": 19492416,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"Lorem qui est Excepteur\",\n            \"code\": \"sed proident\",\n            \"name\": \"voluptate deserunt\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"voluptate quis\",\n            \"integration\": \"veniam\",\n            \"level\": \"sed ipsum tempor dolor sint\",\n            \"uid\": 93432437,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"pariatur id sed\",\n            \"code\": \"adipisicing eiusmod enim sit mollit\",\n            \"name\": \"adipisicing pariatur dolore\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"irure sint in minim\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1d2e5f3d-d63b-46dd-95e7-488437118337",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2013-07-19T15:34:44.506Z\",\n  \"status\": -72056877,\n  \"error\": \"laboris\",\n  \"exception\": \"in nostrud adipisicing\",\n  \"message\": \"ut minim nostrud aute\",\n  \"total_time_taken_in_millis\": -73981871,\n  \"http_status\": \"425 TOO_EARLY\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"proident velit\",\n      \"description\": \"ullamco culpa\",\n      \"name\": \"dolor de\",\n      \"slug\": \"incididunt qui\",\n      \"meta\": [\n        {\n          \"_id\": \"sit aute ea nostrud\",\n          \"name\": \"in irure\",\n          \"value\": \"sint\"\n        },\n        {\n          \"_id\": \"laborum eni\",\n          \"name\": \"est \",\n          \"value\": \"ex esse reprehenderit mollit\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"sunt Lorem\",\n        \"integration\": \"cupidatat\",\n        \"level\": \"aliquip sunt\",\n        \"uid\": 255810,\n        \"opted\": false,\n        \"permissions\": [\n          \"id dolore ea\",\n          \"tempor adipisicing magna ut\"\n        ],\n        \"token\": \"ut\",\n        \"name\": \"ipsum dolor et\",\n        \"stores\": [\n          {\n            \"_id\": \"do dolore anim\",\n            \"integration\": \"dolore sit irure et\",\n            \"level\": \"id ad nostrud\",\n            \"uid\": 52907611,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"dolor consequat reprehenderit pariatur\",\n            \"code\": \"eiusmod do\",\n            \"name\": \"culpa veniam consectetur\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"qui Du\",\n            \"integration\": \"of\",\n            \"level\": \"minim do\",\n            \"uid\": -88523573,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"in labore officia nisi\",\n            \"code\": \"Ut sed nisi\",\n            \"name\": \"laborum commodo officia deserunt\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"officia amet cupidatat labore\",\n        \"integration\": \"dolor cupidatat sed velit\",\n        \"level\": \"ullamco nisi\",\n        \"uid\": -98814191,\n        \"opted\": false,\n        \"permissions\": [\n          \"et dolor\",\n          \"in\"\n        ],\n        \"token\": \"nisi ut Ut\",\n        \"name\": \"au\",\n        \"stores\": [\n          {\n            \"_id\": \"minim tempor\",\n            \"integration\": \"dolore cupidatat non anim cillum\",\n            \"level\": \"labore\",\n            \"uid\": -34391306,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"eiusmod nisi commodo reprehenderit\",\n            \"code\": \"consequat nostrud\",\n            \"name\": \"nulla mollit proident nisi voluptate\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"sunt irure laboris\",\n            \"integration\": \"nulla quis ipsum\",\n            \"level\": \"Excepteur cill\",\n            \"uid\": 97802453,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"anim quis\",\n            \"code\": \"id officia tempor amet proident\",\n            \"name\": \"consequat officia\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"v\",\n      \"description\": \"consequat veniam dolore\",\n      \"name\": \"consequat in dolor\",\n      \"slug\": \"consequat occaecat pariatur reprehenderit\",\n      \"meta\": [\n        {\n          \"_id\": \"ex irure pariatur elit qui\",\n          \"name\": \"magna mollit\",\n          \"value\": \"occaecat consectetur veniam et sunt\"\n        },\n        {\n          \"_id\": \"ut sunt dolor irure\",\n          \"name\": \"ut veniam\",\n          \"value\": \"in sunt ea Lorem\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"mollit anim\",\n        \"integration\": \"quis voluptate velit sunt\",\n        \"level\": \"in fugiat Duis\",\n        \"uid\": -80586205,\n        \"opted\": false,\n        \"permissions\": [\n          \"voluptate\",\n          \"nulla cillum\"\n        ],\n        \"token\": \"pr\",\n        \"name\": \"incididunt pariatur fugiat occaecat reprehenderit\",\n        \"stores\": [\n          {\n            \"_id\": \"ut reprehenderit nisi\",\n            \"integration\": \"sit ea\",\n            \"level\": \"reprehenderit\",\n            \"uid\": 90250631,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"quis sed elit commodo\",\n            \"code\": \"cillum\",\n            \"name\": \"dolor cupidatat iru\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"nulla Lorem ut sed\",\n            \"integration\": \"et irure eiusmod\",\n            \"level\": \"enim sit\",\n            \"uid\": 74799874,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"in sint\",\n            \"code\": \"consectetur\",\n            \"name\": \"velit ea\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"et veniam in ullamco\",\n        \"integration\": \"aliquip dolor deserunt\",\n        \"level\": \"sint non\",\n        \"uid\": -12017073,\n        \"opted\": true,\n        \"permissions\": [\n          \"ipsum anim laborum\",\n          \"dolore aute in adipisicing\"\n        ],\n        \"token\": \"id officia anim aliqua Lorem\",\n        \"name\": \"Lorem dolor nulla\",\n        \"stores\": [\n          {\n            \"_id\": \"dolor ut Lorem sunt\",\n            \"integration\": \"aliqua enim\",\n            \"level\": \"deserunt ipsum ea\",\n            \"uid\": 39497991,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"Ut irure in do\",\n            \"code\": \"sit nostrud commodo esse dolore\",\n            \"name\": \"nisi in mollit sint\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"qui consequat\",\n            \"integration\": \"Excepteur\",\n            \"level\": \"deserunt occaecat anim\",\n            \"uid\": 97109733,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"nulla irure\",\n            \"code\": \"incididunt sunt sit\",\n            \"name\": \"et sunt adipisicing ad non\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"proident nostrud ullamco do\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "fddf2d1f-3a5d-4a60-a645-82ee37e9c85c",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2013-07-19T15:34:44.506Z\",\n  \"status\": -72056877,\n  \"error\": \"laboris\",\n  \"exception\": \"in nostrud adipisicing\",\n  \"message\": \"ut minim nostrud aute\",\n  \"total_time_taken_in_millis\": -73981871,\n  \"http_status\": \"425 TOO_EARLY\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"proident velit\",\n      \"description\": \"ullamco culpa\",\n      \"name\": \"dolor de\",\n      \"slug\": \"incididunt qui\",\n      \"meta\": [\n        {\n          \"_id\": \"sit aute ea nostrud\",\n          \"name\": \"in irure\",\n          \"value\": \"sint\"\n        },\n        {\n          \"_id\": \"laborum eni\",\n          \"name\": \"est \",\n          \"value\": \"ex esse reprehenderit mollit\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"sunt Lorem\",\n        \"integration\": \"cupidatat\",\n        \"level\": \"aliquip sunt\",\n        \"uid\": 255810,\n        \"opted\": false,\n        \"permissions\": [\n          \"id dolore ea\",\n          \"tempor adipisicing magna ut\"\n        ],\n        \"token\": \"ut\",\n        \"name\": \"ipsum dolor et\",\n        \"stores\": [\n          {\n            \"_id\": \"do dolore anim\",\n            \"integration\": \"dolore sit irure et\",\n            \"level\": \"id ad nostrud\",\n            \"uid\": 52907611,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"dolor consequat reprehenderit pariatur\",\n            \"code\": \"eiusmod do\",\n            \"name\": \"culpa veniam consectetur\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"qui Du\",\n            \"integration\": \"of\",\n            \"level\": \"minim do\",\n            \"uid\": -88523573,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"in labore officia nisi\",\n            \"code\": \"Ut sed nisi\",\n            \"name\": \"laborum commodo officia deserunt\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"officia amet cupidatat labore\",\n        \"integration\": \"dolor cupidatat sed velit\",\n        \"level\": \"ullamco nisi\",\n        \"uid\": -98814191,\n        \"opted\": false,\n        \"permissions\": [\n          \"et dolor\",\n          \"in\"\n        ],\n        \"token\": \"nisi ut Ut\",\n        \"name\": \"au\",\n        \"stores\": [\n          {\n            \"_id\": \"minim tempor\",\n            \"integration\": \"dolore cupidatat non anim cillum\",\n            \"level\": \"labore\",\n            \"uid\": -34391306,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"eiusmod nisi commodo reprehenderit\",\n            \"code\": \"consequat nostrud\",\n            \"name\": \"nulla mollit proident nisi voluptate\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"sunt irure laboris\",\n            \"integration\": \"nulla quis ipsum\",\n            \"level\": \"Excepteur cill\",\n            \"uid\": 97802453,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"anim quis\",\n            \"code\": \"id officia tempor amet proident\",\n            \"name\": \"consequat officia\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"v\",\n      \"description\": \"consequat veniam dolore\",\n      \"name\": \"consequat in dolor\",\n      \"slug\": \"consequat occaecat pariatur reprehenderit\",\n      \"meta\": [\n        {\n          \"_id\": \"ex irure pariatur elit qui\",\n          \"name\": \"magna mollit\",\n          \"value\": \"occaecat consectetur veniam et sunt\"\n        },\n        {\n          \"_id\": \"ut sunt dolor irure\",\n          \"name\": \"ut veniam\",\n          \"value\": \"in sunt ea Lorem\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"mollit anim\",\n        \"integration\": \"quis voluptate velit sunt\",\n        \"level\": \"in fugiat Duis\",\n        \"uid\": -80586205,\n        \"opted\": false,\n        \"permissions\": [\n          \"voluptate\",\n          \"nulla cillum\"\n        ],\n        \"token\": \"pr\",\n        \"name\": \"incididunt pariatur fugiat occaecat reprehenderit\",\n        \"stores\": [\n          {\n            \"_id\": \"ut reprehenderit nisi\",\n            \"integration\": \"sit ea\",\n            \"level\": \"reprehenderit\",\n            \"uid\": 90250631,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"quis sed elit commodo\",\n            \"code\": \"cillum\",\n            \"name\": \"dolor cupidatat iru\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"nulla Lorem ut sed\",\n            \"integration\": \"et irure eiusmod\",\n            \"level\": \"enim sit\",\n            \"uid\": 74799874,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"in sint\",\n            \"code\": \"consectetur\",\n            \"name\": \"velit ea\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"et veniam in ullamco\",\n        \"integration\": \"aliquip dolor deserunt\",\n        \"level\": \"sint non\",\n        \"uid\": -12017073,\n        \"opted\": true,\n        \"permissions\": [\n          \"ipsum anim laborum\",\n          \"dolore aute in adipisicing\"\n        ],\n        \"token\": \"id officia anim aliqua Lorem\",\n        \"name\": \"Lorem dolor nulla\",\n        \"stores\": [\n          {\n            \"_id\": \"dolor ut Lorem sunt\",\n            \"integration\": \"aliqua enim\",\n            \"level\": \"deserunt ipsum ea\",\n            \"uid\": 39497991,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"Ut irure in do\",\n            \"code\": \"sit nostrud commodo esse dolore\",\n            \"name\": \"nisi in mollit sint\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"qui consequat\",\n            \"integration\": \"Excepteur\",\n            \"level\": \"deserunt occaecat anim\",\n            \"uid\": 97109733,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"nulla irure\",\n            \"code\": \"incididunt sunt sit\",\n            \"name\": \"et sunt adipisicing ad non\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"proident nostrud ullamco do\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "dc1b92ca-cce9-4581-8455-32eb2c11420f",
          "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
          "request": {
            "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "64318a1d-477f-4954-bde4-30bbfc585fc1",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2008-02-24T21:46:41.455Z\",\n  \"status\": 34712371,\n  \"error\": \"Duis enim ei\",\n  \"exception\": \"culpa Ut eiusmod quis\",\n  \"message\": \"ad magna\",\n  \"total_time_taken_in_millis\": 65847858,\n  \"http_status\": \"429 TOO_MANY_REQUESTS\",\n  \"items\": {\n    \"session_id\": \"tempor in magna\",\n    \"error_message\": \"occaecat labore\"\n  },\n  \"payload\": {\n    \"session_id\": \"tempor Lorem Ut\",\n    \"error_message\": \"ullamco do adipisicing\"\n  },\n  \"trace_id\": \"elit nulla cupidatat\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "7b956c9e-2403-4e21-aa9b-390d7b5fde07",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2008-02-24T21:46:41.455Z\",\n  \"status\": 34712371,\n  \"error\": \"Duis enim ei\",\n  \"exception\": \"culpa Ut eiusmod quis\",\n  \"message\": \"ad magna\",\n  \"total_time_taken_in_millis\": 65847858,\n  \"http_status\": \"429 TOO_MANY_REQUESTS\",\n  \"items\": {\n    \"session_id\": \"tempor in magna\",\n    \"error_message\": \"occaecat labore\"\n  },\n  \"payload\": {\n    \"session_id\": \"tempor Lorem Ut\",\n    \"error_message\": \"ullamco do adipisicing\"\n  },\n  \"trace_id\": \"elit nulla cupidatat\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3b80fadf-b569-402d-8a3c-a3b355a20d46",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2008-02-24T21:46:41.455Z\",\n  \"status\": 34712371,\n  \"error\": \"Duis enim ei\",\n  \"exception\": \"culpa Ut eiusmod quis\",\n  \"message\": \"ad magna\",\n  \"total_time_taken_in_millis\": 65847858,\n  \"http_status\": \"429 TOO_MANY_REQUESTS\",\n  \"items\": {\n    \"session_id\": \"tempor in magna\",\n    \"error_message\": \"occaecat labore\"\n  },\n  \"payload\": {\n    \"session_id\": \"tempor Lorem Ut\",\n    \"error_message\": \"ullamco do adipisicing\"\n  },\n  \"trace_id\": \"elit nulla cupidatat\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "4497a147-995f-41ec-a9cd-1d6509c87ad3",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "22123e17-0d58-4888-a83b-a472eb4df2aa",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1983-01-28T13:26:30.956Z\",\n  \"status\": -76522405,\n  \"error\": \"irure ex reprehenderit velit dolore\",\n  \"exception\": \"cupidatat ullamco deserunt\",\n  \"message\": \"esse sunt nostrud culpa\",\n  \"total_time_taken_in_millis\": -36861834,\n  \"http_status\": \"451 UNAVAILABLE_FOR_LEGAL_REASONS\",\n  \"items\": {\n    \"company_id\": -78250710,\n    \"integration_data\": {\n      \"aliquip8\": {},\n      \"eiusmod_9a\": {},\n      \"officiacd9\": {}\n    },\n    \"company_name\": \"cupidatat quis deserunt minim\",\n    \"task_details\": {\n      \"type\": -13762537,\n      \"group_list\": [\n        {\n          \"text\": \"ipsum Excepteur ex qui\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"dolore pariatur anim dolore\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 78685007.93472812,\n      \"safe_stock\": -56275709,\n      \"period_threshold\": -32775001,\n      \"period_threshold_type\": \"HOURS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"aliqua consectetur\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"officia proiden\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"dolor enim consectetur\",\n    \"alias\": \"in id esse\"\n  },\n  \"payload\": {\n    \"company_id\": -43717658,\n    \"integration_data\": {\n      \"id_d7\": {},\n      \"fugiat_d\": {},\n      \"laborum_5\": {},\n      \"culpa0\": {}\n    },\n    \"company_name\": \"pariatur veniam labore ex\",\n    \"task_details\": {\n      \"type\": 20174866,\n      \"group_list\": [\n        {\n          \"text\": \"cup\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"incididunt sunt ex\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -47031254.39958718,\n      \"safe_stock\": -86087040,\n      \"period_threshold\": -45325770,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"laboris in\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"deserunt quis est laborum\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"cupidatat\",\n    \"alias\": \"do culpa\"\n  },\n  \"trace_id\": \"dolor aute\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d9b0cc85-670a-4024-a592-92f5e0469b24",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1973-09-04T23:37:38.154Z\",\n  \"status\": 36260038,\n  \"error\": \"esse dolor\",\n  \"exception\": \"pariatur in\",\n  \"message\": \"anim eiusmod\",\n  \"total_time_taken_in_millis\": -68050951,\n  \"http_status\": \"404 NOT_FOUND\",\n  \"items\": {\n    \"company_id\": -44567806,\n    \"integration_data\": {\n      \"est1\": {},\n      \"pariatur9bb\": {}\n    },\n    \"company_name\": \"quis n\",\n    \"task_details\": {\n      \"type\": -60623154,\n      \"group_list\": [\n        {\n          \"text\": \"enim in\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"consequat sint occaecat ut\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -58667087.56380516,\n      \"safe_stock\": 99459654,\n      \"period_threshold\": -1079108,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"in fugiat enim incididunt Lorem\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"deserunt velit\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"cupidatat consequat minim in\",\n    \"alias\": \"aliquip ad\"\n  },\n  \"payload\": {\n    \"company_id\": 80258703,\n    \"integration_data\": {\n      \"quis_9\": {},\n      \"sunt_c34\": {}\n    },\n    \"company_name\": \"minim ad magna\",\n    \"task_details\": {\n      \"type\": -69642255,\n      \"group_list\": [\n        {\n          \"text\": \"in\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"ipsum dolor\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -38455939.799439244,\n      \"safe_stock\": 42662913,\n      \"period_threshold\": 29188901,\n      \"period_threshold_type\": \"MONTHS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"ipsum\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"pariatur Ut\",\n    \"alias\": \"veniam ut aute ullamco\"\n  },\n  \"trace_id\": \"qui incididunt ullamco\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "648dc5ed-3b9e-4947-9848-8722acaf8ebb",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1973-09-04T23:37:38.154Z\",\n  \"status\": 36260038,\n  \"error\": \"esse dolor\",\n  \"exception\": \"pariatur in\",\n  \"message\": \"anim eiusmod\",\n  \"total_time_taken_in_millis\": -68050951,\n  \"http_status\": \"404 NOT_FOUND\",\n  \"items\": {\n    \"company_id\": -44567806,\n    \"integration_data\": {\n      \"est1\": {},\n      \"pariatur9bb\": {}\n    },\n    \"company_name\": \"quis n\",\n    \"task_details\": {\n      \"type\": -60623154,\n      \"group_list\": [\n        {\n          \"text\": \"enim in\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"consequat sint occaecat ut\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -58667087.56380516,\n      \"safe_stock\": 99459654,\n      \"period_threshold\": -1079108,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"in fugiat enim incididunt Lorem\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"deserunt velit\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"cupidatat consequat minim in\",\n    \"alias\": \"aliquip ad\"\n  },\n  \"payload\": {\n    \"company_id\": 80258703,\n    \"integration_data\": {\n      \"quis_9\": {},\n      \"sunt_c34\": {}\n    },\n    \"company_name\": \"minim ad magna\",\n    \"task_details\": {\n      \"type\": -69642255,\n      \"group_list\": [\n        {\n          \"text\": \"in\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"ipsum dolor\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -38455939.799439244,\n      \"safe_stock\": 42662913,\n      \"period_threshold\": 29188901,\n      \"period_threshold_type\": \"MONTHS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"ipsum\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"pariatur Ut\",\n    \"alias\": \"veniam ut aute ullamco\"\n  },\n  \"trace_id\": \"qui incididunt ullamco\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "e4a7f0fe-9cc8-4635-9732-25a18e1543f6",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "05e7fac1-0204-4e63-8237-da921c152cf6",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1967-11-16T03:14:38.724Z\",\n  \"status\": -11880327,\n  \"error\": \"laborum n\",\n  \"exception\": \"in ut esse anim\",\n  \"message\": \"voluptate ad tempor\",\n  \"total_time_taken_in_millis\": 95933464,\n  \"http_status\": \"420 METHOD_FAILURE\",\n  \"items\": [\n    {\n      \"company_id\": -85370538,\n      \"integration_data\": {\n        \"minimc\": {}\n      },\n      \"company_name\": \"ex dolor\",\n      \"task_details\": {\n        \"type\": -84317047,\n        \"group_list\": [\n          {\n            \"text\": \"enim culpa ut in\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"aliquip magna\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -44071823.05165107,\n        \"safe_stock\": 67544545,\n        \"period_threshold\": 82054668,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"cupidatat magna mollit Lorem\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"Ut tempor reprehenderit\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"incididunt culpa\",\n      \"alias\": \"veniam dolore officia qui\"\n    },\n    {\n      \"company_id\": 41896099,\n      \"integration_data\": {\n        \"Lorem1\": {},\n        \"aliquip_ca\": {}\n      },\n      \"company_name\": \"enim consectetur sit\",\n      \"task_details\": {\n        \"type\": 83594957,\n        \"group_list\": [\n          {\n            \"text\": \"sit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"sint aute sun\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -27519050.540777102,\n        \"safe_stock\": 54472114,\n        \"period_threshold\": -75597185,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"fugiat dolore\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"fugiat aute et aliqua\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"cillum nulla\",\n      \"alias\": \"qui est consecte\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": -22087361,\n      \"integration_data\": {\n        \"do_7\": {},\n        \"tempor_75f\": {}\n      },\n      \"company_name\": \"proident in\",\n      \"task_details\": {\n        \"type\": -91147837,\n        \"group_list\": [\n          {\n            \"text\": \"laboris ad nulla\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"cupidatat eiusmod Lorem incididunt\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 60195005.681030184,\n        \"safe_stock\": -31205568,\n        \"period_threshold\": -39845933,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"nisi nulla\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"proident\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"Lorem dolor ullamco\",\n      \"alias\": \"exercitation dolore culp\"\n    },\n    {\n      \"company_id\": -48470565,\n      \"integration_data\": {\n        \"mollit_8f6\": {}\n      },\n      \"company_name\": \"dolore est anim ut\",\n      \"task_details\": {\n        \"type\": -34532700,\n        \"group_list\": [\n          {\n            \"text\": \"commodo irure\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"aliqua ipsum ut\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 91147190.65953425,\n        \"safe_stock\": -62637161,\n        \"period_threshold\": -65024400,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"et mollit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ea mollit occaecat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"sunt irure dolor\",\n      \"alias\": \"ea tempor non i\"\n    }\n  ],\n  \"trace_id\": \"el\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b6589a18-4cc7-423f-ad42-62447d1a5576",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1967-09-02T17:01:58.184Z\",\n  \"status\": -93793519,\n  \"error\": \"et aliquip eu\",\n  \"exception\": \"minim reprehenderit nostrud sed\",\n  \"message\": \"aliquip\",\n  \"total_time_taken_in_millis\": -23422904,\n  \"http_status\": \"403 FORBIDDEN\",\n  \"items\": [\n    {\n      \"company_id\": 12921310,\n      \"integration_data\": {\n        \"veniam03\": {},\n        \"velit645\": {},\n        \"fugiat_3e5\": {}\n      },\n      \"company_name\": \"occaecat cupidatat eiusmod\",\n      \"task_details\": {\n        \"type\": -75683492,\n        \"group_list\": [\n          {\n            \"text\": \"sit labore nostrud\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"esse eu\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -48765986.292331845,\n        \"safe_stock\": 37996383,\n        \"period_threshold\": 60981637,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"officia voluptate eu\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"exercitation\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"laborum labore\",\n      \"alias\": \"incididunt sit elit adipisicing\"\n    },\n    {\n      \"company_id\": -42232683,\n      \"integration_data\": {\n        \"velitd52\": {},\n        \"ad3\": {}\n      },\n      \"company_name\": \"nisi\",\n      \"task_details\": {\n        \"type\": -3687177,\n        \"group_list\": [\n          {\n            \"text\": \"id ipsum\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"eu enim consequat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 85411024.23869988,\n        \"safe_stock\": -98628922,\n        \"period_threshold\": 12265552,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"consequat\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"veniam cillum\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"aliquip Duis Excepteur nulla\",\n      \"alias\": \"anim ea proident\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": 52738323,\n      \"integration_data\": {\n        \"proident_8\": {},\n        \"consequat__\": {}\n      },\n      \"company_name\": \"dolore sint commodo\",\n      \"task_details\": {\n        \"type\": 49791612,\n        \"group_list\": [\n          {\n            \"text\": \"irure do do\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"et\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 85815114.67171267,\n        \"safe_stock\": 75449448,\n        \"period_threshold\": 50786331,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"adipisicing nulla est pariatur ut\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"nulla enim minim qui fugiat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"enim magna ullamco\",\n      \"alias\": \"Ut ea esse\"\n    },\n    {\n      \"company_id\": -74224154,\n      \"integration_data\": {\n        \"adipisicing_9\": {}\n      },\n      \"company_name\": \"anim adipisicing\",\n      \"task_details\": {\n        \"type\": 80844851,\n        \"group_list\": [\n          {\n            \"text\": \"velit exercitation labore\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"laborum irure nostrud dolore fugiat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 91720290.00597712,\n        \"safe_stock\": 94977125,\n        \"period_threshold\": -8810921,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"irure ex aute dolor\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"anim proident\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"sunt aliquip incididunt dolore\",\n      \"alias\": \"amet occaecat\"\n    }\n  ],\n  \"trace_id\": \"proident in Duis voluptate\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2dbc72d5-fbf9-4df8-9545-f06c24771cda",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1967-09-02T17:01:58.184Z\",\n  \"status\": -93793519,\n  \"error\": \"et aliquip eu\",\n  \"exception\": \"minim reprehenderit nostrud sed\",\n  \"message\": \"aliquip\",\n  \"total_time_taken_in_millis\": -23422904,\n  \"http_status\": \"403 FORBIDDEN\",\n  \"items\": [\n    {\n      \"company_id\": 12921310,\n      \"integration_data\": {\n        \"veniam03\": {},\n        \"velit645\": {},\n        \"fugiat_3e5\": {}\n      },\n      \"company_name\": \"occaecat cupidatat eiusmod\",\n      \"task_details\": {\n        \"type\": -75683492,\n        \"group_list\": [\n          {\n            \"text\": \"sit labore nostrud\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"esse eu\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -48765986.292331845,\n        \"safe_stock\": 37996383,\n        \"period_threshold\": 60981637,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"officia voluptate eu\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"exercitation\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"laborum labore\",\n      \"alias\": \"incididunt sit elit adipisicing\"\n    },\n    {\n      \"company_id\": -42232683,\n      \"integration_data\": {\n        \"velitd52\": {},\n        \"ad3\": {}\n      },\n      \"company_name\": \"nisi\",\n      \"task_details\": {\n        \"type\": -3687177,\n        \"group_list\": [\n          {\n            \"text\": \"id ipsum\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"eu enim consequat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 85411024.23869988,\n        \"safe_stock\": -98628922,\n        \"period_threshold\": 12265552,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"consequat\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"veniam cillum\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"aliquip Duis Excepteur nulla\",\n      \"alias\": \"anim ea proident\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": 52738323,\n      \"integration_data\": {\n        \"proident_8\": {},\n        \"consequat__\": {}\n      },\n      \"company_name\": \"dolore sint commodo\",\n      \"task_details\": {\n        \"type\": 49791612,\n        \"group_list\": [\n          {\n            \"text\": \"irure do do\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"et\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 85815114.67171267,\n        \"safe_stock\": 75449448,\n        \"period_threshold\": 50786331,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"adipisicing nulla est pariatur ut\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"nulla enim minim qui fugiat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"enim magna ullamco\",\n      \"alias\": \"Ut ea esse\"\n    },\n    {\n      \"company_id\": -74224154,\n      \"integration_data\": {\n        \"adipisicing_9\": {}\n      },\n      \"company_name\": \"anim adipisicing\",\n      \"task_details\": {\n        \"type\": 80844851,\n        \"group_list\": [\n          {\n            \"text\": \"velit exercitation labore\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"laborum irure nostrud dolore fugiat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 91720290.00597712,\n        \"safe_stock\": 94977125,\n        \"period_threshold\": -8810921,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"irure ex aute dolor\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"anim proident\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"sunt aliquip incididunt dolore\",\n      \"alias\": \"amet occaecat\"\n    }\n  ],\n  \"trace_id\": \"proident in Duis voluptate\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "7436f4cd-de07-4860-9cdb-af12f38a53b4",
      "name": "Partner",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "e0baaa7b-bdd5-44c4-8690-2d8654c8743e",
          "name": "getPanelExtensionDetails | Get panel extension details",
          "request": {
            "name": "getPanelExtensionDetails | Get panel extension details",
            "description": {
              "content": "Retrieve detailed information about panel extensions in the public server setup.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "panel",
                "partners",
                "v1.0",
                "extensions",
                ":slug"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "slug",
                  "description": "(Required) pass the slug of the extension"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "2ab75adb-1ab7-47f1-9d4e-c9ed6e768499",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "panel",
                    "partners",
                    "v1.0",
                    "extensions",
                    ":slug"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "slug",
                      "description": "(Required) pass the slug of the extension"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"_id\": \"633ab5cb635a41fdde9fb648\",\n  \"organization_id\": \"6333fef3b1d85e44e738c138\",\n  \"extension_id\": \"633425ebb1d85e44e738c2ab\",\n  \"slug\": \"example-extension-1\",\n  \"scope\": [\n    \"company/profile\",\n    \"company/saleschannel\",\n    \"company/product\",\n    \"company/order\",\n    \"company/application/customer\",\n    \"company/application/analytics\",\n    \"company/application/storage\",\n    \"company/application/marketing\",\n    \"company/application/catalogue\",\n    \"company/application/communication\",\n    \"company/application/support\",\n    \"company/application/order\",\n    \"company/application/settings\"\n  ],\n  \"category\": {\n    \"categories_l1\": [],\n    \"categories_l2\": []\n  },\n  \"listing_info\": {\n    \"name\": \"ujjawal-example-extension-1\",\n    \"keywords\": [],\n    \"tagline\": \"test-extension for test how extensions look and work and how to create them\",\n    \"icon\": \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/AMwIEOw0U-logo.png\"\n  },\n  \"details\": {\n    \"benefits\": [\n      {\n        \"title\": \"Works fast\",\n        \"description\": \"works fast\",\n        \"_id\": \"633ab5cb635a41fdde9fb649\"\n      }\n    ],\n    \"screenshots\": {\n      \"desktop\": [\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/g95yHXkou-1024x576.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/IKdHxP2fN-1024x576.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/_auq1yvEp-1024x576.png\"\n      ],\n      \"mobile\": [\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/E_YAHM9cU-600x900.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/vEnXw9cCg-600x900.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/O3Wng4Rqn-600x900.png\"\n      ]\n    },\n    \"description\": \"Sample public extension\",\n    \"demo_url\": \"\",\n    \"video_url\": [\n      {\n        \"type\": \"video\",\n        \"url\": \"https://hdn-1.addsale.com/x0/products/videos/item/free/original/kizLVNWyS-video-sc-1.mp4\"\n      }\n    ],\n    \"integrations\": []\n  },\n  \"plan_type\": \"free\",\n  \"plans\": [\n    {\n      \"name\": \"Custom Free\",\n      \"features\": \"provides ease\",\n      \"type\": \"free\",\n      \"price\": {\n        \"amount\": 0,\n        \"currency\": \"INR\"\n      },\n      \"trial_days\": 0,\n      \"additional_charges\": \"\"\n    }\n  ],\n  \"plans_url\": \"\",\n  \"contact_info\": {\n    \"support\": {\n      \"email\": \"ujjawaltaleja@gofynd.com\",\n      \"phone\": \"7988169279\",\n      \"website_url\": \"\",\n      \"faq_url\": \"\",\n      \"privacy_policy_url\": \"\"\n    }\n  },\n  \"current_status\": \"active\",\n  \"coming_soon\": {\n    \"is_coming_soon\": false,\n    \"upvote_count\": 0\n  },\n  \"created_at\": \"2022-10-03T10:13:31.607Z\",\n  \"modified_at\": \"2022-10-03T10:13:31.607Z\",\n  \"organization\": {\n    \"name\": \"ujjawal-partners-fashion\",\n    \"slug\": \"ujjawa-w7t-68\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "99e7d4b9-2cb9-4ea6-820a-ecb61645398f",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "30b3c174-7039-4cfc-81c3-f0c4ec89ac5e",
          "name": "fetchAllWebhookEvents | Fetch all webhook events.",
          "request": {
            "name": "fetchAllWebhookEvents | Fetch all webhook events.",
            "description": {
              "content": "Retrieve a list of all webhook events in the public server setup.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "098f2529-8228-49e7-9221-f77599e4cbc6",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b8b34763-fde2-4a4d-ac9f-df6811635bf4",
          "name": "queryWebhookEventDetails | Query webhook event details.",
          "request": {
            "name": "queryWebhookEventDetails | Query webhook event details.",
            "description": {
              "content": "Query and obtain detailed information about webhook events in the public server configurations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "d1d91627-f504-4898-a486-26abf8f998f4",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"event_name\": \"article\",\n    \"event_type\": \"update\",\n    \"event_category\": \"company\",\n    \"version\": \"1\"\n  }\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "849d3a30-3589-4cb9-8a6e-1ea00d3e976b",
          "name": "notifyDepricatedEvent | Notifies all the events that are going to depricate",
          "request": {
            "name": "notifyDepricatedEvent | Notifies all the events that are going to depricate",
            "description": {
              "content": "Notifies all the events that are subscribed and are going to deprecate or new version is available for those events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "depricated-event-notifier"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "c9d4d51b-4147-4ee9-a180-41bf89b8d2ea",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "depricated-event-notifier"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "8c605025-4313-4719-b15e-d6809ff2df06",
          "name": "testHandlerTransformation | Test transformation of handler",
          "request": {
            "name": "testHandlerTransformation | Test transformation of handler",
            "description": {
              "content": "Test transformation of handler",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "transform-event"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event_name\": \"<string>\",\n  \"event_type\": \"<string>\",\n  \"event_category\": \"<string>\",\n  \"event_version\": \"<string>\",\n  \"event\": {\n    \"payload\": {\n      \"id_932\": 11243357,\n      \"laboris_4\": -32245733.726628557\n    },\n    \"meta\": {\n      \"dolor_e\": true\n    }\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "3ada1451-1d5e-4bc0-9ed5-f1cc3ec31f59",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "transform-event"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"event_name\": \"location\",\n  \"event_type\": \"create\",\n  \"event_category\": \"company\",\n  \"event_version\": \"1\",\n  \"event\": {\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450Z\",\n        \"modified_on\": \"2023-10-24T01:41:44.450Z\"\n      }\n    },\n    \"meta\": {\n      \"event\": {\n        \"type\": \"create\",\n        \"name\": \"location\",\n        \"version\": \"1\"\n      },\n      \"company_id\": 6086,\n      \"service\": {\n        \"name\": \"WheelJack\"\n      },\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"created_timestamp\": 1698111704725\n    }\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_trace_id\": [\n    \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n  ],\n  \"data\": {\n    \"event\": {\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"name\": \"location\",\n      \"type\": \"create\",\n      \"version\": \"1\",\n      \"created_timestamp\": 1698111704725\n    },\n    \"company_id\": 6086,\n    \"contains\": [\n      \"location\"\n    ],\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450Z\",\n        \"modified_on\": \"2023-10-24T01:41:44.450Z\"\n      }\n    }\n  },\n  \"event_name\": \"location\",\n  \"version\": \"1\",\n  \"status\": false,\n  \"event_type\": \"create\",\n  \"service_meta\": {\n    \"name\": \"WheelJack\"\n  },\n  \"association\": {\n    \"company_id\": 6086\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "e1ba8044-ff84-47d8-877d-37bcfaad9342",
          "name": "validateSchema | Validate Schema for an event",
          "request": {
            "name": "validateSchema | Validate Schema for an event",
            "description": {
              "content": "Validate Schema for an event",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "validate-event-schema"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event_name\": \"<string>\",\n  \"event_type\": \"<string>\",\n  \"event_category\": \"<string>\",\n  \"event_version\": \"<string>\",\n  \"event\": {\n    \"payload\": {\n      \"incididunt14\": -67107502.49082982,\n      \"velit_b\": -15096835\n    },\n    \"meta\": {\n      \"ea8\": \"sint ut consectetur nulla sed\",\n      \"aliquip18c\": 81199737.59599352\n    }\n  },\n  \"event_schema\": {\n    \"fugiat_393\": 83346302\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "bb9aa931-0fbd-4324-aa36-913fdf404565",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "validate-event-schema"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"event_name\": \"location\",\n  \"event_type\": \"create\",\n  \"event_category\": \"company\",\n  \"event_version\": \"1\",\n  \"event\": {\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450Z\",\n        \"modified_on\": \"2023-10-24T01:41:44.450Z\"\n      }\n    },\n    \"meta\": {\n      \"event\": {\n        \"type\": \"create\",\n        \"name\": \"location\",\n        \"version\": \"1\"\n      },\n      \"company_id\": 6086,\n      \"service\": {\n        \"name\": \"WheelJack\"\n      },\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"created_timestamp\": 1698111704725\n    }\n  },\n  \"event_schema\": {}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": true,\n  \"message\": \"Valid schema for this event\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fynd.com"
    }
  ],
  "info": {
    "_postman_id": "b84f5115-486f-4f05-9a1c-1c93e65e7dd5",
    "name": "Fynd Platform's Public Side APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public Side APIs",
      "type": "text/plain"
    }
  }
}
