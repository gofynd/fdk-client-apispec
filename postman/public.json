{
  "item": [
    {
      "id": "0fd8523f-ef85-4a5c-8b9e-0fb848907260",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "c5f4ed40-5ff5-40a7-940b-7f24fa5ff554",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "2aa6d2b6-507e-4974-b3ad-8cb446a84dd9",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "est nostrud ea dolor consequat",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "770b9b4b-9d2a-47a8-9321-8f0fd0f3b431",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "est nostrud ea dolor consequat",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"Invalid application domain or id.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d74aaad8-c38f-4408-8ac2-4b7568ff3493",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "est nostrud ea dolor consequat",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "2d5420d1-6b1f-4276-94dd-e0b7e2945e8d",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "65c2cb0a-90b9-4852-80fa-8fac47541799",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "8314a2b4-68df-460a-ae92-d4a3bb60763b",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "01af2ad6-bee5-4192-8665-1edeae30550e",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "1c43e32c-ad33-43a0-b6e8-ab44b577760a",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -96575078,\n   \"event_name\": \"non\",\n   \"event_type\": \"eu\",\n   \"event_category\": \"laboris\",\n   \"version\": \"elit consequat occaecat voluptate\",\n   \"display_name\": \"laboris\",\n   \"description\": \"dolor ut adipisicing cillum amet\",\n   \"created_on\": \"eu consectetur enim\"\n  },\n  {\n   \"id\": -64554777,\n   \"event_name\": \"laboris velit in elit\",\n   \"event_type\": \"ex Excepteur irure amet enim\",\n   \"event_category\": \"fugiat ut occaecat\",\n   \"version\": \"quis amet Duis pariatur in\",\n   \"display_name\": \"ad quis\",\n   \"description\": \"aliqua labore fugiat\",\n   \"created_on\": \"ea et id cupidatat ul\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "80b2023f-6649-4f86-80db-692a9aa0d6fb",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "313e54c6-f582-49ab-b1a0-a4b2aa1f588f",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -70872356,\n   \"event_name\": \"enim laboris dolor e\",\n   \"event_type\": \"commodo labore magna ea\",\n   \"event_category\": \"commodo cillum\",\n   \"version\": \"occaecat ea reprehenderit\",\n   \"display_name\": \"amet qui aliqua Excepteur\",\n   \"description\": \"do\",\n   \"created_on\": \"fugiat\"\n  },\n  {\n   \"id\": 41857479,\n   \"event_name\": \"do aliquip laborum\",\n   \"event_type\": \"in qui\",\n   \"event_category\": \"laborum incididunt\",\n   \"version\": \"Excepteur tempor amet\",\n   \"display_name\": \"do Excepteur mollit Lorem\",\n   \"description\": \"quis in amet\",\n   \"created_on\": \"cupidatat magna\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "1f6ddff4-2556-4d1a-84f4-c2f11c80c545",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "759e7592-f615-4ef8-9459-70c2c69dc1cd",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "221acc42-82b2-48d9-977c-ab68a459dd55",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1991-01-07T22:08:04.563Z\",\n \"status\": -85685952,\n \"error\": \"eu ex\",\n \"exception\": \"occae\",\n \"message\": \"do irure cupidatat\",\n \"total_time_taken_in_millis\": 22936387,\n \"http_status\": \"308 PERMANENT_REDIRECT\",\n \"items\": [\n  {\n   \"company_id\": -35251699,\n   \"integration_data\": {},\n   \"company_name\": \"proident sit reprehenderit\",\n   \"task_details\": {\n    \"type\": -86760971,\n    \"group_list\": [\n     {\n      \"text\": \"voluptate irure culpa\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor id dolo\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 94425154.01907644,\n    \"safe_stock\": 91524670,\n    \"period_threshold\": -44246292,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"aliqua ex voluptate dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"adipisicing aute in Duis deserunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"anim sed nostrud\",\n   \"alias\": \"sint non\"\n  },\n  {\n   \"company_id\": -4671806,\n   \"integration_data\": {},\n   \"company_name\": \"commodo occaecat do sed\",\n   \"task_details\": {\n    \"type\": -16659829,\n    \"group_list\": [\n     {\n      \"text\": \"culpa officia et consectetur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"pariatur sint\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 86579002.0372082,\n    \"safe_stock\": 43374543,\n    \"period_threshold\": 62582263,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"tempor dolor proident aliquip\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore dolore consectetur veniam\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"exercitation ad Ut id incididunt\",\n   \"alias\": \"consectetur culpa nostrud in\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -41848531,\n   \"integration_data\": {},\n   \"company_name\": \"eiusmod veniam aliqua\",\n   \"task_details\": {\n    \"type\": 98331647,\n    \"group_list\": [\n     {\n      \"text\": \"amet in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliqua non consectetur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -96195734.08177477,\n    \"safe_stock\": 61515060,\n    \"period_threshold\": 77399839,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"id laboris\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"est laboris do\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ad aliquip\",\n   \"alias\": \"esse Ut non te\"\n  },\n  {\n   \"company_id\": 15624552,\n   \"integration_data\": {},\n   \"company_name\": \"enim tempor minim\",\n   \"task_details\": {\n    \"type\": -32340922,\n    \"group_list\": [\n     {\n      \"text\": \"eu cupidatat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eiusmod in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 10567404.213869706,\n    \"safe_stock\": 50514519,\n    \"period_threshold\": 13656354,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"et sunt c\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nulla in sed cillum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Excepteur incididunt irure deserunt dolore\",\n   \"alias\": \"tempor non sunt\"\n  }\n ],\n \"trace_id\": \"tempor nulla exerc\",\n \"page\": {\n  \"type\": \"do\",\n  \"size\": 2244357,\n  \"current\": -97923245,\n  \"has_next\": true,\n  \"item_total\": 95369870,\n  \"next_id\": \"proident qui in do dolore\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "518e3dca-f805-4ef2-9a46-4c7d46565264",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1966-12-20T11:59:47.067Z\",\n \"status\": -479829,\n \"error\": \"ex fugiat eiusmod ut\",\n \"exception\": \"esse labore dolore\",\n \"message\": \"nulla quis eiusmod\",\n \"total_time_taken_in_millis\": 13437516,\n \"http_status\": \"410 GONE\",\n \"items\": [\n  {\n   \"company_id\": 399754,\n   \"integration_data\": {},\n   \"company_name\": \"amet\",\n   \"task_details\": {\n    \"type\": -78215232,\n    \"group_list\": [\n     {\n      \"text\": \"est ipsum cupidatat consectetur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"fugiat irure reprehenderit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 21798444.44135122,\n    \"safe_stock\": 98361604,\n    \"period_threshold\": -95720841,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"exercitation magna\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"do\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"dolor nostrud culpa sed\",\n   \"alias\": \"exe\"\n  },\n  {\n   \"company_id\": 45165594,\n   \"integration_data\": {},\n   \"company_name\": \"officia ea ad velit\",\n   \"task_details\": {\n    \"type\": 19283144,\n    \"group_list\": [\n     {\n      \"text\": \"proident conse\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in mollit nostrud laborum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 85469291.5765687,\n    \"safe_stock\": 72896363,\n    \"period_threshold\": -61002528,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"in sint dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consectetur sit reprehenderit et sunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in cupidatat magna id\",\n   \"alias\": \"exercitation in eiusmod\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -84765030,\n   \"integration_data\": {},\n   \"company_name\": \"minim ad\",\n   \"task_details\": {\n    \"type\": 76676018,\n    \"group_list\": [\n     {\n      \"text\": \"proident quis ullamco\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ex nostrud Duis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 47205769.32305774,\n    \"safe_stock\": 28243603,\n    \"period_threshold\": 89615483,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ullamco in eu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ex\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"officia cillum irure labore\",\n   \"alias\": \"mollit repr\"\n  },\n  {\n   \"company_id\": 78451549,\n   \"integration_data\": {},\n   \"company_name\": \"fugiat\",\n   \"task_details\": {\n    \"type\": 16040361,\n    \"group_list\": [\n     {\n      \"text\": \"voluptate ut veniam\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laborum fugiat sit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -43355076.41319083,\n    \"safe_stock\": 9018432,\n    \"period_threshold\": 12960457,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"minim reprehenderit officia et\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor id\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"exercitation cillum ut Excepteur\",\n   \"alias\": \"cillum\"\n  }\n ],\n \"trace_id\": \"minim eiusmod sit ipsum Duis\",\n \"page\": {\n  \"type\": \"non ex laborum do \",\n  \"size\": 8739348,\n  \"current\": 49528318,\n  \"has_next\": true,\n  \"item_total\": 46033674,\n  \"next_id\": \"esse sint fugiat dolore\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "14f819ee-3d11-4720-8d66-f8b62f94c42e",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1966-12-20T11:59:47.067Z\",\n \"status\": -479829,\n \"error\": \"ex fugiat eiusmod ut\",\n \"exception\": \"esse labore dolore\",\n \"message\": \"nulla quis eiusmod\",\n \"total_time_taken_in_millis\": 13437516,\n \"http_status\": \"410 GONE\",\n \"items\": [\n  {\n   \"company_id\": 399754,\n   \"integration_data\": {},\n   \"company_name\": \"amet\",\n   \"task_details\": {\n    \"type\": -78215232,\n    \"group_list\": [\n     {\n      \"text\": \"est ipsum cupidatat consectetur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"fugiat irure reprehenderit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 21798444.44135122,\n    \"safe_stock\": 98361604,\n    \"period_threshold\": -95720841,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"exercitation magna\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"do\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"dolor nostrud culpa sed\",\n   \"alias\": \"exe\"\n  },\n  {\n   \"company_id\": 45165594,\n   \"integration_data\": {},\n   \"company_name\": \"officia ea ad velit\",\n   \"task_details\": {\n    \"type\": 19283144,\n    \"group_list\": [\n     {\n      \"text\": \"proident conse\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in mollit nostrud laborum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 85469291.5765687,\n    \"safe_stock\": 72896363,\n    \"period_threshold\": -61002528,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"in sint dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consectetur sit reprehenderit et sunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in cupidatat magna id\",\n   \"alias\": \"exercitation in eiusmod\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -84765030,\n   \"integration_data\": {},\n   \"company_name\": \"minim ad\",\n   \"task_details\": {\n    \"type\": 76676018,\n    \"group_list\": [\n     {\n      \"text\": \"proident quis ullamco\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ex nostrud Duis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 47205769.32305774,\n    \"safe_stock\": 28243603,\n    \"period_threshold\": 89615483,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ullamco in eu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ex\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"officia cillum irure labore\",\n   \"alias\": \"mollit repr\"\n  },\n  {\n   \"company_id\": 78451549,\n   \"integration_data\": {},\n   \"company_name\": \"fugiat\",\n   \"task_details\": {\n    \"type\": 16040361,\n    \"group_list\": [\n     {\n      \"text\": \"voluptate ut veniam\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laborum fugiat sit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -43355076.41319083,\n    \"safe_stock\": 9018432,\n    \"period_threshold\": 12960457,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"minim reprehenderit officia et\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor id\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"exercitation cillum ut Excepteur\",\n   \"alias\": \"cillum\"\n  }\n ],\n \"trace_id\": \"minim eiusmod sit ipsum Duis\",\n \"page\": {\n  \"type\": \"non ex laborum do \",\n  \"size\": 8739348,\n  \"current\": 49528318,\n  \"has_next\": true,\n  \"item_total\": 46033674,\n  \"next_id\": \"esse sint fugiat dolore\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "c1a9ad8b-7970-4cfe-a631-7fd864b9ff48",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "967e9b24-c68f-4683-bb1d-10507b654e33",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1992-04-10T18:23:55.748Z\",\n \"status\": -46555119,\n \"error\": \"ut sed incididunt\",\n \"exception\": \"ut deserunt\",\n \"message\": \"dolore tempor sint consectetur Duis\",\n \"total_time_taken_in_millis\": 46854696,\n \"http_status\": \"417 EXPECTATION_FAILED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"\",\n \"page\": {\n  \"type\": \"enim nisi do ut\",\n  \"size\": 79294573,\n  \"current\": -18862949,\n  \"has_next\": false,\n  \"item_total\": 79552362,\n  \"next_id\": \"velit sint commodo tempor\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e2a04883-1e32-4184-9cd9-05a32ed5ab82",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1992-04-10T18:23:55.748Z\",\n \"status\": -46555119,\n \"error\": \"ut sed incididunt\",\n \"exception\": \"ut deserunt\",\n \"message\": \"dolore tempor sint consectetur Duis\",\n \"total_time_taken_in_millis\": 46854696,\n \"http_status\": \"417 EXPECTATION_FAILED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"\",\n \"page\": {\n  \"type\": \"enim nisi do ut\",\n  \"size\": 79294573,\n  \"current\": -18862949,\n  \"has_next\": false,\n  \"item_total\": 79552362,\n  \"next_id\": \"velit sint commodo tempor\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "17128b2d-5032-47e1-9e40-7628d215b3b6",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1992-04-10T18:23:55.748Z\",\n \"status\": -46555119,\n \"error\": \"ut sed incididunt\",\n \"exception\": \"ut deserunt\",\n \"message\": \"dolore tempor sint consectetur Duis\",\n \"total_time_taken_in_millis\": 46854696,\n \"http_status\": \"417 EXPECTATION_FAILED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"\",\n \"page\": {\n  \"type\": \"enim nisi do ut\",\n  \"size\": 79294573,\n  \"current\": -18862949,\n  \"has_next\": false,\n  \"item_total\": 79552362,\n  \"next_id\": \"velit sint commodo tempor\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "123bbe05-b8dd-4301-9579-47830c146802",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "e3df83f2-ac09-41ca-a9ea-25703e279a4a",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2012-03-20T16:55:15.300Z\",\n \"status\": -19161716,\n \"error\": \"officia adipisicing\",\n \"exception\": \"amet proident\",\n \"message\": \"cupidatat elit tempor Lorem\",\n \"total_time_taken_in_millis\": -21841970,\n \"http_status\": \"412 PRECONDITION_FAILED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"sed consectetur\",\n \"page\": {\n  \"type\": \"\",\n  \"size\": 18475291,\n  \"current\": 25756363,\n  \"has_next\": true,\n  \"item_total\": 11762900,\n  \"next_id\": \"dolor\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "0a29c38a-6066-464f-b8f4-4125ce389f43",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2012-03-20T16:55:15.300Z\",\n \"status\": -19161716,\n \"error\": \"officia adipisicing\",\n \"exception\": \"amet proident\",\n \"message\": \"cupidatat elit tempor Lorem\",\n \"total_time_taken_in_millis\": -21841970,\n \"http_status\": \"412 PRECONDITION_FAILED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"sed consectetur\",\n \"page\": {\n  \"type\": \"\",\n  \"size\": 18475291,\n  \"current\": 25756363,\n  \"has_next\": true,\n  \"item_total\": 11762900,\n  \"next_id\": \"dolor\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "4dada9f1-318c-4976-a3c7-d3f1faa61e19",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2012-03-20T16:55:15.300Z\",\n \"status\": -19161716,\n \"error\": \"officia adipisicing\",\n \"exception\": \"amet proident\",\n \"message\": \"cupidatat elit tempor Lorem\",\n \"total_time_taken_in_millis\": -21841970,\n \"http_status\": \"412 PRECONDITION_FAILED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"sed consectetur\",\n \"page\": {\n  \"type\": \"\",\n  \"size\": 18475291,\n  \"current\": 25756363,\n  \"has_next\": true,\n  \"item_total\": 11762900,\n  \"next_id\": \"dolor\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3ff29770-a592-4c44-959e-8078b1f45a48",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2012-03-20T16:55:15.300Z\",\n \"status\": -19161716,\n \"error\": \"officia adipisicing\",\n \"exception\": \"amet proident\",\n \"message\": \"cupidatat elit tempor Lorem\",\n \"total_time_taken_in_millis\": -21841970,\n \"http_status\": \"412 PRECONDITION_FAILED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"sed consectetur\",\n \"page\": {\n  \"type\": \"\",\n  \"size\": 18475291,\n  \"current\": 25756363,\n  \"has_next\": true,\n  \"item_total\": 11762900,\n  \"next_id\": \"dolor\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "570206bb-f076-4258-99d2-71cfc2022f7a",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2012-03-20T16:55:15.300Z\",\n \"status\": -19161716,\n \"error\": \"officia adipisicing\",\n \"exception\": \"amet proident\",\n \"message\": \"cupidatat elit tempor Lorem\",\n \"total_time_taken_in_millis\": -21841970,\n \"http_status\": \"412 PRECONDITION_FAILED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"sed consectetur\",\n \"page\": {\n  \"type\": \"\",\n  \"size\": 18475291,\n  \"current\": 25756363,\n  \"has_next\": true,\n  \"item_total\": 11762900,\n  \"next_id\": \"dolor\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx0.de"
    }
  ],
  "info": {
    "_postman_id": "854eb3b6-60c6-4cd9-b6e7-7263db93a36f",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
