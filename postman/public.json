{
  "item": [
    {
      "id": "131c7dfa-93bd-4df0-9713-7d2cf3144008",
      "name": "Billing",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "e7b254b0-d3cb-4cef-89e5-5f24ae086c13",
          "name": "getStandardPlans | Get Standard/Public Plans",
          "request": {
            "name": "getStandardPlans | Get Standard/Public Plans",
            "description": {
              "content": "Get Standard/Public Plans.\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "public",
                "billing",
                "v1.0",
                "plan",
                "detailed-list"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "platform",
                  "value": "<string>",
                  "description": "(Required) The type of platform for which plans are requested."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "288378a4-405a-466a-bb94-8bc8717e0f94",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform",
                      "value": "mobile/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"plans\": [\n    {\n      \"recurring\": {\n        \"interval\": \"month\",\n        \"interval_count\": 3\n      },\n      \"is_trial_plan\": true,\n      \"plan_group\": \"default\",\n      \"tag_lines\": [\n        \"This is 2020won trial plan\",\n        \"This is 2020won trial plan\"\n      ],\n      \"currency\": \"INR\",\n      \"is_active\": true,\n      \"is_visible\": false,\n      \"trial_period\": 30,\n      \"addons\": [\n        \"co\",\n        \"est enim\"\n      ],\n      \"tags\": [\n        \"eiusmod incididunt\",\n        \"et in\"\n      ],\n      \"type\": \"public\",\n      \"country\": \"IN\",\n      \"_id\": \"5f0dcd866173cb003706098f\",\n      \"name\": \"30 day Trial\",\n      \"description\": \"30 day Trial\",\n      \"amount\": 0,\n      \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n      \"created_at\": \"2020-07-14T15:21:42.959Z\",\n      \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n    },\n    {\n      \"recurring\": {\n        \"interval\": \"month\",\n        \"interval_count\": 3\n      },\n      \"is_trial_plan\": true,\n      \"plan_group\": \"default\",\n      \"tag_lines\": [\n        \"This is 2020won trial plan\",\n        \"This is 2020won trial plan\"\n      ],\n      \"currency\": \"INR\",\n      \"is_active\": true,\n      \"is_visible\": false,\n      \"trial_period\": 30,\n      \"addons\": [\n        \"adipisicing culpa occaecat\",\n        \"ullamco eu dolore aute\"\n      ],\n      \"tags\": [\n        \"adipisicing irure nulla mollit\",\n        \"sit Ut dolor\"\n      ],\n      \"type\": \"public\",\n      \"country\": \"IN\",\n      \"_id\": \"5f0dcd866173cb003706098f\",\n      \"name\": \"30 day Trial\",\n      \"description\": \"30 day Trial\",\n      \"amount\": 0,\n      \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n      \"created_at\": \"2020-07-14T15:21:42.959Z\",\n      \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n    }\n  ],\n  \"trial_plan\": {\n    \"recurring\": {\n      \"interval\": \"month\",\n      \"interval_count\": 3\n    },\n    \"is_trial_plan\": true,\n    \"plan_group\": \"default\",\n    \"tag_lines\": [\n      \"This is 2020won trial plan\",\n      \"This is 2020won trial plan\"\n    ],\n    \"currency\": \"INR\",\n    \"is_active\": true,\n    \"is_visible\": false,\n    \"trial_period\": 30,\n    \"addons\": [\n      \"sit ullamco\",\n      \"co\"\n    ],\n    \"tags\": [\n      \"pariatur aute deserunt \",\n      \"sit reprehenderit\"\n    ],\n    \"type\": \"public\",\n    \"country\": \"IN\",\n    \"_id\": \"5f0dcd866173cb003706098f\",\n    \"name\": \"30 day Trial\",\n    \"description\": \"30 day Trial\",\n    \"amount\": 0,\n    \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n    \"created_at\": \"2020-07-14T15:21:42.959Z\",\n    \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n  },\n  \"component_groups\": [\n    \"Key Features\",\n    \"Key Features\"\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "225e6ab2-f93a-411d-b16c-1c8b85784432",
              "name": "Resource not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform",
                      "value": "mobile/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Reason is required\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ddce6867-f1e1-4120-8eb6-794be959ba5f",
              "name": "Internal server error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform",
                      "value": "mobile/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Opps something went wrong !!\",\n  \"code\": \"INTERNAL_SERVER_ERROR\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "84a42727-9fe1-44c6-a314-ef254c512564",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "d2dabc96-eb21-41d4-a265-ca426a3a4172",
          "name": "searchApplication | Search application",
          "request": {
            "name": "searchApplication | Search application",
            "description": {
              "content": "Provide application name or domain url.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "ca0d3bef-5017-4261-8685-73b08bb13c23",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "esse non",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"application\": {\n    \"website\": {\n      \"enabled\": true,\n      \"basepath\": \"/\"\n    },\n    \"cors\": {\n      \"domains\": []\n    },\n    \"auth\": {\n      \"enabled\": true\n    },\n    \"description\": \"test\",\n    \"channel_type\": \"store\",\n    \"cache_ttl\": -1,\n    \"internal\": false,\n    \"is_active\": true,\n    \"mode\": \"live\",\n    \"_id\": \"620b931ee7bfb11f910bf4a3\",\n    \"company_id\": 2,\n    \"name\": \"test\",\n    \"owner\": \"5b9b98150df588546aaea6d2\",\n    \"logo\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"favicon\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"banner\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n    },\n    \"token\": \"tPQv0nc23\",\n    \"tokens\": [\n      {\n        \"token\": \"tPQv0nc23\",\n        \"created_at\": \"2022-02-15T11:48:46.909Z\"\n      }\n    ],\n    \"domains\": [\n      {\n        \"verified\": true,\n        \"is_primary\": true,\n        \"is_shortlink\": true,\n        \"_id\": \"620b931ee7bfb11f910bf4a4\",\n        \"name\": \"qckvv5lhp.hostfynd.dev\"\n      }\n    ],\n    \"redirections\": [],\n    \"meta\": [],\n    \"created_at\": \"2022-02-15T11:48:46.909Z\",\n    \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n    \"__v\": 0,\n    \"domain\": {\n      \"verified\": true,\n      \"is_primary\": true,\n      \"is_shortlink\": true,\n      \"_id\": \"620b931ee7bfb11f910bf4a4\",\n      \"name\": \"qckvv5lhp.hostfynd.dev\"\n    },\n    \"id\": \"620b931ee7bfb11f910bf4a3\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "146e0f7d-d5a2-46b9-a32c-ee6eb9aa62ea",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "esse non",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"Invalid application domain or id.\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d261e3ab-a4d0-45b0-bbeb-29619aef26a0",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "esse non",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"No application found\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "33e5f58f-ed19-4de0-b405-e15fba61d6e2",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {
              "content": "Get Location configuration",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "d8e1af0d-b5ef-4ad0-bff8-a9ee4e72fbc5",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"items\": [\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"laboris\",\n      \"phone_code\": \"990999092\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"reprehenderit labore officia sed\",\n      \"country_code\": \"sunt ex\",\n      \"latitude\": \"aute ex pariatur in\",\n      \"longitude\": \"non ex labore Ut\"\n    },\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"id Ut consequat deserunt\",\n      \"phone_code\": \"990999092\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"exercitation quis com\",\n      \"country_code\": \"sit ut\",\n      \"latitude\": \"officia ut com\",\n      \"longitude\": \"sit reprehenderit nulla\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "75af365a-4ef4-48e1-94a9-db820d123803",
      "name": "Content",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "1e1d0ff7-63ec-409a-8a62-0aee29d9757e",
          "name": "getCredentialsByEntity | Get credentials to power chat support systems",
          "request": {
            "name": "getCredentialsByEntity | Get credentials to power chat support systems",
            "description": {
              "content": "Get credentials for support system",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "public",
                "content",
                "credentials",
                ":entity"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "entity",
                  "description": "(Required) Server Type"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "9ae84692-f442-4acd-bcd0-f2704b2d6f37",
              "name": "Success. Refer `CredentialsSchema` for more details.",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "content",
                    "credentials",
                    ":entity"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "entity",
                      "description": "(Required) Server Type"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"entity_type\": \"partner\",\n  \"type\": \"freshchat\",\n  \"is_enable\": true,\n  \"configuration\": {\n    \"token\": \"a3e4gf20b-d11g-4512-n3zq-03b9aa7e1yxz\",\n    \"siteId\": \"a3e8f20b-d97f-452f-bd72-03b9aa7e1bf0\",\n    \"host\": \"https://wchat.freshchat.com\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d5c41c37-60e5-4ba7-b46e-78c4abdf13ae",
              "name": "Bad Request. See the error object in the response body to know the exact reason.",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "content",
                    "credentials",
                    ":entity"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "entity",
                      "description": "(Required) Server Type"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Oops! Something went wrong. Please try later\",\n  \"status\": 400,\n  \"code\": \"CX-1003\",\n  \"exception\": \"\",\n  \"info\": \"\",\n  \"request_id\": \"\",\n  \"stack_trace\": \"\",\n  \"meta\": {}\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "7745099b-2b62-4f1e-8824-647a1ff26947",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "0a7a5cfd-0acf-43df-a968-2a09fd34e2f6",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "fb4da699-66df-46bd-87a4-a2232db9be69",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1975-01-18T14:38:31.473Z\",\n  \"status\": 8910129,\n  \"error\": \"nostrud sed nulla sint\",\n  \"exception\": \"in incididunt proident\",\n  \"message\": \"quis exercitation nulla\",\n  \"total_time_taken_in_millis\": -74582400,\n  \"http_status\": \"302 FOUND\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"ad labore eli\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9b2b7409-6fd0-4d25-9d4b-85473a57423c",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1975-01-18T14:38:31.473Z\",\n  \"status\": 8910129,\n  \"error\": \"nostrud sed nulla sint\",\n  \"exception\": \"in incididunt proident\",\n  \"message\": \"quis exercitation nulla\",\n  \"total_time_taken_in_millis\": -74582400,\n  \"http_status\": \"302 FOUND\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"ad labore eli\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ba378bb4-9050-4c6e-b7c1-fe8fb0e8cd5f",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1975-01-18T14:38:31.473Z\",\n  \"status\": 8910129,\n  \"error\": \"nostrud sed nulla sint\",\n  \"exception\": \"in incididunt proident\",\n  \"message\": \"quis exercitation nulla\",\n  \"total_time_taken_in_millis\": -74582400,\n  \"http_status\": \"302 FOUND\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"ad labore eli\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "3f361f94-5dc0-41fd-9dc3-5e7e9e14abc5",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "eb669f9a-6f3b-485c-a71f-b2f9e3324147",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2002-12-15T00:15:08.434Z\",\n  \"status\": 8324245,\n  \"error\": \"aliqua in\",\n  \"exception\": \"dolore velit magna\",\n  \"message\": \"in nulla eu commodo\",\n  \"total_time_taken_in_millis\": -18691931,\n  \"http_status\": \"429 TOO_MANY_REQUESTS\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"incididunt\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "8033972f-99b8-4a09-bc6a-17291f6674d3",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2002-12-15T00:15:08.434Z\",\n  \"status\": 8324245,\n  \"error\": \"aliqua in\",\n  \"exception\": \"dolore velit magna\",\n  \"message\": \"in nulla eu commodo\",\n  \"total_time_taken_in_millis\": -18691931,\n  \"http_status\": \"429 TOO_MANY_REQUESTS\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"incididunt\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a139426c-291b-400a-b734-12bbab89afb0",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2002-12-15T00:15:08.434Z\",\n  \"status\": 8324245,\n  \"error\": \"aliqua in\",\n  \"exception\": \"dolore velit magna\",\n  \"message\": \"in nulla eu commodo\",\n  \"total_time_taken_in_millis\": -18691931,\n  \"http_status\": \"429 TOO_MANY_REQUESTS\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"incididunt\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a270a131-0f98-426a-ae1e-cb6cddf59d3f",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2002-12-15T00:15:08.434Z\",\n  \"status\": 8324245,\n  \"error\": \"aliqua in\",\n  \"exception\": \"dolore velit magna\",\n  \"message\": \"in nulla eu commodo\",\n  \"total_time_taken_in_millis\": -18691931,\n  \"http_status\": \"429 TOO_MANY_REQUESTS\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"incididunt\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9598c638-0a41-464c-b80c-62bd9df146ff",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2002-12-15T00:15:08.434Z\",\n  \"status\": 8324245,\n  \"error\": \"aliqua in\",\n  \"exception\": \"dolore velit magna\",\n  \"message\": \"in nulla eu commodo\",\n  \"total_time_taken_in_millis\": -18691931,\n  \"http_status\": \"429 TOO_MANY_REQUESTS\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"incididunt\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b9d3ab4e-29c8-4dbd-b4cc-6a05489e60d4",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "c01d4662-2355-4047-b08f-76f16e313a25",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1981-08-21T16:48:09.565Z\",\n  \"status\": 36819376,\n  \"error\": \"esse tempor in\",\n  \"exception\": \"ut ut commodo aliquip\",\n  \"message\": \"laboris\",\n  \"total_time_taken_in_millis\": 81769239,\n  \"http_status\": \"418 I_AM_A_TEAPOT\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"elit velit minim ea\",\n      \"description\": \"est eiusmod ut\",\n      \"name\": \"elit irure enim commodo et\",\n      \"slug\": \"Duis laboris\",\n      \"meta\": [\n        {\n          \"_id\": \"tempor in proiden\",\n          \"name\": \"nostrud occaecat\",\n          \"value\": \"Lorem veniam id Duis aute\"\n        },\n        {\n          \"_id\": \"dolor\",\n          \"name\": \"Lorem\",\n          \"value\": \"reprehenderit consectetur\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"voluptate consequat proident\",\n        \"integration\": \"Lorem dolore adipisicing reprehenderit\",\n        \"level\": \"ut velit\",\n        \"uid\": -52557972,\n        \"opted\": false,\n        \"permissions\": [\n          \"esse velit\",\n          \"deserunt esse aute reprehenderit cupidatat\"\n        ],\n        \"token\": \"dolor occaecat laboris tempor veniam\",\n        \"name\": \"e\",\n        \"stores\": [\n          {\n            \"_id\": \"deserunt\",\n            \"integration\": \"ea Duis\",\n            \"level\": \"ea aliquip cupidat\",\n            \"uid\": -21383762,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"fugiat Lorem dolor\",\n            \"code\": \"ut dolo\",\n            \"name\": \"culpa pariatur id nulla ipsum\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"quis dolore ullamco\",\n            \"integration\": \"enim laborum aliqua\",\n            \"level\": \"velit eiusmod Excepteur\",\n            \"uid\": 13055280,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"cillum nostrud sit deserunt\",\n            \"code\": \"fugiat\",\n            \"name\": \"ipsum Excepteur non\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"non cillum cupidatat Duis quis\",\n        \"integration\": \"laborum ea amet\",\n        \"level\": \"ullamco id\",\n        \"uid\": -83714678,\n        \"opted\": false,\n        \"permissions\": [\n          \"consectetur Lorem\",\n          \"minim est incididunt fugiat\"\n        ],\n        \"token\": \"do in proident\",\n        \"name\": \"aute ex nostrud officia\",\n        \"stores\": [\n          {\n            \"_id\": \"ipsum e\",\n            \"integration\": \"ut culpa et\",\n            \"level\": \"in proident minim labore\",\n            \"uid\": -58527381,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"tempor commodo\",\n            \"code\": \"amet tempor anim esse\",\n            \"name\": \"quis Excepteur eu\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"incididunt irure sunt proident\",\n            \"integration\": \"Excepteur Ut deserunt enim sit\",\n            \"level\": \"in magna Ut et\",\n            \"uid\": 11717974,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ullamco\",\n            \"code\": \"consequat sint incididunt est\",\n            \"name\": \"nisi est\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"enim consequat sint\",\n      \"description\": \"Lorem proident ad in amet\",\n      \"name\": \"qui quis\",\n      \"slug\": \"adipi\",\n      \"meta\": [\n        {\n          \"_id\": \"Ut laboris occaecat\",\n          \"name\": \"elit irure\",\n          \"value\": \"in ipsum\"\n        },\n        {\n          \"_id\": \"velit sed dolore\",\n          \"name\": \"aute Excepteur deserunt ad\",\n          \"value\": \"esse\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"ad\",\n        \"integration\": \"enim in magna\",\n        \"level\": \"sunt nisi laboris ipsum proident\",\n        \"uid\": 85740037,\n        \"opted\": false,\n        \"permissions\": [\n          \"ad aliqua\",\n          \"sunt in\"\n        ],\n        \"token\": \"exercitation amet irure eu\",\n        \"name\": \"dolore do eu\",\n        \"stores\": [\n          {\n            \"_id\": \"magna\",\n            \"integration\": \"nisi quis\",\n            \"level\": \"ad nulla\",\n            \"uid\": -21331692,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"in consequat id velit\",\n            \"code\": \"deserunt commodo non velit\",\n            \"name\": \"eu quis in do\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"dolor ex\",\n            \"integration\": \"cupidatat deserunt do\",\n            \"level\": \"sunt in do\",\n            \"uid\": 94849675,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"fugiat elit\",\n            \"code\": \"irure ex null\",\n            \"name\": \"minim sunt s\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"in et sun\",\n        \"integration\": \"sit sint Ut amet nos\",\n        \"level\": \"cupidatat Duis dolore sit\",\n        \"uid\": -40061888,\n        \"opted\": true,\n        \"permissions\": [\n          \"id et ipsum labore\",\n          \"adipisicing Duis\"\n        ],\n        \"token\": \"et anim sint\",\n        \"name\": \"aliquip quis\",\n        \"stores\": [\n          {\n            \"_id\": \"nostrud irure\",\n            \"integration\": \"n\",\n            \"level\": \"nostrud elit\",\n            \"uid\": 22121379,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"fugiat ut officia\",\n            \"code\": \"ad deserunt Lorem est\",\n            \"name\": \"elit cillum exercitation labore a\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"sint Ut\",\n            \"integration\": \"est nulla ullamco\",\n            \"level\": \"qui\",\n            \"uid\": 37279954,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"cillum magna\",\n            \"code\": \"sed sit pariatur\",\n            \"name\": \"sed enim\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"nisi\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e8386c67-a1c6-4013-b704-468f2d333edf",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2003-03-14T00:56:44.971Z\",\n  \"status\": -92581828,\n  \"error\": \"ipsum commodo occaecat\",\n  \"exception\": \"quis\",\n  \"message\": \"voluptate dolor in consequat\",\n  \"total_time_taken_in_millis\": -47775785,\n  \"http_status\": \"403 FORBIDDEN\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"do in id\",\n      \"description\": \"eu Duis ea esse cupidatat\",\n      \"name\": \"velit \",\n      \"slug\": \"d\",\n      \"meta\": [\n        {\n          \"_id\": \"sunt aliquip dolor fugiat\",\n          \"name\": \"irure in Excepteur culpa\",\n          \"value\": \"tempor Excepteur\"\n        },\n        {\n          \"_id\": \"ut tempor labo\",\n          \"name\": \"incididunt qui in sint\",\n          \"value\": \"officia\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"eu incididunt\",\n        \"integration\": \"fugiat officia\",\n        \"level\": \"aliquip\",\n        \"uid\": -42948952,\n        \"opted\": true,\n        \"permissions\": [\n          \"qui Excepteur consequat labore\",\n          \"exercitation voluptate Ut dolor reprehenderit\"\n        ],\n        \"token\": \"tempor moll\",\n        \"name\": \"incididunt velit laborum\",\n        \"stores\": [\n          {\n            \"_id\": \"cupidatat et\",\n            \"integration\": \"incididunt aute qui \",\n            \"level\": \"officia tempor velit sit\",\n            \"uid\": 72865569,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"in reprehenderit culpa\",\n            \"code\": \"irure dolore\",\n            \"name\": \"anim cillum sit\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"dolore\",\n            \"integration\": \"consequat proident\",\n            \"level\": \"eu aliquip Lorem ex\",\n            \"uid\": -60335451,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"dolor anim sunt\",\n            \"code\": \"velit quis ipsum aut\",\n            \"name\": \"sit reprehenderit mollit aliquip do\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"voluptate tempor\",\n        \"integration\": \"amet sunt\",\n        \"level\": \"in exercitation et\",\n        \"uid\": 96190533,\n        \"opted\": false,\n        \"permissions\": [\n          \"sunt deserunt ipsum eu velit\",\n          \"aliqua quis aliquip ex\"\n        ],\n        \"token\": \"ullamco\",\n        \"name\": \"proident dolor exercitation\",\n        \"stores\": [\n          {\n            \"_id\": \"eu nulla tempor nostrud\",\n            \"integration\": \"nisi Excepteur do aliqua\",\n            \"level\": \"esse minim\",\n            \"uid\": 22624793,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"dolor do anim ea\",\n            \"code\": \"in dolore\",\n            \"name\": \"ut veniam\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"voluptate eu velit dolor\",\n            \"integration\": \"consectetur non\",\n            \"level\": \"veniam in est\",\n            \"uid\": -59153146,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"dolor ea\",\n            \"code\": \"proident esse dolor\",\n            \"name\": \"est magna\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"Duis laboris adipisicing pariatur mollit\",\n      \"description\": \"mollit adipisicing\",\n      \"name\": \"velit veniam Ut\",\n      \"slug\": \"amet non\",\n      \"meta\": [\n        {\n          \"_id\": \"dolore et\",\n          \"name\": \"ullamco et labo\",\n          \"value\": \"labore Excepteur\"\n        },\n        {\n          \"_id\": \"tempor dolore eu\",\n          \"name\": \"pariatur proident\",\n          \"value\": \"exercitation\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"velit adipisicing\",\n        \"integration\": \"magna do\",\n        \"level\": \"cupidatat laboris fugiat officia\",\n        \"uid\": -15660857,\n        \"opted\": false,\n        \"permissions\": [\n          \"commodo officia\",\n          \"aliquip incididunt\"\n        ],\n        \"token\": \"nisi cupidata\",\n        \"name\": \"non Duis\",\n        \"stores\": [\n          {\n            \"_id\": \"pariatur adipisicing\",\n            \"integration\": \"laborum mollit\",\n            \"level\": \"dolore\",\n            \"uid\": 37459179,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"id culpa molli\",\n            \"code\": \"minim cillum deserunt d\",\n            \"name\": \"cillum\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"reprehenderit nisi\",\n            \"integration\": \"deserunt pariatur exercitation nulla\",\n            \"level\": \"culpa cillum amet adipisicing\",\n            \"uid\": -66602393,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"veniam eiusmod reprehenderit elit\",\n            \"code\": \"adipisicing\",\n            \"name\": \"deserunt veniam id Lorem laborum\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"dolore\",\n        \"integration\": \"eu Lorem consequat est\",\n        \"level\": \"Lorem\",\n        \"uid\": 98401958,\n        \"opted\": true,\n        \"permissions\": [\n          \"Excepteur nulla mollit\",\n          \"commodo nisi\"\n        ],\n        \"token\": \"nostrud consequat\",\n        \"name\": \"enim laborum ullamco eiusmod\",\n        \"stores\": [\n          {\n            \"_id\": \"ea dolor s\",\n            \"integration\": \"consequat laborum anim sed est\",\n            \"level\": \"cu\",\n            \"uid\": 86109822,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"\",\n            \"code\": \"aliqua est ea sunt\",\n            \"name\": \"dolore in\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"dolore aute nostrud magna\",\n            \"integration\": \"ipsum occaecat\",\n            \"level\": \"irure\",\n            \"uid\": 31640318,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"adipisicing enim\",\n            \"code\": \"Excepteur quis\",\n            \"name\": \"Excepteur\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"mollit adipisicing proident\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "35402cb5-410c-4b95-b04c-c2ba4417fed6",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2003-03-14T00:56:44.971Z\",\n  \"status\": -92581828,\n  \"error\": \"ipsum commodo occaecat\",\n  \"exception\": \"quis\",\n  \"message\": \"voluptate dolor in consequat\",\n  \"total_time_taken_in_millis\": -47775785,\n  \"http_status\": \"403 FORBIDDEN\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"do in id\",\n      \"description\": \"eu Duis ea esse cupidatat\",\n      \"name\": \"velit \",\n      \"slug\": \"d\",\n      \"meta\": [\n        {\n          \"_id\": \"sunt aliquip dolor fugiat\",\n          \"name\": \"irure in Excepteur culpa\",\n          \"value\": \"tempor Excepteur\"\n        },\n        {\n          \"_id\": \"ut tempor labo\",\n          \"name\": \"incididunt qui in sint\",\n          \"value\": \"officia\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"eu incididunt\",\n        \"integration\": \"fugiat officia\",\n        \"level\": \"aliquip\",\n        \"uid\": -42948952,\n        \"opted\": true,\n        \"permissions\": [\n          \"qui Excepteur consequat labore\",\n          \"exercitation voluptate Ut dolor reprehenderit\"\n        ],\n        \"token\": \"tempor moll\",\n        \"name\": \"incididunt velit laborum\",\n        \"stores\": [\n          {\n            \"_id\": \"cupidatat et\",\n            \"integration\": \"incididunt aute qui \",\n            \"level\": \"officia tempor velit sit\",\n            \"uid\": 72865569,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"in reprehenderit culpa\",\n            \"code\": \"irure dolore\",\n            \"name\": \"anim cillum sit\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"dolore\",\n            \"integration\": \"consequat proident\",\n            \"level\": \"eu aliquip Lorem ex\",\n            \"uid\": -60335451,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"dolor anim sunt\",\n            \"code\": \"velit quis ipsum aut\",\n            \"name\": \"sit reprehenderit mollit aliquip do\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"voluptate tempor\",\n        \"integration\": \"amet sunt\",\n        \"level\": \"in exercitation et\",\n        \"uid\": 96190533,\n        \"opted\": false,\n        \"permissions\": [\n          \"sunt deserunt ipsum eu velit\",\n          \"aliqua quis aliquip ex\"\n        ],\n        \"token\": \"ullamco\",\n        \"name\": \"proident dolor exercitation\",\n        \"stores\": [\n          {\n            \"_id\": \"eu nulla tempor nostrud\",\n            \"integration\": \"nisi Excepteur do aliqua\",\n            \"level\": \"esse minim\",\n            \"uid\": 22624793,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"dolor do anim ea\",\n            \"code\": \"in dolore\",\n            \"name\": \"ut veniam\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"voluptate eu velit dolor\",\n            \"integration\": \"consectetur non\",\n            \"level\": \"veniam in est\",\n            \"uid\": -59153146,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"dolor ea\",\n            \"code\": \"proident esse dolor\",\n            \"name\": \"est magna\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"Duis laboris adipisicing pariatur mollit\",\n      \"description\": \"mollit adipisicing\",\n      \"name\": \"velit veniam Ut\",\n      \"slug\": \"amet non\",\n      \"meta\": [\n        {\n          \"_id\": \"dolore et\",\n          \"name\": \"ullamco et labo\",\n          \"value\": \"labore Excepteur\"\n        },\n        {\n          \"_id\": \"tempor dolore eu\",\n          \"name\": \"pariatur proident\",\n          \"value\": \"exercitation\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"velit adipisicing\",\n        \"integration\": \"magna do\",\n        \"level\": \"cupidatat laboris fugiat officia\",\n        \"uid\": -15660857,\n        \"opted\": false,\n        \"permissions\": [\n          \"commodo officia\",\n          \"aliquip incididunt\"\n        ],\n        \"token\": \"nisi cupidata\",\n        \"name\": \"non Duis\",\n        \"stores\": [\n          {\n            \"_id\": \"pariatur adipisicing\",\n            \"integration\": \"laborum mollit\",\n            \"level\": \"dolore\",\n            \"uid\": 37459179,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"id culpa molli\",\n            \"code\": \"minim cillum deserunt d\",\n            \"name\": \"cillum\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"reprehenderit nisi\",\n            \"integration\": \"deserunt pariatur exercitation nulla\",\n            \"level\": \"culpa cillum amet adipisicing\",\n            \"uid\": -66602393,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"veniam eiusmod reprehenderit elit\",\n            \"code\": \"adipisicing\",\n            \"name\": \"deserunt veniam id Lorem laborum\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"dolore\",\n        \"integration\": \"eu Lorem consequat est\",\n        \"level\": \"Lorem\",\n        \"uid\": 98401958,\n        \"opted\": true,\n        \"permissions\": [\n          \"Excepteur nulla mollit\",\n          \"commodo nisi\"\n        ],\n        \"token\": \"nostrud consequat\",\n        \"name\": \"enim laborum ullamco eiusmod\",\n        \"stores\": [\n          {\n            \"_id\": \"ea dolor s\",\n            \"integration\": \"consequat laborum anim sed est\",\n            \"level\": \"cu\",\n            \"uid\": 86109822,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"\",\n            \"code\": \"aliqua est ea sunt\",\n            \"name\": \"dolore in\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"dolore aute nostrud magna\",\n            \"integration\": \"ipsum occaecat\",\n            \"level\": \"irure\",\n            \"uid\": 31640318,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"adipisicing enim\",\n            \"code\": \"Excepteur quis\",\n            \"name\": \"Excepteur\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"mollit adipisicing proident\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "0fdd83b8-1e86-4a85-af40-666eafa038e9",
          "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
          "request": {
            "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "ab1937d0-c469-4fd6-b889-8a93869a7785",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1987-08-16T00:13:04.533Z\",\n  \"status\": -91962455,\n  \"error\": \"cupidatat velit Duis\",\n  \"exception\": \"aute\",\n  \"message\": \"labore ea exercitation minim\",\n  \"total_time_taken_in_millis\": -96745151,\n  \"http_status\": \"403 FORBIDDEN\",\n  \"items\": {\n    \"session_id\": \"ut Excepteur\",\n    \"error_message\": \"ad ea\"\n  },\n  \"payload\": {\n    \"session_id\": \"nulla\",\n    \"error_message\": \"ullamco adipisicing nostrud cillum\"\n  },\n  \"trace_id\": \"elit adipisicing\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "4a06d4bd-bc4e-4ea0-ab62-856b52fa8bdc",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1987-08-16T00:13:04.533Z\",\n  \"status\": -91962455,\n  \"error\": \"cupidatat velit Duis\",\n  \"exception\": \"aute\",\n  \"message\": \"labore ea exercitation minim\",\n  \"total_time_taken_in_millis\": -96745151,\n  \"http_status\": \"403 FORBIDDEN\",\n  \"items\": {\n    \"session_id\": \"ut Excepteur\",\n    \"error_message\": \"ad ea\"\n  },\n  \"payload\": {\n    \"session_id\": \"nulla\",\n    \"error_message\": \"ullamco adipisicing nostrud cillum\"\n  },\n  \"trace_id\": \"elit adipisicing\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "0ed8f7f8-78bc-4613-abf5-69fe9f3f580d",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1987-08-16T00:13:04.533Z\",\n  \"status\": -91962455,\n  \"error\": \"cupidatat velit Duis\",\n  \"exception\": \"aute\",\n  \"message\": \"labore ea exercitation minim\",\n  \"total_time_taken_in_millis\": -96745151,\n  \"http_status\": \"403 FORBIDDEN\",\n  \"items\": {\n    \"session_id\": \"ut Excepteur\",\n    \"error_message\": \"ad ea\"\n  },\n  \"payload\": {\n    \"session_id\": \"nulla\",\n    \"error_message\": \"ullamco adipisicing nostrud cillum\"\n  },\n  \"trace_id\": \"elit adipisicing\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "9affce36-80fa-4cc1-8eda-8645121c7875",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "995e14fc-cbfb-4dff-b826-a16d7d8e1a81",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1987-12-31T12:45:05.592Z\",\n  \"status\": -12458969,\n  \"error\": \"ut laborum ex Lorem\",\n  \"exception\": \"Lorem amet\",\n  \"message\": \"reprehenderi\",\n  \"total_time_taken_in_millis\": 87737941,\n  \"http_status\": \"408 REQUEST_TIMEOUT\",\n  \"items\": {\n    \"company_id\": 91132880,\n    \"integration_data\": {\n      \"Uta\": {}\n    },\n    \"company_name\": \"minim sint aliqua nulla\",\n    \"task_details\": {\n      \"type\": 57784849,\n      \"group_list\": [\n        {\n          \"text\": \"aliquip\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"incididu\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 44989482.625778496,\n      \"safe_stock\": -44314258,\n      \"period_threshold\": -30835167,\n      \"period_threshold_type\": \"DAYS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"occaecat mollit\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"ex\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"laborum dolore aliqua\",\n    \"alias\": \"sunt enim aute consectetur in\"\n  },\n  \"payload\": {\n    \"company_id\": 74444,\n    \"integration_data\": {\n      \"eiusmod4c3\": {},\n      \"dolord8f\": {}\n    },\n    \"company_name\": \"ut in qui enim cupidatat\",\n    \"task_details\": {\n      \"type\": -32295589,\n      \"group_list\": [\n        {\n          \"text\": \"fugiat ut eiusmod\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"ipsum sint in in\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 35559729.43891063,\n      \"safe_stock\": -67816195,\n      \"period_threshold\": 27507224,\n      \"period_threshold_type\": \"DAYS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"deserunt\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"tempor\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"elit est reprehenderit nisi\",\n    \"alias\": \"esse cupidatat\"\n  },\n  \"trace_id\": \"culpa eu mollit\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2aed3f9f-0fbe-4bc3-a01c-d394f3e64de8",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1969-04-22T13:13:43.838Z\",\n  \"status\": 63116489,\n  \"error\": \"incididunt in aliqua magna\",\n  \"exception\": \"do anim\",\n  \"message\": \"est in tempor\",\n  \"total_time_taken_in_millis\": -39918666,\n  \"http_status\": \"508 LOOP_DETECTED\",\n  \"items\": {\n    \"company_id\": 34019617,\n    \"integration_data\": {\n      \"est_8\": {}\n    },\n    \"company_name\": \"consequat ad exercitation minim\",\n    \"task_details\": {\n      \"type\": -86878775,\n      \"group_list\": [\n        {\n          \"text\": \"nisi\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"laborum in aliqua proident incididunt\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 4741466.77238813,\n      \"safe_stock\": -58016228,\n      \"period_threshold\": -84931923,\n      \"period_threshold_type\": \"MONTHS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"incididunt in\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"in Ut\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"ipsum dolore Excepteur sunt magna\",\n    \"alias\": \"dolore\"\n  },\n  \"payload\": {\n    \"company_id\": -38872348,\n    \"integration_data\": {\n      \"dolore_0d4\": {}\n    },\n    \"company_name\": \"velit adipisicing ea aute eu\",\n    \"task_details\": {\n      \"type\": 58265487,\n      \"group_list\": [\n        {\n          \"text\": \"sed nisi culpa Ut\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"et ad quis tem\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 35358348.11518517,\n      \"safe_stock\": -78104927,\n      \"period_threshold\": -46137048,\n      \"period_threshold_type\": \"DAYS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"Duis\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"nisi\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"quis sit nostrud\",\n    \"alias\": \"eiusmod est\"\n  },\n  \"trace_id\": \"ut inci\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "4ceba3a7-6919-4a2d-a71c-be51c4a3144a",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1969-04-22T13:13:43.838Z\",\n  \"status\": 63116489,\n  \"error\": \"incididunt in aliqua magna\",\n  \"exception\": \"do anim\",\n  \"message\": \"est in tempor\",\n  \"total_time_taken_in_millis\": -39918666,\n  \"http_status\": \"508 LOOP_DETECTED\",\n  \"items\": {\n    \"company_id\": 34019617,\n    \"integration_data\": {\n      \"est_8\": {}\n    },\n    \"company_name\": \"consequat ad exercitation minim\",\n    \"task_details\": {\n      \"type\": -86878775,\n      \"group_list\": [\n        {\n          \"text\": \"nisi\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"laborum in aliqua proident incididunt\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 4741466.77238813,\n      \"safe_stock\": -58016228,\n      \"period_threshold\": -84931923,\n      \"period_threshold_type\": \"MONTHS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"incididunt in\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"in Ut\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"ipsum dolore Excepteur sunt magna\",\n    \"alias\": \"dolore\"\n  },\n  \"payload\": {\n    \"company_id\": -38872348,\n    \"integration_data\": {\n      \"dolore_0d4\": {}\n    },\n    \"company_name\": \"velit adipisicing ea aute eu\",\n    \"task_details\": {\n      \"type\": 58265487,\n      \"group_list\": [\n        {\n          \"text\": \"sed nisi culpa Ut\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"et ad quis tem\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 35358348.11518517,\n      \"safe_stock\": -78104927,\n      \"period_threshold\": -46137048,\n      \"period_threshold_type\": \"DAYS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"Duis\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"nisi\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"quis sit nostrud\",\n    \"alias\": \"eiusmod est\"\n  },\n  \"trace_id\": \"ut inci\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "897bf724-26f8-46d5-b5fa-942c94e1cbcd",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "1cb1e4b6-be71-4c01-adb7-8a0179f778f5",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2019-07-24T09:53:25.320Z\",\n  \"status\": -87331829,\n  \"error\": \"ut irure sed\",\n  \"exception\": \"fugiat minim mollit dolor do\",\n  \"message\": \"voluptate Lorem f\",\n  \"total_time_taken_in_millis\": 54666996,\n  \"http_status\": \"208 ALREADY_REPORTED\",\n  \"items\": [\n    {\n      \"company_id\": 40499732,\n      \"integration_data\": {\n        \"elit84\": {}\n      },\n      \"company_name\": \"nulla irure Duis quis\",\n      \"task_details\": {\n        \"type\": 8152571,\n        \"group_list\": [\n          {\n            \"text\": \"sit nostrud eiusmod \",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ut esse ea\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 64472382.62186894,\n        \"safe_stock\": -17756287,\n        \"period_threshold\": 82817882,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"nostrud anim\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"amet ex ulla\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"mollit\",\n      \"alias\": \"dolore enim dolor dolore\"\n    },\n    {\n      \"company_id\": 18325302,\n      \"integration_data\": {\n        \"incididunt9\": {}\n      },\n      \"company_name\": \"minim labore culpa dolore velit\",\n      \"task_details\": {\n        \"type\": 76318478,\n        \"group_list\": [\n          {\n            \"text\": \"nostrud ut elit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"incididunt amet\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 28908872.04564531,\n        \"safe_stock\": 5876509,\n        \"period_threshold\": -60084437,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"irure ut ea ut\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ipsum quis velit\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"cillum Ut\",\n      \"alias\": \"adip\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": 78094781,\n      \"integration_data\": {\n        \"culpa_e\": {}\n      },\n      \"company_name\": \"sint adipisicing labore ut\",\n      \"task_details\": {\n        \"type\": 64617636,\n        \"group_list\": [\n          {\n            \"text\": \"et dolor officia\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"in deserunt amet\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 60140666.939288914,\n        \"safe_stock\": -8640162,\n        \"period_threshold\": -14990963,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"proident aliquip\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ea\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"adipisicing eiusmod proident\",\n      \"alias\": \"magna conseq\"\n    },\n    {\n      \"company_id\": -41878870,\n      \"integration_data\": {\n        \"utfbe\": {}\n      },\n      \"company_name\": \"est nostrud aliqua\",\n      \"task_details\": {\n        \"type\": 25958691,\n        \"group_list\": [\n          {\n            \"text\": \"cillum nisi commodo id\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"est\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 12583755.656824991,\n        \"safe_stock\": 35026593,\n        \"period_threshold\": -77868441,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"amet in deserunt\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"qui dolor aliqua\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"non\",\n      \"alias\": \"Ut\"\n    }\n  ],\n  \"trace_id\": \"Lorem veniam cillum\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "46e02366-6e02-4000-952b-c5be45af0c0d",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1955-07-21T01:09:02.733Z\",\n  \"status\": -19284149,\n  \"error\": \"quis Excepteur eiusmod\",\n  \"exception\": \"culpa commodo aliqua\",\n  \"message\": \"in\",\n  \"total_time_taken_in_millis\": 96908370,\n  \"http_status\": \"204 NO_CONTENT\",\n  \"items\": [\n    {\n      \"company_id\": -87527474,\n      \"integration_data\": {\n        \"occaecat__\": {},\n        \"magnab\": {},\n        \"magna__fb\": {}\n      },\n      \"company_name\": \"Lore\",\n      \"task_details\": {\n        \"type\": -78700475,\n        \"group_list\": [\n          {\n            \"text\": \"cill\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"Duis tempor occaecat in\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 23764689.572876334,\n        \"safe_stock\": -9720983,\n        \"period_threshold\": -40643570,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"id sint nulla\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"et\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"amet fugiat proident\",\n      \"alias\": \"enim ipsum aute nulla\"\n    },\n    {\n      \"company_id\": -791963,\n      \"integration_data\": {\n        \"magna92_\": {}\n      },\n      \"company_name\": \"ea id fugiat ad\",\n      \"task_details\": {\n        \"type\": -67872193,\n        \"group_list\": [\n          {\n            \"text\": \"occ\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"velit sed\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -9811984.254048139,\n        \"safe_stock\": -17262893,\n        \"period_threshold\": -78075036,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"nulla tempor commodo consequat ipsum\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"dolor consequat laboris in magna\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"cupidatat occaecat Excepteur\",\n      \"alias\": \"quis velit aliqua pariatur\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": -73423761,\n      \"integration_data\": {\n        \"ex_2\": {},\n        \"sunt__e\": {}\n      },\n      \"company_name\": \"nisi elit consequat\",\n      \"task_details\": {\n        \"type\": -29794806,\n        \"group_list\": [\n          {\n            \"text\": \"sed Ut in sit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"dolore dolor laboris\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -32358915.742364973,\n        \"safe_stock\": -6917350,\n        \"period_threshold\": -26143644,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"sit ullamco sunt eiusmod\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"et est\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"consequat quis\",\n      \"alias\": \"sunt enim nisi\"\n    },\n    {\n      \"company_id\": 18387018,\n      \"integration_data\": {\n        \"in_bc5\": {},\n        \"incididunt1\": {}\n      },\n      \"company_name\": \"est Excepteur labore sint\",\n      \"task_details\": {\n        \"type\": 89215126,\n        \"group_list\": [\n          {\n            \"text\": \"Ut ullamco\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"aliqu\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -39175149.47931271,\n        \"safe_stock\": -92496116,\n        \"period_threshold\": -47372010,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"eiusmod minim\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"commodo\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"consectetur sed\",\n      \"alias\": \"quis\"\n    }\n  ],\n  \"trace_id\": \"aliquip Excepteur in ullamco\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2e35d6bc-49f1-4d2e-8ffe-fed00db84590",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1955-07-21T01:09:02.733Z\",\n  \"status\": -19284149,\n  \"error\": \"quis Excepteur eiusmod\",\n  \"exception\": \"culpa commodo aliqua\",\n  \"message\": \"in\",\n  \"total_time_taken_in_millis\": 96908370,\n  \"http_status\": \"204 NO_CONTENT\",\n  \"items\": [\n    {\n      \"company_id\": -87527474,\n      \"integration_data\": {\n        \"occaecat__\": {},\n        \"magnab\": {},\n        \"magna__fb\": {}\n      },\n      \"company_name\": \"Lore\",\n      \"task_details\": {\n        \"type\": -78700475,\n        \"group_list\": [\n          {\n            \"text\": \"cill\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"Duis tempor occaecat in\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 23764689.572876334,\n        \"safe_stock\": -9720983,\n        \"period_threshold\": -40643570,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"id sint nulla\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"et\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"amet fugiat proident\",\n      \"alias\": \"enim ipsum aute nulla\"\n    },\n    {\n      \"company_id\": -791963,\n      \"integration_data\": {\n        \"magna92_\": {}\n      },\n      \"company_name\": \"ea id fugiat ad\",\n      \"task_details\": {\n        \"type\": -67872193,\n        \"group_list\": [\n          {\n            \"text\": \"occ\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"velit sed\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -9811984.254048139,\n        \"safe_stock\": -17262893,\n        \"period_threshold\": -78075036,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"nulla tempor commodo consequat ipsum\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"dolor consequat laboris in magna\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"cupidatat occaecat Excepteur\",\n      \"alias\": \"quis velit aliqua pariatur\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": -73423761,\n      \"integration_data\": {\n        \"ex_2\": {},\n        \"sunt__e\": {}\n      },\n      \"company_name\": \"nisi elit consequat\",\n      \"task_details\": {\n        \"type\": -29794806,\n        \"group_list\": [\n          {\n            \"text\": \"sed Ut in sit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"dolore dolor laboris\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -32358915.742364973,\n        \"safe_stock\": -6917350,\n        \"period_threshold\": -26143644,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"sit ullamco sunt eiusmod\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"et est\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"consequat quis\",\n      \"alias\": \"sunt enim nisi\"\n    },\n    {\n      \"company_id\": 18387018,\n      \"integration_data\": {\n        \"in_bc5\": {},\n        \"incididunt1\": {}\n      },\n      \"company_name\": \"est Excepteur labore sint\",\n      \"task_details\": {\n        \"type\": 89215126,\n        \"group_list\": [\n          {\n            \"text\": \"Ut ullamco\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"aliqu\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -39175149.47931271,\n        \"safe_stock\": -92496116,\n        \"period_threshold\": -47372010,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"eiusmod minim\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"commodo\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"consectetur sed\",\n      \"alias\": \"quis\"\n    }\n  ],\n  \"trace_id\": \"aliquip Excepteur in ullamco\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "5b7e4828-d4fe-40d8-bb3e-235d78609a13",
      "name": "Partner",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "56cd2395-d278-4eeb-a10c-019d420a7ba6",
          "name": "getPanelExtensionDetails | Get panel extension details",
          "request": {
            "name": "getPanelExtensionDetails | Get panel extension details",
            "description": {
              "content": "Retrieve detailed information about panel extensions in the public server setup.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "panel",
                "partners",
                "v1.0",
                "extensions",
                ":slug"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "slug",
                  "description": "(Required) pass the slug of the extension"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "aeaec3e6-922f-4699-b76d-4320aa678ed1",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "panel",
                    "partners",
                    "v1.0",
                    "extensions",
                    ":slug"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "slug",
                      "description": "(Required) pass the slug of the extension"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"_id\": \"633ab5cb635a41fdde9fb648\",\n  \"organization_id\": \"6333fef3b1d85e44e738c138\",\n  \"extension_id\": \"633425ebb1d85e44e738c2ab\",\n  \"slug\": \"example-extension-1\",\n  \"scope\": [\n    \"company/profile\",\n    \"company/saleschannel\",\n    \"company/product\",\n    \"company/order\",\n    \"company/application/customer\",\n    \"company/application/analytics\",\n    \"company/application/storage\",\n    \"company/application/marketing\",\n    \"company/application/catalogue\",\n    \"company/application/communication\",\n    \"company/application/support\",\n    \"company/application/order\",\n    \"company/application/settings\"\n  ],\n  \"category\": {\n    \"categories_l1\": [],\n    \"categories_l2\": []\n  },\n  \"listing_info\": {\n    \"name\": \"ujjawal-example-extension-1\",\n    \"keywords\": [],\n    \"tagline\": \"test-extension for test how extensions look and work and how to create them\",\n    \"icon\": \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/AMwIEOw0U-logo.png\"\n  },\n  \"details\": {\n    \"benefits\": [\n      {\n        \"title\": \"Works fast\",\n        \"description\": \"works fast\",\n        \"_id\": \"633ab5cb635a41fdde9fb649\"\n      }\n    ],\n    \"screenshots\": {\n      \"desktop\": [\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/g95yHXkou-1024x576.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/IKdHxP2fN-1024x576.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/_auq1yvEp-1024x576.png\"\n      ],\n      \"mobile\": [\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/E_YAHM9cU-600x900.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/vEnXw9cCg-600x900.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/O3Wng4Rqn-600x900.png\"\n      ]\n    },\n    \"description\": \"Sample public extension\",\n    \"demo_url\": \"\",\n    \"video_url\": [\n      {\n        \"type\": \"video\",\n        \"url\": \"https://hdn-1.addsale.com/x0/products/videos/item/free/original/kizLVNWyS-video-sc-1.mp4\"\n      }\n    ],\n    \"integrations\": []\n  },\n  \"plan_type\": \"free\",\n  \"plans\": [\n    {\n      \"name\": \"Custom Free\",\n      \"features\": \"provides ease\",\n      \"type\": \"free\",\n      \"price\": {\n        \"amount\": 0,\n        \"currency\": \"INR\"\n      },\n      \"trial_days\": 0,\n      \"additional_charges\": \"\"\n    }\n  ],\n  \"plans_url\": \"\",\n  \"contact_info\": {\n    \"support\": {\n      \"email\": \"ujjawaltaleja@gofynd.com\",\n      \"phone\": \"7988169279\",\n      \"website_url\": \"\",\n      \"faq_url\": \"\",\n      \"privacy_policy_url\": \"\"\n    }\n  },\n  \"current_status\": \"active\",\n  \"coming_soon\": {\n    \"is_coming_soon\": false,\n    \"upvote_count\": 0\n  },\n  \"created_at\": \"2022-10-03T10:13:31.607Z\",\n  \"modified_at\": \"2022-10-03T10:13:31.607Z\",\n  \"organization\": {\n    \"name\": \"ujjawal-partners-fashion\",\n    \"slug\": \"ujjawa-w7t-68\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "af13dff5-1b22-46c0-b53b-fb748a95bdfe",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "b09242ab-04a7-47c6-ad57-d4f9edbebdc2",
          "name": "fetchAllWebhookEvents | Fetch all webhook events",
          "request": {
            "name": "fetchAllWebhookEvents | Fetch all webhook events",
            "description": {
              "content": "Retrieve a list of all webhook events in the public server setup.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "ae15c58a-f4d3-411b-94be-f661d0c61c3b",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "98c81690-d935-47de-b429-c1c93d0ff41f",
          "name": "queryWebhookEventDetails | Query webhook event details",
          "request": {
            "name": "queryWebhookEventDetails | Query webhook event details",
            "description": {
              "content": "Query and obtain detailed information about webhook events in the public server configurations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "b3ec9302-591e-4bfd-8520-6d17c91a4dc2",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"event_name\": \"article\",\n    \"event_type\": \"update\",\n    \"event_category\": \"company\",\n    \"version\": \"1\"\n  }\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "367ac562-5889-470e-b57e-daefdfb625a3",
          "name": "notifyDepricatedEvent | Notifies all the events that are going to depricate",
          "request": {
            "name": "notifyDepricatedEvent | Notifies all the events that are going to depricate",
            "description": {
              "content": "Notifies all the events that are subscribed and are going to deprecate or new version is available for those events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "depricated-event-notifier"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "d4f50949-3d4b-445b-8eea-e4553ec5031a",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "depricated-event-notifier"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "e647b6e4-5a23-4a60-afc4-5387f19e8032",
          "name": "testHandlerTransformation | Test transformation of handler",
          "request": {
            "name": "testHandlerTransformation | Test transformation of handler",
            "description": {
              "content": "Test transformation of handler",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "transform-event"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event_name\": \"<string>\",\n  \"event_type\": \"<string>\",\n  \"event_category\": \"<string>\",\n  \"event_version\": \"<string>\",\n  \"event\": {\n    \"payload\": {\n      \"Excepteurea\": -64217814.950856276\n    },\n    \"meta\": {\n      \"commodoee_\": 62875926.662665546,\n      \"ea_c3a\": \"in laboris\",\n      \"est071\": -46759305,\n      \"dolore_103\": \"in aute \",\n      \"pariatur_87\": \"est commodo non quis\"\n    }\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "d2089886-7fa2-45be-82bf-b083aa563dcd",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "transform-event"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"event_name\": \"location\",\n  \"event_type\": \"create\",\n  \"event_category\": \"company\",\n  \"event_version\": \"1\",\n  \"event\": {\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450Z\",\n        \"modified_on\": \"2023-10-24T01:41:44.450Z\"\n      }\n    },\n    \"meta\": {\n      \"event\": {\n        \"type\": \"create\",\n        \"name\": \"location\",\n        \"version\": \"1\"\n      },\n      \"company_id\": 6086,\n      \"service\": {\n        \"name\": \"WheelJack\"\n      },\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"created_timestamp\": 1698111704725\n    }\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_trace_id\": [\n    \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n  ],\n  \"data\": {\n    \"event\": {\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"name\": \"location\",\n      \"type\": \"create\",\n      \"version\": \"1\",\n      \"created_timestamp\": 1698111704725\n    },\n    \"company_id\": 6086,\n    \"contains\": [\n      \"location\"\n    ],\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450Z\",\n        \"modified_on\": \"2023-10-24T01:41:44.450Z\"\n      }\n    }\n  },\n  \"event_name\": \"location\",\n  \"version\": \"1\",\n  \"status\": false,\n  \"event_type\": \"create\",\n  \"service_meta\": {\n    \"name\": \"WheelJack\"\n  },\n  \"association\": {\n    \"company_id\": 6086\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "d946fd89-2260-4aa8-b34b-116efaf01918",
          "name": "validateSchema | Validate Schema for an event",
          "request": {
            "name": "validateSchema | Validate Schema for an event",
            "description": {
              "content": "Validate Schema for an event",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "validate-event-schema"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event_name\": \"<string>\",\n  \"event_type\": \"<string>\",\n  \"event_category\": \"<string>\",\n  \"event_version\": \"<string>\",\n  \"event\": {\n    \"payload\": {\n      \"dolore08a\": \"cupidatat sed fugiat tempor\"\n    },\n    \"meta\": {\n      \"nulla_942\": true\n    }\n  },\n  \"event_schema\": {\n    \"in9f\": -87734634.33510976,\n    \"sed_43\": true\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "3f34c84a-bfa9-438c-9b41-1e2fe52ba1a3",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "validate-event-schema"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"event_name\": \"location\",\n  \"event_type\": \"create\",\n  \"event_category\": \"company\",\n  \"event_version\": \"1\",\n  \"event\": {\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450Z\",\n        \"modified_on\": \"2023-10-24T01:41:44.450Z\"\n      }\n    },\n    \"meta\": {\n      \"event\": {\n        \"type\": \"create\",\n        \"name\": \"location\",\n        \"version\": \"1\"\n      },\n      \"company_id\": 6086,\n      \"service\": {\n        \"name\": \"WheelJack\"\n      },\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"created_timestamp\": 1698111704725\n    }\n  },\n  \"event_schema\": {}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": true,\n  \"message\": \"Valid schema for this event\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fynd.com"
    }
  ],
  "info": {
    "_postman_id": "b7101317-5b65-4d1f-943f-f0bdca4f97cc",
    "name": "Fynd Platform's Public Side APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public Side APIs",
      "type": "text/plain"
    }
  }
}
