{
  "item": [
    {
      "id": "eba084d8-2d16-44be-8a71-adf54899c0ff",
      "name": "Billing",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "6c3d1eb8-eea9-4d1f-921e-fbcd65abe4d2",
          "name": "getStandardPlans | Get Standard/Public Plans",
          "request": {
            "name": "getStandardPlans | Get Standard/Public Plans",
            "description": {
              "content": "Get Standard/Public Plans.\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "public",
                "billing",
                "v1.0",
                "plan",
                "detailed-list"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "platform_type",
                  "value": "<string>",
                  "description": "(Required) The type of platform for which plans are requested."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "37b25141-64d2-411b-a2e8-d35a89b9a8c9",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform_type",
                      "value": "app/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"plans\": [\n    {\n      \"recurring\": {\n        \"interval\": \"month\",\n        \"interval_count\": 3\n      },\n      \"is_trial_plan\": true,\n      \"plan_group\": \"default\",\n      \"tag_lines\": [\n        \"This is 2020won trial plan\",\n        \"This is 2020won trial plan\"\n      ],\n      \"currency\": \"INR\",\n      \"is_active\": true,\n      \"is_visible\": false,\n      \"trial_period\": 30,\n      \"addons\": [\n        \"enim et\",\n        \"et cillum enim dolor\"\n      ],\n      \"tags\": [\n        \"veniam deserunt ut irure\",\n        \"aliquip \"\n      ],\n      \"type\": \"public\",\n      \"country\": \"IN\",\n      \"_id\": \"5f0dcd866173cb003706098f\",\n      \"name\": \"30 day Trial\",\n      \"description\": \"30 day Trial\",\n      \"amount\": 0,\n      \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n      \"created_at\": \"2020-07-14T15:21:42.959Z\",\n      \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n    },\n    {\n      \"recurring\": {\n        \"interval\": \"month\",\n        \"interval_count\": 3\n      },\n      \"is_trial_plan\": true,\n      \"plan_group\": \"default\",\n      \"tag_lines\": [\n        \"This is 2020won trial plan\",\n        \"This is 2020won trial plan\"\n      ],\n      \"currency\": \"INR\",\n      \"is_active\": true,\n      \"is_visible\": false,\n      \"trial_period\": 30,\n      \"addons\": [\n        \"aute ullamco ex adipisicing\",\n        \"Lo\"\n      ],\n      \"tags\": [\n        \"consectetur cupidatat in dolore\",\n        \"enim nulla dolore officia commodo\"\n      ],\n      \"type\": \"public\",\n      \"country\": \"IN\",\n      \"_id\": \"5f0dcd866173cb003706098f\",\n      \"name\": \"30 day Trial\",\n      \"description\": \"30 day Trial\",\n      \"amount\": 0,\n      \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n      \"created_at\": \"2020-07-14T15:21:42.959Z\",\n      \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n    }\n  ],\n  \"trial_plan\": {\n    \"recurring\": {\n      \"interval\": \"month\",\n      \"interval_count\": 3\n    },\n    \"is_trial_plan\": true,\n    \"plan_group\": \"default\",\n    \"tag_lines\": [\n      \"This is 2020won trial plan\",\n      \"This is 2020won trial plan\"\n    ],\n    \"currency\": \"INR\",\n    \"is_active\": true,\n    \"is_visible\": false,\n    \"trial_period\": 30,\n    \"addons\": [\n      \"et mollit\",\n      \"nostrud officia deserunt qui ea\"\n    ],\n    \"tags\": [\n      \"occaecat reprehenderit irure\",\n      \"est dolor anim ad\"\n    ],\n    \"type\": \"public\",\n    \"country\": \"IN\",\n    \"_id\": \"5f0dcd866173cb003706098f\",\n    \"name\": \"30 day Trial\",\n    \"description\": \"30 day Trial\",\n    \"amount\": 0,\n    \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n    \"created_at\": \"2020-07-14T15:21:42.959Z\",\n    \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n  },\n  \"component_groups\": [\n    \"Key Features\",\n    \"Key Features\"\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "6bad358e-d1e3-414f-805d-be533dc136d0",
              "name": "Resource not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform_type",
                      "value": "app/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Reason is required\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "926b38be-06b6-42ad-9677-d80aa53c614f",
              "name": "Internal server error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform_type",
                      "value": "app/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Opps something went wrong !!\",\n  \"code\": \"INTERNAL_SERVER_ERROR\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "9fd5245a-5881-4ab2-a225-947f108489d3",
          "name": "getPlanDetails | Get plan details",
          "request": {
            "name": "getPlanDetails | Get plan details",
            "description": {
              "content": "Get plan details.\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "public",
                "billing",
                "v1.0",
                "plan",
                "details",
                ":planId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "planId",
                  "description": "(Required) Plan unique id."
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "d26ed0d4-15fb-4711-b44b-d065628eb7f8",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "details",
                    ":planId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "planId",
                      "description": "(Required) Plan unique id."
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"recurring\": {\n    \"interval\": \"month\",\n    \"interval_count\": 3\n  },\n  \"is_trial_plan\": true,\n  \"plan_group\": \"default\",\n  \"tag_lines\": [\n    \"This is 2020won trial plan\",\n    \"This is 2020won trial plan\"\n  ],\n  \"currency\": \"INR\",\n  \"is_active\": true,\n  \"is_visible\": false,\n  \"trial_period\": 30,\n  \"addons\": [\n    \"mollit dolor\",\n    \"aliqua dolor\"\n  ],\n  \"tags\": [\n    \"exercitation v\",\n    \"laboris\"\n  ],\n  \"type\": \"public\",\n  \"country\": \"IN\",\n  \"_id\": \"5f0dcd866173cb003706098f\",\n  \"name\": \"30 day Trial\",\n  \"description\": \"30 day Trial\",\n  \"amount\": 0,\n  \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n  \"created_at\": \"2020-07-14T15:21:42.959Z\",\n  \"modified_at\": \"2020-07-14T15:21:42.959Z\",\n  \"taxation\": {\n    \"gst\": 0.18\n  },\n  \"one_time_fees\": {\n    \"developement\": 0,\n    \"marketing\": 0\n  },\n  \"credit_line\": {\n    \"is_active\": false\n  },\n  \"current_status\": \"active\",\n  \"meta\": {\n    \"plan_platform_display_name\": \"Both Mobile & Web\"\n  },\n  \"components\": [\n    {\n      \"name\": \"Integrate on Other Marketplaces\",\n      \"slug\": \"marketplace-integration\",\n      \"description\": \"Turn ON to enable integration on 3P marketplaces like Amazon, Myntra, and more\",\n      \"group\": \"Sales Channel\",\n      \"icon\": \"reprehenderit enim qui\",\n      \"links\": {},\n      \"config\": {\n        \"is_active\": true,\n        \"display_text\": \"yes\",\n        \"is_default\": false,\n        \"processing_type\": \"feature_config\",\n        \"tags\": [\n          \"in \",\n          \"ipsum occaecat\"\n        ],\n        \"feature_config\": {\n          \"enabled\": false\n        },\n        \"_id\": \"5f0dcd866173cb003706098f\",\n        \"component_id\": \"5f0dcd866173cb003706098f\",\n        \"created_at\": \"2020-07-14T15:21:42.959Z\",\n        \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n      },\n      \"is_active\": true,\n      \"display_text\": \"yes\"\n    },\n    {\n      \"name\": \"Integrate on Other Marketplaces\",\n      \"slug\": \"marketplace-integration\",\n      \"description\": \"Turn ON to enable integration on 3P marketplaces like Amazon, Myntra, and more\",\n      \"group\": \"Sales Channel\",\n      \"icon\": \"est ad\",\n      \"links\": {},\n      \"config\": {\n        \"is_active\": true,\n        \"display_text\": \"yes\",\n        \"is_default\": false,\n        \"processing_type\": \"feature_config\",\n        \"tags\": [\n          \"non consectet\",\n          \"sit a\"\n        ],\n        \"feature_config\": {\n          \"enabled\": false\n        },\n        \"_id\": \"5f0dcd866173cb003706098f\",\n        \"component_id\": \"5f0dcd866173cb003706098f\",\n        \"created_at\": \"2020-07-14T15:21:42.959Z\",\n        \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n      },\n      \"is_active\": true,\n      \"display_text\": \"yes\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "fab6cf79-4f0f-459d-954c-432fab190a74",
              "name": "Internal server error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "details",
                    ":planId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "planId",
                      "description": "(Required) Plan unique id."
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Opps something went wrong !!\",\n  \"code\": \"INTERNAL_SERVER_ERROR\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "c2dbc54e-6185-4701-bb3f-48124e8f1902",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "6ebb6675-06e7-4d04-bc45-a1f7038a3c81",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "5596c532-9c10-4f7a-8048-75d1717c7e80",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "in elit et dolore",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"application\": {\n    \"website\": {\n      \"enabled\": true,\n      \"basepath\": \"/\"\n    },\n    \"cors\": {\n      \"domains\": []\n    },\n    \"auth\": {\n      \"enabled\": true\n    },\n    \"description\": \"test\",\n    \"channel_type\": \"store\",\n    \"cache_ttl\": -1,\n    \"internal\": false,\n    \"is_active\": true,\n    \"mode\": \"live\",\n    \"_id\": \"620b931ee7bfb11f910bf4a3\",\n    \"company_id\": 2,\n    \"name\": \"test\",\n    \"owner\": \"5b9b98150df588546aaea6d2\",\n    \"logo\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"favicon\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"banner\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n    },\n    \"token\": \"tPQv0nc23\",\n    \"tokens\": [\n      {\n        \"token\": \"tPQv0nc23\",\n        \"created_at\": \"2022-02-15T11:48:46.909Z\"\n      }\n    ],\n    \"domains\": [\n      {\n        \"verified\": true,\n        \"is_primary\": true,\n        \"is_shortlink\": true,\n        \"_id\": \"620b931ee7bfb11f910bf4a4\",\n        \"name\": \"qckvv5lhp.hostfynd.dev\"\n      }\n    ],\n    \"redirections\": [],\n    \"meta\": [],\n    \"created_at\": \"2022-02-15T11:48:46.909Z\",\n    \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n    \"__v\": 0,\n    \"domain\": {\n      \"verified\": true,\n      \"is_primary\": true,\n      \"is_shortlink\": true,\n      \"_id\": \"620b931ee7bfb11f910bf4a4\",\n      \"name\": \"qckvv5lhp.hostfynd.dev\"\n    },\n    \"id\": \"620b931ee7bfb11f910bf4a3\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c940b004-7ecb-4c08-b7a0-cd532c26552c",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "in elit et dolore",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"Invalid application domain or id.\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "cc82fea3-1354-4558-b732-22d71f40bc69",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "in elit et dolore",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"No application found\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "fd40351b-7965-48b7-a8eb-8ddb61de7fce",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {
              "content": "Get Location configuration",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "18aabfaf-d103-40c9-a2a0-08c59d1371fd",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"items\": [\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"incididunt ad\",\n      \"phone_code\": \"990999092\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"adipisicing dolore commodo veniam proident\",\n      \"country_code\": \"cillum do tempor ut et\",\n      \"latitude\": \"veniam Lorem\",\n      \"longitude\": \"sit do amet\"\n    },\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"Excepteur dolore\",\n      \"phone_code\": \"990999092\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"dolore magna exercitation Ut\",\n      \"country_code\": \"est sed\",\n      \"latitude\": \"id enim commodo pariatur sit\",\n      \"longitude\": \"sint irure commodo laborum Ut\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "92d093ca-3b96-4738-b48f-ded589a2e4b7",
      "name": "Content",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "ee6213a3-3781-4582-a226-0ba6f0b30ce4",
          "name": "getCredentialsByEntity | Get credentials to power chat support systems",
          "request": {
            "name": "getCredentialsByEntity | Get credentials to power chat support systems",
            "description": {
              "content": "Get credentials for support system",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "public",
                "content",
                "credentials",
                ":entity"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "entity",
                  "description": "Server Type"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "22fed20f-f8e5-4b3e-9b85-79338ee3c94a",
              "name": "Success. Refer `CredentialsSchema` for more details.",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "content",
                    "credentials",
                    ":entity"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "entity",
                      "description": "Server Type"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"entity_type\": \"partner\",\n  \"type\": \"freshchat\",\n  \"is_enable\": true,\n  \"configuration\": {\n    \"token\": \"a3e4gf20b-d11g-4512-n3zq-03b9aa7e1yxz\",\n    \"siteId\": \"a3e8f20b-d97f-452f-bd72-03b9aa7e1bf0\",\n    \"host\": \"https://wchat.freshchat.com\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1bd7b7b6-c85f-42a8-a255-51d610717e12",
              "name": "Bad Request. See the error object in the response body to know the exact reason.",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "content",
                    "credentials",
                    ":entity"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "entity",
                      "description": "Server Type"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Oops! Something went wrong. Please try later\",\n  \"status\": 400,\n  \"code\": \"CX-1003\",\n  \"exception\": \"\",\n  \"info\": \"\",\n  \"request_id\": \"\",\n  \"stack_trace\": \"\",\n  \"meta\": {}\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "824e4304-b409-495b-85c1-644fe4f02aff",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "086be275-bc6f-4ca4-9899-9c4004410622",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "569edfb9-6aa6-4fac-bc9b-c98258ca920e",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2006-09-23T23:48:09.977Z\",\n  \"status\": -95235355,\n  \"error\": \"qui reprehenderit nulla adipisicing\",\n  \"exception\": \"anim quis incididunt exercitation\",\n  \"message\": \"ullamco reprehenderit\",\n  \"total_time_taken_in_millis\": -69160354,\n  \"http_status\": \"416 REQUESTED_RANGE_NOT_SATISFIABLE\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"ea ut ad\",\n  \"page\": {\n    \"type\": \"cu\",\n    \"size\": -73141857,\n    \"current\": 57365837,\n    \"has_next\": true,\n    \"item_total\": -58454934,\n    \"next_id\": \"sed quis culpa voluptate\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "14ffd174-9c0c-4c4f-8617-125348109399",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2006-09-23T23:48:09.977Z\",\n  \"status\": -95235355,\n  \"error\": \"qui reprehenderit nulla adipisicing\",\n  \"exception\": \"anim quis incididunt exercitation\",\n  \"message\": \"ullamco reprehenderit\",\n  \"total_time_taken_in_millis\": -69160354,\n  \"http_status\": \"416 REQUESTED_RANGE_NOT_SATISFIABLE\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"ea ut ad\",\n  \"page\": {\n    \"type\": \"cu\",\n    \"size\": -73141857,\n    \"current\": 57365837,\n    \"has_next\": true,\n    \"item_total\": -58454934,\n    \"next_id\": \"sed quis culpa voluptate\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "00bb4ccf-da4d-4d01-ad16-28ffe67e36bb",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2006-09-23T23:48:09.977Z\",\n  \"status\": -95235355,\n  \"error\": \"qui reprehenderit nulla adipisicing\",\n  \"exception\": \"anim quis incididunt exercitation\",\n  \"message\": \"ullamco reprehenderit\",\n  \"total_time_taken_in_millis\": -69160354,\n  \"http_status\": \"416 REQUESTED_RANGE_NOT_SATISFIABLE\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"ea ut ad\",\n  \"page\": {\n    \"type\": \"cu\",\n    \"size\": -73141857,\n    \"current\": 57365837,\n    \"has_next\": true,\n    \"item_total\": -58454934,\n    \"next_id\": \"sed quis culpa voluptate\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "e3876922-ad7f-4916-84ce-defc568aaa9b",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "9d97b731-a16a-4be8-95f3-7bf8a9a65c62",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1998-06-19T18:21:19.965Z\",\n  \"status\": 19058116,\n  \"error\": \"adipisicing sunt ullamco Ut id\",\n  \"exception\": \"quis anim minim\",\n  \"message\": \"dolor officia\",\n  \"total_time_taken_in_millis\": 25866193,\n  \"http_status\": \"501 NOT_IMPLEMENTED\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"non in veniam\",\n  \"page\": {\n    \"type\": \"nulla \",\n    \"size\": -5278457,\n    \"current\": 94118876,\n    \"has_next\": false,\n    \"item_total\": -81709863,\n    \"next_id\": \"ut aliqua\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c0def36f-62e6-4ac9-aee0-7e45db34a30e",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1998-06-19T18:21:19.965Z\",\n  \"status\": 19058116,\n  \"error\": \"adipisicing sunt ullamco Ut id\",\n  \"exception\": \"quis anim minim\",\n  \"message\": \"dolor officia\",\n  \"total_time_taken_in_millis\": 25866193,\n  \"http_status\": \"501 NOT_IMPLEMENTED\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"non in veniam\",\n  \"page\": {\n    \"type\": \"nulla \",\n    \"size\": -5278457,\n    \"current\": 94118876,\n    \"has_next\": false,\n    \"item_total\": -81709863,\n    \"next_id\": \"ut aliqua\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e75b1e02-a740-4fd3-bd46-63606467bb78",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1998-06-19T18:21:19.965Z\",\n  \"status\": 19058116,\n  \"error\": \"adipisicing sunt ullamco Ut id\",\n  \"exception\": \"quis anim minim\",\n  \"message\": \"dolor officia\",\n  \"total_time_taken_in_millis\": 25866193,\n  \"http_status\": \"501 NOT_IMPLEMENTED\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"non in veniam\",\n  \"page\": {\n    \"type\": \"nulla \",\n    \"size\": -5278457,\n    \"current\": 94118876,\n    \"has_next\": false,\n    \"item_total\": -81709863,\n    \"next_id\": \"ut aliqua\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "6359d3ae-b9cf-4aac-bbf2-a45676e0bbd8",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1998-06-19T18:21:19.965Z\",\n  \"status\": 19058116,\n  \"error\": \"adipisicing sunt ullamco Ut id\",\n  \"exception\": \"quis anim minim\",\n  \"message\": \"dolor officia\",\n  \"total_time_taken_in_millis\": 25866193,\n  \"http_status\": \"501 NOT_IMPLEMENTED\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"non in veniam\",\n  \"page\": {\n    \"type\": \"nulla \",\n    \"size\": -5278457,\n    \"current\": 94118876,\n    \"has_next\": false,\n    \"item_total\": -81709863,\n    \"next_id\": \"ut aliqua\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a9721fa1-a882-4d10-8acc-565f5afc63f2",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1998-06-19T18:21:19.965Z\",\n  \"status\": 19058116,\n  \"error\": \"adipisicing sunt ullamco Ut id\",\n  \"exception\": \"quis anim minim\",\n  \"message\": \"dolor officia\",\n  \"total_time_taken_in_millis\": 25866193,\n  \"http_status\": \"501 NOT_IMPLEMENTED\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"non in veniam\",\n  \"page\": {\n    \"type\": \"nulla \",\n    \"size\": -5278457,\n    \"current\": 94118876,\n    \"has_next\": false,\n    \"item_total\": -81709863,\n    \"next_id\": \"ut aliqua\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ed412a60-ebad-4727-b5f9-bb562601a5e2",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "58fc0256-7a6c-4ef7-846a-30b18c1b04ca",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1995-12-18T03:33:38.013Z\",\n  \"status\": -77845991,\n  \"error\": \"do cupidatat ut elit\",\n  \"exception\": \"ipsum deserunt\",\n  \"message\": \"ad nisi Lorem\",\n  \"total_time_taken_in_millis\": 93450990,\n  \"http_status\": \"413 PAYLOAD_TOO_LARGE\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"culpa mag\",\n      \"description\": \"elit do sint amet\",\n      \"name\": \"aliqua\",\n      \"slug\": \"voluptate in\",\n      \"meta\": [\n        {\n          \"_id\": \"amet veniam sed ea culpa\",\n          \"name\": \"reprehenderit\",\n          \"value\": \"aliqua cupidatat\"\n        },\n        {\n          \"_id\": \"incididunt aliqua sunt anim\",\n          \"name\": \"Duis enim ea\",\n          \"value\": \"ut officia laboris\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"voluptate\",\n        \"integration\": \"ut in dolore fugiat\",\n        \"level\": \"Duis incididunt esse fugiat\",\n        \"uid\": -28413006,\n        \"opted\": true,\n        \"permissions\": [\n          \"Lorem nulla\",\n          \"elit consectetur dolor minim\"\n        ],\n        \"token\": \"id ut amet in\",\n        \"name\": \"enim\",\n        \"stores\": [\n          {\n            \"_id\": \"cillum enim reprehenderit\",\n            \"integration\": \"quis irure ali\",\n            \"level\": \"ex dolore do\",\n            \"uid\": -82092186,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"exercitation ali\",\n            \"code\": \"nisi aliquip\",\n            \"name\": \"cupidatat\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"culpa officia\",\n            \"integration\": \"ut est in ex\",\n            \"level\": \"labore sint nulla id\",\n            \"uid\": -57939308,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"velit do reprehenderit\",\n            \"code\": \"laboris ullamco consectetur in dese\",\n            \"name\": \"ex reprehenderit\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"in deserunt\",\n        \"integration\": \"dolore laborum elit\",\n        \"level\": \"sint adipisicing dolor aute exercita\",\n        \"uid\": -26367834,\n        \"opted\": false,\n        \"permissions\": [\n          \"sed fugiat id veniam\",\n          \"labore sed qui commodo\"\n        ],\n        \"token\": \"anim ad et\",\n        \"name\": \"ut non culpa labore\",\n        \"stores\": [\n          {\n            \"_id\": \"commodo ex anim Excepteur aliqua\",\n            \"integration\": \"ut sunt velit Ut\",\n            \"level\": \"nostrud irure cillum\",\n            \"uid\": 37662625,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"consectetur ad\",\n            \"code\": \"exercitation Excepteur labore\",\n            \"name\": \"adipisicing ullamco officia quis\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"nulla aliquip est fugiat \",\n            \"integration\": \"Ut anim nostrud in\",\n            \"level\": \"ut sed sint\",\n            \"uid\": 64374690,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"reprehenderit ut irure enim\",\n            \"code\": \"tempor consequat laboris minim commodo\",\n            \"name\": \"occaecat labore\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"nulla do\",\n      \"description\": \"labore et ullamco\",\n      \"name\": \"aliqua incididunt nostrud esse\",\n      \"slug\": \"cillum nulla culpa\",\n      \"meta\": [\n        {\n          \"_id\": \"in qui non occaecat quis\",\n          \"name\": \"quis sint\",\n          \"value\": \"minim qui occaecat\"\n        },\n        {\n          \"_id\": \"nostrud qui\",\n          \"name\": \"exercitation proident laborum ipsum deserunt\",\n          \"value\": \"officia do velit deserunt pariatur\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"incididunt consectetur ex ullamco\",\n        \"integration\": \"officia\",\n        \"level\": \"eiusmod\",\n        \"uid\": 90447906,\n        \"opted\": false,\n        \"permissions\": [\n          \"dolore labore dolore\",\n          \"ex minim\"\n        ],\n        \"token\": \"eu ea non adipisicing\",\n        \"name\": \"do laborum adipisicing occaecat incididunt\",\n        \"stores\": [\n          {\n            \"_id\": \"mollit ad cupidatat sit irure\",\n            \"integration\": \"laboris\",\n            \"level\": \"amet magna in anim\",\n            \"uid\": 16896779,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"quis voluptate occaecat anim\",\n            \"code\": \"reprehenderit ut consequat\",\n            \"name\": \"dolor irure ea commodo in\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"in Duis proident\",\n            \"integration\": \"adipisicing exercitation eu occaecat\",\n            \"level\": \"consectetur\",\n            \"uid\": -6541924,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ea cupidatat deserunt\",\n            \"code\": \"minim dolore amet\",\n            \"name\": \"sed anim quis\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"id ipsum\",\n        \"integration\": \"do dolor incididunt aliquip\",\n        \"level\": \"adipisicing magna incididunt\",\n        \"uid\": -28885722,\n        \"opted\": true,\n        \"permissions\": [\n          \"voluptate ut sunt\",\n          \"voluptate veniam aute mollit\"\n        ],\n        \"token\": \"ullamco\",\n        \"name\": \"et labore eiusmod ad\",\n        \"stores\": [\n          {\n            \"_id\": \"labore sint in sunt ipsum\",\n            \"integration\": \"qui amet sit commodo\",\n            \"level\": \"in occaecat no\",\n            \"uid\": -18230529,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"dolor Excepteur\",\n            \"code\": \"Duis amet ad ex\",\n            \"name\": \"magna cillum quis sunt consequat\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"consequat anim et in\",\n            \"integration\": \"est ex sint\",\n            \"level\": \"nostrud ad\",\n            \"uid\": 77148515,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ea velit aliquip\",\n            \"code\": \"id\",\n            \"name\": \"elit consectetur in deserunt ex\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"ullamco cupidatat\",\n  \"page\": {\n    \"type\": \"sit ipsum eiusmod culpa \",\n    \"size\": -41492205,\n    \"current\": 37911977,\n    \"has_next\": false,\n    \"item_total\": 4970939,\n    \"next_id\": \"minim eu do amet ullamco\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a312d92c-7107-4dc9-ac53-2337613437ce",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2021-08-23T10:39:08.191Z\",\n  \"status\": -36521194,\n  \"error\": \"ut adipisicing consectetur\",\n  \"exception\": \"incididunt deserunt et tempor in\",\n  \"message\": \"est pariatur ad ut amet\",\n  \"total_time_taken_in_millis\": -77114801,\n  \"http_status\": \"401 UNAUTHORIZED\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"voluptate nisi consectetur\",\n      \"description\": \"commodo veniam\",\n      \"name\": \"dolore ut esse\",\n      \"slug\": \"culpa ex nulla qui\",\n      \"meta\": [\n        {\n          \"_id\": \"sed eiusmod non consequat id\",\n          \"name\": \"irure nostrud\",\n          \"value\": \"ullamco fugiat ame\"\n        },\n        {\n          \"_id\": \"enim do\",\n          \"name\": \"velit\",\n          \"value\": \"exercitation dolor ea sint nulla\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"consequat Duis\",\n        \"integration\": \"est ex in magna\",\n        \"level\": \"voluptate sunt\",\n        \"uid\": 23180449,\n        \"opted\": false,\n        \"permissions\": [\n          \"adipisicing dolor\",\n          \"eu sit culpa veniam\"\n        ],\n        \"token\": \"cillum\",\n        \"name\": \"voluptate quis\",\n        \"stores\": [\n          {\n            \"_id\": \"in\",\n            \"integration\": \"eiusmod Lorem ullamco incididunt minim\",\n            \"level\": \"ullamco\",\n            \"uid\": 7979584,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"sunt occaeca\",\n            \"code\": \"irure Duis laboris pariatur\",\n            \"name\": \"est Ut fugiat et\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"ut labore\",\n            \"integration\": \"proident nisi sunt fugiat\",\n            \"level\": \"cillum fugiat\",\n            \"uid\": -57797809,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"do ipsum occaecat proident in\",\n            \"code\": \"magna eu\",\n            \"name\": \"non magna veniam\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"paria\",\n        \"integration\": \"incididunt sint proident eiusmod\",\n        \"level\": \"fugiat est\",\n        \"uid\": -87895657,\n        \"opted\": true,\n        \"permissions\": [\n          \"incididunt Ut id\",\n          \"voluptate aute incididunt\"\n        ],\n        \"token\": \"Lorem\",\n        \"name\": \"in fugiat irure non officia\",\n        \"stores\": [\n          {\n            \"_id\": \"Ut ex commodo\",\n            \"integration\": \"aute\",\n            \"level\": \"quis labore officia sunt sit\",\n            \"uid\": 55452623,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"adipisicin\",\n            \"code\": \"esse\",\n            \"name\": \"ame\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"in ut temp\",\n            \"integration\": \"ut adipisicing\",\n            \"level\": \"sunt et ut ex irure\",\n            \"uid\": 64499988,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"in do ea\",\n            \"code\": \"dolore incididunt veniam ea sit\",\n            \"name\": \"ut laboris incididunt consequat\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"Excepteur est minim\",\n      \"description\": \"ut quis ea exercitation\",\n      \"name\": \"qui occaecat anim\",\n      \"slug\": \"proident et fugiat dolore\",\n      \"meta\": [\n        {\n          \"_id\": \"in dolore non occaecat\",\n          \"name\": \"fugiat cupidatat ad\",\n          \"value\": \"sed eu ad minim\"\n        },\n        {\n          \"_id\": \"reprehenderit consequat Excepteur exercitation voluptate\",\n          \"name\": \"in tempor velit\",\n          \"value\": \"in esse anim\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"veniam eiusmod\",\n        \"integration\": \"dolore enim\",\n        \"level\": \"ut consequat voluptat\",\n        \"uid\": 66338860,\n        \"opted\": false,\n        \"permissions\": [\n          \"pariatur\",\n          \"\"\n        ],\n        \"token\": \"dolore in nisi\",\n        \"name\": \"eu pa\",\n        \"stores\": [\n          {\n            \"_id\": \"eiusmod mollit laborum cillum\",\n            \"integration\": \"irure adipisi\",\n            \"level\": \"ma\",\n            \"uid\": 98117284,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"magna voluptate id commodo co\",\n            \"code\": \"quis mollit\",\n            \"name\": \"do sit\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"commodo sunt\",\n            \"integration\": \"ullamco labore laboris\",\n            \"level\": \"consectetur occaecat ad Excepteur qui\",\n            \"uid\": -30022439,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"eu anim aliquip nisi\",\n            \"code\": \"esse nostru\",\n            \"name\": \"proident reprehenderit\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"ex pariatur enim dolor\",\n        \"integration\": \"ut\",\n        \"level\": \"ea ipsum et ut\",\n        \"uid\": 64254767,\n        \"opted\": true,\n        \"permissions\": [\n          \"cupidatat ut\",\n          \"aute laboris\"\n        ],\n        \"token\": \"in mollit dolore\",\n        \"name\": \"laborum adip\",\n        \"stores\": [\n          {\n            \"_id\": \"laboris mollit quis occaecat magna\",\n            \"integration\": \"nisi consectetur Duis\",\n            \"level\": \"minim labore ea exercitation\",\n            \"uid\": 1352770,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"la\",\n            \"code\": \"aliqua deserunt\",\n            \"name\": \"dolore in reprehenderit voluptate\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"Ut reprehenderit incididunt labore\",\n            \"integration\": \"laboris\",\n            \"level\": \"incididunt anim enim mollit\",\n            \"uid\": -58988652,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"cupidatat nisi\",\n            \"code\": \"amet\",\n            \"name\": \"aute c\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"adipisicing sed\",\n  \"page\": {\n    \"type\": \"anim magna m\",\n    \"size\": -87670818,\n    \"current\": -35854034,\n    \"has_next\": false,\n    \"item_total\": 16796887,\n    \"next_id\": \"sit nostrud Excepteur adipisicing\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "85a75e50-8e28-46e1-bcb4-633850541cdf",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2021-08-23T10:39:08.191Z\",\n  \"status\": -36521194,\n  \"error\": \"ut adipisicing consectetur\",\n  \"exception\": \"incididunt deserunt et tempor in\",\n  \"message\": \"est pariatur ad ut amet\",\n  \"total_time_taken_in_millis\": -77114801,\n  \"http_status\": \"401 UNAUTHORIZED\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"voluptate nisi consectetur\",\n      \"description\": \"commodo veniam\",\n      \"name\": \"dolore ut esse\",\n      \"slug\": \"culpa ex nulla qui\",\n      \"meta\": [\n        {\n          \"_id\": \"sed eiusmod non consequat id\",\n          \"name\": \"irure nostrud\",\n          \"value\": \"ullamco fugiat ame\"\n        },\n        {\n          \"_id\": \"enim do\",\n          \"name\": \"velit\",\n          \"value\": \"exercitation dolor ea sint nulla\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"consequat Duis\",\n        \"integration\": \"est ex in magna\",\n        \"level\": \"voluptate sunt\",\n        \"uid\": 23180449,\n        \"opted\": false,\n        \"permissions\": [\n          \"adipisicing dolor\",\n          \"eu sit culpa veniam\"\n        ],\n        \"token\": \"cillum\",\n        \"name\": \"voluptate quis\",\n        \"stores\": [\n          {\n            \"_id\": \"in\",\n            \"integration\": \"eiusmod Lorem ullamco incididunt minim\",\n            \"level\": \"ullamco\",\n            \"uid\": 7979584,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"sunt occaeca\",\n            \"code\": \"irure Duis laboris pariatur\",\n            \"name\": \"est Ut fugiat et\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"ut labore\",\n            \"integration\": \"proident nisi sunt fugiat\",\n            \"level\": \"cillum fugiat\",\n            \"uid\": -57797809,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"do ipsum occaecat proident in\",\n            \"code\": \"magna eu\",\n            \"name\": \"non magna veniam\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"paria\",\n        \"integration\": \"incididunt sint proident eiusmod\",\n        \"level\": \"fugiat est\",\n        \"uid\": -87895657,\n        \"opted\": true,\n        \"permissions\": [\n          \"incididunt Ut id\",\n          \"voluptate aute incididunt\"\n        ],\n        \"token\": \"Lorem\",\n        \"name\": \"in fugiat irure non officia\",\n        \"stores\": [\n          {\n            \"_id\": \"Ut ex commodo\",\n            \"integration\": \"aute\",\n            \"level\": \"quis labore officia sunt sit\",\n            \"uid\": 55452623,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"adipisicin\",\n            \"code\": \"esse\",\n            \"name\": \"ame\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"in ut temp\",\n            \"integration\": \"ut adipisicing\",\n            \"level\": \"sunt et ut ex irure\",\n            \"uid\": 64499988,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"in do ea\",\n            \"code\": \"dolore incididunt veniam ea sit\",\n            \"name\": \"ut laboris incididunt consequat\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"Excepteur est minim\",\n      \"description\": \"ut quis ea exercitation\",\n      \"name\": \"qui occaecat anim\",\n      \"slug\": \"proident et fugiat dolore\",\n      \"meta\": [\n        {\n          \"_id\": \"in dolore non occaecat\",\n          \"name\": \"fugiat cupidatat ad\",\n          \"value\": \"sed eu ad minim\"\n        },\n        {\n          \"_id\": \"reprehenderit consequat Excepteur exercitation voluptate\",\n          \"name\": \"in tempor velit\",\n          \"value\": \"in esse anim\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"veniam eiusmod\",\n        \"integration\": \"dolore enim\",\n        \"level\": \"ut consequat voluptat\",\n        \"uid\": 66338860,\n        \"opted\": false,\n        \"permissions\": [\n          \"pariatur\",\n          \"\"\n        ],\n        \"token\": \"dolore in nisi\",\n        \"name\": \"eu pa\",\n        \"stores\": [\n          {\n            \"_id\": \"eiusmod mollit laborum cillum\",\n            \"integration\": \"irure adipisi\",\n            \"level\": \"ma\",\n            \"uid\": 98117284,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"magna voluptate id commodo co\",\n            \"code\": \"quis mollit\",\n            \"name\": \"do sit\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"commodo sunt\",\n            \"integration\": \"ullamco labore laboris\",\n            \"level\": \"consectetur occaecat ad Excepteur qui\",\n            \"uid\": -30022439,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"eu anim aliquip nisi\",\n            \"code\": \"esse nostru\",\n            \"name\": \"proident reprehenderit\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"ex pariatur enim dolor\",\n        \"integration\": \"ut\",\n        \"level\": \"ea ipsum et ut\",\n        \"uid\": 64254767,\n        \"opted\": true,\n        \"permissions\": [\n          \"cupidatat ut\",\n          \"aute laboris\"\n        ],\n        \"token\": \"in mollit dolore\",\n        \"name\": \"laborum adip\",\n        \"stores\": [\n          {\n            \"_id\": \"laboris mollit quis occaecat magna\",\n            \"integration\": \"nisi consectetur Duis\",\n            \"level\": \"minim labore ea exercitation\",\n            \"uid\": 1352770,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"la\",\n            \"code\": \"aliqua deserunt\",\n            \"name\": \"dolore in reprehenderit voluptate\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"Ut reprehenderit incididunt labore\",\n            \"integration\": \"laboris\",\n            \"level\": \"incididunt anim enim mollit\",\n            \"uid\": -58988652,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"cupidatat nisi\",\n            \"code\": \"amet\",\n            \"name\": \"aute c\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"adipisicing sed\",\n  \"page\": {\n    \"type\": \"anim magna m\",\n    \"size\": -87670818,\n    \"current\": -35854034,\n    \"has_next\": false,\n    \"item_total\": 16796887,\n    \"next_id\": \"sit nostrud Excepteur adipisicing\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "0ba987cc-27a8-4e55-98db-b2404fa3b95e",
          "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
          "request": {
            "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "5e04ae84-4a3f-458b-be66-bc72d46c6b76",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1956-08-29T09:11:24.236Z\",\n  \"status\": 24920311,\n  \"error\": \"proident aliqua exercitation enim\",\n  \"exception\": \"pariatur proident dolor\",\n  \"message\": \"exercitation ut Lorem elit esse\",\n  \"total_time_taken_in_millis\": -72955580,\n  \"http_status\": \"202 ACCEPTED\",\n  \"items\": {\n    \"session_id\": \"amet in eu proident\",\n    \"error_message\": \"ea ex\"\n  },\n  \"payload\": {\n    \"session_id\": \"tempor eiusmod minim nulla\",\n    \"error_message\": \"mollit irure co\"\n  },\n  \"trace_id\": \"dolor adipi\",\n  \"page\": {\n    \"type\": \"magna aute non \",\n    \"size\": -41448334,\n    \"current\": 66526301,\n    \"has_next\": true,\n    \"item_total\": 36884302,\n    \"next_id\": \"reprehenderit pariatur ea et quis\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "92cd7976-2798-4e93-a26f-bbba14a5d224",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1956-08-29T09:11:24.236Z\",\n  \"status\": 24920311,\n  \"error\": \"proident aliqua exercitation enim\",\n  \"exception\": \"pariatur proident dolor\",\n  \"message\": \"exercitation ut Lorem elit esse\",\n  \"total_time_taken_in_millis\": -72955580,\n  \"http_status\": \"202 ACCEPTED\",\n  \"items\": {\n    \"session_id\": \"amet in eu proident\",\n    \"error_message\": \"ea ex\"\n  },\n  \"payload\": {\n    \"session_id\": \"tempor eiusmod minim nulla\",\n    \"error_message\": \"mollit irure co\"\n  },\n  \"trace_id\": \"dolor adipi\",\n  \"page\": {\n    \"type\": \"magna aute non \",\n    \"size\": -41448334,\n    \"current\": 66526301,\n    \"has_next\": true,\n    \"item_total\": 36884302,\n    \"next_id\": \"reprehenderit pariatur ea et quis\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2b7b536e-4bc9-4a14-865c-feb358aca9c6",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1956-08-29T09:11:24.236Z\",\n  \"status\": 24920311,\n  \"error\": \"proident aliqua exercitation enim\",\n  \"exception\": \"pariatur proident dolor\",\n  \"message\": \"exercitation ut Lorem elit esse\",\n  \"total_time_taken_in_millis\": -72955580,\n  \"http_status\": \"202 ACCEPTED\",\n  \"items\": {\n    \"session_id\": \"amet in eu proident\",\n    \"error_message\": \"ea ex\"\n  },\n  \"payload\": {\n    \"session_id\": \"tempor eiusmod minim nulla\",\n    \"error_message\": \"mollit irure co\"\n  },\n  \"trace_id\": \"dolor adipi\",\n  \"page\": {\n    \"type\": \"magna aute non \",\n    \"size\": -41448334,\n    \"current\": 66526301,\n    \"has_next\": true,\n    \"item_total\": 36884302,\n    \"next_id\": \"reprehenderit pariatur ea et quis\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "e7fa012f-d381-4823-a985-6da8a358c9ed",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "981af2b0-d62b-4bad-aa41-81a3310fe6d3",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2011-07-01T13:37:29.918Z\",\n  \"status\": 11508240,\n  \"error\": \"reprehenderit\",\n  \"exception\": \"dolore est dolore\",\n  \"message\": \"sit ex\",\n  \"total_time_taken_in_millis\": 25694327,\n  \"http_status\": \"103 CHECKPOINT\",\n  \"items\": {\n    \"company_id\": 83964335,\n    \"integration_data\": {\n      \"nostrud02\": {}\n    },\n    \"company_name\": \"ex \",\n    \"task_details\": {\n      \"type\": -59346155,\n      \"group_list\": [\n        {\n          \"text\": \"amet reprehenderit Excep\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"cillum adipisicing dolore\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -71580530.45814908,\n      \"safe_stock\": 70694818,\n      \"period_threshold\": -15763391,\n      \"period_threshold_type\": \"MONTHS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"in voluptate nisi magna\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"occaecat dolor et\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"deserunt id\",\n    \"alias\": \"Ut in\"\n  },\n  \"payload\": {\n    \"company_id\": -10599425,\n    \"integration_data\": {\n      \"dolorfc4\": {}\n    },\n    \"company_name\": \"nulla labore dolor tempor\",\n    \"task_details\": {\n      \"type\": -22428847,\n      \"group_list\": [\n        {\n          \"text\": \"non i\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"occaecat adipisicing nulla ipsum\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -46156534.470891766,\n      \"safe_stock\": -1343896,\n      \"period_threshold\": 21215278,\n      \"period_threshold_type\": \"HOURS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"ut Excepteur ipsum\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"ullamco dolore ut f\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"Excepteur est labore\",\n    \"alias\": \"eiusmod ea commodo exercitation\"\n  },\n  \"trace_id\": \"consectetur commodo\",\n  \"page\": {\n    \"type\": \"veniam id sit Excepteur aliqua\",\n    \"size\": -35757082,\n    \"current\": -7594580,\n    \"has_next\": false,\n    \"item_total\": 58993205,\n    \"next_id\": \"aliq\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3f5b77f5-bb59-408e-bf87-c1bb85fef863",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1960-10-31T11:16:43.220Z\",\n  \"status\": 69206052,\n  \"error\": \"labor\",\n  \"exception\": \"non deserunt nulla id ut\",\n  \"message\": \"labore adipisicing ex sit magna\",\n  \"total_time_taken_in_millis\": 75975428,\n  \"http_status\": \"411 LENGTH_REQUIRED\",\n  \"items\": {\n    \"company_id\": -83845042,\n    \"integration_data\": {\n      \"ea_5\": {}\n    },\n    \"company_name\": \"deserunt anim quis ipsum\",\n    \"task_details\": {\n      \"type\": -86848697,\n      \"group_list\": [\n        {\n          \"text\": \"esse amet in anim\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"cillum aliquip dolore\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 59638016.41767633,\n      \"safe_stock\": 31514480,\n      \"period_threshold\": 9842794,\n      \"period_threshold_type\": \"MONTHS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"dolor et\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"culpa\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"in reprehenderit incididunt Ut\",\n    \"alias\": \"Ut occaecat et ullamco\"\n  },\n  \"payload\": {\n    \"company_id\": -89658138,\n    \"integration_data\": {\n      \"in3\": {},\n      \"aliquip__\": {}\n    },\n    \"company_name\": \"Excepteur Lorem\",\n    \"task_details\": {\n      \"type\": -15779332,\n      \"group_list\": [\n        {\n          \"text\": \"anim ut enim\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"fugiat velit cupidatat in\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -65275066.961052634,\n      \"safe_stock\": -72672751,\n      \"period_threshold\": -24319602,\n      \"period_threshold_type\": \"HOURS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"sunt\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"ullamco laboris\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"esse\",\n    \"alias\": \"cupidatat\"\n  },\n  \"trace_id\": \"pariatur dese\",\n  \"page\": {\n    \"type\": \"ad\",\n    \"size\": -79931846,\n    \"current\": 52927932,\n    \"has_next\": false,\n    \"item_total\": -45377197,\n    \"next_id\": \"ut laborum in\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "4bbf7e32-924b-4984-9f19-435384991487",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1960-10-31T11:16:43.220Z\",\n  \"status\": 69206052,\n  \"error\": \"labor\",\n  \"exception\": \"non deserunt nulla id ut\",\n  \"message\": \"labore adipisicing ex sit magna\",\n  \"total_time_taken_in_millis\": 75975428,\n  \"http_status\": \"411 LENGTH_REQUIRED\",\n  \"items\": {\n    \"company_id\": -83845042,\n    \"integration_data\": {\n      \"ea_5\": {}\n    },\n    \"company_name\": \"deserunt anim quis ipsum\",\n    \"task_details\": {\n      \"type\": -86848697,\n      \"group_list\": [\n        {\n          \"text\": \"esse amet in anim\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"cillum aliquip dolore\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 59638016.41767633,\n      \"safe_stock\": 31514480,\n      \"period_threshold\": 9842794,\n      \"period_threshold_type\": \"MONTHS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"dolor et\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"culpa\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"in reprehenderit incididunt Ut\",\n    \"alias\": \"Ut occaecat et ullamco\"\n  },\n  \"payload\": {\n    \"company_id\": -89658138,\n    \"integration_data\": {\n      \"in3\": {},\n      \"aliquip__\": {}\n    },\n    \"company_name\": \"Excepteur Lorem\",\n    \"task_details\": {\n      \"type\": -15779332,\n      \"group_list\": [\n        {\n          \"text\": \"anim ut enim\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"fugiat velit cupidatat in\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -65275066.961052634,\n      \"safe_stock\": -72672751,\n      \"period_threshold\": -24319602,\n      \"period_threshold_type\": \"HOURS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"sunt\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"ullamco laboris\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"esse\",\n    \"alias\": \"cupidatat\"\n  },\n  \"trace_id\": \"pariatur dese\",\n  \"page\": {\n    \"type\": \"ad\",\n    \"size\": -79931846,\n    \"current\": 52927932,\n    \"has_next\": false,\n    \"item_total\": -45377197,\n    \"next_id\": \"ut laborum in\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "f37b1e8f-c369-4fde-a64a-75518b65d527",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "612b495a-a71c-4f84-b1e5-41cddefe1d2b",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1944-07-29T14:29:56.180Z\",\n  \"status\": -13088482,\n  \"error\": \"velit Lorem\",\n  \"exception\": \"dolore\",\n  \"message\": \"minim ad laborum\",\n  \"total_time_taken_in_millis\": 53634179,\n  \"http_status\": \"404 NOT_FOUND\",\n  \"items\": [\n    {\n      \"company_id\": 34932934,\n      \"integration_data\": {\n        \"non9c\": {}\n      },\n      \"company_name\": \"proident tempor ullamco\",\n      \"task_details\": {\n        \"type\": 68238346,\n        \"group_list\": [\n          {\n            \"text\": \"et ea exercitation\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"incididunt\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -94897831.30851746,\n        \"safe_stock\": 67980125,\n        \"period_threshold\": -46799299,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"anim dolor ut \",\n            \"value\": {}\n          },\n          {\n            \"text\": \"fugiat eiusmod in voluptate laboris\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"aute tempor amet reprehenderit\",\n      \"alias\": \"cupidatat Excepteur in\"\n    },\n    {\n      \"company_id\": -74441970,\n      \"integration_data\": {\n        \"ipsumf_\": {}\n      },\n      \"company_name\": \"consequat minim commodo eiusmod\",\n      \"task_details\": {\n        \"type\": -17267651,\n        \"group_list\": [\n          {\n            \"text\": \"Ut ad\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"in\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 46472657.98069945,\n        \"safe_stock\": 76777690,\n        \"period_threshold\": 51847686,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"voluptate\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"non Lorem ut\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"qui aute\",\n      \"alias\": \"consequat sed voluptate\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": 84061358,\n      \"integration_data\": {\n        \"et0d7\": {},\n        \"cupidatat636\": {}\n      },\n      \"company_name\": \"in incididunt anim dolore eu\",\n      \"task_details\": {\n        \"type\": 83180456,\n        \"group_list\": [\n          {\n            \"text\": \"nulla enim consecte\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"minim non sunt\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -11718341.59350124,\n        \"safe_stock\": -79257890,\n        \"period_threshold\": -1132771,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"aute\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"culpa Ut Lorem\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"est tempor\",\n      \"alias\": \"pariatur commodo\"\n    },\n    {\n      \"company_id\": -47570653,\n      \"integration_data\": {\n        \"inb8\": {}\n      },\n      \"company_name\": \"dolor anim nisi magna\",\n      \"task_details\": {\n        \"type\": 71325161,\n        \"group_list\": [\n          {\n            \"text\": \"cupidatat Ut\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ipsum aliqua pariatur laborum in\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 42019585.18876037,\n        \"safe_stock\": 65284681,\n        \"period_threshold\": -45800869,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"officia ea\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"incididunt\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"aute\",\n      \"alias\": \"aute\"\n    }\n  ],\n  \"trace_id\": \"sit consequat laborum nostrud\",\n  \"page\": {\n    \"type\": \"do minim ex\",\n    \"size\": 82916770,\n    \"current\": 51563833,\n    \"has_next\": false,\n    \"item_total\": 51247306,\n    \"next_id\": \"deserunt\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9546ac34-4edf-496e-a8d5-68e25c1d3465",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2013-01-21T22:44:26.483Z\",\n  \"status\": -77702802,\n  \"error\": \"aliqua esse consectetur\",\n  \"exception\": \"nulla ut minim\",\n  \"message\": \"laboris dolore exercitation minim\",\n  \"total_time_taken_in_millis\": -71123970,\n  \"http_status\": \"401 UNAUTHORIZED\",\n  \"items\": [\n    {\n      \"company_id\": 31611389,\n      \"integration_data\": {\n        \"voluptate4\": {}\n      },\n      \"company_name\": \"eiusmod nisi eu\",\n      \"task_details\": {\n        \"type\": -4227382,\n        \"group_list\": [\n          {\n            \"text\": \"cupidatat dolore ea anim\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"occaecat ut\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -12407695.068792,\n        \"safe_stock\": 78470785,\n        \"period_threshold\": -97972226,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"et commodo\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"v\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"aliquip labore ex\",\n      \"alias\": \"et sint\"\n    },\n    {\n      \"company_id\": 6335278,\n      \"integration_data\": {\n        \"sed7\": {},\n        \"voluptate__e1\": {}\n      },\n      \"company_name\": \"id velit enim\",\n      \"task_details\": {\n        \"type\": 84962685,\n        \"group_list\": [\n          {\n            \"text\": \"sit dolore ipsum incididunt\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"nulla\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 20862699.568483308,\n        \"safe_stock\": -81048080,\n        \"period_threshold\": 22793249,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"elit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"esse laborum consequat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"dolor ut\",\n      \"alias\": \"nisi Ut\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": -69124778,\n      \"integration_data\": {\n        \"elit_d7\": {}\n      },\n      \"company_name\": \"reprehenderit velit\",\n      \"task_details\": {\n        \"type\": -37575407,\n        \"group_list\": [\n          {\n            \"text\": \"irure voluptate\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"do null\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -5989965.3126677275,\n        \"safe_stock\": 35492627,\n        \"period_threshold\": -49004522,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"elit sed ea Lorem\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"aliq\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"dolor quis eiusmod consectetur\",\n      \"alias\": \"dolore minim occaec\"\n    },\n    {\n      \"company_id\": 91013556,\n      \"integration_data\": {\n        \"ex_f6\": {},\n        \"ex_6f\": {},\n        \"qui_6d6\": {}\n      },\n      \"company_name\": \"dolor enim sunt\",\n      \"task_details\": {\n        \"type\": -242580,\n        \"group_list\": [\n          {\n            \"text\": \"dolore repr\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"mollit adipisicing\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 63139980.98655054,\n        \"safe_stock\": -29807729,\n        \"period_threshold\": -57282986,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"cillum ut sed\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"Excepteur sint ullamco aute\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"est id dolore consequat\",\n      \"alias\": \"et elit\"\n    }\n  ],\n  \"trace_id\": \"cillum\",\n  \"page\": {\n    \"type\": \"qui in\",\n    \"size\": 18031916,\n    \"current\": -95561900,\n    \"has_next\": true,\n    \"item_total\": 29613626,\n    \"next_id\": \"sit pariatur do cillum\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "19c51cd9-02b6-46c8-845c-b81d500acc63",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2013-01-21T22:44:26.483Z\",\n  \"status\": -77702802,\n  \"error\": \"aliqua esse consectetur\",\n  \"exception\": \"nulla ut minim\",\n  \"message\": \"laboris dolore exercitation minim\",\n  \"total_time_taken_in_millis\": -71123970,\n  \"http_status\": \"401 UNAUTHORIZED\",\n  \"items\": [\n    {\n      \"company_id\": 31611389,\n      \"integration_data\": {\n        \"voluptate4\": {}\n      },\n      \"company_name\": \"eiusmod nisi eu\",\n      \"task_details\": {\n        \"type\": -4227382,\n        \"group_list\": [\n          {\n            \"text\": \"cupidatat dolore ea anim\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"occaecat ut\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -12407695.068792,\n        \"safe_stock\": 78470785,\n        \"period_threshold\": -97972226,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"et commodo\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"v\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"aliquip labore ex\",\n      \"alias\": \"et sint\"\n    },\n    {\n      \"company_id\": 6335278,\n      \"integration_data\": {\n        \"sed7\": {},\n        \"voluptate__e1\": {}\n      },\n      \"company_name\": \"id velit enim\",\n      \"task_details\": {\n        \"type\": 84962685,\n        \"group_list\": [\n          {\n            \"text\": \"sit dolore ipsum incididunt\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"nulla\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 20862699.568483308,\n        \"safe_stock\": -81048080,\n        \"period_threshold\": 22793249,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"elit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"esse laborum consequat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"dolor ut\",\n      \"alias\": \"nisi Ut\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": -69124778,\n      \"integration_data\": {\n        \"elit_d7\": {}\n      },\n      \"company_name\": \"reprehenderit velit\",\n      \"task_details\": {\n        \"type\": -37575407,\n        \"group_list\": [\n          {\n            \"text\": \"irure voluptate\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"do null\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -5989965.3126677275,\n        \"safe_stock\": 35492627,\n        \"period_threshold\": -49004522,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"elit sed ea Lorem\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"aliq\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"dolor quis eiusmod consectetur\",\n      \"alias\": \"dolore minim occaec\"\n    },\n    {\n      \"company_id\": 91013556,\n      \"integration_data\": {\n        \"ex_f6\": {},\n        \"ex_6f\": {},\n        \"qui_6d6\": {}\n      },\n      \"company_name\": \"dolor enim sunt\",\n      \"task_details\": {\n        \"type\": -242580,\n        \"group_list\": [\n          {\n            \"text\": \"dolore repr\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"mollit adipisicing\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 63139980.98655054,\n        \"safe_stock\": -29807729,\n        \"period_threshold\": -57282986,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"cillum ut sed\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"Excepteur sint ullamco aute\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"est id dolore consequat\",\n      \"alias\": \"et elit\"\n    }\n  ],\n  \"trace_id\": \"cillum\",\n  \"page\": {\n    \"type\": \"qui in\",\n    \"size\": 18031916,\n    \"current\": -95561900,\n    \"has_next\": true,\n    \"item_total\": 29613626,\n    \"next_id\": \"sit pariatur do cillum\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "460d7275-71a3-483f-9efe-be54a12cc6e0",
      "name": "Partner",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "acb1f9e1-de28-4fa3-8937-9e68baf29647",
          "name": "getPanelExtensionDetails | Get extension details",
          "request": {
            "name": "getPanelExtensionDetails | Get extension details",
            "description": {
              "content": "Use this API to get extension details",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "panel",
                "partners",
                "v1.0",
                "extensions",
                ":slug"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "slug",
                  "description": "(Required) pass the slug of the extension"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "e1ed0621-061e-43af-91ce-1628ab2104d0",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "panel",
                    "partners",
                    "v1.0",
                    "extensions",
                    ":slug"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "slug",
                      "description": "(Required) pass the slug of the extension"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"_id\": \"633ab5cb635a41fdde9fb648\",\n  \"organization_id\": \"6333fef3b1d85e44e738c138\",\n  \"extension_id\": \"633425ebb1d85e44e738c2ab\",\n  \"slug\": \"example-extension-1\",\n  \"scope\": [\n    \"company/profile\",\n    \"company/saleschannel\",\n    \"company/product\",\n    \"company/order\",\n    \"company/application/customer\",\n    \"company/application/analytics\",\n    \"company/application/storage\",\n    \"company/application/marketing\",\n    \"company/application/catalogue\",\n    \"company/application/communication\",\n    \"company/application/support\",\n    \"company/application/order\",\n    \"company/application/settings\"\n  ],\n  \"category\": {\n    \"categories_l1\": [],\n    \"categories_l2\": []\n  },\n  \"listing_info\": {\n    \"name\": \"ujjawal-example-extension-1\",\n    \"keywords\": [],\n    \"tagline\": \"test-extension for test how extensions look and work and how to create them\",\n    \"icon\": \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/AMwIEOw0U-logo.png\"\n  },\n  \"details\": {\n    \"benefits\": [\n      {\n        \"title\": \"Works fast\",\n        \"description\": \"works fast\",\n        \"_id\": \"633ab5cb635a41fdde9fb649\"\n      }\n    ],\n    \"screenshots\": {\n      \"desktop\": [\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/g95yHXkou-1024x576.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/IKdHxP2fN-1024x576.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/_auq1yvEp-1024x576.png\"\n      ],\n      \"mobile\": [\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/E_YAHM9cU-600x900.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/vEnXw9cCg-600x900.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/O3Wng4Rqn-600x900.png\"\n      ]\n    },\n    \"description\": \"Sample public extension\",\n    \"demo_url\": \"\",\n    \"video_url\": [\n      {\n        \"type\": \"video\",\n        \"url\": \"https://hdn-1.addsale.com/x0/products/videos/item/free/original/kizLVNWyS-video-sc-1.mp4\"\n      }\n    ],\n    \"integrations\": []\n  },\n  \"plan_type\": \"free\",\n  \"plans\": [\n    {\n      \"name\": \"Custom Free\",\n      \"features\": \"provides ease\",\n      \"type\": \"free\",\n      \"price\": {\n        \"amount\": 0,\n        \"currency\": \"INR\"\n      },\n      \"trial_days\": 0,\n      \"additional_charges\": \"\"\n    }\n  ],\n  \"plans_url\": \"\",\n  \"contact_info\": {\n    \"support\": {\n      \"email\": \"ujjawaltaleja@gofynd.com\",\n      \"phone\": \"7988169279\",\n      \"website_url\": \"\",\n      \"faq_url\": \"\",\n      \"privacy_policy_url\": \"\"\n    }\n  },\n  \"current_status\": \"active\",\n  \"coming_soon\": {\n    \"is_coming_soon\": false,\n    \"upvote_count\": 0\n  },\n  \"created_at\": \"2022-10-03T10:13:31.607Z\",\n  \"modified_at\": \"2022-10-03T10:13:31.607Z\",\n  \"organization\": {\n    \"name\": \"ujjawal-partners-fashion\",\n    \"slug\": \"ujjawa-w7t-68\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "54715892-eb8a-44a5-bc9f-1e73588f1232",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "65290d42-38fd-4722-b565-3ca12388cb51",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "7bdec76e-2c65-4d79-bdd7-6e368478549c",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ad290822-04f7-4a7b-9f0e-1f7c8b39ded1",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "0d55a98a-6598-4b26-9933-a287176fe134",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"event_name\": \"article\",\n    \"event_type\": \"update\",\n    \"event_category\": \"company\",\n    \"version\": \"1\"\n  }\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ad8f69c1-3c03-449e-ab67-3205864f3d84",
          "name": "notifyDepricatedEvent | Notifies all the events that are going to depricate",
          "request": {
            "name": "notifyDepricatedEvent | Notifies all the events that are going to depricate",
            "description": {
              "content": "Notifies all the events that are subscribed and are going to deprecate or new version is available for those events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "depricated-event-notifier"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "858ac0b3-4d7f-4369-a7f0-af3520ce04f2",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "depricated-event-notifier"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "3faa0bed-e31b-4122-8967-051b4c9c4c1a",
          "name": "testHandlerTransformation | Test transformation of handler",
          "request": {
            "name": "testHandlerTransformation | Test transformation of handler",
            "description": {
              "content": "Test transformation of handler",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "transform-event"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event_name\": \"<string>\",\n  \"event_type\": \"<string>\",\n  \"event_category\": \"<string>\",\n  \"event_version\": \"<string>\",\n  \"event\": {\n    \"payload\": {\n      \"dolore_4__\": 43936179,\n      \"ullamcoe\": \"ullamco\",\n      \"sunt8\": -57597792\n    },\n    \"meta\": {\n      \"Ut_1d\": 31135329,\n      \"eac6\": -32857399,\n      \"laborum_473\": \"proident reprehende\"\n    }\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "b76594e3-59c1-4254-acfc-fc81a1de3f5c",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "transform-event"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"event_name\": \"location\",\n  \"event_type\": \"create\",\n  \"event_category\": \"company\",\n  \"event_version\": \"1\",\n  \"event\": {\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450008\",\n        \"modified_on\": \"2023-10-24T01:41:44.450015\"\n      }\n    },\n    \"meta\": {\n      \"event\": {\n        \"type\": \"create\",\n        \"name\": \"location\",\n        \"version\": \"1\"\n      },\n      \"company_id\": 6086,\n      \"service\": {\n        \"name\": \"WheelJack\"\n      },\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"created_timestamp\": 1698111704725\n    }\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_trace_id\": [\n    \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n  ],\n  \"data\": {\n    \"event\": {\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"name\": \"location\",\n      \"type\": \"create\",\n      \"version\": \"1\",\n      \"created_timestamp\": 1698111704725\n    },\n    \"company_id\": 6086,\n    \"contains\": [\n      \"location\"\n    ],\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450008\",\n        \"modified_on\": \"2023-10-24T01:41:44.450015\"\n      }\n    }\n  },\n  \"event_name\": \"location\",\n  \"version\": \"1\",\n  \"status\": false,\n  \"event_type\": \"create\",\n  \"service_meta\": {\n    \"name\": \"WheelJack\"\n  },\n  \"association\": {\n    \"company_id\": 6086\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "01984533-285a-4607-8d8b-fe14b2c2bd0b",
          "name": "validateSchema | Validate Schema for an event",
          "request": {
            "name": "validateSchema | Validate Schema for an event",
            "description": {
              "content": "Validate Schema for an event",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "validate-event-schema"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event_name\": \"<string>\",\n  \"event_type\": \"<string>\",\n  \"event_category\": \"<string>\",\n  \"event_version\": \"<string>\",\n  \"event\": {\n    \"payload\": {\n      \"veniamd\": -75615627.62017302,\n      \"laboris_3\": true\n    },\n    \"meta\": {\n      \"ipsum31\": 44530908.20393947,\n      \"deserunt_eb\": \"nisi non velit\",\n      \"magna_e3a\": \"dolor ullamco amet culpa eiusmod\",\n      \"mollit8\": true\n    }\n  },\n  \"event_schema\": {\n    \"cillum_b\": false,\n    \"Excepteur_4\": false,\n    \"ut_a2\": false\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "d3d7e95d-04e7-4168-b1da-615422c04f8b",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "validate-event-schema"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"event_name\": \"location\",\n  \"event_type\": \"create\",\n  \"event_category\": \"company\",\n  \"event_version\": \"1\",\n  \"event\": {\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450008\",\n        \"modified_on\": \"2023-10-24T01:41:44.450015\"\n      }\n    },\n    \"meta\": {\n      \"event\": {\n        \"type\": \"create\",\n        \"name\": \"location\",\n        \"version\": \"1\"\n      },\n      \"company_id\": 6086,\n      \"service\": {\n        \"name\": \"WheelJack\"\n      },\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"created_timestamp\": 1698111704725\n    }\n  },\n  \"event_schema\": {}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": true,\n  \"message\": \"Valid schema for this event\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fynd.com"
    }
  ],
  "info": {
    "_postman_id": "f2e54697-69d9-4e99-bc4a-6581baa8fbbe",
    "name": "Fynd Platform's Public Side APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public Side APIs",
      "type": "text/plain"
    }
  }
}
