{
  "item": [
    {
      "id": "b13b9401-0bf8-4773-bffc-90c83a505296",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "e9f94971-b70f-41a7-ad9f-f450df335da4",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "7d622761-2513-4dd1-add4-5ead30503e25",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "pariatur aliqua do proident enim",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a19eca4b-d2c4-4b5e-add1-fa340cebb21f",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "pariatur aliqua do proident enim",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "3239fca9-b40a-483d-8253-dc2a012bc881",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "pariatur aliqua do proident enim",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "9ac12125-5c2d-4125-b793-c9f160535fb9",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "8c9d314a-6a95-4836-82e7-b10a23003bea",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "60e239de-f464-4c74-91d9-b69738162d66",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "b3a1bb55-912f-4324-b38a-445a8bd50105",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "356f4949-ef2c-4996-9bd3-742e388f1882",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 47307806,\n   \"event_name\": \"nulla minim\",\n   \"event_type\": \"mollit cupidatat laboris\",\n   \"event_category\": \"ea\",\n   \"version\": \"irure\",\n   \"display_name\": \"reprehenderit dol\",\n   \"description\": \"sunt fugiat sint\",\n   \"created_on\": \"anim\"\n  },\n  {\n   \"id\": 26808932,\n   \"event_name\": \"ipsum magna\",\n   \"event_type\": \"Excepteur\",\n   \"event_category\": \"est\",\n   \"version\": \"dolore ad\",\n   \"display_name\": \"sit exercitati\",\n   \"description\": \"incididunt eiusmod pariatur sit\",\n   \"created_on\": \"in fugiat\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "9ac18cbe-fada-4468-be3d-f8c5f3773665",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "947e486e-82ea-4e13-be29-c69719689423",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -81721059,\n   \"event_name\": \"exercitation laboris cillum\",\n   \"event_type\": \"fugiat in aute id ut\",\n   \"event_category\": \"sit elit\",\n   \"version\": \"proident\",\n   \"display_name\": \"dolore in labore non et\",\n   \"description\": \"id ut veniam\",\n   \"created_on\": \"dolore magna\"\n  },\n  {\n   \"id\": 8134695,\n   \"event_name\": \"laboris d\",\n   \"event_type\": \"occaecat veli\",\n   \"event_category\": \"ut qui voluptate\",\n   \"version\": \"laboris aliquip in\",\n   \"display_name\": \"tempor\",\n   \"description\": \"do mollit sint\",\n   \"created_on\": \"anim officia\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "b9423937-23d8-4b35-b3e3-bb44a09448d4",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "3f414579-d820-438e-a30f-9da69e11a701",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "080f4809-eb25-423d-9004-3711e23b6861",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1968-03-26T00:06:40.330Z\",\n \"status\": -76282876,\n \"error\": \"irure officia dolore\",\n \"exception\": \"sint aute amet\",\n \"message\": \"ex ea fugiat\",\n \"total_time_taken_in_millis\": -80903657,\n \"http_status\": \"101 SWITCHING_PROTOCOLS\",\n \"items\": {\n  \"company_id\": -12242735,\n  \"integration_data\": {},\n  \"company_name\": \"irure in\",\n  \"task_details\": {\n   \"type\": 88224754,\n   \"group_list\": [\n    {\n     \"text\": \"esse ullamco mollit labore\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"velit\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 45257397.29627314,\n   \"safe_stock\": -88975073,\n   \"period_threshold\": -47018242,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"cupidatat ex in\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"deserunt culpa veniam aliqua\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"laborum ea\",\n  \"alias\": \"in\"\n },\n \"payload\": {\n  \"company_id\": -7661358,\n  \"integration_data\": {},\n  \"company_name\": \"magna nisi ea laboris reprehenderit\",\n  \"task_details\": {\n   \"type\": 91298207,\n   \"group_list\": [\n    {\n     \"text\": \"irure ipsum\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"minim in labore d\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -5761692.555476114,\n   \"safe_stock\": 60365692,\n   \"period_threshold\": -27955061,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"aliquip\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"qui dolor consequat an\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"magna elit\",\n  \"alias\": \"officia culpa velit\"\n },\n \"trace_id\": \"fugiat dolor\",\n \"page\": {\n  \"type\": \"amet proident ad enim\",\n  \"size\": 95321225,\n  \"current\": -52059260,\n  \"has_next\": false,\n  \"item_total\": -50468371,\n  \"next_id\": \"anim pariatur tempor aliquip\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e70387a6-5566-41d3-84df-2fa3e1668cf3",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1968-03-26T00:06:40.330Z\",\n \"status\": -76282876,\n \"error\": \"irure officia dolore\",\n \"exception\": \"sint aute amet\",\n \"message\": \"ex ea fugiat\",\n \"total_time_taken_in_millis\": -80903657,\n \"http_status\": \"101 SWITCHING_PROTOCOLS\",\n \"items\": {\n  \"company_id\": -12242735,\n  \"integration_data\": {},\n  \"company_name\": \"irure in\",\n  \"task_details\": {\n   \"type\": 88224754,\n   \"group_list\": [\n    {\n     \"text\": \"esse ullamco mollit labore\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"velit\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 45257397.29627314,\n   \"safe_stock\": -88975073,\n   \"period_threshold\": -47018242,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"cupidatat ex in\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"deserunt culpa veniam aliqua\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"laborum ea\",\n  \"alias\": \"in\"\n },\n \"payload\": {\n  \"company_id\": -7661358,\n  \"integration_data\": {},\n  \"company_name\": \"magna nisi ea laboris reprehenderit\",\n  \"task_details\": {\n   \"type\": 91298207,\n   \"group_list\": [\n    {\n     \"text\": \"irure ipsum\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"minim in labore d\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -5761692.555476114,\n   \"safe_stock\": 60365692,\n   \"period_threshold\": -27955061,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"aliquip\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"qui dolor consequat an\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"magna elit\",\n  \"alias\": \"officia culpa velit\"\n },\n \"trace_id\": \"fugiat dolor\",\n \"page\": {\n  \"type\": \"amet proident ad enim\",\n  \"size\": 95321225,\n  \"current\": -52059260,\n  \"has_next\": false,\n  \"item_total\": -50468371,\n  \"next_id\": \"anim pariatur tempor aliquip\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "fe21184e-e499-49e5-a3c6-9113db78c3a3",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1968-03-26T00:06:40.330Z\",\n \"status\": -76282876,\n \"error\": \"irure officia dolore\",\n \"exception\": \"sint aute amet\",\n \"message\": \"ex ea fugiat\",\n \"total_time_taken_in_millis\": -80903657,\n \"http_status\": \"101 SWITCHING_PROTOCOLS\",\n \"items\": {\n  \"company_id\": -12242735,\n  \"integration_data\": {},\n  \"company_name\": \"irure in\",\n  \"task_details\": {\n   \"type\": 88224754,\n   \"group_list\": [\n    {\n     \"text\": \"esse ullamco mollit labore\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"velit\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 45257397.29627314,\n   \"safe_stock\": -88975073,\n   \"period_threshold\": -47018242,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"cupidatat ex in\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"deserunt culpa veniam aliqua\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"laborum ea\",\n  \"alias\": \"in\"\n },\n \"payload\": {\n  \"company_id\": -7661358,\n  \"integration_data\": {},\n  \"company_name\": \"magna nisi ea laboris reprehenderit\",\n  \"task_details\": {\n   \"type\": 91298207,\n   \"group_list\": [\n    {\n     \"text\": \"irure ipsum\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"minim in labore d\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -5761692.555476114,\n   \"safe_stock\": 60365692,\n   \"period_threshold\": -27955061,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"aliquip\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"qui dolor consequat an\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"magna elit\",\n  \"alias\": \"officia culpa velit\"\n },\n \"trace_id\": \"fugiat dolor\",\n \"page\": {\n  \"type\": \"amet proident ad enim\",\n  \"size\": 95321225,\n  \"current\": -52059260,\n  \"has_next\": false,\n  \"item_total\": -50468371,\n  \"next_id\": \"anim pariatur tempor aliquip\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "5fe228a5-96b7-430e-9b3c-5006b310772b",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "0f2f61ef-52fc-48d3-b790-ca24dcdcbbaf",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1943-09-01T04:23:23.553Z\",\n \"status\": -75385523,\n \"error\": \"exercitation deserunt e\",\n \"exception\": \"proident ex\",\n \"message\": \"consectetur eu aute esse\",\n \"total_time_taken_in_millis\": 26790244,\n \"http_status\": \"411 LENGTH_REQUIRED\",\n \"items\": [\n  {\n   \"company_id\": -89514122,\n   \"integration_data\": {},\n   \"company_name\": \"ad\",\n   \"task_details\": {\n    \"type\": 65431787,\n    \"group_list\": [\n     {\n      \"text\": \"laboris enim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"irure Lorem\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -6644577.440989122,\n    \"safe_stock\": 3641081,\n    \"period_threshold\": -45984099,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"exercitation\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Lorem incididunt ea cupidatat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Duis magna sint\",\n   \"alias\": \"ea ut pariatur\"\n  },\n  {\n   \"company_id\": 6104833,\n   \"integration_data\": {},\n   \"company_name\": \"dol\",\n   \"task_details\": {\n    \"type\": -36190096,\n    \"group_list\": [\n     {\n      \"text\": \"minim est\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laborum irure non\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 43520122.736164,\n    \"safe_stock\": -51762939,\n    \"period_threshold\": -55762857,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"officia eu\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sit commodo quis et\",\n   \"alias\": \"cupidatat \"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -55485424,\n   \"integration_data\": {},\n   \"company_name\": \"Duis Ut anim\",\n   \"task_details\": {\n    \"type\": -93465961,\n    \"group_list\": [\n     {\n      \"text\": \"dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cillum ut voluptate dolore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 67952902.3258146,\n    \"safe_stock\": 20175433,\n    \"period_threshold\": 2087029,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ut dolor amet\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ipsum deserunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sed\",\n   \"alias\": \"enim Duis labore\"\n  },\n  {\n   \"company_id\": 38944819,\n   \"integration_data\": {},\n   \"company_name\": \"ullamco eiusmod aliq\",\n   \"task_details\": {\n    \"type\": -1630080,\n    \"group_list\": [\n     {\n      \"text\": \"deserunt do\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"tempor eiusmod dolore dolor adipisicing\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -16306605.552428752,\n    \"safe_stock\": 94609057,\n    \"period_threshold\": 30226304,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sit tempor dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Excepteur in qui sint commodo\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Duis minim\",\n   \"alias\": \"reprehenderit aute\"\n  }\n ],\n \"trace_id\": \"enim aute dolore ipsum\",\n \"page\": {\n  \"type\": \"Ut laboris\",\n  \"size\": 6548317,\n  \"current\": -73605237,\n  \"has_next\": false,\n  \"item_total\": -12031072,\n  \"next_id\": \"quis occaecat voluptate amet\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5b89cd42-4ec4-437f-9939-17e8efe07cad",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1982-03-02T23:17:10.013Z\",\n \"status\": 18015009,\n \"error\": \"ullamco Ut anim occaecat\",\n \"exception\": \"ullamco\",\n \"message\": \"dolore ipsum deserunt amet\",\n \"total_time_taken_in_millis\": 8062448,\n \"http_status\": \"300 MULTIPLE_CHOICES\",\n \"items\": [\n  {\n   \"company_id\": 41275355,\n   \"integration_data\": {},\n   \"company_name\": \"non i\",\n   \"task_details\": {\n    \"type\": 45697028,\n    \"group_list\": [\n     {\n      \"text\": \"aliqua ut qui\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nulla dolor sunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 23430554.640216798,\n    \"safe_stock\": 55313046,\n    \"period_threshold\": -90640741,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"in dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"minim esse proident non\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"officia eiusmod cupidatat sunt\",\n   \"alias\": \"quis ut commodo dolore labore\"\n  },\n  {\n   \"company_id\": -13096328,\n   \"integration_data\": {},\n   \"company_name\": \"amet non esse in\",\n   \"task_details\": {\n    \"type\": -87917917,\n    \"group_list\": [\n     {\n      \"text\": \"cup\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laborum tempor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 78034981.08974916,\n    \"safe_stock\": -81626442,\n    \"period_threshold\": -34029381,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ad esse\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"non id\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Ut ut sed\",\n   \"alias\": \"fugiat adipisic\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 15081863,\n   \"integration_data\": {},\n   \"company_name\": \"mollit enim cul\",\n   \"task_details\": {\n    \"type\": -91860162,\n    \"group_list\": [\n     {\n      \"text\": \"sit ullamco Duis aliqua\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"amet in reprehenderit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -79151224.31629214,\n    \"safe_stock\": -34603138,\n    \"period_threshold\": 86977294,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"occaecat eiusmod\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"irure nostrud reprehenderit est\",\n   \"alias\": \"nisi laborum cupidatat\"\n  },\n  {\n   \"company_id\": 50823193,\n   \"integration_data\": {},\n   \"company_name\": \"minim velit labore ex\",\n   \"task_details\": {\n    \"type\": -80374868,\n    \"group_list\": [\n     {\n      \"text\": \"et in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nulla Ut in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -63805268.050297804,\n    \"safe_stock\": 74381463,\n    \"period_threshold\": -21493050,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ut laborum nulla\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"nostrud sed id lab\",\n   \"alias\": \"veniam magna dolore\"\n  }\n ],\n \"trace_id\": \"esse in sunt pariatur\",\n \"page\": {\n  \"type\": \"sit amet \",\n  \"size\": -85922473,\n  \"current\": 28338707,\n  \"has_next\": false,\n  \"item_total\": -80153959,\n  \"next_id\": \"conse\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "835e776d-f175-4239-819c-c65df5a591c4",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1982-03-02T23:17:10.013Z\",\n \"status\": 18015009,\n \"error\": \"ullamco Ut anim occaecat\",\n \"exception\": \"ullamco\",\n \"message\": \"dolore ipsum deserunt amet\",\n \"total_time_taken_in_millis\": 8062448,\n \"http_status\": \"300 MULTIPLE_CHOICES\",\n \"items\": [\n  {\n   \"company_id\": 41275355,\n   \"integration_data\": {},\n   \"company_name\": \"non i\",\n   \"task_details\": {\n    \"type\": 45697028,\n    \"group_list\": [\n     {\n      \"text\": \"aliqua ut qui\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nulla dolor sunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 23430554.640216798,\n    \"safe_stock\": 55313046,\n    \"period_threshold\": -90640741,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"in dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"minim esse proident non\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"officia eiusmod cupidatat sunt\",\n   \"alias\": \"quis ut commodo dolore labore\"\n  },\n  {\n   \"company_id\": -13096328,\n   \"integration_data\": {},\n   \"company_name\": \"amet non esse in\",\n   \"task_details\": {\n    \"type\": -87917917,\n    \"group_list\": [\n     {\n      \"text\": \"cup\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laborum tempor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 78034981.08974916,\n    \"safe_stock\": -81626442,\n    \"period_threshold\": -34029381,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ad esse\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"non id\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Ut ut sed\",\n   \"alias\": \"fugiat adipisic\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 15081863,\n   \"integration_data\": {},\n   \"company_name\": \"mollit enim cul\",\n   \"task_details\": {\n    \"type\": -91860162,\n    \"group_list\": [\n     {\n      \"text\": \"sit ullamco Duis aliqua\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"amet in reprehenderit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -79151224.31629214,\n    \"safe_stock\": -34603138,\n    \"period_threshold\": 86977294,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"occaecat eiusmod\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"irure nostrud reprehenderit est\",\n   \"alias\": \"nisi laborum cupidatat\"\n  },\n  {\n   \"company_id\": 50823193,\n   \"integration_data\": {},\n   \"company_name\": \"minim velit labore ex\",\n   \"task_details\": {\n    \"type\": -80374868,\n    \"group_list\": [\n     {\n      \"text\": \"et in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nulla Ut in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -63805268.050297804,\n    \"safe_stock\": 74381463,\n    \"period_threshold\": -21493050,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ut laborum nulla\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"nostrud sed id lab\",\n   \"alias\": \"veniam magna dolore\"\n  }\n ],\n \"trace_id\": \"esse in sunt pariatur\",\n \"page\": {\n  \"type\": \"sit amet \",\n  \"size\": -85922473,\n  \"current\": 28338707,\n  \"has_next\": false,\n  \"item_total\": -80153959,\n  \"next_id\": \"conse\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "1b564ecf-e5c1-4a71-a432-99f6f4b2de0b",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "1db9df96-134b-4aae-8a18-67c95138d2ae",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2006-08-01T01:14:34.598Z\",\n \"status\": -41650512,\n \"error\": \"dolore minim\",\n \"exception\": \"anim veniam ea ut\",\n \"message\": \"ut in\",\n \"total_time_taken_in_millis\": 15698970,\n \"http_status\": \"308 PERMANENT_REDIRECT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"sunt in aliqua\",\n \"page\": {\n  \"type\": \"mollit Duis dolor\",\n  \"size\": -71485603,\n  \"current\": 45233480,\n  \"has_next\": true,\n  \"item_total\": -31519924,\n  \"next_id\": \"dolor consectetur\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5f7af555-7c85-4b73-9e19-0cf86222d88c",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2006-08-01T01:14:34.598Z\",\n \"status\": -41650512,\n \"error\": \"dolore minim\",\n \"exception\": \"anim veniam ea ut\",\n \"message\": \"ut in\",\n \"total_time_taken_in_millis\": 15698970,\n \"http_status\": \"308 PERMANENT_REDIRECT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"sunt in aliqua\",\n \"page\": {\n  \"type\": \"mollit Duis dolor\",\n  \"size\": -71485603,\n  \"current\": 45233480,\n  \"has_next\": true,\n  \"item_total\": -31519924,\n  \"next_id\": \"dolor consectetur\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a7a6ff17-8f1d-4c43-b98d-4e844d9cc63b",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2006-08-01T01:14:34.598Z\",\n \"status\": -41650512,\n \"error\": \"dolore minim\",\n \"exception\": \"anim veniam ea ut\",\n \"message\": \"ut in\",\n \"total_time_taken_in_millis\": 15698970,\n \"http_status\": \"308 PERMANENT_REDIRECT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"sunt in aliqua\",\n \"page\": {\n  \"type\": \"mollit Duis dolor\",\n  \"size\": -71485603,\n  \"current\": 45233480,\n  \"has_next\": true,\n  \"item_total\": -31519924,\n  \"next_id\": \"dolor consectetur\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "b3e997ba-a6d6-424e-97f1-a9cc6be5be74",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "23a4965a-fd86-4dfa-965f-2ff977a3f25f",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2007-03-02T02:32:40.344Z\",\n \"status\": -34743482,\n \"error\": \"nulla est ad\",\n \"exception\": \"commodo adipisic\",\n \"message\": \"laborum Lorem\",\n \"total_time_taken_in_millis\": -27703531,\n \"http_status\": \"406 NOT_ACCEPTABLE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"et labore veniam non ad\",\n \"page\": {\n  \"type\": \"irure mollit laboris\",\n  \"size\": 88740378,\n  \"current\": -32453910,\n  \"has_next\": true,\n  \"item_total\": -13805621,\n  \"next_id\": \"tempor\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "995489ff-8987-4a46-a4ba-fe47e4a8f1be",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2007-03-02T02:32:40.344Z\",\n \"status\": -34743482,\n \"error\": \"nulla est ad\",\n \"exception\": \"commodo adipisic\",\n \"message\": \"laborum Lorem\",\n \"total_time_taken_in_millis\": -27703531,\n \"http_status\": \"406 NOT_ACCEPTABLE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"et labore veniam non ad\",\n \"page\": {\n  \"type\": \"irure mollit laboris\",\n  \"size\": 88740378,\n  \"current\": -32453910,\n  \"has_next\": true,\n  \"item_total\": -13805621,\n  \"next_id\": \"tempor\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "503e31ae-24e1-4da9-9777-dc0405647186",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2007-03-02T02:32:40.344Z\",\n \"status\": -34743482,\n \"error\": \"nulla est ad\",\n \"exception\": \"commodo adipisic\",\n \"message\": \"laborum Lorem\",\n \"total_time_taken_in_millis\": -27703531,\n \"http_status\": \"406 NOT_ACCEPTABLE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"et labore veniam non ad\",\n \"page\": {\n  \"type\": \"irure mollit laboris\",\n  \"size\": 88740378,\n  \"current\": -32453910,\n  \"has_next\": true,\n  \"item_total\": -13805621,\n  \"next_id\": \"tempor\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "23ac2430-d553-4429-aa8c-c6d458cb67db",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2007-03-02T02:32:40.344Z\",\n \"status\": -34743482,\n \"error\": \"nulla est ad\",\n \"exception\": \"commodo adipisic\",\n \"message\": \"laborum Lorem\",\n \"total_time_taken_in_millis\": -27703531,\n \"http_status\": \"406 NOT_ACCEPTABLE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"et labore veniam non ad\",\n \"page\": {\n  \"type\": \"irure mollit laboris\",\n  \"size\": 88740378,\n  \"current\": -32453910,\n  \"has_next\": true,\n  \"item_total\": -13805621,\n  \"next_id\": \"tempor\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2274da1d-66ce-4d21-baaa-c024a3f09198",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2007-03-02T02:32:40.344Z\",\n \"status\": -34743482,\n \"error\": \"nulla est ad\",\n \"exception\": \"commodo adipisic\",\n \"message\": \"laborum Lorem\",\n \"total_time_taken_in_millis\": -27703531,\n \"http_status\": \"406 NOT_ACCEPTABLE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"et labore veniam non ad\",\n \"page\": {\n  \"type\": \"irure mollit laboris\",\n  \"size\": 88740378,\n  \"current\": -32453910,\n  \"has_next\": true,\n  \"item_total\": -13805621,\n  \"next_id\": \"tempor\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fynd.com"
    }
  ],
  "info": {
    "_postman_id": "57561ee1-3144-411c-b73f-c50ad11c579c",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
