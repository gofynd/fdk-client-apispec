{
  "collection": {
    "item": [
      {
        "id": "fb1fdc71-6970-42ba-82ac-b2520748c2f0",
        "name": "Configuration",
        "description": {
          "content": "",
          "type": "text/plain"
        },
        "item": [
          {
            "id": "116d44fe-6d40-4b6b-826c-fc18ba834897",
            "name": "searchApplication | Search application",
            "request": {
              "name": "searchApplication | Search application",
              "description": {
                "content": "Provide application name or domain url.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "service",
                  "common",
                  "configuration",
                  "v1.0",
                  "application",
                  "search-application"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [
                  {
                    "disabled": false,
                    "key": "query",
                    "value": "<string>",
                    "description": "Provide application name"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                }
              ],
              "method": "GET",
              "auth": null
            },
            "response": [
              {
                "id": "c2044764-26f9-4fbc-94a4-b6837dba37ea",
                "name": "Success",
                "originalRequest": {
                  "url": {
                    "path": [
                      "service",
                      "common",
                      "configuration",
                      "v1.0",
                      "application",
                      "search-application"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [
                      {
                        "key": "query",
                        "value": "<string>"
                      }
                    ],
                    "variable": []
                  },
                  "header": [
                    {
                      "disabled": false,
                      "key": "authorization",
                      "value": "elit id aliqua",
                      "description": ""
                    },
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": "{\n  \"application\": {\n    \"website\": {\n      \"enabled\": true,\n      \"basepath\": \"/\"\n    },\n    \"cors\": {\n      \"domains\": []\n    },\n    \"auth\": {\n      \"enabled\": true\n    },\n    \"description\": \"test\",\n    \"channel_type\": \"store\",\n    \"cache_ttl\": -1,\n    \"internal\": false,\n    \"is_active\": true,\n    \"mode\": \"live\",\n    \"_id\": \"620b931ee7bfb11f910bf4a3\",\n    \"company_id\": 2,\n    \"name\": \"test\",\n    \"owner\": \"5b9b98150df588546aaea6d2\",\n    \"logo\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"favicon\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"banner\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n    },\n    \"token\": \"tPQv0nc23\",\n    \"tokens\": [\n      {\n        \"token\": \"tPQv0nc23\",\n        \"created_at\": \"2022-02-15T11:48:46.909Z\"\n      }\n    ],\n    \"domains\": [\n      {\n        \"verified\": true,\n        \"is_primary\": true,\n        \"is_shortlink\": true,\n        \"_id\": \"620b931ee7bfb11f910bf4a4\",\n        \"name\": \"qckvv5lhp.hostfynd.dev\"\n      }\n    ],\n    \"redirections\": [],\n    \"meta\": [],\n    \"created_at\": \"2022-02-15T11:48:46.909Z\",\n    \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n    \"__v\": 0,\n    \"domain\": {\n      \"verified\": true,\n      \"is_primary\": true,\n      \"is_shortlink\": true,\n      \"_id\": \"620b931ee7bfb11f910bf4a4\",\n      \"name\": \"qckvv5lhp.hostfynd.dev\"\n    },\n    \"id\": \"620b931ee7bfb11f910bf4a3\"\n  }\n}",
                "cookie": [],
                "_postman_previewlanguage": "json"
              },
              {
                "id": "dcb5e8a7-3026-4d11-a5c5-212548cdb7bb",
                "name": "Bad Request",
                "originalRequest": {
                  "url": {
                    "path": [
                      "service",
                      "common",
                      "configuration",
                      "v1.0",
                      "application",
                      "search-application"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [
                      {
                        "key": "query",
                        "value": "<string>"
                      }
                    ],
                    "variable": []
                  },
                  "header": [
                    {
                      "disabled": false,
                      "key": "authorization",
                      "value": "elit id aliqua",
                      "description": ""
                    },
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "status": "Bad Request",
                "code": 400,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": "{\n  \"value\": {\n    \"message\": \"Invalid application domain or id.\"\n  }\n}",
                "cookie": [],
                "_postman_previewlanguage": "json"
              },
              {
                "id": "f71a1856-6985-48af-8ecf-f23284b209d0",
                "name": "Not found",
                "originalRequest": {
                  "url": {
                    "path": [
                      "service",
                      "common",
                      "configuration",
                      "v1.0",
                      "application",
                      "search-application"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [
                      {
                        "key": "query",
                        "value": "<string>"
                      }
                    ],
                    "variable": []
                  },
                  "header": [
                    {
                      "disabled": false,
                      "key": "authorization",
                      "value": "elit id aliqua",
                      "description": ""
                    },
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "status": "Not Found",
                "code": 404,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": "{\n  \"value\": {\n    \"message\": \"No application found\"\n  }\n}",
                "cookie": [],
                "_postman_previewlanguage": "json"
              }
            ],
            "event": [],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "id": "0ed9b110-7f16-4c0b-b9c7-fd3b95bbbc11",
            "name": "getLocations | Get countries, states, cities",
            "request": {
              "name": "getLocations | Get countries, states, cities",
              "description": {
                "content": "Get Location configuration",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "service",
                  "common",
                  "configuration",
                  "v1.0",
                  "location"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [
                  {
                    "disabled": false,
                    "key": "location_type",
                    "value": "<string>",
                    "description": "Provide location type to query on. Possible values : country, state, city"
                  },
                  {
                    "disabled": false,
                    "key": "id",
                    "value": "<string>",
                    "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                }
              ],
              "method": "GET",
              "auth": null
            },
            "response": [
              {
                "id": "04b21e33-9315-435f-8b04-63a5aaec3c7e",
                "name": "Success",
                "originalRequest": {
                  "url": {
                    "path": [
                      "service",
                      "common",
                      "configuration",
                      "v1.0",
                      "location"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [
                      {
                        "key": "location_type",
                        "value": "<string>"
                      },
                      {
                        "key": "id",
                        "value": "<string>"
                      }
                    ],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": "{\n  \"items\": [\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"veniam sunt labore nostrud ipsum\",\n      \"phone_code\": \"990999092\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"velit exercitation sit\",\n      \"country_code\": \"anim ut elit\",\n      \"latitude\": \"dolor labore\",\n      \"longitude\": \"labore mollit nulla dolor\"\n    },\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"ad consequat\",\n      \"phone_code\": \"990999092\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"in aute do Excepteur\",\n      \"country_code\": \"nulla dolor ex\",\n      \"latitude\": \"fugiat aliquip\",\n      \"longitude\": \"aliqua sit non aliquip\"\n    }\n  ]\n}",
                "cookie": [],
                "_postman_previewlanguage": "json"
              }
            ],
            "event": [],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          }
        ],
        "event": []
      },
      {
        "id": "4e65329d-94cb-4367-9ae0-17940a5dd96a",
        "name": "Content",
        "description": {
          "content": "",
          "type": "text/plain"
        },
        "item": [
          {
            "id": "74fabe15-67da-40c5-b917-0b9230177179",
            "name": "getCredentialsByEntity | Get credentials to power chat support systems",
            "request": {
              "name": "getCredentialsByEntity | Get credentials to power chat support systems",
              "description": {
                "content": "Get credentials for support system",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "service",
                  "public",
                  "content",
                  "credentials",
                  ":entity"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": [
                  {
                    "disabled": false,
                    "type": "any",
                    "value": "<string>",
                    "key": "entity",
                    "description": "(Required) Server Type"
                  }
                ]
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                }
              ],
              "method": "GET",
              "auth": null
            },
            "response": [
              {
                "id": "24700212-651e-4840-a8ab-be621cdc30ba",
                "name": "Success. Refer `CredentialsSchema` for more details.",
                "originalRequest": {
                  "url": {
                    "path": [
                      "service",
                      "public",
                      "content",
                      "credentials",
                      ":entity"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": [
                      {
                        "disabled": false,
                        "type": "any",
                        "value": "<string>",
                        "key": "entity",
                        "description": "(Required) Server Type"
                      }
                    ]
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": "{\n  \"entity_type\": \"partner\",\n  \"type\": \"freshchat\",\n  \"is_enable\": true,\n  \"configuration\": {\n    \"token\": \"a3e4gf20b-d11g-4512-n3zq-03b9aa7e1yxz\",\n    \"siteId\": \"a3e8f20b-d97f-452f-bd72-03b9aa7e1bf0\",\n    \"host\": \"https://wchat.freshchat.com\"\n  }\n}",
                "cookie": [],
                "_postman_previewlanguage": "json"
              },
              {
                "id": "155943e1-6dce-45aa-8726-d70a91798c21",
                "name": "Bad Request. See the error object in the response body to know the exact reason.",
                "originalRequest": {
                  "url": {
                    "path": [
                      "service",
                      "public",
                      "content",
                      "credentials",
                      ":entity"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": [
                      {
                        "disabled": false,
                        "type": "any",
                        "value": "<string>",
                        "key": "entity",
                        "description": "(Required) Server Type"
                      }
                    ]
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "status": "Bad Request",
                "code": 400,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": "{\n  \"message\": \"Oops! Something went wrong. Please try later\",\n  \"status\": 400,\n  \"code\": \"CX-1003\",\n  \"exception\": \"\",\n  \"info\": \"\",\n  \"request_id\": \"\",\n  \"stack_trace\": \"\",\n  \"meta\": {}\n}",
                "cookie": [],
                "_postman_previewlanguage": "json"
              }
            ],
            "event": [],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          }
        ],
        "event": []
      },
      {
        "id": "bd950b89-3d3d-4304-a303-98eeb703605e",
        "name": "Partner",
        "description": {
          "content": "",
          "type": "text/plain"
        },
        "item": [
          {
            "id": "93babc7c-2786-494a-a60c-d04f6ad3e182",
            "name": "getPanelExtensionDetails | Get panel extension details",
            "request": {
              "name": "getPanelExtensionDetails | Get panel extension details",
              "description": {
                "content": "Retrieve detailed information about panel extensions in the public server setup.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "service",
                  "panel",
                  "partners",
                  "v1.0",
                  "extensions",
                  ":slug"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": [
                  {
                    "disabled": false,
                    "type": "any",
                    "value": "<string>",
                    "key": "slug",
                    "description": "(Required) pass the slug of the extension"
                  }
                ]
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                }
              ],
              "method": "GET",
              "auth": null
            },
            "response": [
              {
                "id": "f9731856-45af-46e0-ba54-60ece358ab43",
                "name": "Success",
                "originalRequest": {
                  "url": {
                    "path": [
                      "service",
                      "panel",
                      "partners",
                      "v1.0",
                      "extensions",
                      ":slug"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": [
                      {
                        "disabled": false,
                        "type": "any",
                        "value": "<string>",
                        "key": "slug",
                        "description": "(Required) pass the slug of the extension"
                      }
                    ]
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": "{\n  \"_id\": \"633ab5cb635a41fdde9fb648\",\n  \"organization_id\": \"6333fef3b1d85e44e738c138\",\n  \"extension_id\": \"633425ebb1d85e44e738c2ab\",\n  \"slug\": \"example-extension-1\",\n  \"scope\": [\n    \"company/profile\",\n    \"company/saleschannel\",\n    \"company/product\",\n    \"company/order\",\n    \"company/application/customer\",\n    \"company/application/analytics\",\n    \"company/application/storage\",\n    \"company/application/marketing\",\n    \"company/application/catalogue\",\n    \"company/application/communication\",\n    \"company/application/support\",\n    \"company/application/order\",\n    \"company/application/settings\"\n  ],\n  \"category\": {\n    \"categories_l1\": [],\n    \"categories_l2\": []\n  },\n  \"listing_info\": {\n    \"name\": \"ujjawal-example-extension-1\",\n    \"keywords\": [],\n    \"tagline\": \"test-extension for test how extensions look and work and how to create them\",\n    \"icon\": \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/AMwIEOw0U-logo.png\"\n  },\n  \"details\": {\n    \"benefits\": [\n      {\n        \"title\": \"Works fast\",\n        \"description\": \"works fast\",\n        \"_id\": \"633ab5cb635a41fdde9fb649\"\n      }\n    ],\n    \"screenshots\": {\n      \"desktop\": [\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/g95yHXkou-1024x576.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/IKdHxP2fN-1024x576.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/_auq1yvEp-1024x576.png\"\n      ],\n      \"mobile\": [\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/E_YAHM9cU-600x900.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/vEnXw9cCg-600x900.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/O3Wng4Rqn-600x900.png\"\n      ]\n    },\n    \"description\": \"Sample public extension\",\n    \"demo_url\": \"\",\n    \"video_url\": [\n      {\n        \"type\": \"video\",\n        \"url\": \"https://hdn-1.addsale.com/x0/products/videos/item/free/original/kizLVNWyS-video-sc-1.mp4\"\n      }\n    ],\n    \"integrations\": []\n  },\n  \"plan_type\": \"free\",\n  \"plans\": [\n    {\n      \"name\": \"Custom Free\",\n      \"features\": \"provides ease\",\n      \"type\": \"free\",\n      \"price\": {\n        \"amount\": 0,\n        \"currency\": \"INR\"\n      },\n      \"trial_days\": 0,\n      \"additional_charges\": \"\"\n    }\n  ],\n  \"plans_url\": \"\",\n  \"contact_info\": {\n    \"support\": {\n      \"email\": \"ujjawaltaleja@gofynd.com\",\n      \"phone\": \"7988169279\",\n      \"website_url\": \"\",\n      \"faq_url\": \"\",\n      \"privacy_policy_url\": \"\"\n    }\n  },\n  \"current_status\": \"active\",\n  \"coming_soon\": {\n    \"is_coming_soon\": false,\n    \"upvote_count\": 0\n  },\n  \"created_at\": \"2022-10-03T10:13:31.607Z\",\n  \"modified_at\": \"2022-10-03T10:13:31.607Z\",\n  \"organization\": {\n    \"name\": \"ujjawal-partners-fashion\",\n    \"slug\": \"ujjawa-w7t-68\"\n  }\n}",
                "cookie": [],
                "_postman_previewlanguage": "json"
              }
            ],
            "event": [],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          }
        ],
        "event": []
      },
      {
        "id": "05ead2a4-a8e6-4265-a3a6-766029bdb2f1",
        "name": "Webhook",
        "description": {
          "content": "",
          "type": "text/plain"
        },
        "item": [
          {
            "id": "795f40be-2c40-47af-97a4-ffd95b349f13",
            "name": "fetchAllWebhookEvents | Fetch all webhook events.",
            "request": {
              "name": "fetchAllWebhookEvents | Fetch all webhook events.",
              "description": {
                "content": "Retrieve a list of all webhook events in the public server setup.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "service",
                  "common",
                  "webhook",
                  "v1.0",
                  "events"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                }
              ],
              "method": "GET",
              "auth": null
            },
            "response": [
              {
                "id": "93eb0fc2-c29b-45c4-a501-b7cf20b60651",
                "name": "Success",
                "originalRequest": {
                  "url": {
                    "path": [
                      "service",
                      "common",
                      "webhook",
                      "v1.0",
                      "events"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
                "cookie": [],
                "_postman_previewlanguage": "json"
              }
            ],
            "event": [],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "id": "49246a60-c6d5-402d-9105-1c220e653963",
            "name": "queryWebhookEventDetails | Query webhook event details.",
            "request": {
              "name": "queryWebhookEventDetails | Query webhook event details.",
              "description": {
                "content": "Query and obtain detailed information about webhook events in the public server configurations.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "service",
                  "common",
                  "webhook",
                  "v1.0",
                  "events",
                  "query-event-details"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Accept",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "auth": null,
              "body": {
                "mode": "raw",
                "raw": "[\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [
              {
                "id": "e12d1f4a-9f56-4653-8040-53c0aa473247",
                "name": "Success",
                "originalRequest": {
                  "url": {
                    "path": [
                      "service",
                      "common",
                      "webhook",
                      "v1.0",
                      "events",
                      "query-event-details"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "[\n  {\n    \"event_name\": \"article\",\n    \"event_type\": \"update\",\n    \"event_category\": \"company\",\n    \"version\": \"1\"\n  }\n]",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
                "cookie": [],
                "_postman_previewlanguage": "json"
              }
            ],
            "event": [],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "id": "31f3274f-f696-4308-94ff-07ca98199a29",
            "name": "notifyDepricatedEvent | Notifies all the events that are going to depricate",
            "request": {
              "name": "notifyDepricatedEvent | Notifies all the events that are going to depricate",
              "description": {
                "content": "Notifies all the events that are subscribed and are going to deprecate or new version is available for those events",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "service",
                  "common",
                  "webhook",
                  "v1.0",
                  "events",
                  "depricated-event-notifier"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                }
              ],
              "method": "GET",
              "auth": null
            },
            "response": [
              {
                "id": "852d4370-805a-4aca-84c1-75097a672f5e",
                "name": "Success",
                "originalRequest": {
                  "url": {
                    "path": [
                      "service",
                      "common",
                      "webhook",
                      "v1.0",
                      "events",
                      "depricated-event-notifier"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
                "cookie": [],
                "_postman_previewlanguage": "json"
              }
            ],
            "event": [],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "id": "b9508560-bc56-4146-a7d6-c05611d64230",
            "name": "testHandlerTransformation | Test transformation of handler",
            "request": {
              "name": "testHandlerTransformation | Test transformation of handler",
              "description": {
                "content": "Test transformation of handler",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "service",
                  "common",
                  "webhook",
                  "v1.0",
                  "events",
                  "transform-event"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Accept",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "auth": null,
              "body": {
                "mode": "raw",
                "raw": "{\n  \"event_name\": \"<string>\",\n  \"event_type\": \"<string>\",\n  \"event_category\": \"<string>\",\n  \"event_version\": \"<string>\",\n  \"event\": {\n    \"payload\": {\n      \"est9db\": 2803852,\n      \"adipisicing_4d\": false\n    },\n    \"meta\": {\n      \"dolore7\": 80282928.1218473,\n      \"in_5\": \"irure dolor\"\n    }\n  }\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [
              {
                "id": "c9d80401-e628-458d-8fe1-b23c37bdba39",
                "name": "Success",
                "originalRequest": {
                  "url": {
                    "path": [
                      "service",
                      "common",
                      "webhook",
                      "v1.0",
                      "events",
                      "transform-event"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"event_name\": \"location\",\n  \"event_type\": \"create\",\n  \"event_category\": \"company\",\n  \"event_version\": \"1\",\n  \"event\": {\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450Z\",\n        \"modified_on\": \"2023-10-24T01:41:44.450Z\"\n      }\n    },\n    \"meta\": {\n      \"event\": {\n        \"type\": \"create\",\n        \"name\": \"location\",\n        \"version\": \"1\"\n      },\n      \"company_id\": 6086,\n      \"service\": {\n        \"name\": \"WheelJack\"\n      },\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"created_timestamp\": 1698111704725\n    }\n  }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": "{\n  \"event_trace_id\": [\n    \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n  ],\n  \"data\": {\n    \"event\": {\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"name\": \"location\",\n      \"type\": \"create\",\n      \"version\": \"1\",\n      \"created_timestamp\": 1698111704725\n    },\n    \"company_id\": 6086,\n    \"contains\": [\n      \"location\"\n    ],\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450Z\",\n        \"modified_on\": \"2023-10-24T01:41:44.450Z\"\n      }\n    }\n  },\n  \"event_name\": \"location\",\n  \"version\": \"1\",\n  \"status\": false,\n  \"event_type\": \"create\",\n  \"service_meta\": {\n    \"name\": \"WheelJack\"\n  },\n  \"association\": {\n    \"company_id\": 6086\n  }\n}",
                "cookie": [],
                "_postman_previewlanguage": "json"
              }
            ],
            "event": [],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "id": "30fbd3dd-0b8e-4efe-a7e3-8ba6a1a14d64",
            "name": "validateSchema | Validate Schema for an event",
            "request": {
              "name": "validateSchema | Validate Schema for an event",
              "description": {
                "content": "Validate Schema for an event",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "service",
                  "common",
                  "webhook",
                  "v1.0",
                  "events",
                  "validate-event-schema"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Accept",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "auth": null,
              "body": {
                "mode": "raw",
                "raw": "{\n  \"event_name\": \"<string>\",\n  \"event_type\": \"<string>\",\n  \"event_category\": \"<string>\",\n  \"event_version\": \"<string>\",\n  \"event\": {\n    \"payload\": {\n      \"Excepteur_7_\": false,\n      \"laborum0d\": \"elit\",\n      \"ex_d2\": -43669391\n    },\n    \"meta\": {\n      \"magna__\": \"exercitation veniam Ut\"\n    }\n  },\n  \"event_schema\": {\n    \"velit04b\": \"aute anim sunt fugiat\",\n    \"nulla_8b6\": false\n  }\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [
              {
                "id": "7798e71a-3da7-432b-bb51-fda5d385df7c",
                "name": "Success",
                "originalRequest": {
                  "url": {
                    "path": [
                      "service",
                      "common",
                      "webhook",
                      "v1.0",
                      "events",
                      "validate-event-schema"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"event_name\": \"location\",\n  \"event_type\": \"create\",\n  \"event_category\": \"company\",\n  \"event_version\": \"1\",\n  \"event\": {\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450Z\",\n        \"modified_on\": \"2023-10-24T01:41:44.450Z\"\n      }\n    },\n    \"meta\": {\n      \"event\": {\n        \"type\": \"create\",\n        \"name\": \"location\",\n        \"version\": \"1\"\n      },\n      \"company_id\": 6086,\n      \"service\": {\n        \"name\": \"WheelJack\"\n      },\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"created_timestamp\": 1698111704725\n    }\n  },\n  \"event_schema\": {}\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": "{\n  \"status\": true,\n  \"message\": \"Valid schema for this event\"\n}",
                "cookie": [],
                "_postman_previewlanguage": "json"
              }
            ],
            "event": [],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          }
        ],
        "event": []
      }
    ],
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "type": "text/javascript",
          "exec": [
            "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
          ]
        }
      }
    ],
    "variable": [
      {
        "key": "baseUrl",
        "value": "https://api.fynd.com"
      }
    ],
    "info": {
      "_postman_id": "12764332-2f32-42dd-8582-921790ac65fa",
      "name": "Fynd Platform's Public Side APIs v1.9.4",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "Fynd Platform's Public Side APIs",
        "type": "text/plain"
      }
    }
  }
}
