{
  "item": [
    {
      "id": "3e5344ee-2583-4158-b422-c84bc6940cc0",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "4b7090f2-64d8-4ebb-9ee5-3ed047fbcbe6",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "ad5d1e73-4d44-4c47-a9f5-73c3e68f2bf4",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "Lorem enim aute",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "16d40281-f30b-475f-ab59-eb687ab1ffdb",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "Lorem enim aute",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"Invalid application domain or id.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b11c6d58-2000-47df-851f-e5b3fa97de67",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "Lorem enim aute",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "aa495704-d685-4b60-8f73-b169e7f8be40",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "6623500a-5975-4767-9f89-9f770b269b5d",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "ec9ef665-80ef-4b6a-bc07-6f80d1b79184",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "7b6fa78d-33f0-422b-b7c6-f73053ec756b",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "02b36fb9-8b28-420b-bc0f-1cdbbc4cac3e",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 63141865,\n   \"event_name\": \"dolor veniam\",\n   \"event_type\": \"qui\",\n   \"event_category\": \"cillum amet\",\n   \"version\": \"ut ad\",\n   \"display_name\": \"aute deserunt\",\n   \"description\": \"aute nisi voluptate\",\n   \"created_on\": \"occaecat ipsum\"\n  },\n  {\n   \"id\": 79974105,\n   \"event_name\": \"ipsum exercitation reprehe\",\n   \"event_type\": \"proident\",\n   \"event_category\": \"deserunt incididunt commodo dolore\",\n   \"version\": \"dolor deserunt in eu cupidatat\",\n   \"display_name\": \"consequat Lorem\",\n   \"description\": \"commodo\",\n   \"created_on\": \"mollit quis consectetur\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "1d8b4c61-88ed-40ca-a216-e8499887acea",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "5cbabe9f-cffe-4104-8550-4550bf910c82",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 18362645,\n   \"event_name\": \"irure\",\n   \"event_type\": \"\",\n   \"event_category\": \"proident ut id\",\n   \"version\": \"in amet deserunt\",\n   \"display_name\": \"Excepteur occaecat exercitation et\",\n   \"description\": \"cillum velit amet\",\n   \"created_on\": \"exercitation sit \"\n  },\n  {\n   \"id\": -15254756,\n   \"event_name\": \"labore incididunt\",\n   \"event_type\": \"non voluptate incididunt\",\n   \"event_category\": \"aliquip occaecat velit anim ullamco\",\n   \"version\": \"in occaecat labore\",\n   \"display_name\": \"amet\",\n   \"description\": \"culpa occaec\",\n   \"created_on\": \"non eu \"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "32f633ce-91b6-423b-9f8d-605d539716f9",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "11269a9a-3105-4925-b67d-f8bde5ea469d",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "9393f939-4016-4909-85b9-90e263a7c62e",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1977-04-15T09:16:31.112Z\",\n \"status\": 15701951,\n \"error\": \"sint\",\n \"exception\": \"est amet sint su\",\n \"message\": \"Ut officia\",\n \"total_time_taken_in_millis\": 15467482,\n \"http_status\": \"403 FORBIDDEN\",\n \"items\": [\n  {\n   \"company_id\": 10298080,\n   \"integration_data\": {},\n   \"company_name\": \"sunt in Duis ipsum e\",\n   \"task_details\": {\n    \"type\": -27068330,\n    \"group_list\": [\n     {\n      \"text\": \"nostrud laboris commodo\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliqua ad\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 51828670.592119366,\n    \"safe_stock\": -74914407,\n    \"period_threshold\": -39559156,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"nisi enim proident\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Excepteur eu non\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"nulla sunt tempor\",\n   \"alias\": \"mollit veniam dolor\"\n  },\n  {\n   \"company_id\": -86111839,\n   \"integration_data\": {},\n   \"company_name\": \"cupidatat dolor nisi amet officia\",\n   \"task_details\": {\n    \"type\": -42538498,\n    \"group_list\": [\n     {\n      \"text\": \"deserun\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor Ut voluptate\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 83163117.63471308,\n    \"safe_stock\": -23559429,\n    \"period_threshold\": 14076985,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"in Duis irure\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sint ad eu labore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"veniam esse eiusmod\",\n   \"alias\": \"sint\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 46179501,\n   \"integration_data\": {},\n   \"company_name\": \"sunt esse voluptate sit\",\n   \"task_details\": {\n    \"type\": 57109280,\n    \"group_list\": [\n     {\n      \"text\": \"mollit elit pariatur d\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nisi\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -15003336.564098775,\n    \"safe_stock\": 89320294,\n    \"period_threshold\": 79706474,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"esse occaecat consectetur nostrud\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ea\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"do ex\",\n   \"alias\": \"esse proident\"\n  },\n  {\n   \"company_id\": -10255490,\n   \"integration_data\": {},\n   \"company_name\": \"non veniam\",\n   \"task_details\": {\n    \"type\": -94354188,\n    \"group_list\": [\n     {\n      \"text\": \"proident \",\n      \"value\": {}\n     },\n     {\n      \"text\": \"est ad consequat ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 22669580.234762117,\n    \"safe_stock\": 84052308,\n    \"period_threshold\": -4512017,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"consequat laboris\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor officia minim Excepteur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"commodo velit laboris\",\n   \"alias\": \"dolore sint consequat enim\"\n  }\n ],\n \"trace_id\": \"Excepteur nostrud\",\n \"page\": {\n  \"type\": \"tempor ullamco velit est\",\n  \"size\": -17689361,\n  \"current\": -89713787,\n  \"has_next\": true,\n  \"item_total\": -83506319,\n  \"next_id\": \"exercitation Excepteur aliqua\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e560aa40-0860-4197-aaff-e9db416609a5",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1949-02-08T18:21:55.405Z\",\n \"status\": 19874449,\n \"error\": \"veniam irure enim Duis\",\n \"exception\": \"consectetur irure magna\",\n \"message\": \"\",\n \"total_time_taken_in_millis\": -79952607,\n \"http_status\": \"403 FORBIDDEN\",\n \"items\": [\n  {\n   \"company_id\": 80149199,\n   \"integration_data\": {},\n   \"company_name\": \"sed in\",\n   \"task_details\": {\n    \"type\": 55134218,\n    \"group_list\": [\n     {\n      \"text\": \"labore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"voluptate aute enim eu\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -30075618.41555035,\n    \"safe_stock\": 8772448,\n    \"period_threshold\": -19593814,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"esse ullamco eu anim do\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliquip voluptate in culpa\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"consectetur\",\n   \"alias\": \"dolor in quis eiusmod ex\"\n  },\n  {\n   \"company_id\": 94939403,\n   \"integration_data\": {},\n   \"company_name\": \"id offi\",\n   \"task_details\": {\n    \"type\": 87187904,\n    \"group_list\": [\n     {\n      \"text\": \"quis incididunt id eu qui\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliquip ea aute anim nostrud\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 64346221.28873283,\n    \"safe_stock\": 57720770,\n    \"period_threshold\": 67123985,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"eiusmod in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"do ipsum irure dolore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aute nostrud\",\n   \"alias\": \"Duis qui elit\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 79163892,\n   \"integration_data\": {},\n   \"company_name\": \"aliquip consectetur labore adipisicing\",\n   \"task_details\": {\n    \"type\": 4201571,\n    \"group_list\": [\n     {\n      \"text\": \"veniam labore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"amet quis in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 28590807.47694081,\n    \"safe_stock\": 96096481,\n    \"period_threshold\": 29600983,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"aliquip irure Excepteur aute\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Ut non occaecat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"dolor pariatur anim ea\",\n   \"alias\": \"qui\"\n  },\n  {\n   \"company_id\": 94489577,\n   \"integration_data\": {},\n   \"company_name\": \"ut eu nostrud adipisicing\",\n   \"task_details\": {\n    \"type\": 40117256,\n    \"group_list\": [\n     {\n      \"text\": \"aliquip do\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Ut sint cillum amet\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -36039082.022799775,\n    \"safe_stock\": 84497693,\n    \"period_threshold\": -68414091,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"occaecat dolore ipsum et\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"qui in ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sit est enim ad\",\n   \"alias\": \"ut id \"\n  }\n ],\n \"trace_id\": \"dolor anim aliqua e\",\n \"page\": {\n  \"type\": \"Excepteur occaecat incididunt quis\",\n  \"size\": 28670049,\n  \"current\": -34627822,\n  \"has_next\": true,\n  \"item_total\": -42159502,\n  \"next_id\": \"enim \",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "24ddc86d-cbb6-4d7f-af7e-06d7b56da659",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1949-02-08T18:21:55.405Z\",\n \"status\": 19874449,\n \"error\": \"veniam irure enim Duis\",\n \"exception\": \"consectetur irure magna\",\n \"message\": \"\",\n \"total_time_taken_in_millis\": -79952607,\n \"http_status\": \"403 FORBIDDEN\",\n \"items\": [\n  {\n   \"company_id\": 80149199,\n   \"integration_data\": {},\n   \"company_name\": \"sed in\",\n   \"task_details\": {\n    \"type\": 55134218,\n    \"group_list\": [\n     {\n      \"text\": \"labore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"voluptate aute enim eu\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -30075618.41555035,\n    \"safe_stock\": 8772448,\n    \"period_threshold\": -19593814,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"esse ullamco eu anim do\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliquip voluptate in culpa\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"consectetur\",\n   \"alias\": \"dolor in quis eiusmod ex\"\n  },\n  {\n   \"company_id\": 94939403,\n   \"integration_data\": {},\n   \"company_name\": \"id offi\",\n   \"task_details\": {\n    \"type\": 87187904,\n    \"group_list\": [\n     {\n      \"text\": \"quis incididunt id eu qui\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliquip ea aute anim nostrud\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 64346221.28873283,\n    \"safe_stock\": 57720770,\n    \"period_threshold\": 67123985,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"eiusmod in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"do ipsum irure dolore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aute nostrud\",\n   \"alias\": \"Duis qui elit\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 79163892,\n   \"integration_data\": {},\n   \"company_name\": \"aliquip consectetur labore adipisicing\",\n   \"task_details\": {\n    \"type\": 4201571,\n    \"group_list\": [\n     {\n      \"text\": \"veniam labore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"amet quis in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 28590807.47694081,\n    \"safe_stock\": 96096481,\n    \"period_threshold\": 29600983,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"aliquip irure Excepteur aute\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Ut non occaecat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"dolor pariatur anim ea\",\n   \"alias\": \"qui\"\n  },\n  {\n   \"company_id\": 94489577,\n   \"integration_data\": {},\n   \"company_name\": \"ut eu nostrud adipisicing\",\n   \"task_details\": {\n    \"type\": 40117256,\n    \"group_list\": [\n     {\n      \"text\": \"aliquip do\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Ut sint cillum amet\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -36039082.022799775,\n    \"safe_stock\": 84497693,\n    \"period_threshold\": -68414091,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"occaecat dolore ipsum et\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"qui in ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sit est enim ad\",\n   \"alias\": \"ut id \"\n  }\n ],\n \"trace_id\": \"dolor anim aliqua e\",\n \"page\": {\n  \"type\": \"Excepteur occaecat incididunt quis\",\n  \"size\": 28670049,\n  \"current\": -34627822,\n  \"has_next\": true,\n  \"item_total\": -42159502,\n  \"next_id\": \"enim \",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "aefdee2b-685f-44ac-abc4-6a566c950b50",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "b022d0c4-89a1-41ae-bbb0-943ab81540ee",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2021-03-29T17:22:11.865Z\",\n \"status\": -6589782,\n \"error\": \"labore dolor veniam dolore\",\n \"exception\": \"quis\",\n \"message\": \"\",\n \"total_time_taken_in_millis\": -85948339,\n \"http_status\": \"207 MULTI_STATUS\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"irure commodo proident\",\n \"page\": {\n  \"type\": \"deserunt qui nostrud officia\",\n  \"size\": -76529696,\n  \"current\": -57339751,\n  \"has_next\": true,\n  \"item_total\": 26314974,\n  \"next_id\": \"eiusmod ipsum ut culpa\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5e85a4f3-ee73-4e89-9b22-0f56760bdf9d",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2021-03-29T17:22:11.865Z\",\n \"status\": -6589782,\n \"error\": \"labore dolor veniam dolore\",\n \"exception\": \"quis\",\n \"message\": \"\",\n \"total_time_taken_in_millis\": -85948339,\n \"http_status\": \"207 MULTI_STATUS\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"irure commodo proident\",\n \"page\": {\n  \"type\": \"deserunt qui nostrud officia\",\n  \"size\": -76529696,\n  \"current\": -57339751,\n  \"has_next\": true,\n  \"item_total\": 26314974,\n  \"next_id\": \"eiusmod ipsum ut culpa\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "680a626a-6cc9-42b5-bf16-6cf2ff935995",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2021-03-29T17:22:11.865Z\",\n \"status\": -6589782,\n \"error\": \"labore dolor veniam dolore\",\n \"exception\": \"quis\",\n \"message\": \"\",\n \"total_time_taken_in_millis\": -85948339,\n \"http_status\": \"207 MULTI_STATUS\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"irure commodo proident\",\n \"page\": {\n  \"type\": \"deserunt qui nostrud officia\",\n  \"size\": -76529696,\n  \"current\": -57339751,\n  \"has_next\": true,\n  \"item_total\": 26314974,\n  \"next_id\": \"eiusmod ipsum ut culpa\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "8a1cda30-78a4-4c77-9e5f-c4fec30a5113",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "1134caa2-3fe1-404f-9e04-a86381d4a5fc",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1978-05-28T13:59:20.164Z\",\n \"status\": -49993401,\n \"error\": \"in nulla con\",\n \"exception\": \"nostrud quis\",\n \"message\": \"laboris consequat Ut amet in\",\n \"total_time_taken_in_millis\": 31005084,\n \"http_status\": \"506 VARIANT_ALSO_NEGOTIATES\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"deserunt tempor velit\",\n \"page\": {\n  \"type\": \"nisi Lorem\",\n  \"size\": -30862024,\n  \"current\": 39023762,\n  \"has_next\": false,\n  \"item_total\": -95616908,\n  \"next_id\": \"quis amet in\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "03c2cd46-79e0-4821-8b51-9ca1c2882e0e",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1978-05-28T13:59:20.164Z\",\n \"status\": -49993401,\n \"error\": \"in nulla con\",\n \"exception\": \"nostrud quis\",\n \"message\": \"laboris consequat Ut amet in\",\n \"total_time_taken_in_millis\": 31005084,\n \"http_status\": \"506 VARIANT_ALSO_NEGOTIATES\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"deserunt tempor velit\",\n \"page\": {\n  \"type\": \"nisi Lorem\",\n  \"size\": -30862024,\n  \"current\": 39023762,\n  \"has_next\": false,\n  \"item_total\": -95616908,\n  \"next_id\": \"quis amet in\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3f10a025-9283-448e-8519-fc76cb1c1786",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1978-05-28T13:59:20.164Z\",\n \"status\": -49993401,\n \"error\": \"in nulla con\",\n \"exception\": \"nostrud quis\",\n \"message\": \"laboris consequat Ut amet in\",\n \"total_time_taken_in_millis\": 31005084,\n \"http_status\": \"506 VARIANT_ALSO_NEGOTIATES\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"deserunt tempor velit\",\n \"page\": {\n  \"type\": \"nisi Lorem\",\n  \"size\": -30862024,\n  \"current\": 39023762,\n  \"has_next\": false,\n  \"item_total\": -95616908,\n  \"next_id\": \"quis amet in\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "71e00efd-c80b-4cbd-a0f6-ec006177fbb8",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1978-05-28T13:59:20.164Z\",\n \"status\": -49993401,\n \"error\": \"in nulla con\",\n \"exception\": \"nostrud quis\",\n \"message\": \"laboris consequat Ut amet in\",\n \"total_time_taken_in_millis\": 31005084,\n \"http_status\": \"506 VARIANT_ALSO_NEGOTIATES\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"deserunt tempor velit\",\n \"page\": {\n  \"type\": \"nisi Lorem\",\n  \"size\": -30862024,\n  \"current\": 39023762,\n  \"has_next\": false,\n  \"item_total\": -95616908,\n  \"next_id\": \"quis amet in\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d6009b49-b4aa-49bf-9c11-e4af4466c81f",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1978-05-28T13:59:20.164Z\",\n \"status\": -49993401,\n \"error\": \"in nulla con\",\n \"exception\": \"nostrud quis\",\n \"message\": \"laboris consequat Ut amet in\",\n \"total_time_taken_in_millis\": 31005084,\n \"http_status\": \"506 VARIANT_ALSO_NEGOTIATES\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"deserunt tempor velit\",\n \"page\": {\n  \"type\": \"nisi Lorem\",\n  \"size\": -30862024,\n  \"current\": 39023762,\n  \"has_next\": false,\n  \"item_total\": -95616908,\n  \"next_id\": \"quis amet in\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx0.de"
    }
  ],
  "info": {
    "_postman_id": "07e88cad-33e9-40e8-9f02-67d70dcb7311",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
