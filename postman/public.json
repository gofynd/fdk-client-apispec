{
  "item": [
    {
      "id": "be11eeec-a3b4-44c7-ba31-b49c786a57fc",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "a29c5eae-271d-4f96-8113-66cd20e9e981",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "2a38ee81-170d-4720-bbab-1b58f5daf469",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "sed vo",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c81a1ef1-ff15-4f7b-858f-59dd6186bc47",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "sed vo",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "caa409c3-dfd3-43ce-b68c-67a34e2ad158",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "sed vo",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "81c806b5-3dbe-4df3-b962-f5c42fa96fe7",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "423fb4e1-5d76-4a3a-bbda-3497b2cd0fc5",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "b8dab769-47ea-4e3a-a784-781bbe6ba668",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "3650d8f9-a6ed-469d-bca0-aaad1ba73c92",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "3a986388-bc14-4bf6-a914-3403dbf408a7",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 91792660,\n   \"event_name\": \"consequat fugiat\",\n   \"event_type\": \"nostrud dolore\",\n   \"event_category\": \"et incididunt\",\n   \"version\": \"proident\",\n   \"display_name\": \"dolore dolore ut\",\n   \"description\": \"non ipsum\",\n   \"created_on\": \"in consequat eiusmod\"\n  },\n  {\n   \"id\": -72503536,\n   \"event_name\": \"Excepteur ea\",\n   \"event_type\": \"anim pariatur minim\",\n   \"event_category\": \"elit adipisicing dolor dolore\",\n   \"version\": \"irure eiusmod\",\n   \"display_name\": \"incididunt reprehenderit ullamco\",\n   \"description\": \"ad ut aliqua\",\n   \"created_on\": \"Lorem aliqua et dolore veniam\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "2c8f08cc-d604-4652-81e0-b259af6c07e5",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "74d92eb1-5d8a-4af0-a024-ebf952a97001",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 14176347,\n   \"event_name\": \"eu of\",\n   \"event_type\": \"incididu\",\n   \"event_category\": \"id proident deserunt laboris\",\n   \"version\": \"dolore incididunt eu dolore labore\",\n   \"display_name\": \"est velit in cupidatat ut\",\n   \"description\": \"id officia\",\n   \"created_on\": \"eiusmod consectetur ea\"\n  },\n  {\n   \"id\": 84271412,\n   \"event_name\": \"Duis et consectetur adipi\",\n   \"event_type\": \"adipisicing\",\n   \"event_category\": \"ut labore sed\",\n   \"version\": \"do\",\n   \"display_name\": \"commodo eu cillum \",\n   \"description\": \"ad dolore\",\n   \"created_on\": \"nisi fugiat\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "2019c323-5f49-4ca3-b691-7ad58ad2be91",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "f662f5f6-ff3e-4e89-b6db-343ec286c28e",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "b28a1944-e4ce-4e46-80e0-a082f4c53380",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1989-09-21T09:14:39.786Z\",\n \"status\": -14312067,\n \"error\": \"tempor adipisicing deserunt\",\n \"exception\": \"aliqua\",\n \"message\": \"aliquip quis\",\n \"total_time_taken_in_millis\": 17152833,\n \"http_status\": \"511 NETWORK_AUTHENTICATION_REQUIRED\",\n \"items\": [\n  {\n   \"company_id\": 17011530,\n   \"integration_data\": {},\n   \"company_name\": \"officia\",\n   \"task_details\": {\n    \"type\": 56596428,\n    \"group_list\": [\n     {\n      \"text\": \"exercitation ut ut nulla et\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"exercitation nisi in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -37452173.37236939,\n    \"safe_stock\": -344049,\n    \"period_threshold\": 4745103,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"quis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"reprehenderit sunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ut nisi\",\n   \"alias\": \"enim ut velit occaecat\"\n  },\n  {\n   \"company_id\": -48836019,\n   \"integration_data\": {},\n   \"company_name\": \"reprehenderit\",\n   \"task_details\": {\n    \"type\": 6928506,\n    \"group_list\": [\n     {\n      \"text\": \"Excepteur reprehenderit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"voluptate\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -11201672.986416295,\n    \"safe_stock\": -31225952,\n    \"period_threshold\": 13181172,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"do ipsum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute sit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in consectetur reprehenderit\",\n   \"alias\": \"quis anim\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 51774426,\n   \"integration_data\": {},\n   \"company_name\": \"deserunt exercitation magna\",\n   \"task_details\": {\n    \"type\": 45265113,\n    \"group_list\": [\n     {\n      \"text\": \"laborum veniam nisi nulla\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"reprehenderit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 19617965.343224823,\n    \"safe_stock\": -30114093,\n    \"period_threshold\": 135276,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"laborum sit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut sint pariatur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"consequat non\",\n   \"alias\": \"et ut dolor tempor\"\n  },\n  {\n   \"company_id\": 93500452,\n   \"integration_data\": {},\n   \"company_name\": \"reprehenderit in\",\n   \"task_details\": {\n    \"type\": 54976737,\n    \"group_list\": [\n     {\n      \"text\": \"ut sunt aliq\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"id aliqua Ut proident\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -45890197.18467999,\n    \"safe_stock\": -41679098,\n    \"period_threshold\": -48460762,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"fugiat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cu\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"non\",\n   \"alias\": \"veniam velit Excepteur dolor\"\n  }\n ],\n \"trace_id\": \"consequat\",\n \"page\": {\n  \"type\": \"aliqua aute irure laborum\",\n  \"size\": 65296517,\n  \"current\": -62650581,\n  \"has_next\": true,\n  \"item_total\": -75142664,\n  \"next_id\": \"dolore ullamco\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5b24d1f1-2ceb-4608-b530-1b65cf92504e",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2006-04-27T13:59:37.767Z\",\n \"status\": -57715848,\n \"error\": \"quis non veniam\",\n \"exception\": \"quis dolor ut\",\n \"message\": \"officia nisi ex minim est\",\n \"total_time_taken_in_millis\": 37315229,\n \"http_status\": \"300 MULTIPLE_CHOICES\",\n \"items\": [\n  {\n   \"company_id\": 65314155,\n   \"integration_data\": {},\n   \"company_name\": \"ea dolore in\",\n   \"task_details\": {\n    \"type\": 14632021,\n    \"group_list\": [\n     {\n      \"text\": \"in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"non\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 73088729.93870023,\n    \"safe_stock\": 16467961,\n    \"period_threshold\": -95307828,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"enim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aliquip incididunt tempor reprehenderit magna\",\n   \"alias\": \"aliqua quis eu\"\n  },\n  {\n   \"company_id\": 55244048,\n   \"integration_data\": {},\n   \"company_name\": \"officia minim et\",\n   \"task_details\": {\n    \"type\": 24228803,\n    \"group_list\": [\n     {\n      \"text\": \"incididunt esse Excepteur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"commodo Ut minim pariatur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -36426317.956170395,\n    \"safe_stock\": 50521935,\n    \"period_threshold\": 11427509,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"et sed eiusmod\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ex laboris\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ex amet\",\n   \"alias\": \"in laboris s\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -93701488,\n   \"integration_data\": {},\n   \"company_name\": \"in cillum\",\n   \"task_details\": {\n    \"type\": -12176689,\n    \"group_list\": [\n     {\n      \"text\": \"consequat dolor eiusmod\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"reprehenderit Exc\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -53826250.94296891,\n    \"safe_stock\": -94558360,\n    \"period_threshold\": -87279497,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"et veniam labo\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sed qui sunt ad do\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in in mollit\",\n   \"alias\": \"dolore enim ea\"\n  },\n  {\n   \"company_id\": -38918886,\n   \"integration_data\": {},\n   \"company_name\": \"dolor sunt\",\n   \"task_details\": {\n    \"type\": -13222681,\n    \"group_list\": [\n     {\n      \"text\": \"id sint elit anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laboris labore non\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -93797824.09915696,\n    \"safe_stock\": -61120517,\n    \"period_threshold\": 55167951,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"id\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"o\",\n   \"alias\": \"commodo nisi dolor eiusmod\"\n  }\n ],\n \"trace_id\": \"laborum\",\n \"page\": {\n  \"type\": \"minim ex non aliqua nostrud\",\n  \"size\": -37435645,\n  \"current\": 36958515,\n  \"has_next\": true,\n  \"item_total\": 21404078,\n  \"next_id\": \"sed non\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e3ac12c4-d1e9-4caf-9cd0-6e8f1df77cd4",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2006-04-27T13:59:37.767Z\",\n \"status\": -57715848,\n \"error\": \"quis non veniam\",\n \"exception\": \"quis dolor ut\",\n \"message\": \"officia nisi ex minim est\",\n \"total_time_taken_in_millis\": 37315229,\n \"http_status\": \"300 MULTIPLE_CHOICES\",\n \"items\": [\n  {\n   \"company_id\": 65314155,\n   \"integration_data\": {},\n   \"company_name\": \"ea dolore in\",\n   \"task_details\": {\n    \"type\": 14632021,\n    \"group_list\": [\n     {\n      \"text\": \"in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"non\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 73088729.93870023,\n    \"safe_stock\": 16467961,\n    \"period_threshold\": -95307828,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"enim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aliquip incididunt tempor reprehenderit magna\",\n   \"alias\": \"aliqua quis eu\"\n  },\n  {\n   \"company_id\": 55244048,\n   \"integration_data\": {},\n   \"company_name\": \"officia minim et\",\n   \"task_details\": {\n    \"type\": 24228803,\n    \"group_list\": [\n     {\n      \"text\": \"incididunt esse Excepteur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"commodo Ut minim pariatur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -36426317.956170395,\n    \"safe_stock\": 50521935,\n    \"period_threshold\": 11427509,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"et sed eiusmod\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ex laboris\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ex amet\",\n   \"alias\": \"in laboris s\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -93701488,\n   \"integration_data\": {},\n   \"company_name\": \"in cillum\",\n   \"task_details\": {\n    \"type\": -12176689,\n    \"group_list\": [\n     {\n      \"text\": \"consequat dolor eiusmod\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"reprehenderit Exc\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -53826250.94296891,\n    \"safe_stock\": -94558360,\n    \"period_threshold\": -87279497,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"et veniam labo\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sed qui sunt ad do\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in in mollit\",\n   \"alias\": \"dolore enim ea\"\n  },\n  {\n   \"company_id\": -38918886,\n   \"integration_data\": {},\n   \"company_name\": \"dolor sunt\",\n   \"task_details\": {\n    \"type\": -13222681,\n    \"group_list\": [\n     {\n      \"text\": \"id sint elit anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laboris labore non\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -93797824.09915696,\n    \"safe_stock\": -61120517,\n    \"period_threshold\": 55167951,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"id\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"o\",\n   \"alias\": \"commodo nisi dolor eiusmod\"\n  }\n ],\n \"trace_id\": \"laborum\",\n \"page\": {\n  \"type\": \"minim ex non aliqua nostrud\",\n  \"size\": -37435645,\n  \"current\": 36958515,\n  \"has_next\": true,\n  \"item_total\": 21404078,\n  \"next_id\": \"sed non\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "c8d7e00d-bc84-4b09-b10a-27093a704581",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "0ff63d8d-0d02-4a76-b619-14f37bd811dc",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1948-03-27T04:58:29.091Z\",\n \"status\": -39334702,\n \"error\": \"velit sunt Ut\",\n \"exception\": \"nulla officia esse incididunt\",\n \"message\": \"quis tempor aliqua ex aliquip\",\n \"total_time_taken_in_millis\": 44064586,\n \"http_status\": \"418 I_AM_A_TEAPOT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"est occaecat commodo ipsum\",\n \"page\": {\n  \"type\": \"aliquip voluptat\",\n  \"size\": 74760615,\n  \"current\": 91522150,\n  \"has_next\": true,\n  \"item_total\": -33276102,\n  \"next_id\": \"commodo adipisicing\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a1765cd7-5785-4133-9ed1-73f348add5aa",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1948-03-27T04:58:29.091Z\",\n \"status\": -39334702,\n \"error\": \"velit sunt Ut\",\n \"exception\": \"nulla officia esse incididunt\",\n \"message\": \"quis tempor aliqua ex aliquip\",\n \"total_time_taken_in_millis\": 44064586,\n \"http_status\": \"418 I_AM_A_TEAPOT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"est occaecat commodo ipsum\",\n \"page\": {\n  \"type\": \"aliquip voluptat\",\n  \"size\": 74760615,\n  \"current\": 91522150,\n  \"has_next\": true,\n  \"item_total\": -33276102,\n  \"next_id\": \"commodo adipisicing\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2ec0eb81-c4ff-442a-a3ad-e2e52b57acfa",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1948-03-27T04:58:29.091Z\",\n \"status\": -39334702,\n \"error\": \"velit sunt Ut\",\n \"exception\": \"nulla officia esse incididunt\",\n \"message\": \"quis tempor aliqua ex aliquip\",\n \"total_time_taken_in_millis\": 44064586,\n \"http_status\": \"418 I_AM_A_TEAPOT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"est occaecat commodo ipsum\",\n \"page\": {\n  \"type\": \"aliquip voluptat\",\n  \"size\": 74760615,\n  \"current\": 91522150,\n  \"has_next\": true,\n  \"item_total\": -33276102,\n  \"next_id\": \"commodo adipisicing\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "ea1002b2-eeee-4b2e-80d0-3be7ec8a0965",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "e65656ca-e9fb-4d83-9e64-a0520efeabe7",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1954-09-25T00:19:04.707Z\",\n \"status\": -99703534,\n \"error\": \"est commodo reprehenderit ullamco fugiat\",\n \"exception\": \"exercitation elit sunt fugiat\",\n \"message\": \"Excepteur in aliqua\",\n \"total_time_taken_in_millis\": 13127339,\n \"http_status\": \"402 PAYMENT_REQUIRED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ea consectetur nisi aute in\",\n \"page\": {\n  \"type\": \"adipisicing Excepteur sit\",\n  \"size\": -93088025,\n  \"current\": 5220699,\n  \"has_next\": false,\n  \"item_total\": -66369564,\n  \"next_id\": \"nulla nisi anim in exercitation\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ec6d5093-8d8f-4cfc-b6ea-dc8182804dfe",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1954-09-25T00:19:04.707Z\",\n \"status\": -99703534,\n \"error\": \"est commodo reprehenderit ullamco fugiat\",\n \"exception\": \"exercitation elit sunt fugiat\",\n \"message\": \"Excepteur in aliqua\",\n \"total_time_taken_in_millis\": 13127339,\n \"http_status\": \"402 PAYMENT_REQUIRED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ea consectetur nisi aute in\",\n \"page\": {\n  \"type\": \"adipisicing Excepteur sit\",\n  \"size\": -93088025,\n  \"current\": 5220699,\n  \"has_next\": false,\n  \"item_total\": -66369564,\n  \"next_id\": \"nulla nisi anim in exercitation\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ebedcf24-9899-4bb8-ba7d-977cba0a8e03",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1954-09-25T00:19:04.707Z\",\n \"status\": -99703534,\n \"error\": \"est commodo reprehenderit ullamco fugiat\",\n \"exception\": \"exercitation elit sunt fugiat\",\n \"message\": \"Excepteur in aliqua\",\n \"total_time_taken_in_millis\": 13127339,\n \"http_status\": \"402 PAYMENT_REQUIRED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ea consectetur nisi aute in\",\n \"page\": {\n  \"type\": \"adipisicing Excepteur sit\",\n  \"size\": -93088025,\n  \"current\": 5220699,\n  \"has_next\": false,\n  \"item_total\": -66369564,\n  \"next_id\": \"nulla nisi anim in exercitation\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "0c37b4be-dfcf-4248-8f00-76a6b365c2c2",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1954-09-25T00:19:04.707Z\",\n \"status\": -99703534,\n \"error\": \"est commodo reprehenderit ullamco fugiat\",\n \"exception\": \"exercitation elit sunt fugiat\",\n \"message\": \"Excepteur in aliqua\",\n \"total_time_taken_in_millis\": 13127339,\n \"http_status\": \"402 PAYMENT_REQUIRED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ea consectetur nisi aute in\",\n \"page\": {\n  \"type\": \"adipisicing Excepteur sit\",\n  \"size\": -93088025,\n  \"current\": 5220699,\n  \"has_next\": false,\n  \"item_total\": -66369564,\n  \"next_id\": \"nulla nisi anim in exercitation\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9cd5746a-e4c4-4a66-bfbc-0b2580269c86",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1954-09-25T00:19:04.707Z\",\n \"status\": -99703534,\n \"error\": \"est commodo reprehenderit ullamco fugiat\",\n \"exception\": \"exercitation elit sunt fugiat\",\n \"message\": \"Excepteur in aliqua\",\n \"total_time_taken_in_millis\": 13127339,\n \"http_status\": \"402 PAYMENT_REQUIRED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ea consectetur nisi aute in\",\n \"page\": {\n  \"type\": \"adipisicing Excepteur sit\",\n  \"size\": -93088025,\n  \"current\": 5220699,\n  \"has_next\": false,\n  \"item_total\": -66369564,\n  \"next_id\": \"nulla nisi anim in exercitation\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx0.de"
    }
  ],
  "info": {
    "_postman_id": "667b58a6-b484-476b-9887-1faced570b1a",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
