{
  "item": [
    {
      "id": "80c37cdc-5a0f-462d-8f37-680d15b6aad7",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "dd493aa7-5919-4402-80cc-5f0c68bbc5e9",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "4cbd2a57-d87d-40c6-83b9-64dface7eef8",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "nulla proident cupidat",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ef9b0654-5380-4cc7-b7e9-768ea4224bb2",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "nulla proident cupidat",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"Bad request\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a8d9dee0-c55c-48d2-a954-80b0aff0fad7",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "nulla proident cupidat",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "e1a25d67-8214-4a1b-a7fa-3b9782c67985",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "3e03e7a5-c414-4e60-b428-4854b38ecacb",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "244e5769-3777-4752-b8fd-60362b48510e",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "66ae548a-3110-43f9-9832-4bb7b8472df8",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "ffbe25ab-8b62-481f-9a53-22fdb2957630",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -64649630,\n   \"event_name\": \"exercitation cillum enim\",\n   \"event_type\": \"ut\",\n   \"event_category\": \"qui\",\n   \"version\": \"ad ullamco velit\",\n   \"display_name\": \"dolor nostrud aliqua\",\n   \"description\": \"aliquip offi\",\n   \"created_on\": \"Lorem adipisicing\"\n  },\n  {\n   \"id\": 94004829,\n   \"event_name\": \"ex ipsum incididunt in minim\",\n   \"event_type\": \"anim Excepteur officia Ut\",\n   \"event_category\": \"irure quis\",\n   \"version\": \"ea nulla\",\n   \"display_name\": \"officia fugiat\",\n   \"description\": \"adipisicing aute esse cons\",\n   \"created_on\": \"culpa\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "8208feca-4b5b-4a4b-bb98-62d5adca6314",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "3480fc83-c30f-4433-9127-a8a1121e602d",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 98521242,\n   \"event_name\": \"laboris ad labore velit\",\n   \"event_type\": \"incididun\",\n   \"event_category\": \"minim cupidatat\",\n   \"version\": \"irure\",\n   \"display_name\": \"culpa do aliquip eiusmod aliqua\",\n   \"description\": \"commodo qui id aliqua\",\n   \"created_on\": \"esse culpa ut aliqua\"\n  },\n  {\n   \"id\": -82691113,\n   \"event_name\": \"irure in te\",\n   \"event_type\": \"Excepteur velit reprehenderit\",\n   \"event_category\": \"in consectetur culpa in\",\n   \"version\": \"dolor dolore officia\",\n   \"display_name\": \"ut deserunt\",\n   \"description\": \"aute sunt nulla dolor in\",\n   \"created_on\": \"in officia aliqua ipsum aute\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "e5385cc0-c264-46c2-9c32-1e20db878110",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "1ca3bb16-5e34-45cc-9601-14c52c962da4",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "b4879157-4d46-432b-b892-369f92f859b3",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2003-11-07T04:51:34.929Z\",\n \"status\": -39220473,\n \"error\": \"commodo pariatur minim \",\n \"exception\": \"nulla proident adipisicing officia\",\n \"message\": \"cillum in veniam\",\n \"total_time_taken_in_millis\": 84669747,\n \"http_status\": \"410 GONE\",\n \"items\": [\n  {\n   \"company_id\": 89517536,\n   \"integration_data\": {},\n   \"company_name\": \"eiusmod anim ut irure\",\n   \"task_details\": {\n    \"type\": 1013283,\n    \"group_list\": [\n     {\n      \"text\": \"tempor culpa sint qui do\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"et ut anim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -76035495.7329262,\n    \"safe_stock\": -5462743,\n    \"period_threshold\": -79548778,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"minim nulla\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ea commodo cillum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"cupidatat irure ex eu esse\",\n   \"alias\": \"incididunt aute quis nulla\"\n  },\n  {\n   \"company_id\": 28865947,\n   \"integration_data\": {},\n   \"company_name\": \"incididunt commodo cupidatat\",\n   \"task_details\": {\n    \"type\": 70716372,\n    \"group_list\": [\n     {\n      \"text\": \"nostrud in non\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ex\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -77425268.64161299,\n    \"safe_stock\": 99936350,\n    \"period_threshold\": 81400069,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"Excepteur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eu officia culpa magna\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sint consequat ad\",\n   \"alias\": \"eiusmod sint Lorem\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -10889038,\n   \"integration_data\": {},\n   \"company_name\": \"pariatur do officia sint\",\n   \"task_details\": {\n    \"type\": 35183180,\n    \"group_list\": [\n     {\n      \"text\": \"reprehenderit minim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"officia in aute dolor eiusmod\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 31662031.326690212,\n    \"safe_stock\": -23920029,\n    \"period_threshold\": -47690616,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"eiusmod occaecat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"adipisicing minim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"cupidatat do\",\n   \"alias\": \"in labore\"\n  },\n  {\n   \"company_id\": 9408248,\n   \"integration_data\": {},\n   \"company_name\": \"ut\",\n   \"task_details\": {\n    \"type\": -99614482,\n    \"group_list\": [\n     {\n      \"text\": \"qui deserunt culpa enim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"fugiat deserunt in labore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -76484014.6443508,\n    \"safe_stock\": -11127830,\n    \"period_threshold\": -74184928,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolore in do ipsum et\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor exercitation\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"pariatur exercitation dolor sed sunt\",\n   \"alias\": \"eiusmod aliqua deserunt\"\n  }\n ],\n \"trace_id\": \"reprehenderit incididunt\",\n \"page\": {\n  \"type\": \"nulla ad quis\",\n  \"size\": 25488571,\n  \"current\": 14791461,\n  \"has_next\": false,\n  \"item_total\": 53444802,\n  \"next_id\": \"Duis cupidatat esse\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c050dfd0-8c1e-4574-89aa-2a76037ac17d",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1993-07-13T06:16:54.459Z\",\n \"status\": -7170662,\n \"error\": \"do\",\n \"exception\": \"officia ex\",\n \"message\": \"dolor\",\n \"total_time_taken_in_millis\": -838123,\n \"http_status\": \"417 EXPECTATION_FAILED\",\n \"items\": [\n  {\n   \"company_id\": 56535503,\n   \"integration_data\": {},\n   \"company_name\": \"qui\",\n   \"task_details\": {\n    \"type\": 25791982,\n    \"group_list\": [\n     {\n      \"text\": \"dolor laborum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consequat voluptate non\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -34364492.30514893,\n    \"safe_stock\": -48460145,\n    \"period_threshold\": -20637312,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"fugiat in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute sin\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"labore est adipisicing id\",\n   \"alias\": \"dolor cillum aliquip\"\n  },\n  {\n   \"company_id\": 45362465,\n   \"integration_data\": {},\n   \"company_name\": \"veniam eiusmod\",\n   \"task_details\": {\n    \"type\": 75458360,\n    \"group_list\": [\n     {\n      \"text\": \"nostrud ipsum non ex\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sint\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -85418629.34571385,\n    \"safe_stock\": -34336261,\n    \"period_threshold\": 86817511,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"Ut aute dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proident sit consequat laborum esse\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"do\",\n   \"alias\": \"do \"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 87846250,\n   \"integration_data\": {},\n   \"company_name\": \"laborum sed\",\n   \"task_details\": {\n    \"type\": -81821936,\n    \"group_list\": [\n     {\n      \"text\": \"in ullamco\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute enim repr\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -98025807.13294287,\n    \"safe_stock\": -3908344,\n    \"period_threshold\": 21999677,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"incididunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laboris Duis ut id\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"proident aute aliquip exercitation ad\",\n   \"alias\": \"veniam est culpa Lorem\"\n  },\n  {\n   \"company_id\": 48808964,\n   \"integration_data\": {},\n   \"company_name\": \"sed dolore\",\n   \"task_details\": {\n    \"type\": -2556086,\n    \"group_list\": [\n     {\n      \"text\": \"consectetur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sit ut dolor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -79915279.3241785,\n    \"safe_stock\": 19398678,\n    \"period_threshold\": 4086409,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"in Ut aliqua do\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"anim in mol\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"dolore commodo cillum anim\",\n   \"alias\": \"nulla sit in enim\"\n  }\n ],\n \"trace_id\": \"aliqua veniam sint deserunt\",\n \"page\": {\n  \"type\": \"ut voluptate cillum\",\n  \"size\": -99953921,\n  \"current\": -60930441,\n  \"has_next\": true,\n  \"item_total\": 77069476,\n  \"next_id\": \"eu ex in\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "39959d13-0d15-4437-9642-4771e1aeb4d3",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1993-07-13T06:16:54.459Z\",\n \"status\": -7170662,\n \"error\": \"do\",\n \"exception\": \"officia ex\",\n \"message\": \"dolor\",\n \"total_time_taken_in_millis\": -838123,\n \"http_status\": \"417 EXPECTATION_FAILED\",\n \"items\": [\n  {\n   \"company_id\": 56535503,\n   \"integration_data\": {},\n   \"company_name\": \"qui\",\n   \"task_details\": {\n    \"type\": 25791982,\n    \"group_list\": [\n     {\n      \"text\": \"dolor laborum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consequat voluptate non\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -34364492.30514893,\n    \"safe_stock\": -48460145,\n    \"period_threshold\": -20637312,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"fugiat in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute sin\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"labore est adipisicing id\",\n   \"alias\": \"dolor cillum aliquip\"\n  },\n  {\n   \"company_id\": 45362465,\n   \"integration_data\": {},\n   \"company_name\": \"veniam eiusmod\",\n   \"task_details\": {\n    \"type\": 75458360,\n    \"group_list\": [\n     {\n      \"text\": \"nostrud ipsum non ex\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sint\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -85418629.34571385,\n    \"safe_stock\": -34336261,\n    \"period_threshold\": 86817511,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"Ut aute dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proident sit consequat laborum esse\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"do\",\n   \"alias\": \"do \"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 87846250,\n   \"integration_data\": {},\n   \"company_name\": \"laborum sed\",\n   \"task_details\": {\n    \"type\": -81821936,\n    \"group_list\": [\n     {\n      \"text\": \"in ullamco\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute enim repr\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -98025807.13294287,\n    \"safe_stock\": -3908344,\n    \"period_threshold\": 21999677,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"incididunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laboris Duis ut id\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"proident aute aliquip exercitation ad\",\n   \"alias\": \"veniam est culpa Lorem\"\n  },\n  {\n   \"company_id\": 48808964,\n   \"integration_data\": {},\n   \"company_name\": \"sed dolore\",\n   \"task_details\": {\n    \"type\": -2556086,\n    \"group_list\": [\n     {\n      \"text\": \"consectetur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sit ut dolor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -79915279.3241785,\n    \"safe_stock\": 19398678,\n    \"period_threshold\": 4086409,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"in Ut aliqua do\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"anim in mol\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"dolore commodo cillum anim\",\n   \"alias\": \"nulla sit in enim\"\n  }\n ],\n \"trace_id\": \"aliqua veniam sint deserunt\",\n \"page\": {\n  \"type\": \"ut voluptate cillum\",\n  \"size\": -99953921,\n  \"current\": -60930441,\n  \"has_next\": true,\n  \"item_total\": 77069476,\n  \"next_id\": \"eu ex in\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "273e7946-27d9-4d07-9a88-d1e6ef6d92cc",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "94450ecd-35f9-4807-835d-5d4b8dc565a6",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2012-01-27T13:32:47.218Z\",\n \"status\": -36139902,\n \"error\": \"adipisicing aliqua ad ut\",\n \"exception\": \"magna nisi\",\n \"message\": \"ipsum Ut do nulla\",\n \"total_time_taken_in_millis\": -94172211,\n \"http_status\": \"307 TEMPORARY_REDIRECT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"aliqua nisi\",\n \"page\": {\n  \"type\": \"qui\",\n  \"size\": 99438619,\n  \"current\": 16791133,\n  \"has_next\": false,\n  \"item_total\": 12154801,\n  \"next_id\": \"Lorem eu qui\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3a7155bf-f2ab-40aa-b727-76e5457e6773",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2012-01-27T13:32:47.218Z\",\n \"status\": -36139902,\n \"error\": \"adipisicing aliqua ad ut\",\n \"exception\": \"magna nisi\",\n \"message\": \"ipsum Ut do nulla\",\n \"total_time_taken_in_millis\": -94172211,\n \"http_status\": \"307 TEMPORARY_REDIRECT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"aliqua nisi\",\n \"page\": {\n  \"type\": \"qui\",\n  \"size\": 99438619,\n  \"current\": 16791133,\n  \"has_next\": false,\n  \"item_total\": 12154801,\n  \"next_id\": \"Lorem eu qui\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e6ff68f3-a835-4296-87df-b630f42a82a9",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2012-01-27T13:32:47.218Z\",\n \"status\": -36139902,\n \"error\": \"adipisicing aliqua ad ut\",\n \"exception\": \"magna nisi\",\n \"message\": \"ipsum Ut do nulla\",\n \"total_time_taken_in_millis\": -94172211,\n \"http_status\": \"307 TEMPORARY_REDIRECT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"aliqua nisi\",\n \"page\": {\n  \"type\": \"qui\",\n  \"size\": 99438619,\n  \"current\": 16791133,\n  \"has_next\": false,\n  \"item_total\": 12154801,\n  \"next_id\": \"Lorem eu qui\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "bfc69c80-79e3-4700-9aef-2a89c314dfc7",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "1fce90e7-e74d-4f27-8c84-ce67ed44f3cb",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1978-11-18T14:26:43.427Z\",\n \"status\": 72932780,\n \"error\": \"incididunt\",\n \"exception\": \"do\",\n \"message\": \"proident\",\n \"total_time_taken_in_millis\": 3386328,\n \"http_status\": \"300 MULTIPLE_CHOICES\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"mollit Duis\",\n \"page\": {\n  \"type\": \"reprehenderit\",\n  \"size\": 52141292,\n  \"current\": 91788320,\n  \"has_next\": false,\n  \"item_total\": 33732690,\n  \"next_id\": \"sit cupidatat et\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "7f151106-bb6d-46f4-be5a-688e6beddb07",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1978-11-18T14:26:43.427Z\",\n \"status\": 72932780,\n \"error\": \"incididunt\",\n \"exception\": \"do\",\n \"message\": \"proident\",\n \"total_time_taken_in_millis\": 3386328,\n \"http_status\": \"300 MULTIPLE_CHOICES\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"mollit Duis\",\n \"page\": {\n  \"type\": \"reprehenderit\",\n  \"size\": 52141292,\n  \"current\": 91788320,\n  \"has_next\": false,\n  \"item_total\": 33732690,\n  \"next_id\": \"sit cupidatat et\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "338733a1-7825-4e99-898f-9f47b9944c59",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1978-11-18T14:26:43.427Z\",\n \"status\": 72932780,\n \"error\": \"incididunt\",\n \"exception\": \"do\",\n \"message\": \"proident\",\n \"total_time_taken_in_millis\": 3386328,\n \"http_status\": \"300 MULTIPLE_CHOICES\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"mollit Duis\",\n \"page\": {\n  \"type\": \"reprehenderit\",\n  \"size\": 52141292,\n  \"current\": 91788320,\n  \"has_next\": false,\n  \"item_total\": 33732690,\n  \"next_id\": \"sit cupidatat et\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d512e159-806e-4e06-bbe8-41a3b8a42f14",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1978-11-18T14:26:43.427Z\",\n \"status\": 72932780,\n \"error\": \"incididunt\",\n \"exception\": \"do\",\n \"message\": \"proident\",\n \"total_time_taken_in_millis\": 3386328,\n \"http_status\": \"300 MULTIPLE_CHOICES\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"mollit Duis\",\n \"page\": {\n  \"type\": \"reprehenderit\",\n  \"size\": 52141292,\n  \"current\": 91788320,\n  \"has_next\": false,\n  \"item_total\": 33732690,\n  \"next_id\": \"sit cupidatat et\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ae38406b-fe77-406d-8132-e9280e6f328d",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1978-11-18T14:26:43.427Z\",\n \"status\": 72932780,\n \"error\": \"incididunt\",\n \"exception\": \"do\",\n \"message\": \"proident\",\n \"total_time_taken_in_millis\": 3386328,\n \"http_status\": \"300 MULTIPLE_CHOICES\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"mollit Duis\",\n \"page\": {\n  \"type\": \"reprehenderit\",\n  \"size\": 52141292,\n  \"current\": 91788320,\n  \"has_next\": false,\n  \"item_total\": 33732690,\n  \"next_id\": \"sit cupidatat et\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx0.de"
    }
  ],
  "info": {
    "_postman_id": "590fda85-23d4-488b-b6ef-daf262b147a8",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
