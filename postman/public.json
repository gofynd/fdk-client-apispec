{
  "item": [
    {
      "id": "6a7854ca-cdff-44e7-84e3-0bc87a636dc8",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "c57e628f-d83d-439f-80f3-068da63ddeba",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "6cc8cb60-3931-4215-983c-046ab953d647",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "Excepteur mollit labore qui",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "95d10c56-e82a-4433-bb23-644141c32ecf",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "Excepteur mollit labore qui",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"Invalid application domain or id.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "afbe8f7a-46a0-44f5-afac-a854eb729bd3",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "Excepteur mollit labore qui",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "11b94f8b-0ed7-4dcb-9411-727999cf8501",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "1bff15e3-8cfa-4058-be01-c54e58fe1303",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "5a97f9af-d90c-454d-b8fe-a0dd4dad0927",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "85e9e5a4-7487-4857-b39f-6235fd3a224c",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "a7ccd405-209a-4f84-9379-c1df64ea6436",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -30987143,\n   \"event_name\": \"culpa cupidatat esse velit eiusmod\",\n   \"event_type\": \"reprehenderit sed cul\",\n   \"event_category\": \"magna labore\",\n   \"version\": \"cupidatat consequat cillum fugiat\",\n   \"display_name\": \"incididunt labore\",\n   \"description\": \"eiusmod\",\n   \"created_on\": \"occaecat ullamco\"\n  },\n  {\n   \"id\": 20752641,\n   \"event_name\": \"in et veniam cillum\",\n   \"event_type\": \"magna ullamco esse\",\n   \"event_category\": \"eu\",\n   \"version\": \"aute reprehenderit labore aliquip\",\n   \"display_name\": \"fugiat ullamco\",\n   \"description\": \"dolore consequat\",\n   \"created_on\": \"aute\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "9cd05f70-7265-4fed-b162-ee266e5706f6",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "85e257f5-c511-480c-8933-8db9d8ae349f",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -31311201,\n   \"event_name\": \"dolor enim reprehenderit laboris sunt\",\n   \"event_type\": \"laborum do sed nulla\",\n   \"event_category\": \"proident fugiat\",\n   \"version\": \"aliquip quis\",\n   \"display_name\": \"d\",\n   \"description\": \"dolore aliquip Excepteur nisi\",\n   \"created_on\": \"qui reprehenderit officia\"\n  },\n  {\n   \"id\": 85213300,\n   \"event_name\": \"qui aliqua ad Ut proident\",\n   \"event_type\": \"dolor aliqua ipsum\",\n   \"event_category\": \"quis in laborum a\",\n   \"version\": \"sed voluptate\",\n   \"display_name\": \"qui \",\n   \"description\": \"consectetu\",\n   \"created_on\": \"consequat commodo ut\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "a193fc24-5048-493a-ac89-bca09ed56def",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "5f9fd3ad-4869-43ae-b379-cae78d30ff5b",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "36803216-51e9-4e0b-9e41-b286ebc012d7",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1986-12-30T20:18:27.319Z\",\n \"status\": -61976962,\n \"error\": \"proident mollit nisi reprehenderit\",\n \"exception\": \"veniam dolor enim in\",\n \"message\": \"Duis\",\n \"total_time_taken_in_millis\": -95219331,\n \"http_status\": \"301 MOVED_PERMANENTLY\",\n \"items\": [\n  {\n   \"company_id\": 40832342,\n   \"integration_data\": {},\n   \"company_name\": \"do tempor\",\n   \"task_details\": {\n    \"type\": -93505361,\n    \"group_list\": [\n     {\n      \"text\": \"reprehenderit est nostrud consequat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cupidat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -66668786.5310501,\n    \"safe_stock\": 2114782,\n    \"period_threshold\": -60274742,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"aute sint ex\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliquip tempor nostrud cupidatat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"an\",\n   \"alias\": \"adipisicing tempor\"\n  },\n  {\n   \"company_id\": 88387315,\n   \"integration_data\": {},\n   \"company_name\": \"cillum culpa\",\n   \"task_details\": {\n    \"type\": -6679236,\n    \"group_list\": [\n     {\n      \"text\": \"l\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"fugiat ipsum voluptate ad\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 21163321.102933705,\n    \"safe_stock\": -59197463,\n    \"period_threshold\": -69885819,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"enim laboris\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"tempor Lorem anim reprehend\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in esse ad elit officia\",\n   \"alias\": \"sit minim\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 55093662,\n   \"integration_data\": {},\n   \"company_name\": \"deserunt ut ut\",\n   \"task_details\": {\n    \"type\": -43952532,\n    \"group_list\": [\n     {\n      \"text\": \"Duis et voluptate ipsum sunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eiusmod irure\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -40633912.20540229,\n    \"safe_stock\": -23605839,\n    \"period_threshold\": -62749027,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"reprehenderit nulla proident ad\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"magna et ut Lorem\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"do es\",\n   \"alias\": \"eiusmod ullamco sit\"\n  },\n  {\n   \"company_id\": -16427413,\n   \"integration_data\": {},\n   \"company_name\": \"occaecat labor\",\n   \"task_details\": {\n    \"type\": -35729251,\n    \"group_list\": [\n     {\n      \"text\": \"elit exercitation ad in aute\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"e\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 25836301.540375754,\n    \"safe_stock\": 60340719,\n    \"period_threshold\": -83255419,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"eu quis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"occaecat esse est dolor commodo\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"qui\",\n   \"alias\": \"deserunt nostrud\"\n  }\n ],\n \"trace_id\": \"consectetur\",\n \"page\": {\n  \"type\": \"Ut cupidatat\",\n  \"size\": 66036995,\n  \"current\": 87567790,\n  \"has_next\": true,\n  \"item_total\": -70537786,\n  \"next_id\": \"eiusmod sunt magna enim\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f2924505-6e48-440b-9060-93a210f20ab4",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1985-10-05T08:44:49.728Z\",\n \"status\": 53931690,\n \"error\": \"voluptate veniam\",\n \"exception\": \"do aliquip\",\n \"message\": \"officia eu\",\n \"total_time_taken_in_millis\": -32951109,\n \"http_status\": \"307 TEMPORARY_REDIRECT\",\n \"items\": [\n  {\n   \"company_id\": 89924003,\n   \"integration_data\": {},\n   \"company_name\": \"ea\",\n   \"task_details\": {\n    \"type\": 31629100,\n    \"group_list\": [\n     {\n      \"text\": \"mollit aliquip pariatur ullamco\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"velit sunt commodo\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -94591609.44714062,\n    \"safe_stock\": -30409799,\n    \"period_threshold\": 41740318,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"minim qui\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute enim irure eiusmod\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in\",\n   \"alias\": \"adipisicing ve\"\n  },\n  {\n   \"company_id\": 53379792,\n   \"integration_data\": {},\n   \"company_name\": \"exercitation nulla ea\",\n   \"task_details\": {\n    \"type\": -9588978,\n    \"group_list\": [\n     {\n      \"text\": \"in enim amet commodo\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"tempor ea in amet\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 86552455.58738077,\n    \"safe_stock\": -13662329,\n    \"period_threshold\": -15058324,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"proident non\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"officia deserunt anim non\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"adipisicing aliquip pariatur\",\n   \"alias\": \"minim elit laboris ullamco\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -60991442,\n   \"integration_data\": {},\n   \"company_name\": \"ut\",\n   \"task_details\": {\n    \"type\": -9258611,\n    \"group_list\": [\n     {\n      \"text\": \"laborum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eiusmod reprehenderit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 82838273.98712105,\n    \"safe_stock\": -35325595,\n    \"period_threshold\": -19310336,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"nisi dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ex veniam\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aute in\",\n   \"alias\": \"sunt commodo ut\"\n  },\n  {\n   \"company_id\": 14606417,\n   \"integration_data\": {},\n   \"company_name\": \"deserunt labore reprehenderit ullamco\",\n   \"task_details\": {\n    \"type\": 84012562,\n    \"group_list\": [\n     {\n      \"text\": \"Ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"minim ea\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -53253107.87450417,\n    \"safe_stock\": 73383392,\n    \"period_threshold\": 21911404,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ex irure laboris dolor labore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"do magna in nostrud\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"laborum cupidatat\",\n   \"alias\": \"cillum Lorem dolor\"\n  }\n ],\n \"trace_id\": \"cupidatat sunt\",\n \"page\": {\n  \"type\": \"et\",\n  \"size\": -39879870,\n  \"current\": -65482037,\n  \"has_next\": true,\n  \"item_total\": 21105450,\n  \"next_id\": \"laborum aliqua nostrud quis\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "19846ab1-29c3-454c-b80e-4bc823454f89",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1985-10-05T08:44:49.728Z\",\n \"status\": 53931690,\n \"error\": \"voluptate veniam\",\n \"exception\": \"do aliquip\",\n \"message\": \"officia eu\",\n \"total_time_taken_in_millis\": -32951109,\n \"http_status\": \"307 TEMPORARY_REDIRECT\",\n \"items\": [\n  {\n   \"company_id\": 89924003,\n   \"integration_data\": {},\n   \"company_name\": \"ea\",\n   \"task_details\": {\n    \"type\": 31629100,\n    \"group_list\": [\n     {\n      \"text\": \"mollit aliquip pariatur ullamco\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"velit sunt commodo\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -94591609.44714062,\n    \"safe_stock\": -30409799,\n    \"period_threshold\": 41740318,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"minim qui\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute enim irure eiusmod\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in\",\n   \"alias\": \"adipisicing ve\"\n  },\n  {\n   \"company_id\": 53379792,\n   \"integration_data\": {},\n   \"company_name\": \"exercitation nulla ea\",\n   \"task_details\": {\n    \"type\": -9588978,\n    \"group_list\": [\n     {\n      \"text\": \"in enim amet commodo\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"tempor ea in amet\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 86552455.58738077,\n    \"safe_stock\": -13662329,\n    \"period_threshold\": -15058324,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"proident non\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"officia deserunt anim non\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"adipisicing aliquip pariatur\",\n   \"alias\": \"minim elit laboris ullamco\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -60991442,\n   \"integration_data\": {},\n   \"company_name\": \"ut\",\n   \"task_details\": {\n    \"type\": -9258611,\n    \"group_list\": [\n     {\n      \"text\": \"laborum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eiusmod reprehenderit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 82838273.98712105,\n    \"safe_stock\": -35325595,\n    \"period_threshold\": -19310336,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"nisi dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ex veniam\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aute in\",\n   \"alias\": \"sunt commodo ut\"\n  },\n  {\n   \"company_id\": 14606417,\n   \"integration_data\": {},\n   \"company_name\": \"deserunt labore reprehenderit ullamco\",\n   \"task_details\": {\n    \"type\": 84012562,\n    \"group_list\": [\n     {\n      \"text\": \"Ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"minim ea\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -53253107.87450417,\n    \"safe_stock\": 73383392,\n    \"period_threshold\": 21911404,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ex irure laboris dolor labore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"do magna in nostrud\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"laborum cupidatat\",\n   \"alias\": \"cillum Lorem dolor\"\n  }\n ],\n \"trace_id\": \"cupidatat sunt\",\n \"page\": {\n  \"type\": \"et\",\n  \"size\": -39879870,\n  \"current\": -65482037,\n  \"has_next\": true,\n  \"item_total\": 21105450,\n  \"next_id\": \"laborum aliqua nostrud quis\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "8d46426b-6e20-45b2-b326-200b96fb4946",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "4797a2d1-317e-4191-a0b0-998e162e44f7",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1948-09-01T07:03:31.431Z\",\n \"status\": -14401109,\n \"error\": \"incidi\",\n \"exception\": \"ut eu Duis \",\n \"message\": \"tempor nulla velit dolore\",\n \"total_time_taken_in_millis\": -36943213,\n \"http_status\": \"226 IM_USED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"ut pariatur qui cillum\",\n \"page\": {\n  \"type\": \"anim dolor incididunt\",\n  \"size\": -79070096,\n  \"current\": 62872717,\n  \"has_next\": false,\n  \"item_total\": -14323672,\n  \"next_id\": \"veniam laboris nisi\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f40df75f-8963-41a9-ab1a-6f8c70d14191",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1948-09-01T07:03:31.431Z\",\n \"status\": -14401109,\n \"error\": \"incidi\",\n \"exception\": \"ut eu Duis \",\n \"message\": \"tempor nulla velit dolore\",\n \"total_time_taken_in_millis\": -36943213,\n \"http_status\": \"226 IM_USED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"ut pariatur qui cillum\",\n \"page\": {\n  \"type\": \"anim dolor incididunt\",\n  \"size\": -79070096,\n  \"current\": 62872717,\n  \"has_next\": false,\n  \"item_total\": -14323672,\n  \"next_id\": \"veniam laboris nisi\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "0fbecde2-38de-4fa9-9726-705ef5c8c3b5",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1948-09-01T07:03:31.431Z\",\n \"status\": -14401109,\n \"error\": \"incidi\",\n \"exception\": \"ut eu Duis \",\n \"message\": \"tempor nulla velit dolore\",\n \"total_time_taken_in_millis\": -36943213,\n \"http_status\": \"226 IM_USED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"ut pariatur qui cillum\",\n \"page\": {\n  \"type\": \"anim dolor incididunt\",\n  \"size\": -79070096,\n  \"current\": 62872717,\n  \"has_next\": false,\n  \"item_total\": -14323672,\n  \"next_id\": \"veniam laboris nisi\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "43c421c2-6ddc-4c6a-8290-b1be27769a7a",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "a8d9571e-33f7-41cd-aa67-e5f7628544d9",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1952-05-05T09:32:02.535Z\",\n \"status\": 39773950,\n \"error\": \"dolor aliqua\",\n \"exception\": \"non\",\n \"message\": \"ea consequat magna reprehenderit\",\n \"total_time_taken_in_millis\": -98371866,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"et\",\n \"page\": {\n  \"type\": \"sed tempor\",\n  \"size\": -97848420,\n  \"current\": 69745135,\n  \"has_next\": false,\n  \"item_total\": 89057324,\n  \"next_id\": \"in tempor do\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ee4bef39-5a56-477c-a7c3-4d8bad0465e2",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1952-05-05T09:32:02.535Z\",\n \"status\": 39773950,\n \"error\": \"dolor aliqua\",\n \"exception\": \"non\",\n \"message\": \"ea consequat magna reprehenderit\",\n \"total_time_taken_in_millis\": -98371866,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"et\",\n \"page\": {\n  \"type\": \"sed tempor\",\n  \"size\": -97848420,\n  \"current\": 69745135,\n  \"has_next\": false,\n  \"item_total\": 89057324,\n  \"next_id\": \"in tempor do\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a8b021a7-cdad-4c53-bc80-3574b1523ce9",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1952-05-05T09:32:02.535Z\",\n \"status\": 39773950,\n \"error\": \"dolor aliqua\",\n \"exception\": \"non\",\n \"message\": \"ea consequat magna reprehenderit\",\n \"total_time_taken_in_millis\": -98371866,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"et\",\n \"page\": {\n  \"type\": \"sed tempor\",\n  \"size\": -97848420,\n  \"current\": 69745135,\n  \"has_next\": false,\n  \"item_total\": 89057324,\n  \"next_id\": \"in tempor do\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "8d194df1-4fee-46cd-b7db-3bb5e6929690",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1952-05-05T09:32:02.535Z\",\n \"status\": 39773950,\n \"error\": \"dolor aliqua\",\n \"exception\": \"non\",\n \"message\": \"ea consequat magna reprehenderit\",\n \"total_time_taken_in_millis\": -98371866,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"et\",\n \"page\": {\n  \"type\": \"sed tempor\",\n  \"size\": -97848420,\n  \"current\": 69745135,\n  \"has_next\": false,\n  \"item_total\": 89057324,\n  \"next_id\": \"in tempor do\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "73af4cae-a99a-49ab-ad21-f001bc1fcd19",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1952-05-05T09:32:02.535Z\",\n \"status\": 39773950,\n \"error\": \"dolor aliqua\",\n \"exception\": \"non\",\n \"message\": \"ea consequat magna reprehenderit\",\n \"total_time_taken_in_millis\": -98371866,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"et\",\n \"page\": {\n  \"type\": \"sed tempor\",\n  \"size\": -97848420,\n  \"current\": 69745135,\n  \"has_next\": false,\n  \"item_total\": 89057324,\n  \"next_id\": \"in tempor do\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx0.de"
    }
  ],
  "info": {
    "_postman_id": "a5538a2e-a6b1-4ea7-8670-4504431e15bc",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
